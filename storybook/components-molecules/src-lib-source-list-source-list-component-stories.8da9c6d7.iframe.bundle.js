(self.webpackChunkhra_ui=self.webpackChunkhra_ui||[]).push([[227],{"./libs/components/molecules/src/lib/source-list/source-list.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: block;\n}\n:host .mat-mdc-cell {\n  vertical-align: top;\n  border: none;\n  padding: 0.25rem 0.875rem;\n  font-size: 1rem;\n}\n:host .sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/components/molecules/src/lib/source-list/source-list.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>source_list_component_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var _class,source_list_componentngResource=__webpack_require__("./libs/components/molecules/src/lib/source-list/source-list.component.scss?ngResource"),source_list_componentngResource_default=__webpack_require__.n(source_list_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),table=__webpack_require__("./node_modules/@angular/material/fesm2020/table.mjs");let SourceListComponent=((_class=class SourceListComponent{constructor(){this.sources=[]}}).propDecorators={sources:[{type:core.Input}]},_class);SourceListComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"hra-source-list",standalone:!0,imports:[common.CommonModule,table.p0],template:'<table mat-table [dataSource]="sources">\n  <caption class="sr-only">\n    Source List Table with Title and Links\n  </caption>\n\n  \x3c!-- Position Column --\x3e\n  <ng-container matColumnDef="link">\n    <th class="sr-only" mat-header-cell *matHeaderCellDef>Item Number</th>\n    <td mat-cell *matCellDef="let element; let i = index">{{ i + 1 }}.</td>\n  </ng-container>\n\n  \x3c!-- Data Column --\x3e\n  <ng-container matColumnDef="title">\n    <th class="sr-only" mat-header-cell *matHeaderCellDef>Title and Link</th>\n    <td mat-cell *matCellDef="let element">\n      {{ element.title }}\n      <br />\n      <a [href]="element.link" target="_blank">{{ element.link }}</a>\n    </td>\n  </ng-container>\n\n  <tr mat-row *matRowDef="let row; columns: [\'link\', \'title\']"></tr>\n</table>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[source_list_componentngResource_default()]})],SourceListComponent);const source_list_component_stories={title:"SourceListComponent",component:SourceListComponent},Default=(args=>({props:args})).bind({});Default.args={sources:[{title:"Owner Title",link:"google.com"},{title:"[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]",link:"google.com"}]},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => ({\n  props: args\n})",...Default.parameters?.docs?.source}}}}}]);