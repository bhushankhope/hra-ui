(self.webpackChunkhra_ui=self.webpackChunkhra_ui||[]).push([[971],{"./libs/components/atoms/src/lib/label-box/label-box.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{d:()=>LabelBoxComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var label_box_componentngResource=__webpack_require__("./libs/components/atoms/src/lib/label-box/label-box.component.scss?ngResource"),label_box_componentngResource_default=__webpack_require__.n(label_box_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");let LabelBoxComponent=class LabelBoxComponent{};LabelBoxComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"hra-label-box",standalone:!0,imports:[common.CommonModule],template:'<ng-content></ng-content>\n\n<div class="filler"></div>\n\n<ng-content select=".end"></ng-content>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[label_box_componentngResource_default()]})],LabelBoxComponent)},"./libs/services/src/lib/ftu-data/ftu-data.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{q:()=>FtuDataService});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let FtuDataService=class FtuDataService{};FtuDataService=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)()],FtuDataService)},"./libs/state/src/lib/resource-types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$u:()=>Size,C3:()=>Metrics,ph:()=>Gradient});var _hra_ui_cdk_state__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./libs/cdk/state/src/resource-registry/resource-registry.model.ts");const Metrics=(0,_hra_ui_cdk_state__WEBPACK_IMPORTED_MODULE_0__.h_)("metrics",(0,_hra_ui_cdk_state__WEBPACK_IMPORTED_MODULE_0__.xm)()),Gradient=(0,_hra_ui_cdk_state__WEBPACK_IMPORTED_MODULE_0__.h_)("gradient",(0,_hra_ui_cdk_state__WEBPACK_IMPORTED_MODULE_0__.xm)()),Size=(0,_hra_ui_cdk_state__WEBPACK_IMPORTED_MODULE_0__.h_)("size",(0,_hra_ui_cdk_state__WEBPACK_IMPORTED_MODULE_0__.xm)())},"./libs/components/atoms/src/lib/gradient-legend/gradient-legend.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: block;\n}\n:host .gradient-bar {\n  height: 1.5rem;\n  width: 100%;\n}\n:host .legend {\n  display: flex;\n}\n:host .legend .filler {\n  flex-grow: 1;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/components/atoms/src/lib/label-box/label-box.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: flex;\n  align-items: center;\n  padding: 0.75rem 2rem;\n  background: #f8f9fa;\n}\n:host .filler {\n  flex-grow: 1;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/components/atoms/src/lib/size-legend/size-legend.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: flex;\n  flex-direction: row;\n  column-gap: 2rem;\n}\n:host .item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  line-height: 0.5rem;\n}\n:host .item .circle {\n  height: var(--size);\n  width: var(--size);\n  border-radius: 50%;\n  border: 0.125rem solid #75838f;\n}\n:host .item .label {\n  margin-top: 0.5rem;\n}\n:host .item .filler {\n  flex-grow: 1;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,':host {\n  display: grid;\n  grid-template-columns: 21.5rem 21.5rem auto;\n  grid-template-rows: 3.5rem auto 3rem 5rem 3.5rem auto;\n  grid-template-areas: "table-header table-header table-header" "table table table" "gradient-legend-header size-legend-header ." "gradient-legend size-legend ." "source-list-header source-list-header source-list-header" "source-list source-list source-list";\n}\n:host .table-header {\n  grid-area: table-header;\n  border-bottom: 0.063rem solid #d3d3d3;\n}\n:host .table {\n  grid-area: table;\n  max-width: 100%;\n  overflow: auto;\n}\n:host .table ::ng-deep .table-tab-header {\n  padding-left: 1rem;\n  padding-right: 1rem;\n  border-left: 0.063rem solid #d3d3d3;\n}\n:host .table ::ng-deep .table-tab-header:last-child {\n  border-right: 0.063rem solid #d3d3d3;\n}\n:host .table ::ng-deep .table-tab-header.mdc-tab-indicator--active {\n  background-color: #f8f9fa;\n}\n:host .legend-header {\n  color: var(--dark-primary-text);\n  border-top: 0.063rem solid #d3d3d3;\n  border-bottom: 0.063rem solid #d3d3d3;\n  border-right: 0.063rem solid #d3d3d3;\n}\n:host .legend-header.gradient {\n  grid-area: gradient-legend-header;\n}\n:host .legend-header.size {\n  grid-area: size-legend-header;\n}\n:host .legend-header .icon {\n  margin-left: 0.6rem;\n}\n:host .legend {\n  padding: 1rem 2rem;\n  border-right: 0.063rem solid #d3d3d3;\n}\n:host .legend.gradient {\n  grid-area: gradient-legend;\n}\n:host .legend.gradient .content {\n  width: 10rem;\n}\n:host .legend.size {\n  grid-area: size-legend;\n}\n:host .source-list-header {\n  grid-area: source-list-header;\n  color: var(--dark-primary-text);\n  border-top: 0.063rem solid #d3d3d3;\n  border-bottom: 0.063rem solid #d3d3d3;\n}\n:host .source-list {\n  grid-area: source-list;\n  padding: 1rem 1.125rem;\n}\n:host .source-list .content {\n  width: min-content;\n}\n\n::ng-deep .biomarker-details.info-tooltip {\n  display: flex;\n  padding: 1rem 1.5rem;\n  border-radius: 0.5rem;\n  box-shadow: 0.063rem 0.125rem;\n  background-color: var(--palette-primary-contrast-500-rgb);\n  max-width: 21rem;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/components/molecules/src/lib/biomarker-table-data-card/biomarker-table-data-card.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: flex;\n  padding: 1rem 1.5rem;\n  border-radius: 0.5rem;\n  box-shadow: 0.063rem 0.125rem 1rem 0.125rem rgba(0, 0, 0, 0.16);\n  background-color: var(--palette-primary-contrast-500-rgb);\n}\n:host .mat-mdc-cell {\n  padding: 0.25rem 0rem;\n}\n:host .mat-mdc-row {\n  height: -moz-fit-content;\n  height: fit-content;\n}\n:host .no-border {\n  border: none;\n}\n:host .label {\n  color: #243142;\n  padding-right: 3rem;\n}\n:host .value {\n  color: #4c5a69;\n}\n:host .sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/components/molecules/src/lib/biomarker-table-data-icon/biomarker-table-data-icon.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: block;\n  border-radius: 50%;\n  --radius: 0.625rem;\n  width: var(--radius);\n  height: var(--radius);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/components/molecules/src/lib/source-list/source-list.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: block;\n}\n:host .filler {\n  flex-grow: 1;\n}\n:host h1 {\n  margin: 0;\n}\n:host .text {\n  margin-left: 2rem;\n  margin-right: 30rem;\n  font-weight: 400;\n  color: var(--palette-primary-500);\n}\n:host .mat-mdc-cell {\n  vertical-align: top;\n  border: none;\n  padding: 0.25rem 0.875rem;\n  font-size: 1rem;\n}\n:host .filler {\n  width: 30rem;\n}\n:host .sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n:host .toggle {\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  border: none;\n  width: 43rem;\n  height: 3.5rem;\n  padding: 1rem, 2rem;\n}\n:host .hidden {\n  display: none;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/components/organisms/src/lib/biomarker-table/biomarker-table.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: block;\n  max-height: 16.5rem;\n  max-width: 43rem;\n}\n:host .sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n:host .table th {\n  background-color: #fff7f8;\n  color: #59264d;\n  text-align: right;\n  border-top: 0.063rem solid #d3d3d3;\n  border-bottom: 0.063rem solid #d3d3d3;\n  border-left: 0.063rem solid #d3d3d3;\n}\n:host .table td {\n  border-bottom: 0.063rem solid #d3d3d3;\n  border-left: 0.063rem solid #d3d3d3;\n}\n:host .table tr:first-child td {\n  border-top: 0.063rem solid #d3d3d3;\n}\n:host tr > td:first-child {\n  text-align: left;\n  padding: 0 2rem;\n}\n:host tr > th:first-child {\n  text-align: left;\n  padding: 0 2rem;\n}\n:host tr > td:last-of-type {\n  border-right: 0.063rem solid #d3d3d3;\n}\n:host tr > th:last-of-type {\n  border-right: 0.063rem solid #d3d3d3;\n}\n:host .type {\n  height: 3rem;\n  max-width: 26rem;\n  min-width: 17rem;\n  border-radius: 0rem;\n  white-space: nowrap;\n}\n:host .count {\n  text-align: right;\n  height: 3rem;\n  min-width: 6.5rem;\n}\n:host .icon-header {\n  max-width: 5rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n:host .icon-cell {\n  max-width: 5rem;\n  min-height: 3rem;\n}\n:host .icon-cell .icon {\n  margin: auto;\n}\n\n::ng-deep .biomarker-table-hover.full-column-name {\n  display: flex;\n  padding: 1rem 1.5rem;\n  border-radius: 0.5rem;\n  box-shadow: 0.063rem 0.125rem 1rem 0.125rem rgba(0, 0, 0, 0.16);\n  background-color: var(--palette-primary-contrast-500-rgb);\n  overflow: auto;\n  max-width: -moz-fit-content;\n  max-width: fit-content;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,createDataItem:()=>createDataItem,default:()=>biomarker_details_component_stories});var icon=__webpack_require__("./node_modules/@angular/material/fesm2020/icon.mjs"),resource_registry_state=__webpack_require__("./libs/cdk/state/src/resource-registry/resource-registry.state.ts"),resource_registry_actions=__webpack_require__("./libs/cdk/state/src/resource-registry/resource-registry.actions.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),ftu_data_service=__webpack_require__("./libs/services/src/lib/ftu-data/ftu-data.service.ts"),ngxs_store=__webpack_require__("./node_modules/@ngxs/store/fesm2015/ngxs-store.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),actions=__webpack_require__("./libs/cdk/state/src/actions/actions.ts");const Action=(0,actions.W)("SourceRefs");class Load extends(Action("Load")){constructor(iri){super(),this.iri=iri}}class Reset extends(Action("Reset")){}let SourceRefsState=class SourceRefsState{constructor(){this.dataService=(0,core.inject)(ftu_data_service.q)}load({setState},{iri}){return this.dataService.getSourceReferences(iri).pipe((0,tap.b)(setState))}reset({setState}){setState([])}};(0,tslib_es6.gn)([(0,ngxs_store.aU)(Load),(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[Object,Load]),(0,tslib_es6.w6)("design:returntype",Observable.y)],SourceRefsState.prototype,"load",null),(0,tslib_es6.gn)([(0,ngxs_store.aU)(Reset),(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[Object]),(0,tslib_es6.w6)("design:returntype",void 0)],SourceRefsState.prototype,"reset",null),SourceRefsState=(0,tslib_es6.gn)([(0,ngxs_store.ZM)({name:"sourceReferences",defaults:[]}),(0,core.Injectable)()],SourceRefsState);var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs");var _class,biomarker_details_componentngResource=__webpack_require__("./libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.scss?ngResource"),biomarker_details_componentngResource_default=__webpack_require__.n(biomarker_details_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),tabs=__webpack_require__("./node_modules/@angular/material/fesm2020/tabs.mjs"),overlay=__webpack_require__("./node_modules/@angular/cdk/fesm2020/overlay.mjs"),portal=__webpack_require__("./node_modules/@angular/cdk/fesm2020/portal.mjs");let HoverDirective=((_class=class HoverDirective{constructor(){this.el=(0,core.inject)(core.ElementRef).nativeElement,this.overlayRef=(0,core.inject)(overlay.aV).create({positionStrategy:(0,core.inject)(overlay.aV).position().flexibleConnectedTo(this.el).withPositions([new overlay.tR({originX:"end",originY:"bottom"},{overlayX:"end",overlayY:"top"}),new overlay.tR({originX:"start",originY:"top"},{overlayX:"start",overlayY:"bottom"}),new overlay.tR({originX:"start",originY:"bottom"},{overlayX:"start",overlayY:"top"}),new overlay.tR({originX:"end",originY:"top"},{overlayX:"end",overlayY:"bottom"})]).withPush(!0)}),this.viewContainerRef=(0,core.inject)(core.ViewContainerRef)}set content(content){this.portal=new portal.UE(content,this.viewContainerRef,this._data),this.updateContent()}set data(data){this._data={$implicit:data},this.portal&&(this.portal.context=this._data,this.updateContent())}startHover(){const{overlayRef,portal}=this;!overlayRef.hasAttached()&&portal&&overlayRef.attach(portal)}endHover(){const{overlayRef}=this;overlayRef.hasAttached()&&overlayRef.detach()}updateContent(){const{overlayRef,portal}=this;overlayRef.hasAttached()&&portal&&(overlayRef.detach(),overlayRef.attach(portal))}}).propDecorators={content:[{type:core.Input,args:["hraHover"]}],data:[{type:core.Input,args:["hraHoverData"]}],startHover:[{type:core.HostListener,args:["mouseover"]}],endHover:[{type:core.HostListener,args:["mouseout"]}]},_class);HoverDirective=(0,tslib_es6.gn)([(0,core.Directive)({selector:"[hraHover]",standalone:!0})],HoverDirective);var select_snapshot=__webpack_require__("./libs/cdk/injectors/src/lib/select/select-snapshot.ts"),dispatch=__webpack_require__("./libs/cdk/injectors/src/lib/dispatch/dispatch.ts"),resource_registry_selectors=__webpack_require__("./libs/cdk/state/src/resource-registry/resource-registry.selectors.ts");class Set extends((0,actions.a)("[Screenmode] Set Screenmode")){constructor(isFullScreen){super(),this.isFullScreen=isFullScreen}}var gradient_legend_component_class,gradient_legend_componentngResource=__webpack_require__("./libs/components/atoms/src/lib/gradient-legend/gradient-legend.component.scss?ngResource"),gradient_legend_componentngResource_default=__webpack_require__.n(gradient_legend_componentngResource);let GradientLegendComponent=((gradient_legend_component_class=class GradientLegendComponent{constructor(){this.gradient=[]}get gradientCss(){return`linear-gradient(270deg, ${this.gradient.map((({color,percentage})=>`${color} ${percentage}%`)).join(",")})`}}).propDecorators={gradient:[{type:core.Input}]},gradient_legend_component_class);GradientLegendComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"hra-gradient-legend",standalone:!0,imports:[common.CommonModule],template:'<div class="gradient-bar" [style.background]="gradientCss"></div>\n<div class="legend">\n  <div class="start">0.0</div>\n  <div class="filler"></div>\n  <div class="end">1.0</div>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[gradient_legend_componentngResource_default()]})],GradientLegendComponent);var label_box_component=__webpack_require__("./libs/components/atoms/src/lib/label-box/label-box.component.ts");var size_legend_component_class,size_legend_componentngResource=__webpack_require__("./libs/components/atoms/src/lib/size-legend/size-legend.component.scss?ngResource"),size_legend_componentngResource_default=__webpack_require__.n(size_legend_componentngResource);let SizeLegendComponent=((size_legend_component_class=class SizeLegendComponent{constructor(){this.sizes=[]}}).propDecorators={sizes:[{type:core.Input}]},size_legend_component_class);SizeLegendComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"hra-size-legend",standalone:!0,imports:[common.CommonModule],template:'<div *ngFor="let text of sizes" class="item">\n  <div class="filler"></div>\n  <div class="circle" style="--size: {{ text.radius }}rem"></div>\n  <div class="filler"></div>\n  <div class="label">{{ text.label }}</div>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[size_legend_componentngResource_default()]})],SizeLegendComponent);var biomarker_table_data_card_component_class,biomarker_table_data_card_componentngResource=__webpack_require__("./libs/components/molecules/src/lib/biomarker-table-data-card/biomarker-table-data-card.component.scss?ngResource"),biomarker_table_data_card_componentngResource_default=__webpack_require__.n(biomarker_table_data_card_componentngResource),table=__webpack_require__("./node_modules/@angular/material/fesm2020/table.mjs");let BiomarkerTableDataCardComponent=((biomarker_table_data_card_component_class=class BiomarkerTableDataCardComponent{constructor(){this.data=[],this.sectionItems=[]}ngOnChanges(changes){"data"in changes&&this.updateSectionItems()}updateSectionItems(){const newSectionItems=[];this.data.forEach(((section,sectionIndex)=>{section.forEach(((item,itemIndex)=>{newSectionItems.push({data:item,section:sectionIndex,isLastItem:itemIndex===section.length-1})}))})),this.sectionItems=newSectionItems}}).propDecorators={data:[{type:core.Input}]},biomarker_table_data_card_component_class);BiomarkerTableDataCardComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"hra-biomarker-table-data-card",standalone:!0,imports:[common.CommonModule,table.p0],template:'<div class="no-data" *ngIf="sectionItems.length === 0">No data</div>\n<table mat-table *ngIf="sectionItems.length > 0" [dataSource]="sectionItems">\n  <caption class="sr-only">\n    Biomarker Table Data Card\n  </caption>\n\n  \x3c!-- Label Column --\x3e\n  <ng-container matColumnDef="label">\n    <th class="sr-only" mat-header-cell *matHeaderCellDef>Item Label</th>\n    <td class="label" mat-cell *matCellDef="let element" [class.no-border]="!element.isLastItem">\n      {{ element.data.label }}\n    </td>\n  </ng-container>\n\n  \x3c!-- Value Column --\x3e\n  <ng-container matColumnDef="value">\n    <th class="sr-only" mat-header-cell *matHeaderCellDef>Item Value</th>\n    <td class="value" mat-cell *matCellDef="let element" [class.no-border]="!element.isLastItem">\n      {{ element.data.value }}\n    </td>\n  </ng-container>\n\n  <tr mat-row *matRowDef="let row; columns: [\'label\', \'value\']"></tr>\n</table>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[biomarker_table_data_card_componentngResource_default()]})],BiomarkerTableDataCardComponent);var source_list_component_class,source_list_componentngResource=__webpack_require__("./libs/components/molecules/src/lib/source-list/source-list.component.scss?ngResource"),source_list_componentngResource_default=__webpack_require__.n(source_list_componentngResource);let SourceListComponent=((source_list_component_class=class SourceListComponent{constructor(){this.sources=[],this.showTable=!0}toggleTable(){this.showTable=!this.showTable}}).propDecorators={sources:[{type:core.Input}]},source_list_component_class);SourceListComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"hra-source-list",standalone:!0,imports:[common.CommonModule,table.p0,icon.Ps],template:'<button mat-icon-button class="toggle" (click)="toggleTable()">\n  <h1 class="text">Source Data</h1>\n  <mat-icon>\n    {{ showTable ? \'keyboard_arrow_down\' : \'keyboard_arrow_up\' }}\n  </mat-icon>\n</button>\n\n<table mat-table [dataSource]="sources" [class.hidden]="!showTable">\n  <caption class="sr-only">\n    Source List Table with Title and Links\n  </caption>\n\n  \x3c!-- Position Column --\x3e\n  <ng-container matColumnDef="link">\n    <th class="sr-only" mat-header-cell *matHeaderCellDef>Item Number</th>\n    <td mat-cell *matCellDef="let element; let i = index">{{ i + 1 }}.</td>\n  </ng-container>\n\n  \x3c!-- Data Column --\x3e\n  <ng-container matColumnDef="title">\n    <th class="sr-only" mat-header-cell *matHeaderCellDef>Title and Link</th>\n    <td mat-cell *matCellDef="let element">\n      {{ element.title }}\n      <br />\n      <a [href]="element.link" target="_blank">{{ element.link }}</a>\n    </td>\n  </ng-container>\n\n  <tr mat-row *matRowDef="let row; columns: [\'link\', \'title\']"></tr>\n</table>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[source_list_componentngResource_default()]})],SourceListComponent);var biomarker_table_data_icon_component_class,biomarker_table_componentngResource=__webpack_require__("./libs/components/organisms/src/lib/biomarker-table/biomarker-table.component.scss?ngResource"),biomarker_table_componentngResource_default=__webpack_require__.n(biomarker_table_componentngResource),biomarker_table_data_icon_componentngResource=__webpack_require__("./libs/components/molecules/src/lib/biomarker-table-data-icon/biomarker-table-data-icon.component.scss?ngResource"),biomarker_table_data_icon_componentngResource_default=__webpack_require__.n(biomarker_table_data_icon_componentngResource);let BiomarkerTableDataIconComponent=((biomarker_table_data_icon_component_class=class BiomarkerTableDataIconComponent{constructor(){this.color="",this.size=0}}).propDecorators={color:[{type:core.HostBinding,args:["style.background-color"]},{type:core.Input}],size:[{type:core.HostBinding,args:["style.--radius.rem"]},{type:core.Input}]},biomarker_table_data_icon_component_class);var biomarker_table_component_class;BiomarkerTableDataIconComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"hra-biomarker-table-data-icon",standalone:!0,imports:[common.CommonModule],template:"",changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[biomarker_table_data_icon_componentngResource_default()]})],BiomarkerTableDataIconComponent);let BiomarkerTableComponent=((biomarker_table_component_class=class BiomarkerTableComponent{constructor(){this.columns=[],this.data=[],this.dataSource=new table.by([])}get columnsWithTypeAndCount(){return["type","count",...this.columns]}ngOnChanges(changes){"data"in changes&&(this.dataSource.data=this.data)}}).propDecorators={columns:[{type:core.Input}],data:[{type:core.Input}]},biomarker_table_component_class);BiomarkerTableComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"hra-biomarker-table",standalone:!0,imports:[common.CommonModule,table.p0,BiomarkerTableDataIconComponent,HoverDirective,BiomarkerTableDataCardComponent],template:'<table class="table" mat-table [dataSource]="dataSource">\n  <caption class="sr-only">\n    Cell type table by Biomarker\n  </caption>\n\n  <ng-container matColumnDef="type">\n    <th mat-header-cell *matHeaderCellDef>Cell Type</th>\n\n    <td class="type" mat-cell *matCellDef="let element">\n      {{ element[0] }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef="count">\n    <th class="count" mat-header-cell *matHeaderCellDef>Cell Count</th>\n\n    <td class="count" mat-cell *matCellDef="let element">\n      {{ element[1] !== undefined ? (element[1] | number) : \'no data\' }}\n    </td>\n  </ng-container>\n\n  <ng-container *ngFor="let column of columns; let index = index" [matColumnDef]="column">\n    <th class="icon-header" mat-header-cell *matHeaderCellDef [hraHover]="columnHover" [hraHoverData]="column">\n      {{ column }}\n    </th>\n\n    <td class="icon-cell" mat-cell *matCellDef="let element">\n      <hra-biomarker-table-data-icon\n        class="icon"\n        *ngIf="element[index + 2] !== undefined"\n        [color]="element[index + 2].color"\n        [size]="element[index + 2].size"\n        [hraHover]="dataHover"\n        [hraHoverData]="element[index + 2].data"\n      >\n      </hra-biomarker-table-data-icon>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef="columnsWithTypeAndCount"></tr>\n  <tr mat-row *matRowDef="let row; columns: columnsWithTypeAndCount"></tr>\n</table>\n\n<ng-template #columnHover let-columnName>\n  <div class="biomarker-table-hover full-column-name">\n    {{ columnName }}\n  </div>\n</ng-template>\n\n<ng-template #dataHover let-data>\n  <hra-biomarker-table-data-card [data]="data"> </hra-biomarker-table-data-card>\n</ng-template>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[biomarker_table_componentngResource_default()]})],BiomarkerTableComponent);var switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js");const cell_summary_actions_Action=(0,actions.W)("CellSummary");class cell_summary_actions_Load extends(cell_summary_actions_Action("Load")){constructor(iri){super(),this.iri=iri}}class ComputeAggregates extends(cell_summary_actions_Action("Compute Aggregates")){}class cell_summary_actions_Reset extends(cell_summary_actions_Action("Reset")){}function getRow(rowById,id){return rowById.has(id)||rowById.set(id,["",0]),rowById.get(id)}function expandRow(row,length){if(row.length<length){const fillStart=row.length;row.length=length,row.fill(void 0,fillStart)}}function getLabel(items,id,what){return items.find((item=>item.id===id))?.label??`<Unlabled ${what} '${id}'>`}function getTotalCount(row){return row.reduce(((acc,entry)=>acc+("object"==typeof entry?entry.data.count:0)),0)}function computeAggregate(summary){const{label,cells,biomarkers,summaries}=summary,columnIndexByBiomarker=new Map,rowsByCell=new Map;for(const summary of summaries){const{biomarker,cell}=summary,columnIndex=(id=biomarker,(indexById=columnIndexByBiomarker).has(id)||indexById.set(id,indexById.size+2),indexById.get(id)),row=getRow(rowsByCell,cell);expandRow(row,columnIndex),row[columnIndex]={color:"",size:0,data:summary}}var indexById,id;for(const[cell,row]of rowsByCell.entries())row[0]=getLabel(cells,cell,"cell"),row[1]=getTotalCount(row);const columns=Array.from(columnIndexByBiomarker.keys()).map((id=>getLabel(biomarkers,id,"biomarker")));return{label,columns,rows:Array.from(rowsByCell.values())}}let CellSummaryState=class CellSummaryState{constructor(){this.dataService=(0,core.inject)(ftu_data_service.q)}load({patchState,dispatch},{iri}){return this.dataService.getCellSummaries(iri).pipe((0,tap.b)((summaries=>patchState({summaries,aggregates:[]}))),(0,switchMap.w)((()=>dispatch(new ComputeAggregates))))}computeAggregates({getState,patchState}){const{summaries}=getState();patchState({aggregates:summaries.map(computeAggregate)})}reset({patchState}){patchState({summaries:[],aggregates:[]})}};(0,tslib_es6.gn)([(0,ngxs_store.aU)(cell_summary_actions_Load,{cancelUncompleted:!0}),(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[Object,cell_summary_actions_Load]),(0,tslib_es6.w6)("design:returntype",Object)],CellSummaryState.prototype,"load",null),(0,tslib_es6.gn)([(0,ngxs_store.aU)(ComputeAggregates),(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[Object]),(0,tslib_es6.w6)("design:returntype",void 0)],CellSummaryState.prototype,"computeAggregates",null),(0,tslib_es6.gn)([(0,ngxs_store.aU)(cell_summary_actions_Reset),(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[Object]),(0,tslib_es6.w6)("design:returntype",void 0)],CellSummaryState.prototype,"reset",null),CellSummaryState=(0,tslib_es6.gn)([(0,ngxs_store.ZM)({name:"cellSummary",defaults:{summaries:[],aggregates:[]}}),(0,core.Injectable)()],CellSummaryState);class CellSummarySelectors{static aggregates(state){return state.aggregates}static summaries(state){return state.summaries}}(0,tslib_es6.gn)([(0,ngxs_store.Qf)([CellSummaryState]),(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[Object]),(0,tslib_es6.w6)("design:returntype",Array)],CellSummarySelectors,"aggregates",null),(0,tslib_es6.gn)([(0,ngxs_store.Qf)([CellSummaryState]),(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[Object]),(0,tslib_es6.w6)("design:returntype",Array)],CellSummarySelectors,"summaries",null);var resource_ids=__webpack_require__("./libs/state/src/lib/resource-ids.ts"),resource_types=__webpack_require__("./libs/state/src/lib/resource-types.ts");class SourceRefsSelectors{static sourceReferences(refs){return refs}}(0,tslib_es6.gn)([(0,ngxs_store.Qf)([SourceRefsState]),(0,tslib_es6.w6)("design:type",Function),(0,tslib_es6.w6)("design:paramtypes",[Array]),(0,tslib_es6.w6)("design:returntype",Array)],SourceRefsSelectors,"sourceReferences",null);let BiomarkerDetailsComponent=class BiomarkerDetailsComponent{constructor(){this.tabs=(0,select_snapshot.g)(CellSummarySelectors.aggregates),this.gradientHoverInfo=(0,select_snapshot.w)(resource_registry_selectors.S.anyText,resource_ids.IO),this.sizeHoverInfo=(0,select_snapshot.w)(resource_registry_selectors.S.anyText,resource_ids.Z9),this.isTableFullScreen=!1,this.gradients=(0,select_snapshot.w)(resource_registry_selectors.S.field,resource_ids.Aq,resource_types.ph,"points",[]),this.sizes=(0,select_snapshot.w)(resource_registry_selectors.S.field,resource_ids.MO,resource_types.$u,"sizes",[]),this.source=(0,select_snapshot.g)(SourceRefsSelectors.sourceReferences),this.setScreenMode=(0,dispatch.WI)(Set)}toggleFullscreen(){this.isTableFullScreen=!this.isTableFullScreen,this.setScreenMode(this.isTableFullScreen)}};function createDataItem(label,value){return{label,value}}BiomarkerDetailsComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"ftu-biomarker-details",standalone:!0,imports:[common.CommonModule,icon.Ps,tabs.Nh,BiomarkerTableComponent,BiomarkerTableDataCardComponent,GradientLegendComponent,HoverDirective,label_box_component.d,SizeLegendComponent,SourceListComponent],template:'<hra-label-box class="table-header">\n  Cell Types by Gene Biomarkers\n  <mat-icon (click)="toggleFullscreen()" class="end">\n    {{ isTableFullScreen ? \'close_fullscreen\' : \'open_in_full\' }}\n  </mat-icon>\n</hra-label-box>\n\n<mat-tab-group class="table" [class.table-fullscreen]="isTableFullScreen" mat-stretch-tabs="false" color="accent">\n  <mat-tab *ngFor="let tab of tabs()" labelClass="table-tab-header" [label]="tab.label">\n    <hra-biomarker-table [data]="$any(tab.rows)" [columns]="tab.columns"></hra-biomarker-table>\n  </mat-tab>\n</mat-tab-group>\n\n<hra-label-box class="legend-header gradient">\n  Biomarker Expression Mean in FTU\n  <mat-icon class="icon" [hraHover]="infoTooltip" [hraHoverData]="gradientHoverInfo()">info_outlined</mat-icon>\n</hra-label-box>\n<div class="legend gradient">\n  <hra-gradient-legend [gradient]="gradients()" class="content"></hra-gradient-legend>\n</div>\n\n<hra-label-box class="legend-header size">\n  Percentage of Cells in FTU\n  <mat-icon class="icon" [hraHover]="infoTooltip" [hraHoverData]="sizeHoverInfo()">info_outlined</mat-icon>\n</hra-label-box>\n<div class="legend size">\n  <hra-size-legend [sizes]="sizes()" class="content"></hra-size-legend>\n</div>\n\n<hra-label-box class="source-list-header">\n  Source Data\n  <mat-icon class="end">expand_more</mat-icon>\n</hra-label-box>\n<div class="source-list">\n  <hra-source-list [sources]="source()" class="content"></hra-source-list>\n</div>\n\n<ng-template #infoTooltip let-tooltip>\n  <div class="biomarker-details info-tooltip">\n    {{ tooltip }}\n  </div>\n</ng-template>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[biomarker_details_componentngResource_default()]})],BiomarkerDetailsComponent);const biomarker_details_component_stories={title:"BiomarkerDetailsComponent",component:BiomarkerDetailsComponent,parameters:{state:{states:[resource_registry_state.E,SourceRefsState],actions:[new resource_registry_actions.AU("assets/resources/gradient.yml"),new resource_registry_actions.AU("assets/resources/size.yml")]}},decorators:[(0,dist.moduleMetadata)({imports:[icon.Ps]})]},Primary=(args=>({props:args})).bind({});Primary.args={},createDataItem.parameters={...createDataItem.parameters,docs:{...createDataItem.parameters?.docs,source:{originalSource:"function createDataItem(label, value) {\n  return {\n    label,\n    value\n  };\n}",...createDataItem.parameters?.docs?.source}}},Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"args => ({\n  props: args\n})",...Primary.parameters?.docs?.source}}}}}]);