var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionConstructor.html",[0,1.119,1,2.542]],["body/interfaces/ActionConstructor.html",[0,1.645,1,4.386,2,1.974,3,0.334,4,0.334,5,0.334,6,3.29,7,0.294,8,1.51,9,1.249,10,1.334,11,0.77,12,2.363,13,0.453,14,1.095,15,0.028,16,0.334,17,3.29,18,1.974,19,0.508,20,1.261,21,2.887,22,0.871,23,2.557,24,1.334,25,2.887,26,4.261,27,4.725,28,2.887,29,0.599,30,1.334,31,1.765,32,3.29,33,1.534,34,3.901,35,1.571,36,0.255,37,3.29,38,3.29,39,3.901,40,1.974,41,0.02,42,0.02]],["title/classes/Add.html",[36,0.174,43,1.043]],["body/classes/Add.html",[3,0.29,4,0.29,5,0.502,7,0.347,8,0.834,9,0.841,10,0.895,13,0.222,14,0.777,15,0.028,16,0.394,19,0.502,20,0.721,22,0.527,24,0.895,29,0.717,36,0.296,41,0.018,42,0.018,43,1.992,44,0.721,45,1.725,46,1.725,47,1.271,48,1.702,49,2.291,50,1.715,51,2.361,52,1.384,53,2.43,54,0.402,55,2.859,56,2.105,57,0.442,58,0.402,59,0.364,60,1.021,61,1.285,62,1.029,63,1.365,64,0.96,65,0.402,66,1.864,67,1.66,68,2.105,69,1.909,70,1.909,71,1.608,72,3.324,73,1.271,74,1.029,75,1.365,76,1.825,77,1.271,78,2.252,79,1.029,80,1.854,81,0.776,82,2.105,83,1.029,84,1.365,85,1.365,86,1.379,87,2.444,88,1.365,89,1.365,90,2.038,91,2.038]],["title/classes/Add-1.html",[36,0.146,43,0.878,92,1.59]],["body/classes/Add-1.html",[3,0.283,4,0.283,5,0.526,7,0.341,8,0.813,9,0.827,10,0.872,13,0.217,14,0.871,15,0.028,16,0.388,19,0.498,20,0.962,22,0.514,24,0.872,29,0.728,36,0.294,41,0.018,42,0.018,43,2.009,44,0.703,47,1.239,48,1.684,50,1.672,52,1.373,54,0.392,55,2.786,56,2.077,57,0.431,58,0.392,59,0.354,60,1.013,61,1.113,62,1.004,63,1.331,64,0.936,65,0.392,67,1.645,68,2.077,69,1.892,70,1.892,71,1.58,73,1.239,74,1.004,75,1.331,76,1.58,77,1.239,78,2.241,79,1.004,80,1.822,81,1.181,82,2.416,83,1.004,84,1.822,85,1.822,86,1.475,93,1.58,94,1.58,95,2.281,96,2.518,97,2.594,98,1.817,99,3.378,100,1.672,101,2.234,102,1.672,103,1.672]],["title/classes/AddFromYaml.html",[36,0.174,79,1.043]],["body/classes/AddFromYaml.html",[3,0.292,4,0.292,5,0.519,7,0.349,8,0.839,9,0.845,10,0.901,13,0.224,14,0.949,15,0.028,16,0.396,19,0.503,20,0.726,22,0.531,24,0.901,29,0.718,36,0.297,41,0.018,42,0.018,43,1.979,44,0.726,45,1.733,46,1.733,47,1.279,48,1.404,49,2.2,51,2.112,52,1.2,53,2.004,54,0.405,56,1.862,57,0.445,58,0.405,59,0.366,60,0.992,61,1.137,62,1.036,63,1.374,64,0.966,65,0.405,66,1.876,67,1.664,68,2.112,69,1.913,70,1.913,71,1.615,72,3.406,73,1.279,74,1.036,75,1.374,76,1.963,77,1.279,78,2.321,79,1.404,80,2.264,81,1.058,82,2.112,83,1.036,84,1.374,85,1.374,86,1.383,87,2.452,88,1.374,89,1.374,90,2.051,91,2.051,104,2.877,105,2.877]],["title/classes/AddFromYaml-1.html",[36,0.146,79,0.878,92,1.59]],["body/classes/AddFromYaml-1.html",[3,0.284,4,0.284,5,0.527,7,0.342,8,0.817,9,0.829,10,0.877,13,0.218,14,0.982,15,0.028,16,0.389,19,0.499,20,0.965,22,0.516,24,0.877,29,0.729,36,0.294,41,0.018,42,0.018,43,1.999,44,0.706,47,1.244,48,1.378,52,1.184,54,0.394,56,1.828,57,0.433,58,0.394,59,0.356,60,0.982,61,0.817,62,1.008,63,1.337,64,0.94,65,0.394,67,1.648,68,2.082,69,1.895,70,1.895,71,1.585,73,1.244,74,1.008,75,1.337,76,1.585,77,1.244,78,2.312,79,1.378,80,2.238,81,1.332,82,2.42,83,1.008,84,1.828,85,1.828,86,1.478,93,1.585,94,1.585,95,2.187,96,2.241,97,2.122,98,1.826,99,3.492,100,2.296,101,2.238,102,1.68,103,1.68,104,2.8,105,2.8]],["title/classes/AddMany.html",[36,0.174,74,1.043]],["body/classes/AddMany.html",[3,0.293,4,0.293,5,0.504,7,0.349,8,0.841,9,0.846,10,0.902,13,0.224,14,0.781,15,0.028,16,0.397,19,0.504,20,0.727,22,0.72,24,0.902,29,0.719,36,0.297,41,0.018,42,0.018,43,1.979,44,0.727,45,1.735,46,1.735,47,1.281,48,1.406,49,2.201,51,2.114,52,1.201,53,2.006,54,0.405,56,2.114,57,0.446,58,0.405,59,0.366,60,0.992,61,1.138,62,1.038,63,1.376,64,0.968,65,0.405,66,1.88,67,1.665,68,2.114,69,1.914,70,1.914,71,1.964,72,3.514,73,1.735,74,1.406,75,1.376,76,1.964,77,1.967,78,2.256,79,1.038,80,1.864,81,0.782,82,2.114,83,1.038,84,1.376,85,1.376,86,1.383,87,2.454,88,1.376,89,1.376,90,2.055,91,2.055,106,2.882,107,2.882]],["title/classes/AddMany-1.html",[36,0.146,74,0.878,92,1.59]],["body/classes/AddMany-1.html",[3,0.285,4,0.285,5,0.527,7,0.343,8,0.819,9,0.831,10,0.879,13,0.218,14,0.874,15,0.028,16,0.39,19,0.499,20,0.968,22,0.707,24,0.879,29,0.73,36,0.294,41,0.018,42,0.018,43,2,44,0.709,47,1.248,48,1.381,52,1.186,54,0.395,56,2.086,57,0.434,58,0.395,59,0.357,60,0.984,61,0.819,62,1.011,63,1.341,64,0.943,65,0.395,67,1.65,68,2.086,69,1.897,70,1.897,71,1.944,73,1.705,74,1.381,75,1.341,76,1.809,77,1.941,78,2.245,79,1.011,80,1.832,81,1.186,82,2.422,83,1.011,84,1.832,85,1.832,86,1.479,93,1.588,94,1.588,95,2.188,96,2.245,97,2.127,98,1.832,99,3.535,100,1.685,101,2.241,102,1.685,103,1.685,106,2.809,107,2.809]],["title/classes/Clear.html",[36,0.174,108,2.066]],["body/classes/Clear.html",[3,0.308,4,0.308,5,0.308,7,0.361,8,0.884,9,1.165,10,1.578,13,0.418,14,1.038,15,0.028,16,0.41,19,0.461,20,1.145,24,0.949,29,0.729,35,1.928,36,0.326,41,0.019,42,0.019,44,0.765,50,1.818,54,0.426,57,0.469,58,0.426,59,0.385,60,1.06,61,1.512,62,1.091,65,0.426,67,1.525,69,1.753,70,1.753,108,3.697,109,2.382,110,2.878,111,3.594,112,3.64,113,3.594,114,2.488,115,3.111,116,1.347,117,2.382,118,2.161,119,2.382,120,2.684,121,3.173,122,2.659,123,3.451,124,1.635,125,3.451,126,2.659,127,2.659]],["title/classes/Delete.html",[36,0.174,125,2.066]],["body/classes/Delete.html",[3,0.303,4,0.303,5,0.303,7,0.357,8,0.869,9,1.176,10,1.569,13,0.422,14,1.086,15,0.028,16,0.406,19,0.457,20,1.136,24,0.933,29,0.726,35,1.423,36,0.328,41,0.019,42,0.019,44,0.752,50,1.788,54,0.419,57,0.461,58,0.419,59,0.379,60,1.055,61,1.537,62,1.073,65,0.419,67,1.512,69,1.738,70,1.738,108,3.209,109,2.342,110,2.124,111,3.574,112,3.605,114,2.471,115,3.162,116,1.324,117,2.342,118,2.124,119,2.342,120,2.666,121,3.538,122,2.614,123,3.574,124,1.621,125,3.818,126,2.614,127,2.614,128,3.533]],["title/components/DestroyHostComponent.html",[129,2.277,130,2.897]],["body/components/DestroyHostComponent.html",[3,0.304,4,0.304,5,0.304,7,0.358,11,1.127,13,0.232,15,0.028,16,0.304,19,0.304,21,4.224,22,0.738,23,2.4,29,0.42,30,1.252,33,1.077,36,0.179,40,2.705,41,0.019,42,0.019,54,0.42,57,0.462,58,0.677,59,0.38,65,0.563,116,2.004,129,3.945,130,5.164,131,4,132,5.346,133,3.545,134,2.989,135,2.852,136,4.744,137,3.545,138,3.144,139,4.744,140,5.018,141,4,142,3.51,143,4.744,144,2.623,145,2.231,146,6.125,147,3.956,148,5.346,149,1.778,150,4.744,151,3.784,152,3.545,153,3.51,154,3.144,155,4.532,156,4.266,157,5.709,158,4,159,4.744,160,3.956,161,2.852,162,5.951,163,4.744,164,1.537,165,2.35,166,1.537,167,2.623,168,4.744,169,3.545,170,2.35,171,2.131,172,3.545,173,3.545,174,3.545,175,4.744,176,1.794,177,5.709,178,3.545,179,2.131,180,2.35,181,3.545,182,2.623,183,2.989,184,3.545]],["title/interfaces/DestructorScope.html",[0,1.119,185,2.277]],["body/interfaces/DestructorScope.html",[0,1.205,2,1.873,3,0.317,4,0.317,5,0.317,7,0.368,11,0.731,13,0.32,15,0.028,16,0.317,19,0.468,22,0.576,23,1.873,29,0.648,30,1.289,31,2.241,33,1.124,36,0.187,41,0.019,42,0.019,48,1.124,54,0.439,57,0.483,58,0.439,59,0.397,65,0.439,67,1.048,114,2.617,124,1.483,135,2.935,149,1.83,166,1.604,171,2.225,185,3.85,186,3.612,187,2.739,188,4.748,189,2.685,190,4.117,191,4.606,192,4.117,193,2.339,194,3.702,195,4.117,196,4.117,197,3.612,198,4.117,199,1.873,200,2.739,201,2.453,202,3.85,203,4.588,204,4.467,205,2.453,206,2.739,207,2.036,208,2.739,209,2.739,210,2.739,211,4.117,212,4.117,213,3.121,214,4.606,215,4.117,216,2.739,217,2.225,218,1.387,219,3.121,220,2.225,221,2.739,222,3.121,223,3.121,224,3.121,225,3.121,226,3.121,227,3.121]],["title/interfaces/HoverContext.html",[0,1.119,228,2.542]],["body/interfaces/HoverContext.html",[0,0.944,2,1.466,3,0.248,4,0.248,5,0.248,7,0.219,11,0.572,12,1.93,13,0.19,15,0.028,16,0.412,19,0.354,20,1.023,22,0.861,31,1.679,36,0.146,41,0.016,42,0.016,65,0.57,81,1.267,120,1.93,138,1.921,145,1.086,147,3.054,151,2.735,153,3.054,154,2.735,155,2.144,156,3.186,161,1.742,164,1.256,165,1.921,166,1.256,167,3.054,170,1.921,176,2.801,180,1.921,193,1.936,228,3.557,229,2.443,230,2.248,231,3.557,232,4.417,233,4.381,234,3.48,235,4.668,236,2.271,237,2.735,238,3.48,239,4.668,240,4.993,241,2.443,242,3.48,243,2.443,244,2.144,245,2.144,246,1.466,247,3.557,248,3.48,249,2.443,250,2.443,251,3.48,252,3.48,253,2.443,254,2.443,255,3.48,256,2.443,257,2.443,258,4.053,259,3.48,260,5.194,261,3.557,262,2.443,263,2.443,264,2.443,265,4.053,266,2.11,267,2.144,268,3.48,269,2.443,270,3.48,271,2.443,272,3.48,273,2.443,274,4.417,275,2.443,276,2.443,277,2.443,278,2.443,279,2.443,280,4.417,281,4.417,282,4.417,283,4.417,284,4.417,285,4.417,286,4.417,287,4.417,288,2.443,289,2.443,290,1.921,291,2.144,292,2.443,293,4.053,294,3.48,295,3.054,296,2.443,297,2.443,298,2.443,299,4.053,300,3.48,301,2.443,302,2.443,303,2.443,304,2.443,305,3.48,306,2.443,307,2.443,308,2.443,309,2.144,310,2.443]],["title/directives/HoverDirective.html",[176,1.739,180,2.277]],["body/directives/HoverDirective.html",[0,0.724,3,0.191,4,0.191,5,0.191,7,0.168,11,0.439,12,1.587,13,0.325,15,0.028,16,0.353,19,0.291,20,1.056,22,0.894,30,1.216,31,1.9,36,0.112,41,0.013,42,0.013,54,0.696,57,0.443,58,0.403,59,0.494,65,0.488,81,1.245,120,1.587,124,0.675,138,2.25,144,1.646,145,1.272,147,3.671,149,1.272,151,2.25,153,1.646,154,1.474,155,1.646,156,3.054,161,1.337,164,0.964,165,1.474,166,0.964,167,1.646,170,1.474,176,2.647,179,1.337,180,2.25,193,2.191,228,2.512,229,1.875,230,2.154,231,2.512,232,4.41,233,4.475,234,1.875,235,2.862,236,2.151,237,1.474,238,1.875,239,4.847,240,5.216,241,1.875,242,3.472,243,1.875,244,1.646,245,1.646,246,1.125,247,3.046,248,4.184,249,2.862,250,3.885,251,4.41,252,4.41,253,1.875,254,1.875,255,2.862,256,1.875,257,1.875,258,3.472,259,2.862,260,5.38,261,3.671,262,1.875,263,1.875,264,1.875,265,3.885,266,1.856,267,1.646,268,3.885,269,2.862,270,4.184,271,2.862,272,3.885,273,2.862,274,4.41,275,2.862,276,2.862,277,2.862,278,2.862,279,2.862,280,4.73,281,4.73,282,4.73,283,4.73,284,4.73,285,4.73,286,4.73,287,4.73,288,2.862,289,1.875,290,1.474,291,1.646,292,1.875,293,4.587,294,4.41,295,3.87,296,3.472,297,2.862,298,3.885,299,3.472,300,2.862,301,3.472,302,3.472,303,2.862,304,3.885,305,2.862,306,1.875,307,1.875,308,1.875,309,1.646,310,1.875,311,2.862,312,3.395,313,2.862,314,3.395,315,3.395,316,3.395,317,3.395,318,3.395,319,3.395,320,3.395,321,1.587,322,1.125,323,2.224,324,2.224,325,2.224,326,2.224]],["title/directives/LinkDirective.html",[176,1.739,182,2.542]],["body/directives/LinkDirective.html",[3,0.185,4,0.185,5,0.185,7,0.305,8,0.531,9,0.829,11,0.426,12,1.551,13,0.388,14,1.027,15,0.028,16,0.443,18,1.092,19,0.185,20,1.238,23,1.092,29,0.479,30,1.067,33,1.486,36,0.109,41,0.013,42,0.013,49,2.097,51,2.081,52,1.038,53,1.438,54,0.676,57,0.433,58,0.393,59,0.611,65,0.613,86,1.366,87,1.551,88,0.869,116,1.243,117,1.43,124,1.227,134,1.819,144,1.596,145,1.514,149,1.243,156,4.208,160,1.596,164,0.935,165,1.43,166,2.122,170,1.43,171,1.297,176,2.295,179,1.297,182,2.454,183,3.824,193,1.336,218,1.7,230,1.009,244,1.596,245,1.596,246,1.092,247,1.596,266,2.449,267,1.596,295,4.304,309,3.356,311,3.407,313,2.797,321,2.121,322,2.044,327,2.158,328,2.797,329,2.797,330,4.04,331,5.168,332,3.824,333,3.824,334,3.317,335,3.317,336,3.317,337,3.317,338,3.317,339,4.895,340,3.824,341,2.158,342,2.797,343,3.317,344,3.317,345,5.168,346,3.317,347,1.819,348,3.317,349,4.535,350,3.407,351,3.317,352,4.04,353,3.317,354,2.797,355,3.317,356,2.797,357,3.317,358,3.317,359,3.317,360,4.04,361,1.819,362,2.158,363,2.158,364,3.317,365,3.317,366,2.158,367,2.158,368,2.158,369,3.824,370,1.819,371,2.797,372,1.819,373,2.158,374,2.454,375,2.158,376,1.596,377,1.43,378,2.158,379,3.317,380,2.158,381,1.819,382,1.819,383,2.158,384,4.535,385,2.158,386,2.158,387,2.158,388,2.158,389,2.158,390,3.317,391,2.158,392,2.158,393,0.869,394,2.158,395,2.158,396,2.158,397,3.317,398,2.158,399,2.158,400,2.158,401,4.535,402,2.158,403,2.158,404,3.317,405,2.158,406,2.158,407,2.158,408,2.158,409,2.158,410,2.158,411,2.158,412,3.317,413,3.317,414,3.317,415,3.317,416,3.317,417,3.317,418,2.797,419,2.158,420,2.158,421,2.158,422,2.158,423,2.158,424,4.04,425,3.317,426,3.317,427,2.158,428,2.158,429,2.158,430,2.158,431,2.158,432,2.158,433,2.158,434,2.158,435,2.158,436,2.158,437,2.158,438,2.158,439,2.158]],["title/classes/LinkRegistrySelectors.html",[36,0.174,376,2.542]],["body/classes/LinkRegistrySelectors.html",[3,0.315,4,0.315,5,0.315,7,0.367,11,0.727,13,0.425,15,0.028,16,0.497,18,2.757,19,0.315,29,0.687,30,1.438,31,1.699,33,1.477,36,0.186,40,2.933,41,0.019,42,0.019,44,0.783,45,1.824,46,1.824,49,2.287,51,1.959,52,1.467,53,1.596,54,0.437,57,0.48,58,0.437,59,0.522,60,1.045,64,1.043,65,0.577,116,1.38,145,1.38,149,1.824,207,2.025,218,2.172,236,1.596,266,1.483,321,1.722,376,3.6,377,2.44,393,2.543,440,2.44,441,3.225,442,3.187,443,3.6,444,4.459,445,3.682,446,3.682,447,3.6,448,3.225,449,4.032,450,3.611,451,2.214,452,1.596,453,2.724,454,2.724,455,3.682,456,3.682,457,2.44,458,2.214,459,2.724,460,2.724,461,2.724,462,3.6,463,2.44]],["title/injectables/LinkRegistryState.html",[453,2.542,464,1.889]],["body/injectables/LinkRegistryState.html",[3,0.18,4,0.18,5,0.383,7,0.385,9,1.055,11,0.414,13,0.361,14,0.67,15,0.028,16,0.484,19,0.278,20,0.844,22,0.694,29,0.717,30,1.406,31,0.732,33,0.636,35,0.844,36,0.106,41,0.013,42,0.013,43,1.856,45,1.914,46,1.914,48,0.985,49,2.015,51,1.306,52,1.345,53,0.908,54,0.573,57,0.63,58,0.606,59,0.571,60,0.954,64,0.593,65,0.47,71,1.132,72,1.783,74,1.617,76,2.052,78,1.86,79,1.356,81,1.022,83,1.356,86,1.098,87,2.789,88,1.798,89,2.145,100,1.06,102,1.641,116,0.785,121,2.149,149,1.215,164,0.908,193,2.145,199,1.06,218,1.914,220,1.949,230,2.698,236,0.908,246,1.06,266,1.945,321,2.258,322,1.06,328,1.766,332,1.55,333,1.55,369,3.765,370,1.766,374,2.399,377,1.389,381,2.734,382,1.766,393,2.461,418,1.766,442,1.152,444,1.55,449,1.55,450,2.149,451,1.26,452,0.908,453,2.399,458,1.26,463,1.389,464,1.783,465,1.389,466,1.55,467,2.734,468,2.734,469,3.242,470,2.734,471,2.734,472,2.734,473,4.465,474,2.734,475,5.25,476,2.734,477,2.095,478,3.825,479,2.734,480,2.734,481,2.095,482,2.734,483,4.072,484,2.734,485,2.095,486,2.734,487,1.55,488,2.734,489,2.734,490,1.949,491,2.734,492,2.734,493,2.734,494,2.095,495,3.344,496,3.201,497,2.734,498,3.242,499,3.242,500,2.095,501,3.242,502,4.829,503,1.766,504,1.766,505,3.242,506,1.766,507,1.766,508,1.766,509,2.734,510,1.766,511,1.766,512,1.389,513,2.734,514,1.55,515,1.766,516,1.766,517,2.734,518,2.095,519,2.095,520,2.734,521,1.766,522,1.766,523,2.095,524,1.766,525,1.766,526,1.766,527,1.766,528,1.152,529,1.766,530,1.766,531,1.766,532,1.766,533,2.095,534,1.389,535,2.149,536,2.095,537,3.242,538,2.095,539,3.242,540,2.095,541,1.55,542,2.095,543,1.766,544,2.095,545,2.734,546,1.766,547,1.766,548,2.095,549,2.095,550,2.095,551,2.095,552,2.095,553,2.095,554,2.095,555,2.095,556,2.095]],["title/classes/LoadFromYaml.html",[36,0.174,83,1.043]],["body/classes/LoadFromYaml.html",[3,0.29,4,0.29,5,0.539,7,0.347,8,0.834,9,0.841,10,0.895,13,0.222,14,0.946,15,0.028,16,0.394,19,0.502,20,0.721,22,0.527,24,0.895,29,0.717,36,0.296,41,0.018,42,0.018,43,1.976,44,0.721,45,1.725,46,1.725,47,1.271,48,1.398,49,2.197,51,2.105,52,1.196,53,1.995,54,0.402,56,1.854,57,0.442,58,0.402,59,0.364,60,0.99,61,1.132,62,1.029,63,1.365,64,0.96,65,0.402,66,1.864,67,1.66,68,2.105,69,1.909,70,1.909,71,1.608,72,3.46,73,1.271,74,1.029,75,1.365,76,1.825,77,1.271,78,2.306,79,1.029,80,1.854,81,0.776,82,2.435,83,1.398,84,1.365,85,1.854,86,1.487,87,2.444,88,1.365,89,1.365,90,2.038,91,2.038,557,2.859,558,2.859]],["title/classes/LoadFromYaml-1.html",[36,0.146,83,0.878,92,1.59]],["body/classes/LoadFromYaml-1.html",[3,0.283,4,0.283,5,0.55,7,0.341,8,0.813,9,0.827,10,0.872,13,0.217,14,0.981,15,0.028,16,0.388,19,0.498,20,0.962,22,0.514,24,0.872,29,0.728,36,0.294,41,0.018,42,0.018,43,1.997,44,0.703,47,1.239,48,1.374,52,1.181,54,0.392,56,1.822,57,0.431,58,0.392,59,0.354,60,0.981,61,0.813,62,1.004,63,1.331,64,0.936,65,0.392,67,1.645,68,2.077,69,1.892,70,1.892,71,1.58,73,1.239,74,1.004,75,1.331,76,1.58,77,1.239,78,2.297,79,1.004,80,1.822,81,1.181,82,2.555,83,1.374,84,1.822,85,2.077,86,1.538,93,1.58,94,1.58,95,2.184,96,2.236,97,2.115,98,1.817,99,3.489,100,1.672,101,2.234,102,1.672,103,1.672,557,2.786,558,2.786]],["title/classes/LoadMarkdown.html",[36,0.174,103,1.739]],["body/classes/LoadMarkdown.html",[3,0.28,4,0.28,5,0.549,7,0.338,8,0.803,9,0.82,10,0.862,13,0.214,14,0.976,15,0.028,16,0.384,19,0.496,20,0.954,22,0.507,24,0.862,29,0.726,36,0.292,41,0.018,42,0.018,43,1.993,44,0.694,47,1.223,48,1.362,50,1.651,52,1.173,54,0.387,56,1.806,57,0.426,58,0.387,59,0.35,60,1.033,61,0.803,62,0.991,63,1.314,64,0.924,65,0.387,67,1.638,68,2.064,69,1.883,70,1.883,71,1.566,73,1.223,74,0.991,75,1.314,76,1.566,77,1.223,78,2.236,79,0.991,80,1.806,81,1.263,82,2.548,83,0.991,84,1.806,85,2.064,86,1.556,93,1.566,94,1.566,95,2.258,96,2.507,97,2.097,98,1.795,99,3.366,100,1.651,101,2.465,102,2.269,103,2.269,559,3.263]],["title/classes/Navigate.html",[36,0.174,87,1.607]],["body/classes/Navigate.html",[3,0.292,4,0.292,5,0.503,7,0.349,8,0.839,9,0.845,10,0.901,13,0.224,14,0.781,15,0.028,16,0.396,19,0.503,20,0.726,22,0.531,24,0.901,29,0.718,36,0.297,41,0.018,42,0.018,43,1.94,44,0.726,45,1.733,46,1.733,47,1.279,48,1.404,49,2.276,50,1.727,51,2.366,52,1.2,53,2.004,54,0.405,56,1.862,57,0.445,58,0.405,59,0.366,60,1.046,61,1.29,62,1.036,63,1.374,64,0.966,65,0.405,66,1.876,67,1.664,68,2.112,69,1.913,70,1.913,71,1.615,72,3.331,73,1.279,74,1.036,75,1.374,76,1.831,77,1.279,78,2.255,79,1.036,80,1.862,81,0.781,82,2.112,83,1.036,84,1.374,85,1.374,86,1.445,87,2.832,88,1.862,89,1.862,90,2.051,91,2.78,560,3.412]],["title/interfaces/ResourceRegistryQuery.html",[0,1.119,561,2.542]],["body/interfaces/ResourceRegistryQuery.html",[0,0.876,2,1.361,3,0.23,4,0.23,5,0.23,7,0.203,11,0.531,12,1.829,13,0.432,14,0.908,15,0.028,16,0.434,18,1.361,19,0.395,29,0.704,30,1.566,31,2.072,33,1.866,35,1.575,36,0.136,40,2.839,41,0.015,42,0.015,52,1.486,59,0.288,60,1.113,64,0.762,65,0.6,81,1.325,86,0.962,93,0.939,94,0.939,95,2.219,96,2.572,97,1.258,101,1.575,116,1.008,145,1.008,207,1.479,218,2.303,236,2.194,266,1.083,291,2.894,322,1.361,393,2.559,440,1.783,441,1.783,442,3.462,443,1.99,447,1.99,448,3.564,450,3.564,451,1.617,452,1.166,454,1.99,457,1.783,458,2.771,459,1.99,460,1.99,461,1.99,462,2.894,463,2.592,528,2.783,534,1.783,535,2.592,561,3.411,562,3.911,563,3.911,564,3.298,565,3.411,566,2.894,567,3.838,568,2.592,569,1.783,570,3.979,571,1.99,572,1.99,573,4.534,574,4.534,575,2.268,576,1.99,577,2.268,578,2.268,579,2.268,580,2.268,581,2.268,582,2.268,583,2.268,584,2.268,585,2.268]],["title/classes/ResourceRegistrySelectors.html",[36,0.174,572,2.542]],["body/classes/ResourceRegistrySelectors.html",[0,0.755,3,0.199,4,0.199,5,0.199,7,0.401,11,0.458,13,0.423,14,0.795,15,0.028,16,0.403,18,1.174,19,0.362,29,0.674,30,1.59,31,2.132,33,1.8,35,0.934,36,0.117,40,3.208,41,0.014,42,0.014,44,0.494,52,1.428,54,0.6,57,0.659,58,0.6,59,0.57,60,1.078,64,0.657,65,0.558,81,1.414,86,1.308,93,1.857,94,1.857,95,2.132,96,2.304,97,1.085,101,2.141,116,0.87,145,0.87,149,1.314,207,1.276,218,2.13,236,1.831,266,0.934,321,2.364,322,1.174,393,2.646,440,1.538,441,2.323,442,3.6,443,2.594,447,2.594,448,3.93,450,3.121,451,1.395,452,1.006,454,1.717,457,1.538,458,2.108,459,1.717,460,1.717,461,1.717,462,2.594,463,2.323,528,3.261,534,1.538,535,2.323,561,3.126,564,1.956,565,2.594,566,2.594,567,4.231,568,2.323,569,1.538,570,4.304,571,2.594,572,2.594,573,4.263,574,4.263,575,2.956,576,1.717,577,1.956,578,1.956,579,1.956,580,2.956,581,1.956,582,2.956,583,1.956,584,2.956,585,1.956,586,3.505,587,5.055,588,2.32,589,2.32,590,2.32,591,2.32,592,2.32]],["title/injectables/ResourceRegistryState.html",[464,1.889,569,2.277]],["body/injectables/ResourceRegistryState.html",[3,0.202,4,0.202,5,0.459,7,0.404,9,1.12,11,0.466,13,0.351,14,0.721,15,0.028,16,0.476,19,0.202,20,0.502,22,0.739,25,2.629,29,0.717,30,1.466,33,1.079,36,0.119,41,0.014,42,0.014,43,1.9,48,1.079,52,1.338,54,0.604,57,0.664,58,0.635,59,0.596,60,0.86,64,0.669,65,0.421,71,1.241,74,1.686,76,2.112,78,1.939,79,1.443,81,1.088,83,1.443,86,1.253,89,2.156,93,1.869,94,1.869,95,1.492,99,1.954,100,1.195,101,1.913,102,2.404,103,2.709,149,1.332,164,1.024,193,2.156,199,1.195,218,1.91,220,2.856,230,2.785,233,2.629,246,1.195,266,0.951,321,2.382,393,2.52,452,1.024,464,1.954,465,1.565,466,1.748,467,2.996,468,2.996,470,2.996,471,2.996,472,2.996,474,2.996,476,2.996,478,3.948,479,2.996,480,2.996,482,2.996,483,4.296,484,2.996,486,2.996,487,1.748,488,2.996,489,2.996,490,2.136,491,2.996,492,2.996,493,2.996,495,3.601,496,3.875,497,4.006,503,1.992,504,1.992,506,1.992,507,1.992,508,1.992,512,1.565,513,2.996,514,1.748,515,1.992,516,1.992,520,2.996,521,1.992,522,1.992,524,1.992,525,1.992,526,1.992,527,2.996,528,1.954,529,1.992,530,1.992,531,1.992,567,1.565,568,1.565,569,2.355,571,1.748,576,1.748,593,3.553,594,5.362,595,2.362,596,2.362,597,2.362,598,3.553,599,3.553,600,2.362,601,2.362,602,1.992,603,2.362,604,2.362,605,1.992,606,2.362,607,2.362,608,2.362,609,2.362]],["title/classes/ScopedDestructorSubject.html",[36,0.174,221,2.542]],["body/classes/ScopedDestructorSubject.html",[0,1.191,3,0.313,4,0.313,5,0.313,7,0.365,10,0.965,13,0.356,15,0.028,16,0.313,19,0.465,22,0.753,23,2.45,29,0.644,30,0.965,31,2.158,33,1.11,36,0.185,41,0.019,42,0.019,44,0.778,48,1.471,54,0.434,57,0.477,58,0.434,59,0.392,65,0.434,67,1.371,114,2.505,124,1.649,135,2.911,166,1.585,171,2.198,185,3.985,186,3.583,187,2.705,188,4.664,189,2.011,190,3.083,191,3.083,192,3.083,193,1.95,195,3.083,196,3.083,197,2.705,198,4.578,199,1.85,200,2.705,201,2.423,202,4.095,203,4.839,204,4.449,205,2.423,206,2.705,207,2.011,208,2.705,209,2.705,210,2.705,211,4.083,212,4.083,213,3.083,214,5.21,215,4.874,216,3.583,217,2.911,218,1.815,219,4.083,220,2.911,221,3.583,222,4.083,223,4.083,224,3.083,225,3.083,226,3.083,227,3.083,610,3.656]],["title/interfaces/SelectOptions.html",[0,1.119,611,2.542]],["body/interfaces/SelectOptions.html",[0,1.133,2,1.761,3,0.298,4,0.454,5,0.298,7,0.263,11,0.687,12,2.191,13,0.347,15,0.028,16,0.507,19,0.454,22,0.541,23,1.761,29,0.628,30,1.237,31,1.85,33,1.609,41,0.019,42,0.019,59,0.568,65,0.628,116,1.304,124,1.057,140,2.935,145,1.756,161,3.185,164,1.509,166,2.456,189,1.914,199,2.371,201,3.106,217,2.817,230,1.627,236,1.509,246,1.761,290,2.307,354,4.466,393,2.133,451,2.092,452,1.509,490,2.092,496,3.756,512,3.106,611,4.193,612,2.575,613,4.193,614,4.685,615,5.249,616,6.092,617,4.685,618,3.951,619,3.919,620,4.466,621,3.48,622,4.466,623,3.951,624,2.935,625,4.685,626,2.935,627,2.575,628,2.935,629,3.467,630,3.48,631,2.935,632,2.935,633,2.307,634,2.935,635,2.575,636,2.935,637,2.935,638,3.951,639,3.48,640,4.685,641,3.48,642,5.667,643,3.48,644,2.575,645,2.935,646,2.935,647,2.935,648,2.935,649,2.935,650,2.935,651,2.935,652,2.935,653,2.935,654,2.935,655,2.935,656,2.575,657,2.935,658,2.935,659,3.48,660,3.48,661,3.48]],["title/classes/Set.html",[36,0.174,120,1.607]],["body/classes/Set.html",[3,0.298,4,0.298,5,0.298,7,0.354,8,0.856,9,1.172,10,1.562,13,0.425,14,1.112,15,0.028,16,0.401,19,0.454,20,1.127,24,0.919,29,0.723,35,1.402,36,0.327,41,0.019,42,0.019,44,0.74,50,1.761,54,0.413,57,0.454,58,0.413,59,0.373,60,1.051,61,1.531,62,1.057,65,0.413,67,1.5,69,1.725,70,1.725,108,3.185,109,2.307,110,2.092,111,3.663,112,3.596,114,2.456,115,3.15,116,1.304,117,2.307,118,2.092,119,2.307,120,2.96,121,3.511,122,2.575,123,3.596,124,1.85,125,3.407,126,2.575,127,2.575,662,3.48]],["title/classes/SnapshotObserver.html",[36,0.174,663,2.897]],["body/classes/SnapshotObserver.html",[3,0.307,4,0.307,5,0.307,7,0.406,11,0.708,13,0.235,15,0.028,16,0.307,19,0.307,22,0.743,29,0.567,30,1.515,33,1.089,36,0.181,41,0.019,42,0.019,44,0.763,54,0.638,57,0.624,58,0.567,59,0.513,65,0.425,114,1.555,124,2.062,149,1.792,193,2.31,199,1.815,210,3.538,217,3.449,218,1.792,236,2.719,266,1.926,329,4.032,457,3.169,490,3.879,541,3.98,633,3.169,644,3.538,663,4.032,664,4.837,665,3.025,666,4.782,667,4.782,668,5.29,669,4.032,670,4.782,671,5.379,672,5.379,673,4.782,674,3.587,675,5.737,676,5.379,677,3.587,678,4.782,679,4.782,680,3.587,681,3.025,682,4.535,683,3.587,684,3.587,685,3.587,686,3.587,687,5.379,688,5.379]],["title/classes/StorageSelectors.html",[36,0.174,689,2.897]],["body/classes/StorageSelectors.html",[3,0.319,4,0.319,5,0.319,7,0.281,11,0.735,14,0.925,15,0.028,16,0.469,19,0.319,30,1.696,33,1.488,36,0.277,40,3.142,41,0.019,42,0.019,44,0.792,54,0.581,58,0.441,60,1.085,111,3.499,112,3.481,115,3.251,118,2.237,123,2.694,124,1.488,145,1.836,149,1.836,218,2.373,321,2.291,441,3.247,452,1.613,635,2.754,644,2.754,689,4.131,690,3.721,691,4.899,692,2.945,693,6.209,694,4.899,695,3.721,696,4.131,697,4.131,698,5.417,699,4.899,700,3.721,701,5.82,702,4.899,703,4.899,704,2.754,705,3.721,706,4.899,707,3.721,708,3.721,709,3.721,710,3.721,711,3.721,712,4.899,713,3.138,714,3.721,715,3.721,716,3.721]],["title/injectables/StorageState.html",[464,1.889,704,2.542]],["body/injectables/StorageState.html",[3,0.224,4,0.224,5,0.224,7,0.377,9,0.477,11,0.516,13,0.376,15,0.028,16,0.476,19,0.224,22,0.406,28,1.933,29,0.712,30,1.403,33,1.163,35,2.14,36,0.252,40,2.294,41,0.015,42,0.015,54,0.592,57,0.651,58,0.63,59,0.535,60,1.125,61,0.942,92,1.437,108,3.339,110,3.001,111,2.302,112,3.402,114,2.407,115,3.307,118,2.302,120,2.926,123,2.745,124,1.516,125,3.339,149,1.435,160,2.833,164,1.132,193,2.311,218,1.699,266,1.052,321,2.12,322,1.322,350,2.203,393,2.14,452,1.132,464,2.106,465,1.731,478,3.803,512,1.731,532,3.822,534,1.731,535,2.538,541,1.933,619,1.933,692,2.302,696,4.481,697,4.481,698,4.481,704,3.693,717,2.612,718,3.829,719,3.829,720,3.829,721,5.51,722,3.829,723,2.612,724,3.829,725,3.829,726,3.829,727,2.612,728,3.829,729,3.829,730,3.829,731,3.829,732,2.612,733,3.829,734,4.209,735,3.229,736,3.229,737,3.829,738,3.829,739,2.612,740,3.829,741,2.612,742,2.612,743,2.203,744,2.612,745,3.829,746,3.829,747,2.612,748,2.612,749,2.612,750,2.612,751,2.612,752,4.533,753,4.533,754,2.612,755,4.533,756,2.612,757,2.612,758,2.612,759,3.829,760,2.612,761,2.612,762,2.612,763,2.612,764,2.612,765,2.612,766,2.612]],["title/dependencies.html",[767,2.438,768,3.474]],["body/dependencies.html",[15,0.027,41,0.024,42,0.024,116,2.24,164,2.221,361,4.32,452,2.221,768,5.038,769,5.123,770,5.123,771,5.123,772,5.975,773,5.123,774,5.123,775,5.123]],["title/miscellaneous/enumerations.html",[776,1.352,777,3.474]],["body/miscellaneous/enumerations.html",[11,0.919,15,0.027,41,0.022,42,0.022,45,1.745,46,1.745,49,1.626,61,1.145,86,1.388,88,2.274,89,2.274,93,1.626,94,1.626,95,1.626,101,2.274,110,2.799,112,3.341,115,2.356,124,2.021,377,3.742,528,3.104,568,3.742,656,3.445,692,3.653,735,5.123,736,5.123,776,2.177,777,3.926,778,3.086,779,4.186,780,3.086,781,3.926,782,3.926,783,3.926,784,3.926,785,4.656]],["title/miscellaneous/functions.html",[189,2.266,776,1.352]],["body/miscellaneous/functions.html",[1,2.086,6,1.479,7,0.449,8,0.693,9,1.195,10,1.314,11,0.346,13,0.429,14,1.004,15,0.026,17,2.377,21,2.086,22,0.852,23,2.618,24,1.068,25,1.298,26,2.98,27,2.98,28,4.286,30,1.71,31,2.119,32,1.479,35,0.707,36,0.089,37,1.479,38,1.479,41,0.011,42,0.011,45,0.658,46,0.658,49,0.613,51,0.707,54,0.208,57,0.798,58,0.726,59,0.661,60,0.476,61,0.869,62,0.856,73,0.658,81,0.402,93,0.613,94,0.613,95,0.985,96,0.761,114,2.052,123,0.965,124,1.732,129,1.163,131,2.98,135,1.695,138,2.342,141,2.377,142,1.298,145,1.865,151,1.163,154,1.163,158,2.98,161,1.695,166,0.761,171,1.055,176,0.888,179,2.125,185,1.868,186,1.298,187,2.086,188,1.298,189,1.943,193,1.135,197,2.086,199,0.888,200,1.298,201,1.868,202,2.682,203,2.994,204,1.298,205,1.163,206,1.298,207,0.965,208,1.298,209,1.298,217,2.665,220,1.695,230,1.652,231,2.615,236,1.921,237,1.868,246,0.888,261,1.298,290,3.138,347,4.619,356,1.479,371,4.808,372,2.377,393,1.423,442,2.225,448,1.868,487,2.086,496,4.056,514,1.298,517,2.377,543,1.479,545,1.479,605,2.98,611,2.994,612,1.298,613,2.615,615,3.738,618,1.479,619,2.615,620,2.98,623,1.479,624,1.479,626,2.98,627,1.298,629,3.503,631,2.98,632,2.98,633,1.163,634,2.377,635,1.298,636,1.479,637,1.479,638,1.479,645,2.377,646,1.479,647,1.479,648,1.479,649,2.377,650,2.98,651,1.479,652,3.412,653,4.195,654,1.479,655,1.479,656,1.298,657,1.479,658,1.479,668,2.377,669,2.98,713,1.479,776,0.82,778,1.163,779,2.682,780,1.163,786,2.819,787,2.819,788,2.377,789,2.98,790,2.819,791,5.173,792,2.819,793,2.819,794,4.734,795,2.819,796,3.534,797,3.412,798,3.738,799,3.534,800,2.819,801,3.534,802,2.819,803,1.755,804,2.819,805,2.377,806,2.819,807,2.819,808,3.534,809,2.819,810,1.479,811,1.755,812,1.755,813,2.98,814,1.755,815,1.755,816,1.755,817,6.009,818,1.755,819,4.433,820,1.755,821,4.734,822,1.755,823,2.819,824,2.819,825,2.819,826,2.819,827,4.433,828,4.975,829,1.755,830,1.755,831,1.755,832,1.755,833,2.98,834,5.173,835,1.755,836,1.755,837,1.755,838,2.819,839,1.755,840,1.755,841,1.755,842,1.755,843,1.755,844,1.755,845,3.534,846,1.755,847,1.755,848,1.479,849,1.755,850,2.819,851,1.755,852,1.755,853,1.755,854,1.755,855,1.755,856,2.819,857,1.755,858,1.755,859,1.755,860,1.755,861,3.534,862,2.819,863,1.755,864,3.534,865,1.755,866,1.755,867,1.755,868,1.755,869,1.755,870,1.755,871,2.819,872,1.755,873,1.755,874,1.755,875,1.755,876,1.755,877,2.819,878,1.755,879,2.819,880,1.755,881,1.755,882,2.819,883,1.755,884,1.755,885,1.755,886,1.755,887,1.755,888,1.755,889,1.755,890,1.755,891,1.755,892,1.755,893,1.755,894,1.755,895,1.755,896,1.755,897,1.755,898,2.819,899,1.755,900,1.755,901,1.755,902,1.755,903,1.755,904,2.819,905,2.819,906,1.755,907,1.755,908,1.755]],["title/index.html",[11,0.571,909,2.891,910,2.891]],["body/index.html",[15,0.024,41,0.024,42,0.024,205,3.472,216,3.876,911,6.053,912,5.238,913,5.238,914,6.053,915,5.238,916,6.053,917,6.053,918,5.238]],["title/modules.html",[919,3.917]],["body/modules.html",[15,0.024,41,0.024,42,0.024,919,4.565]],["title/overview.html",[920,3.917]],["body/overview.html",[2,2.671,15,0.024,41,0.024,42,0.024,44,1.123,92,2.902,129,3.498,179,3.173,465,3.498,920,4.45,921,5.278,922,5.278,923,5.278,924,5.278]],["title/properties.html",[12,1.927,767,2.438]],["body/properties.html",[12,2.512,15,0.026,41,0.024,42,0.024,925,5.372,926,5.372]],["title/miscellaneous/typealiases.html",[776,1.352,927,4.12]],["body/miscellaneous/typealiases.html",[2,1.89,9,0.898,11,0.737,13,0.426,15,0.022,18,1.89,31,2.035,35,1.504,41,0.019,42,0.019,45,1.841,46,1.841,49,2.114,51,1.978,52,1.423,53,2.129,61,1.208,81,1.124,88,1.504,89,1.504,93,1.715,94,1.715,95,1.916,96,2.129,97,2.296,115,1.89,145,1.4,189,2.054,230,2.296,237,2.475,374,3.634,393,2.21,440,3.255,442,2.701,444,3.634,449,3.634,458,2.245,466,3.634,475,4.141,478,2.475,509,4.141,511,4.141,565,3.634,566,3.634,567,3.255,570,3.634,594,4.141,612,2.763,613,2.763,622,3.149,628,3.149,629,3.634,692,2.952,721,4.141,734,3.149,743,4.141,776,1.746,778,4.199,779,4.458,780,4.199,781,4.141,782,4.141,783,4.141,784,3.149,805,3.149,813,4.141,833,3.149,848,3.149,928,3.735,929,6.564,930,3.735,931,3.735,932,3.735,933,3.735,934,3.735,935,5.487,936,4.911,937,3.735,938,4.911,939,3.735,940,3.735]],["title/miscellaneous/variables.html",[776,1.352,941,3.474]],["body/miscellaneous/variables.html",[8,1.273,9,1.174,11,0.656,13,0.425,14,0.767,15,0.027,18,2.619,22,0.706,24,1.366,41,0.018,42,0.018,45,1.703,46,1.703,47,2.085,49,1.942,52,1.04,60,0.561,66,1.829,77,1.94,86,1.117,88,1.339,89,1.339,93,1.587,94,1.587,95,1.161,98,1.829,101,1.339,109,2.204,114,2.524,119,2.204,120,1.555,124,1.97,135,1.999,142,2.461,166,2.243,202,2.204,322,3.282,332,3.362,333,3.362,340,3.831,342,2.804,490,1.999,510,3.831,528,1.829,546,2.804,547,3.831,602,3.831,627,2.461,633,2.204,664,2.804,665,3.831,681,2.804,682,3.831,692,1.999,776,1.555,778,3.859,779,4.078,780,3.011,788,2.804,789,3.831,797,2.804,798,3.831,810,2.804,941,2.804,942,3.325,943,4.543,944,4.543,945,5.175,946,5.175,947,3.325,948,3.325,949,3.325,950,3.325,951,6.01,952,3.325,953,6.152,954,3.325,955,3.325,956,3.325,957,3.325,958,3.325,959,3.325,960,3.325,961,3.325,962,3.325,963,3.325,964,3.325,965,5.175,966,3.325,967,3.325,968,3.325,969,3.325,970,4.543,971,4.543,972,3.325,973,3.325,974,3.325,975,4.543,976,3.325,977,3.325,978,3.325,979,5.175,980,3.325,981,3.325,982,3.325,983,3.325,984,3.325,985,3.325]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":160,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{},"injectables/StorageState.html":{}}}],["0.0.1",{"_index":926,"title":{},"body":{"properties.html":{}}}],["1",{"_index":92,"title":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{}},"body":{"injectables/StorageState.html":{},"overview.html":{}}}],["1165545544",{"_index":899,"title":{},"body":{"miscellaneous/functions.html":{}}}],["1199063426",{"_index":900,"title":{},"body":{"miscellaneous/functions.html":{}}}],["15.1.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":923,"title":{},"body":{"overview.html":{}}}],["2",{"_index":921,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":922,"title":{},"body":{"overview.html":{}}}],["3.7.6",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":924,"title":{},"body":{"overview.html":{}}}],["_data",{"_index":292,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["accessors",{"_index":316,"title":{},"body":{"directives/HoverDirective.html":{}}}],["action",{"_index":9,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action('add",{"_index":68,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["action('clear",{"_index":127,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{}}}],["action('delete",{"_index":126,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{}}}],["action('load",{"_index":84,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["action('navigate",{"_index":90,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["action('set",{"_index":122,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{}}}],["action(`[${group",{"_index":34,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["action(add",{"_index":480,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(addfromyaml",{"_index":484,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(addmany",{"_index":476,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(clear",{"_index":722,"title":{},"body":{"injectables/StorageState.html":{}}}],["action(delete",{"_index":726,"title":{},"body":{"injectables/StorageState.html":{}}}],["action(loadfromyaml",{"_index":493,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(loadmarkdown",{"_index":599,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["action(navigate",{"_index":499,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["action(set",{"_index":738,"title":{},"body":{"injectables/StorageState.html":{}}}],["action(type",{"_index":37,"title":{},"body":{"interfaces/ActionConstructor.html":{},"miscellaneous/functions.html":{}}}],["actionconstructor",{"_index":1,"title":{"interfaces/ActionConstructor.html":{}},"body":{"interfaces/ActionConstructor.html":{},"miscellaneous/functions.html":{}}}],["actionfactory",{"_index":841,"title":{},"body":{"miscellaneous/functions.html":{}}}],["actiongroup",{"_index":62,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{},"miscellaneous/functions.html":{}}}],["actiongroup('linkregistry",{"_index":66,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('resourceregistry",{"_index":98,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('storage",{"_index":119,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(group",{"_index":32,"title":{},"body":{"interfaces/ActionConstructor.html":{},"miscellaneous/functions.html":{}}}],["actions",{"_index":834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["actions/actions",{"_index":63,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["actiontyperegistry",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activate",{"_index":383,"title":{},"body":{"directives/LinkDirective.html":{}}}],["activatedroute",{"_index":368,"title":{},"body":{"directives/LinkDirective.html":{}}}],["actual_component",{"_index":184,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["add",{"_index":43,"title":{"classes/Add.html":{},"classes/Add-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["add(id",{"_index":607,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["added",{"_index":497,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addfromyaml",{"_index":79,"title":{"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["addfromyaml(data",{"_index":531,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["additional",{"_index":656,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["addmany",{"_index":74,"title":{"classes/AddMany.html":{},"classes/AddMany-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["addmany(ctx",{"_index":474,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addmany(entries",{"_index":524,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addone",{"_index":470,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addone(ctx",{"_index":479,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["adds",{"_index":25,"title":{},"body":{"interfaces/ActionConstructor.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/functions.html":{}}}],["addyaml",{"_index":471,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addyaml(ctx",{"_index":482,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["alias",{"_index":938,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":928,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":715,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["along",{"_index":271,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["altkey",{"_index":415,"title":{},"body":{"directives/LinkDirective.html":{}}}],["anchor",{"_index":400,"title":{},"body":{"directives/LinkDirective.html":{}}}],["angular",{"_index":381,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["angular/cdk/overlay",{"_index":241,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["angular/cdk/portal",{"_index":243,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["angular/common",{"_index":361,"title":{},"body":{"directives/LinkDirective.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":504,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["angular/core",{"_index":164,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":366,"title":{},"body":{"directives/LinkDirective.html":{}}}],["angular/router",{"_index":370,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["anytext",{"_index":586,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["anytext(state",{"_index":575,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["application",{"_index":249,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["area'].includes(this.tagname",{"_index":402,"title":{},"body":{"directives/LinkDirective.html":{}}}],["args",{"_index":630,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["argument",{"_index":848,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["arguments",{"_index":347,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/functions.html":{}}}],["array",{"_index":833,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["asserts",{"_index":812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assertuniqueactiontype",{"_index":787,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assertuniqueactiontype(type",{"_index":811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["associated",{"_index":215,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["async",{"_index":473,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["attach",{"_index":296,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["attached",{"_index":261,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"miscellaneous/functions.html":{}}}],["attaches",{"_index":222,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["attaching",{"_index":139,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["attr.href",{"_index":336,"title":{},"body":{"directives/LinkDirective.html":{}}}],["attr.rel",{"_index":337,"title":{},"body":{"directives/LinkDirective.html":{}}}],["attr.target",{"_index":338,"title":{},"body":{"directives/LinkDirective.html":{}}}],["attribute",{"_index":345,"title":{},"body":{"directives/LinkDirective.html":{}}}],["automatic",{"_index":824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["automatically",{"_index":650,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["available",{"_index":905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["await",{"_index":537,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["base",{"_index":8,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["baseaction",{"_index":39,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["based",{"_index":356,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/functions.html":{}}}],["before",{"_index":872,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolean",{"_index":354,"title":{},"body":{"directives/LinkDirective.html":{},"interfaces/SelectOptions.html":{}}}],["bottom",{"_index":283,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["bound",{"_index":819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boundargs",{"_index":817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["brand('linkid",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brand('resourceid",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":539,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["browser",{"_index":367,"title":{},"body":{"directives/LinkDirective.html":{}}}],["build",{"_index":867,"title":{},"body":{"miscellaneous/functions.html":{}}}],["built",{"_index":782,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["builtin",{"_index":564,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["builtinresourceentry",{"_index":566,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["button",{"_index":412,"title":{},"body":{"directives/LinkDirective.html":{}}}],["cache",{"_index":859,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cached",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["callback",{"_index":197,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":653,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["care",{"_index":889,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":535,"title":{},"body":{"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/StorageState.html":{}}}],["caveats",{"_index":869,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cb",{"_index":196,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["cdk",{"_index":911,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":640,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["cdr.markforcheck",{"_index":643,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["change",{"_index":619,"title":{},"body":{"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{}}}],["changedetectorref",{"_index":621,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["changes",{"_index":309,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["changes['linkid'].currentvalue",{"_index":410,"title":{},"body":{"directives/LinkDirective.html":{}}}],["child",{"_index":159,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["class",{"_index":36,"title":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LinkRegistrySelectors.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{}},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":44,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LinkRegistrySelectors.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"overview.html":{}}}],["cleanup",{"_index":188,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["clear",{"_index":108,"title":{"classes/Clear.html":{}},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"injectables/StorageState.html":{}}}],["clear(ctx",{"_index":720,"title":{},"body":{"injectables/StorageState.html":{}}}],["clears",{"_index":724,"title":{},"body":{"injectables/StorageState.html":{}}}],["click",{"_index":339,"title":{},"body":{"directives/LinkDirective.html":{}}}],["commands",{"_index":546,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["comment",{"_index":713,"title":{},"body":{"classes/StorageSelectors.html":{},"miscellaneous/functions.html":{}}}],["common",{"_index":26,"title":{},"body":{"interfaces/ActionConstructor.html":{},"miscellaneous/functions.html":{}}}],["complete",{"_index":645,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["completed",{"_index":832,"title":{},"body":{"miscellaneous/functions.html":{}}}],["completes",{"_index":220,"title":{},"body":{"interfaces/DestructorScope.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["completion",{"_index":895,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complex",{"_index":868,"title":{},"body":{"miscellaneous/functions.html":{}}}],["component",{"_index":129,"title":{"components/DestroyHostComponent.html":{}},"body":{"components/DestroyHostComponent.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["component/directive/etc",{"_index":901,"title":{},"body":{"miscellaneous/functions.html":{}}}],["component/directive/pipe",{"_index":143,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["component_template",{"_index":178,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["componentref",{"_index":162,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["components",{"_index":131,"title":{},"body":{"components/DestroyHostComponent.html":{},"miscellaneous/functions.html":{}}}],["configuration",{"_index":614,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["connectionpositionpair",{"_index":239,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["const",{"_index":65,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"miscellaneous/functions.html":{}}}],["constructor(entries",{"_index":106,"title":{},"body":{"classes/AddMany.html":{},"classes/AddMany-1.html":{}}}],["constructor(id",{"_index":50,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["constructor(readonly",{"_index":69,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["constructor(scope",{"_index":223,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["constructor(url",{"_index":557,"title":{},"body":{"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{}}}],["constructor(yaml",{"_index":104,"title":{},"body":{"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{}}}],["container",{"_index":155,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["container.createcomponent(destroyhostcomponent",{"_index":169,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["containing",{"_index":618,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["contains",{"_index":408,"title":{},"body":{"directives/LinkDirective.html":{}}}],["content",{"_index":233,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"injectables/ResourceRegistryState.html":{}}}],["content(content",{"_index":254,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["context",{"_index":230,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["control",{"_index":866,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controlling",{"_index":891,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":759,"title":{},"body":{"injectables/StorageState.html":{}}}],["create",{"_index":21,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"miscellaneous/functions.html":{}}}],["create(container",{"_index":150,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["createa",{"_index":853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createactionfactory",{"_index":790,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createactionfactory(type",{"_index":816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["created",{"_index":268,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["createlinkid",{"_index":792,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid('@@__empty__",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid(id",{"_index":852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createresourceid",{"_index":793,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createresourceid(id",{"_index":855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":23,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctrlkey",{"_index":413,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ctx",{"_index":478,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["ctx.getstate()[id",{"_index":533,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["ctx.patchstate(entries",{"_index":521,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["ctx.setstate",{"_index":764,"title":{},"body":{"injectables/StorageState.html":{}}}],["current",{"_index":448,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/functions.html":{}}}],["custom",{"_index":930,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["customresourceentry",{"_index":565,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["data",{"_index":81,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["data(data",{"_index":263,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["date",{"_index":308,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["decorators",{"_index":321,"title":{},"body":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["default",{"_index":322,"title":{},"body":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":512,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{}}}],["defined",{"_index":54,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{}}}],["delete",{"_index":125,"title":{"classes/Delete.html":{}},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"injectables/StorageState.html":{}}}],["delete(ctx",{"_index":725,"title":{},"body":{"injectables/StorageState.html":{}}}],["deletes",{"_index":728,"title":{},"body":{"injectables/StorageState.html":{}}}],["dependencies",{"_index":768,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{}}}],["destroy",{"_index":140,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/SelectOptions.html":{}}}],["destroy.ts",{"_index":798,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["destroy/destroy",{"_index":136,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["destroy/destructor",{"_index":186,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["destroy/on",{"_index":627,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["destroyed",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["destroyhostcomponent",{"_index":130,"title":{"components/DestroyHostComponent.html":{}},"body":{"components/DestroyHostComponent.html":{}}}],["destructor",{"_index":202,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["destructor_cache",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destructorscope",{"_index":185,"title":{"interfaces/DestructorScope.html":{}},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["detach",{"_index":302,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["detection",{"_index":620,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["determines",{"_index":200,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["directive",{"_index":176,"title":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"miscellaneous/functions.html":{}}}],["directives",{"_index":179,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["disable",{"_index":635,"title":{},"body":{"interfaces/SelectOptions.html":{},"classes/StorageSelectors.html":{},"miscellaneous/functions.html":{}}}],["discriminated",{"_index":932,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["discriminatedunion('type",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispatch",{"_index":371,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/functions.html":{}}}],["dispatch$(type",{"_index":829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dispatch(linkregistryactions.navigate",{"_index":396,"title":{},"body":{"directives/LinkDirective.html":{}}}],["dispatch(type",{"_index":822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dispatchaction",{"_index":794,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dispatches",{"_index":827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dispatchimpl",{"_index":795,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dispatchimpl(actionfactory",{"_index":837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dispatching",{"_index":825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["display",{"_index":147,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["displayed",{"_index":252,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["dom",{"_index":133,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["domsanitizer",{"_index":365,"title":{},"body":{"directives/LinkDirective.html":{}}}],["don't",{"_index":883,"title":{},"body":{"miscellaneous/functions.html":{}}}],["draft[id",{"_index":766,"title":{},"body":{"injectables/StorageState.html":{}}}],["each",{"_index":28,"title":{},"body":{"interfaces/ActionConstructor.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{}}}],["early",{"_index":894,"title":{},"body":{"miscellaneous/functions.html":{}}}],["el",{"_index":170,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["el?.remove",{"_index":173,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["element",{"_index":156,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["elementref",{"_index":244,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["emit",{"_index":871,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emits",{"_index":217,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["emitted",{"_index":633,"title":{},"body":{"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["emitting",{"_index":646,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["empty",{"_index":342,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/variables.html":{}}}],["empty_link",{"_index":340,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":281,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["endhover",{"_index":304,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["entries",{"_index":76,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["entry",{"_index":52,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entry.extras",{"_index":551,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["entry.markdown",{"_index":577,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["entry.rel",{"_index":556,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["entry.target",{"_index":555,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["entry.text",{"_index":579,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["entry?.type",{"_index":463,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["enum",{"_index":785,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":777,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":683,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["err",{"_index":676,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["error",{"_index":490,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["error(`cannot",{"_index":542,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["error(`no",{"_index":750,"title":{},"body":{"injectables/StorageState.html":{}}}],["error(err",{"_index":673,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errorobserver",{"_index":672,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errors",{"_index":678,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errorvalue",{"_index":685,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["eslint",{"_index":708,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["eslint/ban",{"_index":711,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["event",{"_index":295,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["excluding",{"_index":907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["execute",{"_index":918,"title":{},"body":{"index.html":{}}}],["existing",{"_index":544,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["explicitly",{"_index":634,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["export",{"_index":19,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["extends",{"_index":67,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/DestructorScope.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{}}}],["external",{"_index":89,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["external_link_schema",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["externallinkentry",{"_index":509,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["extras",{"_index":547,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":24,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":892,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":208,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["filename",{"_index":483,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["finddestructorscope",{"_index":796,"title":{},"body":{"miscellaneous/functions.html":{}}}],["finds",{"_index":856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findstablekeyobject",{"_index":799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["finished",{"_index":836,"title":{},"body":{"miscellaneous/functions.html":{}}}],["first",{"_index":158,"title":{},"body":{"components/DestroyHostComponent.html":{},"miscellaneous/functions.html":{}}}],["firstdefinedvalue",{"_index":800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firstdefinedvalue(genfn",{"_index":860,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flexibleconnectedto(this.el",{"_index":278,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["found",{"_index":459,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["fragment",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":31,"title":{},"body":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":839,"title":{},"body":{"miscellaneous/functions.html":{}}}],["functions",{"_index":189,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["generated",{"_index":913,"title":{},"body":{"index.html":{}}}],["generator",{"_index":862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["genfn",{"_index":863,"title":{},"body":{"miscellaneous/functions.html":{}}}],["get(url",{"_index":526,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["getentry",{"_index":460,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["gethref(link",{"_index":433,"title":{},"body":{"directives/LinkDirective.html":{}}}],["gets",{"_index":457,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/SnapshotObserver.html":{}}}],["getstorage",{"_index":719,"title":{},"body":{"injectables/StorageState.html":{}}}],["getstorage(id",{"_index":731,"title":{},"body":{"injectables/StorageState.html":{}}}],["getting",{"_index":909,"title":{"index.html":{}},"body":{}}],["given",{"_index":698,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["global",{"_index":593,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["globally",{"_index":469,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["group",{"_index":27,"title":{},"body":{"interfaces/ActionConstructor.html":{},"miscellaneous/functions.html":{}}}],["guarantees",{"_index":870,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handle",{"_index":293,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["handler's",{"_index":939,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handlers",{"_index":934,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handles",{"_index":675,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["helper",{"_index":937,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["holding",{"_index":718,"title":{},"body":{"injectables/StorageState.html":{}}}],["hook",{"_index":875,"title":{},"body":{"miscellaneous/functions.html":{}}}],["host",{"_index":146,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["host.component.ts",{"_index":137,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["host.component.ts:19",{"_index":152,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["hostbinding",{"_index":362,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbinding('attr.href",{"_index":357,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbinding('attr.rel",{"_index":358,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbinding('attr.target",{"_index":359,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbindings",{"_index":335,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostlistener",{"_index":245,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["hostlistener('click",{"_index":353,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostlistener('mouseout",{"_index":303,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hostlistener('mouseover",{"_index":297,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hostlisteners",{"_index":313,"title":{},"body":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["hover",{"_index":232,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hovercontext",{"_index":228,"title":{"interfaces/HoverContext.html":{}},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hoverdirective",{"_index":180,"title":{"directives/HoverDirective.html":{}},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hra",{"_index":116,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"dependencies.html":{}}}],["hrahover",{"_index":250,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hrahover]'},{'name",{"_index":181,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["hrahoverdata",{"_index":312,"title":{},"body":{"directives/HoverDirective.html":{}}}],["hralink",{"_index":183,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{}}}],["href",{"_index":331,"title":{},"body":{"directives/LinkDirective.html":{}}}],["html",{"_index":175,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["htmlelement",{"_index":380,"title":{},"body":{"directives/LinkDirective.html":{}}}],["http",{"_index":513,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["httpclient",{"_index":503,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["https://github.com/angular/angular/issues/10185",{"_index":896,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://github.com/angular/angular/issues/10185#issuecomment",{"_index":898,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":60,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["id,key",{"_index":699,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["identifier",{"_index":61,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["identity",{"_index":801,"title":{},"body":{"miscellaneous/functions.html":{}}}],["identity(value",{"_index":846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ids",{"_index":854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ignore",{"_index":714,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["immediately",{"_index":219,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["immer",{"_index":742,"title":{},"body":{"injectables/StorageState.html":{}}}],["implement",{"_index":840,"title":{},"body":{"miscellaneous/functions.html":{}}}],["implements",{"_index":329,"title":{},"body":{"directives/LinkDirective.html":{},"classes/SnapshotObserver.html":{}}}],["implicit",{"_index":235,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["important",{"_index":885,"title":{},"body":{"miscellaneous/functions.html":{}}}],["improved",{"_index":489,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["increasechangecount(ctx",{"_index":763,"title":{},"body":{"injectables/StorageState.html":{}}}],["increases",{"_index":758,"title":{},"body":{"injectables/StorageState.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":681,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["initial",{"_index":818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inject",{"_index":246,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["inject(activatedroute",{"_index":385,"title":{},"body":{"directives/LinkDirective.html":{}}}],["inject(changedetectorref",{"_index":641,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["inject(domsanitizer",{"_index":391,"title":{},"body":{"directives/LinkDirective.html":{}}}],["inject(elementref).nativeelement",{"_index":267,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["inject(httpclient",{"_index":516,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["inject(locationstrategy",{"_index":388,"title":{},"body":{"directives/LinkDirective.html":{}}}],["inject(ngzone",{"_index":519,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["inject(overlay",{"_index":277,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["inject(overlay).create",{"_index":275,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["inject(router",{"_index":382,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["inject(store",{"_index":659,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["inject(viewcontainerref",{"_index":289,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["injectable",{"_index":464,"title":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{}},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{}}}],["injectables",{"_index":465,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{},"overview.html":{}}}],["injectdestroy",{"_index":626,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["injected",{"_index":865,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injection",{"_index":652,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["injectors/.../destructor",{"_index":803,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectors/.../dispatch.ts",{"_index":791,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectors/.../on",{"_index":797,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["injectors/.../select",{"_index":807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectors/.../select.ts",{"_index":805,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["injectors/.../snapshot",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectors/src/lib/dispatch/dispatch.ts",{"_index":815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectors/src/lib/on",{"_index":135,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["injectors/src/lib/select/select",{"_index":902,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectors/src/lib/select/select.ts",{"_index":612,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["injectors/src/lib/select/snapshot",{"_index":664,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":517,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/functions.html":{}}}],["input",{"_index":247,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["input('hrahover",{"_index":253,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["input('hrahoverdata",{"_index":262,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["input('hralink",{"_index":378,"title":{},"body":{"directives/LinkDirective.html":{}}}],["inputs",{"_index":311,"title":{},"body":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["inserted",{"_index":157,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["inside",{"_index":153,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["instance",{"_index":831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instances",{"_index":826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"interfaces/ResourceRegistryQuery.html":{},"interfaces/SelectOptions.html":{}},"body":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"interfaces/ResourceRegistryQuery.html":{},"interfaces/SelectOptions.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["internal",{"_index":88,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["internal_link_schema",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internallinkentry",{"_index":374,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["isanchorelement",{"_index":401,"title":{},"body":{"directives/LinkDirective.html":{}}}],["isdestructorscopelike",{"_index":802,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isdestructorscopelike(obj",{"_index":209,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["isobject",{"_index":211,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["items",{"_index":702,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["js",{"_index":506,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["keeping",{"_index":467,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["key",{"_index":123,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{}}}],["key,value",{"_index":696,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["key:string",{"_index":752,"title":{},"body":{"injectables/StorageState.html":{}}}],["know",{"_index":399,"title":{},"body":{"directives/LinkDirective.html":{}}}],["latest",{"_index":668,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["legend",{"_index":174,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["length",{"_index":693,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["level",{"_index":878,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":912,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":141,"title":{},"body":{"components/DestroyHostComponent.html":{},"miscellaneous/functions.html":{}}}],["lifetime",{"_index":649,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["line",{"_index":709,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["link",{"_index":49,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["link'].includes(this.tagname",{"_index":405,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.extras",{"_index":436,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.rel",{"_index":428,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.target",{"_index":429,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.type",{"_index":417,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.url",{"_index":427,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link_registry_schema",{"_index":510,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["link_registry_schema.parse(data",{"_index":523,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["linkdirective",{"_index":182,"title":{"directives/LinkDirective.html":{}},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{}}}],["linkentry",{"_index":53,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/typealiases.html":{}}}],["linkid",{"_index":51,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["linkid:'${id",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkregistry",{"_index":511,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistryactions",{"_index":375,"title":{},"body":{"directives/LinkDirective.html":{}}}],["linkregistrycontext",{"_index":475,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistrymodel",{"_index":444,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistryquery",{"_index":449,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistryselectors",{"_index":376,"title":{"classes/LinkRegistrySelectors.html":{}},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{}}}],["linkregistrystate",{"_index":453,"title":{"injectables/LinkRegistryState.html":{}},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{}}}],["links",{"_index":72,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["linktype",{"_index":377,"title":{},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/enumerations.html":{}}}],["linktype.external",{"_index":418,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["linktype.internal",{"_index":536,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["list",{"_index":730,"title":{},"body":{"injectables/StorageState.html":{}}}],["load",{"_index":495,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["load(yaml",{"_index":522,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["loaded",{"_index":102,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadfromyaml",{"_index":83,"title":{"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["loading",{"_index":515,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadmarkdown",{"_index":103,"title":{"classes/LoadMarkdown.html":{}},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadmarkdown(ctx",{"_index":598,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["loads",{"_index":85,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["loadyaml",{"_index":472,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadyaml(ctx",{"_index":492,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["local",{"_index":736,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["localstorage",{"_index":748,"title":{},"body":{"injectables/StorageState.html":{}}}],["location",{"_index":386,"title":{},"body":{"directives/LinkDirective.html":{}}}],["locationstrategy",{"_index":360,"title":{},"body":{"directives/LinkDirective.html":{}}}],["locationstrategy.prepareexternalurl(router.serializeurl(urltree",{"_index":438,"title":{},"body":{"directives/LinkDirective.html":{}}}],["maintain",{"_index":890,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manage",{"_index":733,"title":{},"body":{"injectables/StorageState.html":{}}}],["managing",{"_index":747,"title":{},"body":{"injectables/StorageState.html":{}}}],["manipulate",{"_index":887,"title":{},"body":{"miscellaneous/functions.html":{}}}],["many",{"_index":75,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["map",{"_index":507,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["map((action",{"_index":608,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["map((markdown",{"_index":606,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["maps",{"_index":851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mark",{"_index":617,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["markdown",{"_index":101,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["markdown(state",{"_index":580,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["markfn",{"_index":642,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["markforcheck",{"_index":804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["markforcheck(options",{"_index":638,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["marking",{"_index":636,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["marks",{"_index":631,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":42,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":491,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["metadata",{"_index":144,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["metakey",{"_index":416,"title":{},"body":{"directives/LinkDirective.html":{}}}],["method",{"_index":121,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"injectables/LinkRegistryState.html":{},"classes/Set.html":{}}}],["methods",{"_index":149,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["miscellaneous",{"_index":776,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":936,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["module",{"_index":877,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":919,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monotypeoperatorfunction",{"_index":623,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["mostly",{"_index":897,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mouse",{"_index":294,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["mouseevent",{"_index":352,"title":{},"body":{"directives/LinkDirective.html":{}}}],["mouseout",{"_index":314,"title":{},"body":{"directives/HoverDirective.html":{}}}],["mouseover",{"_index":315,"title":{},"body":{"directives/HoverDirective.html":{}}}],["multiple",{"_index":71,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["name",{"_index":58,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{}}}],["native",{"_index":379,"title":{},"body":{"directives/LinkDirective.html":{}}}],["navigate",{"_index":87,"title":{"classes/Navigate.html":{}},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["navigate(ctx",{"_index":498,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["navigatetoexternal(entry",{"_index":553,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["navigatetointernal(entry",{"_index":548,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["nearest",{"_index":857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["never",{"_index":880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":22,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":163,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["next",{"_index":644,"title":{},"body":{"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{}}}],["next(value",{"_index":679,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["nextobserver",{"_index":671,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["ngonchanges(changes",{"_index":409,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ngondestroy",{"_index":874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ngxs/store",{"_index":452,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{}}}],["ngzone",{"_index":505,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["no_error_sentinel",{"_index":684,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["no_error_sentinel_obj",{"_index":682,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":543,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/functions.html":{}}}],["none",{"_index":148,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["notifyonchange",{"_index":616,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["null",{"_index":171,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["nullable",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":701,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["nx",{"_index":914,"title":{},"body":{"index.html":{}}}],["obj",{"_index":204,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["obj.ondestroy",{"_index":213,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["obje",{"_index":761,"title":{},"body":{"injectables/StorageState.html":{}}}],["object",{"_index":114,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":734,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["obs",{"_index":850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["observable",{"_index":496,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["observable's",{"_index":648,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["observables",{"_index":142,"title":{},"body":{"components/DestroyHostComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["observer",{"_index":666,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["observer.ts",{"_index":665,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["observer.ts:18",{"_index":677,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["observer.ts:30",{"_index":680,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["observer.ts:38",{"_index":674,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["once",{"_index":73,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"miscellaneous/functions.html":{}}}],["onchanges",{"_index":330,"title":{},"body":{"directives/LinkDirective.html":{}}}],["onclick",{"_index":334,"title":{},"body":{"directives/LinkDirective.html":{}}}],["onclick(event",{"_index":351,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ondestroy",{"_index":191,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["ondestroy(cb",{"_index":192,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["onsameurlnavigation",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operation",{"_index":760,"title":{},"body":{"injectables/StorageState.html":{}}}],["operations",{"_index":886,"title":{},"body":{"miscellaneous/functions.html":{}}}],["operator",{"_index":637,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":59,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":458,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["options",{"_index":615,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["options?.notifyonchange",{"_index":639,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["or(z.object",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["originx",{"_index":280,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["originy",{"_index":282,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["otherwise",{"_index":207,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":301,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["output",{"_index":843,"title":{},"body":{"miscellaneous/functions.html":{}}}],["over",{"_index":270,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlay",{"_index":240,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref",{"_index":274,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref.attach(portal",{"_index":300,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref.detach",{"_index":305,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref.hasattached",{"_index":299,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayx",{"_index":284,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayy",{"_index":285,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overview",{"_index":920,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":56,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["package",{"_index":767,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pair",{"_index":697,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["param",{"_index":29,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["param1",{"_index":532,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/StorageState.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":486,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["partial",{"_index":77,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"miscellaneous/variables.html":{}}}],["parts",{"_index":647,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["passed",{"_index":231,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"miscellaneous/functions.html":{}}}],["passthrough",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peer",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["performed",{"_index":350,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/StorageState.html":{}}}],["pipe",{"_index":605,"title":{},"body":{"injectables/ResourceRegistryState.html":{},"miscellaneous/functions.html":{}}}],["pipe(map((data",{"_index":529,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["pipe(takeuntil(injectdestroy",{"_index":661,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["pipeactioninstance",{"_index":806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipeactioninstance(action",{"_index":849,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipes",{"_index":904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pointed",{"_index":729,"title":{},"body":{"injectables/StorageState.html":{}}}],["portal",{"_index":260,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["position",{"_index":272,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["positionstrategy",{"_index":276,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["preserve",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preservefragment",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":266,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["produce",{"_index":741,"title":{},"body":{"injectables/StorageState.html":{}}}],["produce((draft",{"_index":765,"title":{},"body":{"injectables/StorageState.html":{}}}],["promise",{"_index":502,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"interfaces/ActionConstructor.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"interfaces/ResourceRegistryQuery.html":{},"interfaces/SelectOptions.html":{},"properties.html":{}}}],["property",{"_index":291,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"interfaces/ResourceRegistryQuery.html":{}}}],["provided",{"_index":154,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"miscellaneous/functions.html":{}}}],["queries",{"_index":447,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["query",{"_index":442,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["query(state",{"_index":443,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["querying",{"_index":392,"title":{},"body":{"directives/LinkDirective.html":{}}}],["querylink",{"_index":394,"title":{},"body":{"directives/LinkDirective.html":{}}}],["queryparams",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryparamshandling",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["r",{"_index":844,"title":{},"body":{"miscellaneous/functions.html":{}}}],["raw",{"_index":100,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["readonly",{"_index":20,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{}}}],["record",{"_index":940,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ref",{"_index":168,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["ref.location.nativeelement",{"_index":172,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["reference",{"_index":265,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["register",{"_index":195,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["registeractiontype",{"_index":17,"title":{},"body":{"interfaces/ActionConstructor.html":{},"miscellaneous/functions.html":{}}}],["registeractiontype(type",{"_index":38,"title":{},"body":{"interfaces/ActionConstructor.html":{},"miscellaneous/functions.html":{}}}],["registered",{"_index":190,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["registers",{"_index":814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["registry",{"_index":18,"title":{},"body":{"interfaces/ActionConstructor.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["registry.actions",{"_index":508,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["registry.actions.ts",{"_index":47,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"miscellaneous/variables.html":{}}}],["registry.actions.ts:20",{"_index":107,"title":{},"body":{"classes/AddMany.html":{},"classes/AddMany-1.html":{}}}],["registry.actions.ts:31",{"_index":105,"title":{},"body":{"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{}}}],["registry.actions.ts:42",{"_index":558,"title":{},"body":{"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{}}}],["registry.actions.ts:52",{"_index":560,"title":{},"body":{"classes/Navigate.html":{}}}],["registry.actions.ts:53",{"_index":559,"title":{},"body":{"classes/LoadMarkdown.html":{}}}],["registry.actions.ts:8",{"_index":55,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{}}}],["registry.model",{"_index":64,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["registry.model.ts",{"_index":779,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["registry.selectors.ts",{"_index":440,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["registry.selectors.ts:16",{"_index":446,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["registry.selectors.ts:32",{"_index":590,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:45",{"_index":588,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:67",{"_index":589,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:77",{"_index":591,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:87",{"_index":592,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.state",{"_index":454,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["registry.state.ts",{"_index":466,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["registry.state.ts:30",{"_index":596,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:40",{"_index":595,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:46",{"_index":481,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:51",{"_index":597,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:56",{"_index":477,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:64",{"_index":601,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:67",{"_index":485,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:77",{"_index":600,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:80",{"_index":494,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:93",{"_index":500,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.ts",{"_index":789,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["registry/link",{"_index":46,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["registry/resource",{"_index":94,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["regular",{"_index":873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rel",{"_index":332,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["relativeto",{"_index":437,"title":{},"body":{"directives/LinkDirective.html":{}}}],["rely",{"_index":884,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remote",{"_index":82,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["replaceurl",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaysubject",{"_index":198,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["res",{"_index":906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resource",{"_index":95,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resource_registry_schema",{"_index":602,"title":{},"body":{"injectables/ResourceRegistryState.html":{},"miscellaneous/variables.html":{}}}],["resource_registry_schema.parse(data",{"_index":603,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["resourceentry",{"_index":97,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceid",{"_index":96,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["resourceid:'${id",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourceregistry",{"_index":571,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["resourceregistrycontext",{"_index":594,"title":{},"body":{"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistrydataquery",{"_index":570,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistrymodel",{"_index":567,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistryquery",{"_index":561,"title":{"interfaces/ResourceRegistryQuery.html":{}},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["resourceregistryselectors",{"_index":572,"title":{"classes/ResourceRegistrySelectors.html":{}},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["resourceregistryselectors.getentry(state",{"_index":574,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["resourceregistrystate",{"_index":569,"title":{"injectables/ResourceRegistryState.html":{}},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["resources",{"_index":99,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["resourcetype",{"_index":568,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{}}}],["resourcetype.markdown",{"_index":576,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["resourcetype.markdown)?.markdown",{"_index":581,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["resourcetype.text",{"_index":578,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["resourcetype.text)?.text",{"_index":583,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["resourcetype.url)?.url",{"_index":585,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["responsetype",{"_index":527,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["result",{"_index":893,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resulthandler",{"_index":838,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":41,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":691,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["return",{"_index":33,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["returned",{"_index":861,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returning",{"_index":847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":30,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":876,"title":{},"body":{"miscellaneous/functions.html":{}}}],["route",{"_index":384,"title":{},"body":{"directives/LinkDirective.html":{}}}],["router",{"_index":369,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["router.createurltree(link.commands",{"_index":435,"title":{},"body":{"directives/LinkDirective.html":{}}}],["routing",{"_index":328,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["run",{"_index":216,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"index.html":{}}}],["running",{"_index":915,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":199,"title":{},"body":{"interfaces/DestructorScope.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["same",{"_index":864,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sanitize",{"_index":389,"title":{},"body":{"directives/LinkDirective.html":{}}}],["sanitized",{"_index":432,"title":{},"body":{"directives/LinkDirective.html":{}}}],["sanitizer",{"_index":390,"title":{},"body":{"directives/LinkDirective.html":{}}}],["sanitizer.sanitize(urlsecuritycontext",{"_index":439,"title":{},"body":{"directives/LinkDirective.html":{}}}],["sanitizes",{"_index":431,"title":{},"body":{"directives/LinkDirective.html":{}}}],["schema",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":203,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["scope.ondestroy",{"_index":225,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["scopeddestructorsubject",{"_index":221,"title":{"classes/ScopedDestructorSubject.html":{}},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["security",{"_index":403,"title":{},"body":{"directives/LinkDirective.html":{}}}],["securitycontext",{"_index":363,"title":{},"body":{"directives/LinkDirective.html":{}}}],["securitycontext.resource_url",{"_index":406,"title":{},"body":{"directives/LinkDirective.html":{}}}],["securitycontext.url",{"_index":407,"title":{},"body":{"directives/LinkDirective.html":{}}}],["seems",{"_index":206,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["select",{"_index":613,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["select$(selector",{"_index":658,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["select(selector",{"_index":660,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["selected",{"_index":657,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["selection",{"_index":654,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["selectoptions",{"_index":611,"title":{"interfaces/SelectOptions.html":{}},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["selector",{"_index":145,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"interfaces/SelectOptions.html":{},"classes/StorageSelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["selector(['linkregistrystate",{"_index":445,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["selector(['resourceregistrystate",{"_index":587,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selector(['storagestate",{"_index":694,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["selector([linkregistrystate",{"_index":455,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["selector([resourceregistrystate",{"_index":573,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["selector([storagestate",{"_index":706,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["selectors",{"_index":441,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/StorageSelectors.html":{}}}],["selectquerysnapshot",{"_index":372,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/functions.html":{}}}],["selectquerysnapshot(linkregistryselectors.query",{"_index":395,"title":{},"body":{"directives/LinkDirective.html":{}}}],["selectquerysnapshot(selector",{"_index":903,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selects",{"_index":842,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectsnapshot",{"_index":809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectsnapshot(selector",{"_index":908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service",{"_index":514,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session",{"_index":735,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["sessionstorage",{"_index":749,"title":{},"body":{"injectables/StorageState.html":{}}}],["set",{"_index":120,"title":{"classes/Set.html":{}},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["set(ctx",{"_index":737,"title":{},"body":{"injectables/StorageState.html":{}}}],["setcontent(content",{"_index":325,"title":{},"body":{"directives/HoverDirective.html":{}}}],["setdata(data",{"_index":326,"title":{},"body":{"directives/HoverDirective.html":{}}}],["sets",{"_index":740,"title":{},"body":{"injectables/StorageState.html":{}}}],["setter",{"_index":251,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["setting",{"_index":273,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["shiftkey",{"_index":414,"title":{},"body":{"directives/LinkDirective.html":{}}}],["signature",{"_index":563,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{}}}],["simplechanges",{"_index":364,"title":{},"body":{"directives/LinkDirective.html":{}}}],["single",{"_index":48,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"interfaces/DestructorScope.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{}}}],["skiplocationchange",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snapshot",{"_index":669,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["snapshot.ts",{"_index":808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["snapshotobserver",{"_index":663,"title":{"classes/SnapshotObserver.html":{}},"body":{"classes/SnapshotObserver.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["specified",{"_index":35,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/hover/hover.directive.ts",{"_index":229,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:19",{"_index":317,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:26",{"_index":318,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:38",{"_index":323,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:58",{"_index":324,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:62",{"_index":320,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:71",{"_index":319,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/link/link.directive.ts",{"_index":327,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:32",{"_index":341,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:34",{"_index":343,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:36",{"_index":344,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:38",{"_index":346,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:82",{"_index":348,"title":{},"body":{"directives/LinkDirective.html":{}}}],["stable",{"_index":858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["standalone",{"_index":165,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["start",{"_index":287,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["started",{"_index":910,"title":{"index.html":{}},"body":{}}],["starthover",{"_index":298,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["state",{"_index":393,"title":{},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["state/.../action",{"_index":788,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state/.../actions.ts",{"_index":786,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state/.../link",{"_index":778,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/.../resource",{"_index":780,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/.../storage.actions.ts",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/.../storage.model.ts",{"_index":781,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state/src/actions/action",{"_index":810,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state/src/actions/actions.ts",{"_index":6,"title":{},"body":{"interfaces/ActionConstructor.html":{},"miscellaneous/functions.html":{}}}],["state/src/link",{"_index":45,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/src/resource",{"_index":93,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/src/storage/storage.actions.ts",{"_index":109,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["state/src/storage/storage.actions.ts:10",{"_index":662,"title":{},"body":{"classes/Set.html":{}}}],["state/src/storage/storage.actions.ts:24",{"_index":128,"title":{},"body":{"classes/Delete.html":{}}}],["state/src/storage/storage.actions.ts:37",{"_index":113,"title":{},"body":{"classes/Clear.html":{}}}],["state/src/storage/storage.model.ts",{"_index":784,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state/src/storage/storage.selectors.ts",{"_index":690,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["state/src/storage/storage.selectors.ts:13",{"_index":695,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["state/src/storage/storage.selectors.ts:23",{"_index":700,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["state/src/storage/storage.state.ts",{"_index":717,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:27",{"_index":732,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:45",{"_index":739,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:55",{"_index":727,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:65",{"_index":723,"title":{},"body":{"injectables/StorageState.html":{}}}],["state[id",{"_index":461,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["statecontext",{"_index":935,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stateselector",{"_index":629,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["statetoken",{"_index":622,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["static",{"_index":40,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storage",{"_index":115,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["storage.actions",{"_index":744,"title":{},"body":{"injectables/StorageState.html":{}}}],["storage.model",{"_index":118,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storage.state",{"_index":705,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["storagecontext",{"_index":721,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["storageid",{"_index":112,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["storageid.local",{"_index":745,"title":{},"body":{"injectables/StorageState.html":{}}}],["storageid.session",{"_index":746,"title":{},"body":{"injectables/StorageState.html":{}}}],["storagemodel",{"_index":743,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["storageselectors",{"_index":689,"title":{"classes/StorageSelectors.html":{}},"body":{"classes/StorageSelectors.html":{}}}],["storagestate",{"_index":704,"title":{"injectables/StorageState.html":{}},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storagestate.getstorage(id).clear",{"_index":757,"title":{},"body":{"injectables/StorageState.html":{}}}],["storagestate.getstorage(id).getitem(key",{"_index":707,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["storagestate.getstorage(id).length",{"_index":716,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["storagestate.getstorage(id).removeitem(key",{"_index":756,"title":{},"body":{"injectables/StorageState.html":{}}}],["storagestate.getstorage(id).setitem(key",{"_index":754,"title":{},"body":{"injectables/StorageState.html":{}}}],["store",{"_index":290,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["stored",{"_index":111,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storing",{"_index":667,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["strategy",{"_index":387,"title":{},"body":{"directives/LinkDirective.html":{}}}],["stream",{"_index":670,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":628,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":132,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["subject",{"_index":214,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["subject.ts",{"_index":187,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{}}}],["subject.ts:27",{"_index":610,"title":{},"body":{"classes/ScopedDestructorSubject.html":{}}}],["subject.ts:9",{"_index":194,"title":{},"body":{"interfaces/DestructorScope.html":{}}}],["such",{"_index":751,"title":{},"body":{"injectables/StorageState.html":{}}}],["super",{"_index":70,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["super(1",{"_index":224,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["supplied",{"_index":703,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["support",{"_index":783,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["switch",{"_index":534,"title":{},"body":{"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/StorageState.html":{}}}],["t",{"_index":236,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["tagname",{"_index":397,"title":{},"body":{"directives/LinkDirective.html":{}}}],["take",{"_index":888,"title":{},"body":{"miscellaneous/functions.html":{}}}],["takeuntil",{"_index":624,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["taking",{"_index":845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tap",{"_index":625,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["target",{"_index":333,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":167,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templateportal",{"_index":242,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templateportal(content",{"_index":256,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templateref",{"_index":248,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templates",{"_index":234,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["test",{"_index":205,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["tests",{"_index":917,"title":{},"body":{"index.html":{}}}],["text",{"_index":528,"title":{},"body":{"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["text(state",{"_index":582,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["this._data",{"_index":258,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.addmany(ctx",{"_index":520,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["this.addone(ctx",{"_index":609,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["this.addyaml(ctx",{"_index":530,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["this.complete",{"_index":227,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["this.el.tagname.tolowercase",{"_index":398,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.errorvalue",{"_index":687,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.getentry(state",{"_index":456,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["this.gethref(link",{"_index":430,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.href",{"_index":424,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.http",{"_index":525,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["this.http.get(url",{"_index":604,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["this.increasechangecount(ctx",{"_index":755,"title":{},"body":{"injectables/StorageState.html":{}}}],["this.link",{"_index":422,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.navigate(linkid",{"_index":419,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.navigatetoexternal(entry",{"_index":540,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["this.navigatetointernal(entry",{"_index":538,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["this.next",{"_index":226,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["this.portal",{"_index":255,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.portal.context",{"_index":264,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.querylink(this.linkid",{"_index":423,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.rel",{"_index":426,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.router.navigate(entry.commands",{"_index":550,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["this.target",{"_index":425,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.updatecontent",{"_index":259,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.updatelink",{"_index":411,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.value",{"_index":688,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.viewcontainerref",{"_index":257,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.zone.run",{"_index":549,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["throw",{"_index":541,"title":{},"body":{"injectables/LinkRegistryState.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["throws",{"_index":686,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["tied",{"_index":651,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["time",{"_index":828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["token",{"_index":655,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["top",{"_index":286,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["track",{"_index":468,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["transform((id",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":134,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{}}}],["triggers",{"_index":349,"title":{},"body":{"directives/LinkDirective.html":{}}}],["true",{"_index":166,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":355,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ts",{"_index":712,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["tslib",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":927,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typematches",{"_index":462,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["typeof",{"_index":212,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["types",{"_index":692,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":710,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["ui/cdk/injectors",{"_index":373,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ui/cdk/state",{"_index":117,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"classes/Set.html":{}}}],["ui/theming",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["ui/utils",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["ui/utils/types",{"_index":451,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"interfaces/SelectOptions.html":{}}}],["unamed",{"_index":562,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{}}}],["unchanged",{"_index":835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefined",{"_index":218,"title":{},"body":{"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["union",{"_index":933,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unionmember",{"_index":450,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["unique",{"_index":813,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["unit",{"_index":916,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":210,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"classes/SnapshotObserver.html":{}}}],["unless",{"_index":881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unparsed",{"_index":80,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["unqiue",{"_index":91,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["up",{"_index":307,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["updatecontent",{"_index":310,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["updated",{"_index":762,"title":{},"body":{"injectables/StorageState.html":{}}}],["updatelink",{"_index":421,"title":{},"body":{"directives/LinkDirective.html":{}}}],["updates",{"_index":420,"title":{},"body":{"directives/LinkDirective.html":{}}}],["updation",{"_index":306,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["url",{"_index":86,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["url(state",{"_index":584,"title":{},"body":{"interfaces/ResourceRegistryQuery.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["url/filename",{"_index":488,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["urls",{"_index":501,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["urlsecuritycontext",{"_index":404,"title":{},"body":{"directives/LinkDirective.html":{}}}],["urltree",{"_index":434,"title":{},"body":{"directives/LinkDirective.html":{}}}],["use",{"_index":238,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["used",{"_index":138,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":237,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["userhovers",{"_index":269,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["using",{"_index":545,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":124,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value:string",{"_index":753,"title":{},"body":{"injectables/StorageState.html":{}}}],["values",{"_index":110,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":177,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["variables",{"_index":941,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":925,"title":{},"body":{"properties.html":{}}}],["view",{"_index":161,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["viewcontainerref",{"_index":151,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"miscellaneous/functions.html":{}}}],["void",{"_index":193,"title":{},"body":{"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/functions.html":{}}}],["weakmap",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whenever",{"_index":632,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":201,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["window",{"_index":552,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["window.open(entry.url",{"_index":554,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["without",{"_index":931,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["withpositions",{"_index":279,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["withpush(true",{"_index":288,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["wrapper",{"_index":830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wraps",{"_index":823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yaml",{"_index":78,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["yes",{"_index":487,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.any().array",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.boolean",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.discriminatedunion('type",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.enum(['merge",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":929,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["z.literal('reload",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(linktype.external",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(linktype.internal",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(resourcetype.markdown",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(resourcetype.text",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(resourcetype.url",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.object",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.record",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.record(z.any()).nullable",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().default('noopener",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone",{"_index":518,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionConstructor.html":{"url":"interfaces/ActionConstructor.html","title":"interface - ActionConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/actions/actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Base action constructor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Action type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { registerActionType } from './action-type-registry';\n\n/** Base action type */\nexport interface Action {\n  /** Action type */\n  readonly type: string;\n}\n\n/** Base action constructor */\nexport interface ActionConstructor {\n  /** Action type */\n  readonly type: string;\n\n  /** Create a new action */\n  new (): Action;\n}\n\n/**\n * Creates an action factory that adds a common group string to each action type\n * @param group Common action type group\n * @returns An action factory\n */\nexport function ActionGroup(group: string): (type: string) => ActionConstructor {\n  return (type) => Action(`[${group}] ${type}`);\n}\n\n/**\n * Creates a new base action with a specified type\n * @param type Action type\n * @returns A base action class\n */\nexport function Action(type: string): ActionConstructor {\n  registerActionType(type);\n  return class BaseAction {\n    static readonly type = type;\n    readonly type = type;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Add.html":{"url":"classes/Add.html","title":"class - Add","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Add\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add a single link\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: LinkId, entry: LinkEntry)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Add or overwrite a single link\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        LinkId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                link identifier\n\n                                                        \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        LinkEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                link entry\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   */\n  constructor(readonly id: LinkId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Add-1.html":{"url":"classes/Add-1.html","title":"class - Add-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Add\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add a single resource\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: ResourceId, entry: ResourceEntry)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Add or overwrite a single resource\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        ResourceId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource identifier\n\n                                                        \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        ResourceEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource entry\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddFromYaml.html":{"url":"classes/AddFromYaml.html","title":"class - AddFromYaml","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add entries from yaml file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(yaml: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:31\n                            \n                        \n\n                \n                    \n                            Add links from unparsed yaml\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        yaml\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unparsed yaml data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   */\n  constructor(readonly id: LinkId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddFromYaml-1.html":{"url":"classes/AddFromYaml-1.html","title":"class - AddFromYaml-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add resources from raw yaml data\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(yaml: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:31\n                            \n                        \n\n                \n                    \n                            Add resources from unparsed yaml\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        yaml\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unparsed yaml data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMany.html":{"url":"classes/AddMany.html","title":"class - AddMany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add multiple links at once\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entries: Partial>)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Add or overwrite multiple links\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    Partial>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                New links\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   */\n  constructor(readonly id: LinkId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMany-1.html":{"url":"classes/AddMany-1.html","title":"class - AddMany-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add multiple resources at once\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entries: Partial>)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Add or overwrite multiple resources\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    Partial>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                New resources\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clear.html":{"url":"classes/Clear.html","title":"class - Clear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clear the values stored in the specified StorageId\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: StorageId)\n                    \n                \n                        \n                            \n                                Defined in state/src/storage/storage.actions.ts:37\n                            \n                        \n\n                \n                    \n                            constructor class for clear action object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        StorageId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: StorageId - Storage identifier\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { StorageId } from './storage.model';\n\n/** Base action factory */\nconst Action = ActionGroup('Storage');\n\n/**\n * Class Set Action for set method\n */\nexport class Set extends Action('Set') {\n  /**\n   * constructor class for Set action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   * @param value - type: string - value to be stored with the key\n   */\n  constructor(readonly id: StorageId, readonly key: string, readonly value: string) {\n    super();\n  }\n}\n/**\n *  Class Delete Action for delete method\n */\nexport class Delete extends Action('Delete') {\n  /**\n   * constructor class for Delete action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   */\n  constructor(readonly id: StorageId, readonly key: string) {\n    super();\n  }\n}\n/**\n * Clear the values stored in the specified StorageId\n */\nexport class Clear extends Action('Clear') {\n  /**\n   * constructor class for clear action object\n   * @param id - type: StorageId - Storage identifier\n   */\n  constructor(readonly id: StorageId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Delete.html":{"url":"classes/Delete.html","title":"class - Delete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Delete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                 Class Delete Action for delete method\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: StorageId, key: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/storage/storage.actions.ts:24\n                            \n                        \n\n                \n                    \n                            constructor class for Delete action object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        StorageId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: StorageId - Storage identifier\n\n\n                                                        \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: string - Key to be stored in the storage identifier\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { StorageId } from './storage.model';\n\n/** Base action factory */\nconst Action = ActionGroup('Storage');\n\n/**\n * Class Set Action for set method\n */\nexport class Set extends Action('Set') {\n  /**\n   * constructor class for Set action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   * @param value - type: string - value to be stored with the key\n   */\n  constructor(readonly id: StorageId, readonly key: string, readonly value: string) {\n    super();\n  }\n}\n/**\n *  Class Delete Action for delete method\n */\nexport class Delete extends Action('Delete') {\n  /**\n   * constructor class for Delete action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   */\n  constructor(readonly id: StorageId, readonly key: string) {\n    super();\n  }\n}\n/**\n * Clear the values stored in the specified StorageId\n */\nexport class Clear extends Action('Clear') {\n  /**\n   * constructor class for clear action object\n   * @param id - type: StorageId - Storage identifier\n   */\n  constructor(readonly id: StorageId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DestroyHostComponent.html":{"url":"components/DestroyHostComponent.html","title":"component - DestroyHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DestroyHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    injectors/src/lib/on-destroy/destroy-host.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component used when attaching destroy lifecycle observables to a component/directive/pipe\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hra-destroy-host\n            \n\n\n            \n                styles\n                :host { display: none }\n            \n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(container: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/on-destroy/destroy-host.component.ts:19\n                \n            \n\n\n            \n                \n                    Creates a new DestroyHostComponent inside the provided container.\nThe element is inserted as the first child (index '0') in the container.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        View in which to create the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentRef\n\n                    \n                    \n                        The ComponentRef of the newly inserted element\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ComponentRef, ViewContainerRef } from '@angular/core';\n\n/**\n * Component used when attaching destroy lifecycle observables to a component/directive/pipe\n */\n@Component({\n  selector: 'hra-destroy-host',\n  standalone: true,\n  template: '',\n  styles: [':host { display: none }'],\n})\nexport class DestroyHostComponent {\n  /**\n   * Creates a new DestroyHostComponent inside the provided container.\n   * The element is inserted as the first child (index '0') in the container.\n   * @param container View in which to create the element\n   * @returns The ComponentRef of the newly inserted element\n   */\n  static create(container: ViewContainerRef): ComponentRef {\n    const ref = container.createComponent(DestroyHostComponent, { index: 0 });\n    const el: Element | null = ref.location.nativeElement;\n\n    el?.remove();\n    return ref;\n  }\n}\n\n    \n\n\n    \n            :host { display: none }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DestroyHostComponent', 'selector': 'hra-destroy-host'}];\n    var DIRECTIVES = [{'name': 'HoverDirective', 'selector': '[hraHover]'},{'name': 'LinkDirective', 'selector': '[hraLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'DestroyHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DestructorScope.html":{"url":"interfaces/DestructorScope.html","title":"interface - DestructorScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DestructorScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/on-destroy/destructor-subject.ts\n        \n\n\n            \n                Description\n            \n            \n                Object on which cleanup functions can be registered\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        onDestroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDestroy\n                        \n                    \n                \n            \n            \n                \nonDestroy(cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/on-destroy/destructor-subject.ts:9\n                \n            \n\n\n            \n                \n                    Register a cleanup function\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cleanup callback function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup functions can be registered */\nexport interface DestructorScope {\n  /**\n   * Register a cleanup function\n   * @param cb Cleanup callback function\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Determines whether an object is destructor scope like\n * @param obj Value to test\n * @returns true if the object seems to be a destructor scope, otherwise false\n */\nexport function isDestructorScopeLike(obj: unknown): obj is DestructorScope {\n  const isObject = typeof obj === 'object' && obj !== null;\n  return isObject && 'onDestroy' in obj && typeof obj.onDestroy === 'function';\n}\n\n/**\n * A subject type that is associated with a destructor scope.\n * When the cleanup function is run the subject emits a single\n * undefined value and immediately completes\n */\nexport class ScopedDestructorSubject extends ReplaySubject {\n  /**\n   * Creates a new subject and attaches cleanup to the destructor scope\n   * @param scope Associated scope\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HoverContext.html":{"url":"interfaces/HoverContext.html","title":"interface - HoverContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HoverContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/hover/hover.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Context passed to hover content templates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $implicit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $implicit:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data provided by the user for use inside the content template\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ConnectionPositionPair, Overlay } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Directive, ElementRef, HostListener, inject, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**  Context passed to hover content templates */\nexport interface HoverContext {\n  /** Data provided by the user for use inside the content template */\n  $implicit: T;\n}\n\n/** Hover overlay directive to be used across the application */\n@Directive({\n  selector: '[hraHover]',\n  standalone: true,\n})\nexport class HoverDirective {\n  /**  Setter for the content to be displayed in the overlay */\n  @Input('hraHover')\n  set content(content: TemplateRef>) {\n    this.portal = new TemplatePortal(content, this.viewContainerRef, this._data);\n    this.updateContent();\n  }\n\n  /** Setter for the context that is to be displayed in the portal attached to the overlay */\n  @Input('hraHoverData')\n  set data(data: T) {\n    this._data = { $implicit: data };\n    if (this.portal) {\n      this.portal.context = this._data;\n      this.updateContent();\n    }\n  }\n\n  /**  Reference to the element that the directive is attached to */\n  private readonly el: Element = inject(ElementRef).nativeElement;\n\n  /**  Reference to the overlay that is created when the userhovers over the element along with its position setting */\n  readonly overlayRef = inject(Overlay).create({\n    positionStrategy: inject(Overlay)\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n      ])\n      .withPush(true),\n  });\n\n  /** Reference view container that the directive is attached to */\n  private readonly viewContainerRef = inject(ViewContainerRef);\n\n  /** Store the data that is passed into the data input property */\n  private _data?: HoverContext;\n\n  /** Portal that is created to display the overlay */\n  portal?: TemplatePortal>;\n\n  /** Function to handle the mouse over event to attach the portal and display the hover content */\n  @HostListener('mouseover')\n  startHover(): void {\n    const { overlayRef, portal } = this;\n    if (!overlayRef.hasAttached() && portal) {\n      overlayRef.attach(portal);\n    }\n  }\n\n  /** Function to handle the mouse out event to detach the portal  */\n  @HostListener('mouseout')\n  endHover(): void {\n    const { overlayRef } = this;\n    if (overlayRef.hasAttached()) {\n      overlayRef.detach();\n    }\n  }\n\n  /** Function to handle the updation of overlay with up to date content when the input changes */\n  private updateContent(): void {\n    const { overlayRef, portal } = this;\n    if (overlayRef.hasAttached() && portal) {\n      overlayRef.detach();\n      overlayRef.attach(portal);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HoverDirective.html":{"url":"directives/HoverDirective.html","title":"directive - HoverDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  HoverDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/hover/hover.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Hover overlay directive to be used across the application\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [hraHover]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                overlayRef\n                            \n                            \n                                    Optional\n                                portal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endHover\n                            \n                            \n                                startHover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hraHover\n                            \n                            \n                                hraHoverData\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseout\n                            \n                            \n                                mouseover\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        hraHover\n                    \n                \n                \n                    \n                        Type :         TemplateRef>\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/hover/hover.directive.ts:19\n                            \n                        \n                \n                    \n                        Setter for the content to be displayed in the overlay\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hraHoverData\n                    \n                \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/hover/hover.directive.ts:26\n                            \n                        \n                \n                    \n                        Setter for the context that is to be displayed in the portal attached to the overlay\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mouseout\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:71\n                \n            \n\n\n            \n                \n                    Function to handle the mouse out event to detach the portal\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseover\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:62\n                \n            \n\n\n            \n                \n                    Function to handle the mouse over event to attach the portal and display the hover content\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        endHover\n                        \n                    \n                \n            \n            \n                \nendHover()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseout')\n                \n            \n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:71\n                \n            \n\n\n            \n                \n                    Function to handle the mouse out event to detach the portal\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startHover\n                        \n                    \n                \n            \n            \n                \nstartHover()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseover')\n                \n            \n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:62\n                \n            \n\n\n            \n                \n                    Function to handle the mouse over event to attach the portal and display the hover content\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        overlayRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Overlay).create({\n    positionStrategy: inject(Overlay)\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n      ])\n      .withPush(true),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/lib/hover/hover.directive.ts:38\n                        \n                    \n\n            \n                \n                    Reference to the overlay that is created when the userhovers over the element along with its position setting\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        portal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplatePortal>\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/hover/hover.directive.ts:58\n                        \n                    \n\n            \n                \n                    Portal that is created to display the overlay\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n\n                \n                    \n                        setcontent(content: TemplateRef>)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/hover/hover.directive.ts:19\n                                \n                            \n                    \n                        \n                                Setter for the content to be displayed in the overlay\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            content\n                                                    \n                                                            \n                                                                            TemplateRef>\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data: T)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/hover/hover.directive.ts:26\n                                \n                            \n                    \n                        \n                                Setter for the context that is to be displayed in the portal attached to the overlay\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { ConnectionPositionPair, Overlay } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Directive, ElementRef, HostListener, inject, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**  Context passed to hover content templates */\nexport interface HoverContext {\n  /** Data provided by the user for use inside the content template */\n  $implicit: T;\n}\n\n/** Hover overlay directive to be used across the application */\n@Directive({\n  selector: '[hraHover]',\n  standalone: true,\n})\nexport class HoverDirective {\n  /**  Setter for the content to be displayed in the overlay */\n  @Input('hraHover')\n  set content(content: TemplateRef>) {\n    this.portal = new TemplatePortal(content, this.viewContainerRef, this._data);\n    this.updateContent();\n  }\n\n  /** Setter for the context that is to be displayed in the portal attached to the overlay */\n  @Input('hraHoverData')\n  set data(data: T) {\n    this._data = { $implicit: data };\n    if (this.portal) {\n      this.portal.context = this._data;\n      this.updateContent();\n    }\n  }\n\n  /**  Reference to the element that the directive is attached to */\n  private readonly el: Element = inject(ElementRef).nativeElement;\n\n  /**  Reference to the overlay that is created when the userhovers over the element along with its position setting */\n  readonly overlayRef = inject(Overlay).create({\n    positionStrategy: inject(Overlay)\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n      ])\n      .withPush(true),\n  });\n\n  /** Reference view container that the directive is attached to */\n  private readonly viewContainerRef = inject(ViewContainerRef);\n\n  /** Store the data that is passed into the data input property */\n  private _data?: HoverContext;\n\n  /** Portal that is created to display the overlay */\n  portal?: TemplatePortal>;\n\n  /** Function to handle the mouse over event to attach the portal and display the hover content */\n  @HostListener('mouseover')\n  startHover(): void {\n    const { overlayRef, portal } = this;\n    if (!overlayRef.hasAttached() && portal) {\n      overlayRef.attach(portal);\n    }\n  }\n\n  /** Function to handle the mouse out event to detach the portal  */\n  @HostListener('mouseout')\n  endHover(): void {\n    const { overlayRef } = this;\n    if (overlayRef.hasAttached()) {\n      overlayRef.detach();\n    }\n  }\n\n  /** Function to handle the updation of overlay with up to date content when the input changes */\n  private updateContent(): void {\n    const { overlayRef, portal } = this;\n    if (overlayRef.hasAttached() && portal) {\n      overlayRef.detach();\n      overlayRef.attach(portal);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LinkDirective.html":{"url":"directives/LinkDirective.html","title":"directive - LinkDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LinkDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/link/link.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Link Directive for routing\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [hraLink]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                href\n                            \n                            \n                                    Optional\n                                rel\n                            \n                            \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hraLink\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                attr.href\n                            \n                            \n                                attr.rel\n                            \n                            \n                                attr.target\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        hraLink\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : EMPTY_LINK\n                    \n                \n                        \n                            \n                                    Defined in src/lib/link/link.directive.ts:32\n                            \n                        \n                \n                    \n                        linkId with empty string as default value\n\n                    \n                \n            \n        \n\n\n            \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        attr.href\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:34\n                        \n                    \n\n            \n                \n                    href of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attr.rel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:36\n                        \n                    \n\n            \n                \n                    rel attribute of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attr.target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:38\n                        \n                    \n\n            \n                \n                    target attribute of the element\n\n                \n            \n\n        \n    \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/lib/link/link.directive.ts:82\n                \n            \n\n\n            \n                \n                    Triggers when a click action is performed on the element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        type of event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/lib/link/link.directive.ts:82\n                \n            \n\n\n            \n                \n                    Triggers when a click action is performed on the element\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        type of event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true/false based on entry and element\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        href\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('attr.href')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:34\n                        \n                    \n\n            \n                \n                    href of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        rel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('attr.rel')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:36\n                        \n                    \n\n            \n                \n                    rel attribute of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('attr.target')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:38\n                        \n                    \n\n            \n                \n                    target attribute of the element\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n    \n        import { LocationStrategy } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnChanges,\n  SecurityContext,\n  SimpleChanges,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { dispatch, selectQuerySnapshot } from '@hra-ui/cdk/injectors';\nimport {\n  EMPTY_LINK,\n  InternalLinkEntry,\n  LinkEntry,\n  LinkRegistryActions,\n  LinkRegistrySelectors,\n  LinkType,\n} from '@hra-ui/cdk/state';\n\n/** Link Directive for routing */\n@Directive({\n  selector: '[hraLink]',\n  standalone: true,\n})\nexport class LinkDirective implements OnChanges {\n  /** linkId with empty string as default value */\n  @Input('hraLink') linkId = EMPTY_LINK;\n  /** href of the element */\n  @HostBinding('attr.href') href?: string;\n  /** rel attribute of the element */\n  @HostBinding('attr.rel') rel?: string;\n  /** target attribute of the element */\n  @HostBinding('attr.target') target?: string;\n\n  /** Native Element */\n  private readonly el: HTMLElement = inject(ElementRef).nativeElement;\n  /** Angular router */\n  private readonly router = inject(Router);\n  /** Activate route */\n  private readonly route = inject(ActivatedRoute, { optional: true });\n  /** Location strategy */\n  private readonly locationStrategy = inject(LocationStrategy);\n  /** DomSanitizer to sanitize the url */\n  private readonly sanitizer = inject(DomSanitizer);\n  /** Selector for querying the link registry state */\n  private readonly queryLink = selectQuerySnapshot(LinkRegistrySelectors.query);\n  /** Dispatch action to navigate to a url */\n  private readonly navigate = dispatch(LinkRegistryActions.Navigate);\n  /** tagName from Native Element */\n  private readonly tagName = this.el.tagName.toLowerCase();\n  /** to know if the element is an anchor element */\n  private readonly isAnchorElement = ['a', 'area'].includes(this.tagName);\n  /** url security context */\n  private readonly urlSecurityContext = ['base', 'link'].includes(this.tagName)\n    ? SecurityContext.RESOURCE_URL\n    : SecurityContext.URL;\n\n  /** Link Entry */\n  private link?: LinkEntry;\n\n  /**\n   * triggers when linkId changes\n   * @param changes contains changes of inputs\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['linkId'].currentValue !== EMPTY_LINK) {\n      this.updateLink();\n    }\n  }\n\n  /**\n   * Triggers when a click action is performed on the element\n   * @param event type of event\n   * @returns true/false based on entry and element\n   */\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): boolean {\n    const { link, linkId, isAnchorElement } = this;\n    if (!link) {\n      return true;\n    }\n\n    if (isAnchorElement) {\n      const { button, ctrlKey, shiftKey, altKey, metaKey } = event;\n      if (link.type === LinkType.External) {\n        return true;\n      }\n      if (button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {\n        return true;\n      }\n    }\n\n    this.navigate(linkId);\n    return !isAnchorElement;\n  }\n\n  /**\n   * Updates link when linkId changes\n   */\n  private updateLink(): void {\n    const link = (this.link = this.queryLink(this.linkId));\n    this.href = undefined;\n    this.target = undefined;\n    this.rel = undefined;\n    if (link) {\n      if (link.type === LinkType.External) {\n        this.href = link.url;\n        this.rel = link.rel;\n        this.target = link.target;\n      } else {\n        this.href = this.getHref(link) ?? undefined;\n      }\n    }\n  }\n\n  /**\n   * Creates a url tree and sanitizes the url\n   * @param link Internal link entry\n   * @returns A sanitized url string\n   */\n  private getHref(link: InternalLinkEntry): string | null {\n    const { router, route, locationStrategy, sanitizer, urlSecurityContext } = this;\n    const urlTree = router.createUrlTree(link.commands, {\n      ...link.extras,\n      relativeTo: route,\n    });\n    const url = locationStrategy.prepareExternalUrl(router.serializeUrl(urlTree));\n    return sanitizer.sanitize(urlSecurityContext, url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkRegistrySelectors.html":{"url":"classes/LinkRegistrySelectors.html","title":"class - LinkRegistrySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkRegistrySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for Link Registry\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        query\n                        \n                    \n                \n            \n            \n                \n                    \n                    query(state: LinkRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['LinkRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.selectors.ts:16\n                \n            \n\n\n            \n                \n                    Queries for a link entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                LinkRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LinkRegistryQuery\n\n                    \n                    \n                        link query function\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UnionMember } from '@hra-ui/utils/types';\nimport { Selector } from '@ngxs/store';\nimport { LinkEntry, LinkId, LinkRegistryModel, LinkType } from './link-registry.model';\nimport { LinkRegistryQuery, LinkRegistryState } from './link-registry.state';\n\n/**\n * Selectors for Link Registry\n */\nexport class LinkRegistrySelectors {\n  /**\n   * Queries for a link entry\n   * @param state Current state\n   * @returns link query function\n   */\n  @Selector([LinkRegistryState])\n  static query(state: LinkRegistryModel): LinkRegistryQuery {\n    return (id, type) => this.getEntry(state, id, type);\n  }\n\n  /**\n   * Gets a link entry by id and optionally type\n   * @param state link registry state\n   * @param id Entry id\n   * @param type Optional entry type\n   * @returns The entry if found, undefined otherwise\n   */\n  private static getEntry(\n    state: LinkRegistryModel,\n    id: LinkId,\n    type?: T\n  ): UnionMember | undefined {\n    const entry = state[id] as UnionMember;\n    const typeMatches = type === undefined || entry?.type === type;\n    return typeMatches ? entry : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LinkRegistryState.html":{"url":"injectables/LinkRegistryState.html","title":"injectable - LinkRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LinkRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State for keeping track of links globally\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMany\n                            \n                            \n                                addOne\n                            \n                            \n                                addYaml\n                            \n                            \n                                loadYaml\n                            \n                            \n                                    Async\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMany\n                        \n                    \n                \n            \n            \n                \naddMany(ctx: LinkRegistryContext, undefined: AddMany)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddMany)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:56\n                \n            \n\n\n            \n                \n                    Add multiple entries\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddMany\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOne\n                        \n                    \n                \n            \n            \n                \naddOne(ctx: LinkRegistryContext, undefined: Add)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Add)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:46\n                \n            \n\n\n            \n                \n                    Add a single entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                Add\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addYaml\n                        \n                    \n                \n            \n            \n                \naddYaml(ctx: LinkRegistryContext, undefined: AddFromYaml, filename?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:67\n                \n            \n\n\n            \n                \n                    Parse and add entries from yaml\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional url/filename from which the data was loaded (for improved error messages)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYaml\n                        \n                    \n                \n            \n            \n                \nloadYaml(ctx: LinkRegistryContext, undefined: LoadFromYaml)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LoadFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:80\n                \n            \n\n\n            \n                \n                    Load and add entries from an external yaml file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                LoadFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that completes when the entries has been added\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        navigate\n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(ctx: LinkRegistryContext, undefined: Navigate)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Navigate)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:93\n                \n            \n\n\n            \n                \n                    Navigate to Internal or External urls from id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                Navigate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UnionMember } from '@hra-ui/utils/types';\nimport { Action, State } from '@ngxs/store';\nimport { load } from 'js-yaml';\nimport { map, Observable } from 'rxjs';\nimport { Add, AddFromYaml, AddMany, LoadFromYaml, Navigate } from './link-registry.actions';\nimport {\n  ExternalLinkEntry,\n  InternalLinkEntry,\n  LinkEntry,\n  LinkId,\n  LinkRegistryContext,\n  LinkRegistryModel,\n  LinkType,\n  LINK_REGISTRY_SCHEMA,\n} from './link-registry.model';\n\n/** Query function for link entry optionally with type specified */\nexport type LinkRegistryQuery = (\n  id: LinkId,\n  type?: T\n) => UnionMember | undefined;\n\n/** State for keeping track of links globally */\n@State({\n  name: 'linkRegistry',\n  defaults: {},\n})\n@Injectable()\nexport class LinkRegistryState {\n  /** Http service for link loading */\n  private readonly http = inject(HttpClient);\n  /** Injects angular router */\n  private readonly router = inject(Router);\n  /** Injects ngZone for routing */\n  private readonly zone = inject(NgZone);\n\n  /**\n   * Add a single entry\n   * @param ctx State context\n   * @param action Action with id and entry to add\n   */\n  @Action(Add)\n  addOne(ctx: LinkRegistryContext, { id, entry }: Add): void {\n    this.addMany(ctx, new AddMany({ [id]: entry }));\n  }\n\n  /**\n   * Add multiple entries\n   * @param ctx State context\n   * @param action Action with entries to add\n   */\n  @Action(AddMany)\n  addMany(ctx: LinkRegistryContext, { entries }: AddMany): void {\n    ctx.patchState(entries);\n  }\n\n  /**\n   * Parse and add entries from yaml\n   * @param ctx State context\n   * @param action Action with raw yaml data\n   * @param filename Optional url/filename from which the data was loaded (for improved error messages)\n   */\n  @Action(AddFromYaml)\n  addYaml(ctx: LinkRegistryContext, { yaml }: AddFromYaml, filename?: string): void {\n    const data = load(yaml, { filename });\n    const entries = LINK_REGISTRY_SCHEMA.parse(data);\n    this.addMany(ctx, new AddMany(entries));\n  }\n\n  /**\n   * Load and add entries from an external yaml file\n   * @param ctx State context\n   * @param action Action with the external file url\n   * @returns An observable that completes when the entries has been added\n   */\n  @Action(LoadFromYaml)\n  loadYaml(ctx: LinkRegistryContext, { url }: LoadFromYaml): Observable {\n    return this.http\n      .get(url, { responseType: 'text' })\n      .pipe(map((data) => this.addYaml(ctx, new AddFromYaml(data), url)));\n  }\n\n  /**\n   * Navigate to Internal or External urls from id\n   * @param ctx State context\n   * @param param1 Navigate action with link id\n   * @returns A promise\n   */\n  @Action(Navigate)\n  async navigate(ctx: LinkRegistryContext, { id }: Navigate): Promise {\n    const entry = ctx.getState()[id];\n    switch (entry?.type) {\n      case LinkType.Internal:\n        await this.navigateToInternal(entry);\n        break;\n\n      case LinkType.External:\n        this.navigateToExternal(entry);\n        break;\n\n      default:\n        throw new Error(`Cannot navigate to non-existing link '${id}'`);\n    }\n  }\n\n  /**\n   * Method to navigate to an internal link using Angular router\n   * @param entry Internal Link Entry with commands and extras\n   */\n  private async navigateToInternal(entry: InternalLinkEntry): Promise {\n    await this.zone.run(() => this.router.navigate(entry.commands, entry.extras));\n  }\n\n  /**\n   * Method to navigate to an external link using window\n   * @param entry External link entry with url, target, and rel\n   */\n  private navigateToExternal(entry: ExternalLinkEntry): void {\n    window.open(entry.url, entry.target, entry.rel);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadFromYaml.html":{"url":"classes/LoadFromYaml.html","title":"class - LoadFromYaml","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add links from a remote yaml file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:42\n                            \n                        \n\n                \n                    \n                            Loads a remote yaml file and add links\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Remote yaml file url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   */\n  constructor(readonly id: LinkId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadFromYaml-1.html":{"url":"classes/LoadFromYaml-1.html","title":"class - LoadFromYaml-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add resources from a remote yaml file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:42\n                            \n                        \n\n                \n                    \n                            Loads a remote yaml file and add resources\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Remote yaml file url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMarkdown.html":{"url":"classes/LoadMarkdown.html","title":"class - LoadMarkdown","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMarkdown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add a markdown resource with data loaded from a remote file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: ResourceId, url: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:53\n                            \n                        \n\n                \n                    \n                            Loads a remote markdown file and add a resource\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        ResourceId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource id\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Remote markdown file url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Navigate.html":{"url":"classes/Navigate.html","title":"class - Navigate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Navigate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Navigate to an Internal or external url from Link id\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: LinkId)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:52\n                            \n                        \n\n                \n                    \n                            navigate to a link\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        LinkId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                unqiue identifier of link\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   */\n  constructor(readonly id: LinkId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceRegistryQuery.html":{"url":"interfaces/ResourceRegistryQuery.html","title":"interface - ResourceRegistryQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResourceRegistryQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Query function for resource entry optionally with type specified\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [id: ResourceId, type: T]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     UnionMember | undefined\n\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Get a resource entry with builtin type\n\n                                \n                            \n                        \n                    \n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [id: ResourceId, type: string]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     CustomResourceEntry | undefined\n\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Get a resource entry of any type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { UnionMember } from '@hra-ui/utils/types';\nimport { Selector } from '@ngxs/store';\nimport {\n  BuiltinResourceEntry,\n  CustomResourceEntry,\n  ResourceEntry,\n  ResourceId,\n  ResourceRegistryModel,\n  ResourceType,\n} from './resource-registry.model';\nimport { ResourceRegistryState } from './resource-registry.state';\n\n/** Query function for resource entry optionally with type specified */\nexport interface ResourceRegistryQuery {\n  /** Get a resource entry with builtin type */\n  (id: ResourceId, type: T): UnionMember | undefined;\n  /** Get a resource entry of any type */\n  (id: ResourceId, type?: string): CustomResourceEntry | undefined;\n}\n\n/** Query function for resource data */\nexport type ResourceRegistryDataQuery = (id: ResourceId) => T | undefined;\n\n/** Selectors for ResourceRegistry */\nexport class ResourceRegistrySelectors {\n  /**\n   * Queries for a resource entry\n   * @param state Current state\n   * @returns Resource query function\n   */\n  @Selector([ResourceRegistryState])\n  static query(state: ResourceRegistryModel): ResourceRegistryQuery {\n    return (id: ResourceId, type?: ResourceType | string) => {\n      const entry = ResourceRegistrySelectors.getEntry(state, id, type);\n      return entry as BuiltinResourceEntry;\n    };\n  }\n\n  /**\n   * Query for any text data\n   * @param state Current state\n   * @returns Text data query function\n   */\n  @Selector([ResourceRegistryState])\n  static anyText(state: ResourceRegistryModel): ResourceRegistryDataQuery {\n    return (id) => {\n      const entry = ResourceRegistrySelectors.getEntry(state, id);\n      switch (entry?.type) {\n        case ResourceType.Markdown:\n          return entry.markdown as string;\n\n        case ResourceType.Text:\n          return entry.text as string;\n\n        default:\n          return undefined;\n      }\n    };\n  }\n\n  /**\n   * Query for markdown data\n   * @param state Current state\n   * @returns Markdown data query function\n   */\n  @Selector([ResourceRegistryState])\n  static markdown(state: ResourceRegistryModel): ResourceRegistryDataQuery {\n    return (id) => ResourceRegistrySelectors.getEntry(state, id, ResourceType.Markdown)?.markdown;\n  }\n\n  /**\n   * Query for text data\n   * @param state Current state\n   * @returns Text data query function\n   */\n  @Selector([ResourceRegistryState])\n  static text(state: ResourceRegistryModel): ResourceRegistryDataQuery {\n    return (id) => ResourceRegistrySelectors.getEntry(state, id, ResourceType.Text)?.text;\n  }\n\n  /**\n   * Query for an url\n   * @param state Current state\n   * @returns Url query function\n   */\n  @Selector([ResourceRegistryState])\n  static url(state: ResourceRegistryModel): ResourceRegistryDataQuery {\n    return (id) => ResourceRegistrySelectors.getEntry(state, id, ResourceType.Url)?.url;\n  }\n\n  /**\n   * Gets a resource entry by id and optionally type\n   * @param state Resource registry state\n   * @param id Entry id\n   * @param type Optional entry type\n   * @returns The entry if found, undefined otherwise\n   */\n  private static getEntry(\n    state: ResourceRegistryModel,\n    id: ResourceId,\n    type?: T\n  ): UnionMember | undefined {\n    const entry = state[id] as UnionMember;\n    const typeMatches = type === undefined || entry?.type === type;\n    return typeMatches ? entry : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceRegistrySelectors.html":{"url":"classes/ResourceRegistrySelectors.html","title":"class - ResourceRegistrySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceRegistrySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for ResourceRegistry\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                anyText\n                            \n                            \n                                    Static\n                                markdown\n                            \n                            \n                                    Static\n                                query\n                            \n                            \n                                    Static\n                                text\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        anyText\n                        \n                    \n                \n            \n            \n                \n                    \n                    anyText(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:45\n                \n            \n\n\n            \n                \n                    Query for any text data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResourceRegistryDataQuery\n\n                    \n                    \n                        Text data query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        markdown\n                        \n                    \n                \n            \n            \n                \n                    \n                    markdown(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:67\n                \n            \n\n\n            \n                \n                    Query for markdown data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResourceRegistryDataQuery\n\n                    \n                    \n                        Markdown data query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        query\n                        \n                    \n                \n            \n            \n                \n                    \n                    query(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:32\n                \n            \n\n\n            \n                \n                    Queries for a resource entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResourceRegistryQuery\n\n                    \n                    \n                        Resource query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        text\n                        \n                    \n                \n            \n            \n                \n                    \n                    text(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:77\n                \n            \n\n\n            \n                \n                    Query for text data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResourceRegistryDataQuery\n\n                    \n                    \n                        Text data query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:87\n                \n            \n\n\n            \n                \n                    Query for an url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResourceRegistryDataQuery\n\n                    \n                    \n                        Url query function\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UnionMember } from '@hra-ui/utils/types';\nimport { Selector } from '@ngxs/store';\nimport {\n  BuiltinResourceEntry,\n  CustomResourceEntry,\n  ResourceEntry,\n  ResourceId,\n  ResourceRegistryModel,\n  ResourceType,\n} from './resource-registry.model';\nimport { ResourceRegistryState } from './resource-registry.state';\n\n/** Query function for resource entry optionally with type specified */\nexport interface ResourceRegistryQuery {\n  /** Get a resource entry with builtin type */\n  (id: ResourceId, type: T): UnionMember | undefined;\n  /** Get a resource entry of any type */\n  (id: ResourceId, type?: string): CustomResourceEntry | undefined;\n}\n\n/** Query function for resource data */\nexport type ResourceRegistryDataQuery = (id: ResourceId) => T | undefined;\n\n/** Selectors for ResourceRegistry */\nexport class ResourceRegistrySelectors {\n  /**\n   * Queries for a resource entry\n   * @param state Current state\n   * @returns Resource query function\n   */\n  @Selector([ResourceRegistryState])\n  static query(state: ResourceRegistryModel): ResourceRegistryQuery {\n    return (id: ResourceId, type?: ResourceType | string) => {\n      const entry = ResourceRegistrySelectors.getEntry(state, id, type);\n      return entry as BuiltinResourceEntry;\n    };\n  }\n\n  /**\n   * Query for any text data\n   * @param state Current state\n   * @returns Text data query function\n   */\n  @Selector([ResourceRegistryState])\n  static anyText(state: ResourceRegistryModel): ResourceRegistryDataQuery {\n    return (id) => {\n      const entry = ResourceRegistrySelectors.getEntry(state, id);\n      switch (entry?.type) {\n        case ResourceType.Markdown:\n          return entry.markdown as string;\n\n        case ResourceType.Text:\n          return entry.text as string;\n\n        default:\n          return undefined;\n      }\n    };\n  }\n\n  /**\n   * Query for markdown data\n   * @param state Current state\n   * @returns Markdown data query function\n   */\n  @Selector([ResourceRegistryState])\n  static markdown(state: ResourceRegistryModel): ResourceRegistryDataQuery {\n    return (id) => ResourceRegistrySelectors.getEntry(state, id, ResourceType.Markdown)?.markdown;\n  }\n\n  /**\n   * Query for text data\n   * @param state Current state\n   * @returns Text data query function\n   */\n  @Selector([ResourceRegistryState])\n  static text(state: ResourceRegistryModel): ResourceRegistryDataQuery {\n    return (id) => ResourceRegistrySelectors.getEntry(state, id, ResourceType.Text)?.text;\n  }\n\n  /**\n   * Query for an url\n   * @param state Current state\n   * @returns Url query function\n   */\n  @Selector([ResourceRegistryState])\n  static url(state: ResourceRegistryModel): ResourceRegistryDataQuery {\n    return (id) => ResourceRegistrySelectors.getEntry(state, id, ResourceType.Url)?.url;\n  }\n\n  /**\n   * Gets a resource entry by id and optionally type\n   * @param state Resource registry state\n   * @param id Entry id\n   * @param type Optional entry type\n   * @returns The entry if found, undefined otherwise\n   */\n  private static getEntry(\n    state: ResourceRegistryModel,\n    id: ResourceId,\n    type?: T\n  ): UnionMember | undefined {\n    const entry = state[id] as UnionMember;\n    const typeMatches = type === undefined || entry?.type === type;\n    return typeMatches ? entry : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceRegistryState.html":{"url":"injectables/ResourceRegistryState.html","title":"injectable - ResourceRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResourceRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State keeping track of global resources\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMany\n                            \n                            \n                                addOne\n                            \n                            \n                                addYaml\n                            \n                            \n                                loadMarkdown\n                            \n                            \n                                loadYaml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMany\n                        \n                    \n                \n            \n            \n                \naddMany(ctx: ResourceRegistryContext, undefined: AddMany)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddMany)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:40\n                \n            \n\n\n            \n                \n                    Add multiple entries\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddMany\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOne\n                        \n                    \n                \n            \n            \n                \naddOne(ctx: ResourceRegistryContext, undefined: Add)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Add)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:30\n                \n            \n\n\n            \n                \n                    Add a single entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                Add\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addYaml\n                        \n                    \n                \n            \n            \n                \naddYaml(ctx: ResourceRegistryContext, undefined: AddFromYaml, filename?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:51\n                \n            \n\n\n            \n                \n                    Parse and add entries from yaml\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional url/filename from which the data was loaded (for improved error messages)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMarkdown\n                        \n                    \n                \n            \n            \n                \nloadMarkdown(ctx: ResourceRegistryContext, undefined: LoadMarkdown)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LoadMarkdown)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:77\n                \n            \n\n\n            \n                \n                    Adds a markdown entry with content loaded from an external file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                LoadMarkdown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that completes when the entry has been added\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYaml\n                        \n                    \n                \n            \n            \n                \nloadYaml(ctx: ResourceRegistryContext, undefined: LoadFromYaml)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LoadFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:64\n                \n            \n\n\n            \n                \n                    Load and add entries from an external yaml file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                LoadFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that completes when the entries has been added\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, State } from '@ngxs/store';\nimport { load } from 'js-yaml';\nimport { map, Observable } from 'rxjs';\nimport { Add, AddFromYaml, AddMany, LoadFromYaml, LoadMarkdown } from './resource-registry.actions';\nimport {\n  ResourceRegistryContext,\n  ResourceRegistryModel,\n  ResourceType,\n  RESOURCE_REGISTRY_SCHEMA,\n} from './resource-registry.model';\n\n/** State keeping track of global resources */\n@State({\n  name: 'resourceRegistry',\n  defaults: {},\n})\n@Injectable()\nexport class ResourceRegistryState {\n  /** Http service for resource loading */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Add a single entry\n   * @param ctx State context\n   * @param action Action with id and entry to add\n   */\n  @Action(Add)\n  addOne(ctx: ResourceRegistryContext, { id, entry }: Add): void {\n    this.addMany(ctx, new AddMany({ [id]: entry }));\n  }\n\n  /**\n   * Add multiple entries\n   * @param ctx State context\n   * @param action Action with entries to add\n   */\n  @Action(AddMany)\n  addMany(ctx: ResourceRegistryContext, { entries }: AddMany): void {\n    ctx.patchState(entries);\n  }\n\n  /**\n   * Parse and add entries from yaml\n   * @param ctx State context\n   * @param action Action with raw yaml data\n   * @param filename Optional url/filename from which the data was loaded (for improved error messages)\n   */\n  @Action(AddFromYaml)\n  addYaml(ctx: ResourceRegistryContext, { yaml }: AddFromYaml, filename?: string): void {\n    const data = load(yaml, { filename });\n    const entries = RESOURCE_REGISTRY_SCHEMA.parse(data);\n    this.addMany(ctx, new AddMany(entries));\n  }\n\n  /**\n   * Load and add entries from an external yaml file\n   * @param ctx State context\n   * @param action Action with the external file url\n   * @returns An observable that completes when the entries has been added\n   */\n  @Action(LoadFromYaml)\n  loadYaml(ctx: ResourceRegistryContext, { url }: LoadFromYaml): Observable {\n    return this.http\n      .get(url, { responseType: 'text' })\n      .pipe(map((data) => this.addYaml(ctx, new AddFromYaml(data), url)));\n  }\n\n  /**\n   * Adds a markdown entry with content loaded from an external file\n   * @param ctx State context\n   * @param action Action with id and url to the external markdown\n   * @returns An observable that completes when the entry has been added\n   */\n  @Action(LoadMarkdown)\n  loadMarkdown(ctx: ResourceRegistryContext, { id, url }: LoadMarkdown): Observable {\n    return this.http.get(url, { responseType: 'text' }).pipe(\n      map((markdown) => new Add(id, { type: ResourceType.Markdown, markdown })),\n      map((action) => this.addOne(ctx, action))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScopedDestructorSubject.html":{"url":"classes/ScopedDestructorSubject.html","title":"class - ScopedDestructorSubject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScopedDestructorSubject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/on-destroy/destructor-subject.ts\n        \n\n\n            \n                Description\n            \n            \n                A subject type that is associated with a destructor scope.\nWhen the cleanup function is run the subject emits a single\nundefined value and immediately completes\n\n            \n\n            \n                Extends\n            \n            \n                    ReplaySubject\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scope: DestructorScope)\n                    \n                \n                        \n                            \n                                Defined in injectors/src/lib/on-destroy/destructor-subject.ts:27\n                            \n                        \n\n                \n                    \n                            Creates a new subject and attaches cleanup to the destructor scope\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        DestructorScope\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Associated scope\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup functions can be registered */\nexport interface DestructorScope {\n  /**\n   * Register a cleanup function\n   * @param cb Cleanup callback function\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Determines whether an object is destructor scope like\n * @param obj Value to test\n * @returns true if the object seems to be a destructor scope, otherwise false\n */\nexport function isDestructorScopeLike(obj: unknown): obj is DestructorScope {\n  const isObject = typeof obj === 'object' && obj !== null;\n  return isObject && 'onDestroy' in obj && typeof obj.onDestroy === 'function';\n}\n\n/**\n * A subject type that is associated with a destructor scope.\n * When the cleanup function is run the subject emits a single\n * undefined value and immediately completes\n */\nexport class ScopedDestructorSubject extends ReplaySubject {\n  /**\n   * Creates a new subject and attaches cleanup to the destructor scope\n   * @param scope Associated scope\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectOptions.html":{"url":"interfaces/SelectOptions.html","title":"interface - SelectOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/select/select.ts\n        \n\n\n            \n                Description\n            \n            \n                select$ configuration options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            notifyOnChange\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifyOnChange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifyOnChange:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to mark the containing view for change detection on emits. Defaults to true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, inject } from '@angular/core';\nimport { Any } from '@hra-ui/utils/types';\nimport { StateToken, Store } from '@ngxs/store';\nimport { MonoTypeOperatorFunction, Observable, takeUntil, tap } from 'rxjs';\nimport { injectDestroy$ } from '../on-destroy/on-destroy';\n\n/** Selector type for select style functions */\nexport type StateSelector = ((...args: Any[]) => T) | StateToken;\n\n/** `select$` configuration options */\nexport interface SelectOptions {\n  /** Whether to mark the containing view for change detection on emits. Defaults to true. */\n  notifyOnChange?: boolean;\n}\n\n/**\n * Marks a view for change detection whenever a new value is emitted\n * @param options Options to explicitly disable marking\n * @returns A rxjs operator\n */\nfunction markForCheck(options?: SelectOptions): MonoTypeOperatorFunction {\n  const notifyOnChange = options?.notifyOnChange ?? true;\n  const cdr = inject(ChangeDetectorRef, { optional: true });\n  if (notifyOnChange && cdr) {\n    const markFn = () => cdr.markForCheck();\n    return tap({ next: markFn, error: markFn, complete: markFn });\n  }\n\n  return (source) => source;\n}\n\n/**\n * Creates an observable emitting parts of the state. The observable's lifetime\n * is automatically tied to the injection context where this is called.\n * @param selector State selection function or token\n * @param options Additional select options\n * @returns An observable of the selected state\n */\nexport function select$(selector: StateSelector, options?: SelectOptions): Observable {\n  return inject(Store)\n    .select(selector as StateToken)\n    .pipe(takeUntil(injectDestroy$()), markForCheck(options));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Class Set Action for set method\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: StorageId, key: string, value: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/storage/storage.actions.ts:10\n                            \n                        \n\n                \n                    \n                            constructor class for Set action object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        StorageId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: StorageId - Storage identifier\n\n\n                                                        \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: string - Key to be stored in the storage identifier\n\n\n                                                        \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: string - value to be stored with the key\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { StorageId } from './storage.model';\n\n/** Base action factory */\nconst Action = ActionGroup('Storage');\n\n/**\n * Class Set Action for set method\n */\nexport class Set extends Action('Set') {\n  /**\n   * constructor class for Set action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   * @param value - type: string - value to be stored with the key\n   */\n  constructor(readonly id: StorageId, readonly key: string, readonly value: string) {\n    super();\n  }\n}\n/**\n *  Class Delete Action for delete method\n */\nexport class Delete extends Action('Delete') {\n  /**\n   * constructor class for Delete action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   */\n  constructor(readonly id: StorageId, readonly key: string) {\n    super();\n  }\n}\n/**\n * Clear the values stored in the specified StorageId\n */\nexport class Clear extends Action('Clear') {\n  /**\n   * constructor class for clear action object\n   * @param id - type: StorageId - Storage identifier\n   */\n  constructor(readonly id: StorageId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnapshotObserver.html":{"url":"classes/SnapshotObserver.html","title":"class - SnapshotObserver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnapshotObserver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/select/snapshot-observer.ts\n        \n\n\n            \n                Description\n            \n            \n                Observer storing the latest value from a snapshot stream\n\n            \n\n\n            \n                Implements\n            \n            \n                        NextObserver\n                        ErrorObserver\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                get\n                            \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(err)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select/snapshot-observer.ts:38\n                \n            \n\n\n            \n                \n                    Handles error emits\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The error value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select/snapshot-observer.ts:18\n                \n            \n\n\n            \n                \n                    Gets the latest value or throw on errors\n\n\n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        The latest value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(value: T)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select/snapshot-observer.ts:30\n                \n            \n\n\n            \n                \n                    Handles value emits\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorObserver, NextObserver } from 'rxjs';\n\n/** Object indicating that no error has been emitted */\nconst NO_ERROR_SENTINEL_OBJ = {};\n\n/** Observer storing the latest value from a snapshot stream */\nexport class SnapshotObserver implements NextObserver, ErrorObserver {\n  /** The latest value */\n  private value?: T = undefined;\n  /** An error value if not equal to `NO_ERROR_SENTINEL` */\n  private errorValue: unknown = NO_ERROR_SENTINEL_OBJ;\n\n  /**\n   * Gets the latest value or throw on errors\n   * @returns The latest value\n   * @throws If an error has been emitted\n   */\n  get(): T {\n    if (this.errorValue !== NO_ERROR_SENTINEL_OBJ) {\n      throw this.errorValue;\n    }\n\n    return this.value as T;\n  }\n\n  /**\n   * Handles value emits\n   * @param value The new value\n   */\n  next(value: T): void {\n    this.value = value;\n  }\n\n  /**\n   * Handles error emits\n   * @param err The error value\n   */\n  error(err: unknown): void {\n    this.value = undefined;\n    this.errorValue = err;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageSelectors.html":{"url":"classes/StorageSelectors.html","title":"class - StorageSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Storage selectors - class for retrieving storage types\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                length\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['StorageState'])\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.selectors.ts:13\n                \n            \n\n\n            \n                \n                    returns the value stored in the key,value pair in the storageId given\n\n\n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        (id,key) of the given storage id else undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        length\n                        \n                    \n                \n            \n            \n                \n                    \n                    length()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['StorageState'])\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.selectors.ts:23\n                \n            \n\n\n            \n                \n                    returns the number of items in the given storage id stored\n\n\n                    \n                    \n                    \n                        Returns :     number | undefined\n\n                    \n                    \n                        length of the given StorageId supplied\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { StorageId } from './storage.model';\nimport { StorageState } from './storage.state';\n/**\n * Storage selectors - class for retrieving storage types\n */\nexport class StorageSelectors {\n  /**\n   * returns the value stored in the key,value pair in the storageId given\n   * @returns (id,key) of the given storage id else undefined\n   */\n  @Selector([StorageState])\n  static get(): (id: StorageId, key: string) => string | undefined {\n    return (id, key) => StorageState.getStorage(id).getItem(key) ?? undefined;\n  }\n  /**\n   * returns the number of items in the given storage id stored\n   * @returns length of the given StorageId supplied\n   */\n  @Selector([StorageState])\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore Allow selector name\n  static length(): (id: StorageId) => number | undefined {\n    return (id) => StorageState.getStorage(id).length;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageState.html":{"url":"injectables/StorageState.html","title":"injectable - StorageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State holding Storage types\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                delete\n                            \n                            \n                                    Static\n                                getStorage\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear(ctx: StorageContext, undefined: Clear)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Clear)\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:65\n                \n            \n\n\n            \n                \n                    clears the values of the specified storage id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StorageContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStorageContext object\n\n\n                                    \n                                \n                                \n                                    \n                                                Clear\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(ctx: StorageContext, undefined: Delete)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Delete)\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:55\n                \n            \n\n\n            \n                \n                    deletes the value pointed by key in the list of values stored in the specified storage id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StorageContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStorageContext object\n\n\n                                    \n                                \n                                \n                                    \n                                                Delete\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(id: StorageId)\n                \n            \n\n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:27\n                \n            \n\n\n            \n                \n                    StorageState class to manage storage objects\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                StorageId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Storage\n\n                    \n                    \n                        \nStorage objects - session and local\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(ctx: StorageContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:45\n                \n            \n\n\n            \n                \n                    sets the key,value pair in the given storageId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StorageContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStorageContext object\n\n\n                                    \n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { produce } from 'immer';\nimport { StorageContext } from './storage.model';\nimport { Injectable } from '@angular/core';\nimport { Action, State } from '@ngxs/store';\nimport { StorageId, StorageModel } from './storage.model';\nimport { Set, Delete, Clear } from './storage.actions';\n/**\n * State holding Storage types\n */\n@State({\n  name: 'storage',\n  defaults: {\n    [StorageId.Local]: 0,\n    [StorageId.Session]: 0,\n  },\n})\n@Injectable()\n/**\n *  class for managing storage state\n */\nexport class StorageState {\n  /**\n   * StorageState class to manage storage objects\n   * @param id-Storage Identifier\n   * @returns - Storage objects - session and local\n   */\n  static getStorage(id: StorageId): Storage {\n    switch (id) {\n      case StorageId.Local:\n        return localStorage;\n\n      case StorageId.Session:\n        return sessionStorage;\n\n      default:\n        throw new Error(`No such storage '${id}'`);\n    }\n  }\n  /**\n   * sets the key,value pair in the given storageId\n   * @param ctx - StorageContext object\n   * @param param1- {id: StorageId ,key:string ,value:string} of type Set to set key,value pair for the given id\n   */\n  @Action(Set)\n  set(ctx: StorageContext, { id, key, value }: Set): void {\n    StorageState.getStorage(id).setItem(key, value);\n    this.increaseChangeCount(ctx, id);\n  }\n  /**\n   * deletes the value pointed by key in the list of values stored in the specified storage id\n   * @param ctx - StorageContext object\n   * @param param1- id: StorageId ,key:string ,value:string} of type Set to set key,value pair for the given id\n   */\n  @Action(Delete)\n  delete(ctx: StorageContext, { id, key }: Delete): void {\n    StorageState.getStorage(id).removeItem(key);\n    this.increaseChangeCount(ctx, id);\n  }\n  /**\n   * clears the values of the specified storage id\n   * @param ctx - StorageContext object\n   * @param param1 - id: StorageId ,key:string ,value:string} of type Set to set key,value pair for the given id\n   */\n  @Action(Clear)\n  clear(ctx: StorageContext, { id }: Clear): void {\n    StorageState.getStorage(id).clear();\n    this.increaseChangeCount(ctx, id);\n  }\n  /**\n   * increases count after each operation is performed on the specified storage id\n   * @param ctx  - StorageContext obje\n   * @param id - StorageId - Storage identifier for which the change count has to be updated\n   */\n  private increaseChangeCount(ctx: StorageContext, id: StorageId): void {\n    ctx.setState(\n      produce((draft) => {\n        draft[id] += 1;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @ngxs/store : ^3.7.6\n        \n            @hra-ui/theming : *\n        \n            @hra-ui/utils : *\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LinkType   (state/.../link-registry.model.ts)\n                        \n                        \n                            ResourceType   (state/.../resource-registry.model.ts)\n                        \n                        \n                            StorageId   (state/.../storage.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    state/src/link-registry/link-registry.model.ts\n    \n        \n            \n                \n                    \n                        \n                        LinkType\n                    \n                \n                    \n                        \n                            Types for Link\n\n                        \n                    \n                        \n                            \n                                 Internal\n                            \n                        \n                        \n                            \n                                Value : internal\n                            \n                        \n                        \n                            \n                                 External\n                            \n                        \n                        \n                            \n                                Value : external\n                            \n                        \n            \n        \n\n    state/src/resource-registry/resource-registry.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                    \n                        \n                            Built in resource types with additional support\n\n                        \n                    \n                        \n                            \n                                 Markdown\n                            \n                        \n                        \n                            \n                                Value : markdown\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 Url\n                            \n                        \n                        \n                            \n                                Value : url\n                            \n                        \n            \n        \n\n    state/src/storage/storage.model.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageId\n                    \n                \n                    \n                        \n                            StorageId - enum with values as Local, Session - identifier for storage types\n\n                        \n                    \n                        \n                            \n                                 Local\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 Session\n                            \n                        \n                        \n                            \n                                Value : session\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (state/.../actions.ts)\n                        \n                        \n                            ActionGroup   (state/.../actions.ts)\n                        \n                        \n                            assertUniqueActionType   (state/.../action-type-registry.ts)\n                        \n                        \n                            createActionFactory   (injectors/.../dispatch.ts)\n                        \n                        \n                            createLinkId   (state/.../link-registry.model.ts)\n                        \n                        \n                            createResourceId   (state/.../resource-registry.model.ts)\n                        \n                        \n                            dispatch   (injectors/.../dispatch.ts)\n                        \n                        \n                            dispatch$   (injectors/.../dispatch.ts)\n                        \n                        \n                            dispatchAction   (injectors/.../dispatch.ts)\n                        \n                        \n                            dispatchAction$   (injectors/.../dispatch.ts)\n                        \n                        \n                            dispatchImpl   (injectors/.../dispatch.ts)\n                        \n                        \n                            findDestructorScope   (injectors/.../on-destroy.ts)\n                        \n                        \n                            findStableKeyObject   (injectors/.../on-destroy.ts)\n                        \n                        \n                            firstDefinedValue   (injectors/.../on-destroy.ts)\n                        \n                        \n                            identity   (injectors/.../dispatch.ts)\n                        \n                        \n                            injectDestroy$   (injectors/.../on-destroy.ts)\n                        \n                        \n                            isDestructorScopeLike   (injectors/.../destructor-subject.ts)\n                        \n                        \n                            markForCheck   (injectors/.../select.ts)\n                        \n                        \n                            pipeActionInstance   (injectors/.../dispatch.ts)\n                        \n                        \n                            registerActionType   (state/.../action-type-registry.ts)\n                        \n                        \n                            select$   (injectors/.../select.ts)\n                        \n                        \n                            selectQuerySnapshot   (injectors/.../select-snapshot.ts)\n                        \n                        \n                            selectSnapshot   (injectors/.../select-snapshot.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    state/src/actions/actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n            \n                \nAction(type: string)\n                \n            \n\n\n\n\n            \n                \n                    Creates a new base action with a specified type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionConstructor\n\n                    \n                    \n                        A base action class\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ActionGroup\n                        \n                    \n                \n            \n            \n                \nActionGroup(group: string)\n                \n            \n\n\n\n\n            \n                \n                    Creates an action factory that adds a common group string to each action type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Common action type group\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionConstructor\n\n                    \n                    \n                        An action factory\n\n                    \n                \n            \n        \n    \n    state/src/actions/action-type-registry.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        assertUniqueActionType\n                        \n                    \n                \n            \n            \n                \nassertUniqueActionType(type: string)\n                \n            \n\n\n\n\n            \n                \n                    Asserts that an action type is unique\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action type string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerActionType\n                        \n                    \n                \n            \n            \n                \nregisterActionType(type: string)\n                \n            \n\n\n\n\n            \n                \n                    Registers an action type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action type string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    injectors/src/lib/dispatch/dispatch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createActionFactory\n                        \n                    \n                \n            \n            \n                \ncreateActionFactory(type, boundArgs: BoundArgs)\n                \n            \n\n\n\n\n            \n                \n                    Creates an action factory function\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action constructor\n\n                                    \n                                \n                                \n                                    boundArgs\n                                    \n                                            BoundArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Initial bound arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     A\n\n                    \n                    \n                        A factory function creating a new action on each call\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(type, ...boundArgs: BoundArgs)\n                \n            \n\n\n\n\n            \n                \n                    Wraps an action constructor with automatic dispatching on each call to the function.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action constructor to create new instances\n\n                                    \n                                \n                                \n                                    boundArgs\n                                    \n                                            BoundArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bound arguments to the action constructor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     A\n\n                    \n                    \n                        A function that dispatches an action on the store each time it is called\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch$\n                        \n                    \n                \n            \n            \n                \ndispatch$(type, ...boundArgs: BoundArgs)\n                \n            \n\n\n\n\n            \n                \n                    Wraps an action constructor with automatic dispatching on each call to the function.\nEach call to the wrapper returns an observable that emits the action instance once the\ndispatch action has completed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action constructor to create new instances\n\n                                    \n                                \n                                \n                                    boundArgs\n                                    \n                                            BoundArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bound arguments to the action constructor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        A function that dispatches an action on the store each time it is called\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dispatchAction\n                        \n                    \n                \n            \n            \n                \ndispatchAction()\n                \n            \n\n\n\n\n            \n                \n                    Creates a callback that can dispatch any action or array of actions.\nEach call returns passed actions unchanged\n\n\n                    \n                    \n                    \n                        Returns :     A\n\n                    \n                    \n                        A function that dispatches actions on the store each time it is called\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dispatchAction$\n                        \n                    \n                \n            \n            \n                \ndispatchAction$()\n                \n            \n\n\n\n\n            \n                \n                    Creates a callback that can dispatch any action or array of actions.\nEach call returns an observable that emits the passed actions when the dispatch has finished\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        A function that dispatches actions on the store each time it is called\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dispatchImpl\n                        \n                    \n                \n            \n            \n                \ndispatchImpl(actionFactory, resultHandler)\n                \n            \n\n\n\n\n            \n                \n                    Common dispatch functionality used to implement all dispatch functions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    actionFactory\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Creates an action or array of actions from the user provided arguments\n\n                                    \n                                \n                                \n                                    resultHandler\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Selects the output value from the action and the dispatch observable\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     R\n\n                    \n                    \n                        A new dispatch function taking user arguments, dispatches actions, and returns a value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identity\n                        \n                    \n                \n            \n            \n                \nidentity(value: T)\n                \n            \n\n\n\n\n            \n                \n                    Identity function returning the first argument passed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pipeActionInstance\n                        \n                    \n                \n            \n            \n                \npipeActionInstance(action: A, obs$: Observable)\n                \n            \n\n\n\n\n            \n                \n                    Maps all emits to an action value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                            A\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    obs$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    state/src/link-registry/link-registry.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createLinkId\n                        \n                    \n                \n            \n            \n                \ncreateLinkId(id: string)\n                \n            \n\n\n\n\n            \n                \n                    function to createa unique link ids\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LinkId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    state/src/resource-registry/resource-registry.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createResourceId\n                        \n                    \n                \n            \n            \n                \ncreateResourceId(id: string)\n                \n            \n\n\n\n\n            \n                \n                    Creates a new resource identifier\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unique resource identifier\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResourceId\n\n                    \n                    \n                        A new identifier\n\n                    \n                \n            \n        \n    \n    injectors/src/lib/on-destroy/on-destroy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findDestructorScope\n                        \n                    \n                \n            \n            \n                \nfindDestructorScope()\n                \n            \n\n\n\n\n            \n                \n                    Finds the nearest destructor scope object in the current injection context\n\n\n                    \n                    \n                    \n                        Returns :         DestructorScope\n\n                    \n                    \n                        The scope on which cleanup can be attached\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findStableKeyObject\n                        \n                    \n                \n            \n            \n                \nfindStableKeyObject()\n                \n            \n\n\n\n\n            \n                \n                    Finds a stable object in the current injection context to be\nused as a key in the destructor cache\n\n\n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        An object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstDefinedValue\n                        \n                    \n                \n            \n            \n                \nfirstDefinedValue(genFn)\n                \n            \n\n\n\n\n            \n                \n                    Get the first defined value returned by a generator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    genFn\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Generator function taking no arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        The first non-null value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injectDestroy$\n                        \n                    \n                \n            \n            \n                \ninjectDestroy$()\n                \n            \n\n\n\n\n            \n                \n                    Inject an observable that emits and completes at the same time as the component, directive, pipe, or service\nit is injected into. It can be used to control the lifetime of other observables using\nthe takeUntil pipe, and to build other complex injection functions.\nCaveats:\n\nThere are NO guarantees about whether the returned observable will emit and complete\nbefore or after the regular ngOnDestroy lifecycle hook\nFor root and module level services the observable may never complete unless\nthe containing module is explicitly destroyed, so don't rely on it for important operations\nComponents, directives, pipe, and services that manipulate the ViewContainerRef MUST\ntake care to maintain the view controlling the lifecycle of the observable. Failure\nto do so may result in early emit and completion of the returned observable\n\nBased on comment on https://github.com/angular/angular/issues/10185\nMostly https://github.com/angular/angular/issues/10185#issuecomment-1165545544 and\nhttps://github.com/angular/angular/issues/10185#issuecomment-1199063426\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that emits and completes when the component/directive/etc. is destroyed\n\n                    \n                \n            \n        \n    \n    injectors/src/lib/on-destroy/destructor-subject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDestructorScopeLike\n                        \n                    \n                \n            \n            \n                \nisDestructorScopeLike(obj)\n                \n            \n\n\n\n\n            \n                \n                    Determines whether an object is destructor scope like\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to test\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DestructorScope\n\n                    \n                    \n                        true if the object seems to be a destructor scope, otherwise false\n\n                    \n                \n            \n        \n    \n    injectors/src/lib/select/select.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        markForCheck\n                        \n                    \n                \n            \n            \n                \nmarkForCheck(options?: SelectOptions)\n                \n            \n\n\n\n\n            \n                \n                    Marks a view for change detection whenever a new value is emitted\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                SelectOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options to explicitly disable marking\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        A rxjs operator\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select$\n                        \n                    \n                \n            \n            \n                \nselect$(selector: StateSelector, options?: SelectOptions)\n                \n            \n\n\n\n\n            \n                \n                    Creates an observable emitting parts of the state. The observable's lifetime\nis automatically tied to the injection context where this is called.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                StateSelector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State selection function or token\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                SelectOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional select options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable of the selected state\n\n                    \n                \n            \n        \n    \n    injectors/src/lib/select/select-snapshot.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectQuerySnapshot\n                        \n                    \n                \n            \n            \n                \nselectQuerySnapshot(selector: StateSelector, ...boundArgs: BoundArgs)\n                \n            \n\n\n\n\n            \n                \n                    Injects a function that can be called with the same arguments as the query selector\nand returns the latest value each time\nAutomatically marks components, directives, or pipes for change detection whenever\na new value is available\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                StateSelector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Store query selector\n\n                                    \n                                \n                                \n                                    boundArgs\n                                    \n                                            BoundArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional bound query arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Res\n\n                    \n                    \n                        A snapshot function taking the same arguments as the query selector (excluding bound arguments)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSnapshot\n                        \n                    \n                \n            \n            \n                \nselectSnapshot(selector: StateSelector)\n                \n            \n\n\n\n\n            \n                \n                    Injects a function that returns the latest snapshot value each time it is called\nAutomatically marks components, directives, or pipes for change detection whenever\na new value is available\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                StateSelector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Store data selector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        A snapshot function\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncdk\nThis library was generated with Nx.\nRunning unit tests\nRun nx test cdk to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BuiltinResourceEntry   (state/.../resource-registry.model.ts)\n                        \n                        \n                            CustomResourceEntry   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ExternalLinkEntry   (state/.../link-registry.model.ts)\n                        \n                        \n                            InternalLinkEntry   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkEntry   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkId   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkRegistryContext   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkRegistryModel   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkRegistryQuery   (state/.../link-registry.state.ts)\n                        \n                        \n                            ResourceEntry   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceId   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceRegistryContext   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceRegistryDataQuery   (state/.../resource-registry.selectors.ts)\n                        \n                        \n                            ResourceRegistryModel   (state/.../resource-registry.model.ts)\n                        \n                        \n                            StateSelector   (injectors/.../select.ts)\n                        \n                        \n                            StorageContext   (state/.../storage.model.ts)\n                        \n                        \n                            StorageModel   (state/.../storage.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    state/src/resource-registry/resource-registry.model.ts\n    \n    \n        \n            \n                \n                    \n                    BuiltinResourceEntry\n                \n            \n            \n                \n                    Entry types with built in support\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CustomResourceEntry\n                \n            \n            \n                \n                    Entry for custom user types without built in support\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceEntry\n                \n            \n            \n                \n                    Discriminated union of all resource interfaces\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceId\n                \n            \n            \n                \n                    Unique identifier for a resource\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceRegistryContext\n                \n            \n            \n                \n                    Context type for action handlers\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceRegistryModel\n                \n            \n            \n                \n                    State data model\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    state/src/link-registry/link-registry.model.ts\n    \n    \n        \n            \n                \n                    \n                    ExternalLinkEntry\n                \n            \n            \n                \n                    type for external link entry\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InternalLinkEntry\n                \n            \n            \n                \n                    type for internal link entry\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkEntry\n                \n            \n            \n                \n                    entry for link registry\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkId\n                \n            \n            \n                \n                    Type for unique identifier for link\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkRegistryContext\n                \n            \n            \n                \n                    type for State Context of LinkRegistry\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkRegistryModel\n                \n            \n            \n                \n                    Model for LinkRegistry State\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    state/src/link-registry/link-registry.state.ts\n    \n    \n        \n            \n                \n                    \n                    LinkRegistryQuery\n                \n            \n            \n                \n                    Query function for link entry optionally with type specified\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    state/src/resource-registry/resource-registry.selectors.ts\n    \n    \n        \n            \n                \n                    \n                    ResourceRegistryDataQuery\n                \n            \n            \n                \n                    Query function for resource data\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    injectors/src/lib/select/select.ts\n    \n    \n        \n            \n                \n                    \n                    StateSelector\n                \n            \n            \n                \n                    Selector type for select style functions\n\n                \n            \n            \n                \n                         | StateToken\n\n                \n            \n        \n    \n    state/src/storage/storage.model.ts\n    \n    \n        \n            \n                \n                    \n                    StorageContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StorageModel\n                \n            \n            \n                \n                    Type alias for the array of Storage objects\n\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (state/.../link-registry.actions.ts)\n                        \n                        \n                            Action   (state/.../resource-registry.actions.ts)\n                        \n                        \n                            Action   (state/.../storage.actions.ts)\n                        \n                        \n                            actionTypeRegistry   (state/.../action-type-registry.ts)\n                        \n                        \n                            DESTRUCTOR_CACHE   (injectors/.../on-destroy.ts)\n                        \n                        \n                            EMPTY_LINK   (state/.../link-registry.model.ts)\n                        \n                        \n                            EXTERNAL_LINK_SCHEMA   (state/.../link-registry.model.ts)\n                        \n                        \n                            INTERNAL_LINK_SCHEMA   (state/.../link-registry.model.ts)\n                        \n                        \n                            LINK_REGISTRY_SCHEMA   (state/.../link-registry.model.ts)\n                        \n                        \n                            NO_ERROR_SENTINEL_OBJ   (injectors/.../snapshot-observer.ts)\n                        \n                        \n                            RESOURCE_REGISTRY_SCHEMA   (state/.../resource-registry.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    state/src/link-registry/link-registry.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('LinkRegistry')\n                    \n                \n\n            \n                \n                    Base action factory\n\n                \n            \n\n        \n    \n\n    state/src/resource-registry/resource-registry.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('ResourceRegistry')\n                    \n                \n\n            \n                \n                    Base action factory\n\n                \n            \n\n        \n    \n\n    state/src/storage/storage.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Storage')\n                    \n                \n\n            \n                \n                    Base action factory\n\n                \n            \n\n        \n    \n\n    state/src/actions/action-type-registry.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        actionTypeRegistry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set()\n                    \n                \n\n            \n                \n                    Registry of action types\n\n                \n            \n\n        \n    \n\n    injectors/src/lib/on-destroy/on-destroy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DESTRUCTOR_CACHE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WeakMap>()\n                    \n                \n\n            \n                \n                    Cached destructor observables\n\n                \n            \n\n        \n    \n\n    state/src/link-registry/link-registry.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EMPTY_LINK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('@@__EMPTY__')\n                    \n                \n\n            \n                \n                    Empty link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXTERNAL_LINK_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    type: z.literal(LinkType.External),\n    url: z.string(),\n    rel: z.string().default('noopener'),\n    target: z.string(),\n  })\n  .partial({ rel: true, target: true })\n                    \n                \n\n            \n                \n                    Type for external link entry\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INTERNAL_LINK_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    type: z.literal(LinkType.Internal),\n    commands: z.any().array(),\n    extras: z\n      .object({\n        queryParams: z.record(z.any()).nullable(),\n        fragment: z.string(),\n        queryParamsHandling: z.enum(['merge', 'preserve', '']).nullable(),\n        preserveFragment: z.boolean(),\n        onSameUrlNavigation: z.literal('reload'),\n        skipLocationChange: z.boolean(),\n        replaceUrl: z.boolean(),\n      })\n      .partial(),\n  })\n  .partial({ extras: true })\n                    \n                \n\n            \n                \n                    Type for internal link entry\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LINK_REGISTRY_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.record(\n  z\n    .string()\n    .transform((id) => `LinkId:'${id}'`)\n    .brand('LinkId'),\n  z.discriminatedUnion('type', [EXTERNAL_LINK_SCHEMA, INTERNAL_LINK_SCHEMA])\n)\n                    \n                \n\n            \n                \n                    Schema for link registry\n\n                \n            \n\n        \n    \n\n    injectors/src/lib/select/snapshot-observer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NO_ERROR_SENTINEL_OBJ\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Object indicating that no error has been emitted\n\n                \n            \n\n        \n    \n\n    state/src/resource-registry/resource-registry.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RESOURCE_REGISTRY_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.record(\n  z\n    .string()\n    .transform((id) => `ResourceId:'${id}'`)\n    .brand('ResourceId'),\n  z\n    .discriminatedUnion('type', [\n      z.object({ type: z.literal(ResourceType.Markdown), markdown: z.string() }),\n      z.object({ type: z.literal(ResourceType.Text), text: z.string() }),\n      z.object({ type: z.literal(ResourceType.Url), url: z.string() }),\n    ])\n    .or(z.object({ type: z.string() }).passthrough())\n)\n                    \n                \n\n            \n                \n                    Resource registry schema validator\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
