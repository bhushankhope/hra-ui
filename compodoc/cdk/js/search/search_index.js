var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionConstructor.html",[0,1.352,1,2.861]],["body/interfaces/ActionConstructor.html",[0,1.969,1,4.914,2,2.269,3,0.297,4,0.297,5,0.297,6,3.795,7,0.338,8,1.562,9,1.291,10,1.373,11,0.845,12,2.484,13,0.466,14,1.224,15,0.029,16,0.297,17,3.795,18,2.073,19,0.457,20,1.205,21,3.195,22,0.893,23,2.704,24,1.373,25,3.195,26,4.949,27,5.507,28,3.195,29,0.611,30,1.475,31,1.969,32,3.795,33,1.585,34,3.795,35,1.905,36,0.257,37,3.795,38,3.795,39,3.795,40,2.073,41,0.02,42,0.02]],["title/classes/Add.html",[36,0.176,43,1.013]],["body/classes/Add.html",[3,0.257,4,0.257,5,0.451,7,0.399,8,0.846,9,0.857,10,0.909,13,0.223,14,0.857,15,0.029,16,0.351,19,0.451,20,0.676,22,0.531,24,0.909,29,0.734,36,0.299,41,0.018,42,0.018,43,1.931,44,0.676,45,1.785,46,1.785,47,1.212,48,1.64,49,2.075,50,1.645,51,2.472,52,1.428,53,2.36,54,0.404,55,2.759,56,2.036,57,0.445,58,0.404,59,0.404,60,1.136,61,1.227,62,1.049,63,1.049,64,0.977,65,0.404,66,1.79,67,1.599,68,2.036,69,1.845,70,1.845,71,1.543,72,3.251,73,1.304,74,0.977,75,1.304,76,1.638,77,1.212,78,2.19,79,0.977,80,1.785,81,0.786,82,2.036,83,0.977,84,1.304,85,1.304,86,1.42,87,2.37,88,1.304,89,1.304,90,1.96,91,1.96]],["title/classes/Add-1.html",[36,0.148,43,0.851,92,1.561]],["body/classes/Add-1.html",[3,0.25,4,0.25,5,0.474,7,0.392,8,0.824,9,0.841,10,0.885,13,0.217,14,0.963,15,0.029,16,0.345,19,0.447,20,0.909,22,0.517,24,0.885,29,0.747,36,0.297,41,0.018,42,0.018,43,1.949,44,0.659,47,1.18,48,1.622,50,1.602,52,1.416,54,0.394,55,2.687,56,2.008,57,0.433,58,0.394,59,0.394,60,1.127,61,1.057,62,1.022,63,1.022,64,0.951,65,0.394,67,1.584,68,2.008,69,1.828,70,1.828,71,1.515,73,1.27,74,0.951,75,1.27,76,1.411,77,1.18,78,2.179,79,0.951,80,1.753,81,1.21,82,2.349,83,0.951,84,1.753,85,1.753,86,1.523,93,1.753,94,1.753,95,2.567,96,2.866,97,2.731,98,1.743,99,3.305,100,1.369,101,2.333,102,1.602,103,1.602]],["title/classes/AddFromYaml.html",[36,0.176,79,1.013]],["body/classes/AddFromYaml.html",[3,0.258,4,0.258,5,0.467,7,0.401,8,0.852,9,0.861,10,0.915,13,0.224,14,1.054,15,0.029,16,0.353,19,0.452,20,0.681,22,0.535,24,0.915,29,0.736,36,0.3,41,0.018,42,0.018,43,1.918,44,0.681,45,1.794,46,1.794,47,1.22,48,1.344,49,1.989,51,2.202,52,1.232,53,1.933,54,0.407,56,1.794,57,0.448,58,0.407,59,0.407,60,1.103,61,1.081,62,1.056,63,1.056,64,0.983,65,0.407,66,1.803,67,1.603,68,2.043,69,1.849,70,1.849,71,1.551,72,3.334,73,1.313,74,0.983,75,1.313,76,1.767,77,1.22,78,2.26,79,1.344,80,2.196,81,1.081,82,2.043,83,0.983,84,1.313,85,1.313,86,1.424,87,2.379,88,1.313,89,1.313,90,1.973,91,1.973,104,2.778,105,2.778]],["title/classes/AddFromYaml-1.html",[36,0.148,79,0.851,92,1.561]],["body/classes/AddFromYaml-1.html",[3,0.251,4,0.251,5,0.475,7,0.393,8,0.828,9,0.844,10,0.89,13,0.218,14,1.092,15,0.029,16,0.346,19,0.448,20,0.912,22,0.52,24,0.89,29,0.748,36,0.297,41,0.018,42,0.018,43,1.938,44,0.662,47,1.186,48,1.318,52,1.213,54,0.396,56,1.759,57,0.435,58,0.396,59,0.396,60,1.092,61,0.769,62,1.027,63,1.027,64,0.956,65,0.396,67,1.587,68,2.013,69,1.831,70,1.831,71,1.521,73,1.276,74,0.956,75,1.276,76,1.415,77,1.186,78,2.25,79,1.318,80,2.169,81,1.372,82,2.352,83,0.956,84,1.759,85,1.759,86,1.526,93,1.759,94,1.759,95,2.456,96,2.539,97,2.219,98,1.752,99,3.422,100,1.896,101,2.338,102,1.61,103,1.61,104,2.7,105,2.7]],["title/classes/AddMany.html",[36,0.176,74,1.013]],["body/classes/AddMany.html",[3,0.259,4,0.259,5,0.453,7,0.402,8,0.853,9,0.862,10,0.917,13,0.225,14,0.862,15,0.029,16,0.354,19,0.453,20,0.682,22,0.732,24,0.917,29,0.736,36,0.3,41,0.018,42,0.018,43,1.919,44,0.682,45,1.796,46,1.796,47,1.222,48,1.345,49,1.99,51,2.204,52,1.233,53,1.935,54,0.408,56,2.045,57,0.449,58,0.408,59,0.408,60,1.104,61,1.083,62,1.058,63,1.058,64,0.985,65,0.408,66,1.806,67,1.604,68,2.045,69,1.851,70,1.851,71,1.899,72,3.444,73,1.796,74,1.345,75,1.315,76,1.768,77,1.9,78,2.194,79,0.985,80,1.796,81,0.793,82,2.045,83,0.985,84,1.315,85,1.315,86,1.425,87,2.381,88,1.315,89,1.315,90,1.976,91,1.976,106,2.783,107,2.783]],["title/classes/AddMany-1.html",[36,0.148,74,0.851,92,1.561]],["body/classes/AddMany-1.html",[3,0.252,4,0.252,5,0.475,7,0.394,8,0.83,9,0.846,10,0.893,13,0.219,14,0.968,15,0.029,16,0.347,19,0.448,20,0.915,22,0.718,24,0.893,29,0.748,36,0.297,41,0.018,42,0.018,43,1.939,44,0.664,47,1.19,48,1.321,52,1.216,54,0.397,56,2.016,57,0.437,58,0.397,59,0.397,60,1.093,61,0.772,62,1.03,63,1.03,64,0.959,65,0.397,67,1.588,68,2.016,69,1.833,70,1.833,71,1.878,73,1.763,74,1.321,75,1.28,76,1.622,77,1.874,78,2.182,79,0.959,80,1.763,81,1.216,82,2.355,83,0.959,84,1.763,85,1.763,86,1.527,93,1.763,94,1.763,95,2.458,96,2.544,97,2.224,98,1.758,99,3.465,100,1.38,101,2.342,102,1.615,103,1.615,106,2.709,107,2.709]],["title/modules/CdkStateModule.html",[108,2.861,109,2.507]],["body/modules/CdkStateModule.html",[3,0.377,4,0.377,5,0.377,15,0.028,16,0.508,18,3.134,19,0.377,36,0.25,41,0.024,42,0.024,49,1.539,95,1.913,109,4.233,110,3.547,111,4.808,112,5.737,113,1.913,114,4.808,115,2.062,116,3.173,117,3.787,118,3.787,119,2.227,120,4.808,121,4.808]],["title/classes/Clear.html",[36,0.176,122,2.032]],["body/classes/Clear.html",[3,0.273,4,0.273,5,0.273,7,0.417,8,0.9,9,1.202,10,1.634,13,0.428,14,1.157,15,0.028,16,0.367,19,0.414,20,1.09,24,0.968,29,0.748,35,2.35,36,0.331,41,0.019,42,0.019,44,0.72,50,1.751,54,0.431,57,0.474,58,0.431,59,0.431,60,1.182,61,1.454,62,1.117,63,1.117,65,0.431,67,1.466,69,1.691,70,1.691,119,2.809,122,3.625,123,2.303,124,2.799,125,3.521,126,3.575,127,3.489,128,2.616,129,2.086,130,2.303,131,2.616,132,3.09,133,2.574,134,3.703,135,1.691,136,3.376,137,2.574,138,2.574]],["title/classes/Delete.html",[36,0.176,136,2.032]],["body/classes/Delete.html",[3,0.268,4,0.268,5,0.268,7,0.412,8,0.885,9,1.213,10,1.624,13,0.432,14,1.213,15,0.028,16,0.362,19,0.41,20,1.081,24,0.951,29,0.744,35,1.721,36,0.333,41,0.019,42,0.019,44,0.707,50,1.721,54,0.423,57,0.465,58,0.423,59,0.423,60,1.177,61,1.479,62,1.097,63,1.097,65,0.423,67,1.452,69,1.676,70,1.676,119,2.856,122,3.131,123,2.262,124,2.05,125,3.5,126,3.539,128,2.597,129,2.05,130,2.262,131,2.597,132,3.456,133,2.529,134,3.84,135,1.676,136,3.749,137,2.529,138,2.529,139,3.427]],["title/components/DestroyHostComponent.html",[140,2.507,141,2.861]],["body/components/DestroyHostComponent.html",[3,0.269,4,0.269,5,0.269,7,0.412,11,1.249,13,0.234,15,0.028,16,0.269,19,0.269,21,4.722,22,0.751,23,2.53,29,0.424,30,1.38,33,1.099,36,0.178,40,2.863,41,0.019,42,0.019,54,0.424,57,0.466,58,0.692,59,0.424,65,0.572,113,1.366,140,4.321,141,5.08,142,4.631,143,5.24,144,3.433,145,2.891,146,3.057,147,4.631,148,3.433,149,3.057,150,4.631,151,4.931,152,4.631,153,3.899,154,4.631,155,2.533,156,2.512,157,2.863,158,6.034,159,3.866,160,5.24,161,1.712,162,4.631,163,4.138,164,3.433,165,3.417,166,3.417,167,4.452,168,4.195,169,5.609,170,4.631,171,4.631,172,3.866,173,3.057,174,5.856,175,4.631,176,2.266,177,1.591,178,2.533,179,4.631,180,3.433,181,2.266,182,2.266,183,3.433,184,3.433,185,3.433,186,4.631,187,1.876,188,5.609,189,3.433,190,2.266,191,2.266,192,3.433,193,2.533,194,2.891,195,3.433]],["title/interfaces/DestructorScope.html",[0,1.352,196,2.507]],["body/interfaces/DestructorScope.html",[0,1.429,2,2.148,3,0.281,4,0.281,5,0.281,7,0.425,11,0.8,13,0.325,15,0.029,16,0.281,19,0.42,22,0.582,23,1.962,29,0.662,30,1.423,31,2.521,33,1.15,36,0.187,41,0.02,42,0.02,48,1.071,54,0.443,57,0.488,58,0.443,59,0.443,65,0.443,67,0.997,128,2.755,135,1.528,146,3.15,161,1.765,177,1.664,182,2.371,196,4.214,197,4.018,198,3.024,199,5.334,200,3.15,201,4.018,202,4.513,203,4.018,204,2.45,205,3.592,206,4.018,207,4.018,208,4.018,209,4.018,210,1.962,211,3.024,212,2.65,213,4.214,214,5.146,215,5.006,216,2.65,217,3.024,218,2.65,219,3.024,220,3.024,221,2.65,222,4.018,223,4.018,224,3.024,225,4.513,226,4.018,227,2.65,228,2.371,229,1.429,230,3.024,231,2.371,232,2.65,233,3.024,234,3.024,235,3.024,236,3.024,237,3.024,238,3.024]],["title/interfaces/HoverContext.html",[0,1.352,239,2.507]],["body/interfaces/HoverContext.html",[0,1.108,2,1.665,3,0.218,4,0.218,5,0.218,7,0.248,11,0.62,12,2.009,13,0.189,15,0.029,16,0.367,19,0.314,20,0.967,22,0.88,31,1.864,36,0.145,41,0.016,42,0.016,65,0.578,81,1.301,113,1.108,131,1.854,149,1.838,156,1.194,159,2.953,163,2.953,165,2.953,166,2.953,167,2.055,168,3.092,173,1.838,176,1.838,177,1.29,178,2.953,181,1.838,187,2.964,191,1.838,204,2.009,239,3.457,240,2.345,241,2.352,242,3.944,243,4.312,244,4.294,245,3.37,246,4.568,247,2.373,248,3.37,249,3.37,250,4.568,251,4.9,252,2.345,253,3.37,254,2.345,255,2.055,256,2.055,257,1.521,258,3.457,259,3.37,260,2.345,261,2.345,262,3.37,263,3.37,264,2.345,265,2.345,266,3.37,267,2.345,268,2.345,269,3.944,270,3.37,271,5.106,272,3.944,273,2.345,274,2.345,275,2.345,276,3.944,277,2.373,278,2.055,279,3.37,280,2.345,281,3.37,282,2.345,283,3.37,284,2.345,285,4.312,286,2.345,287,2.345,288,2.345,289,2.345,290,2.345,291,4.312,292,4.312,293,4.312,294,4.312,295,4.312,296,4.312,297,4.312,298,4.312,299,2.345,300,2.345,301,2.055,302,2.345,303,2.345,304,3.944,305,3.37,306,2.953,307,2.345,308,2.345,309,2.345,310,3.944,311,3.37,312,2.055,313,2.345,314,2.345,315,2.345,316,3.37,317,2.345,318,2.345,319,2.345,320,2.055,321,2.345]],["title/directives/HoverDirective.html",[187,1.856,191,2.243]],["body/directives/HoverDirective.html",[0,0.844,3,0.166,4,0.166,5,0.166,7,0.189,11,0.472,12,1.64,13,0.329,15,0.029,16,0.312,19,0.256,20,0.998,22,0.914,30,1.334,31,2.118,36,0.11,41,0.013,42,0.013,54,0.71,57,0.444,58,0.403,59,0.552,65,0.492,81,1.277,113,0.844,131,1.513,135,0.679,149,2.156,155,1.564,156,1.401,159,3.567,161,1.208,163,2.41,165,1.564,166,1.564,167,1.564,168,2.955,173,1.4,176,1.4,177,0.982,178,1.564,181,1.4,187,2.79,190,1.4,191,2.156,204,2.282,239,2.41,240,1.785,241,2.247,242,2.75,243,4.3,244,4.386,245,1.785,246,2.75,247,2.24,248,1.785,249,1.785,250,4.746,251,5.125,252,1.785,253,3.355,254,1.785,255,1.564,256,1.564,257,1.158,258,2.94,259,4.071,260,2.75,261,3.769,262,4.3,263,4.3,264,1.785,265,1.785,266,2.75,267,1.785,268,1.785,269,3.355,270,2.75,271,5.294,272,4.071,273,1.785,274,1.785,275,1.785,276,3.769,277,2.074,278,1.564,279,3.769,280,2.75,281,4.071,282,2.75,283,3.769,284,2.75,285,4.3,286,2.75,287,2.75,288,2.75,289,2.75,290,2.75,291,4.626,292,4.626,293,4.626,294,4.626,295,4.626,296,4.626,297,4.626,298,4.626,299,2.75,300,1.785,301,1.564,302,1.785,303,1.785,304,4.48,305,4.3,306,3.768,307,3.355,308,2.75,309,3.769,310,3.355,311,2.75,312,2.94,313,3.355,314,2.75,315,3.769,316,2.75,317,1.785,318,1.785,319,1.785,320,1.564,321,1.785,322,2.75,323,3.266,324,2.75,325,3.266,326,3.266,327,3.266,328,3.266,329,3.266,330,3.266,331,3.266,332,1.513,333,1.158,334,2.12,335,2.12,336,2.12,337,2.12]],["title/directives/LinkDirective.html",[187,1.856,193,2.507]],["body/directives/LinkDirective.html",[3,0.161,4,0.161,5,0.161,7,0.348,8,0.53,9,0.841,11,0.458,12,1.601,13,0.395,14,1.142,15,0.029,16,0.395,18,1.123,19,0.161,20,1.178,23,1.123,29,0.482,30,1.165,33,1.526,36,0.107,41,0.013,42,0.013,49,1.889,51,2.163,52,1.056,53,1.368,54,0.689,57,0.433,58,0.394,59,0.689,65,0.622,86,1.404,87,1.477,88,0.818,113,0.818,135,1.251,145,1.73,155,1.516,156,1.676,157,1.742,161,1.179,168,4.129,172,1.516,176,1.357,177,2.208,181,1.357,182,1.357,187,2.405,190,1.357,193,2.353,194,3.707,204,1.368,229,1.752,241,1.032,255,1.516,256,1.516,257,1.123,258,1.516,277,2.77,278,1.516,306,4.211,320,3.249,322,3.29,324,2.685,332,2.04,333,2.135,338,2.055,339,2.685,340,2.685,341,3.907,342,5.043,343,3.721,344,3.721,345,3.189,346,3.189,347,3.189,348,3.189,349,3.189,350,4.766,351,3.707,352,2.055,353,2.685,354,3.189,355,3.189,356,5.043,357,3.189,358,1.73,359,3.189,360,4.403,361,3.29,362,3.189,363,3.907,364,3.189,365,2.685,366,3.189,367,3.189,368,3.189,369,3.189,370,3.189,371,3.907,372,1.73,373,2.055,374,2.055,375,3.189,376,3.189,377,2.055,378,2.055,379,2.055,380,3.707,381,1.73,382,3.189,383,1.73,384,2.055,385,2.353,386,2.055,387,1.516,388,1.357,389,2.055,390,2.055,391,3.189,392,2.055,393,1.73,394,1.73,395,2.055,396,4.403,397,2.055,398,2.055,399,2.055,400,2.055,401,2.055,402,3.189,403,2.055,404,2.055,405,0.882,406,2.055,407,2.055,408,2.055,409,3.189,410,2.055,411,2.055,412,2.055,413,4.403,414,2.055,415,2.055,416,3.189,417,2.055,418,2.055,419,2.055,420,2.055,421,2.055,422,2.055,423,2.055,424,3.189,425,3.189,426,3.189,427,3.189,428,3.189,429,3.189,430,2.685,431,2.055,432,2.055,433,2.055,434,2.055,435,2.055,436,3.907,437,3.189,438,3.189,439,2.055,440,2.055,441,2.055,442,2.055,443,2.055,444,2.055,445,2.055,446,2.055,447,2.055,448,2.055,449,2.055,450,2.055,451,2.055]],["title/classes/LinkRegistrySelectors.html",[36,0.176,387,2.507]],["body/classes/LinkRegistrySelectors.html",[3,0.28,4,0.28,5,0.28,7,0.423,11,0.795,13,0.436,15,0.028,16,0.446,18,2.92,19,0.28,29,0.703,30,1.593,31,1.892,33,1.523,36,0.186,40,3.114,41,0.019,42,0.019,44,0.737,45,1.892,46,1.892,49,2.072,51,2.04,52,1.518,53,1.532,54,0.441,57,0.485,58,0.441,59,0.587,60,1.165,64,1.065,65,0.587,115,1.532,116,2.358,156,1.532,157,1.951,161,1.758,218,2.636,229,2.268,247,1.655,277,1.655,332,1.655,387,3.509,388,2.358,405,2.672,452,2.636,453,3.509,454,3.762,455,4.755,456,4.379,457,3.572,458,3.572,459,4.004,460,4.004,461,3.944,462,3.944,463,2.636,464,3.007,465,3.572,466,3.572,467,3.007,468,2.636,469,3.572,470,3.007,471,3.572,472,4.755,473,2.636]],["title/injectables/LinkRegistryState.html",[116,2.243,474,1.856]],["body/injectables/LinkRegistryState.html",[3,0.156,4,0.156,5,0.339,7,0.443,9,1.081,11,0.444,13,0.366,14,0.732,15,0.029,16,0.433,19,0.244,20,0.791,22,0.702,29,0.733,30,1.551,31,0.794,33,0.639,35,1.001,36,0.104,41,0.013,42,0.013,43,1.791,45,1.982,46,1.982,48,0.928,49,1.812,51,1.336,52,1.383,53,0.855,54,0.58,57,0.638,58,0.615,59,0.642,60,1.057,64,0.594,65,0.473,71,1.071,72,1.702,74,1.551,76,1.846,78,1.79,79,1.291,81,1.039,83,1.291,86,1.118,87,2.714,88,1.724,89,2.071,100,0.855,102,1.564,113,0.794,115,0.855,116,2.056,132,2.056,157,1.089,161,1.152,204,2.232,210,1.089,229,1.982,231,2.056,241,2.841,247,0.924,257,1.089,277,2.177,332,2.177,333,1.089,339,1.679,343,1.471,344,1.471,380,3.647,381,1.679,385,2.298,388,1.316,393,2.622,394,1.679,405,2.577,430,1.679,454,1.316,456,1.471,461,1.471,462,2.298,463,1.471,468,1.471,473,1.471,474,1.702,475,1.316,476,1.471,477,2.622,478,2.622,479,3.115,480,2.622,481,2.622,482,2.622,483,4.332,484,2.622,485,5.159,486,2.622,487,1.994,488,3.735,489,2.622,490,2.622,491,1.994,492,2.622,493,3.957,494,2.622,495,1.994,496,2.622,497,1.679,498,2.622,499,2.622,500,1.863,501,2.622,502,2.622,503,2.622,504,1.994,505,3.227,506,3.467,507,2.622,508,3.115,509,3.115,510,1.994,511,3.115,512,4.699,513,1.679,514,1.679,515,3.115,516,1.679,517,1.679,518,1.679,519,2.622,520,1.679,521,1.679,522,1.316,523,2.622,524,1.679,525,1.679,526,1.679,527,3.115,528,1.994,529,1.994,530,2.622,531,1.679,532,1.679,533,1.994,534,1.679,535,1.679,536,1.679,537,1.679,538,1.193,539,1.679,540,1.679,541,1.679,542,1.679,543,1.994,544,1.471,545,2.298,546,1.994,547,3.115,548,1.994,549,3.115,550,1.994,551,1.471,552,1.994,553,1.994,554,1.994,555,3.115,556,1.679,557,1.679,558,1.994,559,1.994,560,1.994,561,1.994,562,1.994,563,1.994,564,1.994,565,1.994,566,1.994]],["title/classes/LoadFromYaml.html",[36,0.176,83,1.013]],["body/classes/LoadFromYaml.html",[3,0.257,4,0.257,5,0.486,7,0.399,8,0.846,9,0.857,10,0.909,13,0.223,14,1.051,15,0.029,16,0.351,19,0.451,20,0.676,22,0.531,24,0.909,29,0.734,36,0.299,41,0.018,42,0.018,43,1.916,44,0.676,45,1.785,46,1.785,47,1.212,48,1.337,49,1.986,51,2.194,52,1.227,53,1.924,54,0.404,56,1.785,57,0.445,58,0.404,59,0.404,60,1.1,61,1.076,62,1.049,63,1.049,64,0.977,65,0.404,66,1.79,67,1.599,68,2.036,69,1.845,70,1.845,71,1.543,72,3.389,73,1.304,74,0.977,75,1.304,76,1.638,77,1.212,78,2.244,79,0.977,80,1.785,81,0.786,82,2.368,83,1.337,84,1.304,85,1.785,86,1.536,87,2.37,88,1.304,89,1.304,90,1.96,91,1.96,567,2.759,568,2.759]],["title/classes/LoadFromYaml-1.html",[36,0.148,83,0.851,92,1.561]],["body/classes/LoadFromYaml-1.html",[3,0.25,4,0.25,5,0.496,7,0.392,8,0.824,9,0.841,10,0.885,13,0.217,14,1.09,15,0.029,16,0.345,19,0.447,20,0.909,22,0.517,24,0.885,29,0.747,36,0.297,41,0.018,42,0.018,43,1.937,44,0.659,47,1.18,48,1.313,52,1.21,54,0.394,56,1.753,57,0.433,58,0.394,59,0.394,60,1.09,61,0.766,62,1.022,63,1.022,64,0.951,65,0.394,67,1.584,68,2.008,69,1.828,70,1.828,71,1.515,73,1.27,74,0.951,75,1.27,76,1.411,77,1.18,78,2.235,79,0.951,80,1.753,81,1.21,82,2.49,83,1.313,84,1.753,85,2.008,86,1.591,93,1.753,94,1.753,95,2.453,96,2.533,97,2.212,98,1.743,99,3.418,100,1.369,101,2.333,102,1.602,103,1.602,567,2.687,568,2.687]],["title/classes/LoadMarkdown.html",[36,0.176,103,1.706]],["body/classes/LoadMarkdown.html",[3,0.247,4,0.247,5,0.495,7,0.389,8,0.813,9,0.834,10,0.874,13,0.214,14,1.085,15,0.029,16,0.342,19,0.445,20,0.901,22,0.511,24,0.874,29,0.744,36,0.295,41,0.018,42,0.018,43,1.933,44,0.65,47,1.165,48,1.301,50,1.581,52,1.202,54,0.389,56,1.737,57,0.428,58,0.389,59,0.389,60,1.151,61,0.756,62,1.009,63,1.009,64,0.939,65,0.389,67,1.576,68,1.994,69,1.819,70,1.819,71,1.502,73,1.253,74,0.939,75,1.253,76,1.398,77,1.165,78,2.173,79,0.939,80,1.737,81,1.298,82,2.483,83,0.939,84,1.737,85,1.994,86,1.61,93,1.737,94,1.737,95,2.539,96,2.853,97,2.192,98,1.721,99,3.293,100,1.351,101,2.585,102,2.192,103,2.192,569,3.15]],["title/classes/Navigate.html",[36,0.176,87,1.574]],["body/classes/Navigate.html",[3,0.258,4,0.258,5,0.452,7,0.401,8,0.852,9,0.861,10,0.915,13,0.224,14,0.861,15,0.029,16,0.353,19,0.452,20,0.681,22,0.535,24,0.915,29,0.736,36,0.3,41,0.018,42,0.018,43,1.878,44,0.681,45,1.794,46,1.794,47,1.22,48,1.344,49,2.06,50,1.656,51,2.477,52,1.232,53,1.933,54,0.407,56,1.794,57,0.448,58,0.407,59,0.407,60,1.165,61,1.232,62,1.056,63,1.056,64,0.983,65,0.407,66,1.803,67,1.603,68,2.043,69,1.849,70,1.849,71,1.551,72,3.258,73,1.313,74,0.983,75,1.313,76,1.644,77,1.22,78,2.193,79,0.983,80,1.794,81,0.792,82,2.043,83,0.983,84,1.313,85,1.313,86,1.491,87,2.763,88,1.794,89,1.794,90,1.973,91,2.695,570,3.299]],["title/classes/ResourceRegistrySelectors.html",[36,0.176,571,2.861]],["body/classes/ResourceRegistrySelectors.html",[3,0.162,4,0.162,5,0.162,7,0.425,11,0.46,13,0.429,15,0.029,16,0.307,19,0.374,29,0.65,30,1.804,31,2.491,33,1.863,36,0.107,40,3.48,41,0.013,42,0.013,44,0.426,49,1.254,52,1.452,54,0.65,57,0.716,58,0.65,59,0.65,60,1.203,64,0.615,65,0.395,81,1.436,86,1.36,93,2.167,94,2.167,95,1.559,96,2.397,97,1.606,101,2.26,115,0.885,117,1.362,156,0.885,161,1.183,229,1.273,247,1.482,332,2.442,333,1.128,405,2.745,452,1.523,453,2.361,454,4.29,459,4.253,460,4.898,464,1.738,470,1.738,473,1.523,538,3.479,544,1.523,545,2.361,571,2.694,572,2.694,573,3.199,574,3.199,575,5.446,576,3.199,577,4.416,578,4.413,579,2.064,580,3.298,581,3.199,582,2.064,583,4.708,584,3.199,585,2.064,586,3.298,587,3.199,588,2.064,589,4.973,590,3.199,591,3.918,592,2.064,593,3.918,594,3.199,595,2.064,596,3.199,597,2.064,598,1.523,599,3.298,600,3.298,601,1.738,602,1.738,603,1.738,604,2.064,605,3.918,606,3.199,607,4.413,608,4.413,609,2.064,610,2.064,611,2.694,612,2.064,613,3.199,614,2.064,615,3.918,616,3.918,617,2.064]],["title/injectables/ResourceRegistryState.html",[117,2.243,474,1.856]],["body/injectables/ResourceRegistryState.html",[3,0.177,4,0.177,5,0.41,7,0.466,9,1.151,11,0.502,13,0.356,14,0.79,15,0.029,16,0.426,19,0.177,20,0.466,22,0.75,25,2.883,29,0.734,30,1.621,33,1.096,36,0.117,41,0.014,42,0.014,43,1.837,48,1.021,52,1.377,54,0.613,57,0.675,58,0.646,59,0.671,60,0.949,64,0.672,65,0.423,71,1.178,74,1.621,76,1.904,78,1.871,79,1.378,81,1.109,83,1.378,86,1.283,89,2.082,93,2.082,94,2.082,95,1.647,99,1.871,100,0.967,101,1.983,102,2.321,103,2.627,113,0.897,115,0.967,117,2.26,161,1.266,204,2.245,210,1.232,229,1.978,231,3.051,241,2.938,244,2.527,257,1.232,277,1.045,332,2.303,405,2.643,474,1.871,475,1.489,476,1.664,477,2.883,478,2.883,480,2.883,481,2.883,482,2.883,484,2.883,486,2.883,488,3.862,489,2.883,490,2.883,492,2.883,493,4.185,494,2.883,496,2.883,497,1.899,498,2.883,499,2.883,500,2.048,501,2.883,502,2.883,503,2.883,505,3.486,506,4.234,507,3.892,513,1.899,514,1.899,516,1.899,517,1.899,518,1.899,522,1.489,523,2.883,524,1.899,525,1.899,526,1.899,530,2.883,531,1.899,532,1.899,534,1.899,535,1.899,536,1.899,537,2.883,538,2.048,539,1.899,540,1.899,541,1.899,572,1.899,577,1.664,598,1.664,611,1.899,618,3.424,619,5.277,620,2.255,621,2.255,622,2.255,623,3.424,624,3.424,625,2.255,626,2.255,627,1.899,628,2.255,629,2.255,630,2.255,631,2.255,632,2.255,633,2.255,634,2.255]],["title/classes/ScopedDestructorSubject.html",[36,0.176,232,2.507]],["body/classes/ScopedDestructorSubject.html",[0,1.411,3,0.278,4,0.278,5,0.278,7,0.421,10,0.984,13,0.362,15,0.029,16,0.278,19,0.417,22,0.767,23,2.585,29,0.657,30,1.057,31,2.424,33,1.135,36,0.184,41,0.019,42,0.019,44,0.732,48,1.411,54,0.438,57,0.482,58,0.438,59,0.438,65,0.438,67,1.313,128,2.633,135,1.705,146,3.124,177,1.643,182,2.341,196,4.368,197,3.984,198,2.985,199,5.235,200,2.341,201,2.985,202,2.985,203,2.985,204,2.03,206,2.985,207,2.985,208,2.985,209,4.484,210,1.937,211,2.985,212,2.616,213,4.494,214,5.44,215,4.985,216,2.616,217,2.985,218,2.616,219,2.985,220,2.985,221,2.616,222,3.984,223,3.984,224,2.985,225,5.128,226,4.784,227,3.492,228,3.124,229,1.883,230,3.984,231,3.124,232,3.492,233,3.984,234,3.984,235,2.985,236,2.985,237,2.985,238,2.985,635,3.546]],["title/interfaces/SelectOptions.html",[0,1.352,636,2.861]],["body/interfaces/SelectOptions.html",[0,1.34,2,2.014,3,0.264,4,0.406,5,0.264,7,0.3,11,0.75,12,2.295,13,0.353,15,0.029,16,0.456,19,0.406,22,0.546,23,1.84,29,0.64,30,1.362,31,2.065,33,1.661,41,0.019,42,0.019,59,0.64,65,0.64,113,1.34,115,1.445,135,1.078,151,2.836,156,1.96,157,1.84,173,3.425,177,2.578,200,2.223,210,2.497,212,3.373,228,3.017,241,1.691,247,1.56,257,1.84,301,2.485,365,4.369,405,2.225,463,2.485,500,2.014,506,4.106,522,3.017,636,4.685,637,2.836,638,4.685,639,4.571,640,6.136,641,5.999,642,4.571,643,4.571,644,4.369,645,5.189,646,3.368,647,4.369,648,4.571,649,3.368,650,4.571,651,3.368,652,2.836,653,2.836,654,3.848,655,3.368,656,3.368,657,3.368,658,2.485,659,3.368,660,2.836,661,3.368,662,3.368,663,4.571,664,3.368,665,4.571,666,3.368,667,5.565,668,3.368,669,2.485,670,3.368,671,3.368,672,3.368,673,3.368,674,3.368,675,3.368,676,3.368,677,3.368,678,3.368,679,3.368,680,3.368,681,3.368,682,3.368,683,3.368,684,3.368,685,3.368,686,3.368]],["title/classes/Set.html",[36,0.176,131,1.574]],["body/classes/Set.html",[3,0.264,4,0.264,5,0.264,7,0.407,8,0.871,9,1.209,10,1.615,13,0.435,14,1.243,15,0.028,16,0.358,19,0.407,20,1.072,24,0.936,29,0.741,35,1.694,36,0.333,41,0.019,42,0.019,44,0.696,50,1.694,54,0.416,57,0.458,58,0.416,59,0.416,60,1.172,61,1.473,62,1.08,63,1.08,65,0.416,67,1.441,69,1.663,70,1.663,119,2.844,122,3.106,123,2.227,124,2.018,125,3.59,126,3.529,128,2.58,129,2.018,130,2.227,131,2.894,132,3.428,133,2.489,134,3.863,135,1.922,136,3.33,137,2.489,138,2.489,687,3.374]],["title/classes/SnapshotObserver.html",[36,0.176,688,2.861]],["body/classes/SnapshotObserver.html",[3,0.272,4,0.272,5,0.272,7,0.469,11,0.774,13,0.236,15,0.029,16,0.272,19,0.272,22,0.757,29,0.576,30,1.68,33,1.113,36,0.181,41,0.019,42,0.019,44,0.718,54,0.651,57,0.634,58,0.576,59,0.576,65,0.429,128,1.611,135,2.152,161,1.727,204,2.418,210,1.899,221,3.445,228,3.721,229,1.858,247,2.866,277,2.164,340,3.932,467,3.932,500,3.81,551,3.891,658,3.445,669,3.445,688,3.932,689,4.746,690,2.927,691,4.67,692,4.67,693,6.187,694,4.67,695,4.67,696,5.273,697,5.273,698,4.67,699,3.476,700,5.637,701,5.273,702,3.476,703,4.67,704,4.67,705,3.476,706,2.927,707,4.44,708,3.476,709,3.476,710,3.476,711,3.476,712,5.273,713,5.273]],["title/classes/StorageSelectors.html",[36,0.176,714,2.861]],["body/classes/StorageSelectors.html",[3,0.283,4,0.283,5,0.283,7,0.321,11,0.804,14,1.026,15,0.028,16,0.421,19,0.283,30,1.891,33,1.534,36,0.279,40,3.345,41,0.02,42,0.02,44,0.746,54,0.591,58,0.446,60,1.211,115,1.549,118,2.384,119,2.939,125,3.423,126,3.412,129,2.16,134,2.865,135,1.534,156,2.055,161,1.771,229,2.486,332,2.219,453,3.535,660,3.041,669,2.665,714,4.033,715,3.612,716,4.79,717,2.865,718,6.122,719,4.79,720,3.612,721,4.033,722,4.033,723,5.34,724,4.79,725,3.612,726,5.724,727,4.79,728,4.79,729,3.612,730,4.79,731,3.612,732,3.612,733,3.612,734,3.612,735,3.612,736,4.79,737,3.612,738,3.612,739,3.612,740,3.612]],["title/injectables/StorageState.html",[118,2.243,474,1.856]],["body/injectables/StorageState.html",[3,0.196,4,0.196,5,0.196,7,0.433,9,0.478,11,0.557,13,0.383,15,0.029,16,0.426,19,0.196,22,0.406,28,2.106,29,0.728,30,1.549,33,1.185,35,2.609,36,0.253,40,2.407,41,0.015,42,0.015,54,0.601,57,0.661,58,0.641,59,0.601,60,1.257,61,0.888,92,1.367,113,0.996,115,1.073,118,3.214,119,2.989,122,3.253,124,2.911,125,2.213,126,3.327,128,2.521,129,2.213,131,2.856,134,2.911,135,1.559,136,3.253,161,1.369,172,2.731,204,2.414,229,1.753,277,1.159,332,2.041,333,1.367,361,2.106,405,2.229,474,2.022,475,1.651,488,3.716,522,1.651,542,3.709,544,1.846,545,2.731,551,1.846,644,2.106,717,2.213,721,4.375,722,4.375,723,4.375,741,2.502,742,3.701,743,3.701,744,3.701,745,5.431,746,3.701,747,2.502,748,3.701,749,3.701,750,3.701,751,2.502,752,3.701,753,3.701,754,3.701,755,3.701,756,2.502,757,3.701,758,4.099,759,3.116,760,3.116,761,3.701,762,3.701,763,2.502,764,3.701,765,2.502,766,2.502,767,2.106,768,2.502,769,3.701,770,3.701,771,2.502,772,2.502,773,2.502,774,2.502,775,2.502,776,4.405,777,4.405,778,2.502,779,4.405,780,2.502,781,2.502,782,2.502,783,3.701,784,2.502,785,2.502,786,2.502,787,2.502,788,2.502,789,2.502,790,2.502]],["title/dependencies.html",[791,2.405,792,3.007]],["body/dependencies.html",[15,0.028,41,0.024,42,0.024,113,2.013,115,2.169,157,3.229,372,4.258,792,4.361,793,5.057,794,5.057,795,5.057,796,5.911,797,5.057,798,5.057,799,5.057]],["title/miscellaneous/enumerations.html",[800,1.561,801,3.432]],["body/miscellaneous/enumerations.html",[11,1.02,13,0.312,15,0.027,41,0.023,42,0.023,45,1.823,46,1.823,49,1.467,61,1.099,86,1.438,88,2.217,89,2.217,93,1.823,94,1.823,100,1.965,101,2.39,119,2.123,124,2.74,126,3.281,135,2.11,388,3.678,538,3.332,717,3.332,759,5.056,760,5.056,800,2.503,801,3.857,802,3.38,803,4.61,804,4.692,805,3.38,806,3.857,807,3.38,808,3.38,809,3.857,810,4.581]],["title/index.html",[11,0.636,811,2.857,812,2.857]],["body/index.html",[15,0.025,41,0.025,42,0.025,216,3.821,227,3.821,813,5.993,814,5.179,815,5.179,816,5.993,817,5.179,818,5.993,819,5.993,820,5.179]],["title/modules.html",[110,3.393]],["body/modules.html",[15,0.025,41,0.025,42,0.025,109,3.915,110,3.915,821,5.306,822,5.306,823,5.306]],["title/overview.html",[824,3.871]],["body/overview.html",[2,3.056,15,0.024,41,0.024,42,0.024,44,1.055,92,3.249,108,4.303,140,3.771,190,3.373,312,3.771,475,3.373,792,4.388,824,4.303,825,5.947,826,5.111,827,5.111,828,5.111,829,5.111,830,5.111]],["title/properties.html",[12,2.046,791,2.405]],["body/properties.html",[12,2.671,15,0.026,41,0.025,42,0.025,831,5.32,832,5.32]],["title/miscellaneous/typealiases.html",[800,1.561,833,4.076]],["body/miscellaneous/typealiases.html",[9,0.833,11,0.7,13,0.446,14,0.6,15,0.023,18,1.718,31,2.561,35,1.579,41,0.018,42,0.018,45,1.735,46,1.735,49,1.818,51,1.87,52,1.496,53,1.87,61,1.046,81,1.046,88,1.251,89,1.251,93,1.735,94,1.735,95,2.26,96,2.189,97,2.189,100,1.349,119,1.457,149,2.076,156,1.349,200,2.076,241,2.189,247,2.02,358,3.672,383,2.648,385,3.218,405,2.147,452,4.19,454,3.748,456,3.218,461,3.218,462,2.32,468,2.32,476,3.218,485,3.672,488,2.076,519,3.672,521,3.672,577,3.218,580,3.672,583,3.672,586,3.672,589,3.672,599,4.215,600,4.552,601,2.648,602,2.648,603,2.648,619,3.672,637,2.648,638,2.648,647,2.648,653,2.648,654,3.672,717,2.608,745,3.672,758,2.648,767,3.672,800,1.718,802,4.446,803,4.903,805,4.813,806,3.672,807,3.218,808,2.32,809,2.648,834,3.145,835,3.672,836,4.361,837,4.361,838,4.361,839,4.361,840,4.361,841,4.361,842,5.006,843,4.361,844,3.145,845,3.145,846,3.145,847,4.215,848,3.145,849,3.145,850,6.142,851,3.145,852,3.145,853,3.145,854,5.006,855,4.361,856,3.145,857,3.145,858,3.145,859,3.145,860,3.145,861,3.145,862,3.145,863,4.361,864,3.145,865,3.145,866,2.648,867,3.145]],["title/miscellaneous/variables.html",[800,1.561,868,3.432]],["body/miscellaneous/variables.html",[8,1.177,9,1.163,11,0.591,13,0.432,14,0.957,15,0.028,18,2.113,22,0.627,24,1.265,41,0.016,42,0.016,45,1.539,46,1.539,47,1.853,49,1.604,52,1.202,60,0.507,61,0.637,66,1.451,76,1.238,77,1.686,81,0.928,86,1.177,88,1.057,89,1.539,93,1.539,94,1.539,95,1.815,98,1.451,101,1.659,123,1.753,128,2.467,130,1.753,131,1.23,135,2.115,146,1.753,153,2.236,177,2.113,213,1.959,333,3.609,343,2.853,344,2.853,351,3.256,353,2.236,405,1.139,500,1.588,520,3.256,538,2.312,556,2.236,557,3.256,598,2.853,627,3.256,652,2.236,658,1.959,689,2.236,690,3.256,706,2.236,707,3.256,717,2.727,800,1.451,802,3.928,803,4.799,804,2.236,805,4.647,807,3.928,808,1.959,835,2.236,847,4.483,866,2.236,868,2.236,869,2.655,870,3.867,871,2.655,872,3.867,873,3.867,874,3.867,875,4.56,876,4.56,877,3.867,878,3.867,879,2.655,880,3.867,881,4.56,882,4.56,883,4.56,884,2.655,885,4.56,886,3.867,887,4.56,888,4.56,889,2.655,890,3.867,891,2.655,892,2.655,893,5.009,894,2.655,895,5.557,896,2.655,897,2.655,898,2.655,899,2.655,900,2.655,901,3.867,902,3.867,903,2.655,904,2.655,905,5.557,906,2.655,907,3.867,908,2.655,909,2.655,910,2.655,911,3.867,912,2.655,913,2.655,914,2.655,915,2.655,916,2.655,917,2.655,918,2.655,919,2.655,920,2.655,921,2.655,922,2.655,923,2.655,924,2.655,925,2.655,926,2.655,927,2.655,928,2.655,929,4.56,930,2.655,931,2.655,932,2.655,933,2.655,934,2.655,935,2.655,936,2.655]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":172,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{},"injectables/StorageState.html":{}}}],["0.0.1",{"_index":832,"title":{},"body":{"properties.html":{}}}],["1",{"_index":92,"title":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{}},"body":{"injectables/StorageState.html":{},"overview.html":{}}}],["15.1.0",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":829,"title":{},"body":{"overview.html":{}}}],["2",{"_index":827,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":828,"title":{},"body":{"overview.html":{}}}],["3.7.6",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":830,"title":{},"body":{"overview.html":{}}}],["_data",{"_index":303,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["accessors",{"_index":327,"title":{},"body":{"directives/HoverDirective.html":{}}}],["action",{"_index":9,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action('add",{"_index":68,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["action('clear",{"_index":138,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{}}}],["action('delete",{"_index":137,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{}}}],["action('load",{"_index":84,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["action('navigate",{"_index":90,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["action('set",{"_index":133,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{}}}],["action(`[${group",{"_index":34,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["action(add",{"_index":490,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(addfromyaml",{"_index":494,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(addmany",{"_index":486,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(clear",{"_index":746,"title":{},"body":{"injectables/StorageState.html":{}}}],["action(delete",{"_index":750,"title":{},"body":{"injectables/StorageState.html":{}}}],["action(loadfromyaml",{"_index":503,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(loadmarkdown",{"_index":624,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["action(navigate",{"_index":509,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["action(set",{"_index":762,"title":{},"body":{"injectables/StorageState.html":{}}}],["action(type",{"_index":37,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["actionconstructor",{"_index":1,"title":{"interfaces/ActionConstructor.html":{}},"body":{"interfaces/ActionConstructor.html":{}}}],["actiongroup",{"_index":62,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["actiongroup('linkregistry",{"_index":66,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('resourceregistry",{"_index":98,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('storage",{"_index":130,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(group",{"_index":32,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["actions/actions",{"_index":63,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["actiontyperegistry",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activate",{"_index":395,"title":{},"body":{"directives/LinkDirective.html":{}}}],["activatedroute",{"_index":379,"title":{},"body":{"directives/LinkDirective.html":{}}}],["actual_component",{"_index":195,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["add",{"_index":43,"title":{"classes/Add.html":{},"classes/Add-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["add(id",{"_index":632,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["added",{"_index":507,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addfromyaml",{"_index":79,"title":{"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["addfromyaml(data",{"_index":541,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["additional",{"_index":681,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["addmany",{"_index":74,"title":{"classes/AddMany.html":{},"classes/AddMany-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["addmany(ctx",{"_index":484,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addmany(entries",{"_index":534,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addone",{"_index":480,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addone(ctx",{"_index":489,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["adds",{"_index":25,"title":{},"body":{"interfaces/ActionConstructor.html":{},"injectables/ResourceRegistryState.html":{}}}],["addyaml",{"_index":481,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addyaml(ctx",{"_index":492,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["alias",{"_index":863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":834,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":739,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["along",{"_index":282,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["altkey",{"_index":427,"title":{},"body":{"directives/LinkDirective.html":{}}}],["anchor",{"_index":412,"title":{},"body":{"directives/LinkDirective.html":{}}}],["angular",{"_index":393,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["angular/cdk/overlay",{"_index":252,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["angular/cdk/portal",{"_index":254,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["angular/common",{"_index":372,"title":{},"body":{"directives/LinkDirective.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":514,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["angular/core",{"_index":113,"title":{},"body":{"modules/CdkStateModule.html":{},"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":377,"title":{},"body":{"directives/LinkDirective.html":{}}}],["angular/router",{"_index":381,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["anyentry",{"_index":573,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["anyentry(state",{"_index":576,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["anyentryquery",{"_index":580,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["anytext",{"_index":574,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["anytext(state",{"_index":581,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["application",{"_index":260,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["applying",{"_index":860,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["area'].includes(this.tagname",{"_index":414,"title":{},"body":{"directives/LinkDirective.html":{}}}],["args",{"_index":655,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["argument",{"_index":865,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["arguments",{"_index":358,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/typealiases.html":{}}}],["array",{"_index":866,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["associated",{"_index":226,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["async",{"_index":483,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["attach",{"_index":307,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["attached",{"_index":272,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["attaches",{"_index":233,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["attaching",{"_index":150,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["attr.href",{"_index":347,"title":{},"body":{"directives/LinkDirective.html":{}}}],["attr.rel",{"_index":348,"title":{},"body":{"directives/LinkDirective.html":{}}}],["attr.target",{"_index":349,"title":{},"body":{"directives/LinkDirective.html":{}}}],["attribute",{"_index":356,"title":{},"body":{"directives/LinkDirective.html":{}}}],["automatically",{"_index":675,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["available",{"_index":822,"title":{},"body":{"modules.html":{}}}],["await",{"_index":547,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["base",{"_index":8,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["baseaction",{"_index":39,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["based",{"_index":367,"title":{},"body":{"directives/LinkDirective.html":{}}}],["boolean",{"_index":365,"title":{},"body":{"directives/LinkDirective.html":{},"interfaces/SelectOptions.html":{}}}],["bottom",{"_index":294,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["bound",{"_index":861,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["brand('linkid",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brand('resourceid",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":549,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["browse",{"_index":823,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":378,"title":{},"body":{"directives/LinkDirective.html":{}}}],["builtin",{"_index":807,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["builtin_entry",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builtin_type_values",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builtinresourcetype",{"_index":598,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/variables.html":{}}}],["builtinresourcetype.markdown",{"_index":611,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["builtinresourcetype.text",{"_index":613,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["builtinresourcetype.url",{"_index":617,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["builtintypes",{"_index":835,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":424,"title":{},"body":{"directives/LinkDirective.html":{}}}],["cached",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":208,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["called",{"_index":678,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["case",{"_index":545,"title":{},"body":{"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/StorageState.html":{}}}],["cb",{"_index":207,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["cdk",{"_index":813,"title":{},"body":{"index.html":{}}}],["cdkstatemodule",{"_index":109,"title":{"modules/CdkStateModule.html":{}},"body":{"modules/CdkStateModule.html":{},"modules.html":{}}}],["cdr",{"_index":665,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["cdr.markforcheck",{"_index":668,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["change",{"_index":644,"title":{},"body":{"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{}}}],["changedetectorref",{"_index":646,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["changes",{"_index":320,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["changes['linkid'].currentvalue",{"_index":422,"title":{},"body":{"directives/LinkDirective.html":{}}}],["child",{"_index":171,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["class",{"_index":36,"title":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LinkRegistrySelectors.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{}},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["classes",{"_index":44,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LinkRegistrySelectors.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"overview.html":{}}}],["cleanup",{"_index":199,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["clear",{"_index":122,"title":{"classes/Clear.html":{}},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"injectables/StorageState.html":{}}}],["clear(ctx",{"_index":744,"title":{},"body":{"injectables/StorageState.html":{}}}],["clears",{"_index":748,"title":{},"body":{"injectables/StorageState.html":{}}}],["click",{"_index":350,"title":{},"body":{"directives/LinkDirective.html":{}}}],["commands",{"_index":556,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["comment",{"_index":737,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["common",{"_index":26,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["complete",{"_index":670,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["completes",{"_index":231,"title":{},"body":{"interfaces/DestructorScope.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{}}}],["component",{"_index":140,"title":{"components/DestroyHostComponent.html":{}},"body":{"components/DestroyHostComponent.html":{},"overview.html":{}}}],["component/directive/pipe",{"_index":154,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["component_template",{"_index":189,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["componentref",{"_index":174,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["components",{"_index":142,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["configuration",{"_index":639,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["connectionpositionpair",{"_index":250,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["const",{"_index":65,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{}}}],["constructor(entries",{"_index":106,"title":{},"body":{"classes/AddMany.html":{},"classes/AddMany-1.html":{}}}],["constructor(id",{"_index":50,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["constructor(readonly",{"_index":69,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["constructor(scope",{"_index":234,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["constructor(url",{"_index":567,"title":{},"body":{"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{}}}],["constructor(yaml",{"_index":104,"title":{},"body":{"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{}}}],["container",{"_index":167,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["container.createcomponent(destroyhostcomponent",{"_index":180,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["containing",{"_index":643,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["contains",{"_index":420,"title":{},"body":{"directives/LinkDirective.html":{}}}],["content",{"_index":244,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"injectables/ResourceRegistryState.html":{}}}],["content(content",{"_index":265,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["context",{"_index":241,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["count",{"_index":783,"title":{},"body":{"injectables/StorageState.html":{}}}],["create",{"_index":21,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{}}}],["create(container",{"_index":162,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["created",{"_index":279,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["createlinkid('@@__empty__",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":23,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{}}}],["creating",{"_index":852,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ctrlkey",{"_index":425,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ctx",{"_index":488,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["ctx.getstate()[id",{"_index":543,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["ctx.patchstate(entries",{"_index":531,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["ctx.setstate",{"_index":788,"title":{},"body":{"injectables/StorageState.html":{}}}],["current",{"_index":460,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["custom",{"_index":847,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["custom:${t",{"_index":848,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["custom_entry",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom_entry_type",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom_type_prefix",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customresourceentry",{"_index":836,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["customresourcetype",{"_index":837,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["data",{"_index":81,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data(data",{"_index":274,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["dataquery",{"_index":583,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["date",{"_index":319,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["decorators",{"_index":332,"title":{},"body":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["default",{"_index":333,"title":{},"body":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":522,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{}}}],["defaultvalue",{"_index":605,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["defined",{"_index":54,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["delete",{"_index":136,"title":{"classes/Delete.html":{}},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"injectables/StorageState.html":{}}}],["delete(ctx",{"_index":749,"title":{},"body":{"injectables/StorageState.html":{}}}],["deletes",{"_index":752,"title":{},"body":{"injectables/StorageState.html":{}}}],["dependencies",{"_index":792,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["destroy",{"_index":151,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/SelectOptions.html":{}}}],["destroy.ts",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destroy/destroy",{"_index":147,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["destroy/destructor",{"_index":197,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["destroy/on",{"_index":652,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/variables.html":{}}}],["destroyhostcomponent",{"_index":141,"title":{"components/DestroyHostComponent.html":{}},"body":{"components/DestroyHostComponent.html":{}}}],["destructor",{"_index":213,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/variables.html":{}}}],["destructor_cache",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destructorscope",{"_index":196,"title":{"interfaces/DestructorScope.html":{}},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["detach",{"_index":313,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["detection",{"_index":645,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["determines",{"_index":211,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["directive",{"_index":187,"title":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["directives",{"_index":190,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"overview.html":{}}}],["disable",{"_index":660,"title":{},"body":{"interfaces/SelectOptions.html":{},"classes/StorageSelectors.html":{}}}],["dispatch",{"_index":382,"title":{},"body":{"directives/LinkDirective.html":{}}}],["dispatch(linkregistryactions.navigate",{"_index":408,"title":{},"body":{"directives/LinkDirective.html":{}}}],["display",{"_index":159,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["displayed",{"_index":263,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["dom",{"_index":144,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["domsanitizer",{"_index":376,"title":{},"body":{"directives/LinkDirective.html":{}}}],["draft[id",{"_index":790,"title":{},"body":{"injectables/StorageState.html":{}}}],["each",{"_index":28,"title":{},"body":{"interfaces/ActionConstructor.html":{},"injectables/StorageState.html":{}}}],["el",{"_index":181,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["el?.remove",{"_index":184,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["element",{"_index":168,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["elementref",{"_index":255,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["emits",{"_index":228,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{}}}],["emitted",{"_index":658,"title":{},"body":{"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["emitting",{"_index":671,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["empty",{"_index":353,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/variables.html":{}}}],["empty_link",{"_index":351,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":292,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["endhover",{"_index":315,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["entries",{"_index":76,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":52,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entry(state",{"_index":584,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["entry.extras",{"_index":561,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["entry.markdown",{"_index":612,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["entry.rel",{"_index":566,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["entry.target",{"_index":565,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["entry.text",{"_index":614,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["entry?.[field",{"_index":609,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["entry?.type",{"_index":473,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["entryquery",{"_index":586,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["enum",{"_index":810,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":801,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":708,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["err",{"_index":701,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["error",{"_index":500,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["error(`cannot",{"_index":552,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["error(`no",{"_index":774,"title":{},"body":{"injectables/StorageState.html":{}}}],["error(err",{"_index":698,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errorobserver",{"_index":697,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errors",{"_index":703,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errorvalue",{"_index":710,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["eslint",{"_index":732,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["eslint/ban",{"_index":735,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["event",{"_index":306,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["execute",{"_index":820,"title":{},"body":{"index.html":{}}}],["existing",{"_index":554,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["explicitly",{"_index":659,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["export",{"_index":19,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["extends",{"_index":67,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/DestructorScope.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{}}}],["external",{"_index":89,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["external_link_schema",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["externallinkentry",{"_index":519,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["extractbuiltinentrytype",{"_index":838,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["extracts",{"_index":849,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["extras",{"_index":557,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":24,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":219,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["field",{"_index":575,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["field(state",{"_index":587,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["fieldquery",{"_index":589,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["filename",{"_index":493,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["first",{"_index":170,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["flexibleconnectedto(this.el",{"_index":289,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["format",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":469,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["fragment",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":31,"title":{},"body":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":200,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["generated",{"_index":815,"title":{},"body":{"index.html":{}}}],["get(url",{"_index":536,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["getentry",{"_index":470,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["getentry(state",{"_index":608,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["getfield",{"_index":593,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["getfield(id",{"_index":616,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["gethref(link",{"_index":445,"title":{},"body":{"directives/LinkDirective.html":{}}}],["gets",{"_index":467,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/SnapshotObserver.html":{}}}],["getstorage",{"_index":743,"title":{},"body":{"injectables/StorageState.html":{}}}],["getstorage(id",{"_index":755,"title":{},"body":{"injectables/StorageState.html":{}}}],["getting",{"_index":811,"title":{"index.html":{}},"body":{}}],["given",{"_index":723,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["global",{"_index":618,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["globally",{"_index":479,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["graph",{"_index":821,"title":{},"body":{"modules.html":{}}}],["group",{"_index":27,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["handle",{"_index":304,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["handler's",{"_index":864,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handlers",{"_index":853,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handles",{"_index":700,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["helper",{"_index":862,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["holding",{"_index":742,"title":{},"body":{"injectables/StorageState.html":{}}}],["host",{"_index":158,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["host.component.ts",{"_index":148,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["host.component.ts:19",{"_index":164,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["hostbinding",{"_index":373,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbinding('attr.href",{"_index":368,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbinding('attr.rel",{"_index":369,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbinding('attr.target",{"_index":370,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbindings",{"_index":346,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostlistener",{"_index":256,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["hostlistener('click",{"_index":364,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostlistener('mouseout",{"_index":314,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hostlistener('mouseover",{"_index":308,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hostlisteners",{"_index":324,"title":{},"body":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["hover",{"_index":243,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hovercontext",{"_index":239,"title":{"interfaces/HoverContext.html":{}},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hoverdirective",{"_index":191,"title":{"directives/HoverDirective.html":{}},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hra",{"_index":157,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/SelectOptions.html":{},"dependencies.html":{}}}],["hrahover",{"_index":261,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hrahover]'},{'name",{"_index":192,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["hrahoverdata",{"_index":323,"title":{},"body":{"directives/HoverDirective.html":{}}}],["hralink",{"_index":194,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{}}}],["href",{"_index":342,"title":{},"body":{"directives/LinkDirective.html":{}}}],["html",{"_index":186,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["htmlelement",{"_index":392,"title":{},"body":{"directives/LinkDirective.html":{}}}],["http",{"_index":523,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["httpclient",{"_index":513,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["id",{"_index":60,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["id,key",{"_index":724,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["identifier",{"_index":61,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ignore",{"_index":738,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["immediately",{"_index":230,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["immer",{"_index":766,"title":{},"body":{"injectables/StorageState.html":{}}}],["implements",{"_index":340,"title":{},"body":{"directives/LinkDirective.html":{},"classes/SnapshotObserver.html":{}}}],["implicit",{"_index":246,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["imports",{"_index":120,"title":{},"body":{"modules/CdkStateModule.html":{}}}],["improved",{"_index":499,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["increasechangecount(ctx",{"_index":787,"title":{},"body":{"injectables/StorageState.html":{}}}],["increases",{"_index":782,"title":{},"body":{"injectables/StorageState.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":706,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["inject",{"_index":257,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{}}}],["inject(activatedroute",{"_index":397,"title":{},"body":{"directives/LinkDirective.html":{}}}],["inject(changedetectorref",{"_index":666,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["inject(domsanitizer",{"_index":403,"title":{},"body":{"directives/LinkDirective.html":{}}}],["inject(elementref).nativeelement",{"_index":278,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["inject(httpclient",{"_index":526,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["inject(locationstrategy",{"_index":400,"title":{},"body":{"directives/LinkDirective.html":{}}}],["inject(ngzone",{"_index":529,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["inject(overlay",{"_index":288,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["inject(overlay).create",{"_index":286,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["inject(router",{"_index":394,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["inject(store",{"_index":684,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["inject(viewcontainerref",{"_index":300,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["injectable",{"_index":474,"title":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{}},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{}}}],["injectables",{"_index":475,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{},"overview.html":{}}}],["injectdestroy",{"_index":651,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["injection",{"_index":677,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["injectors/.../on",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectors/.../select",{"_index":841,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectors/.../select.ts",{"_index":844,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectors/.../snapshot",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectors/src/lib/on",{"_index":146,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/variables.html":{}}}],["injectors/src/lib/select/select",{"_index":858,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectors/src/lib/select/select.ts",{"_index":637,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["injectors/src/lib/select/snapshot",{"_index":689,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":527,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["input",{"_index":258,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["input('hrahover",{"_index":264,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["input('hrahoverdata",{"_index":273,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["input('hralink",{"_index":390,"title":{},"body":{"directives/LinkDirective.html":{}}}],["inputs",{"_index":322,"title":{},"body":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["inserted",{"_index":169,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["inside",{"_index":165,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"interfaces/SelectOptions.html":{}},"body":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"interfaces/SelectOptions.html":{},"overview.html":{}}}],["internal",{"_index":88,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["internal_link_schema",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internallinkentry",{"_index":385,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["invalid",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isanchorelement",{"_index":413,"title":{},"body":{"directives/LinkDirective.html":{}}}],["isbuiltintype(val",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdestructorscopelike(obj",{"_index":220,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["isobject",{"_index":222,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["items",{"_index":727,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["js",{"_index":516,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["k",{"_index":604,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["keeping",{"_index":477,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["key",{"_index":134,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["key,value",{"_index":721,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["key:string",{"_index":776,"title":{},"body":{"injectables/StorageState.html":{}}}],["know",{"_index":411,"title":{},"body":{"directives/LinkDirective.html":{}}}],["latest",{"_index":693,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["legend",{"_index":185,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["length",{"_index":718,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["library",{"_index":814,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":152,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["lifetime",{"_index":674,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["line",{"_index":733,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["link",{"_index":49,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"modules/CdkStateModule.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["link'].includes(this.tagname",{"_index":417,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.extras",{"_index":448,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.rel",{"_index":440,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.target",{"_index":441,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.type",{"_index":429,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.url",{"_index":439,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link_registry_schema",{"_index":520,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["link_registry_schema.parse(data",{"_index":533,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["linkdirective",{"_index":193,"title":{"directives/LinkDirective.html":{}},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{}}}],["linkentry",{"_index":53,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/typealiases.html":{}}}],["linkid",{"_index":51,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/typealiases.html":{}}}],["linkid:'${id",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkregistry",{"_index":521,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistryactions",{"_index":386,"title":{},"body":{"directives/LinkDirective.html":{}}}],["linkregistrycontext",{"_index":485,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistrymodel",{"_index":456,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistryquery",{"_index":461,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistryselectors",{"_index":387,"title":{"classes/LinkRegistrySelectors.html":{}},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{}}}],["linkregistrystate",{"_index":116,"title":{"injectables/LinkRegistryState.html":{}},"body":{"modules/CdkStateModule.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{}}}],["links",{"_index":72,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["linktype",{"_index":388,"title":{},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/enumerations.html":{}}}],["linktype.external",{"_index":430,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["linktype.internal",{"_index":546,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["list",{"_index":754,"title":{},"body":{"injectables/StorageState.html":{}}}],["load",{"_index":505,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["load(yaml",{"_index":532,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["loaded",{"_index":102,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadfromyaml",{"_index":83,"title":{"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["loading",{"_index":525,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadmarkdown",{"_index":103,"title":{"classes/LoadMarkdown.html":{}},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadmarkdown(ctx",{"_index":623,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["loads",{"_index":85,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["loadyaml",{"_index":482,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadyaml(ctx",{"_index":502,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["local",{"_index":760,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["localstorage",{"_index":772,"title":{},"body":{"injectables/StorageState.html":{}}}],["location",{"_index":398,"title":{},"body":{"directives/LinkDirective.html":{}}}],["locationstrategy",{"_index":371,"title":{},"body":{"directives/LinkDirective.html":{}}}],["locationstrategy.prepareexternalurl(router.serializeurl(urltree",{"_index":450,"title":{},"body":{"directives/LinkDirective.html":{}}}],["manage",{"_index":757,"title":{},"body":{"injectables/StorageState.html":{}}}],["managing",{"_index":771,"title":{},"body":{"injectables/StorageState.html":{}}}],["many",{"_index":75,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["map",{"_index":517,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["map((action",{"_index":633,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["map((markdown",{"_index":631,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["maps",{"_index":845,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["mark",{"_index":642,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["markdown",{"_index":101,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["markdown(getfield",{"_index":590,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["markdown_entry",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["markfn",{"_index":667,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["markforcheck(options",{"_index":663,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["marking",{"_index":661,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["marks",{"_index":656,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["matching",{"_index":42,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":501,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["metadata",{"_index":155,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["metakey",{"_index":428,"title":{},"body":{"directives/LinkDirective.html":{}}}],["method",{"_index":132,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"injectables/LinkRegistryState.html":{},"classes/Set.html":{}}}],["methods",{"_index":161,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["miscellaneous",{"_index":800,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":855,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["module",{"_index":108,"title":{"modules/CdkStateModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":110,"title":{"modules.html":{}},"body":{"modules/CdkStateModule.html":{},"modules.html":{}}}],["monotypeoperatorfunction",{"_index":648,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["mouse",{"_index":305,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["mouseevent",{"_index":363,"title":{},"body":{"directives/LinkDirective.html":{}}}],["mouseout",{"_index":325,"title":{},"body":{"directives/HoverDirective.html":{}}}],["mouseover",{"_index":326,"title":{},"body":{"directives/HoverDirective.html":{}}}],["multiple",{"_index":71,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["name",{"_index":58,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["native",{"_index":391,"title":{},"body":{"directives/LinkDirective.html":{}}}],["navigate",{"_index":87,"title":{"classes/Navigate.html":{}},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["navigate(ctx",{"_index":508,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["navigatetoexternal(entry",{"_index":563,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["navigatetointernal(entry",{"_index":558,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["never",{"_index":610,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["new",{"_index":22,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":175,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["next",{"_index":669,"title":{},"body":{"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{}}}],["next(value",{"_index":704,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["nextobserver",{"_index":696,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["ngmodule",{"_index":112,"title":{},"body":{"modules/CdkStateModule.html":{}}}],["ngonchanges(changes",{"_index":421,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ngxs/store",{"_index":115,"title":{},"body":{"modules/CdkStateModule.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{}}}],["ngxsmodule",{"_index":114,"title":{},"body":{"modules/CdkStateModule.html":{}}}],["ngxsmodule.forfeature([linkregistrystate",{"_index":121,"title":{},"body":{"modules/CdkStateModule.html":{}}}],["ngzone",{"_index":515,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["no_error_sentinel",{"_index":709,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["no_error_sentinel_obj",{"_index":707,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":553,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["none",{"_index":160,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["notifyonchange",{"_index":641,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["null",{"_index":182,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/ScopedDestructorSubject.html":{}}}],["nullable",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":726,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["nx",{"_index":816,"title":{},"body":{"index.html":{}}}],["obj",{"_index":215,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["obj.ondestroy",{"_index":224,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["obje",{"_index":785,"title":{},"body":{"injectables/StorageState.html":{}}}],["object",{"_index":128,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["object.values(rawbuiltinresourcetype",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objects",{"_index":758,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["observable",{"_index":506,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{}}}],["observable's",{"_index":673,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["observables",{"_index":153,"title":{},"body":{"components/DestroyHostComponent.html":{},"miscellaneous/variables.html":{}}}],["observer",{"_index":691,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["observer.ts",{"_index":690,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["observer.ts:18",{"_index":702,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["observer.ts:30",{"_index":705,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["observer.ts:38",{"_index":699,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["once",{"_index":73,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["onchanges",{"_index":341,"title":{},"body":{"directives/LinkDirective.html":{}}}],["onclick",{"_index":345,"title":{},"body":{"directives/LinkDirective.html":{}}}],["onclick(event",{"_index":362,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ondestroy",{"_index":202,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["ondestroy(cb",{"_index":203,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["onsameurlnavigation",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operation",{"_index":784,"title":{},"body":{"injectables/StorageState.html":{}}}],["operator",{"_index":662,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["optional",{"_index":59,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["optionally",{"_index":468,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["options",{"_index":640,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["options?.notifyonchange",{"_index":664,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["originx",{"_index":291,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["originy",{"_index":293,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["otherwise",{"_index":218,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/LinkRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{}}}],["out",{"_index":312,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"overview.html":{}}}],["over",{"_index":281,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlay",{"_index":251,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref",{"_index":285,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref.attach(portal",{"_index":311,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref.detach",{"_index":316,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref.hasattached",{"_index":310,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayx",{"_index":295,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayy",{"_index":296,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overview",{"_index":824,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":56,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["package",{"_index":791,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pair",{"_index":722,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["param",{"_index":29,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["param1",{"_index":542,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/StorageState.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["parse",{"_index":496,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["partial",{"_index":77,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"miscellaneous/variables.html":{}}}],["parts",{"_index":672,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["passed",{"_index":242,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["passthrough",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":851,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["peer",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["performed",{"_index":361,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/StorageState.html":{}}}],["pipe",{"_index":630,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["pipe(map((data",{"_index":539,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["pipe(takeuntil(injectdestroy",{"_index":686,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["pointed",{"_index":753,"title":{},"body":{"injectables/StorageState.html":{}}}],["portal",{"_index":271,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["position",{"_index":283,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["positionstrategy",{"_index":287,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["prefix",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preserve",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preservefragment",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":277,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["produce",{"_index":765,"title":{},"body":{"injectables/StorageState.html":{}}}],["produce((draft",{"_index":789,"title":{},"body":{"injectables/StorageState.html":{}}}],["promise",{"_index":512,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"interfaces/ActionConstructor.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"interfaces/SelectOptions.html":{},"properties.html":{}}}],["property",{"_index":302,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["provided",{"_index":166,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["queries",{"_index":459,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["query",{"_index":454,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["query(state",{"_index":455,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["querying",{"_index":404,"title":{},"body":{"directives/LinkDirective.html":{}}}],["querylink",{"_index":406,"title":{},"body":{"directives/LinkDirective.html":{}}}],["queryparams",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryparamshandling",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["raw",{"_index":100,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rawbuiltinresourcetype",{"_index":804,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":20,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{}}}],["record",{"_index":867,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ref",{"_index":179,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["ref.location.nativeelement",{"_index":183,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["reference",{"_index":276,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["refine((val",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":206,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["registeractiontype",{"_index":17,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["registeractiontype(type",{"_index":38,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["registered",{"_index":201,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["registry",{"_index":18,"title":{},"body":{"interfaces/ActionConstructor.html":{},"modules/CdkStateModule.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["registry.actions",{"_index":518,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["registry.actions.ts",{"_index":47,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"miscellaneous/variables.html":{}}}],["registry.actions.ts:20",{"_index":107,"title":{},"body":{"classes/AddMany.html":{},"classes/AddMany-1.html":{}}}],["registry.actions.ts:31",{"_index":105,"title":{},"body":{"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{}}}],["registry.actions.ts:42",{"_index":568,"title":{},"body":{"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{}}}],["registry.actions.ts:52",{"_index":570,"title":{},"body":{"classes/Navigate.html":{}}}],["registry.actions.ts:53",{"_index":569,"title":{},"body":{"classes/LoadMarkdown.html":{}}}],["registry.actions.ts:8",{"_index":55,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{}}}],["registry.model",{"_index":64,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["registry.model.ts",{"_index":803,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["registry.selectors.ts",{"_index":452,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["registry.selectors.ts:102",{"_index":595,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:112",{"_index":597,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:16",{"_index":458,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["registry.selectors.ts:37",{"_index":585,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:47",{"_index":579,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:57",{"_index":588,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:70",{"_index":582,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:92",{"_index":592,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.state",{"_index":464,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["registry.state.ts",{"_index":476,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["registry.state.ts:30",{"_index":621,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:40",{"_index":620,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:46",{"_index":491,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:51",{"_index":622,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:56",{"_index":487,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:64",{"_index":626,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:67",{"_index":495,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:77",{"_index":625,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:80",{"_index":504,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:93",{"_index":510,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.ts",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registry/link",{"_index":46,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["registry/resource",{"_index":94,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rel",{"_index":343,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["relativeto",{"_index":449,"title":{},"body":{"directives/LinkDirective.html":{}}}],["remaining",{"_index":859,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["remote",{"_index":82,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["replaceurl",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaysubject",{"_index":209,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["reset",{"_index":826,"title":{},"body":{"overview.html":{}}}],["resource",{"_index":95,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resource_entry",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resource_id",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resource_registry_schema",{"_index":627,"title":{},"body":{"injectables/ResourceRegistryState.html":{},"miscellaneous/variables.html":{}}}],["resource_registry_schema.parse(data",{"_index":628,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["resourceentry",{"_index":97,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceentrypayload",{"_index":839,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resourceid",{"_index":96,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceid:'${id",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourceregistry",{"_index":572,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["resourceregistrycontext",{"_index":619,"title":{},"body":{"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistrymodel",{"_index":577,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistryselectors",{"_index":571,"title":{"classes/ResourceRegistrySelectors.html":{}},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["resourceregistryselectors.anyentry",{"_index":602,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistryselectors.entry",{"_index":601,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistryselectors.field",{"_index":603,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistrystate",{"_index":117,"title":{"injectables/ResourceRegistryState.html":{}},"body":{"modules/CdkStateModule.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["resources",{"_index":99,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["resourcetype",{"_index":599,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["responsetype",{"_index":537,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["restargs",{"_index":840,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["results",{"_index":41,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":716,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["return",{"_index":33,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["returned",{"_index":600,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":30,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["route",{"_index":396,"title":{},"body":{"directives/LinkDirective.html":{}}}],["router",{"_index":380,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["router.createurltree(link.commands",{"_index":447,"title":{},"body":{"directives/LinkDirective.html":{}}}],["routing",{"_index":339,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["run",{"_index":227,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"index.html":{}}}],["running",{"_index":817,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":210,"title":{},"body":{"interfaces/DestructorScope.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{}}}],["sanitize",{"_index":401,"title":{},"body":{"directives/LinkDirective.html":{}}}],["sanitized",{"_index":444,"title":{},"body":{"directives/LinkDirective.html":{}}}],["sanitizer",{"_index":402,"title":{},"body":{"directives/LinkDirective.html":{}}}],["sanitizer.sanitize(urlsecuritycontext",{"_index":451,"title":{},"body":{"directives/LinkDirective.html":{}}}],["sanitizes",{"_index":443,"title":{},"body":{"directives/LinkDirective.html":{}}}],["schema",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":214,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["scope.ondestroy",{"_index":236,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["scopeddestructorsubject",{"_index":232,"title":{"classes/ScopedDestructorSubject.html":{}},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["security",{"_index":415,"title":{},"body":{"directives/LinkDirective.html":{}}}],["securitycontext",{"_index":374,"title":{},"body":{"directives/LinkDirective.html":{}}}],["securitycontext.resource_url",{"_index":418,"title":{},"body":{"directives/LinkDirective.html":{}}}],["securitycontext.url",{"_index":419,"title":{},"body":{"directives/LinkDirective.html":{}}}],["seems",{"_index":217,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["select",{"_index":638,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["select$(selector",{"_index":683,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["select(selector",{"_index":685,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["selected",{"_index":682,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["selection",{"_index":679,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["selectoptions",{"_index":636,"title":{"interfaces/SelectOptions.html":{}},"body":{"interfaces/SelectOptions.html":{}}}],["selector",{"_index":156,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{},"interfaces/SelectOptions.html":{},"classes/StorageSelectors.html":{},"miscellaneous/typealiases.html":{}}}],["selector(['linkregistrystate",{"_index":457,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["selector(['resourceregistrystate",{"_index":578,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selector(['storagestate",{"_index":719,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["selector(['undefined",{"_index":591,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selector([linkregistrystate",{"_index":465,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["selector([resourceregistryselectors.field",{"_index":615,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selector([resourceregistrystate",{"_index":607,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selector([storagestate",{"_index":730,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["selectors",{"_index":453,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/StorageSelectors.html":{}}}],["selectquery",{"_index":843,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["selectquerysnapshot",{"_index":383,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/typealiases.html":{}}}],["selectquerysnapshot(linkregistryselectors.query",{"_index":407,"title":{},"body":{"directives/LinkDirective.html":{}}}],["service",{"_index":524,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["session",{"_index":759,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["sessionstorage",{"_index":773,"title":{},"body":{"injectables/StorageState.html":{}}}],["set",{"_index":131,"title":{"classes/Set.html":{}},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["set(ctx",{"_index":761,"title":{},"body":{"injectables/StorageState.html":{}}}],["setcontent(content",{"_index":336,"title":{},"body":{"directives/HoverDirective.html":{}}}],["setdata(data",{"_index":337,"title":{},"body":{"directives/HoverDirective.html":{}}}],["sets",{"_index":764,"title":{},"body":{"injectables/StorageState.html":{}}}],["setter",{"_index":262,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["setting",{"_index":284,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["shiftkey",{"_index":426,"title":{},"body":{"directives/LinkDirective.html":{}}}],["simplechanges",{"_index":375,"title":{},"body":{"directives/LinkDirective.html":{}}}],["single",{"_index":48,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"interfaces/DestructorScope.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{}}}],["skiplocationchange",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snapshot",{"_index":694,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot.ts",{"_index":842,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["snapshotobserver",{"_index":688,"title":{"classes/SnapshotObserver.html":{}},"body":{"classes/SnapshotObserver.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["specified",{"_index":35,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"injectables/LinkRegistryState.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/hover/hover.directive.ts",{"_index":240,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:19",{"_index":328,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:26",{"_index":329,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:38",{"_index":334,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:58",{"_index":335,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:62",{"_index":331,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:71",{"_index":330,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/link/link.directive.ts",{"_index":338,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:32",{"_index":352,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:34",{"_index":354,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:36",{"_index":355,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:38",{"_index":357,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:82",{"_index":359,"title":{},"body":{"directives/LinkDirective.html":{}}}],["standalone",{"_index":176,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["start",{"_index":298,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["started",{"_index":812,"title":{"index.html":{}},"body":{}}],["starthover",{"_index":309,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["state",{"_index":405,"title":{},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/.../action",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/.../link",{"_index":802,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/.../resource",{"_index":805,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/.../storage.actions.ts",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/.../storage.model.ts",{"_index":806,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state/src/actions/action",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/src/actions/actions.ts",{"_index":6,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["state/src/link",{"_index":45,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/src/resource",{"_index":93,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/src/state.module.ts",{"_index":111,"title":{},"body":{"modules/CdkStateModule.html":{}}}],["state/src/storage/storage.actions.ts",{"_index":123,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["state/src/storage/storage.actions.ts:10",{"_index":687,"title":{},"body":{"classes/Set.html":{}}}],["state/src/storage/storage.actions.ts:24",{"_index":139,"title":{},"body":{"classes/Delete.html":{}}}],["state/src/storage/storage.actions.ts:37",{"_index":127,"title":{},"body":{"classes/Clear.html":{}}}],["state/src/storage/storage.model.ts",{"_index":809,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state/src/storage/storage.selectors.ts",{"_index":715,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["state/src/storage/storage.selectors.ts:13",{"_index":720,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["state/src/storage/storage.selectors.ts:23",{"_index":725,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["state/src/storage/storage.state.ts",{"_index":741,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:27",{"_index":756,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:45",{"_index":763,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:55",{"_index":751,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:65",{"_index":747,"title":{},"body":{"injectables/StorageState.html":{}}}],["state[id",{"_index":471,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["statecontext",{"_index":854,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stateselector",{"_index":654,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["statetoken",{"_index":647,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["static",{"_index":40,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storage",{"_index":119,"title":{},"body":{"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["storage.actions",{"_index":768,"title":{},"body":{"injectables/StorageState.html":{}}}],["storage.model",{"_index":129,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storage.state",{"_index":729,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["storagecontext",{"_index":745,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["storageid",{"_index":126,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["storageid.local",{"_index":769,"title":{},"body":{"injectables/StorageState.html":{}}}],["storageid.session",{"_index":770,"title":{},"body":{"injectables/StorageState.html":{}}}],["storagemodel",{"_index":767,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["storageselectors",{"_index":714,"title":{"classes/StorageSelectors.html":{}},"body":{"classes/StorageSelectors.html":{}}}],["storagestate",{"_index":118,"title":{"injectables/StorageState.html":{}},"body":{"modules/CdkStateModule.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storagestate.getstorage(id).clear",{"_index":781,"title":{},"body":{"injectables/StorageState.html":{}}}],["storagestate.getstorage(id).getitem(key",{"_index":731,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["storagestate.getstorage(id).length",{"_index":740,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["storagestate.getstorage(id).removeitem(key",{"_index":780,"title":{},"body":{"injectables/StorageState.html":{}}}],["storagestate.getstorage(id).setitem(key",{"_index":778,"title":{},"body":{"injectables/StorageState.html":{}}}],["store",{"_index":301,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"interfaces/SelectOptions.html":{}}}],["stored",{"_index":125,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storing",{"_index":692,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["strategy",{"_index":399,"title":{},"body":{"directives/LinkDirective.html":{}}}],["stream",{"_index":695,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":808,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":653,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":143,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["subject",{"_index":225,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["subject.ts",{"_index":198,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["subject.ts:27",{"_index":635,"title":{},"body":{"classes/ScopedDestructorSubject.html":{}}}],["subject.ts:9",{"_index":205,"title":{},"body":{"interfaces/DestructorScope.html":{}}}],["such",{"_index":775,"title":{},"body":{"injectables/StorageState.html":{}}}],["super",{"_index":70,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["super(1",{"_index":235,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["supplied",{"_index":728,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["switch",{"_index":544,"title":{},"body":{"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/StorageState.html":{}}}],["t",{"_index":247,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/typealiases.html":{}}}],["t[k",{"_index":606,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["tagname",{"_index":409,"title":{},"body":{"directives/LinkDirective.html":{}}}],["takeuntil",{"_index":649,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["tap",{"_index":650,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["target",{"_index":344,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":178,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templateportal",{"_index":253,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templateportal(content",{"_index":267,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templateref",{"_index":259,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templates",{"_index":245,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["test",{"_index":216,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"index.html":{}}}],["tests",{"_index":819,"title":{},"body":{"index.html":{}}}],["text",{"_index":538,"title":{},"body":{"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["text(getfield",{"_index":594,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["text_entry",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this._data",{"_index":269,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.addmany(ctx",{"_index":530,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["this.addone(ctx",{"_index":634,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["this.addyaml(ctx",{"_index":540,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["this.complete",{"_index":238,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["this.el.tagname.tolowercase",{"_index":410,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.errorvalue",{"_index":712,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.getentry(state",{"_index":466,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["this.gethref(link",{"_index":442,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.href",{"_index":436,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.http",{"_index":535,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["this.http.get(url",{"_index":629,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["this.increasechangecount(ctx",{"_index":779,"title":{},"body":{"injectables/StorageState.html":{}}}],["this.link",{"_index":434,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.navigate(linkid",{"_index":431,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.navigatetoexternal(entry",{"_index":550,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["this.navigatetointernal(entry",{"_index":548,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["this.next",{"_index":237,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["this.portal",{"_index":266,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.portal.context",{"_index":275,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.querylink(this.linkid",{"_index":435,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.rel",{"_index":438,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.router.navigate(entry.commands",{"_index":560,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["this.target",{"_index":437,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.updatecontent",{"_index":270,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.updatelink",{"_index":423,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.value",{"_index":713,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.viewcontainerref",{"_index":268,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.zone.run",{"_index":559,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["throw",{"_index":551,"title":{},"body":{"injectables/LinkRegistryState.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["throws",{"_index":711,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["tied",{"_index":676,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["token",{"_index":680,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["top",{"_index":297,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["track",{"_index":478,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["transform((id",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform>(createcustomtype",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformation",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":145,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{}}}],["triggers",{"_index":360,"title":{},"body":{"directives/LinkDirective.html":{}}}],["true",{"_index":177,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":366,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ts",{"_index":736,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["tslib",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":833,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":846,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typematches",{"_index":472,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["typeof",{"_index":223,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["types",{"_index":717,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":734,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["typings",{"_index":856,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/cdk/injectors",{"_index":384,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ui/cdk/state",{"_index":389,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ui/theming",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["ui/utils",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["ui/utils/types",{"_index":463,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/SelectOptions.html":{}}}],["undefined",{"_index":229,"title":{},"body":{"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["union",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unionmember",{"_index":462,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["unique",{"_index":857,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unit",{"_index":818,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":221,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"classes/SnapshotObserver.html":{}}}],["unparsed",{"_index":80,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["unqiue",{"_index":91,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["up",{"_index":318,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["updatecontent",{"_index":321,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["updated",{"_index":786,"title":{},"body":{"injectables/StorageState.html":{}}}],["updatelink",{"_index":433,"title":{},"body":{"directives/LinkDirective.html":{}}}],["updates",{"_index":432,"title":{},"body":{"directives/LinkDirective.html":{}}}],["updation",{"_index":317,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["url",{"_index":86,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["url(getfield",{"_index":596,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["url/filename",{"_index":498,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["url_entry",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urls",{"_index":511,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["urlsecuritycontext",{"_index":416,"title":{},"body":{"directives/LinkDirective.html":{}}}],["urltree",{"_index":446,"title":{},"body":{"directives/LinkDirective.html":{}}}],["use",{"_index":249,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["used",{"_index":149,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":248,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["userhovers",{"_index":280,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["using",{"_index":555,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["validator",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":135,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value:string",{"_index":777,"title":{},"body":{"injectables/StorageState.html":{}}}],["values",{"_index":124,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":188,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["variables",{"_index":868,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":831,"title":{},"body":{"properties.html":{}}}],["view",{"_index":173,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"interfaces/SelectOptions.html":{}}}],["viewcontainerref",{"_index":163,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["void",{"_index":204,"title":{},"body":{"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["weakmap",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whenever",{"_index":657,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["whether",{"_index":212,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{}}}],["window",{"_index":562,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["window.open(entry.url",{"_index":564,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["withpositions",{"_index":290,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["withpush(true",{"_index":299,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["yaml",{"_index":78,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["yes",{"_index":497,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["z",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.any().array",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.boolean",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.discriminatedunion('type",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.enum(['merge",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":850,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["z.literal('reload",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(linktype.external",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(linktype.internal",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(rawbuiltinresourcetype.markdown",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(rawbuiltinresourcetype.text",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(rawbuiltinresourcetype.url",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.object",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.record",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.record(resource_id",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.record(z.any()).nullable",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().default('noopener",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.union([builtin_entry",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone",{"_index":528,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["zoom",{"_index":825,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionConstructor.html":{"url":"interfaces/ActionConstructor.html","title":"interface - ActionConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/actions/actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Base action constructor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Action type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { registerActionType } from './action-type-registry';\n\n/** Base action type */\nexport interface Action {\n  /** Action type */\n  readonly type: string;\n}\n\n/** Base action constructor */\nexport interface ActionConstructor {\n  /** Action type */\n  readonly type: string;\n\n  /** Create a new action */\n  new (): Action;\n}\n\n/**\n * Creates an action factory that adds a common group string to each action type\n * @param group Common action type group\n * @returns An action factory\n */\nexport function ActionGroup(group: string): (type: string) => ActionConstructor {\n  return (type) => Action(`[${group}] ${type}`);\n}\n\n/**\n * Creates a new base action with a specified type\n * @param type Action type\n * @returns A base action class\n */\nexport function Action(type: string): ActionConstructor {\n  registerActionType(type);\n  return class BaseAction {\n    static readonly type = type;\n    readonly type = type;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Add.html":{"url":"classes/Add.html","title":"class - Add","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Add\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add a single link\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: LinkId, entry: LinkEntry)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Add or overwrite a single link\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        LinkId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                link identifier\n\n                                                        \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        LinkEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                link entry\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   */\n  constructor(readonly id: LinkId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Add-1.html":{"url":"classes/Add-1.html","title":"class - Add-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Add\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add a single resource\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: ResourceId, entry: ResourceEntry)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Add or overwrite a single resource\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        ResourceId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource identifier\n\n                                                        \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        ResourceEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource entry\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddFromYaml.html":{"url":"classes/AddFromYaml.html","title":"class - AddFromYaml","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add entries from yaml file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(yaml: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:31\n                            \n                        \n\n                \n                    \n                            Add links from unparsed yaml\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        yaml\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unparsed yaml data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   */\n  constructor(readonly id: LinkId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddFromYaml-1.html":{"url":"classes/AddFromYaml-1.html","title":"class - AddFromYaml-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add resources from raw yaml data\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(yaml: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:31\n                            \n                        \n\n                \n                    \n                            Add resources from unparsed yaml\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        yaml\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unparsed yaml data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMany.html":{"url":"classes/AddMany.html","title":"class - AddMany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add multiple links at once\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entries: Partial>)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Add or overwrite multiple links\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    Partial>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                New links\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   */\n  constructor(readonly id: LinkId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMany-1.html":{"url":"classes/AddMany-1.html","title":"class - AddMany-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add multiple resources at once\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entries: Partial>)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Add or overwrite multiple resources\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    Partial>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                New resources\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CdkStateModule.html":{"url":"modules/CdkStateModule.html","title":"module - CdkStateModule","body":"\n                   \n\n\n\n\n    Modules\n    CdkStateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            state/src/state.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { LinkRegistryState } from './link-registry';\nimport { ResourceRegistryState } from './resource-registry';\nimport { StorageState } from './storage';\n\n@NgModule({\n  imports: [NgxsModule.forFeature([LinkRegistryState, ResourceRegistryState, StorageState])],\n})\nexport class CdkStateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clear.html":{"url":"classes/Clear.html","title":"class - Clear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clear the values stored in the specified StorageId\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: StorageId)\n                    \n                \n                        \n                            \n                                Defined in state/src/storage/storage.actions.ts:37\n                            \n                        \n\n                \n                    \n                            constructor class for clear action object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        StorageId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: StorageId - Storage identifier\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { StorageId } from './storage.model';\n\n/** Base action factory */\nconst Action = ActionGroup('Storage');\n\n/**\n * Class Set Action for set method\n */\nexport class Set extends Action('Set') {\n  /**\n   * constructor class for Set action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   * @param value - type: string - value to be stored with the key\n   */\n  constructor(readonly id: StorageId, readonly key: string, readonly value: string) {\n    super();\n  }\n}\n/**\n *  Class Delete Action for delete method\n */\nexport class Delete extends Action('Delete') {\n  /**\n   * constructor class for Delete action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   */\n  constructor(readonly id: StorageId, readonly key: string) {\n    super();\n  }\n}\n/**\n * Clear the values stored in the specified StorageId\n */\nexport class Clear extends Action('Clear') {\n  /**\n   * constructor class for clear action object\n   * @param id - type: StorageId - Storage identifier\n   */\n  constructor(readonly id: StorageId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Delete.html":{"url":"classes/Delete.html","title":"class - Delete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Delete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                 Class Delete Action for delete method\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: StorageId, key: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/storage/storage.actions.ts:24\n                            \n                        \n\n                \n                    \n                            constructor class for Delete action object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        StorageId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: StorageId - Storage identifier\n\n\n                                                        \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: string - Key to be stored in the storage identifier\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { StorageId } from './storage.model';\n\n/** Base action factory */\nconst Action = ActionGroup('Storage');\n\n/**\n * Class Set Action for set method\n */\nexport class Set extends Action('Set') {\n  /**\n   * constructor class for Set action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   * @param value - type: string - value to be stored with the key\n   */\n  constructor(readonly id: StorageId, readonly key: string, readonly value: string) {\n    super();\n  }\n}\n/**\n *  Class Delete Action for delete method\n */\nexport class Delete extends Action('Delete') {\n  /**\n   * constructor class for Delete action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   */\n  constructor(readonly id: StorageId, readonly key: string) {\n    super();\n  }\n}\n/**\n * Clear the values stored in the specified StorageId\n */\nexport class Clear extends Action('Clear') {\n  /**\n   * constructor class for clear action object\n   * @param id - type: StorageId - Storage identifier\n   */\n  constructor(readonly id: StorageId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DestroyHostComponent.html":{"url":"components/DestroyHostComponent.html","title":"component - DestroyHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DestroyHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    injectors/src/lib/on-destroy/destroy-host.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component used when attaching destroy lifecycle observables to a component/directive/pipe\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hra-destroy-host\n            \n\n\n            \n                styles\n                :host { display: none }\n            \n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(container: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/on-destroy/destroy-host.component.ts:19\n                \n            \n\n\n            \n                \n                    Creates a new DestroyHostComponent inside the provided container.\nThe element is inserted as the first child (index '0') in the container.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        View in which to create the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentRef\n\n                    \n                    \n                        The ComponentRef of the newly inserted element\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ComponentRef, ViewContainerRef } from '@angular/core';\n\n/**\n * Component used when attaching destroy lifecycle observables to a component/directive/pipe\n */\n@Component({\n  selector: 'hra-destroy-host',\n  standalone: true,\n  template: '',\n  styles: [':host { display: none }'],\n})\nexport class DestroyHostComponent {\n  /**\n   * Creates a new DestroyHostComponent inside the provided container.\n   * The element is inserted as the first child (index '0') in the container.\n   * @param container View in which to create the element\n   * @returns The ComponentRef of the newly inserted element\n   */\n  static create(container: ViewContainerRef): ComponentRef {\n    const ref = container.createComponent(DestroyHostComponent, { index: 0 });\n    const el: Element | null = ref.location.nativeElement;\n\n    el?.remove();\n    return ref;\n  }\n}\n\n    \n\n\n    \n            :host { display: none }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DestroyHostComponent', 'selector': 'hra-destroy-host'}];\n    var DIRECTIVES = [{'name': 'HoverDirective', 'selector': '[hraHover]'},{'name': 'LinkDirective', 'selector': '[hraLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'DestroyHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DestructorScope.html":{"url":"interfaces/DestructorScope.html","title":"interface - DestructorScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DestructorScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/on-destroy/destructor-subject.ts\n        \n\n\n            \n                Description\n            \n            \n                Object on which cleanup functions can be registered\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        onDestroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDestroy\n                        \n                    \n                \n            \n            \n                \nonDestroy(cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/on-destroy/destructor-subject.ts:9\n                \n            \n\n\n            \n                \n                    Register a cleanup function\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cleanup callback function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup functions can be registered */\nexport interface DestructorScope {\n  /**\n   * Register a cleanup function\n   * @param cb Cleanup callback function\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Determines whether an object is destructor scope like\n * @param obj Value to test\n * @returns true if the object seems to be a destructor scope, otherwise false\n */\nexport function isDestructorScopeLike(obj: unknown): obj is DestructorScope {\n  const isObject = typeof obj === 'object' && obj !== null;\n  return isObject && 'onDestroy' in obj && typeof obj.onDestroy === 'function';\n}\n\n/**\n * A subject type that is associated with a destructor scope.\n * When the cleanup function is run the subject emits a single\n * undefined value and immediately completes\n */\nexport class ScopedDestructorSubject extends ReplaySubject {\n  /**\n   * Creates a new subject and attaches cleanup to the destructor scope\n   * @param scope Associated scope\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HoverContext.html":{"url":"interfaces/HoverContext.html","title":"interface - HoverContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HoverContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/hover/hover.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Context passed to hover content templates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $implicit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $implicit:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data provided by the user for use inside the content template\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ConnectionPositionPair, Overlay } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Directive, ElementRef, HostListener, inject, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**  Context passed to hover content templates */\nexport interface HoverContext {\n  /** Data provided by the user for use inside the content template */\n  $implicit: T;\n}\n\n/** Hover overlay directive to be used across the application */\n@Directive({\n  selector: '[hraHover]',\n  standalone: true,\n})\nexport class HoverDirective {\n  /**  Setter for the content to be displayed in the overlay */\n  @Input('hraHover')\n  set content(content: TemplateRef>) {\n    this.portal = new TemplatePortal(content, this.viewContainerRef, this._data);\n    this.updateContent();\n  }\n\n  /** Setter for the context that is to be displayed in the portal attached to the overlay */\n  @Input('hraHoverData')\n  set data(data: T) {\n    this._data = { $implicit: data };\n    if (this.portal) {\n      this.portal.context = this._data;\n      this.updateContent();\n    }\n  }\n\n  /**  Reference to the element that the directive is attached to */\n  private readonly el: Element = inject(ElementRef).nativeElement;\n\n  /**  Reference to the overlay that is created when the userhovers over the element along with its position setting */\n  readonly overlayRef = inject(Overlay).create({\n    positionStrategy: inject(Overlay)\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n      ])\n      .withPush(true),\n  });\n\n  /** Reference view container that the directive is attached to */\n  private readonly viewContainerRef = inject(ViewContainerRef);\n\n  /** Store the data that is passed into the data input property */\n  private _data?: HoverContext;\n\n  /** Portal that is created to display the overlay */\n  portal?: TemplatePortal>;\n\n  /** Function to handle the mouse over event to attach the portal and display the hover content */\n  @HostListener('mouseover')\n  startHover(): void {\n    const { overlayRef, portal } = this;\n    if (!overlayRef.hasAttached() && portal) {\n      overlayRef.attach(portal);\n    }\n  }\n\n  /** Function to handle the mouse out event to detach the portal  */\n  @HostListener('mouseout')\n  endHover(): void {\n    const { overlayRef } = this;\n    if (overlayRef.hasAttached()) {\n      overlayRef.detach();\n    }\n  }\n\n  /** Function to handle the updation of overlay with up to date content when the input changes */\n  private updateContent(): void {\n    const { overlayRef, portal } = this;\n    if (overlayRef.hasAttached() && portal) {\n      overlayRef.detach();\n      overlayRef.attach(portal);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HoverDirective.html":{"url":"directives/HoverDirective.html","title":"directive - HoverDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  HoverDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/hover/hover.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Hover overlay directive to be used across the application\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [hraHover]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                overlayRef\n                            \n                            \n                                    Optional\n                                portal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endHover\n                            \n                            \n                                startHover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hraHover\n                            \n                            \n                                hraHoverData\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseout\n                            \n                            \n                                mouseover\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        hraHover\n                    \n                \n                \n                    \n                        Type :         TemplateRef>\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/hover/hover.directive.ts:19\n                            \n                        \n                \n                    \n                        Setter for the content to be displayed in the overlay\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hraHoverData\n                    \n                \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/hover/hover.directive.ts:26\n                            \n                        \n                \n                    \n                        Setter for the context that is to be displayed in the portal attached to the overlay\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mouseout\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:71\n                \n            \n\n\n            \n                \n                    Function to handle the mouse out event to detach the portal\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseover\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:62\n                \n            \n\n\n            \n                \n                    Function to handle the mouse over event to attach the portal and display the hover content\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        endHover\n                        \n                    \n                \n            \n            \n                \nendHover()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseout')\n                \n            \n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:71\n                \n            \n\n\n            \n                \n                    Function to handle the mouse out event to detach the portal\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startHover\n                        \n                    \n                \n            \n            \n                \nstartHover()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseover')\n                \n            \n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:62\n                \n            \n\n\n            \n                \n                    Function to handle the mouse over event to attach the portal and display the hover content\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        overlayRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Overlay).create({\n    positionStrategy: inject(Overlay)\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n      ])\n      .withPush(true),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/lib/hover/hover.directive.ts:38\n                        \n                    \n\n            \n                \n                    Reference to the overlay that is created when the userhovers over the element along with its position setting\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        portal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplatePortal>\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/hover/hover.directive.ts:58\n                        \n                    \n\n            \n                \n                    Portal that is created to display the overlay\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n\n                \n                    \n                        setcontent(content: TemplateRef>)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/hover/hover.directive.ts:19\n                                \n                            \n                    \n                        \n                                Setter for the content to be displayed in the overlay\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            content\n                                                    \n                                                            \n                                                                            TemplateRef>\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data: T)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/hover/hover.directive.ts:26\n                                \n                            \n                    \n                        \n                                Setter for the context that is to be displayed in the portal attached to the overlay\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { ConnectionPositionPair, Overlay } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Directive, ElementRef, HostListener, inject, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**  Context passed to hover content templates */\nexport interface HoverContext {\n  /** Data provided by the user for use inside the content template */\n  $implicit: T;\n}\n\n/** Hover overlay directive to be used across the application */\n@Directive({\n  selector: '[hraHover]',\n  standalone: true,\n})\nexport class HoverDirective {\n  /**  Setter for the content to be displayed in the overlay */\n  @Input('hraHover')\n  set content(content: TemplateRef>) {\n    this.portal = new TemplatePortal(content, this.viewContainerRef, this._data);\n    this.updateContent();\n  }\n\n  /** Setter for the context that is to be displayed in the portal attached to the overlay */\n  @Input('hraHoverData')\n  set data(data: T) {\n    this._data = { $implicit: data };\n    if (this.portal) {\n      this.portal.context = this._data;\n      this.updateContent();\n    }\n  }\n\n  /**  Reference to the element that the directive is attached to */\n  private readonly el: Element = inject(ElementRef).nativeElement;\n\n  /**  Reference to the overlay that is created when the userhovers over the element along with its position setting */\n  readonly overlayRef = inject(Overlay).create({\n    positionStrategy: inject(Overlay)\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n      ])\n      .withPush(true),\n  });\n\n  /** Reference view container that the directive is attached to */\n  private readonly viewContainerRef = inject(ViewContainerRef);\n\n  /** Store the data that is passed into the data input property */\n  private _data?: HoverContext;\n\n  /** Portal that is created to display the overlay */\n  portal?: TemplatePortal>;\n\n  /** Function to handle the mouse over event to attach the portal and display the hover content */\n  @HostListener('mouseover')\n  startHover(): void {\n    const { overlayRef, portal } = this;\n    if (!overlayRef.hasAttached() && portal) {\n      overlayRef.attach(portal);\n    }\n  }\n\n  /** Function to handle the mouse out event to detach the portal  */\n  @HostListener('mouseout')\n  endHover(): void {\n    const { overlayRef } = this;\n    if (overlayRef.hasAttached()) {\n      overlayRef.detach();\n    }\n  }\n\n  /** Function to handle the updation of overlay with up to date content when the input changes */\n  private updateContent(): void {\n    const { overlayRef, portal } = this;\n    if (overlayRef.hasAttached() && portal) {\n      overlayRef.detach();\n      overlayRef.attach(portal);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LinkDirective.html":{"url":"directives/LinkDirective.html","title":"directive - LinkDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LinkDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/link/link.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Link Directive for routing\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [hraLink]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                href\n                            \n                            \n                                    Optional\n                                rel\n                            \n                            \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hraLink\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                attr.href\n                            \n                            \n                                attr.rel\n                            \n                            \n                                attr.target\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        hraLink\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : EMPTY_LINK\n                    \n                \n                        \n                            \n                                    Defined in src/lib/link/link.directive.ts:32\n                            \n                        \n                \n                    \n                        linkId with empty string as default value\n\n                    \n                \n            \n        \n\n\n            \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        attr.href\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:34\n                        \n                    \n\n            \n                \n                    href of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attr.rel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:36\n                        \n                    \n\n            \n                \n                    rel attribute of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attr.target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:38\n                        \n                    \n\n            \n                \n                    target attribute of the element\n\n                \n            \n\n        \n    \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/lib/link/link.directive.ts:82\n                \n            \n\n\n            \n                \n                    Triggers when a click action is performed on the element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        type of event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/lib/link/link.directive.ts:82\n                \n            \n\n\n            \n                \n                    Triggers when a click action is performed on the element\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        type of event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true/false based on entry and element\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        href\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('attr.href')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:34\n                        \n                    \n\n            \n                \n                    href of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        rel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('attr.rel')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:36\n                        \n                    \n\n            \n                \n                    rel attribute of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('attr.target')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:38\n                        \n                    \n\n            \n                \n                    target attribute of the element\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n    \n        import { LocationStrategy } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnChanges,\n  SecurityContext,\n  SimpleChanges,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { dispatch, selectQuerySnapshot } from '@hra-ui/cdk/injectors';\nimport {\n  EMPTY_LINK,\n  InternalLinkEntry,\n  LinkEntry,\n  LinkRegistryActions,\n  LinkRegistrySelectors,\n  LinkType,\n} from '@hra-ui/cdk/state';\n\n/** Link Directive for routing */\n@Directive({\n  selector: '[hraLink]',\n  standalone: true,\n})\nexport class LinkDirective implements OnChanges {\n  /** linkId with empty string as default value */\n  @Input('hraLink') linkId = EMPTY_LINK;\n  /** href of the element */\n  @HostBinding('attr.href') href?: string;\n  /** rel attribute of the element */\n  @HostBinding('attr.rel') rel?: string;\n  /** target attribute of the element */\n  @HostBinding('attr.target') target?: string;\n\n  /** Native Element */\n  private readonly el: HTMLElement = inject(ElementRef).nativeElement;\n  /** Angular router */\n  private readonly router = inject(Router);\n  /** Activate route */\n  private readonly route = inject(ActivatedRoute, { optional: true });\n  /** Location strategy */\n  private readonly locationStrategy = inject(LocationStrategy);\n  /** DomSanitizer to sanitize the url */\n  private readonly sanitizer = inject(DomSanitizer);\n  /** Selector for querying the link registry state */\n  private readonly queryLink = selectQuerySnapshot(LinkRegistrySelectors.query);\n  /** Dispatch action to navigate to a url */\n  private readonly navigate = dispatch(LinkRegistryActions.Navigate);\n  /** tagName from Native Element */\n  private readonly tagName = this.el.tagName.toLowerCase();\n  /** to know if the element is an anchor element */\n  private readonly isAnchorElement = ['a', 'area'].includes(this.tagName);\n  /** url security context */\n  private readonly urlSecurityContext = ['base', 'link'].includes(this.tagName)\n    ? SecurityContext.RESOURCE_URL\n    : SecurityContext.URL;\n\n  /** Link Entry */\n  private link?: LinkEntry;\n\n  /**\n   * triggers when linkId changes\n   * @param changes contains changes of inputs\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['linkId'].currentValue !== EMPTY_LINK) {\n      this.updateLink();\n    }\n  }\n\n  /**\n   * Triggers when a click action is performed on the element\n   * @param event type of event\n   * @returns true/false based on entry and element\n   */\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): boolean {\n    const { link, linkId, isAnchorElement } = this;\n    if (!link) {\n      return true;\n    }\n\n    if (isAnchorElement) {\n      const { button, ctrlKey, shiftKey, altKey, metaKey } = event;\n      if (link.type === LinkType.External) {\n        return true;\n      }\n      if (button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {\n        return true;\n      }\n    }\n\n    this.navigate(linkId);\n    return !isAnchorElement;\n  }\n\n  /**\n   * Updates link when linkId changes\n   */\n  private updateLink(): void {\n    const link = (this.link = this.queryLink(this.linkId));\n    this.href = undefined;\n    this.target = undefined;\n    this.rel = undefined;\n    if (link) {\n      if (link.type === LinkType.External) {\n        this.href = link.url;\n        this.rel = link.rel;\n        this.target = link.target;\n      } else {\n        this.href = this.getHref(link) ?? undefined;\n      }\n    }\n  }\n\n  /**\n   * Creates a url tree and sanitizes the url\n   * @param link Internal link entry\n   * @returns A sanitized url string\n   */\n  private getHref(link: InternalLinkEntry): string | null {\n    const { router, route, locationStrategy, sanitizer, urlSecurityContext } = this;\n    const urlTree = router.createUrlTree(link.commands, {\n      ...link.extras,\n      relativeTo: route,\n    });\n    const url = locationStrategy.prepareExternalUrl(router.serializeUrl(urlTree));\n    return sanitizer.sanitize(urlSecurityContext, url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkRegistrySelectors.html":{"url":"classes/LinkRegistrySelectors.html","title":"class - LinkRegistrySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkRegistrySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for Link Registry\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        query\n                        \n                    \n                \n            \n            \n                \n                    \n                    query(state: LinkRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['LinkRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.selectors.ts:16\n                \n            \n\n\n            \n                \n                    Queries for a link entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                LinkRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LinkRegistryQuery\n\n                    \n                    \n                        link query function\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UnionMember } from '@hra-ui/utils/types';\nimport { Selector } from '@ngxs/store';\nimport { LinkEntry, LinkId, LinkRegistryModel, LinkType } from './link-registry.model';\nimport { LinkRegistryQuery, LinkRegistryState } from './link-registry.state';\n\n/**\n * Selectors for Link Registry\n */\nexport class LinkRegistrySelectors {\n  /**\n   * Queries for a link entry\n   * @param state Current state\n   * @returns link query function\n   */\n  @Selector([LinkRegistryState])\n  static query(state: LinkRegistryModel): LinkRegistryQuery {\n    return (id, type) => this.getEntry(state, id, type);\n  }\n\n  /**\n   * Gets a link entry by id and optionally type\n   * @param state link registry state\n   * @param id Entry id\n   * @param type Optional entry type\n   * @returns The entry if found, undefined otherwise\n   */\n  private static getEntry(\n    state: LinkRegistryModel,\n    id: LinkId,\n    type?: T\n  ): UnionMember | undefined {\n    const entry = state[id] as UnionMember;\n    const typeMatches = type === undefined || entry?.type === type;\n    return typeMatches ? entry : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LinkRegistryState.html":{"url":"injectables/LinkRegistryState.html","title":"injectable - LinkRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LinkRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State for keeping track of links globally\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMany\n                            \n                            \n                                addOne\n                            \n                            \n                                addYaml\n                            \n                            \n                                loadYaml\n                            \n                            \n                                    Async\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMany\n                        \n                    \n                \n            \n            \n                \naddMany(ctx: LinkRegistryContext, undefined: AddMany)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddMany)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:56\n                \n            \n\n\n            \n                \n                    Add multiple entries\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddMany\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOne\n                        \n                    \n                \n            \n            \n                \naddOne(ctx: LinkRegistryContext, undefined: Add)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Add)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:46\n                \n            \n\n\n            \n                \n                    Add a single entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                Add\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addYaml\n                        \n                    \n                \n            \n            \n                \naddYaml(ctx: LinkRegistryContext, undefined: AddFromYaml, filename?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:67\n                \n            \n\n\n            \n                \n                    Parse and add entries from yaml\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional url/filename from which the data was loaded (for improved error messages)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYaml\n                        \n                    \n                \n            \n            \n                \nloadYaml(ctx: LinkRegistryContext, undefined: LoadFromYaml)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LoadFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:80\n                \n            \n\n\n            \n                \n                    Load and add entries from an external yaml file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                LoadFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that completes when the entries has been added\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        navigate\n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(ctx: LinkRegistryContext, undefined: Navigate)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Navigate)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:93\n                \n            \n\n\n            \n                \n                    Navigate to Internal or External urls from id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                Navigate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UnionMember } from '@hra-ui/utils/types';\nimport { Action, State } from '@ngxs/store';\nimport { load } from 'js-yaml';\nimport { map, Observable } from 'rxjs';\nimport { Add, AddFromYaml, AddMany, LoadFromYaml, Navigate } from './link-registry.actions';\nimport {\n  ExternalLinkEntry,\n  InternalLinkEntry,\n  LinkEntry,\n  LinkId,\n  LinkRegistryContext,\n  LinkRegistryModel,\n  LinkType,\n  LINK_REGISTRY_SCHEMA,\n} from './link-registry.model';\n\n/** Query function for link entry optionally with type specified */\nexport type LinkRegistryQuery = (\n  id: LinkId,\n  type?: T\n) => UnionMember | undefined;\n\n/** State for keeping track of links globally */\n@State({\n  name: 'linkRegistry',\n  defaults: {},\n})\n@Injectable()\nexport class LinkRegistryState {\n  /** Http service for link loading */\n  private readonly http = inject(HttpClient);\n  /** Injects angular router */\n  private readonly router = inject(Router);\n  /** Injects ngZone for routing */\n  private readonly zone = inject(NgZone);\n\n  /**\n   * Add a single entry\n   * @param ctx State context\n   * @param action Action with id and entry to add\n   */\n  @Action(Add)\n  addOne(ctx: LinkRegistryContext, { id, entry }: Add): void {\n    this.addMany(ctx, new AddMany({ [id]: entry }));\n  }\n\n  /**\n   * Add multiple entries\n   * @param ctx State context\n   * @param action Action with entries to add\n   */\n  @Action(AddMany)\n  addMany(ctx: LinkRegistryContext, { entries }: AddMany): void {\n    ctx.patchState(entries);\n  }\n\n  /**\n   * Parse and add entries from yaml\n   * @param ctx State context\n   * @param action Action with raw yaml data\n   * @param filename Optional url/filename from which the data was loaded (for improved error messages)\n   */\n  @Action(AddFromYaml)\n  addYaml(ctx: LinkRegistryContext, { yaml }: AddFromYaml, filename?: string): void {\n    const data = load(yaml, { filename });\n    const entries = LINK_REGISTRY_SCHEMA.parse(data);\n    this.addMany(ctx, new AddMany(entries));\n  }\n\n  /**\n   * Load and add entries from an external yaml file\n   * @param ctx State context\n   * @param action Action with the external file url\n   * @returns An observable that completes when the entries has been added\n   */\n  @Action(LoadFromYaml)\n  loadYaml(ctx: LinkRegistryContext, { url }: LoadFromYaml): Observable {\n    return this.http\n      .get(url, { responseType: 'text' })\n      .pipe(map((data) => this.addYaml(ctx, new AddFromYaml(data), url)));\n  }\n\n  /**\n   * Navigate to Internal or External urls from id\n   * @param ctx State context\n   * @param param1 Navigate action with link id\n   * @returns A promise\n   */\n  @Action(Navigate)\n  async navigate(ctx: LinkRegistryContext, { id }: Navigate): Promise {\n    const entry = ctx.getState()[id];\n    switch (entry?.type) {\n      case LinkType.Internal:\n        await this.navigateToInternal(entry);\n        break;\n\n      case LinkType.External:\n        this.navigateToExternal(entry);\n        break;\n\n      default:\n        throw new Error(`Cannot navigate to non-existing link '${id}'`);\n    }\n  }\n\n  /**\n   * Method to navigate to an internal link using Angular router\n   * @param entry Internal Link Entry with commands and extras\n   */\n  private async navigateToInternal(entry: InternalLinkEntry): Promise {\n    await this.zone.run(() => this.router.navigate(entry.commands, entry.extras));\n  }\n\n  /**\n   * Method to navigate to an external link using window\n   * @param entry External link entry with url, target, and rel\n   */\n  private navigateToExternal(entry: ExternalLinkEntry): void {\n    window.open(entry.url, entry.target, entry.rel);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadFromYaml.html":{"url":"classes/LoadFromYaml.html","title":"class - LoadFromYaml","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add links from a remote yaml file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:42\n                            \n                        \n\n                \n                    \n                            Loads a remote yaml file and add links\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Remote yaml file url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   */\n  constructor(readonly id: LinkId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadFromYaml-1.html":{"url":"classes/LoadFromYaml-1.html","title":"class - LoadFromYaml-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add resources from a remote yaml file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:42\n                            \n                        \n\n                \n                    \n                            Loads a remote yaml file and add resources\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Remote yaml file url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMarkdown.html":{"url":"classes/LoadMarkdown.html","title":"class - LoadMarkdown","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMarkdown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add a markdown resource with data loaded from a remote file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: ResourceId, url: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:53\n                            \n                        \n\n                \n                    \n                            Loads a remote markdown file and add a resource\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        ResourceId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource id\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Remote markdown file url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Navigate.html":{"url":"classes/Navigate.html","title":"class - Navigate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Navigate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Navigate to an Internal or external url from Link id\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: LinkId)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:52\n                            \n                        \n\n                \n                    \n                            navigate to a link\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        LinkId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                unqiue identifier of link\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   */\n  constructor(readonly id: LinkId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceRegistrySelectors.html":{"url":"classes/ResourceRegistrySelectors.html","title":"class - ResourceRegistrySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceRegistrySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for ResourceRegistry\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                anyEntry\n                            \n                            \n                                    Static\n                                anyText\n                            \n                            \n                                    Static\n                                entry\n                            \n                            \n                                    Static\n                                field\n                            \n                            \n                                    Static\n                                markdown\n                            \n                            \n                                    Static\n                                text\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        anyEntry\n                        \n                    \n                \n            \n            \n                \n                    \n                    anyEntry(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:47\n                \n            \n\n\n            \n                \n                    Queries an entry by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AnyEntryQuery\n\n                    \n                    \n                        Any entry query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        anyText\n                        \n                    \n                \n            \n            \n                \n                    \n                    anyText(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:70\n                \n            \n\n\n            \n                \n                    Query for any text data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataQuery\n\n                    \n                    \n                        Text data query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        entry\n                        \n                    \n                \n            \n            \n                \n                    \n                    entry(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:37\n                \n            \n\n\n            \n                \n                    Queries an entry by id and type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntryQuery\n\n                    \n                    \n                        Entry query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        field\n                        \n                    \n                \n            \n            \n                \n                    \n                    field(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:57\n                \n            \n\n\n            \n                \n                    Queries a field of an entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldQuery\n\n                    \n                    \n                        A field query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        markdown\n                        \n                    \n                \n            \n            \n                \n                    \n                    markdown(getField: FieldQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['undefined'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:92\n                \n            \n\n\n            \n                \n                    Query for markdown data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getField\n                                    \n                                                FieldQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataQuery\n\n                    \n                    \n                        Markdown data query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        text\n                        \n                    \n                \n            \n            \n                \n                    \n                    text(getField: FieldQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['undefined'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:102\n                \n            \n\n\n            \n                \n                    Query for text data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getField\n                                    \n                                                FieldQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataQuery\n\n                    \n                    \n                        Text data query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(getField: FieldQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['undefined'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:112\n                \n            \n\n\n            \n                \n                    Query for an url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getField\n                                    \n                                                FieldQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataQuery\n\n                    \n                    \n                        Url query function\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport {\n  BuiltinResourceType,\n  getEntry,\n  ResourceEntry,\n  ResourceId,\n  ResourceRegistryModel,\n  ResourceType,\n} from './resource-registry.model';\nimport { ResourceRegistryState } from './resource-registry.state';\n\n/** Query function returned by {@link ResourceRegistrySelectors.entry} */\nexport type EntryQuery = (id: ResourceId, type: ResourceType) => T | undefined;\n\n/** Query function returned by {@link ResourceRegistrySelectors.anyEntry} */\nexport type AnyEntryQuery = (id: ResourceId) => ResourceEntry | undefined;\n\n/** Query function returned by {@link ResourceRegistrySelectors.field} */\nexport type FieldQuery = (\n  id: ResourceId,\n  type: ResourceType,\n  field: K,\n  defaultValue?: T[K]\n) => T[K];\n\n/** Query function for resource data */\nexport type DataQuery = (id: ResourceId) => T;\n\n/** Selectors for ResourceRegistry */\nexport class ResourceRegistrySelectors {\n  /**\n   * Queries an entry by id and type\n   * @param state Current state\n   * @returns Entry query function\n   */\n  @Selector([ResourceRegistryState])\n  static entry(state: ResourceRegistryModel): EntryQuery {\n    return (id, type) => getEntry(state, id, type);\n  }\n\n  /**\n   * Queries an entry by id\n   * @param state Current state\n   * @returns Any entry query function\n   */\n  @Selector([ResourceRegistryState])\n  static anyEntry(state: ResourceRegistryModel): AnyEntryQuery {\n    return (id) => getEntry(state, id);\n  }\n\n  /**\n   * Queries a field of an entry\n   * @param state Current state\n   * @returns A field query function\n   */\n  @Selector([ResourceRegistryState])\n  static field(state: ResourceRegistryModel): FieldQuery {\n    return (id, type, field, defaultValue?) => {\n      const entry = getEntry(state, id, type);\n      return entry?.[field] ?? (defaultValue as never);\n    };\n  }\n\n  /**\n   * Query for any text data\n   * @param state Current state\n   * @returns Text data query function\n   */\n  @Selector([ResourceRegistryState])\n  static anyText(state: ResourceRegistryModel): DataQuery {\n    return (id) => {\n      const entry = getEntry(state, id);\n      switch (entry?.type) {\n        case BuiltinResourceType.Markdown:\n          return entry.markdown ?? '';\n\n        case BuiltinResourceType.Text:\n          return entry.text ?? '';\n\n        default:\n          return '';\n      }\n    };\n  }\n\n  /**\n   * Query for markdown data\n   * @param state Current state\n   * @returns Markdown data query function\n   */\n  @Selector([ResourceRegistrySelectors.field])\n  static markdown(getField: FieldQuery): DataQuery {\n    return (id) => getField(id, BuiltinResourceType.Markdown, 'markdown', '');\n  }\n\n  /**\n   * Query for text data\n   * @param state Current state\n   * @returns Text data query function\n   */\n  @Selector([ResourceRegistrySelectors.field])\n  static text(getField: FieldQuery): DataQuery {\n    return (id) => getField(id, BuiltinResourceType.Text, 'text', '');\n  }\n\n  /**\n   * Query for an url\n   * @param state Current state\n   * @returns Url query function\n   */\n  @Selector([ResourceRegistrySelectors.field])\n  static url(getField: FieldQuery): DataQuery {\n    return (id) => getField(id, BuiltinResourceType.Url, 'url', '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceRegistryState.html":{"url":"injectables/ResourceRegistryState.html","title":"injectable - ResourceRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResourceRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State keeping track of global resources\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMany\n                            \n                            \n                                addOne\n                            \n                            \n                                addYaml\n                            \n                            \n                                loadMarkdown\n                            \n                            \n                                loadYaml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMany\n                        \n                    \n                \n            \n            \n                \naddMany(ctx: ResourceRegistryContext, undefined: AddMany)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddMany)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:40\n                \n            \n\n\n            \n                \n                    Add multiple entries\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddMany\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOne\n                        \n                    \n                \n            \n            \n                \naddOne(ctx: ResourceRegistryContext, undefined: Add)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Add)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:30\n                \n            \n\n\n            \n                \n                    Add a single entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                Add\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addYaml\n                        \n                    \n                \n            \n            \n                \naddYaml(ctx: ResourceRegistryContext, undefined: AddFromYaml, filename?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:51\n                \n            \n\n\n            \n                \n                    Parse and add entries from yaml\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional url/filename from which the data was loaded (for improved error messages)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMarkdown\n                        \n                    \n                \n            \n            \n                \nloadMarkdown(ctx: ResourceRegistryContext, undefined: LoadMarkdown)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LoadMarkdown)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:77\n                \n            \n\n\n            \n                \n                    Adds a markdown entry with content loaded from an external file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                LoadMarkdown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that completes when the entry has been added\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYaml\n                        \n                    \n                \n            \n            \n                \nloadYaml(ctx: ResourceRegistryContext, undefined: LoadFromYaml)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LoadFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:64\n                \n            \n\n\n            \n                \n                    Load and add entries from an external yaml file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                LoadFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that completes when the entries has been added\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, State } from '@ngxs/store';\nimport { load } from 'js-yaml';\nimport { map, Observable } from 'rxjs';\nimport { Add, AddFromYaml, AddMany, LoadFromYaml, LoadMarkdown } from './resource-registry.actions';\nimport {\n  BuiltinResourceType,\n  ResourceRegistryContext,\n  ResourceRegistryModel,\n  RESOURCE_REGISTRY_SCHEMA,\n} from './resource-registry.model';\n\n/** State keeping track of global resources */\n@State({\n  name: 'resourceRegistry',\n  defaults: {},\n})\n@Injectable()\nexport class ResourceRegistryState {\n  /** Http service for resource loading */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Add a single entry\n   * @param ctx State context\n   * @param action Action with id and entry to add\n   */\n  @Action(Add)\n  addOne(ctx: ResourceRegistryContext, { id, entry }: Add): void {\n    this.addMany(ctx, new AddMany({ [id]: entry }));\n  }\n\n  /**\n   * Add multiple entries\n   * @param ctx State context\n   * @param action Action with entries to add\n   */\n  @Action(AddMany)\n  addMany(ctx: ResourceRegistryContext, { entries }: AddMany): void {\n    ctx.patchState(entries);\n  }\n\n  /**\n   * Parse and add entries from yaml\n   * @param ctx State context\n   * @param action Action with raw yaml data\n   * @param filename Optional url/filename from which the data was loaded (for improved error messages)\n   */\n  @Action(AddFromYaml)\n  addYaml(ctx: ResourceRegistryContext, { yaml }: AddFromYaml, filename?: string): void {\n    const data = load(yaml, { filename });\n    const entries = RESOURCE_REGISTRY_SCHEMA.parse(data);\n    this.addMany(ctx, new AddMany(entries));\n  }\n\n  /**\n   * Load and add entries from an external yaml file\n   * @param ctx State context\n   * @param action Action with the external file url\n   * @returns An observable that completes when the entries has been added\n   */\n  @Action(LoadFromYaml)\n  loadYaml(ctx: ResourceRegistryContext, { url }: LoadFromYaml): Observable {\n    return this.http\n      .get(url, { responseType: 'text' })\n      .pipe(map((data) => this.addYaml(ctx, new AddFromYaml(data), url)));\n  }\n\n  /**\n   * Adds a markdown entry with content loaded from an external file\n   * @param ctx State context\n   * @param action Action with id and url to the external markdown\n   * @returns An observable that completes when the entry has been added\n   */\n  @Action(LoadMarkdown)\n  loadMarkdown(ctx: ResourceRegistryContext, { id, url }: LoadMarkdown): Observable {\n    return this.http.get(url, { responseType: 'text' }).pipe(\n      map((markdown) => new Add(id, { type: BuiltinResourceType.Markdown, markdown })),\n      map((action) => this.addOne(ctx, action))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScopedDestructorSubject.html":{"url":"classes/ScopedDestructorSubject.html","title":"class - ScopedDestructorSubject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScopedDestructorSubject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/on-destroy/destructor-subject.ts\n        \n\n\n            \n                Description\n            \n            \n                A subject type that is associated with a destructor scope.\nWhen the cleanup function is run the subject emits a single\nundefined value and immediately completes\n\n            \n\n            \n                Extends\n            \n            \n                    ReplaySubject\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scope: DestructorScope)\n                    \n                \n                        \n                            \n                                Defined in injectors/src/lib/on-destroy/destructor-subject.ts:27\n                            \n                        \n\n                \n                    \n                            Creates a new subject and attaches cleanup to the destructor scope\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        DestructorScope\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Associated scope\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup functions can be registered */\nexport interface DestructorScope {\n  /**\n   * Register a cleanup function\n   * @param cb Cleanup callback function\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Determines whether an object is destructor scope like\n * @param obj Value to test\n * @returns true if the object seems to be a destructor scope, otherwise false\n */\nexport function isDestructorScopeLike(obj: unknown): obj is DestructorScope {\n  const isObject = typeof obj === 'object' && obj !== null;\n  return isObject && 'onDestroy' in obj && typeof obj.onDestroy === 'function';\n}\n\n/**\n * A subject type that is associated with a destructor scope.\n * When the cleanup function is run the subject emits a single\n * undefined value and immediately completes\n */\nexport class ScopedDestructorSubject extends ReplaySubject {\n  /**\n   * Creates a new subject and attaches cleanup to the destructor scope\n   * @param scope Associated scope\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectOptions.html":{"url":"interfaces/SelectOptions.html","title":"interface - SelectOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/select/select.ts\n        \n\n\n            \n                Description\n            \n            \n                select$ configuration options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            notifyOnChange\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifyOnChange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifyOnChange:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to mark the containing view for change detection on emits. Defaults to true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, inject } from '@angular/core';\nimport { Any } from '@hra-ui/utils/types';\nimport { StateToken, Store } from '@ngxs/store';\nimport { MonoTypeOperatorFunction, Observable, takeUntil, tap } from 'rxjs';\nimport { injectDestroy$ } from '../on-destroy/on-destroy';\n\n/** Selector type for select style functions */\nexport type StateSelector = ((...args: Any[]) => T) | StateToken;\n\n/** `select$` configuration options */\nexport interface SelectOptions {\n  /** Whether to mark the containing view for change detection on emits. Defaults to true. */\n  notifyOnChange?: boolean;\n}\n\n/**\n * Marks a view for change detection whenever a new value is emitted\n * @param options Options to explicitly disable marking\n * @returns A rxjs operator\n */\nfunction markForCheck(options?: SelectOptions): MonoTypeOperatorFunction {\n  const notifyOnChange = options?.notifyOnChange ?? true;\n  const cdr = inject(ChangeDetectorRef, { optional: true });\n  if (notifyOnChange && cdr) {\n    const markFn = () => cdr.markForCheck();\n    return tap({ next: markFn, error: markFn, complete: markFn });\n  }\n\n  return (source) => source;\n}\n\n/**\n * Creates an observable emitting parts of the state. The observable's lifetime\n * is automatically tied to the injection context where this is called.\n * @param selector State selection function or token\n * @param options Additional select options\n * @returns An observable of the selected state\n */\nexport function select$(selector: StateSelector, options?: SelectOptions): Observable {\n  return inject(Store)\n    .select(selector as StateToken)\n    .pipe(takeUntil(injectDestroy$()), markForCheck(options));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Class Set Action for set method\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: StorageId, key: string, value: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/storage/storage.actions.ts:10\n                            \n                        \n\n                \n                    \n                            constructor class for Set action object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        StorageId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: StorageId - Storage identifier\n\n\n                                                        \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: string - Key to be stored in the storage identifier\n\n\n                                                        \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: string - value to be stored with the key\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { StorageId } from './storage.model';\n\n/** Base action factory */\nconst Action = ActionGroup('Storage');\n\n/**\n * Class Set Action for set method\n */\nexport class Set extends Action('Set') {\n  /**\n   * constructor class for Set action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   * @param value - type: string - value to be stored with the key\n   */\n  constructor(readonly id: StorageId, readonly key: string, readonly value: string) {\n    super();\n  }\n}\n/**\n *  Class Delete Action for delete method\n */\nexport class Delete extends Action('Delete') {\n  /**\n   * constructor class for Delete action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   */\n  constructor(readonly id: StorageId, readonly key: string) {\n    super();\n  }\n}\n/**\n * Clear the values stored in the specified StorageId\n */\nexport class Clear extends Action('Clear') {\n  /**\n   * constructor class for clear action object\n   * @param id - type: StorageId - Storage identifier\n   */\n  constructor(readonly id: StorageId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnapshotObserver.html":{"url":"classes/SnapshotObserver.html","title":"class - SnapshotObserver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnapshotObserver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/select/snapshot-observer.ts\n        \n\n\n            \n                Description\n            \n            \n                Observer storing the latest value from a snapshot stream\n\n            \n\n\n            \n                Implements\n            \n            \n                        NextObserver\n                        ErrorObserver\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                get\n                            \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(err)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select/snapshot-observer.ts:38\n                \n            \n\n\n            \n                \n                    Handles error emits\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The error value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select/snapshot-observer.ts:18\n                \n            \n\n\n            \n                \n                    Gets the latest value or throw on errors\n\n\n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        The latest value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(value: T)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select/snapshot-observer.ts:30\n                \n            \n\n\n            \n                \n                    Handles value emits\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorObserver, NextObserver } from 'rxjs';\n\n/** Object indicating that no error has been emitted */\nconst NO_ERROR_SENTINEL_OBJ = {};\n\n/** Observer storing the latest value from a snapshot stream */\nexport class SnapshotObserver implements NextObserver, ErrorObserver {\n  /** The latest value */\n  private value?: T = undefined;\n  /** An error value if not equal to `NO_ERROR_SENTINEL` */\n  private errorValue: unknown = NO_ERROR_SENTINEL_OBJ;\n\n  /**\n   * Gets the latest value or throw on errors\n   * @returns The latest value\n   * @throws If an error has been emitted\n   */\n  get(): T {\n    if (this.errorValue !== NO_ERROR_SENTINEL_OBJ) {\n      throw this.errorValue;\n    }\n\n    return this.value as T;\n  }\n\n  /**\n   * Handles value emits\n   * @param value The new value\n   */\n  next(value: T): void {\n    this.value = value;\n  }\n\n  /**\n   * Handles error emits\n   * @param err The error value\n   */\n  error(err: unknown): void {\n    this.value = undefined;\n    this.errorValue = err;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageSelectors.html":{"url":"classes/StorageSelectors.html","title":"class - StorageSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Storage selectors - class for retrieving storage types\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                length\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['StorageState'])\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.selectors.ts:13\n                \n            \n\n\n            \n                \n                    returns the value stored in the key,value pair in the storageId given\n\n\n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        (id,key) of the given storage id else undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        length\n                        \n                    \n                \n            \n            \n                \n                    \n                    length()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['StorageState'])\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.selectors.ts:23\n                \n            \n\n\n            \n                \n                    returns the number of items in the given storage id stored\n\n\n                    \n                    \n                    \n                        Returns :     number | undefined\n\n                    \n                    \n                        length of the given StorageId supplied\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { StorageId } from './storage.model';\nimport { StorageState } from './storage.state';\n/**\n * Storage selectors - class for retrieving storage types\n */\nexport class StorageSelectors {\n  /**\n   * returns the value stored in the key,value pair in the storageId given\n   * @returns (id,key) of the given storage id else undefined\n   */\n  @Selector([StorageState])\n  static get(): (id: StorageId, key: string) => string | undefined {\n    return (id, key) => StorageState.getStorage(id).getItem(key) ?? undefined;\n  }\n  /**\n   * returns the number of items in the given storage id stored\n   * @returns length of the given StorageId supplied\n   */\n  @Selector([StorageState])\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore Allow selector name\n  static length(): (id: StorageId) => number | undefined {\n    return (id) => StorageState.getStorage(id).length;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageState.html":{"url":"injectables/StorageState.html","title":"injectable - StorageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State holding Storage types\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                delete\n                            \n                            \n                                    Static\n                                getStorage\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear(ctx: StorageContext, undefined: Clear)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Clear)\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:65\n                \n            \n\n\n            \n                \n                    clears the values of the specified storage id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StorageContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStorageContext object\n\n\n                                    \n                                \n                                \n                                    \n                                                Clear\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(ctx: StorageContext, undefined: Delete)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Delete)\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:55\n                \n            \n\n\n            \n                \n                    deletes the value pointed by key in the list of values stored in the specified storage id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StorageContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStorageContext object\n\n\n                                    \n                                \n                                \n                                    \n                                                Delete\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(id: StorageId)\n                \n            \n\n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:27\n                \n            \n\n\n            \n                \n                    StorageState class to manage storage objects\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                StorageId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Storage\n\n                    \n                    \n                        \nStorage objects - session and local\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(ctx: StorageContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:45\n                \n            \n\n\n            \n                \n                    sets the key,value pair in the given storageId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StorageContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStorageContext object\n\n\n                                    \n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { produce } from 'immer';\nimport { StorageContext } from './storage.model';\nimport { Injectable } from '@angular/core';\nimport { Action, State } from '@ngxs/store';\nimport { StorageId, StorageModel } from './storage.model';\nimport { Set, Delete, Clear } from './storage.actions';\n/**\n * State holding Storage types\n */\n@State({\n  name: 'storage',\n  defaults: {\n    [StorageId.Local]: 0,\n    [StorageId.Session]: 0,\n  },\n})\n@Injectable()\n/**\n *  class for managing storage state\n */\nexport class StorageState {\n  /**\n   * StorageState class to manage storage objects\n   * @param id-Storage Identifier\n   * @returns - Storage objects - session and local\n   */\n  static getStorage(id: StorageId): Storage {\n    switch (id) {\n      case StorageId.Local:\n        return localStorage;\n\n      case StorageId.Session:\n        return sessionStorage;\n\n      default:\n        throw new Error(`No such storage '${id}'`);\n    }\n  }\n  /**\n   * sets the key,value pair in the given storageId\n   * @param ctx - StorageContext object\n   * @param param1- {id: StorageId ,key:string ,value:string} of type Set to set key,value pair for the given id\n   */\n  @Action(Set)\n  set(ctx: StorageContext, { id, key, value }: Set): void {\n    StorageState.getStorage(id).setItem(key, value);\n    this.increaseChangeCount(ctx, id);\n  }\n  /**\n   * deletes the value pointed by key in the list of values stored in the specified storage id\n   * @param ctx - StorageContext object\n   * @param param1- id: StorageId ,key:string ,value:string} of type Set to set key,value pair for the given id\n   */\n  @Action(Delete)\n  delete(ctx: StorageContext, { id, key }: Delete): void {\n    StorageState.getStorage(id).removeItem(key);\n    this.increaseChangeCount(ctx, id);\n  }\n  /**\n   * clears the values of the specified storage id\n   * @param ctx - StorageContext object\n   * @param param1 - id: StorageId ,key:string ,value:string} of type Set to set key,value pair for the given id\n   */\n  @Action(Clear)\n  clear(ctx: StorageContext, { id }: Clear): void {\n    StorageState.getStorage(id).clear();\n    this.increaseChangeCount(ctx, id);\n  }\n  /**\n   * increases count after each operation is performed on the specified storage id\n   * @param ctx  - StorageContext obje\n   * @param id - StorageId - Storage identifier for which the change count has to be updated\n   */\n  private increaseChangeCount(ctx: StorageContext, id: StorageId): void {\n    ctx.setState(\n      produce((draft) => {\n        draft[id] += 1;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @ngxs/store : ^3.7.6\n        \n            @hra-ui/theming : *\n        \n            @hra-ui/utils : *\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LinkType   (state/.../link-registry.model.ts)\n                        \n                        \n                            RawBuiltinResourceType   (state/.../resource-registry.model.ts)\n                        \n                        \n                            StorageId   (state/.../storage.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    state/src/link-registry/link-registry.model.ts\n    \n        \n            \n                \n                    \n                        \n                        LinkType\n                    \n                \n                    \n                        \n                            Types for Link\n\n                        \n                    \n                        \n                            \n                                 Internal\n                            \n                        \n                        \n                            \n                                Value : internal\n                            \n                        \n                        \n                            \n                                 External\n                            \n                        \n                        \n                            \n                                Value : external\n                            \n                        \n            \n        \n\n    state/src/resource-registry/resource-registry.model.ts\n    \n        \n            \n                \n                    \n                        \n                        RawBuiltinResourceType\n                    \n                \n                    \n                        \n                            Raw builtin type strings\n\n                        \n                    \n                        \n                            \n                                 Markdown\n                            \n                        \n                        \n                            \n                                Value : markdown\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 Url\n                            \n                        \n                        \n                            \n                                Value : url\n                            \n                        \n            \n        \n\n    state/src/storage/storage.model.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageId\n                    \n                \n                    \n                        \n                            StorageId - enum with values as Local, Session - identifier for storage types\n\n                        \n                    \n                        \n                            \n                                 Local\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 Session\n                            \n                        \n                        \n                            \n                                Value : session\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncdk\nThis library was generated with Nx.\nRunning unit tests\nRun nx test cdk to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CdkStateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnyEntryQuery   (state/.../resource-registry.selectors.ts)\n                        \n                        \n                            BuiltinTypes   (state/.../resource-registry.model.ts)\n                        \n                        \n                            CustomResourceEntry   (state/.../resource-registry.model.ts)\n                        \n                        \n                            CustomResourceType   (state/.../resource-registry.model.ts)\n                        \n                        \n                            DataQuery   (state/.../resource-registry.selectors.ts)\n                        \n                        \n                            EntryQuery   (state/.../resource-registry.selectors.ts)\n                        \n                        \n                            ExternalLinkEntry   (state/.../link-registry.model.ts)\n                        \n                        \n                            ExtractBuiltinEntryType   (state/.../resource-registry.model.ts)\n                        \n                        \n                            FieldQuery   (state/.../resource-registry.selectors.ts)\n                        \n                        \n                            InternalLinkEntry   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkEntry   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkId   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkRegistryContext   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkRegistryModel   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkRegistryQuery   (state/.../link-registry.state.ts)\n                        \n                        \n                            ResourceEntry   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceEntryPayload   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceId   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceRegistryContext   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceRegistryModel   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceType   (state/.../resource-registry.model.ts)\n                        \n                        \n                            RestArgs   (injectors/.../select-snapshot.ts)\n                        \n                        \n                            SelectQuery   (injectors/.../select-snapshot.ts)\n                        \n                        \n                            StateSelector   (injectors/.../select.ts)\n                        \n                        \n                            StorageContext   (state/.../storage.model.ts)\n                        \n                        \n                            StorageModel   (state/.../storage.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    state/src/resource-registry/resource-registry.selectors.ts\n    \n    \n        \n            \n                \n                    \n                    AnyEntryQuery\n                \n            \n            \n                \n                    Query function returned by ResourceRegistrySelectors.anyEntry\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataQuery\n                \n            \n            \n                \n                    Query function for resource data\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntryQuery\n                \n            \n            \n                \n                    Query function returned by ResourceRegistrySelectors.entry\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FieldQuery\n                \n            \n            \n                \n                    Query function returned by ResourceRegistrySelectors.field\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    state/src/resource-registry/resource-registry.model.ts\n    \n    \n        \n            \n                \n                    \n                    BuiltinTypes\n                \n            \n            \n                \n                    Maps raw builtin type strings to ResourceType\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CustomResourceEntry\n                \n            \n            \n                \n                    Typed custom resource entry\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CustomResourceType\n                \n            \n            \n                \n                    Custom entry types\n\n                \n            \n            \n                \n                         `custom:${T}`\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExtractBuiltinEntryType\n                \n            \n            \n                \n                    Extracts the builtin entry with type T\n\n                \n            \n            \n                \n                        UnionMember | type | T>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceEntry\n                \n            \n            \n                \n                    Any resource entry\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceEntryPayload\n                \n            \n            \n                \n                    Payload type used when creating custom types\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceId\n                \n            \n            \n                \n                    Resource identifier\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceRegistryContext\n                \n            \n            \n                \n                    Context type for action handlers\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceRegistryModel\n                \n            \n            \n                \n                    State data model\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceType\n                \n            \n            \n                \n                    Resource type string with entry typings\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    state/src/link-registry/link-registry.model.ts\n    \n    \n        \n            \n                \n                    \n                    ExternalLinkEntry\n                \n            \n            \n                \n                    type for external link entry\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InternalLinkEntry\n                \n            \n            \n                \n                    type for internal link entry\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkEntry\n                \n            \n            \n                \n                    entry for link registry\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkId\n                \n            \n            \n                \n                    Type for unique identifier for link\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkRegistryContext\n                \n            \n            \n                \n                    type for State Context of LinkRegistry\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkRegistryModel\n                \n            \n            \n                \n                    Model for LinkRegistry State\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    state/src/link-registry/link-registry.state.ts\n    \n    \n        \n            \n                \n                    \n                    LinkRegistryQuery\n                \n            \n            \n                \n                    Query function for link entry optionally with type specified\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    injectors/src/lib/select/select-snapshot.ts\n    \n    \n        \n            \n                \n                    \n                    RestArgs\n                \n            \n            \n                \n                    Get remaining arguments after applying bound arguments\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectQuery\n                \n            \n            \n                \n                    Function type returned by selectQuerySnapshot\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    injectors/src/lib/select/select.ts\n    \n    \n        \n            \n                \n                    \n                    StateSelector\n                \n            \n            \n                \n                    Selector type for select style functions\n\n                \n            \n            \n                \n                         | StateToken\n\n                \n            \n        \n    \n    state/src/storage/storage.model.ts\n    \n    \n        \n            \n                \n                    \n                    StorageContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StorageModel\n                \n            \n            \n                \n                    Type alias for the array of Storage objects\n\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (state/.../link-registry.actions.ts)\n                        \n                        \n                            Action   (state/.../resource-registry.actions.ts)\n                        \n                        \n                            Action   (state/.../storage.actions.ts)\n                        \n                        \n                            actionTypeRegistry   (state/.../action-type-registry.ts)\n                        \n                        \n                            BUILTIN_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                        \n                            BUILTIN_TYPE_VALUES   (state/.../resource-registry.model.ts)\n                        \n                        \n                            BuiltinResourceType   (state/.../resource-registry.model.ts)\n                        \n                        \n                            CUSTOM_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                        \n                            CUSTOM_ENTRY_TYPE   (state/.../resource-registry.model.ts)\n                        \n                        \n                            CUSTOM_TYPE_PREFIX   (state/.../resource-registry.model.ts)\n                        \n                        \n                            DESTRUCTOR_CACHE   (injectors/.../on-destroy.ts)\n                        \n                        \n                            EMPTY_LINK   (state/.../link-registry.model.ts)\n                        \n                        \n                            EXTERNAL_LINK_SCHEMA   (state/.../link-registry.model.ts)\n                        \n                        \n                            INTERNAL_LINK_SCHEMA   (state/.../link-registry.model.ts)\n                        \n                        \n                            LINK_REGISTRY_SCHEMA   (state/.../link-registry.model.ts)\n                        \n                        \n                            MARKDOWN_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                        \n                            NO_ERROR_SENTINEL_OBJ   (injectors/.../snapshot-observer.ts)\n                        \n                        \n                            RESOURCE_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                        \n                            RESOURCE_ID   (state/.../resource-registry.model.ts)\n                        \n                        \n                            RESOURCE_REGISTRY_SCHEMA   (state/.../resource-registry.model.ts)\n                        \n                        \n                            TEXT_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                        \n                            URL_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    state/src/link-registry/link-registry.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('LinkRegistry')\n                    \n                \n\n            \n                \n                    Base action factory\n\n                \n            \n\n        \n    \n\n    state/src/resource-registry/resource-registry.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('ResourceRegistry')\n                    \n                \n\n            \n                \n                    Base action factory\n\n                \n            \n\n        \n    \n\n    state/src/storage/storage.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Storage')\n                    \n                \n\n            \n                \n                    Base action factory\n\n                \n            \n\n        \n    \n\n    state/src/actions/action-type-registry.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        actionTypeRegistry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set()\n                    \n                \n\n            \n                \n                    Registry of action types\n\n                \n            \n\n        \n    \n\n    state/src/resource-registry/resource-registry.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BUILTIN_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.discriminatedUnion('type', [MARKDOWN_ENTRY, TEXT_ENTRY, URL_ENTRY])\n                    \n                \n\n            \n                \n                    Union of all builtin entries\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BUILTIN_TYPE_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(RawBuiltinResourceType)\n                    \n                \n\n            \n                \n                    Builtin type strings as an array\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BuiltinResourceType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RawBuiltinResourceType as BuiltinTypes\n                    \n                \n\n            \n                \n                    Builtin resource types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CUSTOM_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({ type: CUSTOM_ENTRY_TYPE }).passthrough()\n                    \n                \n\n            \n                \n                    Custom entry\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CUSTOM_ENTRY_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .refine((val) => !isBuiltinType(val), 'Invalid builtin resource format')\n  .transform>(createCustomType)\n                    \n                \n\n            \n                \n                    Custom entry type validator with transformation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CUSTOM_TYPE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'custom:'\n                    \n                \n\n            \n                \n                    Prefix of all custom types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MARKDOWN_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  type: z.literal(RawBuiltinResourceType.Markdown),\n  markdown: z.string(),\n})\n                    \n                \n\n            \n                \n                    Markdown data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.union([BUILTIN_ENTRY, CUSTOM_ENTRY])\n                    \n                \n\n            \n                \n                    Builtin or custom entries\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .transform((id) => `ResourceId:'${id}'`)\n  .brand('ResourceId')\n                    \n                \n\n            \n                \n                    Resource identifier validator with transformation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_REGISTRY_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.record(RESOURCE_ID, RESOURCE_ENTRY)\n                    \n                \n\n            \n                \n                    State schema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEXT_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  type: z.literal(RawBuiltinResourceType.Text),\n  text: z.string(),\n})\n                    \n                \n\n            \n                \n                    Text data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  type: z.literal(RawBuiltinResourceType.Url),\n  url: z.string(),\n})\n                    \n                \n\n            \n                \n                    External url\n\n                \n            \n\n        \n    \n\n    injectors/src/lib/on-destroy/on-destroy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DESTRUCTOR_CACHE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WeakMap>()\n                    \n                \n\n            \n                \n                    Cached destructor observables\n\n                \n            \n\n        \n    \n\n    state/src/link-registry/link-registry.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EMPTY_LINK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('@@__EMPTY__')\n                    \n                \n\n            \n                \n                    Empty link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXTERNAL_LINK_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    type: z.literal(LinkType.External),\n    url: z.string(),\n    rel: z.string().default('noopener'),\n    target: z.string(),\n  })\n  .partial({ rel: true, target: true })\n                    \n                \n\n            \n                \n                    Type for external link entry\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INTERNAL_LINK_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    type: z.literal(LinkType.Internal),\n    commands: z.any().array(),\n    extras: z\n      .object({\n        queryParams: z.record(z.any()).nullable(),\n        fragment: z.string(),\n        queryParamsHandling: z.enum(['merge', 'preserve', '']).nullable(),\n        preserveFragment: z.boolean(),\n        onSameUrlNavigation: z.literal('reload'),\n        skipLocationChange: z.boolean(),\n        replaceUrl: z.boolean(),\n      })\n      .partial(),\n  })\n  .partial({ extras: true })\n                    \n                \n\n            \n                \n                    Type for internal link entry\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LINK_REGISTRY_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.record(\n  z\n    .string()\n    .transform((id) => `LinkId:'${id}'`)\n    .brand('LinkId'),\n  z.discriminatedUnion('type', [EXTERNAL_LINK_SCHEMA, INTERNAL_LINK_SCHEMA])\n)\n                    \n                \n\n            \n                \n                    Schema for link registry\n\n                \n            \n\n        \n    \n\n    injectors/src/lib/select/snapshot-observer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NO_ERROR_SENTINEL_OBJ\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Object indicating that no error has been emitted\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
