var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddResource.html",[0,0.42,1,1.593]],["body/classes/AddResource.html",[0,0.555,1,2.767,2,1.168,3,0.67,4,0.67,5,0.67,6,1.372,7,1.372,8,2.162,9,0.781,10,1.819,11,2.461,12,1.693,13,0.265,14,1.587,15,2.998,16,2.767,17,1.083,18,0.889,19,2.162,20,1.764,21,2.566,22,1.687,23,1.208,24,3.657,25,1.802,26,1.802,27,0.889,28,0.054,29,0.774,30,0.774,31,2.88,32,2.461,33,1.823,34,1.812,35,0.67,36,2.795,37,0.67,38,1.551,39,1.812,40,1.02,41,1.385,42,2.392,43,1.472,44,1.573,45,2.162,46,2.936,47,0.036,48,0.036]],["title/interfaces/DestructorScope.html",[49,0.914,50,1.379]],["body/interfaces/DestructorScope.html",[0,0.426,3,0.463,4,0.463,5,0.463,9,0.599,13,0.37,17,0.397,18,0.614,23,0.614,25,0.807,26,0.807,27,0.614,28,0.054,29,0.535,30,0.806,35,0.463,37,0.698,43,1.332,47,0.027,48,0.027,49,0.614,50,2.01,51,1.071,52,1.398,53,1.217,54,0.927,55,1.217,56,3.119,57,1.887,58,1.887,59,1.615,60,1.944,61,1.887,62,2.01,63,1.86,64,1.887,65,2.529,66,1.887,67,2.272,68,2.451,69,1.887,70,1.887,71,1.527,72,1.242,73,1.75,74,1.252,75,0.807,76,1.252,77,1.615,78,1.252,79,0.807,80,2.391,81,1.887,82,0.927,83,2.529,84,1.398,85,1.887,86,1.071,87,1.252,88,0.927,89,1.071,90,1.252,91,1.071,92,1.91,93,1.252,94,1.252,95,1.252,96,1.252,97,1.252,98,1.252,99,1.071,100,2.272,101,0.704,102,0.927,103,1.071,104,1.252,105,1.615,106,1.252,107,1.252,108,1.252,109,1.252,110,1.071,111,1.252,112,1.252,113,1.252,114,1.252,115,2.01,116,1.252,117,1.252,118,1.252,119,1.071,120,1.252,121,0.927,122,1.683,123,1.071,124,1.071,125,1.944,126,1.944,127,1.606,128,2.165,129,1.944,130,1.944,131,1.423,132,1.071,133,1.887,134,1.071,135,1.071,136,2.609,137,1.252,138,1.252,139,1.615,140,1.615,141,1.071,142,1.071,143,1.071,144,1.944,145,1.071,146,1.615,147,1.252,148,1.252,149,1.252,150,1.252,151,1.252,152,1.252,153,1.252]],["title/classes/LoadMarkdown.html",[0,0.42,42,1.593]],["body/classes/LoadMarkdown.html",[0,0.553,1,2.386,2,1.163,3,0.667,4,0.667,5,0.667,6,1.369,7,1.369,8,2.151,9,0.779,10,1.817,11,1.803,12,1.692,13,0.264,14,1.582,15,2.992,16,2.763,17,1.082,18,0.885,19,2.151,20,1.761,21,2.099,22,1.38,23,1.204,25,1.798,26,1.798,27,0.885,28,0.054,29,0.77,30,0.77,31,2.877,32,1.803,33,2.216,34,1.803,35,0.667,36,2.788,37,0.667,38,1.543,39,2.453,40,1.38,41,1.38,42,2.763,43,1.469,44,1.817,45,2.926,46,2.926,47,0.036,48,0.036,154,3.645]],["title/interfaces/MarkdownResource.html",[49,0.914,155,1.593]],["body/interfaces/MarkdownResource.html",[3,0.663,4,0.663,5,0.663,6,0.881,7,0.881,9,0.57,10,1.01,12,1.69,13,0.262,14,1.577,17,1.152,20,1.01,22,1.01,28,0.054,33,2.314,37,0.663,40,1.916,41,1.856,44,1.758,47,0.036,48,0.036,49,1.2,51,1.536,55,1.577,155,2.38,156,1.536,157,2.986,158,2.445,159,2.781,160,3.318,161,2.445,162,1.157,163,1.795,164,1.795,165,2.781,166,2.092,167,1.795,168,1.795,169,1.329,170,1.795,171,2.445,172,1.157,173,2.092,174,1.795,175,1.795,176,1.329,177,1.795,178,1.329,179,1.795,180,1.536,181,1.795,182,1.536]],["title/components/OnDestroyHostComponent.html",[73,1.2,110,1.593]],["body/components/OnDestroyHostComponent.html",[0,0.411,3,0.442,4,0.442,5,0.442,9,0.38,13,0.323,18,1.085,23,0.587,25,1.176,26,1.176,28,0.054,29,0.779,30,0.511,35,0.442,37,0.674,43,1.306,47,0.026,48,0.026,49,0.587,50,1.831,52,1.351,53,1.176,54,0.886,55,0.771,56,2.804,57,1.196,58,1.196,60,1.024,61,1.196,62,1.637,64,1.196,65,1.824,66,1.196,67,1.824,68,2.399,69,1.196,70,1.196,71,1.391,72,1.085,73,1.938,74,1.196,75,0.771,76,1.196,77,1.561,78,1.196,79,0.771,80,2.366,81,1.824,82,0.886,83,2.472,84,1.351,85,1.824,86,1.024,87,1.196,88,0.886,89,1.024,90,1.196,91,1.024,92,1.938,93,1.196,94,1.196,95,1.196,96,1.196,97,1.196,98,1.196,99,1.561,100,3.006,101,1.244,102,1.637,103,1.891,104,1.196,105,1.561,106,1.196,107,2.21,108,2.21,109,2.21,110,2.115,111,1.824,112,1.824,113,2.21,114,2.472,115,1.971,116,1.196,117,1.196,118,1.196,119,1.024,120,1.196,121,0.886,122,1.637,123,1.024,124,1.024,125,1.891,126,1.891,127,1.578,128,2.115,129,1.891,130,1.891,131,1.391,132,1.024,133,1.824,134,1.024,135,1.024,136,2.573,137,1.196,138,1.196,139,1.561,140,1.561,141,1.024,142,1.024,143,1.024,144,1.891,145,1.024,146,1.561,147,1.196,148,1.196,149,1.196,150,1.196,151,1.196,152,1.196,153,1.196,183,1.824,184,1.778,185,1.778,186,1.778,187,1.778,188,2.71,189,1.427,190,3.674,191,1.778,192,1.196,193,1.778]],["title/classes/ResourceRegistrySelectors.html",[0,0.42,194,2.221]],["body/classes/ResourceRegistrySelectors.html",[0,0.274,2,0.783,3,0.449,4,0.449,5,0.449,6,1.222,7,1.222,9,0.791,12,1.756,13,0.177,15,3.25,17,1.08,20,1.804,21,2.292,22,1.649,23,1.095,27,1.095,28,0.054,29,0.952,30,0.952,31,2.976,33,1.983,35,0.682,37,0.824,38,1.039,40,1.587,41,0.683,43,1.482,44,1.401,47,0.027,48,0.027,59,1.578,71,1.037,72,1.482,101,1.507,115,0.899,127,1.401,131,1.775,158,1.844,162,0.783,169,1.844,172,1.606,174,1.214,176,2.436,178,2.436,194,2.2,195,1.804,196,2.74,197,1.844,198,2.74,199,2.2,200,2.74,201,1.804,202,4.031,203,2.74,204,1.804,205,2.74,206,2.74,207,1.804,208,2.2,209,1.214,210,1.804,211,2.74,212,2.74,213,1.804,214,1.804,215,1.448,216,2.23,217,2.74,218,1.214,219,1.804,220,1.804,221,1.804,222,1.804]],["title/injectables/ResourceRegistryState.html",[209,1.861,223,1.861]],["body/injectables/ResourceRegistryState.html",[0,0.324,1,2.651,3,0.532,4,0.532,5,0.532,6,1.21,7,1.21,9,0.783,10,1.689,11,2.092,12,1.588,13,0.21,16,1.231,17,0.783,20,1.177,21,2.716,22,1.177,23,1.027,27,1.027,28,0.054,29,1.053,30,0.894,31,2.813,32,1.438,36,1.438,37,1.11,38,1.231,39,2.092,40,1.387,41,0.809,42,2.651,43,1.521,44,1.177,47,0.03,48,0.03,55,1.349,59,1.79,62,1.826,72,1.027,75,0.928,79,0.928,80,1.826,82,1.065,127,0.809,131,1.177,159,1.438,162,0.928,169,1.065,172,0.928,176,1.55,178,1.065,180,2.462,182,2.716,199,2.496,202,4.017,209,2.092,216,2.092,223,2.092,224,2.138,225,2.138,226,3.109,227,3.109,228,2.138,229,4.023,230,3.109,231,3.109,232,2.138,233,3.109,234,2.138,235,2.138,236,2.138,237,2.138,238,1.438,239,2.138,240,2.138,241,3.109,242,2.496,243,3.109,244,2.138,245,2.138,246,2.138,247,2.138,248,2.138,249,2.138,250,2.138,251,2.138,252,2.138,253,3.109]],["title/classes/ScopedDestroySubject.html",[0,0.42,89,1.593]],["body/classes/ScopedDestroySubject.html",[0,0.423,2,0.802,3,0.46,4,0.46,5,0.46,9,0.596,13,0.331,17,0.395,18,0.922,23,0.61,25,0.802,26,0.802,27,0.61,28,0.054,29,0.531,30,0.802,35,0.694,37,0.694,43,1.329,47,0.027,48,0.027,49,0.61,50,2.108,52,1.391,53,1.211,54,0.921,55,0.802,56,3.114,57,1.243,58,1.243,60,1.064,61,1.243,62,1.867,64,1.243,65,1.878,66,1.243,67,2.263,68,2.494,69,1.243,70,1.243,71,1.523,72,1.111,73,1.745,74,1.243,75,0.802,76,1.243,77,1.607,78,1.243,79,0.802,80,2.388,81,2.263,82,0.921,83,3.042,84,1.867,85,2.521,86,1.607,87,1.878,88,1.391,89,1.607,90,1.878,91,1.607,92,2.008,93,1.878,94,1.878,95,1.243,96,1.243,97,1.243,98,1.243,99,1.064,100,2.263,101,0.7,102,0.921,103,1.064,104,1.243,105,1.607,106,1.243,107,1.243,108,1.243,109,1.243,110,1.064,111,1.243,112,1.243,113,1.243,114,1.243,115,2.005,116,1.243,117,1.243,118,1.243,119,1.064,120,1.243,121,0.921,122,1.676,123,1.064,124,1.064,125,1.936,126,1.936,127,1.602,128,2.158,129,1.936,130,1.936,131,1.419,132,1.064,133,1.878,134,1.064,135,1.064,136,2.603,137,1.243,138,1.243,139,1.607,140,1.607,141,1.064,142,1.064,143,1.064,144,1.936,145,1.064,146,1.607,147,1.243,148,1.243,149,1.243,150,1.243,151,1.243,152,1.243,153,1.243,254,1.848]],["title/classes/SnapshotObserver.html",[0,0.42,255,2.221]],["body/classes/SnapshotObserver.html",[0,0.24,2,0.686,3,0.393,4,0.393,5,0.393,9,0.737,13,0.156,16,0.911,17,0.801,18,0.522,23,1.238,25,1.074,27,1.008,28,0.054,29,0.877,30,0.992,35,1.279,37,0.932,41,1.155,43,1.238,47,0.024,48,0.024,53,0.686,59,1.426,62,1.981,71,1.505,72,1.46,75,0.686,79,0.686,82,0.788,84,1.234,88,1.72,92,1.918,99,0.911,101,1.573,102,0.788,103,1.426,105,1.757,115,1.981,119,1.757,127,1.155,131,0.938,162,0.686,172,1.074,183,1.666,192,1.666,197,2.053,216,2.053,218,2.974,238,1.666,255,2.771,256,2.674,257,2.674,258,1.064,259,3.974,260,2.476,261,3.548,262,3.008,263,2.476,264,2.476,265,4.42,266,2.476,267,1.582,268,3.452,269,1.582,270,3.452,271,2.771,272,2.476,273,2.476,274,2.771,275,3.452,276,1.582,277,3.974,278,1.988,279,3.191,280,2.476,281,1.582,282,3.051,283,1.582,284,2.476,285,3.051,286,2.476,287,2.476,288,1.582,289,1.988,290,2.771,291,1.27,292,1.988,293,1.582,294,2.449,295,1.582,296,1.27,297,2.476,298,1.582,299,1.582,300,2.476,301,1.582,302,1.582,303,2.476,304,2.476,305,3.051,306,1.582,307,1.582,308,1.064,309,1.064,310,1.27,311,2.053,312,2.476,313,1.988,314,1.988,315,1.988,316,1.988,317,1.988,318,1.988,319,1.988,320,1.988,321,1.582,322,1.582,323,1.582,324,1.582,325,1.582,326,1.582,327,1.582,328,1.666,329,1.666,330,1.27,331,1.27,332,1.582]],["title/interfaces/UrlResource.html",[49,0.914,173,1.593]],["body/interfaces/UrlResource.html",[3,0.663,4,0.663,5,0.663,6,0.881,7,0.881,9,0.57,10,1.01,12,1.706,13,0.262,14,1.577,17,1.152,20,1.01,22,1.01,28,0.054,33,2.314,37,0.663,40,1.68,41,1.856,44,1.938,47,0.036,48,0.036,49,1.2,51,1.536,55,1.157,155,2.092,156,1.536,157,2.986,158,1.795,159,1.795,160,3.318,161,2.445,162,1.157,163,1.795,164,1.795,165,2.781,166,2.092,167,1.795,168,1.795,169,1.329,170,1.795,171,2.445,172,1.577,173,2.38,174,2.781,175,1.795,176,1.329,177,1.795,178,1.329,179,1.795,180,1.536,181,1.795,182,1.536]],["title/dependencies.html",[333,1.875,334,2.66]],["body/dependencies.html",[28,0.053,47,0.046,48,0.046,79,1.71,102,2.322,162,1.71,334,3.74,335,3.941,336,3.941,337,3.941,338,3.941,339,4.659,340,3.941,341,3.941,342,3.941]],["title/miscellaneous/enumerations.html",[343,0.772,344,2.66]],["body/miscellaneous/enumerations.html",[6,1.254,7,1.254,12,1.254,13,0.373,20,1.725,28,0.051,35,1.215,40,1.437,44,1.725,47,0.045,48,0.045,156,2.812,157,2.554,163,2.554,164,2.554,165,2.554,166,2.185,167,2.554,168,2.554,169,2.271,170,2.554,171,3.066,343,1.254,344,3.047,345,3.657]],["title/miscellaneous/functions.html",[343,0.772,346,2.66]],["body/miscellaneous/functions.html",[9,0.916,10,1.302,13,0.189,17,0.916,18,0.948,27,1.417,28,0.05,29,1.232,30,1.232,35,0.949,47,0.028,48,0.028,50,1.902,52,0.955,53,0.832,54,2.036,68,2.216,71,1.624,72,1.544,73,0.832,75,0.832,77,1.98,80,2.545,84,1.43,86,1.652,88,1.43,91,1.104,92,1.773,101,1.624,121,0.955,122,1.43,125,1.98,126,1.98,127,0.726,128,2.198,129,1.98,130,1.98,131,1.445,132,1.104,134,1.104,135,1.104,136,1.104,139,1.98,140,1.652,141,1.104,142,1.104,143,1.104,144,1.104,145,1.104,146,1.104,172,0.832,183,2.313,189,1.539,192,2.313,197,2.313,215,1.539,218,1.29,238,1.93,242,1.539,256,1.29,257,1.29,258,2.313,261,2.303,262,2.76,271,2.303,274,2.303,278,1.539,279,2.303,290,2.76,291,1.539,292,2.76,294,1.539,296,1.539,308,1.93,309,1.93,311,2.568,313,3.064,314,3.064,315,2.76,316,2.303,317,2.303,318,2.303,319,2.303,320,1.539,328,2.313,329,1.93,330,1.539,331,1.539,343,0.633,346,2.303,347,2.869,348,1.539,349,2.869,350,3.064,351,2.869,352,2.869,353,2.303,354,1.539,355,1.539,356,1.917,357,1.917,358,1.917,359,1.917,360,1.917,361,1.917,362,1.539,363,1.917,364,2.869,365,3.438,366,1.917,367,1.917,368,1.917,369,1.917,370,1.917,371,1.917,372,1.917,373,1.917,374,1.917,375,1.917,376,1.917,377,2.303,378,1.917,379,1.917,380,1.917,381,2.869,382,1.917,383,1.917,384,2.869,385,1.917,386,2.869,387,1.917,388,1.917,389,1.917,390,2.869,391,1.917,392,1.917,393,1.917,394,1.917,395,1.917,396,1.917,397,1.917,398,1.917,399,1.917,400,1.917,401,1.917,402,1.917,403,1.917,404,1.917,405,2.869,406,1.917,407,1.917,408,1.917]],["title/index.html",[13,0.23,208,1.875,409,2.335]],["body/index.html",[28,0.046,47,0.046,48,0.046,410,4.747,411,4.068,412,4.068,413,4.747,414,4.068,415,4.747,416,4.747,417,4.068,418,4.068,419,4.068]],["title/modules.html",[420,2.99]],["body/modules.html",[28,0.048,47,0.048,48,0.048,420,3.426]],["title/overview.html",[421,2.99]],["body/overview.html",[2,1.798,28,0.047,47,0.047,48,0.047,51,2.386,73,1.798,223,2.788,421,3.326,422,4.798,423,4.143,424,4.143]],["title/properties.html",[14,1.438,333,1.875]],["body/properties.html",[14,1.831,28,0.05,47,0.047,48,0.047,425,4.22,426,4.22]],["title/miscellaneous/typealiases.html",[343,0.772,427,3.313]],["body/miscellaneous/typealiases.html",[6,1.115,7,1.115,10,1.755,12,1.401,13,0.332,17,1.108,18,1.115,22,1.605,26,1.465,28,0.049,47,0.041,48,0.041,71,1.605,72,1.115,101,1.278,155,1.944,156,2.8,161,2.272,166,1.944,173,1.944,175,2.272,176,1.682,177,2.272,178,2.113,179,2.272,180,1.944,181,2.272,182,2.442,256,2.272,257,2.272,258,2.853,289,2.71,308,2.272,309,2.272,310,2.71,311,2.853,328,2.272,329,2.272,343,1.115,345,3.721,348,2.71,353,2.71,354,2.71,355,2.71,362,3.404,377,2.71,428,3.376,429,3.376,430,3.376,431,3.376]],["title/miscellaneous/variables.html",[343,0.772,432,2.66]],["body/miscellaneous/variables.html",[13,0.461,28,0.049,34,2.68,35,0.991,47,0.046,48,0.046,52,1.985,53,1.728,54,2.337,60,2.293,68,1.985,92,1.728,121,1.985,122,1.985,123,2.7,124,2.293,343,1.315,350,3.197,432,3.197]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":147,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["0.0.1",{"_index":426,"title":{},"body":{"properties.html":{}}}],["1",{"_index":422,"title":{},"body":{"overview.html":{}}}],["1165545544",{"_index":406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["1199063426",{"_index":407,"title":{},"body":{"miscellaneous/functions.html":{}}}],["15.1.0",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":424,"title":{},"body":{"overview.html":{}}}],["3.7.6",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":423,"title":{},"body":{"overview.html":{}}}],["accepts",{"_index":429,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["action",{"_index":10,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["action(addresource",{"_index":227,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["action(loadmarkdown",{"_index":231,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["actiontype",{"_index":360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["actual_component",{"_index":193,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["add",{"_index":250,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["added",{"_index":32,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["adding",{"_index":11,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["addresource",{"_index":1,"title":{"classes/AddResource.html":{}},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["addresource(ctx",{"_index":226,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["addresourceentry",{"_index":252,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["aliases",{"_index":428,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular/common",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":234,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["angular/core",{"_index":79,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"dependencies.html":{}}}],["anyfunction",{"_index":293,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["args",{"_index":312,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["argument",{"_index":310,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/typealiases.html":{}}}],["arguments",{"_index":329,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["associated",{"_index":129,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["automatic",{"_index":357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["automatically",{"_index":84,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["available",{"_index":319,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":215,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/functions.html":{}}}],["before",{"_index":378,"title":{},"body":{"miscellaneous/functions.html":{}}}],["block",{"_index":109,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["build",{"_index":372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["call",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["callback",{"_index":65,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["callbacks",{"_index":57,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["called",{"_index":315,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["care",{"_index":397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["caveats",{"_index":375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cb",{"_index":70,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["cdk",{"_index":410,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":270,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["change",{"_index":271,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["changedetectorref",{"_index":268,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["class",{"_index":0,"title":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"overview.html":{}}}],["cleanup",{"_index":56,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["comment",{"_index":402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complete",{"_index":88,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["completes",{"_index":364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["completion",{"_index":278,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["complex",{"_index":373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["component",{"_index":73,"title":{"components/OnDestroyHostComponent.html":{}},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["component/directive/etc",{"_index":408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["component_template",{"_index":191,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["components",{"_index":183,"title":{},"body":{"components/OnDestroyHostComponent.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["const",{"_index":115,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["constructor(cdr",{"_index":267,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["constructor(id",{"_index":19,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{}}}],["constructor(private",{"_index":301,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["constructor(readonly",{"_index":46,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{}}}],["constructor(scope",{"_index":94,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["container",{"_index":140,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["containing",{"_index":242,"title":{},"body":{"injectables/ResourceRegistryState.html":{},"miscellaneous/functions.html":{}}}],["content",{"_index":158,"title":{},"body":{"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"interfaces/UrlResource.html":{}}}],["context",{"_index":180,"title":{},"body":{"interfaces/MarkdownResource.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["control",{"_index":369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controlling",{"_index":399,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":91,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":134,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":25,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["ctx",{"_index":229,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["data",{"_index":172,"title":{},"body":{"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{},"miscellaneous/functions.html":{}}}],["data$.subscribe(observer",{"_index":326,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["decorators",{"_index":199,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["default",{"_index":34,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":237,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["dependencies",{"_index":334,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{},"miscellaneous/functions.html":{}}}],["destroy",{"_index":103,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["destroy.ts",{"_index":54,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["destroy.ts:10",{"_index":63,"title":{},"body":{"interfaces/DestructorScope.html":{}}}],["destroy.ts:17",{"_index":254,"title":{},"body":{"classes/ScopedDestroySubject.html":{}}}],["destroy.ts:39",{"_index":186,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["destroy/on",{"_index":53,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["destroyed",{"_index":390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["destruction",{"_index":69,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["destructorscope",{"_index":50,"title":{"interfaces/DestructorScope.html":{}},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["detection",{"_index":318,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["detector",{"_index":272,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["different",{"_index":166,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["directive",{"_index":189,"title":{},"body":{"components/OnDestroyHostComponent.html":{},"miscellaneous/functions.html":{}}}],["directives",{"_index":192,"title":{},"body":{"components/OnDestroyHostComponent.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["dispatch",{"_index":347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dispatch(actiontype",{"_index":355,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["dispatcher",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["dispatches",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dispatching",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["display",{"_index":108,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["dom",{"_index":113,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["don't",{"_index":391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["during",{"_index":67,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["each",{"_index":313,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["early",{"_index":401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["el",{"_index":116,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["el?.remove",{"_index":120,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["element",{"_index":114,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["elementref",{"_index":74,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["emit",{"_index":86,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["emits",{"_index":279,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["emitted",{"_index":275,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["empty",{"_index":99,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["entry",{"_index":21,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["entry?.type",{"_index":222,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["enum",{"_index":165,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":344,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":282,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["error",{"_index":265,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["error(err",{"_index":280,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errors",{"_index":286,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errorvalue",{"_index":299,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["execute",{"_index":419,"title":{},"body":{"index.html":{}}}],["existing",{"_index":128,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["explicitly",{"_index":389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":41,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{}}}],["extends",{"_index":90,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["extract",{"_index":219,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["failure",{"_index":400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":298,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{}}}],["find",{"_index":126,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["findorcreatescopedsubject",{"_index":349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findorcreatescopedsubject(component.hostview",{"_index":153,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["findorcreatescopedsubject(inject(ngmoduleref",{"_index":151,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["findorcreatescopedsubject(scope",{"_index":135,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["findscopedsubject",{"_index":351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findscopedsubject(scope",{"_index":132,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["findscopedsubjectinview",{"_index":352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findscopedsubjectinview(ref",{"_index":146,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["found",{"_index":130,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":71,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":346,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":412,"title":{},"body":{"index.html":{}}}],["get()(...args",{"_index":332,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["get(url",{"_index":245,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["getentrybytype",{"_index":217,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["getentrybytype(state",{"_index":220,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["gets",{"_index":284,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["getting",{"_index":208,"title":{"index.html":{}},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["guarantees",{"_index":376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handlers",{"_index":181,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["handles",{"_index":277,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["haserror",{"_index":297,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["hold",{"_index":157,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["hook",{"_index":382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["host",{"_index":100,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["hra",{"_index":102,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"dependencies.html":{}}}],["html",{"_index":188,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["htmlelement",{"_index":118,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["http",{"_index":239,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["httpclient",{"_index":233,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["https://github.com/angular/angular/issues/10185",{"_index":403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://github.com/angular/angular/issues/10185#issuecomment",{"_index":405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":31,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["identifier",{"_index":164,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["image",{"_index":171,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["immediately",{"_index":111,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["implements",{"_index":264,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{}}}],["important",{"_index":393,"title":{},"body":{"miscellaneous/functions.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":160,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{}}}],["inject",{"_index":75,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["inject(changedetectorref",{"_index":322,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["inject(elementref).nativeelement",{"_index":117,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["inject(httpclient",{"_index":240,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["inject(store",{"_index":321,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["inject(viewcontainerref",{"_index":150,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["injectable",{"_index":223,"title":{"injectables/ResourceRegistryState.html":{}},"body":{"injectables/ResourceRegistryState.html":{},"overview.html":{}}}],["injectables",{"_index":224,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["injected",{"_index":367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injection",{"_index":374,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectondestroy",{"_index":292,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["injectors/.../dispatch.ts",{"_index":348,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["injectors/.../on",{"_index":350,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["injectors/.../select",{"_index":353,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["injectors/src/lib/dispatch/dispatch.ts",{"_index":354,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["injectors/src/lib/on",{"_index":52,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["injectors/src/lib/select",{"_index":256,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["injects",{"_index":238,"title":{},"body":{"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":26,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/typealiases.html":{}}}],["instances",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["intentionally",{"_index":307,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["interface",{"_index":49,"title":{"interfaces/DestructorScope.html":{},"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{}},"body":{"interfaces/DestructorScope.html":{},"interfaces/MarkdownResource.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"interfaces/UrlResource.html":{}}}],["interfaces",{"_index":51,"title":{},"body":{"interfaces/DestructorScope.html":{},"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"overview.html":{}}}],["latest",{"_index":261,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["legend",{"_index":187,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["length",{"_index":148,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["level",{"_index":385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":411,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":381,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lifetime",{"_index":370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["link",{"_index":93,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["literal",{"_index":431,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":45,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{}}}],["loading",{"_index":39,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadmarkdown",{"_index":42,"title":{"classes/LoadMarkdown.html":{}},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadmarkdown(ctx",{"_index":230,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["maintain",{"_index":398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manipulate",{"_index":395,"title":{},"body":{"miscellaneous/functions.html":{}}}],["markdown",{"_index":40,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["markdown(state",{"_index":198,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["markdownresource",{"_index":155,"title":{"interfaces/MarkdownResource.html":{}},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["marks",{"_index":316,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":48,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":170,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":185,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["method",{"_index":249,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["methods",{"_index":59,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{}}}],["miscellaneous",{"_index":343,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":177,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["module",{"_index":384,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":420,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mostly",{"_index":404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":29,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["never",{"_index":387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":92,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":266,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["next(value",{"_index":287,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["ngmoduleref",{"_index":76,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["ngondestroy",{"_index":380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ngxs/store",{"_index":162,"title":{},"body":{"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{},"dependencies.html":{}}}],["notify",{"_index":273,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["null",{"_index":119,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["nx",{"_index":413,"title":{},"body":{"index.html":{}}}],["object",{"_index":55,"title":{},"body":{"interfaces/DestructorScope.html":{},"interfaces/MarkdownResource.html":{},"components/OnDestroyHostComponent.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"interfaces/UrlResource.html":{}}}],["objects",{"_index":175,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["observable",{"_index":80,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["observables",{"_index":121,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["observer",{"_index":259,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["observer.get.bind(observer",{"_index":327,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["ondestroy",{"_index":60,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/variables.html":{}}}],["ondestroy(cb",{"_index":61,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["ondestroyhostcomponent",{"_index":110,"title":{"components/OnDestroyHostComponent.html":{}},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["operations",{"_index":394,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["overview",{"_index":421,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":142,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["owning",{"_index":122,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":333,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":43,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["param0",{"_index":251,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["param1",{"_index":241,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["passed",{"_index":430,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patchstate",{"_index":253,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["peer",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["perform",{"_index":66,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["pipe",{"_index":365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe(tap((data",{"_index":248,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["pipes",{"_index":317,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["private",{"_index":216,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"properties.html":{}}}],["queries",{"_index":205,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["query",{"_index":197,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["query(state",{"_index":203,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{}}}],["record",{"_index":179,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["ref",{"_index":144,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["ref.createcomponent(ondestroyhostcomponent",{"_index":152,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["ref.length",{"_index":149,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["register",{"_index":64,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["registered",{"_index":58,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["registers",{"_index":85,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["registry",{"_index":176,"title":{},"body":{"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["registry.actions",{"_index":236,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.actions.ts",{"_index":8,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{}}}],["registry.actions.ts:19",{"_index":24,"title":{},"body":{"classes/AddResource.html":{}}}],["registry.actions.ts:6",{"_index":154,"title":{},"body":{"classes/LoadMarkdown.html":{}}}],["registry.model",{"_index":38,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["registry.model.ts",{"_index":156,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["registry.selectors.ts",{"_index":195,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:12",{"_index":204,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:23",{"_index":207,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:34",{"_index":201,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.state",{"_index":210,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.state.ts",{"_index":225,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:32",{"_index":228,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:42",{"_index":232,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry/resource",{"_index":7,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["regular",{"_index":379,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rely",{"_index":392,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removes",{"_index":112,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["replaysubject",{"_index":81,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["resource",{"_index":12,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["resourceentry",{"_index":22,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["resourceid",{"_index":20,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["resourceregistry",{"_index":36,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["resourceregistrycontext",{"_index":182,"title":{},"body":{"interfaces/MarkdownResource.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistrymodel",{"_index":178,"title":{},"body":{"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistryselectors",{"_index":194,"title":{"classes/ResourceRegistrySelectors.html":{}},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["resourceregistrystate",{"_index":209,"title":{"injectables/ResourceRegistryState.html":{}},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["resources",{"_index":168,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["resourcetype",{"_index":169,"title":{},"body":{"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["resourcetype.markdown",{"_index":159,"title":{},"body":{"interfaces/MarkdownResource.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{}}}],["resourcetype.markdown)?.markdown",{"_index":214,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["resourcetype.url",{"_index":174,"title":{},"body":{"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"interfaces/UrlResource.html":{}}}],["responsetype",{"_index":246,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["result",{"_index":136,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":127,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["returned",{"_index":377,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":72,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["root",{"_index":383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":417,"title":{},"body":{"index.html":{}}}],["running",{"_index":414,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":82,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["same",{"_index":328,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["scope",{"_index":68,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["scope.ondestroy",{"_index":96,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["scopeddestroysubject",{"_index":89,"title":{"classes/ScopedDestroySubject.html":{}},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["scopeddestroysubject(scope).asobservable",{"_index":137,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["scopedsubjects",{"_index":123,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/variables.html":{}}}],["scopedsubjects.get(scope",{"_index":133,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["scopedsubjects.set(scope",{"_index":138,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["search",{"_index":145,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["searching",{"_index":141,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["selector",{"_index":101,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["selector(['resourceregistrystate",{"_index":200,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selector([resourceregistrystate",{"_index":212,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selectors",{"_index":196,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selectquerysnapshot",{"_index":309,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["selectquerysnapshot(selector",{"_index":331,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["selectsnapshot",{"_index":308,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["selectsnapshot(selector",{"_index":320,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["selectsnapshotselector",{"_index":311,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["service",{"_index":366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["services",{"_index":386,"title":{},"body":{"miscellaneous/functions.html":{}}}],["signatureof",{"_index":294,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["single",{"_index":87,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["snapshot",{"_index":262,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["snapshot.ts",{"_index":258,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["snapshot.ts:16",{"_index":269,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot.ts:29",{"_index":283,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot.ts:41",{"_index":288,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot.ts:50",{"_index":281,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot.ts:59",{"_index":276,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot/select",{"_index":257,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["snapshotobserver",{"_index":255,"title":{"classes/SnapshotObserver.html":{}},"body":{"classes/SnapshotObserver.html":{}}}],["snapshotobserver(cdr",{"_index":325,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{}}}],["standalone",{"_index":104,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["started",{"_index":409,"title":{"index.html":{}},"body":{}}],["state",{"_index":202,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["state/.../resource",{"_index":345,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state/src/resource",{"_index":6,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state[id",{"_index":221,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["statecontext",{"_index":161,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["statetoken",{"_index":289,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/typealiases.html":{}}}],["statetoken).pipe(takeuntil(destroy",{"_index":324,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["static",{"_index":15,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["store",{"_index":290,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["store.select(selector",{"_index":323,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["storing",{"_index":260,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["stream",{"_index":263,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"interfaces/UrlResource.html":{}}}],["styles",{"_index":107,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["subject",{"_index":83,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["super(1",{"_index":95,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["t",{"_index":218,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["take",{"_index":396,"title":{},"body":{"miscellaneous/functions.html":{}}}],["takeuntil",{"_index":291,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["taking",{"_index":330,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["tap",{"_index":235,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["template",{"_index":106,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["test",{"_index":418,"title":{},"body":{"index.html":{}}}],["tests",{"_index":416,"title":{},"body":{"index.html":{}}}],["text",{"_index":247,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["this.addresourceentry(ctx",{"_index":243,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["this.cdr?.markforcheck",{"_index":306,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.complete",{"_index":98,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["this.errorvalue",{"_index":304,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.getentrybytype(state",{"_index":211,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["this.haserror",{"_index":303,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.http",{"_index":244,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["this.next",{"_index":97,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["this.query(state)(id",{"_index":213,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["this.value",{"_index":305,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["throw",{"_index":285,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["throws",{"_index":302,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["time",{"_index":314,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["tree",{"_index":184,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["tries",{"_index":125,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["true",{"_index":105,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["tslib",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"interfaces/UrlResource.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":427,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":167,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["ui/theming",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["ui/utils",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["ui/utils/types",{"_index":295,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["undefined",{"_index":131,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":415,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":300,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["unless",{"_index":388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unqiue",{"_index":163,"title":{},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["url",{"_index":44,"title":{},"body":{"classes/AddResource.html":{},"classes/LoadMarkdown.html":{},"interfaces/MarkdownResource.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/UrlResource.html":{},"miscellaneous/enumerations.html":{}}}],["url(state",{"_index":206,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["urlresource",{"_index":173,"title":{"interfaces/UrlResource.html":{}},"body":{"interfaces/MarkdownResource.html":{},"interfaces/UrlResource.html":{},"miscellaneous/typealiases.html":{}}}],["used",{"_index":368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["using",{"_index":371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/AddResource.html":{},"interfaces/DestructorScope.html":{},"classes/LoadMarkdown.html":{},"components/OnDestroyHostComponent.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":190,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["variables",{"_index":432,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":425,"title":{},"body":{"properties.html":{}}}],["view",{"_index":139,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["viewcontainerref",{"_index":77,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["viewref",{"_index":78,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["views",{"_index":143,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["void",{"_index":62,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["weakmap",{"_index":124,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/variables.html":{}}}],["whenever",{"_index":274,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":296,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["wraps",{"_index":356,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddResource.html":{"url":"classes/AddResource.html","title":"class - AddResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action for Adding Resource\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: ResourceId, entry: ResourceEntry)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of AddResource\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        ResourceId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Id of resource\n\n                                                        \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        ResourceEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                resource to be added\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[ResourceRegistry] AddResource'\n                    \n                \n                    \n                        \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:19\n                        \n                    \n\n            \n                \n                    Action type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Action for Loading Markdown resource */\nexport class LoadMarkdown {\n  /** Action type */\n  static readonly type = '[ResourceRegistry] LoadMarkdown';\n\n  /**\n   * Creates an instance of LoadMarkdown\n   * @param id Id of resource\n   * @param url url of the resource to load\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {}\n}\n\n/** Action for Adding Resource */\nexport class AddResource {\n  /** Action type */\n  static readonly type = '[ResourceRegistry] AddResource';\n\n  /**\n   * Creates an instance of AddResource\n   * @param id Id of resource\n   * @param entry resource to be added\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DestructorScope.html":{"url":"interfaces/DestructorScope.html","title":"interface - DestructorScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DestructorScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/on-destroy/on-destroy.ts\n        \n\n\n            \n                Description\n            \n            \n                Object on which cleanup callbacks can be registered\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        onDestroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDestroy\n                        \n                    \n                \n            \n            \n                \nonDestroy(cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/on-destroy/on-destroy.ts:10\n                \n            \n\n\n            \n                \n                    Register a callback to perform cleanup during scope destruction\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cleanup callback\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Component, ElementRef, inject, NgModuleRef, ViewContainerRef, ViewRef } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup callbacks can be registered */\ninterface DestructorScope {\n  /**\n   * Register a callback to perform cleanup during scope destruction\n   * @param cb Cleanup callback\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Subject that automatically registers a cleanup function on a scope\n * During cleanup the subject will emit a single void value and then complete\n */\nclass ScopedDestroySubject extends ReplaySubject {\n  /**\n   * Create a new subject that automatically registers cleanup\n   * @param scope Scope which to link the new subject\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n/** Empty host component */\n@Component({\n  selector: 'hra-on-destroy-host',\n  standalone: true,\n  template: '',\n  styles: [':host { display: block; }'],\n})\nclass OnDestroyHostComponent {\n  /** Creates a new component instance that immediately removes its own DOM element */\n  constructor() {\n    const el = inject(ElementRef).nativeElement as HTMLElement | null;\n    el?.remove();\n  }\n}\n\n/** OnDestroy observables index by their owning scope */\nconst scopedSubjects = new WeakMap>();\n\n/**\n * Tries to find and return an existing observable associated with a scope\n * @param scope Owning scope\n * @returns The observable if found, else undefined\n */\nfunction findScopedSubject(scope: DestructorScope): Observable | undefined {\n  return scopedSubjects.get(scope);\n}\n\n/**\n * Tries to find an existing observable for the scope\n * If not found a new observable is created and associated with the scope\n * @param scope Owning scope\n * @returns The existing or new observable\n */\nfunction findOrCreateScopedSubject(scope: DestructorScope): Observable {\n  let result = scopedSubjects.get(scope);\n  if (!result) {\n    result = new ScopedDestroySubject(scope).asObservable();\n    scopedSubjects.set(scope, result);\n  }\n\n  return result;\n}\n\n/**\n * Tries to find an existing observable associated with a view container by searching all owned views\n * @param ref View container to search\n * @returns An observable if found, else undefined\n */\nfunction findScopedSubjectInView(ref: ViewContainerRef): Observable | undefined {\n  for (let index = 0, length = ref.length; index  {\n  const ref = inject(ViewContainerRef, { optional: true });\n  if (!ref) {\n    return findOrCreateScopedSubject(inject(NgModuleRef));\n  }\n\n  const result = findScopedSubjectInView(ref);\n  if (result) {\n    return result;\n  }\n\n  const component = ref.createComponent(OnDestroyHostComponent);\n  return findOrCreateScopedSubject(component.hostView);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMarkdown.html":{"url":"classes/LoadMarkdown.html","title":"class - LoadMarkdown","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMarkdown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action for Loading Markdown resource\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: ResourceId, url: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:6\n                            \n                        \n\n                \n                    \n                            Creates an instance of LoadMarkdown\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        ResourceId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Id of resource\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                url of the resource to load\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[ResourceRegistry] LoadMarkdown'\n                    \n                \n                    \n                        \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:6\n                        \n                    \n\n            \n                \n                    Action type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Action for Loading Markdown resource */\nexport class LoadMarkdown {\n  /** Action type */\n  static readonly type = '[ResourceRegistry] LoadMarkdown';\n\n  /**\n   * Creates an instance of LoadMarkdown\n   * @param id Id of resource\n   * @param url url of the resource to load\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {}\n}\n\n/** Action for Adding Resource */\nexport class AddResource {\n  /** Action type */\n  static readonly type = '[ResourceRegistry] AddResource';\n\n  /**\n   * Creates an instance of AddResource\n   * @param id Id of resource\n   * @param entry resource to be added\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkdownResource.html":{"url":"interfaces/MarkdownResource.html","title":"interface - MarkdownResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MarkdownResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.model.ts\n        \n\n\n            \n                Description\n            \n            \n                type to hold Resource object for markdown\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            markdown\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        markdown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        markdown:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    markdown content\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ResourceType.Markdown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceType.Markdown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates type for resource\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StateContext } from '@ngxs/store';\n\n/** Unqiue identifier for a resource */\nexport enum ResourceId {}\n\n/** Enum to hold different types of resources */\nexport enum ResourceType {\n  Markdown = 'md',\n  Url = 'url',\n  Image = 'image',\n}\n\n/** type to hold Resource object for markdown */\nexport interface MarkdownResource {\n  /** indicates type for resource */\n  type: ResourceType.Markdown;\n  /** markdown content */\n  markdown: string;\n}\n\n/** type to hold resource data for Url */\nexport interface UrlResource {\n  /** indicates type for resource */\n  type: ResourceType.Url;\n  /** url of the resource*/\n  url: string;\n}\n\n/** Type for different resource objects  */\nexport type ResourceEntry = { type: string } | MarkdownResource | UrlResource;\n\n/** Type for resource registry model */\nexport type ResourceRegistryModel = Record;\n\n/** Context type for action handlers */\nexport type ResourceRegistryContext = StateContext;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OnDestroyHostComponent.html":{"url":"components/OnDestroyHostComponent.html","title":"component - OnDestroyHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OnDestroyHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    injectors/src/lib/on-destroy/on-destroy.ts\n\n\n\n    \n        Description\n    \n    \n        Empty host component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hra-on-destroy-host\n            \n\n\n            \n                styles\n                :host { display: block; }\n            \n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in injectors/src/lib/on-destroy/on-destroy.ts:39\n                            \n                        \n\n                \n                    \n                            Creates a new component instance that immediately removes its own DOM element\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ElementRef, inject, NgModuleRef, ViewContainerRef, ViewRef } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup callbacks can be registered */\ninterface DestructorScope {\n  /**\n   * Register a callback to perform cleanup during scope destruction\n   * @param cb Cleanup callback\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Subject that automatically registers a cleanup function on a scope\n * During cleanup the subject will emit a single void value and then complete\n */\nclass ScopedDestroySubject extends ReplaySubject {\n  /**\n   * Create a new subject that automatically registers cleanup\n   * @param scope Scope which to link the new subject\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n/** Empty host component */\n@Component({\n  selector: 'hra-on-destroy-host',\n  standalone: true,\n  template: '',\n  styles: [':host { display: block; }'],\n})\nclass OnDestroyHostComponent {\n  /** Creates a new component instance that immediately removes its own DOM element */\n  constructor() {\n    const el = inject(ElementRef).nativeElement as HTMLElement | null;\n    el?.remove();\n  }\n}\n\n/** OnDestroy observables index by their owning scope */\nconst scopedSubjects = new WeakMap>();\n\n/**\n * Tries to find and return an existing observable associated with a scope\n * @param scope Owning scope\n * @returns The observable if found, else undefined\n */\nfunction findScopedSubject(scope: DestructorScope): Observable | undefined {\n  return scopedSubjects.get(scope);\n}\n\n/**\n * Tries to find an existing observable for the scope\n * If not found a new observable is created and associated with the scope\n * @param scope Owning scope\n * @returns The existing or new observable\n */\nfunction findOrCreateScopedSubject(scope: DestructorScope): Observable {\n  let result = scopedSubjects.get(scope);\n  if (!result) {\n    result = new ScopedDestroySubject(scope).asObservable();\n    scopedSubjects.set(scope, result);\n  }\n\n  return result;\n}\n\n/**\n * Tries to find an existing observable associated with a view container by searching all owned views\n * @param ref View container to search\n * @returns An observable if found, else undefined\n */\nfunction findScopedSubjectInView(ref: ViewContainerRef): Observable | undefined {\n  for (let index = 0, length = ref.length; index  {\n  const ref = inject(ViewContainerRef, { optional: true });\n  if (!ref) {\n    return findOrCreateScopedSubject(inject(NgModuleRef));\n  }\n\n  const result = findScopedSubjectInView(ref);\n  if (result) {\n    return result;\n  }\n\n  const component = ref.createComponent(OnDestroyHostComponent);\n  return findOrCreateScopedSubject(component.hostView);\n}\n\n    \n\n\n    \n            :host { display: block; }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'OnDestroyHostComponent', 'selector': 'hra-on-destroy-host'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OnDestroyHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceRegistrySelectors.html":{"url":"classes/ResourceRegistrySelectors.html","title":"class - ResourceRegistrySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceRegistrySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for Resource registry\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                markdown\n                            \n                            \n                                    Static\n                                query\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        markdown\n                        \n                    \n                \n            \n            \n                \n                    \n                    markdown(state: ResourceRegistryModel, id: ResourceId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:34\n                \n            \n\n\n            \n                \n                    Selector for markdown content\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        resource registry state\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                ResourceId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the resource\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        markdown of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        query\n                        \n                    \n                \n            \n            \n                \n                    \n                    query(state: ResourceRegistryModel)\n                \n            \n\n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:12\n                \n            \n\n\n            \n                \n                    queries the resource registry for data and returns a function\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        resource registry state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResourceEntry | undefined\n\n                    \n                    \n                        value of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(state: ResourceRegistryModel, id: ResourceId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:23\n                \n            \n\n\n            \n                \n                    Selector for getting url from the resource registry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        resource registry state\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                ResourceId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the resource\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResourceEntry | undefined\n\n                    \n                    \n                        resource data\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { ResourceEntry, ResourceId, ResourceRegistryModel, ResourceType } from './resource-registry.model';\nimport { ResourceRegistryState } from './resource-registry.state';\n\n/** Selectors for Resource registry */\nexport class ResourceRegistrySelectors {\n  /**\n   * queries the resource registry for data and returns a function\n   * @param state resource registry state\n   * @returns value of the resource\n   */\n  static query(state: ResourceRegistryModel): (id: ResourceId, type: ResourceType) => ResourceEntry | undefined {\n    return (id, type) => this.getEntryByType(state, id, type);\n  }\n\n  /**\n   * Selector for getting url from the resource registry\n   * @param state resource registry state\n   * @param id id of the resource\n   * @returns resource data\n   */\n  @Selector([ResourceRegistryState])\n  static url(state: ResourceRegistryModel, id: ResourceId): ResourceEntry | undefined {\n    return this.query(state)(id, ResourceType.Url);\n  }\n\n  /**\n   * Selector for markdown content\n   * @param state resource registry state\n   * @param id id of the resource\n   * @returns markdown of the resource\n   */\n  @Selector([ResourceRegistryState])\n  static markdown(state: ResourceRegistryModel, id: ResourceId): string | undefined {\n    return this.getEntryByType(state, id, ResourceType.Markdown)?.markdown;\n  }\n\n  /**\n   * get resource entry based on type\n   * @param state resource registry state\n   * @param id id of the resource\n   * @param type type of the resource\n   */\n  private static getEntryByType(\n    state: ResourceRegistryModel,\n    id: ResourceId,\n    type: T\n  ): Extract | undefined;\n  /** get resource entry by type if type is a string */\n  private static getEntryByType(state: ResourceRegistryModel, id: ResourceId, type: string): ResourceEntry | undefined;\n  /** get resource entry by type if type is of ResourceType */\n  private static getEntryByType(\n    state: ResourceRegistryModel,\n    id: ResourceId,\n    type: ResourceType | string\n  ): ResourceEntry | undefined {\n    const entry = state[id];\n    return entry?.type === type ? entry : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceRegistryState.html":{"url":"injectables/ResourceRegistryState.html","title":"injectable - ResourceRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResourceRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Resource registry state\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addResource\n                            \n                            \n                                loadMarkdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addResource\n                        \n                    \n                \n            \n            \n                \naddResource(ctx: ResourceRegistryContext, undefined: AddResource)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddResource)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:32\n                \n            \n\n\n            \n                \n                    Action for adding a resource to state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMarkdown\n                        \n                    \n                \n            \n            \n                \nloadMarkdown(ctx: ResourceRegistryContext, undefined: LoadMarkdown)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LoadMarkdown)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:42\n                \n            \n\n\n            \n                \n                    action for loading markdown\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                LoadMarkdown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { AddResource, LoadMarkdown } from './resource-registry.actions';\nimport {\n  ResourceEntry,\n  ResourceId,\n  ResourceRegistryContext,\n  ResourceRegistryModel,\n  ResourceType,\n} from './resource-registry.model';\n\n/**\n * Resource registry state\n */\n@State({\n  name: 'resourceRegistry',\n  defaults: {},\n})\n@Injectable()\nexport class ResourceRegistryState {\n  /** injects httpClient */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Action for adding a resource to state\n   * @param ctx State context\n   * @param param1 addResource action object containing id and entry\n   */\n  @Action(AddResource)\n  addResource(ctx: ResourceRegistryContext, { id, entry }: AddResource): void {\n    this.addResourceEntry(ctx, id, entry);\n  }\n\n  /**\n   * action for loading markdown\n   * @param ctx State context\n   * @param param1 loadMarkdown object containing id and url\n   */\n  @Action(LoadMarkdown)\n  loadMarkdown(ctx: ResourceRegistryContext, { id, url }: LoadMarkdown): Observable {\n    return this.http\n      .get(url, { responseType: 'text' })\n      .pipe(tap((data) => this.addResourceEntry(ctx, id, { type: ResourceType.Markdown, markdown: data })));\n  }\n\n  /**\n   * method to add a resource entry to the state\n   * @param param0 State context\n   * @param id id of the resource\n   * @param entry resource entry to be added\n   */\n  private addResourceEntry({ patchState }: ResourceRegistryContext, id: ResourceId, entry: ResourceEntry): void {\n    patchState({ [id]: entry });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScopedDestroySubject.html":{"url":"classes/ScopedDestroySubject.html","title":"class - ScopedDestroySubject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScopedDestroySubject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/on-destroy/on-destroy.ts\n        \n\n\n            \n                Description\n            \n            \n                Subject that automatically registers a cleanup function on a scope\nDuring cleanup the subject will emit a single void value and then complete\n\n            \n\n            \n                Extends\n            \n            \n                    ReplaySubject\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scope: DestructorScope)\n                    \n                \n                        \n                            \n                                Defined in injectors/src/lib/on-destroy/on-destroy.ts:17\n                            \n                        \n\n                \n                    \n                            Create a new subject that automatically registers cleanup\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        DestructorScope\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scope which to link the new subject\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ElementRef, inject, NgModuleRef, ViewContainerRef, ViewRef } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup callbacks can be registered */\ninterface DestructorScope {\n  /**\n   * Register a callback to perform cleanup during scope destruction\n   * @param cb Cleanup callback\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Subject that automatically registers a cleanup function on a scope\n * During cleanup the subject will emit a single void value and then complete\n */\nclass ScopedDestroySubject extends ReplaySubject {\n  /**\n   * Create a new subject that automatically registers cleanup\n   * @param scope Scope which to link the new subject\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n/** Empty host component */\n@Component({\n  selector: 'hra-on-destroy-host',\n  standalone: true,\n  template: '',\n  styles: [':host { display: block; }'],\n})\nclass OnDestroyHostComponent {\n  /** Creates a new component instance that immediately removes its own DOM element */\n  constructor() {\n    const el = inject(ElementRef).nativeElement as HTMLElement | null;\n    el?.remove();\n  }\n}\n\n/** OnDestroy observables index by their owning scope */\nconst scopedSubjects = new WeakMap>();\n\n/**\n * Tries to find and return an existing observable associated with a scope\n * @param scope Owning scope\n * @returns The observable if found, else undefined\n */\nfunction findScopedSubject(scope: DestructorScope): Observable | undefined {\n  return scopedSubjects.get(scope);\n}\n\n/**\n * Tries to find an existing observable for the scope\n * If not found a new observable is created and associated with the scope\n * @param scope Owning scope\n * @returns The existing or new observable\n */\nfunction findOrCreateScopedSubject(scope: DestructorScope): Observable {\n  let result = scopedSubjects.get(scope);\n  if (!result) {\n    result = new ScopedDestroySubject(scope).asObservable();\n    scopedSubjects.set(scope, result);\n  }\n\n  return result;\n}\n\n/**\n * Tries to find an existing observable associated with a view container by searching all owned views\n * @param ref View container to search\n * @returns An observable if found, else undefined\n */\nfunction findScopedSubjectInView(ref: ViewContainerRef): Observable | undefined {\n  for (let index = 0, length = ref.length; index  {\n  const ref = inject(ViewContainerRef, { optional: true });\n  if (!ref) {\n    return findOrCreateScopedSubject(inject(NgModuleRef));\n  }\n\n  const result = findScopedSubjectInView(ref);\n  if (result) {\n    return result;\n  }\n\n  const component = ref.createComponent(OnDestroyHostComponent);\n  return findOrCreateScopedSubject(component.hostView);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnapshotObserver.html":{"url":"classes/SnapshotObserver.html","title":"class - SnapshotObserver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnapshotObserver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/select-snapshot/select-snapshot.ts\n        \n\n\n            \n                Description\n            \n            \n                Observer storing the latest value from a snapshot stream\n\n            \n\n\n            \n                Implements\n            \n            \n                        Observer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                complete\n                            \n                            \n                                error\n                            \n                            \n                                get\n                            \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef | null)\n                    \n                \n                        \n                            \n                                Defined in injectors/src/lib/select-snapshot/select-snapshot.ts:16\n                            \n                        \n\n                \n                    \n                            Creates a new SnapshotObserver\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detector to notify whenever a new value is emitted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        complete\n                        \n                    \n                \n            \n            \n                \ncomplete()\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select-snapshot/select-snapshot.ts:59\n                \n            \n\n\n            \n                \n                    Handles completion emits\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(err)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select-snapshot/select-snapshot.ts:50\n                \n            \n\n\n            \n                \n                    Handles error emits\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The error value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select-snapshot/select-snapshot.ts:29\n                \n            \n\n\n            \n                \n                    Gets the latest value or throw on errors\n\n\n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        The latest value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(value: T)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select-snapshot/select-snapshot.ts:41\n                \n            \n\n\n            \n                \n                    Handles value emits\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, inject } from '@angular/core';\nimport { StateToken, Store } from '@ngxs/store';\nimport { Observer, takeUntil } from 'rxjs';\n\nimport { injectOnDestroy } from '../on-destroy/on-destroy';\n\nimport type { Any, AnyFunction, SignatureOf } from '@hra-ui/utils/types';\n\n/** Observer storing the latest value from a snapshot stream */\nclass SnapshotObserver implements Observer {\n  /** Whether an error has been emitted */\n  private hasError = false;\n  /** The latest value */\n  private value?: T = undefined;\n  /** The error value if `hasError === true` */\n  private errorValue?: unknown;\n\n  /**\n   * Creates a new SnapshotObserver\n   * @param cdr Change detector to notify whenever a new value is emitted\n   */\n  constructor(private readonly cdr: ChangeDetectorRef | null) {}\n\n  /**\n   * Gets the latest value or throw on errors\n   * @returns The latest value\n   * @throws If an error has been emitted\n   */\n  get(): T {\n    if (this.hasError) {\n      throw this.errorValue;\n    }\n\n    return this.value as T;\n  }\n\n  /**\n   * Handles value emits\n   * @param value The new value\n   */\n  next(value: T): void {\n    this.value = value;\n    this.cdr?.markForCheck();\n  }\n\n  /**\n   * Handles error emits\n   * @param err The error value\n   */\n  error(err: unknown): void {\n    this.hasError = true;\n    this.value = undefined;\n    this.errorValue = err;\n  }\n\n  /**\n   * Handles completion emits\n   */\n  complete(): void {\n    // Intentionally empty\n  }\n}\n\n/** Type of `selectSnapshot` and `selectQuerySnapshot` selector argument */\nexport type SelectSnapshotSelector = ((...args: Any[]) => T) | StateToken;\n\n/**\n * Injects a function that returns the latest snapshot value each time it is called\n * Automatically marks components, directives, or pipes for change detection whenever\n * a new value is available\n * @param selector Store data selector\n * @returns A snapshot function\n */\nexport function selectSnapshot(selector: SelectSnapshotSelector): () => T {\n  const store = inject(Store);\n  const cdr = inject(ChangeDetectorRef, { optional: true });\n  const destroy$ = injectOnDestroy();\n  const data$ = store.select(selector as StateToken).pipe(takeUntil(destroy$));\n  const observer = new SnapshotObserver(cdr);\n\n  data$.subscribe(observer);\n  return observer.get.bind(observer);\n}\n\n/**\n * Injects a function that can be called with the same arguments as the query selector\n * and returns the latest value each time\n * Automatically marks components, directives, or pipes for change detection whenever\n * a new value is available\n * @param selector Store query selector\n * @returns A snapshot function taking the same arguments as the query selector\n */\nexport function selectQuerySnapshot(selector: SelectSnapshotSelector): SignatureOf {\n  const get = selectSnapshot(selector);\n  return ((...args) => get()(...args)) as SignatureOf;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UrlResource.html":{"url":"interfaces/UrlResource.html","title":"interface - UrlResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UrlResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.model.ts\n        \n\n\n            \n                Description\n            \n            \n                type to hold resource data for Url\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ResourceType.Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResourceType.Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    indicates type for resource\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    url of the resource\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StateContext } from '@ngxs/store';\n\n/** Unqiue identifier for a resource */\nexport enum ResourceId {}\n\n/** Enum to hold different types of resources */\nexport enum ResourceType {\n  Markdown = 'md',\n  Url = 'url',\n  Image = 'image',\n}\n\n/** type to hold Resource object for markdown */\nexport interface MarkdownResource {\n  /** indicates type for resource */\n  type: ResourceType.Markdown;\n  /** markdown content */\n  markdown: string;\n}\n\n/** type to hold resource data for Url */\nexport interface UrlResource {\n  /** indicates type for resource */\n  type: ResourceType.Url;\n  /** url of the resource*/\n  url: string;\n}\n\n/** Type for different resource objects  */\nexport type ResourceEntry = { type: string } | MarkdownResource | UrlResource;\n\n/** Type for resource registry model */\nexport type ResourceRegistryModel = Record;\n\n/** Context type for action handlers */\nexport type ResourceRegistryContext = StateContext;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @ngxs/store : ^3.7.6\n        \n            @hra-ui/theming : *\n        \n            @hra-ui/utils : *\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ResourceId   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceType   (state/.../resource-registry.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    state/src/resource-registry/resource-registry.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceId\n                    \n                \n                    \n                        \n                            Unqiue identifier for a resource\n\n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                    \n                        \n                            Enum to hold different types of resources\n\n                        \n                    \n                        \n                            \n                                 Markdown\n                            \n                        \n                        \n                            \n                                Value : md\n                            \n                        \n                        \n                            \n                                 Url\n                            \n                        \n                        \n                            \n                                Value : url\n                            \n                        \n                        \n                            \n                                 Image\n                            \n                        \n                        \n                            \n                                Value : image\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dispatch   (injectors/.../dispatch.ts)\n                        \n                        \n                            findOrCreateScopedSubject   (injectors/.../on-destroy.ts)\n                        \n                        \n                            findScopedSubject   (injectors/.../on-destroy.ts)\n                        \n                        \n                            findScopedSubjectInView   (injectors/.../on-destroy.ts)\n                        \n                        \n                            injectOnDestroy   (injectors/.../on-destroy.ts)\n                        \n                        \n                            selectQuerySnapshot   (injectors/.../select-snapshot.ts)\n                        \n                        \n                            selectSnapshot   (injectors/.../select-snapshot.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    injectors/src/lib/dispatch/dispatch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(actionType: A)\n                \n            \n\n\n\n\n            \n                \n                    Wraps an action constructor with automatic dispatching on each call to the function.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    actionType\n                                    \n                                            A\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action constructor to create new instances\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Dispatcher\n\n                    \n                    \n                        A function that dispatches an action on the store each time it is called\n\n                    \n                \n            \n        \n    \n    injectors/src/lib/on-destroy/on-destroy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findOrCreateScopedSubject\n                        \n                    \n                \n            \n            \n                \nfindOrCreateScopedSubject(scope: DestructorScope)\n                \n            \n\n\n\n\n            \n                \n                    Tries to find an existing observable for the scope\nIf not found a new observable is created and associated with the scope\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                DestructorScope\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Owning scope\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The existing or new observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findScopedSubject\n                        \n                    \n                \n            \n            \n                \nfindScopedSubject(scope: DestructorScope)\n                \n            \n\n\n\n\n            \n                \n                    Tries to find and return an existing observable associated with a scope\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                DestructorScope\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Owning scope\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        The observable if found, else undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findScopedSubjectInView\n                        \n                    \n                \n            \n            \n                \nfindScopedSubjectInView(ref: ViewContainerRef)\n                \n            \n\n\n\n\n            \n                \n                    Tries to find an existing observable associated with a view container by searching all owned views\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        View container to search\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        An observable if found, else undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injectOnDestroy\n                        \n                    \n                \n            \n            \n                \ninjectOnDestroy()\n                \n            \n\n\n\n\n            \n                \n                    Inject an observable that emits and completes at the same time as the component, directive, pipe, or service\nit is injected into. It can be used to control the lifetime of other observables using\nthe takeUntil pipe, and to build other complex injection functions.\nCaveats:\n\nThere are NO guarantees about whether the returned observable will emit and complete\nbefore or after the regular ngOnDestroy lifecycle hook\nFor root and module level services the observable may never complete unless\nthe containing module is explicitly destroyed, so don't rely on it for important operations\nComponents, directives, pipe, and services that manipulate the ViewContainerRef MUST\ntake care to maintain the view controlling the lifecycle of the observable. Failure\nto do so may result in early emit and completion of the returned observable\n\nBased on comment on https://github.com/angular/angular/issues/10185\nMostly https://github.com/angular/angular/issues/10185#issuecomment-1165545544 and\nhttps://github.com/angular/angular/issues/10185#issuecomment-1199063426\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that emits and completes when the component/directive/etc. is destroyed\n\n                    \n                \n            \n        \n    \n    injectors/src/lib/select-snapshot/select-snapshot.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectQuerySnapshot\n                        \n                    \n                \n            \n            \n                \nselectQuerySnapshot(selector: SelectSnapshotSelector)\n                \n            \n\n\n\n\n            \n                \n                    Injects a function that can be called with the same arguments as the query selector\nand returns the latest value each time\nAutomatically marks components, directives, or pipes for change detection whenever\na new value is available\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                SelectSnapshotSelector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Store query selector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SignatureOf\n\n                    \n                    \n                        A snapshot function taking the same arguments as the query selector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSnapshot\n                        \n                    \n                \n            \n            \n                \nselectSnapshot(selector: SelectSnapshotSelector)\n                \n            \n\n\n\n\n            \n                \n                    Injects a function that returns the latest snapshot value each time it is called\nAutomatically marks components, directives, or pipes for change detection whenever\na new value is available\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                SelectSnapshotSelector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Store data selector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        A snapshot function\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncdk\nThis library was generated with Nx.\nRunning unit tests\nRun nx test cdk to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Dispatcher   (injectors/.../dispatch.ts)\n                        \n                        \n                            ResourceEntry   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceRegistryContext   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceRegistryModel   (state/.../resource-registry.model.ts)\n                        \n                        \n                            SelectSnapshotSelector   (injectors/.../select-snapshot.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    injectors/src/lib/dispatch/dispatch.ts\n    \n    \n        \n            \n                \n                    \n                    Dispatcher\n                \n            \n            \n                \n                    Function type returned by dispatch(actionType).\nAccepts the same arguments as the passed action constructor and\nreturns an instance of the action.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    state/src/resource-registry/resource-registry.model.ts\n    \n    \n        \n            \n                \n                    \n                    ResourceEntry\n                \n            \n            \n                \n                    Type for different resource objects\n\n                \n            \n            \n                \n                        literal type | MarkdownResource | UrlResource\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceRegistryContext\n                \n            \n            \n                \n                    Context type for action handlers\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceRegistryModel\n                \n            \n            \n                \n                    Type for resource registry model\n\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n    injectors/src/lib/select-snapshot/select-snapshot.ts\n    \n    \n        \n            \n                \n                    \n                    SelectSnapshotSelector\n                \n            \n            \n                \n                    Type of selectSnapshot and selectQuerySnapshot selector argument\n\n                \n            \n            \n                \n                         | StateToken\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            scopedSubjects   (injectors/.../on-destroy.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    injectors/src/lib/on-destroy/on-destroy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scopedSubjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WeakMap>()\n                    \n                \n\n            \n                \n                    OnDestroy observables index by their owning scope\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
