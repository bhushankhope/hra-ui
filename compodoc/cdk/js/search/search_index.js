var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionConstructor.html",[0,1.352,1,2.861]],["body/interfaces/ActionConstructor.html",[0,1.981,1,4.931,2,2.291,3,0.3,4,0.3,5,0.3,6,3.831,7,0.341,8,1.567,9,1.293,10,1.381,11,0.853,12,2.307,13,0.466,14,1.226,15,0.029,16,0.3,17,3.831,18,2.093,19,0.459,20,1.118,21,3.225,22,0.823,23,2.978,24,1.381,25,3.225,26,4.979,27,5.532,28,3.225,29,0.615,30,1.484,31,1.981,32,3.831,33,1.594,34,3.831,35,1.923,36,0.259,37,3.831,38,3.831,39,3.831,40,2.093,41,0.02,42,0.02]],["title/classes/Add.html",[36,0.176,43,1.013]],["body/classes/Add.html",[3,0.253,4,0.253,5,0.449,7,0.395,8,0.833,9,0.848,10,0.895,13,0.22,14,0.848,15,0.029,16,0.398,19,0.449,20,0.848,22,0.48,24,0.895,29,0.749,36,0.298,41,0.018,42,0.018,43,1.926,44,0.666,45,1.767,46,1.767,47,1.193,48,1.517,49,2.069,50,1.62,51,2.458,52,1.421,53,2.345,54,0.398,55,3.227,56,2.02,57,0.438,58,0.398,59,0.398,60,1.131,61,1.217,62,2.229,63,1.62,64,1.033,65,1.033,66,0.962,67,0.438,68,1.763,69,1.59,70,2.02,71,1.835,72,1.835,73,1.527,74,2.974,75,1.284,76,0.962,77,1.284,78,1.625,79,1.193,80,2.183,81,0.962,82,1.767,83,0.774,84,2.02,85,0.962,86,1.284,87,1.284,88,1.479,89,2.351,90,1.284,91,1.284,92,1.93,93,1.93,94,2.057,95,1.62,96,1.93,97,1.93]],["title/classes/Add-1.html",[36,0.148,43,0.851,98,1.561]],["body/classes/Add-1.html",[3,0.253,4,0.253,5,0.476,7,0.396,8,0.834,9,0.849,10,0.897,13,0.22,14,0.97,15,0.029,16,0.348,19,0.449,20,0.849,22,0.481,24,0.897,29,0.749,36,0.298,41,0.018,42,0.018,43,1.952,44,0.667,47,1.195,48,1.518,50,1.623,52,1.422,54,0.399,56,2.021,57,0.439,58,0.399,59,0.399,60,1.131,61,1.066,64,1.035,65,1.035,66,0.964,67,0.439,69,1.591,70,2.021,71,1.836,72,1.836,73,1.529,75,1.286,76,0.964,77,1.286,78,1.423,79,1.195,80,2.184,81,0.964,82,1.769,83,1.219,84,2.358,85,0.964,86,1.769,87,1.769,88,1.529,99,1.769,100,1.769,101,2.391,102,2.879,103,2.746,104,3.232,105,1.766,106,3.316,107,1.386,108,2.346,109,1.623,110,1.623]],["title/classes/AddFromYaml.html",[36,0.176,81,1.013]],["body/classes/AddFromYaml.html",[3,0.254,4,0.254,5,0.465,7,0.397,8,0.838,9,0.851,10,0.901,13,0.221,14,1.047,15,0.029,16,0.399,19,0.45,20,0.851,22,0.483,24,0.901,29,0.75,36,0.298,41,0.018,42,0.018,43,1.913,44,0.67,45,1.775,46,1.775,47,1.201,48,1.237,49,1.982,51,2.184,52,1.222,53,1.913,54,0.401,56,1.775,57,0.441,58,0.401,59,0.401,60,1.097,61,1.07,62,2.239,63,1.631,64,1.04,65,1.04,66,0.968,67,0.441,68,1.775,69,1.594,70,2.026,71,1.839,72,1.839,73,1.534,74,3.052,75,1.293,76,0.968,77,1.293,78,1.755,79,1.201,80,2.255,81,1.329,82,2.181,83,1.07,84,2.026,85,0.968,86,1.293,87,1.293,88,1.483,89,2.359,90,1.293,91,1.293,92,1.942,93,1.942,94,2.066,95,1.631,96,1.942,97,1.942,111,2.735,112,3.248]],["title/classes/AddFromYaml-1.html",[36,0.148,81,0.851,98,1.561]],["body/classes/AddFromYaml-1.html",[3,0.254,4,0.254,5,0.476,7,0.397,8,0.838,9,0.851,10,0.901,13,0.221,14,1.097,15,0.029,16,0.349,19,0.45,20,0.851,22,0.483,24,0.901,29,0.75,36,0.298,41,0.018,42,0.018,43,1.942,44,0.67,47,1.201,48,1.237,52,1.222,54,0.401,56,1.775,57,0.441,58,0.401,59,0.401,60,1.097,61,0.779,64,1.04,65,1.04,66,0.968,67,0.441,69,1.594,70,2.026,71,1.839,72,1.839,73,1.534,75,1.293,76,0.968,77,1.293,78,1.428,79,1.201,80,2.255,81,1.329,82,2.181,83,1.378,84,2.362,85,0.968,86,1.775,87,1.775,88,1.532,99,1.775,100,1.775,101,2.289,102,2.557,103,2.239,105,1.775,106,3.431,107,1.913,108,2.351,109,1.631,110,1.631,111,2.735,113,3.248]],["title/classes/AddMany.html",[36,0.176,76,1.013]],["body/classes/AddMany.html",[3,0.255,4,0.255,5,0.45,7,0.397,8,0.84,9,0.852,10,0.903,13,0.221,14,0.852,15,0.029,16,0.399,19,0.45,20,0.852,22,0.664,24,0.903,29,0.75,36,0.299,41,0.018,42,0.018,43,1.913,44,0.672,45,1.777,46,1.777,47,1.203,48,1.239,49,1.983,51,2.186,52,1.223,53,1.915,54,0.402,56,2.028,57,0.442,58,0.402,59,0.402,60,1.098,61,1.071,62,2.241,63,1.633,64,1.042,65,1.042,66,0.97,67,0.442,68,1.777,69,1.595,70,2.028,71,1.84,72,1.84,73,1.887,74,3.154,75,1.777,76,1.331,77,1.295,78,1.756,79,1.885,80,2.187,81,0.97,82,1.777,83,0.78,84,2.028,85,0.97,86,1.295,87,1.295,88,1.484,89,2.361,90,1.295,91,1.295,92,1.946,93,1.946,94,2.068,95,1.633,96,1.946,97,1.946,114,2.739,115,3.253]],["title/classes/AddMany-1.html",[36,0.148,76,0.851,98,1.561]],["body/classes/AddMany-1.html",[3,0.255,4,0.255,5,0.477,7,0.398,8,0.841,9,0.853,10,0.904,13,0.222,14,0.974,15,0.029,16,0.35,19,0.451,20,0.853,22,0.665,24,0.904,29,0.751,36,0.299,41,0.018,42,0.018,43,1.943,44,0.673,47,1.205,48,1.24,52,1.224,54,0.402,56,2.03,57,0.443,58,0.402,59,0.402,60,1.098,61,0.782,64,1.043,65,1.043,66,0.971,67,0.443,69,1.596,70,2.03,71,1.841,72,1.841,73,1.888,75,1.778,76,1.332,77,1.297,78,1.633,79,1.886,80,2.188,81,0.971,82,1.778,83,1.224,84,2.364,85,0.971,86,1.778,87,1.778,88,1.533,99,1.778,100,1.778,101,2.291,102,2.561,103,2.244,105,1.78,106,3.474,107,1.398,108,2.354,109,1.636,110,1.636,114,2.744,116,3.259]],["title/modules/CdkStateModule.html",[117,2.861,118,2.507]],["body/modules/CdkStateModule.html",[3,0.378,4,0.378,5,0.378,15,0.028,16,0.509,18,3.141,19,0.378,36,0.251,41,0.024,42,0.024,49,1.545,101,1.784,118,4.242,119,3.56,120,4.825,121,5.749,122,1.92,123,4.825,124,2.07,125,3.185,126,3.795,127,3.795,128,2.236,129,4.825,130,4.825]],["title/classes/Clear.html",[36,0.176,131,2.032]],["body/classes/Clear.html",[3,0.276,4,0.276,5,0.276,7,0.42,8,0.911,9,1.205,10,1.64,13,0.429,14,1.161,15,0.029,16,0.369,19,0.416,20,1.014,24,0.979,29,0.751,35,2.368,36,0.332,41,0.019,42,0.019,44,0.728,50,1.771,54,0.435,57,0.479,58,0.435,59,0.435,60,1.186,61,1.459,64,1.13,65,1.13,67,0.479,69,1.474,71,1.701,72,1.701,128,2.818,131,3.637,132,2.329,133,2.576,134,3.534,135,3.582,136,3.528,137,2.432,138,2.11,139,2.329,140,2.432,141,3.113,142,2.603,143,3.393,144,1.583,145,3.391,146,2.603,147,2.603]],["title/classes/Delete.html",[36,0.176,145,2.032]],["body/classes/Delete.html",[3,0.272,4,0.272,5,0.272,7,0.415,8,0.895,9,1.216,10,1.63,13,0.433,14,1.216,15,0.028,16,0.365,19,0.413,20,1.005,24,0.962,29,0.747,35,1.741,36,0.334,41,0.019,42,0.019,44,0.716,50,1.741,54,0.428,57,0.471,58,0.428,59,0.428,60,1.181,61,1.483,64,1.11,65,1.11,67,0.471,69,1.461,71,1.686,72,1.686,128,2.864,131,3.149,132,2.288,133,1.894,134,3.514,135,3.546,137,2.415,138,2.073,139,2.288,140,2.415,141,3.476,142,2.558,143,3.515,144,1.57,145,3.758,146,2.558,147,2.558,148,3.467]],["title/components/DestroyHostComponent.html",[149,2.507,150,2.861]],["body/components/DestroyHostComponent.html",[3,0.256,4,0.256,5,0.256,7,0.399,11,1.224,12,2.075,13,0.305,15,0.028,16,0.256,19,0.256,20,0.976,21,4.628,22,0.666,23,2.679,29,0.403,30,1.335,33,1.047,36,0.17,40,2.791,41,0.018,42,0.018,54,0.553,57,0.444,58,0.678,59,0.403,122,1.301,144,0.975,149,4.387,150,5.006,151,4.479,152,5.109,153,5.496,154,4.479,155,3.373,156,5.109,157,3.269,158,2.957,159,4.479,160,4.848,161,4.479,162,3.771,163,4.479,164,3.305,165,5.109,166,2.412,167,2.47,168,2.791,169,5.006,170,3.77,171,5.109,172,3.77,173,1.656,174,4.479,175,4.055,176,3.269,177,3.305,178,3.305,179,4.387,180,4.275,181,5.496,182,3.771,183,4.479,184,3.77,185,2.957,186,5.758,187,4.479,188,1.641,189,3.305,190,3.269,191,2.957,192,2.158,193,1.641,194,2.158,195,1.402,196,2.412,197,3.269,198,3.269,199,3.269,200,1.301,201,3.269,202,3.269,203,4.479,204,1.786,205,5.496,206,3.269,207,2.158,208,2.158,209,3.269,210,2.412,211,2.753,212,3.269]],["title/interfaces/DestructorScope.html",[0,1.352,213,2.507]],["body/interfaces/DestructorScope.html",[0,1.445,2,2.171,3,0.284,4,0.284,5,0.284,7,0.428,11,0.808,13,0.327,15,0.029,16,0.284,19,0.422,22,0.54,23,2.171,29,0.665,30,1.433,31,2.527,33,1.162,36,0.189,41,0.02,42,0.02,48,1.007,54,0.448,57,0.493,58,0.448,59,0.448,67,0.493,69,1.007,137,2.559,144,1.433,155,3.173,173,1.777,195,1.557,200,2.282,213,4.232,214,4.047,215,3.056,216,5.346,217,3.173,218,4.047,219,4.537,220,4.047,221,3.63,222,4.047,223,4.047,224,4.047,225,4.047,226,1.983,227,3.056,228,2.396,229,4.232,230,5.162,231,5.023,232,2.678,233,3.056,234,2.678,235,3.056,236,3.056,237,2.678,238,4.047,239,4.047,240,3.056,241,3.056,242,4.537,243,4.047,244,2.678,245,2.396,246,1.445,247,3.056,248,2.396,249,2.678,250,3.056,251,3.056,252,3.056,253,3.056,254,3.056,255,3.056]],["title/interfaces/HoverContext.html",[0,1.352,256,2.507]],["body/interfaces/HoverContext.html",[0,1.125,2,1.691,3,0.221,4,0.221,5,0.221,7,0.252,11,0.63,12,1.875,13,0.192,15,0.029,16,0.37,19,0.317,20,0.902,22,0.811,31,1.88,36,0.147,41,0.017,42,0.017,67,0.642,83,1.309,122,1.125,140,1.735,158,1.866,167,1.213,170,2.985,172,2.086,175,2.985,177,2.985,178,2.985,179,2.086,180,3.119,185,1.866,189,2.086,191,3.119,192,1.866,193,1.419,194,1.866,195,1.213,196,2.985,200,1.88,204,2.981,208,1.866,256,3.486,257,2.38,258,2.581,259,3.978,260,4.342,261,4.313,262,3.406,263,4.595,264,2.389,265,3.406,266,3.406,267,4.595,268,4.922,269,2.38,270,3.406,271,2.38,272,2.086,273,3.486,274,3.406,275,2.38,276,2.38,277,3.406,278,3.406,279,2.38,280,2.38,281,3.406,282,2.38,283,2.38,284,3.978,285,3.406,286,5.124,287,3.978,288,2.38,289,2.38,290,2.38,291,2.389,292,3.406,293,2.38,294,3.406,295,2.38,296,3.406,297,2.38,298,4.342,299,2.38,300,2.38,301,2.38,302,2.38,303,2.38,304,4.342,305,4.342,306,4.342,307,4.342,308,4.342,309,4.342,310,4.342,311,4.342,312,2.38,313,2.38,314,2.086,315,2.38,316,2.38,317,3.486,318,3.406,319,2.985,320,2.38,321,2.38,322,2.38,323,3.978,324,3.406,325,2.086,326,2.38,327,2.38,328,2.38,329,3.406,330,2.38,331,2.38,332,2.38,333,2.38,334,2.38]],["title/directives/HoverDirective.html",[204,1.856,208,2.243]],["body/directives/HoverDirective.html",[0,0.86,3,0.169,4,0.169,5,0.169,7,0.192,11,0.481,12,1.536,13,0.332,15,0.029,16,0.316,19,0.26,20,0.931,22,0.843,30,1.348,31,2.132,36,0.112,41,0.014,42,0.014,54,0.714,57,0.45,58,0.409,59,0.558,67,0.548,83,1.285,122,0.86,140,1.422,144,0.644,158,2.188,166,1.594,167,1.422,170,3.598,172,1.594,173,1.226,175,2.445,177,1.594,178,1.594,179,1.594,180,2.984,185,1.426,188,1.085,189,1.594,191,2.984,192,1.426,193,1.085,194,1.426,195,0.927,196,1.594,200,2.132,204,2.811,207,1.426,208,2.188,256,2.445,257,1.819,258,2.47,259,2.79,260,4.333,261,4.406,262,1.819,263,2.79,264,2.259,265,1.819,266,1.819,267,4.772,268,5.145,269,1.819,270,3.395,271,1.819,272,1.594,273,2.975,274,4.106,275,2.79,276,3.807,277,4.333,278,4.333,279,1.819,280,1.819,281,2.79,282,1.819,283,1.819,284,3.395,285,2.79,286,5.311,287,4.106,288,1.819,289,1.819,290,1.819,291,2.095,292,3.807,293,2.79,294,4.106,295,2.79,296,3.807,297,2.79,298,4.333,299,2.79,300,2.79,301,2.79,302,2.79,303,2.79,304,4.654,305,4.654,306,4.654,307,4.654,308,4.654,309,4.654,310,4.654,311,4.654,312,2.79,313,1.819,314,1.594,315,1.819,316,1.819,317,3.953,318,4.333,319,3.797,320,3.395,321,2.79,322,3.807,323,3.395,324,2.79,325,2.975,326,3.395,327,2.79,328,3.807,329,2.79,330,1.819,331,1.819,332,1.819,333,1.819,334,1.819,335,2.79,336,3.314,337,2.79,338,3.314,339,3.314,340,3.314,341,3.314,342,3.314,343,3.314,344,3.314,345,1.536,346,2.161,347,2.161,348,2.161,349,2.161]],["title/directives/LinkDirective.html",[204,1.856,210,2.507]],["body/directives/LinkDirective.html",[3,0.144,4,0.144,5,0.144,7,0.323,8,0.473,9,0.79,11,0.408,12,1.351,13,0.41,14,1.171,15,0.029,16,0.353,18,1.001,19,0.144,20,0.79,22,0.433,29,0.51,30,1.232,33,1.768,36,0.095,41,0.012,42,0.012,48,0.509,49,1.864,51,1.773,52,1.083,53,1.556,54,0.728,57,0.561,58,0.36,59,0.645,62,2.412,63,0.92,67,0.684,74,1.463,88,0.937,89,1.351,90,1.16,94,1.916,95,2.076,101,0.678,122,0.729,133,2.259,137,0.786,140,1.773,143,1.001,144,1.082,164,2.151,166,1.353,167,1.556,168,1.982,169,3.481,173,1.078,180,4.076,182,2.454,184,1.353,188,2.076,191,1.21,192,1.21,193,0.92,194,1.21,195,1.556,200,1.16,204,2.465,207,1.21,210,2.151,211,3.481,228,2.729,246,1.645,272,1.353,273,3.545,291,2.611,317,2.151,319,4.074,335,3.055,337,2.454,345,1.916,350,1.833,351,2.454,352,3.629,353,5.521,354,3.858,355,3.858,356,2.915,357,4.403,358,3.055,359,3.055,360,4.046,361,3.629,362,2.915,363,2.915,364,2.915,365,2.915,366,4.512,367,1.833,368,3.055,369,1.833,370,2.454,371,4.046,372,1.833,373,2.454,374,3.481,375,4.805,376,1.833,377,2.698,378,1.833,379,3.629,380,1.833,381,2.915,382,2.915,383,2.915,384,2.915,385,2.915,386,2.915,387,4.805,388,2.915,389,1.543,390,2.915,391,3.629,392,3.055,393,2.915,394,3.629,395,2.915,396,2.915,397,3.629,398,2.915,399,2.915,400,2.915,401,1.833,402,4.135,403,2.915,404,1.543,405,1.833,406,1.833,407,1.353,408,1.21,409,1.833,410,1.543,411,1.833,412,1.353,413,1.833,414,1.833,415,1.833,416,1.833,417,1.833,418,1.833,419,1.833,420,1.833,421,0.786,422,1.833,423,1.833,424,1.833,425,1.833,426,4.135,427,1.833,428,1.833,429,1.543,430,3.629,431,1.833,432,1.833,433,1.833,434,2.454,435,1.833,436,2.915,437,2.151,438,1.833,439,1.833,440,1.833,441,2.915,442,2.915,443,2.915,444,2.915,445,2.915,446,1.833,447,2.454,448,1.833,449,1.833,450,2.454,451,3.629,452,1.833,453,1.833,454,1.833,455,1.833,456,1.833,457,1.833,458,1.833,459,1.353,460,1.833,461,1.833,462,1.833,463,1.21,464,1.833,465,1.924,466,1.833,467,1.833,468,1.833,469,1.833,470,1.833,471,2.915,472,1.833,473,2.915,474,2.915,475,1.833,476,1.833,477,2.915,478,1.833,479,1.543,480,2.915,481,1.833,482,1.833,483,1.833,484,1.833,485,1.833,486,1.833]],["title/classes/LinkRegistrySelectors.html",[36,0.176,407,2.507]],["body/classes/LinkRegistrySelectors.html",[3,0.283,4,0.283,5,0.283,7,0.426,11,0.804,13,0.437,15,0.029,16,0.448,18,2.936,19,0.283,29,0.706,30,1.602,31,1.906,33,1.533,36,0.188,40,3.127,41,0.02,42,0.02,44,0.745,45,1.906,46,1.906,49,2.076,51,2.054,52,1.521,53,1.549,54,0.446,57,0.49,58,0.446,59,0.591,60,1.169,66,1.076,67,0.65,124,1.549,125,2.383,167,1.549,168,1.972,173,1.771,234,2.664,246,2.278,264,1.673,291,1.673,345,1.673,377,3.423,407,3.534,408,2.383,421,2.679,437,3.534,459,2.664,487,2.664,488,3.534,489,4.789,490,4.394,491,3.61,492,3.61,493,4.032,494,3.965,495,3.965,496,2.664,497,3.04,498,3.61,499,3.61,500,2.664,501,3.61,502,3.04,503,3.61,504,4.789,505,2.664]],["title/injectables/LinkRegistryState.html",[125,2.243,506,1.856]],["body/injectables/LinkRegistryState.html",[3,0.155,4,0.155,5,0.338,7,0.442,9,1.079,11,0.441,13,0.365,14,0.729,15,0.029,16,0.442,19,0.243,20,0.729,22,0.642,29,0.732,30,1.547,31,0.789,33,0.634,35,0.995,36,0.103,41,0.013,42,0.013,43,1.789,45,1.977,46,1.977,48,0.86,49,1.809,51,1.329,52,1.381,53,0.85,54,0.578,57,0.636,58,0.613,59,0.663,60,1.054,62,1.916,63,0.995,66,0.591,67,0.586,73,1.066,74,1.556,76,1.547,78,1.843,80,1.786,81,1.287,83,1.036,85,1.287,88,1.209,89,2.71,90,1.718,91,2.066,94,2.489,107,0.85,109,1.556,122,0.789,124,0.85,125,2.046,141,2.046,168,1.693,173,1.146,188,0.995,193,0.995,195,0.85,200,2.066,226,1.083,246,1.977,248,2.046,258,3.086,264,0.918,291,2.171,345,2.171,351,1.668,354,1.462,355,1.462,374,1.668,377,1.185,408,1.308,410,1.668,412,1.462,421,2.574,429,2.61,434,1.668,447,1.668,463,1.308,465,2.046,490,1.462,494,1.462,495,2.287,496,1.462,500,1.462,505,1.462,506,1.693,507,1.308,508,1.462,509,2.61,510,2.61,511,3.099,512,2.61,513,2.61,514,2.61,515,4.317,516,2.61,517,5.153,518,2.61,519,1.982,520,3.729,521,2.61,522,2.61,523,1.982,524,2.61,525,3.945,526,2.61,527,1.982,528,2.61,529,1.668,530,2.61,531,2.61,532,1.853,533,2.61,534,2.61,535,2.61,536,1.982,537,3.214,538,3.457,539,2.61,540,3.099,541,3.099,542,1.982,543,4.685,544,1.668,545,1.668,546,3.099,547,4.317,548,1.668,549,1.668,550,1.668,551,2.61,552,2.61,553,1.668,554,1.668,555,1.308,556,2.61,557,1.668,558,1.668,559,1.668,560,3.099,561,3.099,562,1.982,563,1.982,564,1.982,565,2.61,566,1.668,567,1.668,568,1.982,569,1.668,570,1.668,571,1.668,572,1.668,573,1.185,574,1.668,575,1.668,576,1.668,577,1.668,578,1.982,579,3.099,580,1.982,581,3.099,582,1.982,583,1.462,584,1.982,585,1.982,586,3.099,587,1.668,588,1.982,589,1.982,590,1.982,591,1.982,592,1.982,593,1.982,594,1.982,595,1.982,596,1.982,597,1.982]],["title/classes/LoadFromYaml.html",[36,0.176,85,1.013]],["body/classes/LoadFromYaml.html",[3,0.253,4,0.253,5,0.484,7,0.395,8,0.833,9,0.848,10,0.895,13,0.22,14,1.044,15,0.029,16,0.398,19,0.449,20,0.848,22,0.48,24,0.895,29,0.749,36,0.298,41,0.018,42,0.018,43,1.911,44,0.666,45,1.767,46,1.767,47,1.193,48,1.232,49,1.979,51,2.177,52,1.217,53,1.904,54,0.398,56,1.767,57,0.438,58,0.398,59,0.398,60,1.094,61,1.065,62,2.229,63,1.62,64,1.033,65,1.033,66,0.962,67,0.438,68,1.763,69,1.59,70,2.02,71,1.835,72,1.835,73,1.527,74,3.103,75,1.284,76,0.962,77,1.284,78,1.625,79,1.193,80,2.239,81,0.962,82,1.767,83,0.774,84,2.357,85,1.323,86,1.284,87,1.767,88,1.566,89,2.351,90,1.284,91,1.284,92,1.93,93,1.93,94,2.057,95,1.62,96,1.93,97,1.93,598,2.717,599,3.227]],["title/classes/LoadFromYaml-1.html",[36,0.148,85,0.851,98,1.561]],["body/classes/LoadFromYaml-1.html",[3,0.253,4,0.253,5,0.497,7,0.396,8,0.834,9,0.849,10,0.897,13,0.22,14,1.095,15,0.029,16,0.348,19,0.449,20,0.849,22,0.481,24,0.897,29,0.749,36,0.298,41,0.018,42,0.018,43,1.94,44,0.667,47,1.195,48,1.233,52,1.219,54,0.399,56,1.769,57,0.439,58,0.399,59,0.399,60,1.095,61,0.775,64,1.035,65,1.035,66,0.964,67,0.439,69,1.591,70,2.021,71,1.836,72,1.836,73,1.529,75,1.286,76,0.964,77,1.286,78,1.423,79,1.195,80,2.239,81,0.964,82,1.769,83,1.219,84,2.497,85,1.325,86,1.769,87,2.021,88,1.596,99,1.769,100,1.769,101,2.287,102,2.55,103,2.231,105,1.766,106,3.428,107,1.386,108,2.346,109,1.623,110,1.623,598,2.722,600,3.232]],["title/classes/LoadMarkdown.html",[36,0.176,110,1.706]],["body/classes/LoadMarkdown.html",[3,0.25,4,0.25,5,0.496,7,0.392,8,0.824,9,0.841,10,0.885,13,0.217,14,1.09,15,0.029,16,0.345,19,0.447,20,0.841,22,0.475,24,0.885,29,0.747,36,0.297,41,0.018,42,0.018,43,1.937,44,0.659,47,1.18,48,1.222,50,1.602,52,1.21,54,0.394,56,1.753,57,0.433,58,0.394,59,0.394,60,1.155,61,0.766,64,1.022,65,1.022,66,0.951,67,0.433,69,1.584,70,2.008,71,1.828,72,1.828,73,1.515,75,1.27,76,0.951,77,1.27,78,1.411,79,1.18,80,2.179,81,0.951,82,1.753,83,1.305,84,2.49,85,0.951,86,1.753,87,2.008,88,1.615,99,1.753,100,1.753,101,2.365,102,2.866,103,2.212,105,1.743,106,3.305,107,1.369,108,2.595,109,2.212,110,2.212,601,2.687]],["title/classes/Navigate.html",[36,0.176,89,1.574]],["body/classes/Navigate.html",[3,0.251,4,0.251,5,0.448,7,0.393,8,0.828,9,0.844,10,0.89,13,0.218,14,0.844,15,0.029,16,0.396,19,0.448,20,0.844,22,0.477,24,0.89,29,0.748,36,0.297,41,0.018,42,0.018,43,1.867,44,0.662,45,1.759,46,1.759,47,1.186,48,1.226,49,2.05,50,1.61,51,2.453,52,1.213,53,1.896,54,0.396,56,1.759,57,0.435,58,0.396,59,0.396,60,1.157,61,1.213,62,2.737,63,1.61,64,1.027,65,1.027,66,0.956,67,0.435,68,1.752,69,1.587,70,2.013,71,1.831,72,1.831,73,1.52,74,2.968,75,1.276,76,0.956,77,1.276,78,1.62,79,1.186,80,2.181,81,0.956,82,1.759,83,0.769,84,2.013,85,0.956,86,1.276,87,1.276,88,1.563,89,2.739,90,1.759,91,1.759,92,1.918,93,2.643,94,2.526,95,2.219,96,2.643,97,2.643,601,2.7]],["title/classes/ResourceRegistrySelectors.html",[36,0.176,602,2.861]],["body/classes/ResourceRegistrySelectors.html",[3,0.166,4,0.166,5,0.166,7,0.43,11,0.471,13,0.43,15,0.029,16,0.311,19,0.378,29,0.656,30,1.813,31,2.501,33,1.874,36,0.11,40,3.491,41,0.013,42,0.013,44,0.436,49,1.273,52,1.459,54,0.656,57,0.722,58,0.656,59,0.656,60,1.207,66,0.63,67,0.442,83,1.443,88,1.372,99,2.184,100,2.184,101,1.47,102,2.423,103,1.636,108,2.28,124,0.906,126,1.395,167,0.906,173,1.205,188,1.061,246,1.296,264,1.509,345,2.462,377,3.898,421,2.754,437,4.318,463,1.395,465,2.15,479,1.779,487,1.559,488,2.404,493,4.294,497,1.779,502,1.779,505,1.559,573,3.5,602,2.743,603,2.743,604,3.258,605,3.258,606,5.488,607,3.258,608,4.439,609,4.468,610,2.113,611,3.348,612,3.258,613,2.113,614,4.741,615,3.258,616,2.113,617,3.348,618,3.258,619,2.113,620,5.001,621,3.258,622,3.976,623,2.113,624,3.976,625,3.258,626,2.113,627,3.258,628,2.113,629,1.559,630,3.348,631,3.348,632,1.779,633,1.779,634,1.779,635,3.976,636,3.258,637,4.468,638,4.468,639,2.113,640,2.113,641,2.743,642,2.113,643,3.258,644,2.113,645,3.976,646,3.976,647,2.113]],["title/injectables/ResourceRegistryState.html",[126,2.243,506,1.856]],["body/injectables/ResourceRegistryState.html",[3,0.18,4,0.18,5,0.413,7,0.469,9,1.156,11,0.511,13,0.358,14,0.799,15,0.029,16,0.429,19,0.18,20,0.439,22,0.694,25,2.923,29,0.737,30,1.631,33,1.112,36,0.119,41,0.014,42,0.014,43,1.844,48,0.963,52,1.384,54,0.618,57,0.68,58,0.65,59,0.675,60,0.957,66,0.685,67,0.471,73,1.194,76,1.631,78,1.912,80,1.882,81,1.391,83,1.119,85,1.391,88,1.293,91,2.097,99,2.097,100,2.097,101,1.548,106,1.897,107,0.985,108,2.001,109,2.342,110,2.646,122,0.914,124,0.985,126,2.292,173,1.284,193,1.153,200,2.097,226,1.255,246,1.994,248,3.08,258,3.212,261,2.562,291,1.064,345,2.321,421,2.653,506,1.897,507,1.516,508,1.695,509,2.923,510,2.923,512,2.923,513,2.923,514,2.923,516,2.923,518,2.923,520,3.88,521,2.923,522,2.923,524,2.923,525,4.218,526,2.923,528,2.923,529,1.934,530,2.923,531,2.923,532,2.076,533,2.923,534,2.923,535,2.923,537,3.524,538,4.256,539,3.928,544,1.934,545,1.934,548,1.934,549,1.934,550,1.934,555,1.516,556,2.923,557,1.934,558,1.934,559,1.934,565,2.923,566,1.934,567,1.934,569,1.934,570,1.934,571,1.934,572,2.923,573,2.076,574,1.934,575,1.934,576,1.934,603,1.934,608,1.695,629,1.695,641,1.934,648,3.472,649,5.293,650,2.297,651,2.297,652,2.297,653,3.472,654,3.472,655,2.297,656,2.297,657,1.934,658,2.297,659,2.297,660,2.297,661,2.297,662,2.297,663,2.297,664,2.297]],["title/classes/ScopedDestructorSubject.html",[36,0.176,249,2.507]],["body/classes/ScopedDestructorSubject.html",[0,1.426,3,0.281,4,0.281,5,0.281,7,0.424,10,0.995,13,0.364,15,0.029,16,0.281,19,0.419,22,0.709,23,2.85,29,0.661,30,1.068,31,2.431,33,1.148,36,0.186,41,0.02,42,0.02,44,0.74,48,1.322,54,0.442,57,0.487,58,0.442,59,0.442,67,0.487,69,1.322,137,2.448,144,1.596,155,3.146,195,1.537,200,1.897,213,4.384,214,4.013,215,3.018,216,5.249,217,2.366,218,3.018,219,3.018,220,3.018,222,3.018,223,3.018,224,3.018,225,4.508,226,1.958,227,3.018,228,2.366,229,4.508,230,5.451,231,5.003,232,2.645,233,3.018,234,2.645,235,3.018,236,3.018,237,2.645,238,4.013,239,4.013,240,3.018,241,3.018,242,5.144,243,4.805,244,3.517,245,3.146,246,1.897,247,4.013,248,3.146,249,3.517,250,4.013,251,4.013,252,3.018,253,3.018,254,3.018,255,3.018,665,3.585]],["title/interfaces/SelectOptions.html",[0,1.352,666,2.861]],["body/interfaces/SelectOptions.html",[0,1.356,2,2.038,3,0.267,4,0.409,5,0.267,7,0.303,11,0.759,12,2.135,13,0.355,15,0.029,16,0.458,19,0.409,22,0.507,23,2.038,29,0.644,30,1.373,31,2.077,33,1.671,41,0.019,42,0.019,59,0.644,67,0.709,95,3.09,122,1.356,124,1.462,144,1.016,160,2.869,167,1.976,168,1.862,185,3.446,193,1.711,195,2.398,217,2.25,226,2.517,228,3.042,245,3.042,258,1.862,264,1.579,314,2.515,371,4.395,421,2.239,496,2.515,532,2.038,538,4.126,555,3.042,666,4.708,667,2.869,668,4.708,669,4.608,670,6.021,671,4.608,672,4.608,673,4.395,674,5.22,675,3.408,676,4.395,677,4.608,678,3.408,679,4.608,680,3.408,681,2.869,682,2.869,683,3.879,684,3.408,685,3.408,686,3.408,687,2.515,688,3.408,689,2.869,690,3.408,691,3.408,692,4.608,693,3.408,694,4.608,695,3.408,696,5.592,697,3.408,698,2.515,699,3.408,700,3.408,701,3.408,702,3.408,703,3.408,704,3.408,705,3.408,706,3.408,707,3.408,708,3.408,709,3.408,710,3.408,711,3.408,712,3.408,713,3.408,714,3.408,715,3.408]],["title/classes/Set.html",[36,0.176,140,1.457]],["body/classes/Set.html",[3,0.267,4,0.267,5,0.267,7,0.411,8,0.881,9,1.212,10,1.622,13,0.436,14,1.245,15,0.028,16,0.361,19,0.409,20,0.998,24,0.947,29,0.743,35,1.714,36,0.333,41,0.019,42,0.019,44,0.705,50,1.714,54,0.421,57,0.464,58,0.421,59,0.421,60,1.176,61,1.477,64,1.093,65,1.093,67,0.464,69,1.45,71,1.673,72,1.673,128,2.853,131,3.124,132,2.253,133,1.865,134,3.602,135,3.537,137,2.4,138,2.041,139,2.253,140,2.686,141,3.449,142,2.519,143,3.537,144,1.796,145,3.346,146,2.519,147,2.519,716,3.414]],["title/classes/SnapshotObserver.html",[36,0.176,717,2.861]],["body/classes/SnapshotObserver.html",[3,0.275,4,0.275,5,0.275,7,0.472,11,0.783,13,0.239,15,0.029,16,0.275,19,0.275,22,0.7,29,0.581,30,1.688,33,1.126,36,0.183,41,0.019,42,0.019,44,0.726,54,0.654,57,0.639,58,0.581,59,0.581,67,0.477,137,1.508,144,2.006,164,3.471,173,1.74,200,2.254,226,1.921,237,3.471,245,3.738,246,1.872,264,2.875,291,2.18,459,3.471,532,3.818,583,3.913,687,3.471,698,3.471,717,3.961,718,4.768,719,2.96,720,4.705,721,4.705,722,6.204,723,4.705,724,4.705,725,5.303,726,5.303,727,4.705,728,3.515,729,5.663,730,5.303,731,3.515,732,4.705,733,4.705,734,3.515,735,2.96,736,4.465,737,3.515,738,3.515,739,3.515,740,3.515,741,5.303,742,5.303]],["title/classes/StorageSelectors.html",[36,0.176,743,2.861]],["body/classes/StorageSelectors.html",[3,0.286,4,0.286,5,0.286,7,0.325,11,0.813,14,1.032,15,0.028,16,0.423,19,0.286,30,1.895,33,1.544,36,0.281,40,3.355,41,0.02,42,0.02,44,0.753,54,0.595,58,0.45,60,1.214,124,1.565,127,2.409,128,2.945,134,3.437,135,3.421,138,2.183,143,2.635,144,1.438,167,2.069,173,1.784,246,2.492,345,2.235,488,3.559,689,3.073,698,2.693,743,4.061,744,3.65,745,4.824,746,2.885,747,6.14,748,4.824,749,3.65,750,4.061,751,4.061,752,5.352,753,4.824,754,3.65,755,5.748,756,4.824,757,4.824,758,3.65,759,4.824,760,3.65,761,3.65,762,3.65,763,3.65,764,3.65,765,4.824,766,3.65,767,3.65,768,3.65,769,3.65]],["title/injectables/StorageState.html",[127,2.243,506,1.856]],["body/injectables/StorageState.html",[3,0.199,4,0.199,5,0.199,7,0.437,9,0.486,11,0.567,13,0.385,15,0.029,16,0.429,19,0.199,22,0.378,28,2.142,29,0.732,30,1.56,33,1.2,35,2.627,36,0.255,40,2.431,41,0.015,42,0.015,54,0.606,57,0.667,58,0.646,59,0.606,60,1.259,61,0.899,98,1.39,122,1.012,124,1.091,127,3.24,128,2.996,131,3.273,133,2.681,134,2.241,135,3.34,137,2.348,138,2.241,140,2.653,143,2.681,144,1.463,145,3.273,173,1.386,184,2.765,188,1.277,200,2.252,246,1.77,291,1.179,345,2.061,392,2.142,421,2.244,463,1.679,465,2.474,506,2.047,507,1.679,520,3.736,555,1.679,577,3.746,583,1.877,673,2.142,746,2.241,750,4.405,751,4.405,752,4.405,770,2.544,771,3.747,772,3.747,773,3.747,774,5.444,775,3.747,776,2.544,777,3.747,778,3.747,779,3.747,780,2.544,781,3.747,782,3.747,783,3.747,784,3.747,785,2.544,786,3.747,787,4.132,788,3.155,789,3.155,790,3.747,791,3.747,792,2.544,793,3.747,794,2.544,795,2.544,796,2.142,797,2.544,798,3.747,799,3.747,800,2.544,801,2.544,802,2.544,803,2.544,804,2.544,805,4.449,806,4.449,807,2.544,808,4.449,809,2.544,810,2.544,811,2.544,812,3.747,813,2.544,814,2.544,815,2.544,816,2.544,817,2.544,818,2.544,819,2.544]],["title/dependencies.html",[820,2.405,821,3.007]],["body/dependencies.html",[15,0.028,41,0.024,42,0.024,122,2.017,124,2.174,168,3.234,412,3.74,821,4.367,822,5.069,823,5.069,824,5.069,825,5.069,826,5.919,827,5.069,828,5.069]],["title/miscellaneous/enumerations.html",[829,1.561,830,3.432]],["body/miscellaneous/enumerations.html",[11,1.025,13,0.313,15,0.027,41,0.023,42,0.023,45,1.832,46,1.832,49,1.474,61,1.105,88,1.443,90,2.224,91,2.224,99,1.832,100,1.832,107,1.975,108,2.397,128,2.133,133,2.515,135,3.288,144,1.967,408,3.689,573,3.342,746,3.342,788,5.067,789,5.067,829,2.515,830,3.876,831,3.397,832,4.618,833,4.706,834,3.397,835,3.876,836,3.397,837,3.397,838,3.876,839,4.604]],["title/index.html",[11,0.636,840,2.857,841,2.857]],["body/index.html",[15,0.025,41,0.025,42,0.025,232,3.827,244,3.827,842,5.998,843,5.187,844,5.187,845,5.998,846,5.187,847,5.998,848,5.998,849,5.187]],["title/modules.html",[119,3.393]],["body/modules.html",[15,0.025,41,0.025,42,0.025,118,3.918,119,3.918,850,5.311,851,5.311,852,5.311]],["title/overview.html",[853,3.871]],["body/overview.html",[2,3.062,15,0.024,41,0.024,42,0.024,44,1.057,98,3.253,117,4.312,149,3.778,207,3.38,325,3.778,507,3.38,821,4.393,853,4.312,854,5.954,855,5.121,856,5.121,857,5.121,858,5.121,859,5.121]],["title/properties.html",[12,1.888,820,2.405]],["body/properties.html",[12,2.467,15,0.026,41,0.025,42,0.025,860,5.325,861,5.325]],["title/miscellaneous/typealiases.html",[829,1.561,862,4.076]],["body/miscellaneous/typealiases.html",[9,0.84,11,0.71,13,0.447,14,0.608,15,0.023,18,1.741,31,2.566,35,1.6,41,0.018,42,0.018,45,1.751,46,1.751,49,1.827,51,1.887,52,1.5,53,1.887,61,1.056,83,1.056,90,1.268,91,1.268,99,1.751,100,1.751,101,2.11,102,2.209,103,2.209,107,1.367,128,1.476,158,2.103,167,1.367,217,2.103,258,2.404,264,2.039,377,3.412,389,3.705,404,2.683,421,2.162,450,2.683,487,4.21,490,3.247,494,3.247,495,2.351,500,2.351,508,3.247,517,3.705,520,2.103,551,3.705,552,3.705,554,3.705,608,3.247,611,3.705,614,3.705,617,3.705,620,3.705,630,4.244,631,4.577,632,2.683,633,2.683,634,2.683,649,3.705,667,2.683,668,2.683,676,2.683,682,2.683,683,3.705,746,2.632,774,3.705,787,2.683,796,3.705,829,1.741,831,4.462,832,4.911,834,4.822,835,3.705,836,3.247,837,2.351,838,2.683,863,3.186,864,3.705,865,4.401,866,4.401,867,4.401,868,4.401,869,4.401,870,4.401,871,5.041,872,4.401,873,3.186,874,3.186,875,3.186,876,4.244,877,3.186,878,3.186,879,6.162,880,3.186,881,3.186,882,3.186,883,5.041,884,4.401,885,3.186,886,3.186,887,3.186,888,3.186,889,3.186,890,3.186,891,4.401,892,3.186,893,3.186,894,2.683,895,3.186]],["title/miscellaneous/variables.html",[829,1.561,896,3.432]],["body/miscellaneous/variables.html",[8,1.188,9,1.167,11,0.601,13,0.433,14,0.964,15,0.028,18,2.137,22,0.582,24,1.277,41,0.016,42,0.016,45,1.557,46,1.557,47,1.866,49,1.616,52,1.211,60,0.515,61,0.647,68,1.474,78,1.253,79,1.702,83,0.938,88,1.188,90,1.074,91,1.557,94,1.812,99,1.557,100,1.557,101,1.702,105,1.474,108,1.678,132,1.781,137,2.298,139,1.781,140,1.157,144,1.973,155,1.781,162,2.272,188,3.323,195,1.974,229,1.991,354,2.886,355,2.886,357,2.272,358,2.272,359,2.272,360,2.272,368,3.294,370,2.272,373,2.272,421,1.157,532,1.613,553,3.294,573,2.339,587,2.272,629,2.886,657,3.294,681,2.272,687,1.991,718,2.272,719,3.294,735,2.272,736,3.294,746,2.752,829,1.474,831,3.953,832,4.81,833,2.272,834,4.66,836,3.953,837,1.991,864,2.272,876,4.511,894,2.272,896,2.272,897,2.698,898,3.912,899,2.698,900,3.912,901,3.912,902,3.912,903,4.602,904,4.602,905,3.912,906,3.912,907,2.698,908,3.912,909,4.602,910,4.602,911,4.602,912,2.698,913,4.602,914,3.912,915,4.602,916,4.602,917,2.698,918,3.912,919,2.698,920,2.698,921,5.047,922,2.698,923,5.588,924,2.698,925,2.698,926,2.698,927,2.698,928,2.698,929,3.912,930,3.912,931,2.698,932,2.698,933,5.588,934,2.698,935,3.912,936,2.698,937,2.698,938,2.698,939,3.912,940,2.698,941,2.698,942,2.698,943,2.698,944,2.698,945,2.698,946,2.698,947,2.698,948,2.698,949,2.698,950,2.698,951,2.698,952,4.602,953,2.698,954,2.698,955,2.698,956,2.698,957,2.698,958,2.698,959,2.698]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":184,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{},"injectables/StorageState.html":{}}}],["0.0.1",{"_index":861,"title":{},"body":{"properties.html":{}}}],["1",{"_index":98,"title":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{}},"body":{"injectables/StorageState.html":{},"overview.html":{}}}],["15.1.0",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":858,"title":{},"body":{"overview.html":{}}}],["2",{"_index":856,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":857,"title":{},"body":{"overview.html":{}}}],["3.7.6",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":859,"title":{},"body":{"overview.html":{}}}],["_data",{"_index":316,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["accessors",{"_index":340,"title":{},"body":{"directives/HoverDirective.html":{}}}],["action",{"_index":9,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action('add",{"_index":70,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["action('clear",{"_index":147,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{}}}],["action('delete",{"_index":146,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{}}}],["action('load",{"_index":86,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["action('navigate",{"_index":92,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["action('set",{"_index":142,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{}}}],["action(`[${group",{"_index":34,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["action(add",{"_index":522,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(addfromyaml",{"_index":526,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(addmany",{"_index":518,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(clear",{"_index":775,"title":{},"body":{"injectables/StorageState.html":{}}}],["action(delete",{"_index":779,"title":{},"body":{"injectables/StorageState.html":{}}}],["action(loadfromyaml",{"_index":535,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["action(loadmarkdown",{"_index":654,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["action(navigate",{"_index":541,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["action(set",{"_index":791,"title":{},"body":{"injectables/StorageState.html":{}}}],["action(type",{"_index":37,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["actionconstructor",{"_index":1,"title":{"interfaces/ActionConstructor.html":{}},"body":{"interfaces/ActionConstructor.html":{}}}],["actiongroup",{"_index":64,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["actiongroup('linkregistry",{"_index":68,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('resourceregistry",{"_index":105,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('storage",{"_index":139,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(group",{"_index":32,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["actions/actions",{"_index":65,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["actiontyperegistry",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":379,"title":{},"body":{"directives/LinkDirective.html":{}}}],["actual_component",{"_index":212,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["add",{"_index":43,"title":{"classes/Add.html":{},"classes/Add-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["add(id",{"_index":662,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["added",{"_index":539,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addfromyaml",{"_index":81,"title":{"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["addfromyaml(data",{"_index":576,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["additional",{"_index":710,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["addmany",{"_index":76,"title":{"classes/AddMany.html":{},"classes/AddMany-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["addmany(ctx",{"_index":516,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addmany(entries",{"_index":569,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addone",{"_index":512,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addone(ctx",{"_index":521,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["adds",{"_index":25,"title":{},"body":{"interfaces/ActionConstructor.html":{},"injectables/ResourceRegistryState.html":{}}}],["addyaml",{"_index":513,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["addyaml(ctx",{"_index":524,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["affects",{"_index":384,"title":{},"body":{"directives/LinkDirective.html":{}}}],["afterviewinit",{"_index":165,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["alias",{"_index":891,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":768,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["along",{"_index":295,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["altkey",{"_index":444,"title":{},"body":{"directives/LinkDirective.html":{}}}],["anchor",{"_index":425,"title":{},"body":{"directives/LinkDirective.html":{}}}],["angular",{"_index":561,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["angular/cdk/overlay",{"_index":269,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["angular/cdk/portal",{"_index":271,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["angular/common",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":545,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["angular/core",{"_index":122,"title":{},"body":{"modules/CdkStateModule.html":{},"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{},"dependencies.html":{}}}],["angular/router",{"_index":63,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["anyentry",{"_index":604,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["anyentry(state",{"_index":607,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["anyentryquery",{"_index":611,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["anytext",{"_index":605,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["anytext(state",{"_index":612,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["application",{"_index":275,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["applying",{"_index":889,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["area'].includes(this.tagname",{"_index":427,"title":{},"body":{"directives/LinkDirective.html":{}}}],["args",{"_index":684,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["argument",{"_index":893,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["arguments",{"_index":389,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/typealiases.html":{}}}],["array",{"_index":894,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["associated",{"_index":243,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["async",{"_index":515,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["attach",{"_index":320,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["attached",{"_index":287,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["attaches",{"_index":250,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["attaching",{"_index":159,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["attr.href",{"_index":363,"title":{},"body":{"directives/LinkDirective.html":{}}}],["attr.rel",{"_index":364,"title":{},"body":{"directives/LinkDirective.html":{}}}],["attr.target",{"_index":365,"title":{},"body":{"directives/LinkDirective.html":{}}}],["attribute",{"_index":387,"title":{},"body":{"directives/LinkDirective.html":{}}}],["attributes",{"_index":451,"title":{},"body":{"directives/LinkDirective.html":{}}}],["automatically",{"_index":704,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["available",{"_index":851,"title":{},"body":{"modules.html":{}}}],["await",{"_index":579,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["base",{"_index":8,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["baseaction",{"_index":39,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["based",{"_index":397,"title":{},"body":{"directives/LinkDirective.html":{}}}],["bind",{"_index":461,"title":{},"body":{"directives/LinkDirective.html":{}}}],["boolean",{"_index":371,"title":{},"body":{"directives/LinkDirective.html":{},"interfaces/SelectOptions.html":{}}}],["bottom",{"_index":307,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["bound",{"_index":450,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/typealiases.html":{}}}],["brand('linkid",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brand('resourceid",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":581,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["browse",{"_index":852,"title":{},"body":{"modules.html":{}}}],["building",{"_index":96,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["builtin",{"_index":836,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["builtin_entry",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builtin_type_values",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builtinresourcetype",{"_index":629,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/variables.html":{}}}],["builtinresourcetype.markdown",{"_index":641,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["builtinresourcetype.text",{"_index":643,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["builtinresourcetype.url",{"_index":647,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["builtintypes",{"_index":864,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":441,"title":{},"body":{"directives/LinkDirective.html":{}}}],["cached",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":224,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["called",{"_index":707,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["case",{"_index":465,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/StorageState.html":{}}}],["cb",{"_index":223,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["cdk",{"_index":842,"title":{},"body":{"index.html":{}}}],["cdkstatemodule",{"_index":118,"title":{"modules/CdkStateModule.html":{}},"body":{"modules/CdkStateModule.html":{},"modules.html":{}}}],["cdr",{"_index":694,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["cdr.markforcheck",{"_index":697,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["change",{"_index":673,"title":{},"body":{"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{}}}],["changedetectorref",{"_index":675,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["changes",{"_index":333,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["child",{"_index":183,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["class",{"_index":36,"title":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LinkRegistrySelectors.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{}},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["classes",{"_index":44,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LinkRegistrySelectors.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"overview.html":{}}}],["cleanup",{"_index":216,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["clear",{"_index":131,"title":{"classes/Clear.html":{}},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"injectables/StorageState.html":{}}}],["clear(ctx",{"_index":773,"title":{},"body":{"injectables/StorageState.html":{}}}],["clears",{"_index":777,"title":{},"body":{"injectables/StorageState.html":{}}}],["click",{"_index":366,"title":{},"body":{"directives/LinkDirective.html":{}}}],["collects",{"_index":432,"title":{},"body":{"directives/LinkDirective.html":{}}}],["commands",{"_index":587,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["comment",{"_index":766,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["common",{"_index":26,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["complete",{"_index":699,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["completes",{"_index":248,"title":{},"body":{"interfaces/DestructorScope.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{}}}],["component",{"_index":149,"title":{"components/DestroyHostComponent.html":{}},"body":{"components/DestroyHostComponent.html":{},"overview.html":{}}}],["component's",{"_index":414,"title":{},"body":{"directives/LinkDirective.html":{}}}],["component/directive/pipe",{"_index":163,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["component_template",{"_index":206,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["componentref",{"_index":186,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["components",{"_index":151,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["configuration",{"_index":669,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["connectionpositionpair",{"_index":267,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["const",{"_index":67,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{}}}],["constructor(entries",{"_index":114,"title":{},"body":{"classes/AddMany.html":{},"classes/AddMany-1.html":{}}}],["constructor(id",{"_index":50,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["constructor(readonly",{"_index":71,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["constructor(scope",{"_index":251,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["constructor(url",{"_index":598,"title":{},"body":{"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{}}}],["constructor(yaml",{"_index":111,"title":{},"body":{"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{}}}],["container",{"_index":179,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["container.createcomponent(destroyhostcomponent",{"_index":197,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["containing",{"_index":672,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["content",{"_index":261,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"injectables/ResourceRegistryState.html":{}}}],["content(content",{"_index":280,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["context",{"_index":258,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["count",{"_index":812,"title":{},"body":{"injectables/StorageState.html":{}}}],["create",{"_index":21,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{}}}],["create(container",{"_index":174,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["created",{"_index":292,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["createexternalurl",{"_index":410,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["createexternalurl(entry.url",{"_index":594,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["createexternalurl(link.url",{"_index":468,"title":{},"body":{"directives/LinkDirective.html":{}}}],["createinternalurl",{"_index":411,"title":{},"body":{"directives/LinkDirective.html":{}}}],["createinternalurl(injector",{"_index":466,"title":{},"body":{"directives/LinkDirective.html":{}}}],["createlinkid('@@__empty__",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":23,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{}}}],["creating",{"_index":881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ctrlkey",{"_index":442,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ctx",{"_index":520,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["ctx.getstate()[id",{"_index":578,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["ctx.patchstate(entries",{"_index":566,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["ctx.setstate",{"_index":817,"title":{},"body":{"injectables/StorageState.html":{}}}],["current",{"_index":437,"title":{},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["custom",{"_index":876,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["custom:${t",{"_index":877,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["custom_entry",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom_entry_type",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom_type_prefix",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customresourceentry",{"_index":865,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["customresourcetype",{"_index":866,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["data",{"_index":83,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data(data",{"_index":289,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["dataquery",{"_index":614,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["date",{"_index":332,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["deals",{"_index":428,"title":{},"body":{"directives/LinkDirective.html":{}}}],["decorators",{"_index":345,"title":{},"body":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["default",{"_index":188,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":555,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{}}}],["defaultvalue",{"_index":635,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["defined",{"_index":54,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["delete",{"_index":145,"title":{"classes/Delete.html":{}},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"injectables/StorageState.html":{}}}],["delete(ctx",{"_index":778,"title":{},"body":{"injectables/StorageState.html":{}}}],["deletes",{"_index":781,"title":{},"body":{"injectables/StorageState.html":{}}}],["dependencies",{"_index":821,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["destroy",{"_index":160,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/SelectOptions.html":{}}}],["destroy.ts",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destroy/destroy",{"_index":156,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["destroy/destructor",{"_index":214,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["destroy/on",{"_index":681,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/variables.html":{}}}],["destroyhostcomponent",{"_index":150,"title":{"components/DestroyHostComponent.html":{}},"body":{"components/DestroyHostComponent.html":{}}}],["destructor",{"_index":229,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/variables.html":{}}}],["destructor_cache",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destructorscope",{"_index":213,"title":{"interfaces/DestructorScope.html":{}},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["detach",{"_index":326,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["detection",{"_index":674,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["determines",{"_index":227,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["different",{"_index":460,"title":{},"body":{"directives/LinkDirective.html":{}}}],["directive",{"_index":204,"title":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["directives",{"_index":207,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"overview.html":{}}}],["disable",{"_index":689,"title":{},"body":{"interfaces/SelectOptions.html":{},"classes/StorageSelectors.html":{}}}],["disconnects",{"_index":198,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["dispatch",{"_index":403,"title":{},"body":{"directives/LinkDirective.html":{}}}],["dispatch(linkregistryactions.navigate",{"_index":424,"title":{},"body":{"directives/LinkDirective.html":{}}}],["display",{"_index":170,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["displayed",{"_index":278,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["dom",{"_index":153,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["draft[id",{"_index":819,"title":{},"body":{"injectables/StorageState.html":{}}}],["each",{"_index":28,"title":{},"body":{"interfaces/ActionConstructor.html":{},"injectables/StorageState.html":{}}}],["el",{"_index":172,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["element",{"_index":180,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["elementref",{"_index":192,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["emits",{"_index":245,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{}}}],["emitted",{"_index":687,"title":{},"body":{"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["emitting",{"_index":700,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["empty",{"_index":370,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/variables.html":{}}}],["empty_link",{"_index":368,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":305,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["endhover",{"_index":328,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["entries",{"_index":78,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":52,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entry(state",{"_index":615,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["entry.extras",{"_index":591,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["entry.markdown",{"_index":642,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["entry.rel",{"_index":597,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["entry.target",{"_index":596,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["entry.text",{"_index":644,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["entry?.[field",{"_index":639,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["entry?.type",{"_index":505,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["entryquery",{"_index":617,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["enum",{"_index":839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":830,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":737,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["err",{"_index":730,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["error",{"_index":532,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["error(`cannot",{"_index":584,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["error(`no",{"_index":803,"title":{},"body":{"injectables/StorageState.html":{}}}],["error(err",{"_index":727,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errorobserver",{"_index":726,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errors",{"_index":732,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errorvalue",{"_index":739,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["eslint",{"_index":761,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["eslint/ban",{"_index":764,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["event",{"_index":319,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["execute",{"_index":849,"title":{},"body":{"index.html":{}}}],["existing",{"_index":374,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["explicitly",{"_index":688,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["export",{"_index":19,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["extends",{"_index":69,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/DestructorScope.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{}}}],["external",{"_index":91,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["external_link_schema",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["externallinkentry",{"_index":551,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["extractbuiltinentrytype",{"_index":867,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["extracts",{"_index":878,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["extras",{"_index":94,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":24,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":235,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["field",{"_index":606,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["field(state",{"_index":618,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["fieldquery",{"_index":620,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["filename",{"_index":525,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["first",{"_index":182,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{}}}],["flexibleconnectedto(this.el",{"_index":302,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["format",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":501,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["fragment",{"_index":357,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":31,"title":{},"body":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":217,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["generated",{"_index":844,"title":{},"body":{"index.html":{}}}],["get(url",{"_index":571,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["getentry",{"_index":502,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["getentry(state",{"_index":638,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["getfield",{"_index":624,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["getfield(id",{"_index":646,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["getlinkattributes(link",{"_index":462,"title":{},"body":{"directives/LinkDirective.html":{}}}],["gets",{"_index":459,"title":{},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"classes/SnapshotObserver.html":{}}}],["getstorage",{"_index":772,"title":{},"body":{"injectables/StorageState.html":{}}}],["getstorage(id",{"_index":784,"title":{},"body":{"injectables/StorageState.html":{}}}],["getting",{"_index":840,"title":{"index.html":{}},"body":{}}],["given",{"_index":752,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["global",{"_index":648,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["globally",{"_index":511,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["graph",{"_index":850,"title":{},"body":{"modules.html":{}}}],["group",{"_index":27,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["handle",{"_index":317,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["handler's",{"_index":892,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handlers",{"_index":882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handles",{"_index":729,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["helper",{"_index":890,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["holding",{"_index":771,"title":{},"body":{"injectables/StorageState.html":{}}}],["host",{"_index":169,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{}}}],["host.component.ts",{"_index":157,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["host.component.ts:14",{"_index":190,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["host.component.ts:22",{"_index":176,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["hostbinding",{"_index":401,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbinding('attr.href",{"_index":398,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbinding('attr.rel",{"_index":399,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbinding('attr.target",{"_index":400,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostbindings",{"_index":362,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostlistener",{"_index":272,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["hostlistener('click",{"_index":395,"title":{},"body":{"directives/LinkDirective.html":{}}}],["hostlistener('mouseout",{"_index":327,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hostlistener('mouseover",{"_index":321,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hostlisteners",{"_index":337,"title":{},"body":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["hover",{"_index":260,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hovercontext",{"_index":256,"title":{"interfaces/HoverContext.html":{}},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hoverdirective",{"_index":208,"title":{"directives/HoverDirective.html":{}},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hra",{"_index":168,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/SelectOptions.html":{},"dependencies.html":{}}}],["hrahover",{"_index":276,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["hrahover]'},{'name",{"_index":209,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["hrahoverdata",{"_index":336,"title":{},"body":{"directives/HoverDirective.html":{}}}],["hralink",{"_index":211,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{}}}],["href",{"_index":353,"title":{},"body":{"directives/LinkDirective.html":{}}}],["html",{"_index":203,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["http",{"_index":556,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["httpclient",{"_index":544,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["id",{"_index":60,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["id,key",{"_index":753,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["identifier",{"_index":61,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ignore",{"_index":767,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["immediately",{"_index":247,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["immer",{"_index":795,"title":{},"body":{"injectables/StorageState.html":{}}}],["implements",{"_index":164,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{},"classes/SnapshotObserver.html":{}}}],["implicit",{"_index":263,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["imports",{"_index":129,"title":{},"body":{"modules/CdkStateModule.html":{}}}],["improved",{"_index":531,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["increasechangecount(ctx",{"_index":816,"title":{},"body":{"injectables/StorageState.html":{}}}],["increases",{"_index":811,"title":{},"body":{"injectables/StorageState.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":735,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["inject",{"_index":193,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{}}}],["inject(changedetectorref",{"_index":695,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["inject(elementref).nativeelement",{"_index":189,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["inject(httpclient",{"_index":559,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["inject(injector",{"_index":415,"title":{},"body":{"directives/LinkDirective.html":{}}}],["inject(ngzone",{"_index":564,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["inject(overlay",{"_index":301,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["inject(overlay).create",{"_index":299,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["inject(router",{"_index":562,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["inject(store",{"_index":713,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["inject(viewcontainerref",{"_index":313,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["inject>(elementref).nativeelement.tagname.tolowercase",{"_index":419,"title":{},"body":{"directives/LinkDirective.html":{}}}],["injectable",{"_index":506,"title":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{}},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{}}}],["injectables",{"_index":507,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"injectables/StorageState.html":{},"overview.html":{}}}],["injectdestroy",{"_index":680,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["injection",{"_index":706,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["injector",{"_index":402,"title":{},"body":{"directives/LinkDirective.html":{}}}],["injectors/.../on",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectors/.../select",{"_index":870,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectors/.../select.ts",{"_index":873,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectors/.../snapshot",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectors/src/lib/on",{"_index":155,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"miscellaneous/variables.html":{}}}],["injectors/src/lib/select/select",{"_index":887,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["injectors/src/lib/select/select.ts",{"_index":667,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["injectors/src/lib/select/snapshot",{"_index":718,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":560,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["input",{"_index":273,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["input('hrahover",{"_index":279,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["input('hrahoverdata",{"_index":288,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["input('hralink",{"_index":413,"title":{},"body":{"directives/LinkDirective.html":{}}}],["inputs",{"_index":335,"title":{},"body":{"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["inserted",{"_index":181,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["inside",{"_index":177,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"interfaces/SelectOptions.html":{}},"body":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionConstructor.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"interfaces/SelectOptions.html":{},"overview.html":{}}}],["internal",{"_index":90,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["internal_link_schema",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internallinkentry",{"_index":552,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["invalid",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isanchorelement",{"_index":426,"title":{},"body":{"directives/LinkDirective.html":{}}}],["isbuiltintype(val",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdestructorscopelike(obj",{"_index":236,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["isobject",{"_index":238,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["isresourceurl",{"_index":430,"title":{},"body":{"directives/LinkDirective.html":{}}}],["items",{"_index":756,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["js",{"_index":548,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["k",{"_index":479,"title":{},"body":{"directives/LinkDirective.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["keeping",{"_index":509,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["key",{"_index":143,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["key,value",{"_index":750,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["key:string",{"_index":805,"title":{},"body":{"injectables/StorageState.html":{}}}],["latest",{"_index":722,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["legend",{"_index":202,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["length",{"_index":747,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["library",{"_index":843,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":161,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["lifetime",{"_index":703,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["line",{"_index":762,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["link",{"_index":49,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"modules/CdkStateModule.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["link'].includes(this.tagname",{"_index":431,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.commands",{"_index":467,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.extras",{"_index":435,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link.type",{"_index":446,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link/url",{"_index":438,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link?.type",{"_index":464,"title":{},"body":{"directives/LinkDirective.html":{}}}],["link_registry_schema",{"_index":553,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["link_registry_schema.parse(data",{"_index":568,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["linkdirective",{"_index":210,"title":{"directives/LinkDirective.html":{}},"body":{"components/DestroyHostComponent.html":{},"directives/LinkDirective.html":{}}}],["linkentry",{"_index":53,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/typealiases.html":{}}}],["linkid",{"_index":51,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/typealiases.html":{}}}],["linkid:'${id",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkregistry",{"_index":554,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistryactions",{"_index":406,"title":{},"body":{"directives/LinkDirective.html":{}}}],["linkregistrycontext",{"_index":517,"title":{},"body":{"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistrymodel",{"_index":490,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistryquery",{"_index":494,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["linkregistryselectors",{"_index":407,"title":{"classes/LinkRegistrySelectors.html":{}},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{}}}],["linkregistrystate",{"_index":125,"title":{"injectables/LinkRegistryState.html":{}},"body":{"modules/CdkStateModule.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{}}}],["links",{"_index":74,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["linktype",{"_index":408,"title":{},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/enumerations.html":{}}}],["linktype.external",{"_index":447,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["linktype.internal",{"_index":434,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["list",{"_index":783,"title":{},"body":{"injectables/StorageState.html":{}}}],["load",{"_index":537,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["load(yaml",{"_index":567,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["loaded",{"_index":109,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadfromyaml",{"_index":85,"title":{"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{}},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["loading",{"_index":558,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadmarkdown",{"_index":110,"title":{"classes/LoadMarkdown.html":{}},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadmarkdown(ctx",{"_index":653,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["loads",{"_index":87,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["loadyaml",{"_index":514,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["loadyaml(ctx",{"_index":534,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["local",{"_index":789,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["localstorage",{"_index":801,"title":{},"body":{"injectables/StorageState.html":{}}}],["manage",{"_index":786,"title":{},"body":{"injectables/StorageState.html":{}}}],["managing",{"_index":800,"title":{},"body":{"injectables/StorageState.html":{}}}],["many",{"_index":77,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["map",{"_index":549,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["map((action",{"_index":663,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["map((markdown",{"_index":661,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["maps",{"_index":874,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["mark",{"_index":671,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["markdown",{"_index":108,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["markdown(getfield",{"_index":621,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["markdown_entry",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["markfn",{"_index":696,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["markforcheck(options",{"_index":692,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["marking",{"_index":690,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["marks",{"_index":685,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["matching",{"_index":42,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merged",{"_index":475,"title":{},"body":{"directives/LinkDirective.html":{}}}],["mergeextras(opt1",{"_index":476,"title":{},"body":{"directives/LinkDirective.html":{}}}],["mergekey",{"_index":478,"title":{},"body":{"directives/LinkDirective.html":{}}}],["mergekey('fragment",{"_index":484,"title":{},"body":{"directives/LinkDirective.html":{}}}],["mergekey('preservefragment",{"_index":485,"title":{},"body":{"directives/LinkDirective.html":{}}}],["mergekey('queryparams",{"_index":482,"title":{},"body":{"directives/LinkDirective.html":{}}}],["mergekey('queryparamshandling",{"_index":483,"title":{},"body":{"directives/LinkDirective.html":{}}}],["mergekey('relativeto",{"_index":486,"title":{},"body":{"directives/LinkDirective.html":{}}}],["merges",{"_index":469,"title":{},"body":{"directives/LinkDirective.html":{}}}],["messages",{"_index":533,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["metadata",{"_index":166,"title":{},"body":{"components/DestroyHostComponent.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["metakey",{"_index":445,"title":{},"body":{"directives/LinkDirective.html":{}}}],["method",{"_index":141,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"injectables/LinkRegistryState.html":{},"classes/Set.html":{}}}],["methods",{"_index":173,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["miscellaneous",{"_index":829,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":884,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["module",{"_index":117,"title":{"modules/CdkStateModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":119,"title":{"modules.html":{}},"body":{"modules/CdkStateModule.html":{},"modules.html":{}}}],["monotypeoperatorfunction",{"_index":677,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["mounted",{"_index":417,"title":{},"body":{"directives/LinkDirective.html":{}}}],["mouse",{"_index":318,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["mouseevent",{"_index":394,"title":{},"body":{"directives/LinkDirective.html":{}}}],["mouseout",{"_index":338,"title":{},"body":{"directives/HoverDirective.html":{}}}],["mouseover",{"_index":339,"title":{},"body":{"directives/HoverDirective.html":{}}}],["multiple",{"_index":73,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["nagivate",{"_index":381,"title":{},"body":{"directives/LinkDirective.html":{}}}],["name",{"_index":58,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["navigate",{"_index":89,"title":{"classes/Navigate.html":{}},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["navigate(ctx",{"_index":540,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["navigatetoexternal(entry",{"_index":593,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["navigatetointernal(entry",{"_index":588,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["navigation",{"_index":97,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["never",{"_index":640,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["new",{"_index":22,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":187,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["next",{"_index":698,"title":{},"body":{"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{}}}],["next(value",{"_index":733,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["nextobserver",{"_index":725,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["ngafterviewinit",{"_index":199,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["ngmodule",{"_index":121,"title":{},"body":{"modules/CdkStateModule.html":{}}}],["ngonchanges",{"_index":439,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ngxs/store",{"_index":124,"title":{},"body":{"modules/CdkStateModule.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{}}}],["ngxsmodule",{"_index":123,"title":{},"body":{"modules/CdkStateModule.html":{}}}],["ngxsmodule.forfeature([linkregistrystate",{"_index":130,"title":{},"body":{"modules/CdkStateModule.html":{}}}],["ngzone",{"_index":546,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["no_error_sentinel",{"_index":738,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["no_error_sentinel_obj",{"_index":736,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":585,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["none",{"_index":171,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["notifyonchange",{"_index":670,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["null",{"_index":240,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["nullable",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":755,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["nx",{"_index":845,"title":{},"body":{"index.html":{}}}],["obj",{"_index":231,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["obj.ondestroy",{"_index":241,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["obje",{"_index":814,"title":{},"body":{"injectables/StorageState.html":{}}}],["object",{"_index":137,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["object.values(rawbuiltinresourcetype",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objects",{"_index":787,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["observable",{"_index":538,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{}}}],["observable's",{"_index":702,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["observables",{"_index":162,"title":{},"body":{"components/DestroyHostComponent.html":{},"miscellaneous/variables.html":{}}}],["observer",{"_index":720,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["observer.ts",{"_index":719,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/variables.html":{}}}],["observer.ts:18",{"_index":731,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["observer.ts:30",{"_index":734,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["observer.ts:38",{"_index":728,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["once",{"_index":75,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["onchanges",{"_index":352,"title":{},"body":{"directives/LinkDirective.html":{}}}],["onclick",{"_index":356,"title":{},"body":{"directives/LinkDirective.html":{}}}],["onclick(event",{"_index":393,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ondestroy",{"_index":219,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["ondestroy(cb",{"_index":220,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["onsameurlnavigation",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operation",{"_index":813,"title":{},"body":{"injectables/StorageState.html":{}}}],["operator",{"_index":691,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["opt1",{"_index":473,"title":{},"body":{"directives/LinkDirective.html":{}}}],["opt2",{"_index":474,"title":{},"body":{"directives/LinkDirective.html":{}}}],["opt2[key",{"_index":480,"title":{},"body":{"directives/LinkDirective.html":{}}}],["optional",{"_index":59,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["optionally",{"_index":500,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["options",{"_index":95,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"interfaces/SelectOptions.html":{}}}],["options?.notifyonchange",{"_index":693,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["originx",{"_index":304,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["originy",{"_index":306,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["otherwise",{"_index":234,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/LinkRegistrySelectors.html":{},"classes/ScopedDestructorSubject.html":{}}}],["out",{"_index":325,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"overview.html":{}}}],["over",{"_index":294,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlay",{"_index":268,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref",{"_index":298,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref.attach(portal",{"_index":324,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref.detach",{"_index":329,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayref.hasattached",{"_index":323,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayx",{"_index":308,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["overlayy",{"_index":309,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["override",{"_index":472,"title":{},"body":{"directives/LinkDirective.html":{}}}],["overview",{"_index":853,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":56,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["package",{"_index":820,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pair",{"_index":751,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["param",{"_index":29,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["param1",{"_index":577,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/StorageState.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["params",{"_index":375,"title":{},"body":{"directives/LinkDirective.html":{}}}],["parse",{"_index":528,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["partial",{"_index":79,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"miscellaneous/variables.html":{}}}],["parts",{"_index":701,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["passed",{"_index":259,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["passthrough",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":880,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["peer",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["performed",{"_index":392,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/StorageState.html":{}}}],["pipe",{"_index":660,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["pipe(map((data",{"_index":574,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["pipe(takeuntil(injectdestroy",{"_index":715,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["pointed",{"_index":782,"title":{},"body":{"injectables/StorageState.html":{}}}],["portal",{"_index":286,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["position",{"_index":296,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["positionstrategy",{"_index":300,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["prefix",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preserve",{"_index":373,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/variables.html":{}}}],["preservefragment",{"_index":358,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":291,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["produce",{"_index":794,"title":{},"body":{"injectables/StorageState.html":{}}}],["produce((draft",{"_index":818,"title":{},"body":{"injectables/StorageState.html":{}}}],["promise",{"_index":543,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"interfaces/SelectOptions.html":{},"properties.html":{}}}],["property",{"_index":315,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["provided",{"_index":178,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["queries",{"_index":493,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["query",{"_index":377,"title":{},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["query(state",{"_index":489,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["querying",{"_index":420,"title":{},"body":{"directives/LinkDirective.html":{}}}],["querylink",{"_index":422,"title":{},"body":{"directives/LinkDirective.html":{}}}],["queryparams",{"_index":359,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/variables.html":{}}}],["queryparamshandling",{"_index":360,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/variables.html":{}}}],["raw",{"_index":107,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rawbuiltinresourcetype",{"_index":833,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":20,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{}}}],["record",{"_index":895,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["reference",{"_index":191,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["refine((val",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":222,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["registeractiontype",{"_index":17,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["registeractiontype(type",{"_index":38,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["registered",{"_index":218,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["registry",{"_index":18,"title":{},"body":{"interfaces/ActionConstructor.html":{},"modules/CdkStateModule.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["registry.actions",{"_index":550,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["registry.actions.ts",{"_index":47,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"miscellaneous/variables.html":{}}}],["registry.actions.ts:20",{"_index":116,"title":{},"body":{"classes/AddMany-1.html":{}}}],["registry.actions.ts:21",{"_index":115,"title":{},"body":{"classes/AddMany.html":{}}}],["registry.actions.ts:31",{"_index":113,"title":{},"body":{"classes/AddFromYaml-1.html":{}}}],["registry.actions.ts:32",{"_index":112,"title":{},"body":{"classes/AddFromYaml.html":{}}}],["registry.actions.ts:42",{"_index":600,"title":{},"body":{"classes/LoadFromYaml-1.html":{}}}],["registry.actions.ts:43",{"_index":599,"title":{},"body":{"classes/LoadFromYaml.html":{}}}],["registry.actions.ts:53",{"_index":601,"title":{},"body":{"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["registry.actions.ts:8",{"_index":104,"title":{},"body":{"classes/Add-1.html":{}}}],["registry.actions.ts:9",{"_index":55,"title":{},"body":{"classes/Add.html":{}}}],["registry.model",{"_index":66,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["registry.model.ts",{"_index":832,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["registry.selectors.ts",{"_index":487,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["registry.selectors.ts:102",{"_index":626,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:112",{"_index":628,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:16",{"_index":492,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["registry.selectors.ts:37",{"_index":616,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:47",{"_index":610,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:57",{"_index":619,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:70",{"_index":613,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.selectors.ts:92",{"_index":623,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["registry.state",{"_index":497,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{}}}],["registry.state.ts",{"_index":508,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["registry.state.ts:30",{"_index":651,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:40",{"_index":650,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:47",{"_index":523,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:51",{"_index":652,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:57",{"_index":519,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:64",{"_index":656,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:68",{"_index":527,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:77",{"_index":655,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["registry.state.ts:81",{"_index":536,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.state.ts:94",{"_index":542,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["registry.ts",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registry/link",{"_index":46,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["registry/resource",{"_index":100,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rel",{"_index":354,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["relative",{"_index":382,"title":{},"body":{"directives/LinkDirective.html":{}}}],["relativeto",{"_index":361,"title":{},"body":{"directives/LinkDirective.html":{}}}],["remaining",{"_index":888,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["remote",{"_index":84,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["replaceurl",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaysubject",{"_index":225,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["reset",{"_index":855,"title":{},"body":{"overview.html":{}}}],["resource",{"_index":101,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"directives/LinkDirective.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resource_entry",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resource_id",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resource_registry_schema",{"_index":657,"title":{},"body":{"injectables/ResourceRegistryState.html":{},"miscellaneous/variables.html":{}}}],["resource_registry_schema.parse(data",{"_index":658,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["resourceentry",{"_index":103,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceentrypayload",{"_index":868,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resourceid",{"_index":102,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceid:'${id",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourceregistry",{"_index":603,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["resourceregistrycontext",{"_index":649,"title":{},"body":{"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistrymodel",{"_index":608,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistryselectors",{"_index":602,"title":{"classes/ResourceRegistrySelectors.html":{}},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["resourceregistryselectors.anyentry",{"_index":633,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistryselectors.entry",{"_index":632,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistryselectors.field",{"_index":634,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["resourceregistrystate",{"_index":126,"title":{"injectables/ResourceRegistryState.html":{}},"body":{"modules/CdkStateModule.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{}}}],["resources",{"_index":106,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"injectables/ResourceRegistryState.html":{}}}],["resourcetype",{"_index":630,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["responsetype",{"_index":572,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["restargs",{"_index":869,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["result",{"_index":477,"title":{},"body":{"directives/LinkDirective.html":{}}}],["result[key",{"_index":481,"title":{},"body":{"directives/LinkDirective.html":{}}}],["results",{"_index":41,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":745,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["return",{"_index":33,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["returned",{"_index":631,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":30,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["route",{"_index":383,"title":{},"body":{"directives/LinkDirective.html":{}}}],["router",{"_index":547,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["routing",{"_index":351,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["run",{"_index":244,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"index.html":{}}}],["running",{"_index":846,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":226,"title":{},"body":{"interfaces/DestructorScope.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{}}}],["schema",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":230,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["scope.ondestroy",{"_index":253,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["scopeddestructorsubject",{"_index":249,"title":{"classes/ScopedDestructorSubject.html":{}},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["second",{"_index":471,"title":{},"body":{"directives/LinkDirective.html":{}}}],["seems",{"_index":233,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["select",{"_index":668,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["select$(selector",{"_index":712,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["select(selector",{"_index":714,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["selected",{"_index":711,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["selection",{"_index":708,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["selectoptions",{"_index":666,"title":{"interfaces/SelectOptions.html":{}},"body":{"interfaces/SelectOptions.html":{}}}],["selector",{"_index":167,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{},"interfaces/SelectOptions.html":{},"classes/StorageSelectors.html":{},"miscellaneous/typealiases.html":{}}}],["selector(['linkregistrystate",{"_index":491,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["selector(['resourceregistrystate",{"_index":609,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selector(['storagestate",{"_index":748,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["selector(['undefined",{"_index":622,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selector([linkregistrystate",{"_index":498,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["selector([resourceregistryselectors.field",{"_index":645,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selector([resourceregistrystate",{"_index":637,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["selector([storagestate",{"_index":759,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["selectors",{"_index":488,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/StorageSelectors.html":{}}}],["selectquery",{"_index":872,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["selectquerysnapshot",{"_index":404,"title":{},"body":{"directives/LinkDirective.html":{},"miscellaneous/typealiases.html":{}}}],["selectquerysnapshot(linkregistryselectors.query",{"_index":423,"title":{},"body":{"directives/LinkDirective.html":{}}}],["service",{"_index":557,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["session",{"_index":788,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["sessionstorage",{"_index":802,"title":{},"body":{"injectables/StorageState.html":{}}}],["set",{"_index":140,"title":{"classes/Set.html":{}},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/variables.html":{}}}],["set(ctx",{"_index":790,"title":{},"body":{"injectables/StorageState.html":{}}}],["setcontent(content",{"_index":348,"title":{},"body":{"directives/HoverDirective.html":{}}}],["setdata(data",{"_index":349,"title":{},"body":{"directives/HoverDirective.html":{}}}],["sets",{"_index":793,"title":{},"body":{"injectables/StorageState.html":{}}}],["setter",{"_index":277,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["setting",{"_index":297,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["shiftkey",{"_index":443,"title":{},"body":{"directives/LinkDirective.html":{}}}],["single",{"_index":48,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{}}}],["skiplocationchange",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snapshot",{"_index":723,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot.ts",{"_index":871,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["snapshotobserver",{"_index":717,"title":{"classes/SnapshotObserver.html":{}},"body":{"classes/SnapshotObserver.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["specified",{"_index":35,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"injectables/LinkRegistryState.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/hover/hover.directive.ts",{"_index":257,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:19",{"_index":341,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:26",{"_index":342,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:38",{"_index":346,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:58",{"_index":347,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:62",{"_index":344,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/hover/hover.directive.ts:71",{"_index":343,"title":{},"body":{"directives/HoverDirective.html":{}}}],["src/lib/link/link.directive.ts",{"_index":350,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:14",{"_index":369,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:17",{"_index":376,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:20",{"_index":378,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:23",{"_index":367,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:26",{"_index":372,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:29",{"_index":380,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:32",{"_index":385,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:34",{"_index":386,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:36",{"_index":388,"title":{},"body":{"directives/LinkDirective.html":{}}}],["src/lib/link/link.directive.ts:77",{"_index":390,"title":{},"body":{"directives/LinkDirective.html":{}}}],["standalone",{"_index":194,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{}}}],["start",{"_index":311,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["started",{"_index":841,"title":{"index.html":{}},"body":{}}],["starthover",{"_index":322,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["state",{"_index":421,"title":{},"body":{"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"interfaces/SelectOptions.html":{},"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/.../action",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/.../link",{"_index":831,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/.../resource",{"_index":834,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/.../storage.actions.ts",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/.../storage.model.ts",{"_index":835,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state/src/actions/action",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/src/actions/actions.ts",{"_index":6,"title":{},"body":{"interfaces/ActionConstructor.html":{}}}],["state/src/link",{"_index":45,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/src/resource",{"_index":99,"title":{},"body":{"classes/Add-1.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state/src/state.module.ts",{"_index":120,"title":{},"body":{"modules/CdkStateModule.html":{}}}],["state/src/storage/storage.actions.ts",{"_index":132,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["state/src/storage/storage.actions.ts:10",{"_index":716,"title":{},"body":{"classes/Set.html":{}}}],["state/src/storage/storage.actions.ts:24",{"_index":148,"title":{},"body":{"classes/Delete.html":{}}}],["state/src/storage/storage.actions.ts:37",{"_index":136,"title":{},"body":{"classes/Clear.html":{}}}],["state/src/storage/storage.model.ts",{"_index":838,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state/src/storage/storage.selectors.ts",{"_index":744,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["state/src/storage/storage.selectors.ts:13",{"_index":749,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["state/src/storage/storage.selectors.ts:23",{"_index":754,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["state/src/storage/storage.state.ts",{"_index":770,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:27",{"_index":785,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:45",{"_index":792,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:55",{"_index":780,"title":{},"body":{"injectables/StorageState.html":{}}}],["state/src/storage/storage.state.ts:65",{"_index":776,"title":{},"body":{"injectables/StorageState.html":{}}}],["state[id",{"_index":503,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["statecontext",{"_index":883,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stateselector",{"_index":683,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["statetoken",{"_index":676,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["static",{"_index":40,"title":{},"body":{"interfaces/ActionConstructor.html":{},"components/DestroyHostComponent.html":{},"classes/LinkRegistrySelectors.html":{},"classes/ResourceRegistrySelectors.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storage",{"_index":128,"title":{},"body":{"modules/CdkStateModule.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["storage.actions",{"_index":797,"title":{},"body":{"injectables/StorageState.html":{}}}],["storage.model",{"_index":138,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storage.state",{"_index":758,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["storagecontext",{"_index":774,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["storageid",{"_index":135,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["storageid.local",{"_index":798,"title":{},"body":{"injectables/StorageState.html":{}}}],["storageid.session",{"_index":799,"title":{},"body":{"injectables/StorageState.html":{}}}],["storagemodel",{"_index":796,"title":{},"body":{"injectables/StorageState.html":{},"miscellaneous/typealiases.html":{}}}],["storageselectors",{"_index":743,"title":{"classes/StorageSelectors.html":{}},"body":{"classes/StorageSelectors.html":{}}}],["storagestate",{"_index":127,"title":{"injectables/StorageState.html":{}},"body":{"modules/CdkStateModule.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storagestate.getstorage(id).clear",{"_index":810,"title":{},"body":{"injectables/StorageState.html":{}}}],["storagestate.getstorage(id).getitem(key",{"_index":760,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["storagestate.getstorage(id).length",{"_index":769,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["storagestate.getstorage(id).removeitem(key",{"_index":809,"title":{},"body":{"injectables/StorageState.html":{}}}],["storagestate.getstorage(id).setitem(key",{"_index":807,"title":{},"body":{"injectables/StorageState.html":{}}}],["store",{"_index":314,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"interfaces/SelectOptions.html":{}}}],["stored",{"_index":134,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["storing",{"_index":721,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["stream",{"_index":724,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{},"classes/Set.html":{},"classes/StorageSelectors.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":837,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":682,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":152,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["subject",{"_index":242,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["subject.ts",{"_index":215,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["subject.ts:27",{"_index":665,"title":{},"body":{"classes/ScopedDestructorSubject.html":{}}}],["subject.ts:9",{"_index":221,"title":{},"body":{"interfaces/DestructorScope.html":{}}}],["such",{"_index":804,"title":{},"body":{"injectables/StorageState.html":{}}}],["super",{"_index":72,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/Set.html":{}}}],["super(1",{"_index":252,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["supplied",{"_index":757,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["switch",{"_index":463,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/StorageState.html":{}}}],["t",{"_index":264,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"interfaces/SelectOptions.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/typealiases.html":{}}}],["t[k",{"_index":636,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["tag",{"_index":416,"title":{},"body":{"directives/LinkDirective.html":{}}}],["tagname",{"_index":418,"title":{},"body":{"directives/LinkDirective.html":{}}}],["takeuntil",{"_index":678,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["tap",{"_index":679,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["target",{"_index":355,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":196,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templateportal",{"_index":270,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templateportal(content",{"_index":282,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templateref",{"_index":274,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["templates",{"_index":262,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["test",{"_index":232,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"index.html":{}}}],["tests",{"_index":848,"title":{},"body":{"index.html":{}}}],["text",{"_index":573,"title":{},"body":{"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["text(getfield",{"_index":625,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["text_entry",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this._data",{"_index":284,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.addmany(ctx",{"_index":565,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["this.addone(ctx",{"_index":664,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["this.addyaml(ctx",{"_index":575,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["this.complete",{"_index":255,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["this.el.remove",{"_index":201,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["this.errorvalue",{"_index":741,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.extras",{"_index":449,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.getentry(state",{"_index":499,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["this.getlinkattributes(link",{"_index":458,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.href",{"_index":455,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.http",{"_index":570,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["this.http.get(url",{"_index":659,"title":{},"body":{"injectables/ResourceRegistryState.html":{}}}],["this.increasechangecount(ctx",{"_index":808,"title":{},"body":{"injectables/StorageState.html":{}}}],["this.link",{"_index":453,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.mergeextras(link?.type",{"_index":433,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.navigate(linkid",{"_index":448,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.navigatetoexternal(entry",{"_index":582,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["this.navigatetointernal(entry",{"_index":580,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["this.next",{"_index":254,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["this.portal",{"_index":281,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.portal.context",{"_index":290,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.querylink(this.linkid",{"_index":454,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.rel",{"_index":456,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.router?.navigate(entry.commands",{"_index":590,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["this.target",{"_index":457,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.updatecontent",{"_index":285,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.updatelink",{"_index":440,"title":{},"body":{"directives/LinkDirective.html":{}}}],["this.value",{"_index":742,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.viewcontainerref",{"_index":283,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["this.zone.run",{"_index":589,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["throw",{"_index":583,"title":{},"body":{"injectables/LinkRegistryState.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["throws",{"_index":740,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["tied",{"_index":705,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["token",{"_index":709,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["top",{"_index":310,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["track",{"_index":510,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["transform((id",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform>(createcustomtype",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformation",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":154,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["triggers",{"_index":391,"title":{},"body":{"directives/LinkDirective.html":{}}}],["true",{"_index":195,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":396,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ts",{"_index":765,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["tslib",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":470,"title":{},"body":{"directives/LinkDirective.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ActionConstructor.html":{},"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":862,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":875,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typematches",{"_index":504,"title":{},"body":{"classes/LinkRegistrySelectors.html":{}}}],["typeof",{"_index":239,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{}}}],["types",{"_index":746,"title":{},"body":{"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":763,"title":{},"body":{"classes/StorageSelectors.html":{}}}],["typings",{"_index":885,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/cdk/injectors",{"_index":405,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ui/cdk/state",{"_index":409,"title":{},"body":{"directives/LinkDirective.html":{}}}],["ui/theming",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["ui/utils",{"_index":412,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"dependencies.html":{}}}],["ui/utils/types",{"_index":496,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"interfaces/SelectOptions.html":{}}}],["undefined",{"_index":246,"title":{},"body":{"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{}}}],["union",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unionmember",{"_index":495,"title":{},"body":{"classes/LinkRegistrySelectors.html":{},"injectables/LinkRegistryState.html":{},"miscellaneous/typealiases.html":{}}}],["unique",{"_index":886,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unit",{"_index":847,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":237,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestructorSubject.html":{},"classes/SnapshotObserver.html":{}}}],["unparsed",{"_index":82,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{}}}],["unqiue",{"_index":93,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["up",{"_index":331,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["updatecontent",{"_index":334,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["updated",{"_index":815,"title":{},"body":{"injectables/StorageState.html":{}}}],["updatelink",{"_index":452,"title":{},"body":{"directives/LinkDirective.html":{}}}],["updates",{"_index":436,"title":{},"body":{"directives/LinkDirective.html":{}}}],["updation",{"_index":330,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["url",{"_index":88,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"classes/ResourceRegistrySelectors.html":{},"injectables/ResourceRegistryState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["url(getfield",{"_index":627,"title":{},"body":{"classes/ResourceRegistrySelectors.html":{}}}],["url/filename",{"_index":530,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["url_entry",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlcreationoptions",{"_index":62,"title":{},"body":{"classes/Add.html":{},"classes/AddFromYaml.html":{},"classes/AddMany.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/Navigate.html":{}}}],["urls",{"_index":429,"title":{},"body":{"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{}}}],["use",{"_index":266,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["used",{"_index":158,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":265,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["userhovers",{"_index":293,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["using",{"_index":586,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["validator",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":144,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{},"classes/Set.html":{},"classes/SnapshotObserver.html":{},"classes/StorageSelectors.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value:string",{"_index":806,"title":{},"body":{"injectables/StorageState.html":{}}}],["values",{"_index":133,"title":{},"body":{"classes/Clear.html":{},"classes/Delete.html":{},"directives/LinkDirective.html":{},"classes/Set.html":{},"injectables/StorageState.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":205,"title":{},"body":{"components/DestroyHostComponent.html":{}}}],["variables",{"_index":896,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":860,"title":{},"body":{"properties.html":{}}}],["view",{"_index":185,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"interfaces/SelectOptions.html":{}}}],["viewcontainerref",{"_index":175,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["void",{"_index":200,"title":{},"body":{"components/DestroyHostComponent.html":{},"interfaces/DestructorScope.html":{},"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{},"directives/LinkDirective.html":{},"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{},"classes/ScopedDestructorSubject.html":{},"classes/SnapshotObserver.html":{},"injectables/StorageState.html":{}}}],["weakmap",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whenever",{"_index":686,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["whether",{"_index":228,"title":{},"body":{"interfaces/DestructorScope.html":{},"directives/LinkDirective.html":{},"classes/ScopedDestructorSubject.html":{},"interfaces/SelectOptions.html":{}}}],["window",{"_index":592,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["window.open(url",{"_index":595,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["withpositions",{"_index":303,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["withpush(true",{"_index":312,"title":{},"body":{"interfaces/HoverContext.html":{},"directives/HoverDirective.html":{}}}],["yaml",{"_index":80,"title":{},"body":{"classes/Add.html":{},"classes/Add-1.html":{},"classes/AddFromYaml.html":{},"classes/AddFromYaml-1.html":{},"classes/AddMany.html":{},"classes/AddMany-1.html":{},"injectables/LinkRegistryState.html":{},"classes/LoadFromYaml.html":{},"classes/LoadFromYaml-1.html":{},"classes/LoadMarkdown.html":{},"classes/Navigate.html":{},"injectables/ResourceRegistryState.html":{}}}],["yes",{"_index":529,"title":{},"body":{"injectables/LinkRegistryState.html":{},"injectables/ResourceRegistryState.html":{}}}],["z",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.any().array",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.boolean",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.discriminatedunion('type",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.enum(['merge",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":879,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["z.literal('reload",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(linktype.external",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(linktype.internal",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(rawbuiltinresourcetype.markdown",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(rawbuiltinresourcetype.text",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(rawbuiltinresourcetype.url",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.object",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.record",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.record(resource_id",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.record(z.any()).nullable",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().default('noopener",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.union([builtin_entry",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone",{"_index":563,"title":{},"body":{"injectables/LinkRegistryState.html":{}}}],["zoom",{"_index":854,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionConstructor.html":{"url":"interfaces/ActionConstructor.html","title":"interface - ActionConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/actions/actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Base action constructor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Action type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { registerActionType } from './action-type-registry';\n\n/** Base action type */\nexport interface Action {\n  /** Action type */\n  readonly type: string;\n}\n\n/** Base action constructor */\nexport interface ActionConstructor {\n  /** Action type */\n  readonly type: string;\n\n  /** Create a new action */\n  new (): Action;\n}\n\n/**\n * Creates an action factory that adds a common group string to each action type\n * @param group Common action type group\n * @returns An action factory\n */\nexport function ActionGroup(group: string): (type: string) => ActionConstructor {\n  return (type) => Action(`[${group}] ${type}`);\n}\n\n/**\n * Creates a new base action with a specified type\n * @param type Action type\n * @returns A base action class\n */\nexport function Action(type: string): ActionConstructor {\n  registerActionType(type);\n  return class BaseAction {\n    static readonly type = type;\n    readonly type = type;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Add.html":{"url":"classes/Add.html","title":"class - Add","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Add\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add a single link\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: LinkId, entry: LinkEntry)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:9\n                            \n                        \n\n                \n                    \n                            Add or overwrite a single link\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        LinkId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                link identifier\n\n                                                        \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        LinkEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                link entry\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UrlCreationOptions } from '@angular/router';\nimport { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   * @param extras Options when building the navigation url\n   */\n  constructor(readonly id: LinkId, readonly extras: UrlCreationOptions = {}) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Add-1.html":{"url":"classes/Add-1.html","title":"class - Add-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Add\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add a single resource\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: ResourceId, entry: ResourceEntry)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Add or overwrite a single resource\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        ResourceId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource identifier\n\n                                                        \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        ResourceEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource entry\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddFromYaml.html":{"url":"classes/AddFromYaml.html","title":"class - AddFromYaml","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add entries from yaml file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(yaml: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:32\n                            \n                        \n\n                \n                    \n                            Add links from unparsed yaml\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        yaml\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unparsed yaml data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UrlCreationOptions } from '@angular/router';\nimport { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   * @param extras Options when building the navigation url\n   */\n  constructor(readonly id: LinkId, readonly extras: UrlCreationOptions = {}) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddFromYaml-1.html":{"url":"classes/AddFromYaml-1.html","title":"class - AddFromYaml-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add resources from raw yaml data\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(yaml: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:31\n                            \n                        \n\n                \n                    \n                            Add resources from unparsed yaml\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        yaml\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unparsed yaml data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMany.html":{"url":"classes/AddMany.html","title":"class - AddMany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add multiple links at once\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entries: Partial>)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:21\n                            \n                        \n\n                \n                    \n                            Add or overwrite multiple links\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    Partial>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                New links\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UrlCreationOptions } from '@angular/router';\nimport { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   * @param extras Options when building the navigation url\n   */\n  constructor(readonly id: LinkId, readonly extras: UrlCreationOptions = {}) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMany-1.html":{"url":"classes/AddMany-1.html","title":"class - AddMany-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add multiple resources at once\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entries: Partial>)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Add or overwrite multiple resources\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    Partial>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                New resources\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CdkStateModule.html":{"url":"modules/CdkStateModule.html","title":"module - CdkStateModule","body":"\n                   \n\n\n\n\n    Modules\n    CdkStateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            state/src/state.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { LinkRegistryState } from './link-registry';\nimport { ResourceRegistryState } from './resource-registry';\nimport { StorageState } from './storage';\n\n@NgModule({\n  imports: [NgxsModule.forFeature([LinkRegistryState, ResourceRegistryState, StorageState])],\n})\nexport class CdkStateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clear.html":{"url":"classes/Clear.html","title":"class - Clear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clear the values stored in the specified StorageId\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: StorageId)\n                    \n                \n                        \n                            \n                                Defined in state/src/storage/storage.actions.ts:37\n                            \n                        \n\n                \n                    \n                            constructor class for clear action object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        StorageId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: StorageId - Storage identifier\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { StorageId } from './storage.model';\n\n/** Base action factory */\nconst Action = ActionGroup('Storage');\n\n/**\n * Class Set Action for set method\n */\nexport class Set extends Action('Set') {\n  /**\n   * constructor class for Set action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   * @param value - type: string - value to be stored with the key\n   */\n  constructor(readonly id: StorageId, readonly key: string, readonly value: string) {\n    super();\n  }\n}\n/**\n *  Class Delete Action for delete method\n */\nexport class Delete extends Action('Delete') {\n  /**\n   * constructor class for Delete action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   */\n  constructor(readonly id: StorageId, readonly key: string) {\n    super();\n  }\n}\n/**\n * Clear the values stored in the specified StorageId\n */\nexport class Clear extends Action('Clear') {\n  /**\n   * constructor class for clear action object\n   * @param id - type: StorageId - Storage identifier\n   */\n  constructor(readonly id: StorageId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Delete.html":{"url":"classes/Delete.html","title":"class - Delete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Delete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                 Class Delete Action for delete method\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: StorageId, key: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/storage/storage.actions.ts:24\n                            \n                        \n\n                \n                    \n                            constructor class for Delete action object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        StorageId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: StorageId - Storage identifier\n\n\n                                                        \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: string - Key to be stored in the storage identifier\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { StorageId } from './storage.model';\n\n/** Base action factory */\nconst Action = ActionGroup('Storage');\n\n/**\n * Class Set Action for set method\n */\nexport class Set extends Action('Set') {\n  /**\n   * constructor class for Set action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   * @param value - type: string - value to be stored with the key\n   */\n  constructor(readonly id: StorageId, readonly key: string, readonly value: string) {\n    super();\n  }\n}\n/**\n *  Class Delete Action for delete method\n */\nexport class Delete extends Action('Delete') {\n  /**\n   * constructor class for Delete action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   */\n  constructor(readonly id: StorageId, readonly key: string) {\n    super();\n  }\n}\n/**\n * Clear the values stored in the specified StorageId\n */\nexport class Clear extends Action('Clear') {\n  /**\n   * constructor class for clear action object\n   * @param id - type: StorageId - Storage identifier\n   */\n  constructor(readonly id: StorageId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DestroyHostComponent.html":{"url":"components/DestroyHostComponent.html","title":"component - DestroyHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DestroyHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    injectors/src/lib/on-destroy/destroy-host.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component used when attaching destroy lifecycle observables to a component/directive/pipe\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hra-destroy-host\n            \n\n\n            \n                styles\n                :host { display: none }\n            \n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                el\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(container: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/on-destroy/destroy-host.component.ts:22\n                \n            \n\n\n            \n                \n                    Creates a new DestroyHostComponent inside the provided container.\nThe element is inserted as the first child (index '0') in the container.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        View in which to create the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentRef\n\n                    \n                    \n                        The ComponentRef of the newly inserted element\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Element\n\n                    \n                \n                \n                    \n                        Default value : inject(ElementRef).nativeElement\n                    \n                \n                    \n                        \n                                Defined in injectors/src/lib/on-destroy/destroy-host.component.ts:14\n                        \n                    \n\n            \n                \n                    Reference to own dom element\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ComponentRef, ElementRef, inject, ViewContainerRef } from '@angular/core';\n\n/**\n * Component used when attaching destroy lifecycle observables to a component/directive/pipe\n */\n@Component({\n  selector: 'hra-destroy-host',\n  standalone: true,\n  template: '',\n  styles: [':host { display: none }'],\n})\nexport class DestroyHostComponent implements AfterViewInit {\n  /** Reference to own dom element */\n  readonly el: Element = inject(ElementRef).nativeElement;\n\n  /**\n   * Creates a new DestroyHostComponent inside the provided container.\n   * The element is inserted as the first child (index '0') in the container.\n   * @param container View in which to create the element\n   * @returns The ComponentRef of the newly inserted element\n   */\n  static create(container: ViewContainerRef): ComponentRef {\n    return container.createComponent(DestroyHostComponent, { index: 0 });\n  }\n\n  /** Disconnects the component from the dom tree */\n  ngAfterViewInit(): void {\n    this.el.remove();\n  }\n}\n\n    \n\n\n    \n            :host { display: none }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DestroyHostComponent', 'selector': 'hra-destroy-host'}];\n    var DIRECTIVES = [{'name': 'HoverDirective', 'selector': '[hraHover]'},{'name': 'LinkDirective', 'selector': '[hraLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'DestroyHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DestructorScope.html":{"url":"interfaces/DestructorScope.html","title":"interface - DestructorScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DestructorScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/on-destroy/destructor-subject.ts\n        \n\n\n            \n                Description\n            \n            \n                Object on which cleanup functions can be registered\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        onDestroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDestroy\n                        \n                    \n                \n            \n            \n                \nonDestroy(cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/on-destroy/destructor-subject.ts:9\n                \n            \n\n\n            \n                \n                    Register a cleanup function\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cleanup callback function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup functions can be registered */\nexport interface DestructorScope {\n  /**\n   * Register a cleanup function\n   * @param cb Cleanup callback function\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Determines whether an object is destructor scope like\n * @param obj Value to test\n * @returns true if the object seems to be a destructor scope, otherwise false\n */\nexport function isDestructorScopeLike(obj: unknown): obj is DestructorScope {\n  const isObject = typeof obj === 'object' && obj !== null;\n  return isObject && 'onDestroy' in obj && typeof obj.onDestroy === 'function';\n}\n\n/**\n * A subject type that is associated with a destructor scope.\n * When the cleanup function is run the subject emits a single\n * undefined value and immediately completes\n */\nexport class ScopedDestructorSubject extends ReplaySubject {\n  /**\n   * Creates a new subject and attaches cleanup to the destructor scope\n   * @param scope Associated scope\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HoverContext.html":{"url":"interfaces/HoverContext.html","title":"interface - HoverContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HoverContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/hover/hover.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Context passed to hover content templates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $implicit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $implicit:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data provided by the user for use inside the content template\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ConnectionPositionPair, Overlay } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Directive, ElementRef, HostListener, inject, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**  Context passed to hover content templates */\nexport interface HoverContext {\n  /** Data provided by the user for use inside the content template */\n  $implicit: T;\n}\n\n/** Hover overlay directive to be used across the application */\n@Directive({\n  selector: '[hraHover]',\n  standalone: true,\n})\nexport class HoverDirective {\n  /**  Setter for the content to be displayed in the overlay */\n  @Input('hraHover')\n  set content(content: TemplateRef>) {\n    this.portal = new TemplatePortal(content, this.viewContainerRef, this._data);\n    this.updateContent();\n  }\n\n  /** Setter for the context that is to be displayed in the portal attached to the overlay */\n  @Input('hraHoverData')\n  set data(data: T) {\n    this._data = { $implicit: data };\n    if (this.portal) {\n      this.portal.context = this._data;\n      this.updateContent();\n    }\n  }\n\n  /**  Reference to the element that the directive is attached to */\n  private readonly el: Element = inject(ElementRef).nativeElement;\n\n  /**  Reference to the overlay that is created when the userhovers over the element along with its position setting */\n  readonly overlayRef = inject(Overlay).create({\n    positionStrategy: inject(Overlay)\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n      ])\n      .withPush(true),\n  });\n\n  /** Reference view container that the directive is attached to */\n  private readonly viewContainerRef = inject(ViewContainerRef);\n\n  /** Store the data that is passed into the data input property */\n  private _data?: HoverContext;\n\n  /** Portal that is created to display the overlay */\n  portal?: TemplatePortal>;\n\n  /** Function to handle the mouse over event to attach the portal and display the hover content */\n  @HostListener('mouseover')\n  startHover(): void {\n    const { overlayRef, portal } = this;\n    if (!overlayRef.hasAttached() && portal) {\n      overlayRef.attach(portal);\n    }\n  }\n\n  /** Function to handle the mouse out event to detach the portal  */\n  @HostListener('mouseout')\n  endHover(): void {\n    const { overlayRef } = this;\n    if (overlayRef.hasAttached()) {\n      overlayRef.detach();\n    }\n  }\n\n  /** Function to handle the updation of overlay with up to date content when the input changes */\n  private updateContent(): void {\n    const { overlayRef, portal } = this;\n    if (overlayRef.hasAttached() && portal) {\n      overlayRef.detach();\n      overlayRef.attach(portal);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HoverDirective.html":{"url":"directives/HoverDirective.html","title":"directive - HoverDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  HoverDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/hover/hover.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Hover overlay directive to be used across the application\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [hraHover]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                overlayRef\n                            \n                            \n                                    Optional\n                                portal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endHover\n                            \n                            \n                                startHover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hraHover\n                            \n                            \n                                hraHoverData\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseout\n                            \n                            \n                                mouseover\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        hraHover\n                    \n                \n                \n                    \n                        Type :         TemplateRef>\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/hover/hover.directive.ts:19\n                            \n                        \n                \n                    \n                        Setter for the content to be displayed in the overlay\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hraHoverData\n                    \n                \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/hover/hover.directive.ts:26\n                            \n                        \n                \n                    \n                        Setter for the context that is to be displayed in the portal attached to the overlay\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mouseout\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:71\n                \n            \n\n\n            \n                \n                    Function to handle the mouse out event to detach the portal\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseover\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:62\n                \n            \n\n\n            \n                \n                    Function to handle the mouse over event to attach the portal and display the hover content\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        endHover\n                        \n                    \n                \n            \n            \n                \nendHover()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseout')\n                \n            \n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:71\n                \n            \n\n\n            \n                \n                    Function to handle the mouse out event to detach the portal\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startHover\n                        \n                    \n                \n            \n            \n                \nstartHover()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseover')\n                \n            \n\n            \n                \n                    Defined in src/lib/hover/hover.directive.ts:62\n                \n            \n\n\n            \n                \n                    Function to handle the mouse over event to attach the portal and display the hover content\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        overlayRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Overlay).create({\n    positionStrategy: inject(Overlay)\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n      ])\n      .withPush(true),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/lib/hover/hover.directive.ts:38\n                        \n                    \n\n            \n                \n                    Reference to the overlay that is created when the userhovers over the element along with its position setting\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        portal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplatePortal>\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/hover/hover.directive.ts:58\n                        \n                    \n\n            \n                \n                    Portal that is created to display the overlay\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n\n                \n                    \n                        setcontent(content: TemplateRef>)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/hover/hover.directive.ts:19\n                                \n                            \n                    \n                        \n                                Setter for the content to be displayed in the overlay\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            content\n                                                    \n                                                            \n                                                                            TemplateRef>\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data: T)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/hover/hover.directive.ts:26\n                                \n                            \n                    \n                        \n                                Setter for the context that is to be displayed in the portal attached to the overlay\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { ConnectionPositionPair, Overlay } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Directive, ElementRef, HostListener, inject, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**  Context passed to hover content templates */\nexport interface HoverContext {\n  /** Data provided by the user for use inside the content template */\n  $implicit: T;\n}\n\n/** Hover overlay directive to be used across the application */\n@Directive({\n  selector: '[hraHover]',\n  standalone: true,\n})\nexport class HoverDirective {\n  /**  Setter for the content to be displayed in the overlay */\n  @Input('hraHover')\n  set content(content: TemplateRef>) {\n    this.portal = new TemplatePortal(content, this.viewContainerRef, this._data);\n    this.updateContent();\n  }\n\n  /** Setter for the context that is to be displayed in the portal attached to the overlay */\n  @Input('hraHoverData')\n  set data(data: T) {\n    this._data = { $implicit: data };\n    if (this.portal) {\n      this.portal.context = this._data;\n      this.updateContent();\n    }\n  }\n\n  /**  Reference to the element that the directive is attached to */\n  private readonly el: Element = inject(ElementRef).nativeElement;\n\n  /**  Reference to the overlay that is created when the userhovers over the element along with its position setting */\n  readonly overlayRef = inject(Overlay).create({\n    positionStrategy: inject(Overlay)\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n        new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n        new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n      ])\n      .withPush(true),\n  });\n\n  /** Reference view container that the directive is attached to */\n  private readonly viewContainerRef = inject(ViewContainerRef);\n\n  /** Store the data that is passed into the data input property */\n  private _data?: HoverContext;\n\n  /** Portal that is created to display the overlay */\n  portal?: TemplatePortal>;\n\n  /** Function to handle the mouse over event to attach the portal and display the hover content */\n  @HostListener('mouseover')\n  startHover(): void {\n    const { overlayRef, portal } = this;\n    if (!overlayRef.hasAttached() && portal) {\n      overlayRef.attach(portal);\n    }\n  }\n\n  /** Function to handle the mouse out event to detach the portal  */\n  @HostListener('mouseout')\n  endHover(): void {\n    const { overlayRef } = this;\n    if (overlayRef.hasAttached()) {\n      overlayRef.detach();\n    }\n  }\n\n  /** Function to handle the updation of overlay with up to date content when the input changes */\n  private updateContent(): void {\n    const { overlayRef, portal } = this;\n    if (overlayRef.hasAttached() && portal) {\n      overlayRef.detach();\n      overlayRef.attach(portal);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LinkDirective.html":{"url":"directives/LinkDirective.html","title":"directive - LinkDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LinkDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/link/link.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Link Directive for routing\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [hraLink]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                href\n                            \n                            \n                                    Optional\n                                rel\n                            \n                            \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fragment\n                            \n                            \n                                hraLink\n                            \n                            \n                                preserveFragment\n                            \n                            \n                                queryParams\n                            \n                            \n                                queryParamsHandling\n                            \n                            \n                                relativeTo\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                attr.href\n                            \n                            \n                                attr.rel\n                            \n                            \n                                attr.target\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        fragment\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/link/link.directive.ts:23\n                            \n                        \n                \n                    \n                        Url fragment\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hraLink\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : EMPTY_LINK\n                    \n                \n                        \n                            \n                                    Defined in src/lib/link/link.directive.ts:14\n                            \n                        \n                \n                    \n                        linkId with empty string as default value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        preserveFragment\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/link/link.directive.ts:26\n                            \n                        \n                \n                    \n                        Whether to preserve the existing fragment\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        queryParams\n                    \n                \n                \n                    \n                        Type :         Params\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/link/link.directive.ts:17\n                            \n                        \n                \n                    \n                        Query string parameters\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        queryParamsHandling\n                    \n                \n                \n                    \n                        Type :         QueryParamsHandling\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/link/link.directive.ts:20\n                            \n                        \n                \n                    \n                        How to handle existing query params\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        relativeTo\n                    \n                \n                \n                    \n                        Type :         ActivatedRoute\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/link/link.directive.ts:29\n                            \n                        \n                \n                    \n                        Nagivate relative to a route. Only affects internal links.\n\n                    \n                \n            \n        \n\n\n            \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        attr.href\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:32\n                        \n                    \n\n            \n                \n                    href of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attr.rel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:34\n                        \n                    \n\n            \n                \n                    rel attribute of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attr.target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:36\n                        \n                    \n\n            \n                \n                    target attribute of the element\n\n                \n            \n\n        \n    \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/lib/link/link.directive.ts:77\n                \n            \n\n\n            \n                \n                    Triggers when a click action is performed on the element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        type of event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/lib/link/link.directive.ts:77\n                \n            \n\n\n            \n                \n                    Triggers when a click action is performed on the element\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        type of event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true/false based on entry and element\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        href\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('attr.href')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:32\n                        \n                    \n\n            \n                \n                    href of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        rel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('attr.rel')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:34\n                        \n                    \n\n            \n                \n                    rel attribute of the element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('attr.target')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/link/link.directive.ts:36\n                        \n                    \n\n            \n                \n                    target attribute of the element\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostBinding, HostListener, inject, Injector, Input, OnChanges } from '@angular/core';\nimport { ActivatedRoute, Params, QueryParamsHandling, UrlCreationOptions } from '@angular/router';\nimport { dispatch, selectQuerySnapshot } from '@hra-ui/cdk/injectors';\nimport { EMPTY_LINK, LinkEntry, LinkRegistryActions, LinkRegistrySelectors, LinkType } from '@hra-ui/cdk/state';\nimport { createExternalUrl, createInternalUrl } from '@hra-ui/utils';\n\n/** Link Directive for routing */\n@Directive({\n  selector: '[hraLink]',\n  standalone: true,\n})\nexport class LinkDirective implements OnChanges {\n  /** linkId with empty string as default value */\n  @Input('hraLink') linkId = EMPTY_LINK;\n\n  /** Query string parameters */\n  @Input() queryParams?: Params;\n\n  /** How to handle existing query params */\n  @Input() queryParamsHandling?: QueryParamsHandling;\n\n  /** Url fragment */\n  @Input() fragment?: string;\n\n  /** Whether to preserve the existing fragment */\n  @Input() preserveFragment?: boolean;\n\n  /** Nagivate relative to a route. Only affects internal links. */\n  @Input() relativeTo?: ActivatedRoute;\n\n  /** href of the element */\n  @HostBinding('attr.href') href?: string;\n  /** rel attribute of the element */\n  @HostBinding('attr.rel') rel?: string;\n  /** target attribute of the element */\n  @HostBinding('attr.target') target?: string;\n\n  /** Reference to this component's injector */\n  private readonly injector = inject(Injector);\n  /** Element tag on which this directive is mounted */\n  private readonly tagName = inject>(ElementRef).nativeElement.tagName.toLowerCase();\n  /** Selector for querying the link registry state */\n  private readonly queryLink = selectQuerySnapshot(LinkRegistrySelectors.query);\n  /** Dispatch action to navigate to a url */\n  private readonly navigate = dispatch(LinkRegistryActions.Navigate);\n\n  /** Link Entry */\n  private link?: LinkEntry;\n\n  /** Whether the host element is an anchor */\n  private get isAnchorElement(): boolean {\n    return ['a', 'area'].includes(this.tagName);\n  }\n\n  /** Whether the host element deals with resource urls */\n  private get isResourceUrl(): boolean {\n    return ['base', 'link'].includes(this.tagName);\n  }\n\n  /** Collects query params and fragment options into a single object */\n  private get extras(): UrlCreationOptions {\n    const { link } = this;\n    return this.mergeExtras(link?.type === LinkType.Internal ? link.extras : undefined, this);\n  }\n\n  /** Updates the current link/url based on the inputs */\n  ngOnChanges(): void {\n    this.updateLink();\n  }\n\n  /**\n   * Triggers when a click action is performed on the element\n   * @param event type of event\n   * @returns true/false based on entry and element\n   */\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): boolean {\n    const { link, linkId, isAnchorElement } = this;\n    if (!link) {\n      return true;\n    }\n\n    if (isAnchorElement) {\n      const { button, ctrlKey, shiftKey, altKey, metaKey } = event;\n      if (link.type === LinkType.External || button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {\n        return true;\n      }\n    }\n\n    this.navigate(linkId, this.extras);\n    return !isAnchorElement;\n  }\n\n  /** Updates the link entry and bound attributes */\n  private updateLink(): void {\n    const link = (this.link = this.queryLink(this.linkId));\n    ({ href: this.href, rel: this.rel, target: this.target } = this.getLinkAttributes(link));\n  }\n\n  /**\n   * Gets the new values for different attributes bound to the host element\n   * @param link Current link entry\n   * @returns New attributes values to bind on the host element\n   */\n  private getLinkAttributes(link?: LinkEntry): { href?: string; rel?: string; target?: string } {\n    const { injector, extras, isResourceUrl } = this;\n    switch (link?.type) {\n      case LinkType.Internal:\n        return { href: createInternalUrl(injector, link.commands, extras, isResourceUrl) };\n\n      case LinkType.External:\n        return { ...link, href: createExternalUrl(link.url, extras) };\n\n      default:\n        return {};\n    }\n  }\n\n  /**\n   * Merges two UrlCreationOptions.\n   * Undefined values in the second set does not override values from the first set.\n   * @param opt1 First set of options\n   * @param opt2 Second set of options\n   * @returns Merged options\n   */\n  private mergeExtras(opt1: UrlCreationOptions | undefined, opt2: UrlCreationOptions): UrlCreationOptions {\n    const result = { ...opt1 };\n    const mergeKey = (key: K) => {\n      if (opt2[key] !== undefined) {\n        result[key] = opt2[key];\n      }\n    };\n\n    mergeKey('queryParams');\n    mergeKey('queryParamsHandling');\n    mergeKey('fragment');\n    mergeKey('preserveFragment');\n    mergeKey('relativeTo');\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkRegistrySelectors.html":{"url":"classes/LinkRegistrySelectors.html","title":"class - LinkRegistrySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkRegistrySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for Link Registry\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        query\n                        \n                    \n                \n            \n            \n                \n                    \n                    query(state: LinkRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['LinkRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.selectors.ts:16\n                \n            \n\n\n            \n                \n                    Queries for a link entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                LinkRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LinkRegistryQuery\n\n                    \n                    \n                        link query function\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UnionMember } from '@hra-ui/utils/types';\nimport { Selector } from '@ngxs/store';\nimport { LinkEntry, LinkId, LinkRegistryModel, LinkType } from './link-registry.model';\nimport { LinkRegistryQuery, LinkRegistryState } from './link-registry.state';\n\n/**\n * Selectors for Link Registry\n */\nexport class LinkRegistrySelectors {\n  /**\n   * Queries for a link entry\n   * @param state Current state\n   * @returns link query function\n   */\n  @Selector([LinkRegistryState])\n  static query(state: LinkRegistryModel): LinkRegistryQuery {\n    return (id, type) => this.getEntry(state, id, type);\n  }\n\n  /**\n   * Gets a link entry by id and optionally type\n   * @param state link registry state\n   * @param id Entry id\n   * @param type Optional entry type\n   * @returns The entry if found, undefined otherwise\n   */\n  private static getEntry(\n    state: LinkRegistryModel,\n    id: LinkId,\n    type?: T\n  ): UnionMember | undefined {\n    const entry = state[id] as UnionMember;\n    const typeMatches = type === undefined || entry?.type === type;\n    return typeMatches ? entry : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LinkRegistryState.html":{"url":"injectables/LinkRegistryState.html","title":"injectable - LinkRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LinkRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State for keeping track of links globally\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMany\n                            \n                            \n                                addOne\n                            \n                            \n                                addYaml\n                            \n                            \n                                loadYaml\n                            \n                            \n                                    Async\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMany\n                        \n                    \n                \n            \n            \n                \naddMany(ctx: LinkRegistryContext, undefined: AddMany)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddMany)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:57\n                \n            \n\n\n            \n                \n                    Add multiple entries\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddMany\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOne\n                        \n                    \n                \n            \n            \n                \naddOne(ctx: LinkRegistryContext, undefined: Add)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Add)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:47\n                \n            \n\n\n            \n                \n                    Add a single entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                Add\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addYaml\n                        \n                    \n                \n            \n            \n                \naddYaml(ctx: LinkRegistryContext, undefined: AddFromYaml, filename?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:68\n                \n            \n\n\n            \n                \n                    Parse and add entries from yaml\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional url/filename from which the data was loaded (for improved error messages)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYaml\n                        \n                    \n                \n            \n            \n                \nloadYaml(ctx: LinkRegistryContext, undefined: LoadFromYaml)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LoadFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:81\n                \n            \n\n\n            \n                \n                    Load and add entries from an external yaml file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                LoadFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that completes when the entries has been added\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        navigate\n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(ctx: LinkRegistryContext, undefined: Navigate)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Navigate)\n                \n            \n\n            \n                \n                    Defined in state/src/link-registry/link-registry.state.ts:94\n                \n            \n\n\n            \n                \n                    Navigate to Internal or External urls from id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                LinkRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                Navigate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, NgZone } from '@angular/core';\nimport { Router, UrlCreationOptions } from '@angular/router';\nimport { createExternalUrl } from '@hra-ui/utils';\nimport { UnionMember } from '@hra-ui/utils/types';\nimport { Action, State } from '@ngxs/store';\nimport { load } from 'js-yaml';\nimport { map, Observable } from 'rxjs';\nimport { Add, AddFromYaml, AddMany, LoadFromYaml, Navigate } from './link-registry.actions';\nimport {\n  ExternalLinkEntry,\n  InternalLinkEntry,\n  LinkEntry,\n  LinkId,\n  LinkRegistryContext,\n  LinkRegistryModel,\n  LinkType,\n  LINK_REGISTRY_SCHEMA,\n} from './link-registry.model';\n\n/** Query function for link entry optionally with type specified */\nexport type LinkRegistryQuery = (\n  id: LinkId,\n  type?: T\n) => UnionMember | undefined;\n\n/** State for keeping track of links globally */\n@State({\n  name: 'linkRegistry',\n  defaults: {},\n})\n@Injectable()\nexport class LinkRegistryState {\n  /** Http service for link loading */\n  private readonly http = inject(HttpClient);\n  /** Injects angular router */\n  private readonly router = inject(Router, { optional: true });\n  /** Injects ngZone for routing */\n  private readonly zone = inject(NgZone);\n\n  /**\n   * Add a single entry\n   * @param ctx State context\n   * @param action Action with id and entry to add\n   */\n  @Action(Add)\n  addOne(ctx: LinkRegistryContext, { id, entry }: Add): void {\n    this.addMany(ctx, new AddMany({ [id]: entry }));\n  }\n\n  /**\n   * Add multiple entries\n   * @param ctx State context\n   * @param action Action with entries to add\n   */\n  @Action(AddMany)\n  addMany(ctx: LinkRegistryContext, { entries }: AddMany): void {\n    ctx.patchState(entries);\n  }\n\n  /**\n   * Parse and add entries from yaml\n   * @param ctx State context\n   * @param action Action with raw yaml data\n   * @param filename Optional url/filename from which the data was loaded (for improved error messages)\n   */\n  @Action(AddFromYaml)\n  addYaml(ctx: LinkRegistryContext, { yaml }: AddFromYaml, filename?: string): void {\n    const data = load(yaml, { filename });\n    const entries = LINK_REGISTRY_SCHEMA.parse(data);\n    this.addMany(ctx, new AddMany(entries));\n  }\n\n  /**\n   * Load and add entries from an external yaml file\n   * @param ctx State context\n   * @param action Action with the external file url\n   * @returns An observable that completes when the entries has been added\n   */\n  @Action(LoadFromYaml)\n  loadYaml(ctx: LinkRegistryContext, { url }: LoadFromYaml): Observable {\n    return this.http\n      .get(url, { responseType: 'text' })\n      .pipe(map((data) => this.addYaml(ctx, new AddFromYaml(data), url)));\n  }\n\n  /**\n   * Navigate to Internal or External urls from id\n   * @param ctx State context\n   * @param param1 Navigate action with link id\n   * @returns A promise\n   */\n  @Action(Navigate)\n  async navigate(ctx: LinkRegistryContext, { id, extras }: Navigate): Promise {\n    const entry = ctx.getState()[id];\n    switch (entry?.type) {\n      case LinkType.Internal:\n        await this.navigateToInternal(entry, extras);\n        break;\n\n      case LinkType.External:\n        this.navigateToExternal(entry, extras);\n        break;\n\n      default:\n        throw new Error(`Cannot navigate to non-existing link '${id}'`);\n    }\n  }\n\n  /**\n   * Method to navigate to an internal link using Angular router\n   * @param entry Internal Link Entry with commands and extras\n   */\n  private async navigateToInternal(entry: InternalLinkEntry, extras: UrlCreationOptions): Promise {\n    await this.zone.run(() => this.router?.navigate(entry.commands, { ...entry.extras, ...extras }));\n  }\n\n  /**\n   * Method to navigate to an external link using window\n   * @param entry External link entry with url, target, and rel\n   */\n  private navigateToExternal(entry: ExternalLinkEntry, extras: UrlCreationOptions): void {\n    const url = createExternalUrl(entry.url, extras);\n    window.open(url, entry.target, entry.rel);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadFromYaml.html":{"url":"classes/LoadFromYaml.html","title":"class - LoadFromYaml","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add links from a remote yaml file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:43\n                            \n                        \n\n                \n                    \n                            Loads a remote yaml file and add links\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Remote yaml file url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UrlCreationOptions } from '@angular/router';\nimport { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   * @param extras Options when building the navigation url\n   */\n  constructor(readonly id: LinkId, readonly extras: UrlCreationOptions = {}) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadFromYaml-1.html":{"url":"classes/LoadFromYaml-1.html","title":"class - LoadFromYaml-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadFromYaml\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add resources from a remote yaml file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:42\n                            \n                        \n\n                \n                    \n                            Loads a remote yaml file and add resources\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Remote yaml file url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMarkdown.html":{"url":"classes/LoadMarkdown.html","title":"class - LoadMarkdown","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMarkdown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Add a markdown resource with data loaded from a remote file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: ResourceId, url: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/resource-registry/resource-registry.actions.ts:53\n                            \n                        \n\n                \n                    \n                            Loads a remote markdown file and add a resource\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        ResourceId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource id\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Remote markdown file url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { ResourceEntry, ResourceId } from './resource-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Add a single resource */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single resource\n   * @param id Resource identifier\n   * @param entry Resource entry\n   */\n  constructor(readonly id: ResourceId, readonly entry: ResourceEntry) {\n    super();\n  }\n}\n\n/** Add multiple resources at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple resources\n   * @param entries New resources\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add resources from raw yaml data */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add resources from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add resources from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add resources\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n/** Add a markdown resource with data loaded from a remote file */\nexport class LoadMarkdown extends Action('Load Markdown') {\n  /**\n   * Loads a remote markdown file and add a resource\n   * @param id Resource id\n   * @param url Remote markdown file url\n   */\n  constructor(readonly id: ResourceId, readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Navigate.html":{"url":"classes/Navigate.html","title":"class - Navigate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Navigate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/link-registry/link-registry.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Navigate to an Internal or external url from Link id\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: LinkId, extras: UrlCreationOptions)\n                    \n                \n                        \n                            \n                                Defined in state/src/link-registry/link-registry.actions.ts:53\n                            \n                        \n\n                \n                    \n                            navigate to a link\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        LinkId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                unqiue identifier of link\n\n                                                        \n                                                \n                                                \n                                                        extras\n                                                  \n                                                        \n                                                                        UrlCreationOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options when building the navigation url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UrlCreationOptions } from '@angular/router';\nimport { ActionGroup } from '../actions/actions';\nimport { LinkEntry, LinkId } from './link-registry.model';\n\n/** Base action factory */\nconst Action = ActionGroup('LinkRegistry');\n\n/** Add a single link */\nexport class Add extends Action('Add') {\n  /**\n   * Add or overwrite a single link\n   * @param id link identifier\n   * @param entry link entry\n   */\n  constructor(readonly id: LinkId, readonly entry: LinkEntry) {\n    super();\n  }\n}\n\n/** Add multiple links at once */\nexport class AddMany extends Action('Add Many') {\n  /**\n   * Add or overwrite multiple links\n   * @param entries New links\n   */\n  constructor(readonly entries: Partial>) {\n    super();\n  }\n}\n\n/** Add entries from yaml file */\nexport class AddFromYaml extends Action('Add from Yaml') {\n  /**\n   * Add links from unparsed yaml\n   * @param yaml Unparsed yaml data\n   */\n  constructor(readonly yaml: string) {\n    super();\n  }\n}\n\n/** Add links from a remote yaml file */\nexport class LoadFromYaml extends Action('Load from Yaml') {\n  /**\n   * Loads a remote yaml file and add links\n   * @param url Remote yaml file url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n/** Navigate to an Internal or external url from Link id */\nexport class Navigate extends Action('Navigate') {\n  /**\n   * navigate to a link\n   * @param id unqiue identifier of link\n   * @param extras Options when building the navigation url\n   */\n  constructor(readonly id: LinkId, readonly extras: UrlCreationOptions = {}) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceRegistrySelectors.html":{"url":"classes/ResourceRegistrySelectors.html","title":"class - ResourceRegistrySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceRegistrySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for ResourceRegistry\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                anyEntry\n                            \n                            \n                                    Static\n                                anyText\n                            \n                            \n                                    Static\n                                entry\n                            \n                            \n                                    Static\n                                field\n                            \n                            \n                                    Static\n                                markdown\n                            \n                            \n                                    Static\n                                text\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        anyEntry\n                        \n                    \n                \n            \n            \n                \n                    \n                    anyEntry(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:47\n                \n            \n\n\n            \n                \n                    Queries an entry by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AnyEntryQuery\n\n                    \n                    \n                        Any entry query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        anyText\n                        \n                    \n                \n            \n            \n                \n                    \n                    anyText(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:70\n                \n            \n\n\n            \n                \n                    Query for any text data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataQuery\n\n                    \n                    \n                        Text data query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        entry\n                        \n                    \n                \n            \n            \n                \n                    \n                    entry(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:37\n                \n            \n\n\n            \n                \n                    Queries an entry by id and type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntryQuery\n\n                    \n                    \n                        Entry query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        field\n                        \n                    \n                \n            \n            \n                \n                    \n                    field(state: ResourceRegistryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ResourceRegistryState'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:57\n                \n            \n\n\n            \n                \n                    Queries a field of an entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ResourceRegistryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldQuery\n\n                    \n                    \n                        A field query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        markdown\n                        \n                    \n                \n            \n            \n                \n                    \n                    markdown(getField: FieldQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['undefined'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:92\n                \n            \n\n\n            \n                \n                    Query for markdown data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getField\n                                    \n                                                FieldQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataQuery\n\n                    \n                    \n                        Markdown data query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        text\n                        \n                    \n                \n            \n            \n                \n                    \n                    text(getField: FieldQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['undefined'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:102\n                \n            \n\n\n            \n                \n                    Query for text data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getField\n                                    \n                                                FieldQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataQuery\n\n                    \n                    \n                        Text data query function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(getField: FieldQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['undefined'])\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.selectors.ts:112\n                \n            \n\n\n            \n                \n                    Query for an url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getField\n                                    \n                                                FieldQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataQuery\n\n                    \n                    \n                        Url query function\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport {\n  BuiltinResourceType,\n  getEntry,\n  ResourceEntry,\n  ResourceId,\n  ResourceRegistryModel,\n  ResourceType,\n} from './resource-registry.model';\nimport { ResourceRegistryState } from './resource-registry.state';\n\n/** Query function returned by {@link ResourceRegistrySelectors.entry} */\nexport type EntryQuery = (id: ResourceId, type: ResourceType) => T | undefined;\n\n/** Query function returned by {@link ResourceRegistrySelectors.anyEntry} */\nexport type AnyEntryQuery = (id: ResourceId) => ResourceEntry | undefined;\n\n/** Query function returned by {@link ResourceRegistrySelectors.field} */\nexport type FieldQuery = (\n  id: ResourceId,\n  type: ResourceType,\n  field: K,\n  defaultValue?: T[K]\n) => T[K];\n\n/** Query function for resource data */\nexport type DataQuery = (id: ResourceId) => T;\n\n/** Selectors for ResourceRegistry */\nexport class ResourceRegistrySelectors {\n  /**\n   * Queries an entry by id and type\n   * @param state Current state\n   * @returns Entry query function\n   */\n  @Selector([ResourceRegistryState])\n  static entry(state: ResourceRegistryModel): EntryQuery {\n    return (id, type) => getEntry(state, id, type);\n  }\n\n  /**\n   * Queries an entry by id\n   * @param state Current state\n   * @returns Any entry query function\n   */\n  @Selector([ResourceRegistryState])\n  static anyEntry(state: ResourceRegistryModel): AnyEntryQuery {\n    return (id) => getEntry(state, id);\n  }\n\n  /**\n   * Queries a field of an entry\n   * @param state Current state\n   * @returns A field query function\n   */\n  @Selector([ResourceRegistryState])\n  static field(state: ResourceRegistryModel): FieldQuery {\n    return (id, type, field, defaultValue?) => {\n      const entry = getEntry(state, id, type);\n      return entry?.[field] ?? (defaultValue as never);\n    };\n  }\n\n  /**\n   * Query for any text data\n   * @param state Current state\n   * @returns Text data query function\n   */\n  @Selector([ResourceRegistryState])\n  static anyText(state: ResourceRegistryModel): DataQuery {\n    return (id) => {\n      const entry = getEntry(state, id);\n      switch (entry?.type) {\n        case BuiltinResourceType.Markdown:\n          return entry.markdown;\n\n        case BuiltinResourceType.Text:\n          return entry.text;\n\n        default:\n          return '';\n      }\n    };\n  }\n\n  /**\n   * Query for markdown data\n   * @param state Current state\n   * @returns Markdown data query function\n   */\n  @Selector([ResourceRegistrySelectors.field])\n  static markdown(getField: FieldQuery): DataQuery {\n    return (id) => getField(id, BuiltinResourceType.Markdown, 'markdown', '');\n  }\n\n  /**\n   * Query for text data\n   * @param state Current state\n   * @returns Text data query function\n   */\n  @Selector([ResourceRegistrySelectors.field])\n  static text(getField: FieldQuery): DataQuery {\n    return (id) => getField(id, BuiltinResourceType.Text, 'text', '');\n  }\n\n  /**\n   * Query for an url\n   * @param state Current state\n   * @returns Url query function\n   */\n  @Selector([ResourceRegistrySelectors.field])\n  static url(getField: FieldQuery): DataQuery {\n    return (id) => getField(id, BuiltinResourceType.Url, 'url', '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceRegistryState.html":{"url":"injectables/ResourceRegistryState.html","title":"injectable - ResourceRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResourceRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/resource-registry/resource-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State keeping track of global resources\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMany\n                            \n                            \n                                addOne\n                            \n                            \n                                addYaml\n                            \n                            \n                                loadMarkdown\n                            \n                            \n                                loadYaml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMany\n                        \n                    \n                \n            \n            \n                \naddMany(ctx: ResourceRegistryContext, undefined: AddMany)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddMany)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:40\n                \n            \n\n\n            \n                \n                    Add multiple entries\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddMany\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOne\n                        \n                    \n                \n            \n            \n                \naddOne(ctx: ResourceRegistryContext, undefined: Add)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Add)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:30\n                \n            \n\n\n            \n                \n                    Add a single entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                Add\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addYaml\n                        \n                    \n                \n            \n            \n                \naddYaml(ctx: ResourceRegistryContext, undefined: AddFromYaml, filename?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:51\n                \n            \n\n\n            \n                \n                    Parse and add entries from yaml\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                AddFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional url/filename from which the data was loaded (for improved error messages)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMarkdown\n                        \n                    \n                \n            \n            \n                \nloadMarkdown(ctx: ResourceRegistryContext, undefined: LoadMarkdown)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LoadMarkdown)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:77\n                \n            \n\n\n            \n                \n                    Adds a markdown entry with content loaded from an external file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                LoadMarkdown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that completes when the entry has been added\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYaml\n                        \n                    \n                \n            \n            \n                \nloadYaml(ctx: ResourceRegistryContext, undefined: LoadFromYaml)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LoadFromYaml)\n                \n            \n\n            \n                \n                    Defined in state/src/resource-registry/resource-registry.state.ts:64\n                \n            \n\n\n            \n                \n                    Load and add entries from an external yaml file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                ResourceRegistryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State context\n\n                                    \n                                \n                                \n                                    \n                                                LoadFromYaml\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that completes when the entries has been added\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, State } from '@ngxs/store';\nimport { load } from 'js-yaml';\nimport { map, Observable } from 'rxjs';\nimport { Add, AddFromYaml, AddMany, LoadFromYaml, LoadMarkdown } from './resource-registry.actions';\nimport {\n  BuiltinResourceType,\n  ResourceRegistryContext,\n  ResourceRegistryModel,\n  RESOURCE_REGISTRY_SCHEMA,\n} from './resource-registry.model';\n\n/** State keeping track of global resources */\n@State({\n  name: 'resourceRegistry',\n  defaults: {},\n})\n@Injectable()\nexport class ResourceRegistryState {\n  /** Http service for resource loading */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Add a single entry\n   * @param ctx State context\n   * @param action Action with id and entry to add\n   */\n  @Action(Add)\n  addOne(ctx: ResourceRegistryContext, { id, entry }: Add): void {\n    this.addMany(ctx, new AddMany({ [id]: entry }));\n  }\n\n  /**\n   * Add multiple entries\n   * @param ctx State context\n   * @param action Action with entries to add\n   */\n  @Action(AddMany)\n  addMany(ctx: ResourceRegistryContext, { entries }: AddMany): void {\n    ctx.patchState(entries);\n  }\n\n  /**\n   * Parse and add entries from yaml\n   * @param ctx State context\n   * @param action Action with raw yaml data\n   * @param filename Optional url/filename from which the data was loaded (for improved error messages)\n   */\n  @Action(AddFromYaml)\n  addYaml(ctx: ResourceRegistryContext, { yaml }: AddFromYaml, filename?: string): void {\n    const data = load(yaml, { filename });\n    const entries = RESOURCE_REGISTRY_SCHEMA.parse(data);\n    this.addMany(ctx, new AddMany(entries));\n  }\n\n  /**\n   * Load and add entries from an external yaml file\n   * @param ctx State context\n   * @param action Action with the external file url\n   * @returns An observable that completes when the entries has been added\n   */\n  @Action(LoadFromYaml)\n  loadYaml(ctx: ResourceRegistryContext, { url }: LoadFromYaml): Observable {\n    return this.http\n      .get(url, { responseType: 'text' })\n      .pipe(map((data) => this.addYaml(ctx, new AddFromYaml(data), url)));\n  }\n\n  /**\n   * Adds a markdown entry with content loaded from an external file\n   * @param ctx State context\n   * @param action Action with id and url to the external markdown\n   * @returns An observable that completes when the entry has been added\n   */\n  @Action(LoadMarkdown)\n  loadMarkdown(ctx: ResourceRegistryContext, { id, url }: LoadMarkdown): Observable {\n    return this.http.get(url, { responseType: 'text' }).pipe(\n      map((markdown) => new Add(id, { type: BuiltinResourceType.Markdown, markdown })),\n      map((action) => this.addOne(ctx, action))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScopedDestructorSubject.html":{"url":"classes/ScopedDestructorSubject.html","title":"class - ScopedDestructorSubject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScopedDestructorSubject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/on-destroy/destructor-subject.ts\n        \n\n\n            \n                Description\n            \n            \n                A subject type that is associated with a destructor scope.\nWhen the cleanup function is run the subject emits a single\nundefined value and immediately completes\n\n            \n\n            \n                Extends\n            \n            \n                    ReplaySubject\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scope: DestructorScope)\n                    \n                \n                        \n                            \n                                Defined in injectors/src/lib/on-destroy/destructor-subject.ts:27\n                            \n                        \n\n                \n                    \n                            Creates a new subject and attaches cleanup to the destructor scope\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        DestructorScope\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Associated scope\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup functions can be registered */\nexport interface DestructorScope {\n  /**\n   * Register a cleanup function\n   * @param cb Cleanup callback function\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Determines whether an object is destructor scope like\n * @param obj Value to test\n * @returns true if the object seems to be a destructor scope, otherwise false\n */\nexport function isDestructorScopeLike(obj: unknown): obj is DestructorScope {\n  const isObject = typeof obj === 'object' && obj !== null;\n  return isObject && 'onDestroy' in obj && typeof obj.onDestroy === 'function';\n}\n\n/**\n * A subject type that is associated with a destructor scope.\n * When the cleanup function is run the subject emits a single\n * undefined value and immediately completes\n */\nexport class ScopedDestructorSubject extends ReplaySubject {\n  /**\n   * Creates a new subject and attaches cleanup to the destructor scope\n   * @param scope Associated scope\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectOptions.html":{"url":"interfaces/SelectOptions.html","title":"interface - SelectOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/select/select.ts\n        \n\n\n            \n                Description\n            \n            \n                select$ configuration options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            notifyOnChange\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifyOnChange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifyOnChange:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to mark the containing view for change detection on emits. Defaults to true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, inject } from '@angular/core';\nimport { Any } from '@hra-ui/utils/types';\nimport { StateToken, Store } from '@ngxs/store';\nimport { MonoTypeOperatorFunction, Observable, takeUntil, tap } from 'rxjs';\nimport { injectDestroy$ } from '../on-destroy/on-destroy';\n\n/** Selector type for select style functions */\nexport type StateSelector = ((...args: Any[]) => T) | StateToken;\n\n/** `select$` configuration options */\nexport interface SelectOptions {\n  /** Whether to mark the containing view for change detection on emits. Defaults to true. */\n  notifyOnChange?: boolean;\n}\n\n/**\n * Marks a view for change detection whenever a new value is emitted\n * @param options Options to explicitly disable marking\n * @returns A rxjs operator\n */\nfunction markForCheck(options?: SelectOptions): MonoTypeOperatorFunction {\n  const notifyOnChange = options?.notifyOnChange ?? true;\n  const cdr = inject(ChangeDetectorRef, { optional: true });\n  if (notifyOnChange && cdr) {\n    const markFn = () => cdr.markForCheck();\n    return tap({ next: markFn, error: markFn, complete: markFn });\n  }\n\n  return (source) => source;\n}\n\n/**\n * Creates an observable emitting parts of the state. The observable's lifetime\n * is automatically tied to the injection context where this is called.\n * @param selector State selection function or token\n * @param options Additional select options\n * @returns An observable of the selected state\n */\nexport function select$(selector: StateSelector, options?: SelectOptions): Observable {\n  return inject(Store)\n    .select(selector as StateToken)\n    .pipe(takeUntil(injectDestroy$()), markForCheck(options));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Class Set Action for set method\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: StorageId, key: string, value: string)\n                    \n                \n                        \n                            \n                                Defined in state/src/storage/storage.actions.ts:10\n                            \n                        \n\n                \n                    \n                            constructor class for Set action object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        StorageId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: StorageId - Storage identifier\n\n\n                                                        \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: string - Key to be stored in the storage identifier\n\n\n                                                        \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ntype: string - value to be stored with the key\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '../actions/actions';\nimport { StorageId } from './storage.model';\n\n/** Base action factory */\nconst Action = ActionGroup('Storage');\n\n/**\n * Class Set Action for set method\n */\nexport class Set extends Action('Set') {\n  /**\n   * constructor class for Set action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   * @param value - type: string - value to be stored with the key\n   */\n  constructor(readonly id: StorageId, readonly key: string, readonly value: string) {\n    super();\n  }\n}\n/**\n *  Class Delete Action for delete method\n */\nexport class Delete extends Action('Delete') {\n  /**\n   * constructor class for Delete action object\n   * @param id - type: StorageId - Storage identifier\n   * @param key - type: string - Key to be stored in the storage identifier\n   */\n  constructor(readonly id: StorageId, readonly key: string) {\n    super();\n  }\n}\n/**\n * Clear the values stored in the specified StorageId\n */\nexport class Clear extends Action('Clear') {\n  /**\n   * constructor class for clear action object\n   * @param id - type: StorageId - Storage identifier\n   */\n  constructor(readonly id: StorageId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnapshotObserver.html":{"url":"classes/SnapshotObserver.html","title":"class - SnapshotObserver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnapshotObserver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/select/snapshot-observer.ts\n        \n\n\n            \n                Description\n            \n            \n                Observer storing the latest value from a snapshot stream\n\n            \n\n\n            \n                Implements\n            \n            \n                        NextObserver\n                        ErrorObserver\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                get\n                            \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(err)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select/snapshot-observer.ts:38\n                \n            \n\n\n            \n                \n                    Handles error emits\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The error value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select/snapshot-observer.ts:18\n                \n            \n\n\n            \n                \n                    Gets the latest value or throw on errors\n\n\n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        The latest value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(value: T)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select/snapshot-observer.ts:30\n                \n            \n\n\n            \n                \n                    Handles value emits\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorObserver, NextObserver } from 'rxjs';\n\n/** Object indicating that no error has been emitted */\nconst NO_ERROR_SENTINEL_OBJ = {};\n\n/** Observer storing the latest value from a snapshot stream */\nexport class SnapshotObserver implements NextObserver, ErrorObserver {\n  /** The latest value */\n  private value?: T = undefined;\n  /** An error value if not equal to `NO_ERROR_SENTINEL` */\n  private errorValue: unknown = NO_ERROR_SENTINEL_OBJ;\n\n  /**\n   * Gets the latest value or throw on errors\n   * @returns The latest value\n   * @throws If an error has been emitted\n   */\n  get(): T {\n    if (this.errorValue !== NO_ERROR_SENTINEL_OBJ) {\n      throw this.errorValue;\n    }\n\n    return this.value as T;\n  }\n\n  /**\n   * Handles value emits\n   * @param value The new value\n   */\n  next(value: T): void {\n    this.value = value;\n  }\n\n  /**\n   * Handles error emits\n   * @param err The error value\n   */\n  error(err: unknown): void {\n    this.value = undefined;\n    this.errorValue = err;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageSelectors.html":{"url":"classes/StorageSelectors.html","title":"class - StorageSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Storage selectors - class for retrieving storage types\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                length\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['StorageState'])\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.selectors.ts:13\n                \n            \n\n\n            \n                \n                    returns the value stored in the key,value pair in the storageId given\n\n\n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        (id,key) of the given storage id else undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        length\n                        \n                    \n                \n            \n            \n                \n                    \n                    length()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['StorageState'])\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.selectors.ts:23\n                \n            \n\n\n            \n                \n                    returns the number of items in the given storage id stored\n\n\n                    \n                    \n                    \n                        Returns :     number | undefined\n\n                    \n                    \n                        length of the given StorageId supplied\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { StorageId } from './storage.model';\nimport { StorageState } from './storage.state';\n/**\n * Storage selectors - class for retrieving storage types\n */\nexport class StorageSelectors {\n  /**\n   * returns the value stored in the key,value pair in the storageId given\n   * @returns (id,key) of the given storage id else undefined\n   */\n  @Selector([StorageState])\n  static get(): (id: StorageId, key: string) => string | undefined {\n    return (id, key) => StorageState.getStorage(id).getItem(key) ?? undefined;\n  }\n  /**\n   * returns the number of items in the given storage id stored\n   * @returns length of the given StorageId supplied\n   */\n  @Selector([StorageState])\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore Allow selector name\n  static length(): (id: StorageId) => number | undefined {\n    return (id) => StorageState.getStorage(id).length;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageState.html":{"url":"injectables/StorageState.html","title":"injectable - StorageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            state/src/storage/storage.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State holding Storage types\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                delete\n                            \n                            \n                                    Static\n                                getStorage\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear(ctx: StorageContext, undefined: Clear)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Clear)\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:65\n                \n            \n\n\n            \n                \n                    clears the values of the specified storage id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StorageContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStorageContext object\n\n\n                                    \n                                \n                                \n                                    \n                                                Clear\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(ctx: StorageContext, undefined: Delete)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Delete)\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:55\n                \n            \n\n\n            \n                \n                    deletes the value pointed by key in the list of values stored in the specified storage id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StorageContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStorageContext object\n\n\n                                    \n                                \n                                \n                                    \n                                                Delete\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(id: StorageId)\n                \n            \n\n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:27\n                \n            \n\n\n            \n                \n                    StorageState class to manage storage objects\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                StorageId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Storage\n\n                    \n                    \n                        \nStorage objects - session and local\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(ctx: StorageContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in state/src/storage/storage.state.ts:45\n                \n            \n\n\n            \n                \n                    sets the key,value pair in the given storageId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StorageContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nStorageContext object\n\n\n                                    \n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { produce } from 'immer';\nimport { StorageContext } from './storage.model';\nimport { Injectable } from '@angular/core';\nimport { Action, State } from '@ngxs/store';\nimport { StorageId, StorageModel } from './storage.model';\nimport { Set, Delete, Clear } from './storage.actions';\n/**\n * State holding Storage types\n */\n@State({\n  name: 'storage',\n  defaults: {\n    [StorageId.Local]: 0,\n    [StorageId.Session]: 0,\n  },\n})\n@Injectable()\n/**\n *  class for managing storage state\n */\nexport class StorageState {\n  /**\n   * StorageState class to manage storage objects\n   * @param id-Storage Identifier\n   * @returns - Storage objects - session and local\n   */\n  static getStorage(id: StorageId): Storage {\n    switch (id) {\n      case StorageId.Local:\n        return localStorage;\n\n      case StorageId.Session:\n        return sessionStorage;\n\n      default:\n        throw new Error(`No such storage '${id}'`);\n    }\n  }\n  /**\n   * sets the key,value pair in the given storageId\n   * @param ctx - StorageContext object\n   * @param param1- {id: StorageId ,key:string ,value:string} of type Set to set key,value pair for the given id\n   */\n  @Action(Set)\n  set(ctx: StorageContext, { id, key, value }: Set): void {\n    StorageState.getStorage(id).setItem(key, value);\n    this.increaseChangeCount(ctx, id);\n  }\n  /**\n   * deletes the value pointed by key in the list of values stored in the specified storage id\n   * @param ctx - StorageContext object\n   * @param param1- id: StorageId ,key:string ,value:string} of type Set to set key,value pair for the given id\n   */\n  @Action(Delete)\n  delete(ctx: StorageContext, { id, key }: Delete): void {\n    StorageState.getStorage(id).removeItem(key);\n    this.increaseChangeCount(ctx, id);\n  }\n  /**\n   * clears the values of the specified storage id\n   * @param ctx - StorageContext object\n   * @param param1 - id: StorageId ,key:string ,value:string} of type Set to set key,value pair for the given id\n   */\n  @Action(Clear)\n  clear(ctx: StorageContext, { id }: Clear): void {\n    StorageState.getStorage(id).clear();\n    this.increaseChangeCount(ctx, id);\n  }\n  /**\n   * increases count after each operation is performed on the specified storage id\n   * @param ctx  - StorageContext obje\n   * @param id - StorageId - Storage identifier for which the change count has to be updated\n   */\n  private increaseChangeCount(ctx: StorageContext, id: StorageId): void {\n    ctx.setState(\n      produce((draft) => {\n        draft[id] += 1;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @ngxs/store : ^3.7.6\n        \n            @hra-ui/theming : *\n        \n            @hra-ui/utils : *\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LinkType   (state/.../link-registry.model.ts)\n                        \n                        \n                            RawBuiltinResourceType   (state/.../resource-registry.model.ts)\n                        \n                        \n                            StorageId   (state/.../storage.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    state/src/link-registry/link-registry.model.ts\n    \n        \n            \n                \n                    \n                        \n                        LinkType\n                    \n                \n                    \n                        \n                            Types for Link\n\n                        \n                    \n                        \n                            \n                                 Internal\n                            \n                        \n                        \n                            \n                                Value : internal\n                            \n                        \n                        \n                            \n                                 External\n                            \n                        \n                        \n                            \n                                Value : external\n                            \n                        \n            \n        \n\n    state/src/resource-registry/resource-registry.model.ts\n    \n        \n            \n                \n                    \n                        \n                        RawBuiltinResourceType\n                    \n                \n                    \n                        \n                            Raw builtin type strings\n\n                        \n                    \n                        \n                            \n                                 Markdown\n                            \n                        \n                        \n                            \n                                Value : markdown\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 Url\n                            \n                        \n                        \n                            \n                                Value : url\n                            \n                        \n            \n        \n\n    state/src/storage/storage.model.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageId\n                    \n                \n                    \n                        \n                            StorageId - enum with values as Local, Session - identifier for storage types\n\n                        \n                    \n                        \n                            \n                                 Local\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 Session\n                            \n                        \n                        \n                            \n                                Value : session\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncdk\nThis library was generated with Nx.\nRunning unit tests\nRun nx test cdk to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CdkStateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnyEntryQuery   (state/.../resource-registry.selectors.ts)\n                        \n                        \n                            BuiltinTypes   (state/.../resource-registry.model.ts)\n                        \n                        \n                            CustomResourceEntry   (state/.../resource-registry.model.ts)\n                        \n                        \n                            CustomResourceType   (state/.../resource-registry.model.ts)\n                        \n                        \n                            DataQuery   (state/.../resource-registry.selectors.ts)\n                        \n                        \n                            EntryQuery   (state/.../resource-registry.selectors.ts)\n                        \n                        \n                            ExternalLinkEntry   (state/.../link-registry.model.ts)\n                        \n                        \n                            ExtractBuiltinEntryType   (state/.../resource-registry.model.ts)\n                        \n                        \n                            FieldQuery   (state/.../resource-registry.selectors.ts)\n                        \n                        \n                            InternalLinkEntry   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkEntry   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkId   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkRegistryContext   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkRegistryModel   (state/.../link-registry.model.ts)\n                        \n                        \n                            LinkRegistryQuery   (state/.../link-registry.state.ts)\n                        \n                        \n                            ResourceEntry   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceEntryPayload   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceId   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceRegistryContext   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceRegistryModel   (state/.../resource-registry.model.ts)\n                        \n                        \n                            ResourceType   (state/.../resource-registry.model.ts)\n                        \n                        \n                            RestArgs   (injectors/.../select-snapshot.ts)\n                        \n                        \n                            SelectQuery   (injectors/.../select-snapshot.ts)\n                        \n                        \n                            StateSelector   (injectors/.../select.ts)\n                        \n                        \n                            StorageContext   (state/.../storage.model.ts)\n                        \n                        \n                            StorageModel   (state/.../storage.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    state/src/resource-registry/resource-registry.selectors.ts\n    \n    \n        \n            \n                \n                    \n                    AnyEntryQuery\n                \n            \n            \n                \n                    Query function returned by ResourceRegistrySelectors.anyEntry\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataQuery\n                \n            \n            \n                \n                    Query function for resource data\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntryQuery\n                \n            \n            \n                \n                    Query function returned by ResourceRegistrySelectors.entry\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FieldQuery\n                \n            \n            \n                \n                    Query function returned by ResourceRegistrySelectors.field\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    state/src/resource-registry/resource-registry.model.ts\n    \n    \n        \n            \n                \n                    \n                    BuiltinTypes\n                \n            \n            \n                \n                    Maps raw builtin type strings to ResourceType\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CustomResourceEntry\n                \n            \n            \n                \n                    Typed custom resource entry\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CustomResourceType\n                \n            \n            \n                \n                    Custom entry types\n\n                \n            \n            \n                \n                         `custom:${T}`\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExtractBuiltinEntryType\n                \n            \n            \n                \n                    Extracts the builtin entry with type T\n\n                \n            \n            \n                \n                        UnionMember | type | T>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceEntry\n                \n            \n            \n                \n                    Any resource entry\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceEntryPayload\n                \n            \n            \n                \n                    Payload type used when creating custom types\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceId\n                \n            \n            \n                \n                    Resource identifier\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceRegistryContext\n                \n            \n            \n                \n                    Context type for action handlers\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceRegistryModel\n                \n            \n            \n                \n                    State data model\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ResourceType\n                \n            \n            \n                \n                    Resource type string with entry typings\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    state/src/link-registry/link-registry.model.ts\n    \n    \n        \n            \n                \n                    \n                    ExternalLinkEntry\n                \n            \n            \n                \n                    type for external link entry\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InternalLinkEntry\n                \n            \n            \n                \n                    type for internal link entry\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkEntry\n                \n            \n            \n                \n                    entry for link registry\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkId\n                \n            \n            \n                \n                    Type for unique identifier for link\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkRegistryContext\n                \n            \n            \n                \n                    type for State Context of LinkRegistry\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LinkRegistryModel\n                \n            \n            \n                \n                    Model for LinkRegistry State\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    state/src/link-registry/link-registry.state.ts\n    \n    \n        \n            \n                \n                    \n                    LinkRegistryQuery\n                \n            \n            \n                \n                    Query function for link entry optionally with type specified\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    injectors/src/lib/select/select-snapshot.ts\n    \n    \n        \n            \n                \n                    \n                    RestArgs\n                \n            \n            \n                \n                    Get remaining arguments after applying bound arguments\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectQuery\n                \n            \n            \n                \n                    Function type returned by selectQuerySnapshot\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    injectors/src/lib/select/select.ts\n    \n    \n        \n            \n                \n                    \n                    StateSelector\n                \n            \n            \n                \n                    Selector type for select style functions\n\n                \n            \n            \n                \n                         | StateToken\n\n                \n            \n        \n    \n    state/src/storage/storage.model.ts\n    \n    \n        \n            \n                \n                    \n                    StorageContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StorageModel\n                \n            \n            \n                \n                    Type alias for the array of Storage objects\n\n                \n            \n            \n                \n                            Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (state/.../link-registry.actions.ts)\n                        \n                        \n                            Action   (state/.../resource-registry.actions.ts)\n                        \n                        \n                            Action   (state/.../storage.actions.ts)\n                        \n                        \n                            actionTypeRegistry   (state/.../action-type-registry.ts)\n                        \n                        \n                            BUILTIN_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                        \n                            BUILTIN_TYPE_VALUES   (state/.../resource-registry.model.ts)\n                        \n                        \n                            BuiltinResourceType   (state/.../resource-registry.model.ts)\n                        \n                        \n                            CUSTOM_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                        \n                            CUSTOM_ENTRY_TYPE   (state/.../resource-registry.model.ts)\n                        \n                        \n                            CUSTOM_TYPE_PREFIX   (state/.../resource-registry.model.ts)\n                        \n                        \n                            DESTRUCTOR_CACHE   (injectors/.../on-destroy.ts)\n                        \n                        \n                            EMPTY_LINK   (state/.../link-registry.model.ts)\n                        \n                        \n                            EXTERNAL_LINK_SCHEMA   (state/.../link-registry.model.ts)\n                        \n                        \n                            INTERNAL_LINK_SCHEMA   (state/.../link-registry.model.ts)\n                        \n                        \n                            LINK_REGISTRY_SCHEMA   (state/.../link-registry.model.ts)\n                        \n                        \n                            MARKDOWN_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                        \n                            NO_ERROR_SENTINEL_OBJ   (injectors/.../snapshot-observer.ts)\n                        \n                        \n                            RESOURCE_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                        \n                            RESOURCE_ID   (state/.../resource-registry.model.ts)\n                        \n                        \n                            RESOURCE_REGISTRY_SCHEMA   (state/.../resource-registry.model.ts)\n                        \n                        \n                            TEXT_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                        \n                            URL_ENTRY   (state/.../resource-registry.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    state/src/link-registry/link-registry.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('LinkRegistry')\n                    \n                \n\n            \n                \n                    Base action factory\n\n                \n            \n\n        \n    \n\n    state/src/resource-registry/resource-registry.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('ResourceRegistry')\n                    \n                \n\n            \n                \n                    Base action factory\n\n                \n            \n\n        \n    \n\n    state/src/storage/storage.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Storage')\n                    \n                \n\n            \n                \n                    Base action factory\n\n                \n            \n\n        \n    \n\n    state/src/actions/action-type-registry.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        actionTypeRegistry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set()\n                    \n                \n\n            \n                \n                    Registry of action types\n\n                \n            \n\n        \n    \n\n    state/src/resource-registry/resource-registry.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BUILTIN_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.discriminatedUnion('type', [MARKDOWN_ENTRY, TEXT_ENTRY, URL_ENTRY])\n                    \n                \n\n            \n                \n                    Union of all builtin entries\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BUILTIN_TYPE_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(RawBuiltinResourceType)\n                    \n                \n\n            \n                \n                    Builtin type strings as an array\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BuiltinResourceType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RawBuiltinResourceType as BuiltinTypes\n                    \n                \n\n            \n                \n                    Builtin resource types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CUSTOM_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({ type: CUSTOM_ENTRY_TYPE }).passthrough()\n                    \n                \n\n            \n                \n                    Custom entry\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CUSTOM_ENTRY_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .refine((val) => !isBuiltinType(val), 'Invalid builtin resource format')\n  .transform>(createCustomType)\n                    \n                \n\n            \n                \n                    Custom entry type validator with transformation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CUSTOM_TYPE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'custom:'\n                    \n                \n\n            \n                \n                    Prefix of all custom types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MARKDOWN_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  type: z.literal(RawBuiltinResourceType.Markdown),\n  markdown: z.string(),\n})\n                    \n                \n\n            \n                \n                    Markdown data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.union([BUILTIN_ENTRY, CUSTOM_ENTRY])\n                    \n                \n\n            \n                \n                    Builtin or custom entries\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .transform((id) => `ResourceId:'${id}'`)\n  .brand('ResourceId')\n                    \n                \n\n            \n                \n                    Resource identifier validator with transformation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_REGISTRY_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.record(RESOURCE_ID, RESOURCE_ENTRY)\n                    \n                \n\n            \n                \n                    State schema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEXT_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  type: z.literal(RawBuiltinResourceType.Text),\n  text: z.string(),\n})\n                    \n                \n\n            \n                \n                    Text data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  type: z.literal(RawBuiltinResourceType.Url),\n  url: z.string(),\n})\n                    \n                \n\n            \n                \n                    External url\n\n                \n            \n\n        \n    \n\n    injectors/src/lib/on-destroy/on-destroy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DESTRUCTOR_CACHE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WeakMap>()\n                    \n                \n\n            \n                \n                    Cached destructor observables\n\n                \n            \n\n        \n    \n\n    state/src/link-registry/link-registry.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EMPTY_LINK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('@@__EMPTY__')\n                    \n                \n\n            \n                \n                    Empty link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXTERNAL_LINK_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    type: z.literal(LinkType.External),\n    url: z.string(),\n    rel: z.string().default('noopener'),\n    target: z.string(),\n  })\n  .partial({ rel: true, target: true })\n                    \n                \n\n            \n                \n                    Type for external link entry\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INTERNAL_LINK_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    type: z.literal(LinkType.Internal),\n    commands: z.any().array(),\n    extras: z\n      .object({\n        queryParams: z.record(z.any()).nullable(),\n        fragment: z.string(),\n        queryParamsHandling: z.enum(['merge', 'preserve', '']).nullable(),\n        preserveFragment: z.boolean(),\n        onSameUrlNavigation: z.literal('reload'),\n        skipLocationChange: z.boolean(),\n        replaceUrl: z.boolean(),\n      })\n      .partial(),\n  })\n  .partial({ extras: true })\n                    \n                \n\n            \n                \n                    Type for internal link entry\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LINK_REGISTRY_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.record(\n  z\n    .string()\n    .transform((id) => `LinkId:'${id}'`)\n    .brand('LinkId'),\n  z.discriminatedUnion('type', [EXTERNAL_LINK_SCHEMA, INTERNAL_LINK_SCHEMA])\n)\n                    \n                \n\n            \n                \n                    Schema for link registry\n\n                \n            \n\n        \n    \n\n    injectors/src/lib/select/snapshot-observer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NO_ERROR_SENTINEL_OBJ\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Object indicating that no error has been emitted\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
