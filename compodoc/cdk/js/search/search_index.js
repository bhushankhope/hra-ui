var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/DestructorScope.html",[0,0.937,1,0.937]],["body/interfaces/DestructorScope.html",[0,0.596,1,1.319,2,1.497,3,0.736,4,0.736,5,0.736,6,0.907,7,0.731,8,0.596,9,0.907,10,1.384,11,2.325,12,1.384,13,1.384,14,0.606,15,1.738,16,1.353,17,1.384,18,0.084,19,1.627,20,0.736,21,1.497,22,1.384,23,1.871,24,1.384,25,1.674,26,1.621,27,1.384,28,0.736,29,0.596,30,0.596,31,0.907,32,1.384,33,1.063,34,0.988,35,1.119,36,1.063,37,0.91,38,0.596,39,0.91,40,1.119,41,0.91,42,0.596,43,1.949,44,1.384,45,0.736,46,1.627,47,1.871,48,0.907,49,1.384,50,0.736,51,0.91,52,0.481,53,0.596,54,0.731,55,0.736,56,0.91,57,0.736,58,1.164,59,0.91,60,0.91,61,0.91,62,0.91,63,0.91,64,0.91,65,0.736,66,1.674,67,0.481,68,0.596,69,0.736,70,0.91,71,1.119,72,0.91,73,0.91,74,0.91,75,0.91,76,0.736,77,0.736,78,0.736,79,0.91,80,0.91,81,0.91,82,0.91,83,0.481,84,1.627,85,0.91,86,0.91,87,0.91,88,0.736,89,0.91,90,0.596,91,1.097,92,0.736,93,0.736,94,1.353,95,1.353,96,1.389,97,1.512,98,1.353,99,1.353,100,1.226,101,0.736,102,1.384,103,0.736,104,0.736,105,1.835,106,0.91,107,0.91,108,1.119,109,1.119,110,0.736,111,0.736,112,0.736,113,1.353,114,0.736,115,1.119,116,0.91,117,0.91,118,0.91,119,0.91,120,0.91,121,0.91,122,0.91,123,0.041,124,0.041]],["title/components/OnDestroyHostComponent.html",[36,0.755,76,1.155]],["body/components/OnDestroyHostComponent.html",[0,0.569,1,1.197,3,0.702,4,0.702,5,0.702,6,0.876,7,0.705,8,0.569,9,0.569,10,0.869,11,2.081,12,0.869,13,0.869,14,0.527,16,0.702,17,0.869,18,0.084,19,1.315,20,0.702,22,0.869,23,1.336,24,0.869,25,1.336,26,1.586,27,0.869,29,0.876,31,0.569,32,0.869,33,0.965,34,0.859,35,1.08,36,1.182,37,0.869,38,0.569,39,0.869,40,1.08,41,0.869,42,0.569,43,1.927,44,1.336,45,0.702,46,1.594,47,1.826,48,0.876,49,1.336,50,0.702,51,0.869,52,0.459,53,0.569,54,0.705,55,0.702,56,0.869,57,0.702,58,1.182,59,0.869,60,0.869,61,0.869,62,0.869,63,0.869,64,0.869,65,1.08,66,2.237,67,0.859,68,1.067,69,1.315,70,0.869,71,1.08,72,0.869,73,1.627,74,1.627,75,1.627,76,1.476,77,1.08,78,1.08,79,1.336,80,1.336,81,1.627,82,1.826,83,0.859,84,1.594,85,0.869,86,0.869,87,0.869,88,0.702,89,0.869,90,0.569,91,1.067,92,0.702,93,0.702,94,1.315,95,1.315,96,1.364,97,1.476,98,1.315,99,1.315,100,1.197,101,0.702,102,1.336,103,0.702,104,0.702,105,1.809,106,0.869,107,0.869,108,1.08,109,1.08,110,0.702,111,0.702,112,0.702,113,1.315,114,0.702,115,1.08,116,0.869,117,0.869,118,0.869,119,0.869,120,0.869,121,0.869,122,0.869,123,0.04,124,0.04,125,1.336,126,1.43,127,1.43,128,1.43,129,1.43,130,2.198,131,1.092,132,3.005,133,1.43,134,0.869,135,1.43]],["title/classes/ScopedDestroySubject.html",[54,0.755,55,1.155]],["body/classes/ScopedDestroySubject.html",[0,0.592,1,1.386,3,0.731,4,0.731,5,0.731,6,0.902,7,0.727,8,0.592,9,0.902,10,0.904,11,2.321,12,0.904,13,0.904,14,0.54,16,0.731,17,0.904,18,0.084,19,1.507,20,0.731,22,0.904,23,1.376,24,0.904,25,1.667,26,1.651,27,0.904,28,0.731,29,0.592,30,0.592,31,0.902,32,0.904,33,1.06,34,0.881,35,1.113,36,1.06,37,0.904,38,0.592,39,0.904,40,1.113,41,0.904,42,0.592,43,1.946,44,1.667,45,0.731,46,1.622,47,2.265,48,1.222,49,1.864,50,1.113,51,1.376,52,0.727,53,0.902,54,0.727,55,1.113,56,1.376,57,1.113,58,1.226,59,1.376,60,1.376,61,0.904,62,0.904,63,0.904,64,0.904,65,0.731,66,1.667,67,0.477,68,0.592,69,0.731,70,0.904,71,1.113,72,0.904,73,0.904,74,0.904,75,0.904,76,0.731,77,0.731,78,0.731,79,0.904,80,0.904,81,0.904,82,0.904,83,0.727,84,1.622,85,0.904,86,0.904,87,0.904,88,0.731,89,0.904,90,0.592,91,1.093,92,0.731,93,0.731,94,1.348,95,1.348,96,1.386,97,1.507,98,1.348,99,1.348,100,1.222,101,0.731,102,1.376,103,0.731,104,0.731,105,1.832,106,0.904,107,0.904,108,1.113,109,1.113,110,0.731,111,0.731,112,0.731,113,1.348,114,0.731,115,1.113,116,0.904,117,0.904,118,0.904,119,0.904,120,0.904,121,0.904,122,0.904,123,0.041,124,0.041,136,0.904,137,1.487]],["title/classes/SnapshotObserver.html",[54,0.755,138,1.796]],["body/classes/SnapshotObserver.html",[3,0.623,4,0.623,5,0.623,7,0.407,9,1.122,14,0.25,15,1.529,18,0.084,19,1.601,20,1.507,28,1.219,29,0.988,30,1.222,31,1.122,33,1.046,34,1.168,35,1.507,38,0.505,42,0.505,45,0.623,46,1.507,48,0.798,52,1.368,53,1.122,54,0.407,58,1.168,65,0.623,67,1.095,68,0.505,69,0.984,71,1.219,77,0.984,83,0.407,84,1.601,88,1.219,96,0.988,100,0.798,123,0.036,124,0.036,125,1.217,134,1.217,136,0.771,138,2.151,139,1.98,140,1.98,141,0.771,142,3.259,143,2.002,144,2.779,145,2.341,146,2.002,147,2.002,148,3.64,149,2.002,150,1.268,151,2.817,152,1.268,153,2.817,154,2.151,155,2.002,156,2.002,157,2.151,158,2.817,159,1.268,160,3.259,161,1.529,162,2.488,163,2.002,164,1.268,165,2.481,166,1.268,167,2.002,168,2.481,169,2.002,170,2.779,171,2.002,172,1.268,173,1.529,174,2.151,175,0.968,176,0.968,177,1.529,178,1.268,179,1.894,180,1.268,181,0.968,182,2.481,183,2.002,184,1.268,185,1.268,186,2.002,187,1.268,188,1.268,189,1.268,190,2.002,191,2.002,192,2.481,193,1.268,194,1.268,195,0.771,196,0.771,197,0.968,198,2.481,199,1.507,200,2.002,201,1.529,202,1.529,203,1.529,204,1.529,205,1.529,206,1.529,207,1.529,208,1.529,209,1.529,210,1.529,211,1.268,212,1.268,213,1.268,214,1.268,215,1.268,216,1.268,217,1.268,218,1.217,219,1.217,220,1.894,221,0.968,222,0.968,223,1.268]],["title/dependencies.html",[224,1.524,225,2.146]],["body/dependencies.html",[18,0.083,42,1.3,68,1.542,123,0.07,124,0.07,175,2.492,225,2.955,226,3.265,227,3.265,228,3.265,229,3.265,230,3.87,231,3.265,232,3.265,233,3.265]],["title/miscellaneous/functions.html",[234,0.641,235,2.146]],["body/miscellaneous/functions.html",[1,1.246,6,0.615,7,0.496,8,1.337,9,1.406,14,0.304,18,0.077,26,1.459,28,1.734,29,1.406,30,1.406,31,1.406,33,1.133,34,1.239,36,0.496,38,0.615,40,1.379,43,2.08,48,0.928,50,1.145,52,1.004,53,0.928,57,0.759,58,1.077,67,1.133,83,0.748,90,0.615,91,0.928,94,1.379,95,1.379,96,0.615,97,1.536,98,1.379,99,1.379,100,1.246,101,0.759,103,0.759,104,0.759,105,0.759,108,1.379,109,1.145,110,0.759,111,0.759,112,0.759,113,0.759,114,0.759,115,0.759,123,0.042,124,0.042,125,1.706,131,1.179,134,1.706,139,0.938,140,0.938,141,1.706,144,1.779,145,2.143,154,1.779,157,1.779,161,1.179,162,1.779,170,1.179,174,2.143,176,1.179,177,2.143,179,1.179,181,1.179,195,1.416,196,1.416,199,1.9,201,1.779,202,2.387,203,2.387,204,2.143,205,1.779,206,1.779,207,1.779,208,1.779,209,1.179,210,1.179,218,1.706,219,1.416,220,2.143,221,1.179,222,1.179,234,0.496,235,1.779,236,2.331,237,1.179,238,2.331,239,2.387,240,2.331,241,2.331,242,1.779,243,1.179,244,1.179,245,1.544,246,2.143,247,1.544,248,1.544,249,1.544,250,1.544,251,1.544,252,1.179,253,1.544,254,2.331,255,2.807,256,1.544,257,1.544,258,1.544,259,1.544,260,1.544,261,1.544,262,1.544,263,1.544,264,1.544,265,1.544,266,1.544,267,1.779,268,1.544,269,1.544,270,1.544,271,2.331,272,1.544,273,1.544,274,2.331,275,1.544,276,2.331,277,1.544,278,1.544,279,1.544,280,1.544,281,2.331,282,1.544,283,1.544,284,1.544,285,1.544,286,1.544,287,1.544,288,1.544,289,1.544,290,1.544,291,1.544,292,1.544,293,1.544,294,1.544,295,1.544,296,1.544,297,2.331,298,1.544,299,1.544,300,1.544]],["title/index.html",[14,0.393,301,1.996,302,1.996]],["body/index.html",[18,0.072,123,0.072,124,0.072,303,3.947,304,3.377,305,3.377,306,3.947,307,3.377,308,3.947,309,3.947,310,3.377,311,3.377,312,3.377]],["title/modules.html",[313,2.402]],["body/modules.html",[18,0.074,123,0.074,124,0.074,313,2.712]],["title/overview.html",[314,2.402]],["body/overview.html",[0,1.382,18,0.073,36,1.113,123,0.073,124,0.073,136,2.108,314,2.648,315,4.01,316,3.469]],["title/properties.html",[224,1.524,317,2.146]],["body/properties.html",[18,0.077,123,0.073,124,0.073,317,2.68,318,3.51,319,3.51]],["title/miscellaneous/typealiases.html",[234,0.641,320,2.811]],["body/miscellaneous/typealiases.html",[14,0.613,18,0.073,30,1.611,33,1.208,34,1,67,1,78,1.531,83,1,123,0.068,124,0.068,139,1.893,140,1.893,141,2.287,173,2.379,195,1.893,196,1.893,197,2.379,199,2.287,218,1.893,219,1.893,234,1,237,2.379,242,2.379,243,2.379,244,2.379,246,2.873,252,2.873,267,2.379,321,3.116,322,3.116,323,3.116]],["title/miscellaneous/variables.html",[234,0.641,324,2.146]],["body/miscellaneous/variables.html",[6,1.315,7,1.06,8,1.552,14,0.766,16,1.622,18,0.075,26,1.315,52,1.06,58,1.06,90,1.315,91,1.315,92,1.914,93,1.622,123,0.071,124,0.071,234,1.06,239,2.52,324,2.52,325,3.301]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":116,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["0.0.1",{"_index":319,"title":{},"body":{"properties.html":{}}}],["1",{"_index":315,"title":{},"body":{"overview.html":{}}}],["1165545544",{"_index":298,"title":{},"body":{"miscellaneous/functions.html":{}}}],["1199063426",{"_index":299,"title":{},"body":{"miscellaneous/functions.html":{}}}],["15.1.0",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":316,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["3.7.6",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["accepts",{"_index":322,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["action",{"_index":246,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontype",{"_index":250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["actual_component",{"_index":135,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["aliases",{"_index":321,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular/common",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"dependencies.html":{}}}],["anyfunction",{"_index":178,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["args",{"_index":200,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["argument",{"_index":197,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/typealiases.html":{}}}],["arguments",{"_index":219,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["associated",{"_index":98,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["automatic",{"_index":247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["automatically",{"_index":48,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["available",{"_index":208,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":293,"title":{},"body":{"miscellaneous/functions.html":{}}}],["before",{"_index":268,"title":{},"body":{"miscellaneous/functions.html":{}}}],["block",{"_index":75,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["build",{"_index":262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["call",{"_index":249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["callback",{"_index":23,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["callbacks",{"_index":12,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["called",{"_index":204,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["care",{"_index":288,"title":{},"body":{"miscellaneous/functions.html":{}}}],["caveats",{"_index":265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cb",{"_index":32,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["cdk",{"_index":303,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":153,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["change",{"_index":154,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["changedetectorref",{"_index":151,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["class",{"_index":54,"title":{"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["classes",{"_index":136,"title":{},"body":{"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"overview.html":{}}}],["cleanup",{"_index":11,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["comment",{"_index":294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complete",{"_index":53,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["completes",{"_index":254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["completion",{"_index":161,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["complex",{"_index":263,"title":{},"body":{"miscellaneous/functions.html":{}}}],["component",{"_index":36,"title":{"components/OnDestroyHostComponent.html":{}},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["component/directive/etc",{"_index":300,"title":{},"body":{"miscellaneous/functions.html":{}}}],["component_template",{"_index":133,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["components",{"_index":125,"title":{},"body":{"components/OnDestroyHostComponent.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["const",{"_index":84,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["constructor",{"_index":83,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["constructor(cdr",{"_index":150,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["constructor(private",{"_index":187,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["constructor(scope",{"_index":60,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["container",{"_index":109,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["containing",{"_index":279,"title":{},"body":{"miscellaneous/functions.html":{}}}],["control",{"_index":259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controlling",{"_index":290,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":57,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":103,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":77,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["data",{"_index":209,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["data$.subscribe(observer",{"_index":216,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["default",{"_index":325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["dependencies",{"_index":225,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["destroy",{"_index":69,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["destroy.ts",{"_index":8,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["destroy.ts:10",{"_index":21,"title":{},"body":{"interfaces/DestructorScope.html":{}}}],["destroy.ts:17",{"_index":137,"title":{},"body":{"classes/ScopedDestroySubject.html":{}}}],["destroy.ts:39",{"_index":128,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["destroy/on",{"_index":7,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["destroyed",{"_index":281,"title":{},"body":{"miscellaneous/functions.html":{}}}],["destruction",{"_index":27,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["destructorscope",{"_index":1,"title":{"interfaces/DestructorScope.html":{}},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["detection",{"_index":207,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["detector",{"_index":155,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["directive",{"_index":131,"title":{},"body":{"components/OnDestroyHostComponent.html":{},"miscellaneous/functions.html":{}}}],["directives",{"_index":134,"title":{},"body":{"components/OnDestroyHostComponent.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["dispatch",{"_index":236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dispatch(actiontype",{"_index":244,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["dispatcher",{"_index":252,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["dispatches",{"_index":253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dispatching",{"_index":248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["display",{"_index":74,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["dom",{"_index":81,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["don't",{"_index":282,"title":{},"body":{"miscellaneous/functions.html":{}}}],["during",{"_index":25,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["each",{"_index":202,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["early",{"_index":292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["el",{"_index":85,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["el?.remove",{"_index":89,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["element",{"_index":82,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["elementref",{"_index":37,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["emit",{"_index":50,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["emits",{"_index":162,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["emitted",{"_index":158,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["empty",{"_index":65,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["err",{"_index":165,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["error",{"_index":148,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["error(err",{"_index":163,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errors",{"_index":169,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["errorvalue",{"_index":185,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["execute",{"_index":312,"title":{},"body":{"index.html":{}}}],["existing",{"_index":97,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["explicitly",{"_index":280,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":198,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["extends",{"_index":56,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["failure",{"_index":291,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":184,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["find",{"_index":95,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["findorcreatescopedsubject",{"_index":238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findorcreatescopedsubject(component.hostview",{"_index":122,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["findorcreatescopedsubject(inject(ngmoduleref",{"_index":120,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["findorcreatescopedsubject(scope",{"_index":104,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["findscopedsubject",{"_index":240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findscopedsubject(scope",{"_index":101,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["findscopedsubjectinview",{"_index":241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["findscopedsubjectinview(ref",{"_index":115,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["found",{"_index":99,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":33,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":235,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":305,"title":{},"body":{"index.html":{}}}],["get()(...args",{"_index":223,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["gets",{"_index":167,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["getting",{"_index":301,"title":{"index.html":{}},"body":{}}],["guarantees",{"_index":266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handles",{"_index":160,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["haserror",{"_index":183,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["hook",{"_index":272,"title":{},"body":{"miscellaneous/functions.html":{}}}],["host",{"_index":66,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["hra",{"_index":68,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"dependencies.html":{}}}],["html",{"_index":130,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["htmlelement",{"_index":87,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["https://github.com/angular/angular/issues/10185",{"_index":295,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://github.com/angular/angular/issues/10185#issuecomment",{"_index":297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["immediately",{"_index":79,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["implements",{"_index":147,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["import",{"_index":35,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["important",{"_index":284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["inject",{"_index":38,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["inject(changedetectorref",{"_index":212,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["inject(elementref).nativeelement",{"_index":86,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["inject(store",{"_index":211,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["inject(viewcontainerref",{"_index":119,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["injected",{"_index":257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injection",{"_index":264,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectondestroy",{"_index":177,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["injectors/.../dispatch.ts",{"_index":237,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["injectors/.../on",{"_index":239,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["injectors/.../select",{"_index":242,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["injectors/src/lib/dispatch/dispatch.ts",{"_index":243,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["injectors/src/lib/on",{"_index":6,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["injectors/src/lib/select",{"_index":139,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["injects",{"_index":201,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":78,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/typealiases.html":{}}}],["instances",{"_index":251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["intentionally",{"_index":194,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["interface",{"_index":0,"title":{"interfaces/DestructorScope.html":{}},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"overview.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/DestructorScope.html":{}}}],["latest",{"_index":144,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["legend",{"_index":129,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["length",{"_index":117,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["level",{"_index":275,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":304,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":271,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lifetime",{"_index":260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["link",{"_index":59,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["maintain",{"_index":289,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manipulate",{"_index":286,"title":{},"body":{"miscellaneous/functions.html":{}}}],["marks",{"_index":205,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":124,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":127,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["methods",{"_index":15,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/SnapshotObserver.html":{}}}],["miscellaneous",{"_index":234,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":274,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":313,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mostly",{"_index":296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":29,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["never",{"_index":277,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":58,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":149,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["next(value",{"_index":171,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["ngmoduleref",{"_index":39,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["ngondestroy",{"_index":270,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ngxs/store",{"_index":175,"title":{},"body":{"classes/SnapshotObserver.html":{},"dependencies.html":{}}}],["notify",{"_index":156,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["null",{"_index":88,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["nx",{"_index":306,"title":{},"body":{"index.html":{}}}],["object",{"_index":10,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["observable",{"_index":43,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["observables",{"_index":90,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["observer",{"_index":142,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["observer.get.bind(observer",{"_index":217,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["ondestroy",{"_index":16,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/variables.html":{}}}],["ondestroy(cb",{"_index":17,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["ondestroyhostcomponent",{"_index":76,"title":{"components/OnDestroyHostComponent.html":{}},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["operations",{"_index":285,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":31,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["overview",{"_index":314,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":111,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["owning",{"_index":91,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":224,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":46,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["passed",{"_index":323,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["peer",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["perform",{"_index":24,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["pipe",{"_index":255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipes",{"_index":206,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["private",{"_index":182,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["properties",{"_index":317,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["query",{"_index":220,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["readonly",{"_index":188,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["ref",{"_index":113,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["ref.createcomponent(ondestroyhostcomponent",{"_index":121,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["ref.length",{"_index":118,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["register",{"_index":22,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["registered",{"_index":13,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["registers",{"_index":49,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["regular",{"_index":269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rely",{"_index":283,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removes",{"_index":80,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["replaysubject",{"_index":44,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["result",{"_index":105,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["results",{"_index":123,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":96,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["returned",{"_index":267,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":34,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["root",{"_index":273,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":310,"title":{},"body":{"index.html":{}}}],["running",{"_index":307,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":45,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["same",{"_index":218,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["scope",{"_index":26,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["scope.ondestroy",{"_index":62,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["scopeddestroysubject",{"_index":55,"title":{"classes/ScopedDestroySubject.html":{}},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["scopeddestroysubject(scope).asobservable",{"_index":106,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["scopedsubjects",{"_index":92,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/variables.html":{}}}],["scopedsubjects.get(scope",{"_index":102,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["scopedsubjects.set(scope",{"_index":107,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["search",{"_index":114,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["searching",{"_index":110,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["selector",{"_index":67,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["selectquerysnapshot",{"_index":196,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["selectquerysnapshot(selector",{"_index":222,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["selectsnapshot",{"_index":195,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["selectsnapshot(selector",{"_index":210,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["selectsnapshotselector",{"_index":199,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["service",{"_index":256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["services",{"_index":276,"title":{},"body":{"miscellaneous/functions.html":{}}}],["signatureof",{"_index":179,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["single",{"_index":51,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["snapshot",{"_index":145,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["snapshot.ts",{"_index":141,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["snapshot.ts:16",{"_index":152,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot.ts:29",{"_index":166,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot.ts:41",{"_index":172,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot.ts:50",{"_index":164,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot.ts:59",{"_index":159,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["snapshot/select",{"_index":140,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["snapshotobserver",{"_index":138,"title":{"classes/SnapshotObserver.html":{}},"body":{"classes/SnapshotObserver.html":{}}}],["snapshotobserver(cdr",{"_index":215,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["standalone",{"_index":70,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["started",{"_index":302,"title":{"index.html":{}},"body":{}}],["statetoken",{"_index":173,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/typealiases.html":{}}}],["statetoken).pipe(takeuntil(destroy",{"_index":214,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["store",{"_index":174,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["store.select(selector",{"_index":213,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["storing",{"_index":143,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["stream",{"_index":146,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["styles",{"_index":73,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["subject",{"_index":47,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["super(1",{"_index":61,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["t",{"_index":170,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["take",{"_index":287,"title":{},"body":{"miscellaneous/functions.html":{}}}],["takeuntil",{"_index":176,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["taking",{"_index":221,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["template",{"_index":72,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["test",{"_index":311,"title":{},"body":{"index.html":{}}}],["tests",{"_index":309,"title":{},"body":{"index.html":{}}}],["this.cdr?.markforcheck",{"_index":193,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.complete",{"_index":64,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["this.errorvalue",{"_index":191,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.haserror",{"_index":190,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["this.next",{"_index":63,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["this.value",{"_index":192,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["throw",{"_index":168,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["throws",{"_index":189,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["time",{"_index":203,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["tree",{"_index":126,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["tries",{"_index":94,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["true",{"_index":71,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["tslib",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":30,"title":{},"body":{"interfaces/DestructorScope.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":320,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui/theming",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["ui/utils",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["ui/utils/types",{"_index":180,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["undefined",{"_index":100,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":308,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":186,"title":{},"body":{"classes/SnapshotObserver.html":{}}}],["unless",{"_index":278,"title":{},"body":{"miscellaneous/functions.html":{}}}],["used",{"_index":258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["using",{"_index":261,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":52,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":132,"title":{},"body":{"components/OnDestroyHostComponent.html":{}}}],["variables",{"_index":324,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":318,"title":{},"body":{"properties.html":{}}}],["view",{"_index":108,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["viewcontainerref",{"_index":40,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["viewref",{"_index":41,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{}}}],["views",{"_index":112,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/functions.html":{}}}],["void",{"_index":19,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"classes/SnapshotObserver.html":{}}}],["weakmap",{"_index":93,"title":{},"body":{"interfaces/DestructorScope.html":{},"components/OnDestroyHostComponent.html":{},"classes/ScopedDestroySubject.html":{},"miscellaneous/variables.html":{}}}],["whenever",{"_index":157,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":181,"title":{},"body":{"classes/SnapshotObserver.html":{},"miscellaneous/functions.html":{}}}],["wraps",{"_index":245,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/DestructorScope.html":{"url":"interfaces/DestructorScope.html","title":"interface - DestructorScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DestructorScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/on-destroy/on-destroy.ts\n        \n\n\n            \n                Description\n            \n            \n                Object on which cleanup callbacks can be registered\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        onDestroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDestroy\n                        \n                    \n                \n            \n            \n                \nonDestroy(cb: () => void)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/on-destroy/on-destroy.ts:10\n                \n            \n\n\n            \n                \n                    Register a callback to perform cleanup during scope destruction\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cleanup callback\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Component, ElementRef, inject, NgModuleRef, ViewContainerRef, ViewRef } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup callbacks can be registered */\ninterface DestructorScope {\n  /**\n   * Register a callback to perform cleanup during scope destruction\n   * @param cb Cleanup callback\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Subject that automatically registers a cleanup function on a scope\n * During cleanup the subject will emit a single void value and then complete\n */\nclass ScopedDestroySubject extends ReplaySubject {\n  /**\n   * Create a new subject that automatically registers cleanup\n   * @param scope Scope which to link the new subject\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n/** Empty host component */\n@Component({\n  selector: 'hra-on-destroy-host',\n  standalone: true,\n  template: '',\n  styles: [':host { display: block; }'],\n})\nclass OnDestroyHostComponent {\n  /** Creates a new component instance that immediately removes its own DOM element */\n  constructor() {\n    const el = inject(ElementRef).nativeElement as HTMLElement | null;\n    el?.remove();\n  }\n}\n\n/** OnDestroy observables index by their owning scope */\nconst scopedSubjects = new WeakMap>();\n\n/**\n * Tries to find and return an existing observable associated with a scope\n * @param scope Owning scope\n * @returns The observable if found, else undefined\n */\nfunction findScopedSubject(scope: DestructorScope): Observable | undefined {\n  return scopedSubjects.get(scope);\n}\n\n/**\n * Tries to find an existing observable for the scope\n * If not found a new observable is created and associated with the scope\n * @param scope Owning scope\n * @returns The existing or new observable\n */\nfunction findOrCreateScopedSubject(scope: DestructorScope): Observable {\n  let result = scopedSubjects.get(scope);\n  if (!result) {\n    result = new ScopedDestroySubject(scope).asObservable();\n    scopedSubjects.set(scope, result);\n  }\n\n  return result;\n}\n\n/**\n * Tries to find an existing observable associated with a view container by searching all owned views\n * @param ref View container to search\n * @returns An observable if found, else undefined\n */\nfunction findScopedSubjectInView(ref: ViewContainerRef): Observable | undefined {\n  for (let index = 0, length = ref.length; index  {\n  const ref = inject(ViewContainerRef, { optional: true });\n  if (!ref) {\n    return findOrCreateScopedSubject(inject(NgModuleRef));\n  }\n\n  const result = findScopedSubjectInView(ref);\n  if (result) {\n    return result;\n  }\n\n  const component = ref.createComponent(OnDestroyHostComponent);\n  return findOrCreateScopedSubject(component.hostView);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OnDestroyHostComponent.html":{"url":"components/OnDestroyHostComponent.html","title":"component - OnDestroyHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OnDestroyHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    injectors/src/lib/on-destroy/on-destroy.ts\n\n\n\n    \n        Description\n    \n    \n        Empty host component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hra-on-destroy-host\n            \n\n\n            \n                styles\n                :host { display: block; }\n            \n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in injectors/src/lib/on-destroy/on-destroy.ts:39\n                            \n                        \n\n                \n                    \n                            Creates a new component instance that immediately removes its own DOM element\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ElementRef, inject, NgModuleRef, ViewContainerRef, ViewRef } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup callbacks can be registered */\ninterface DestructorScope {\n  /**\n   * Register a callback to perform cleanup during scope destruction\n   * @param cb Cleanup callback\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Subject that automatically registers a cleanup function on a scope\n * During cleanup the subject will emit a single void value and then complete\n */\nclass ScopedDestroySubject extends ReplaySubject {\n  /**\n   * Create a new subject that automatically registers cleanup\n   * @param scope Scope which to link the new subject\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n/** Empty host component */\n@Component({\n  selector: 'hra-on-destroy-host',\n  standalone: true,\n  template: '',\n  styles: [':host { display: block; }'],\n})\nclass OnDestroyHostComponent {\n  /** Creates a new component instance that immediately removes its own DOM element */\n  constructor() {\n    const el = inject(ElementRef).nativeElement as HTMLElement | null;\n    el?.remove();\n  }\n}\n\n/** OnDestroy observables index by their owning scope */\nconst scopedSubjects = new WeakMap>();\n\n/**\n * Tries to find and return an existing observable associated with a scope\n * @param scope Owning scope\n * @returns The observable if found, else undefined\n */\nfunction findScopedSubject(scope: DestructorScope): Observable | undefined {\n  return scopedSubjects.get(scope);\n}\n\n/**\n * Tries to find an existing observable for the scope\n * If not found a new observable is created and associated with the scope\n * @param scope Owning scope\n * @returns The existing or new observable\n */\nfunction findOrCreateScopedSubject(scope: DestructorScope): Observable {\n  let result = scopedSubjects.get(scope);\n  if (!result) {\n    result = new ScopedDestroySubject(scope).asObservable();\n    scopedSubjects.set(scope, result);\n  }\n\n  return result;\n}\n\n/**\n * Tries to find an existing observable associated with a view container by searching all owned views\n * @param ref View container to search\n * @returns An observable if found, else undefined\n */\nfunction findScopedSubjectInView(ref: ViewContainerRef): Observable | undefined {\n  for (let index = 0, length = ref.length; index  {\n  const ref = inject(ViewContainerRef, { optional: true });\n  if (!ref) {\n    return findOrCreateScopedSubject(inject(NgModuleRef));\n  }\n\n  const result = findScopedSubjectInView(ref);\n  if (result) {\n    return result;\n  }\n\n  const component = ref.createComponent(OnDestroyHostComponent);\n  return findOrCreateScopedSubject(component.hostView);\n}\n\n    \n\n\n    \n            :host { display: block; }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'OnDestroyHostComponent', 'selector': 'hra-on-destroy-host'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OnDestroyHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScopedDestroySubject.html":{"url":"classes/ScopedDestroySubject.html","title":"class - ScopedDestroySubject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScopedDestroySubject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/on-destroy/on-destroy.ts\n        \n\n\n            \n                Description\n            \n            \n                Subject that automatically registers a cleanup function on a scope\nDuring cleanup the subject will emit a single void value and then complete\n\n            \n\n            \n                Extends\n            \n            \n                    ReplaySubject\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scope: DestructorScope)\n                    \n                \n                        \n                            \n                                Defined in injectors/src/lib/on-destroy/on-destroy.ts:17\n                            \n                        \n\n                \n                    \n                            Create a new subject that automatically registers cleanup\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        DestructorScope\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scope which to link the new subject\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ElementRef, inject, NgModuleRef, ViewContainerRef, ViewRef } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n/** Object on which cleanup callbacks can be registered */\ninterface DestructorScope {\n  /**\n   * Register a callback to perform cleanup during scope destruction\n   * @param cb Cleanup callback\n   */\n  onDestroy(cb: () => void): void;\n}\n\n/**\n * Subject that automatically registers a cleanup function on a scope\n * During cleanup the subject will emit a single void value and then complete\n */\nclass ScopedDestroySubject extends ReplaySubject {\n  /**\n   * Create a new subject that automatically registers cleanup\n   * @param scope Scope which to link the new subject\n   */\n  constructor(scope: DestructorScope) {\n    super(1);\n\n    scope.onDestroy(() => {\n      this.next();\n      this.complete();\n    });\n  }\n}\n\n/** Empty host component */\n@Component({\n  selector: 'hra-on-destroy-host',\n  standalone: true,\n  template: '',\n  styles: [':host { display: block; }'],\n})\nclass OnDestroyHostComponent {\n  /** Creates a new component instance that immediately removes its own DOM element */\n  constructor() {\n    const el = inject(ElementRef).nativeElement as HTMLElement | null;\n    el?.remove();\n  }\n}\n\n/** OnDestroy observables index by their owning scope */\nconst scopedSubjects = new WeakMap>();\n\n/**\n * Tries to find and return an existing observable associated with a scope\n * @param scope Owning scope\n * @returns The observable if found, else undefined\n */\nfunction findScopedSubject(scope: DestructorScope): Observable | undefined {\n  return scopedSubjects.get(scope);\n}\n\n/**\n * Tries to find an existing observable for the scope\n * If not found a new observable is created and associated with the scope\n * @param scope Owning scope\n * @returns The existing or new observable\n */\nfunction findOrCreateScopedSubject(scope: DestructorScope): Observable {\n  let result = scopedSubjects.get(scope);\n  if (!result) {\n    result = new ScopedDestroySubject(scope).asObservable();\n    scopedSubjects.set(scope, result);\n  }\n\n  return result;\n}\n\n/**\n * Tries to find an existing observable associated with a view container by searching all owned views\n * @param ref View container to search\n * @returns An observable if found, else undefined\n */\nfunction findScopedSubjectInView(ref: ViewContainerRef): Observable | undefined {\n  for (let index = 0, length = ref.length; index  {\n  const ref = inject(ViewContainerRef, { optional: true });\n  if (!ref) {\n    return findOrCreateScopedSubject(inject(NgModuleRef));\n  }\n\n  const result = findScopedSubjectInView(ref);\n  if (result) {\n    return result;\n  }\n\n  const component = ref.createComponent(OnDestroyHostComponent);\n  return findOrCreateScopedSubject(component.hostView);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnapshotObserver.html":{"url":"classes/SnapshotObserver.html","title":"class - SnapshotObserver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnapshotObserver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            injectors/src/lib/select-snapshot/select-snapshot.ts\n        \n\n\n            \n                Description\n            \n            \n                Observer storing the latest value from a snapshot stream\n\n            \n\n\n            \n                Implements\n            \n            \n                        Observer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                complete\n                            \n                            \n                                error\n                            \n                            \n                                get\n                            \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef | null)\n                    \n                \n                        \n                            \n                                Defined in injectors/src/lib/select-snapshot/select-snapshot.ts:16\n                            \n                        \n\n                \n                    \n                            Creates a new SnapshotObserver\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detector to notify whenever a new value is emitted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        complete\n                        \n                    \n                \n            \n            \n                \ncomplete()\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select-snapshot/select-snapshot.ts:59\n                \n            \n\n\n            \n                \n                    Handles completion emits\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(err)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select-snapshot/select-snapshot.ts:50\n                \n            \n\n\n            \n                \n                    Handles error emits\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The error value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select-snapshot/select-snapshot.ts:29\n                \n            \n\n\n            \n                \n                    Gets the latest value or throw on errors\n\n\n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        The latest value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(value: T)\n                \n            \n\n\n            \n                \n                    Defined in injectors/src/lib/select-snapshot/select-snapshot.ts:41\n                \n            \n\n\n            \n                \n                    Handles value emits\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, inject } from '@angular/core';\nimport { StateToken, Store } from '@ngxs/store';\nimport { Observer, takeUntil } from 'rxjs';\n\nimport { injectOnDestroy } from '../on-destroy/on-destroy';\n\nimport type { Any, AnyFunction, SignatureOf } from '@hra-ui/utils/types';\n\n/** Observer storing the latest value from a snapshot stream */\nclass SnapshotObserver implements Observer {\n  /** Whether an error has been emitted */\n  private hasError = false;\n  /** The latest value */\n  private value?: T = undefined;\n  /** The error value if `hasError === true` */\n  private errorValue?: unknown;\n\n  /**\n   * Creates a new SnapshotObserver\n   * @param cdr Change detector to notify whenever a new value is emitted\n   */\n  constructor(private readonly cdr: ChangeDetectorRef | null) {}\n\n  /**\n   * Gets the latest value or throw on errors\n   * @returns The latest value\n   * @throws If an error has been emitted\n   */\n  get(): T {\n    if (this.hasError) {\n      throw this.errorValue;\n    }\n\n    return this.value as T;\n  }\n\n  /**\n   * Handles value emits\n   * @param value The new value\n   */\n  next(value: T): void {\n    this.value = value;\n    this.cdr?.markForCheck();\n  }\n\n  /**\n   * Handles error emits\n   * @param err The error value\n   */\n  error(err: unknown): void {\n    this.hasError = true;\n    this.value = undefined;\n    this.errorValue = err;\n  }\n\n  /**\n   * Handles completion emits\n   */\n  complete(): void {\n    // Intentionally empty\n  }\n}\n\n/** Type of `selectSnapshot` and `selectQuerySnapshot` selector argument */\nexport type SelectSnapshotSelector = ((...args: Any[]) => T) | StateToken;\n\n/**\n * Injects a function that returns the latest snapshot value each time it is called\n * Automatically marks components, directives, or pipes for change detection whenever\n * a new value is available\n * @param selector Store data selector\n * @returns A snapshot function\n */\nexport function selectSnapshot(selector: SelectSnapshotSelector): () => T {\n  const store = inject(Store);\n  const cdr = inject(ChangeDetectorRef, { optional: true });\n  const destroy$ = injectOnDestroy();\n  const data$ = store.select(selector as StateToken).pipe(takeUntil(destroy$));\n  const observer = new SnapshotObserver(cdr);\n\n  data$.subscribe(observer);\n  return observer.get.bind(observer);\n}\n\n/**\n * Injects a function that can be called with the same arguments as the query selector\n * and returns the latest value each time\n * Automatically marks components, directives, or pipes for change detection whenever\n * a new value is available\n * @param selector Store query selector\n * @returns A snapshot function taking the same arguments as the query selector\n */\nexport function selectQuerySnapshot(selector: SelectSnapshotSelector): SignatureOf {\n  const get = selectSnapshot(selector);\n  return ((...args) => get()(...args)) as SignatureOf;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @ngxs/store : ^3.7.6\n        \n            @hra-ui/theming : *\n        \n            @hra-ui/utils : *\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dispatch   (injectors/.../dispatch.ts)\n                        \n                        \n                            findOrCreateScopedSubject   (injectors/.../on-destroy.ts)\n                        \n                        \n                            findScopedSubject   (injectors/.../on-destroy.ts)\n                        \n                        \n                            findScopedSubjectInView   (injectors/.../on-destroy.ts)\n                        \n                        \n                            injectOnDestroy   (injectors/.../on-destroy.ts)\n                        \n                        \n                            selectQuerySnapshot   (injectors/.../select-snapshot.ts)\n                        \n                        \n                            selectSnapshot   (injectors/.../select-snapshot.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    injectors/src/lib/dispatch/dispatch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(actionType: A)\n                \n            \n\n\n\n\n            \n                \n                    Wraps an action constructor with automatic dispatching on each call to the function.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    actionType\n                                    \n                                            A\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action constructor to create new instances\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Dispatcher\n\n                    \n                    \n                        A function that dispatches an action on the store each time it is called\n\n                    \n                \n            \n        \n    \n    injectors/src/lib/on-destroy/on-destroy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findOrCreateScopedSubject\n                        \n                    \n                \n            \n            \n                \nfindOrCreateScopedSubject(scope: DestructorScope)\n                \n            \n\n\n\n\n            \n                \n                    Tries to find an existing observable for the scope\nIf not found a new observable is created and associated with the scope\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                DestructorScope\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Owning scope\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The existing or new observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findScopedSubject\n                        \n                    \n                \n            \n            \n                \nfindScopedSubject(scope: DestructorScope)\n                \n            \n\n\n\n\n            \n                \n                    Tries to find and return an existing observable associated with a scope\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                DestructorScope\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Owning scope\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        The observable if found, else undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findScopedSubjectInView\n                        \n                    \n                \n            \n            \n                \nfindScopedSubjectInView(ref: ViewContainerRef)\n                \n            \n\n\n\n\n            \n                \n                    Tries to find an existing observable associated with a view container by searching all owned views\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        View container to search\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        An observable if found, else undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injectOnDestroy\n                        \n                    \n                \n            \n            \n                \ninjectOnDestroy()\n                \n            \n\n\n\n\n            \n                \n                    Inject an observable that emits and completes at the same time as the component, directive, pipe, or service\nit is injected into. It can be used to control the lifetime of other observables using\nthe takeUntil pipe, and to build other complex injection functions.\nCaveats:\n\nThere are NO guarantees about whether the returned observable will emit and complete\nbefore or after the regular ngOnDestroy lifecycle hook\nFor root and module level services the observable may never complete unless\nthe containing module is explicitly destroyed, so don't rely on it for important operations\nComponents, directives, pipe, and services that manipulate the ViewContainerRef MUST\ntake care to maintain the view controlling the lifecycle of the observable. Failure\nto do so may result in early emit and completion of the returned observable\n\nBased on comment on https://github.com/angular/angular/issues/10185\nMostly https://github.com/angular/angular/issues/10185#issuecomment-1165545544 and\nhttps://github.com/angular/angular/issues/10185#issuecomment-1199063426\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that emits and completes when the component/directive/etc. is destroyed\n\n                    \n                \n            \n        \n    \n    injectors/src/lib/select-snapshot/select-snapshot.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectQuerySnapshot\n                        \n                    \n                \n            \n            \n                \nselectQuerySnapshot(selector: SelectSnapshotSelector)\n                \n            \n\n\n\n\n            \n                \n                    Injects a function that can be called with the same arguments as the query selector\nand returns the latest value each time\nAutomatically marks components, directives, or pipes for change detection whenever\na new value is available\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                SelectSnapshotSelector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Store query selector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SignatureOf\n\n                    \n                    \n                        A snapshot function taking the same arguments as the query selector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSnapshot\n                        \n                    \n                \n            \n            \n                \nselectSnapshot(selector: SelectSnapshotSelector)\n                \n            \n\n\n\n\n            \n                \n                    Injects a function that returns the latest snapshot value each time it is called\nAutomatically marks components, directives, or pipes for change detection whenever\na new value is available\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                SelectSnapshotSelector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Store data selector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        A snapshot function\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncdk\nThis library was generated with Nx.\nRunning unit tests\nRun nx test cdk to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Dispatcher   (injectors/.../dispatch.ts)\n                        \n                        \n                            SelectSnapshotSelector   (injectors/.../select-snapshot.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    injectors/src/lib/dispatch/dispatch.ts\n    \n    \n        \n            \n                \n                    \n                    Dispatcher\n                \n            \n            \n                \n                    Function type returned by dispatch(actionType).\nAccepts the same arguments as the passed action constructor and\nreturns an instance of the action.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    injectors/src/lib/select-snapshot/select-snapshot.ts\n    \n    \n        \n            \n                \n                    \n                    SelectSnapshotSelector\n                \n            \n            \n                \n                    Type of selectSnapshot and selectQuerySnapshot selector argument\n\n                \n            \n            \n                \n                         | StateToken\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            scopedSubjects   (injectors/.../on-destroy.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    injectors/src/lib/on-destroy/on-destroy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scopedSubjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WeakMap>()\n                    \n                \n\n            \n                \n                    OnDestroy observables index by their owning scope\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
