var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Add.html",[0,0.092,1,1.32]],["body/classes/Add.html",[0,0.128,1,2.211,2,0.704,3,0.305,4,0.421,5,0.264,6,2.68,7,2.68,8,2.767,9,0.304,10,0.901,11,3.735,12,2.607,13,3.275,14,4.017,15,0.77,16,0.589,17,1.825,18,3.159,19,2.037,20,0.417,21,1.061,22,2.767,23,0.724,24,4.466,25,3.682,26,3.275,27,0.486,28,0.032,29,0.486,30,0.305,31,1.903,32,2.065,33,3.253,34,0.833,35,1.931,36,1.352,37,0.305,38,2.144,39,0.412,40,1.035,41,1.061,42,2.411,43,1.149,44,2.411,45,2.368,46,2.411,47,2.411,48,2.411,49,2.065,50,2.767,51,0.021,52,0.021]],["title/classes/AddEntry.html",[0,0.092,53,1.713]],["body/classes/AddEntry.html",[0,0.155,1,1.833,2,0.709,3,0.307,4,0.227,5,0.358,9,0.227,10,0.797,15,0.718,19,1.255,20,0.227,21,1.626,23,0.54,27,0.489,28,0.032,29,0.489,30,0.307,37,0.414,39,0.5,40,1.039,41,1.626,51,0.021,52,0.021,53,2.379,54,1.945,55,2.071,56,2.436,57,3.332,58,2.743,59,3.168,60,3.332,61,2.907,62,1.689,63,1.767,64,1.157,65,1.255,66,2.173,67,1.767,68,1.48,69,0.91,70,1.945,71,2.619,72,2.592,73,1.767,74,2.043,75,2.159,76,1.993,77,1.993,78,1.91,79,2.159,80,1.945,81,1.157,82,1.767,83,2.159,84,2.159,85,2.159]],["title/injectables/CellSummaryState.html",[86,1.122,87,2.702]],["body/injectables/CellSummaryState.html",[0,0.06,3,0.193,4,0.142,5,0.167,9,0.142,10,0.642,15,0.658,16,0.373,20,0.218,23,0.52,27,0.471,28,0.032,29,0.573,30,0.296,31,1.468,34,1.187,36,0.855,37,0.403,39,0.193,43,1.114,51,0.015,52,0.015,55,1.114,62,1.468,69,1.706,81,1.638,86,1.114,87,2.683,88,1.109,89,1.889,90,1.889,91,2.093,92,2.337,93,2.409,94,1.701,95,1.519,96,1.311,97,3.224,98,3.208,99,3.208,100,2.552,101,0.93,102,3.208,103,2.093,104,2.337,105,2.409,106,3.208,107,1.221,108,1.646,109,1.872,110,2.093,111,2.527,112,2.752,113,2.5,114,2.093,115,2.093,116,2.093,117,2.079,118,1.525,119,2.093,120,1.356,121,3.208,122,1.525,123,1.013,124,0.788,125,2.093,126,1.872,127,1.872,128,1.356,129,1.525,130,1.356,131,2.277,132,2.093,133,3.208,134,3.262,135,2.752,136,2.093,137,2.093,138,3.9,139,2.093,140,3.356,141,3.224,142,2.093,143,2.093,144,2.093,145,1.75,146,2.752,147,2.093,148,2.079,149,2.093,150,3.208,151,0.788,152,1.013,153,1.525,154,1.872,155,2.093,156,3.208,157,1.733,158,2.093,159,3.9,160,2.093,161,2.093,162,2.093,163,3.208,164,2.079,165,3.208,166,3.208,167,1.221,168,3.208,169,2.093,170,3.208,171,2.093,172,2.093,173,2.093,174,2.093,175,3.208,176,2.093,177,1.356,178,2.093,179,2.093,180,2.093,181,3.208,182,1.75,183,2.093,184,3.208,185,2.093,186,3.208,187,4.373,188,2.093,189,2.093,190,2.093,191,2.093,192,2.093,193,2.093,194,2.093,195,2.093,196,3.208,197,2.093,198,2.093,199,2.093,200,3.208,201,2.093,202,2.093,203,2.093,204,2.093]],["title/interfaces/CellSummaryStateModel.html",[128,2.094,205,1.32]],["body/interfaces/CellSummaryStateModel.html",[3,0.216,4,0.159,5,0.187,9,0.159,15,0.462,16,0.417,17,1.891,20,0.402,28,0.032,30,0.216,31,1.743,32,1.891,34,0.589,36,0.957,37,0.216,39,0.53,51,0.017,52,0.017,55,1.72,62,1.743,68,1.04,69,1.14,81,1.213,89,1.134,90,1.134,93,2.678,94,1.851,95,1.451,105,2.922,111,1.517,112,3.031,113,1.241,117,2.706,120,2.263,122,3.373,126,2.038,127,3.031,128,3,131,3.031,135,3.359,140,2.263,141,2.263,146,2.438,148,3.365,151,2.199,153,3.373,164,2.263,167,2.891,177,2.263,205,2.023,206,1.367,207,1.517,208,2.921,209,2.921,210,2.921,211,2.921,212,3.042,213,2.263,214,3.783,215,2.921,216,2.921,217,2.921,218,2.544,219,2.702,220,2.214,221,1.241,222,3.608,223,2.214,224,2.214,225,1.706,226,1.706,227,1.958,228,1.706,229,1.958,230,3.373,231,1.706,232,1.706,233,3.209,234,3.487,235,3.042,236,1.517,237,2.544,238,1.706,239,2.544,240,1.706,241,1.706,242,1.706,243,1.706,244,1.706,245,1.706,246,1.958,247,2.921,248,1.958,249,2.921,250,1.958,251,1.958]],["title/classes/ClearEntries.html",[0,0.092,82,1.713]],["body/classes/ClearEntries.html",[0,0.158,1,1.425,2,0.742,3,0.322,4,0.237,5,0.369,9,0.237,10,0.812,15,0.731,19,1.313,21,1.118,28,0.032,37,0.426,39,0.51,40,1.072,41,1.664,51,0.022,52,0.022,53,1.849,54,2.036,55,1.803,56,2.464,58,2.514,59,2.7,61,2.26,62,1.313,63,1.849,64,1.212,65,1.313,66,2.24,67,1.849,68,1.549,69,0.952,70,2.036,71,2.7,72,2.626,73,1.849,74,2.081,75,2.26,76,2.055,77,2.055,78,1.954,79,2.26,80,2.7,81,1.607,82,2.453,83,2.26,84,2.26,85,2.26]],["title/classes/ComputeAggregate.html",[0,0.092,97,2.094]],["body/classes/ComputeAggregate.html",[0,0.13,2,0.724,3,0.314,4,0.231,5,0.272,9,0.309,10,0.838,15,0.602,20,0.231,21,1.092,23,0.552,27,0.5,28,0.032,29,0.5,30,0.314,37,0.473,39,0.42,40,1.054,41,1.459,49,1.86,51,0.022,52,0.022,63,1.805,64,1.182,65,1.282,69,0.93,74,1.714,78,1.714,89,2.204,90,2.204,93,2.483,94,2.413,95,2.183,97,3.547,104,3.316,105,2.843,118,3.988,129,2.48,131,3.33,151,1.282,220,1.805,221,1.805,223,2.719,224,1.805,252,2.48,253,4.578,254,4.157,255,3.404,256,3.404,257,4.289,258,2.48,259,2.206,260,2.48,261,3.316,262,2.847,263,2.48,264,2.847]],["title/injectables/ContactState.html",[86,1.122,265,2.702]],["body/injectables/ContactState.html",[0,0.163,3,0.312,4,0.23,5,0.27,9,0.23,10,0.836,15,0.775,16,0.602,19,1.273,20,0.23,23,0.548,27,0.496,28,0.031,29,0.802,30,0.312,37,0.525,39,0.312,51,0.022,52,0.022,64,1.174,86,1.896,88,1.792,96,1.851,100,3.186,101,1.501,108,1.273,123,1.637,124,1.273,154,1.973,157,1.501,218,3.3,265,4.565,266,3.38,267,4.53,268,4.9,269,5.459,270,4.565,271,4.53,272,5.459,273,4.431,274,4.53,275,1.501,276,4.53,277,3.38,278,3.788,279,3.722,280,4.53,281,3.788,282,3.38,283,3.722,284,2.935,285,2.827,286,2.462,287,3.38,288,3.38,289,3.38,290,3.38]],["title/classes/Download.html",[0,0.092,56,1.32]],["body/classes/Download.html",[0,0.156,1,1.378,2,0.718,3,0.311,4,0.229,5,0.408,9,0.229,10,0.835,15,0.675,19,1.27,20,0.229,21,1.45,23,0.547,27,0.495,28,0.032,29,0.495,30,0.311,37,0.417,39,0.503,40,1.048,41,1.636,51,0.021,52,0.021,53,1.788,54,1.968,55,1.773,56,2.516,58,2.754,59,2.64,61,2.185,62,1.27,63,1.788,64,1.171,65,1.27,66,2.19,67,1.788,68,1.498,69,0.921,70,1.968,71,2.64,72,2.657,73,1.788,74,2.053,75,2.185,76,2.267,77,2.267,78,1.921,79,2.185,80,1.968,81,1.171,82,1.788,83,2.185,84,2.185,85,2.185,291,2.82,292,3.372]],["title/classes/DownloadSelectors.html",[0,0.092,293,2.702]],["body/classes/DownloadSelectors.html",[0,0.107,2,0.797,3,0.345,4,0.255,5,0.299,9,0.255,15,0.711,16,0.667,18,3.137,20,0.255,23,0.607,27,0.55,28,0.032,29,0.55,30,0.345,37,0.447,39,0.345,40,0.868,51,0.023,52,0.023,56,1.98,66,2.85,67,1.986,69,1.324,72,2.726,81,1.684,96,1.98,101,1.664,108,1.825,124,1.41,157,1.664,275,1.664,293,4.054,294,3.746,295,4.753,296,5.042,297,3.915,298,4.848,299,4.14,300,3.915,301,3.746,302,3.746,303,3.746,304,3.746]],["title/classes/DownloadState.html",[0,0.092,305,2.702]],["body/classes/DownloadState.html",[0,0.047,1,1.077,2,0.347,3,0.15,4,0.111,5,0.415,9,0.111,10,0.387,15,0.703,16,0.29,19,0.614,20,0.284,23,0.678,27,0.614,28,0.032,29,0.719,30,0.385,34,0.959,35,1.936,37,0.452,39,0.15,40,1.31,45,1.758,51,0.013,52,0.013,53,2.371,55,1.553,56,2.462,58,1.276,62,1.434,67,0.864,69,1.504,71,1.538,72,2.481,73,2.371,80,1.538,81,0.915,82,1.758,95,0.915,96,1.077,101,1.692,107,3.102,108,1.684,109,3.034,123,0.79,124,0.614,130,1.057,151,0.614,154,2.223,157,1.473,182,1.364,275,1.473,278,1.364,283,2.775,284,1.708,286,1.188,295,1.364,297,2.416,299,1.188,305,2.204,306,1.631,307,2.204,308,2.416,309,2.635,310,1.92,311,2.204,312,2.204,313,2.204,314,2.204,315,4.181,316,2.635,317,4.83,318,2.635,319,1.631,320,2.635,321,2.635,322,1.631,323,2.635,324,2.635,325,2.635,326,1.631,327,2.775,328,2.635,329,2.635,330,1.631,331,2.635,332,2.635,333,2.635,334,2.635,335,2.635,336,1.631,337,1.364,338,1.364,339,1.364,340,1.364,341,1.631,342,1.364,343,1.364,344,1.631,345,1.631,346,2.204,347,1.364,348,1.631,349,1.631,350,1.631,351,3.316,352,2.774,353,1.631,354,1.631,355,1.631,356,2.635,357,1.631,358,1.631,359,1.631,360,2.635,361,1.987,362,5.197,363,2.635,364,1.631,365,1.631,366,1.631,367,1.631,368,1.631,369,1.631,370,1.631,371,1.631,372,2.635,373,3.316,374,1.631,375,1.364,376,1.631,377,1.631,378,1.631,379,1.631,380,1.631,381,1.631,382,1.631,383,1.631,384,1.631,385,1.631,386,1.631,387,1.631,388,1.631,389,1.631,390,1.631,391,1.631,392,1.631,393,3.316,394,1.631,395,1.631,396,1.631,397,1.631,398,1.631,399,1.631,400,1.631,401,1.631,402,1.631,403,1.631,404,1.631,405,1.631,406,1.631,407,1.631,408,1.631,409,1.631,410,1.631,411,1.364,412,1.364]],["title/interfaces/GradientPoint.html",[111,2.094,205,1.32]],["body/interfaces/GradientPoint.html",[3,0.222,4,0.164,5,0.192,9,0.164,15,0.318,16,0.428,17,1.733,20,0.404,28,0.032,30,0.222,31,1.766,32,1.916,34,1.068,36,0.983,37,0.222,39,0.534,51,0.017,52,0.017,55,1.474,62,1.766,68,1.068,69,1.159,81,1.237,89,1.165,90,1.165,93,2.629,94,1.889,95,1.237,105,2.699,111,2.308,112,3.429,113,2.249,117,3.517,120,1.558,122,4.061,126,2.079,127,2.738,128,2.308,131,2.079,135,3.323,140,2.308,141,2.308,146,2.476,148,3.04,151,2.098,153,2.595,164,2.308,167,2.738,177,2.308,205,2.046,206,1.404,207,1.558,208,2.011,209,2.011,210,2.011,211,2.011,212,2.595,213,1.558,214,3.649,215,2.011,216,2.011,217,2.011,218,1.752,219,2.476,220,2.249,221,1.275,222,3.649,223,2.249,224,2.249,225,1.752,226,1.752,227,2.011,228,1.752,229,2.011,230,3.417,231,1.752,232,1.752,233,3.245,234,3.517,235,3.091,236,1.558,237,2.595,238,1.752,239,2.595,240,1.752,241,1.752,242,1.752,243,1.752,244,1.752,245,1.752,246,2.979,247,3.923,248,2.979,249,3.923,250,2.979,251,2.979]],["title/interfaces/MedicalIllustrationModel.html",[205,1.32,413,2.094]],["body/interfaces/MedicalIllustrationModel.html",[3,0.477,4,0.236,5,0.368,9,0.236,16,0.618,17,1.884,20,0.39,28,0.031,30,0.544,34,1.303,37,0.32,39,0.425,43,1.602,51,0.022,52,0.022,55,1.206,69,0.948,135,2.026,152,2.859,205,2.115,206,2.026,219,2.026,220,1.84,221,1.84,223,1.84,233,2.249,234,4.177,307,3.856,310,2.529,361,2.622,413,2.988,414,1.542,415,1.542,416,2.529,417,2.445,418,2.925,419,3.446,420,2.718,421,4.611,422,2.529,423,2.903,424,2.903,425,2.903,426,2.903,427,2.903,428,2.903,429,2.903,430,2.903,431,2.903,432,2.903,433,2.903,434,2.903,435,2.903,436,2.903]],["title/classes/MedicalIllustrationSelectors.html",[0,0.092,437,2.702]],["body/classes/MedicalIllustrationSelectors.html",[0,0.099,2,0.739,3,0.32,4,0.236,5,0.413,9,0.236,15,0.61,16,0.618,18,3.446,20,0.313,23,0.748,27,0.677,28,0.032,29,0.677,30,0.425,34,1.161,37,0.477,39,0.32,43,1.602,51,0.022,52,0.022,96,1.884,101,2.048,108,2.223,124,1.307,152,2.672,157,2.048,275,2.048,296,3.856,300,2.529,361,2.451,413,3.904,414,2.3,415,2.3,417,2.925,418,2.925,420,2.3,437,3.856,438,3.471,439,4.611,440,4.611,441,3.471,442,4.611,443,3.471,444,2.026,445,2.529,446,3.471,447,4.611,448,3.471,449,3.471]],["title/injectables/MedicalIllustrationState.html",[86,1.122,445,2.354]],["body/injectables/MedicalIllustrationState.html",[0,0.075,3,0.412,4,0.179,5,0.21,9,0.179,10,0.386,15,0.647,16,0.468,19,0.989,20,0.333,23,0.724,27,0.656,28,0.032,29,0.719,30,0.412,37,0.514,39,0.35,51,0.018,52,0.018,69,0.718,86,1.32,88,1.393,92,2.769,95,0.913,96,1.553,100,2.219,101,1.984,108,1.681,109,2.219,123,1.273,124,0.989,130,1.703,152,2.163,154,1.534,157,1.167,263,3.942,275,2.174,283,3.253,284,1.703,286,1.915,337,2.198,338,2.198,346,3.179,347,2.198,361,2.174,411,2.198,412,2.198,413,1.703,414,2.174,415,2.174,417,2.594,418,2.015,419,3.03,420,1.688,422,1.915,444,1.534,445,2.769,450,2.198,451,3.801,452,3.257,453,3.257,454,3.257,455,2.628,456,4.945,457,3.801,458,2.628,459,2.463,460,2.628,461,3.801,462,3.801,463,3.253,464,2.628,465,3.801,466,2.628,467,3.801,468,2.628,469,2.463,470,2.628,471,2.628,472,2.628,473,2.628,474,2.628,475,3.179,476,4.893,477,2.198,478,2.628,479,2.628,480,3.801,481,2.628,482,2.628]],["title/classes/RegisterFormat.html",[0,0.092,73,1.713]],["body/classes/RegisterFormat.html",[0,0.156,1,1.374,2,0.716,3,0.31,4,0.229,5,0.361,9,0.229,10,0.8,15,0.721,19,1.266,20,0.229,21,1.448,23,0.545,27,0.494,28,0.032,29,0.494,30,0.31,37,0.416,39,0.502,40,1.046,41,1.634,51,0.021,52,0.021,53,1.783,54,1.963,55,1.77,56,2.39,58,2.469,59,2.636,61,2.18,62,1.266,63,1.783,64,1.168,65,1.266,66,2.639,67,1.783,68,1.494,69,0.919,70,1.963,71,3.18,72,2.734,73,2.394,74,2.051,75,2.18,76,2.264,77,2.264,78,1.919,79,2.18,80,1.963,81,1.168,82,1.783,83,2.18,84,2.18,85,2.18,291,2.813,483,3.364]],["title/classes/SendMessage.html",[0,0.092,273,2.354]],["body/classes/SendMessage.html",[0,0.16,2,0.866,3,0.375,4,0.277,5,0.325,9,0.277,10,0.598,20,0.38,21,1.791,23,0.66,25,3.722,27,0.598,28,0.031,29,0.598,30,0.375,37,0.471,39,0.375,41,1.305,51,0.024,52,0.024,64,1.775,65,1.532,74,1.532,78,1.532,205,2.088,270,4.273,273,3.722,279,4.397,281,3.403,285,3.403,313,4.273,484,4.069,485,5.11,486,5.11,487,5.11,488,4.069,489,6.16,490,4.069,491,4.069]],["title/classes/Set.html",[0,0.092,49,1.32]],["body/classes/Set.html",[0,0.123,1,1.763,2,0.67,3,0.29,4,0.425,5,0.251,6,2.81,7,2.81,8,2.632,9,0.293,10,0.891,11,2.632,12,1.837,13,3.192,14,4.018,15,0.777,16,0.561,17,1.763,18,3.094,19,1.996,20,0.417,21,1.009,22,2.632,23,0.799,25,3.589,26,3.192,27,0.462,28,0.031,29,0.462,30,0.29,31,1.996,32,2.166,33,2.293,34,0.792,35,1.837,36,1.286,37,0.29,38,2.039,39,0.398,40,1,41,1.009,42,3.144,43,1.499,44,3.144,45,2.944,46,3.144,47,3.144,48,3.144,49,2.4,50,2.632,51,0.02,52,0.02,492,4.316,493,4.316,494,3.147]],["title/classes/SetActiveNode.html",[0,0.092,452,1.886]],["body/classes/SetActiveNode.html",[0,0.145,2,0.713,3,0.309,4,0.228,5,0.359,9,0.228,10,0.833,20,0.228,21,1.073,23,0.543,27,0.492,28,0.032,29,0.492,30,0.309,34,1.133,37,0.415,39,0.469,40,1.178,41,1.63,43,1.766,49,2.439,51,0.021,52,0.021,64,1.163,65,1.261,74,1.914,76,2.415,77,2.415,78,1.914,152,2.463,361,2.415,414,1.999,415,1.999,417,1.775,418,2.883,419,3.542,420,2.415,444,1.954,452,2.627,453,1.954,454,1.954,459,3.676,469,3.295,495,2.439,496,3.523,497,3.348,498,3.348,499,2.8,500,3.704]],["title/classes/SetData.html",[0,0.092,261,2.354]],["body/classes/SetData.html",[0,0.132,2,0.737,3,0.319,4,0.235,5,0.276,9,0.313,10,0.843,15,0.458,20,0.235,21,1.11,23,0.561,27,0.508,28,0.032,29,0.508,30,0.319,37,0.477,39,0.424,40,1.066,41,1.476,49,2.252,51,0.022,52,0.022,63,1.836,64,1.203,65,1.304,69,0.946,74,1.733,78,1.733,89,2.229,90,2.229,93,2.229,94,1.836,95,2.204,97,2.983,104,2.522,105,2.505,118,3.354,129,2.522,131,3.019,151,1.947,220,1.836,221,1.836,223,1.836,224,1.836,252,2.522,253,3.85,254,4.386,257,4.325,258,2.522,259,2.244,260,2.522,261,4.015,262,2.896,263,3.354,264,2.896,501,3.463,502,3.463]],["title/classes/SetMapping.html",[0,0.092,453,1.886]],["body/classes/SetMapping.html",[0,0.146,2,0.718,3,0.311,4,0.229,5,0.408,9,0.229,10,0.835,20,0.229,21,1.081,23,0.547,27,0.495,28,0.032,29,0.495,30,0.311,34,1.373,37,0.417,39,0.47,40,1.182,41,1.636,43,1.571,49,2.443,51,0.021,52,0.021,64,1.171,65,1.27,74,1.921,76,2.422,77,2.422,78,1.921,152,2.754,361,2.526,414,2.009,415,2.009,417,1.788,418,2.891,419,3.32,420,2.009,444,1.968,452,1.968,453,2.64,454,1.968,459,3.307,469,3.307,495,2.456,496,3.534,500,3.718,503,2.82,504,3.372]],["title/classes/SetUri.html",[0,0.092,454,1.886]],["body/classes/SetUri.html",[0,0.146,2,0.714,3,0.309,4,0.228,5,0.36,9,0.228,10,0.834,20,0.228,21,1.076,23,0.544,27,0.493,28,0.032,29,0.493,30,0.309,34,1.37,37,0.416,39,0.469,40,1.179,41,1.632,43,1.768,49,2.441,51,0.021,52,0.021,64,1.166,65,1.263,74,1.917,76,2.418,77,2.418,78,1.917,152,2.466,361,2.522,414,2.003,415,2.003,417,1.779,418,3.01,419,3.314,420,2.003,444,1.959,452,1.959,453,1.959,454,2.631,459,3.299,469,3.679,495,2.445,496,3.527,499,2.807,500,3.709,503,2.807,505,3.356]],["title/interfaces/Source.html",[4,0.22,205,1.32]],["body/interfaces/Source.html",[3,0.356,4,0.436,5,0.308,6,2.046,7,2.046,9,0.262,10,0.567,16,0.687,17,2.018,20,0.404,28,0.031,31,1.453,32,1.576,34,1.529,37,0.356,39,0.502,51,0.023,52,0.023,100,2.884,107,2.252,124,1.453,151,2.288,205,1.576,206,2.252,506,3.227,507,4.94,508,5.082,509,5.082,510,5.746,511,4.132,512,2.5,513,3.227,514,3.227,515,3.227,516,2.811]],["title/classes/SourceListSelectors.html",[0,0.092,517,2.702]],["body/classes/SourceListSelectors.html",[0,0.154,2,0.797,3,0.345,4,0.386,5,0.299,6,2.57,7,2.57,9,0.33,13,3.141,14,3.141,15,0.779,16,0.667,18,3.137,20,0.255,23,0.607,27,0.55,28,0.031,29,0.55,30,0.345,31,2.14,32,1.98,37,0.447,38,2.427,39,0.345,40,0.868,43,1.684,51,0.023,52,0.023,95,1.974,96,1.98,101,1.664,108,1.825,124,1.41,145,4.054,151,1.825,157,1.664,300,4.288,512,3.814,517,4.054,518,3.746,519,4.848,520,4.14,521,4.848,522,4.848,523,3.746]],["title/injectables/SourceListState.html",[86,1.122,520,2.354]],["body/injectables/SourceListState.html",[0,0.084,1,2.357,3,0.271,4,0.392,5,0.235,6,2.521,7,2.521,9,0.2,10,0.432,12,3.007,13,3.338,14,3.513,15,0.818,16,0.525,20,0.28,23,0.668,26,2.671,27,0.605,28,0.032,29,0.698,30,0.38,31,1.552,32,1.684,33,2.145,37,0.5,38,1.908,39,0.271,40,1.193,42,3.003,43,1.789,44,3.753,45,2.521,46,3.003,47,3.003,48,3.003,49,2.405,51,0.02,52,0.02,77,1.831,86,1.432,88,1.561,92,3.003,95,1.432,96,1.684,101,1.831,107,2.406,108,1.552,109,2.406,123,1.426,124,1.109,130,1.908,275,1.831,339,2.463,340,2.463,352,2.463,475,3.977,512,1.908,516,4.202,520,3.003,524,2.945,525,2.945,526,4.122,527,2.945,528,2.945,529,4.122,530,2.945,531,2.945,532,3.447,533,2.945,534,2.945]],["title/injectables/StateAnalyticsPluginService.html",[86,1.122,535,2.354]],["body/injectables/StateAnalyticsPluginService.html",[0,0.06,3,0.192,4,0.142,5,0.166,9,0.217,10,0.882,12,1.216,15,0.724,16,0.371,19,1.204,20,0.405,23,0.338,26,2.071,27,0.306,28,0.032,29,0.306,30,0.192,34,0.979,35,1.216,36,2.384,37,0.402,39,0.359,40,1.198,43,1.796,45,1.695,51,0.015,52,0.015,69,1.285,86,1.634,88,1.105,95,0.724,96,1.306,108,1.772,109,2.27,113,1.695,123,1.009,124,0.784,134,3.648,151,0.784,154,2.546,157,2.09,213,2.071,254,2.329,259,1.35,275,1.728,284,1.35,308,1.518,314,1.742,327,2.834,463,1.518,496,1.35,535,2.834,536,2.329,537,4.068,538,2.329,539,1.518,540,4.362,541,5.584,542,4.362,543,3.197,544,5.335,545,4.362,546,2.083,547,3.197,548,3.197,549,5.899,550,3.89,551,3.89,552,2.083,553,3.253,554,2.083,555,3.197,556,2.674,557,2.083,558,2.083,559,2.674,560,2.674,561,2.329,562,1.742,563,2.674,564,2.329,565,1.742,566,1.742,567,1.742,568,1.742,569,1.742,570,1.742,571,1.742,572,2.083,573,2.674,574,2.674,575,2.083,576,1.742,577,3.253,578,1.742,579,1.742,580,1.742,581,2.674,582,2.674,583,2.083,584,3.197,585,2.083,586,2.083,587,2.083,588,2.083,589,2.083,590,2.083,591,2.083,592,2.083,593,2.083,594,2.083,595,2.083,596,2.083,597,2.083,598,2.083,599,2.083,600,2.083,601,2.083,602,2.083,603,2.083,604,3.197,605,3.89,606,2.083,607,2.083,608,2.083,609,2.083,610,1.742,611,1.742,612,1.742,613,1.742,614,1.742]],["title/dependencies.html",[615,2.263,616,3.246]],["body/dependencies.html",[28,0.03,51,0.027,52,0.027,123,2.397,616,4.811,617,4.95,618,4.95,619,4.95,620,4.95,621,5.752]],["title/miscellaneous/functions.html",[622,1.434,623,3.246]],["body/miscellaneous/functions.html",[9,0.281,16,0.738,20,0.351,27,0.759,28,0.031,29,0.759,30,0.476,34,1.484,36,2.3,51,0.025,52,0.025,56,2.11,58,2.005,62,2.12,72,2.294,76,1.839,108,1.945,113,2.195,275,1.839,308,3.016,536,3.016,537,4.102,538,3.016,539,3.763,561,3.016,564,3.016,565,3.462,566,3.462,567,3.462,568,3.462,569,3.462,570,3.462,571,3.462,573,3.462,574,3.462,622,2.195,623,3.462,624,5.165,625,3.016,626,5.165,627,3.462,628,3.016,629,4.14]],["title/index.html",[16,0.482,630,2.706,631,2.706]],["body/index.html",[15,0.758,28,0.027,51,0.027,52,0.027,632,4.915,633,4.915,634,5.729,635,4.915,636,5.729,637,5.729,638,4.915,639,4.111,640,4.915]],["title/modules.html",[641,3.675]],["body/modules.html",[28,0.028,51,0.028,52,0.028,641,4.305]],["title/overview.html",[642,3.675]],["body/overview.html",[2,1.072,28,0.028,51,0.028,52,0.028,88,2.671,206,2.94,642,4.213,643,5.038,644,5.038,645,5.038]],["title/properties.html",[17,1.586,615,2.263]],["body/properties.html",[17,2.08,28,0.029,51,0.028,52,0.028,646,5.092,647,5.092]],["title/miscellaneous/typealiases.html",[622,1.434,648,3.882]],["body/miscellaneous/typealiases.html",[4,0.298,6,1.703,7,1.703,10,0.472,15,0.425,16,0.572,20,0.437,28,0.021,31,1.209,32,1.312,36,1.312,51,0.021,52,0.021,55,1.115,58,2.411,59,2.905,66,2.411,68,1.427,81,1.115,89,1.555,90,1.555,93,2.709,94,2.32,100,2.905,105,2.589,107,1.875,112,1.875,126,2.554,127,2.554,146,1.875,167,1.875,177,2.836,207,3.74,219,2.554,222,4.075,223,3.187,224,1.703,225,2.34,226,2.34,228,3.188,236,3.464,299,3.894,317,4.163,414,1.944,415,1.944,416,3.188,420,1.944,450,3.66,456,3.66,506,4.163,511,3.66,512,2.836,513,2.686,514,2.686,515,2.686,516,3.188,532,2.686,622,1.703,625,4.075,628,2.34,649,3.212,650,4.678,651,3.66,652,4.376,653,4.678,654,5.593,655,5.593,656,5.345,657,2.686,658,2.686,659,2.686,660,2.686]],["title/miscellaneous/variables.html",[622,1.434,661,3.246]],["body/miscellaneous/variables.html",[5,0.113,9,0.16,10,0.651,12,0.828,15,0.188,16,0.253,17,1.23,20,0.315,28,0.031,30,0.131,31,1.319,32,1.587,34,0.882,35,3.686,36,2.554,45,0.752,51,0.011,52,0.011,54,0.828,55,0.493,56,1.23,62,2.252,66,1.139,68,0.63,70,0.828,72,1.556,81,1.046,86,0.493,89,1.139,90,1.139,93,1.139,95,0.817,105,1.139,112,1.372,113,0.752,117,0.919,120,0.919,126,0.828,127,1.372,135,3.094,140,1.523,141,1.523,146,1.372,148,1.523,151,1.747,164,1.523,167,1.372,207,2.27,212,1.033,213,0.919,214,2.552,219,0.828,220,1.857,221,1.857,224,1.596,230,2.829,231,1.033,232,1.033,233,3.118,234,3.876,235,2.194,236,0.919,237,1.713,238,1.033,239,2.194,240,1.033,241,1.033,242,1.033,243,1.033,244,1.033,245,1.033,252,1.713,258,1.033,259,1.523,260,1.033,268,1.186,279,1.033,297,2.829,310,3.38,311,1.186,312,1.186,327,2.194,342,1.966,343,1.966,361,1.044,375,3.248,414,0.63,415,0.63,416,1.713,420,1.044,422,1.033,423,1.186,424,1.186,425,1.186,426,1.186,427,1.186,428,1.186,429,1.186,430,1.186,431,1.186,432,1.186,433,1.186,434,1.186,435,1.186,436,1.186,463,1.713,477,1.966,508,1.966,509,3.501,535,1.033,536,1.713,537,3.05,538,1.033,539,2.552,553,1.966,556,1.186,559,2.518,560,2.518,561,1.033,562,1.966,563,1.186,564,1.033,576,1.186,577,2.518,578,1.186,579,1.186,580,1.186,581,1.186,582,1.186,610,1.186,611,1.966,612,1.186,613,1.186,614,1.186,622,0.752,625,2.552,627,2.518,628,1.033,639,1.186,650,2.929,651,1.186,653,2.929,657,2.929,658,2.929,659,2.929,660,2.518,661,1.186,662,3.883,663,5.982,664,1.418,665,2.351,666,5.537,667,2.351,668,1.418,669,2.351,670,2.351,671,2.351,672,2.351,673,2.351,674,2.351,675,2.351,676,2.351,677,2.351,678,2.351,679,2.351,680,2.351,681,3.883,682,2.351,683,2.351,684,4.434,685,3.503,686,3.011,687,2.351,688,3.503,689,2.351,690,1.418,691,1.418,692,1.418,693,3.011,694,1.418,695,1.418,696,1.418,697,1.418,698,3.011,699,4.812,700,4.961,701,1.418,702,3.011,703,1.418,704,1.418,705,1.418,706,1.418,707,1.418,708,1.418,709,1.418,710,1.418,711,1.418,712,1.418,713,3.503,714,1.418,715,1.418,716,1.418,717,1.418,718,1.418,719,1.418,720,1.418,721,1.418,722,1.418,723,1.418,724,1.418,725,1.418,726,1.418,727,1.418,728,2.351,729,1.418,730,1.418,731,1.418,732,1.418,733,1.418,734,1.418,735,1.418,736,1.418,737,1.418,738,1.418,739,3.503,740,1.418,741,1.418,742,1.418,743,1.418,744,1.418,745,1.418,746,1.418,747,1.418,748,2.351,749,2.351,750,1.418,751,2.351,752,1.418]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":386,"title":{},"body":{"classes/DownloadState.html":{}}}],["0.0.1",{"_index":647,"title":{},"body":{"properties.html":{}}}],["1",{"_index":182,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/DownloadState.html":{}}}],["15.1.0",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":644,"title":{},"body":{"overview.html":{}}}],["2",{"_index":172,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["2.3.0",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["2dftu",{"_index":431,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":645,"title":{},"body":{"overview.html":{}}}],["5",{"_index":643,"title":{},"body":{"overview.html":{}}}],["_ctx",{"_index":282,"title":{},"body":{"injectables/ContactState.html":{}}}],["action",{"_index":10,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action('[contact",{"_index":491,"title":{},"body":{"classes/SendMessage.html":{}}}],["action('[medical",{"_index":500,"title":{},"body":{"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["action('add",{"_index":79,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('clear",{"_index":83,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('computeaggregate",{"_index":264,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["action('download",{"_index":84,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('register",{"_index":75,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('setdata",{"_index":262,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["action(add",{"_index":526,"title":{},"body":{"injectables/SourceListState.html":{}}}],["action(addentry",{"_index":318,"title":{},"body":{"classes/DownloadState.html":{}}}],["action(clearentries",{"_index":321,"title":{},"body":{"classes/DownloadState.html":{}}}],["action(computeaggregate",{"_index":102,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["action(download",{"_index":325,"title":{},"body":{"classes/DownloadState.html":{}}}],["action(registerformat",{"_index":335,"title":{},"body":{"classes/DownloadState.html":{}}}],["action(sendmessage",{"_index":276,"title":{},"body":{"injectables/ContactState.html":{}}}],["action(set",{"_index":529,"title":{},"body":{"injectables/SourceListState.html":{}}}],["action(setactivenode",{"_index":457,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["action(setmapping",{"_index":461,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["action(seturi",{"_index":467,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["action.summaries",{"_index":132,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["action_log",{"_index":602,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["actiongroup",{"_index":63,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SetData.html":{}}}],["actiongroup('download",{"_index":70,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('resourceregistry",{"_index":260,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":327,"title":{},"body":{"classes/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":459,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["add",{"_index":1,"title":{"classes/Add.html":{}},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["add(undefined",{"_index":525,"title":{},"body":{"injectables/SourceListState.html":{}}}],["addd",{"_index":61,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["added",{"_index":33,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["addentry",{"_index":53,"title":{"classes/AddEntry.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["addentry(ctx",{"_index":316,"title":{},"body":{"classes/DownloadState.html":{}}}],["adding",{"_index":11,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["adds",{"_index":44,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["aggregate",{"_index":105,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate[string]['rows'][number",{"_index":227,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["aggregated",{"_index":216,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["aggregatedata",{"_index":133,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["aggregatedata[key",{"_index":143,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["aggregaterow",{"_index":126,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregaterow[2",{"_index":229,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["aggregaterowentry",{"_index":228,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{}}}],["alias",{"_index":511,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":649,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["along",{"_index":247,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["analytics",{"_index":537,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["anatomical_structure_of",{"_index":426,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["anchor",{"_index":396,"title":{},"body":{"classes/DownloadState.html":{}}}],["anchor.click",{"_index":401,"title":{},"body":{"classes/DownloadState.html":{}}}],["anchor.download",{"_index":399,"title":{},"body":{"classes/DownloadState.html":{}}}],["anchor.href",{"_index":400,"title":{},"body":{"classes/DownloadState.html":{}}}],["anchor.remove",{"_index":402,"title":{},"body":{"classes/DownloadState.html":{}}}],["angular/common",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":338,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["angular/core",{"_index":123,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"dependencies.html":{}}}],["another",{"_index":231,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptitle",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":515,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["array",{"_index":31,"title":{},"body":{"classes/Add.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(value",{"_index":608,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["available",{"_index":295,"title":{},"body":{"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{}}}],["b",{"_index":200,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["bar",{"_index":249,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["base",{"_index":258,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":161,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["being",{"_index":550,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["between",{"_index":119,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["bigint",{"_index":563,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["biomarker",{"_index":167,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":393,"title":{},"body":{"classes/DownloadState.html":{}}}],["blob([entry.data",{"_index":368,"title":{},"body":{"classes/DownloadState.html":{}}}],["boolean",{"_index":564,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["boolean/number/string/null/bigint/undefined",{"_index":571,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":212,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["brand('downloadformatid",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branded",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":369,"title":{},"body":{"classes/DownloadState.html":{}}}],["browser",{"_index":392,"title":{},"body":{"classes/DownloadState.html":{}}}],["builtin",{"_index":344,"title":{},"body":{"classes/DownloadState.html":{}}}],["calculates",{"_index":115,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["called",{"_index":655,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["canceluncompleted",{"_index":462,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["case",{"_index":360,"title":{},"body":{"classes/DownloadState.html":{}}}],["cell",{"_index":93,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell_schema",{"_index":230,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["cell_schema.array",{"_index":238,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["cell_summary_aggregate_schema",{"_index":239,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["cell_summary_schema",{"_index":224,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cellid",{"_index":150,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["cellsummary",{"_index":127,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cellsummary[string]['entries",{"_index":156,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["cellsummarystate",{"_index":87,"title":{"injectables/CellSummaryState.html":{}},"body":{"injectables/CellSummaryState.html":{}}}],["cellsummarystatemodel",{"_index":128,"title":{"interfaces/CellSummaryStateModel.html":{}},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["check",{"_index":567,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["class",{"_index":0,"title":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{}},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"overview.html":{}}}],["clear",{"_index":80,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["clearentries",{"_index":82,"title":{"classes/ClearEntries.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["clearentries(ctx",{"_index":320,"title":{},"body":{"classes/DownloadState.html":{}}}],["client",{"_index":474,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["color",{"_index":117,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":246,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["columnid",{"_index":168,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columnindex",{"_index":174,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columnindices",{"_index":163,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columnindices[columnid",{"_index":170,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columnlabel",{"_index":169,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columns",{"_index":141,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["columns.length",{"_index":171,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columns.push(columnlabel",{"_index":173,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["compute",{"_index":253,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["computeaggregate",{"_index":97,"title":{"classes/ComputeAggregate.html":{}},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["computeaggregate(ctx",{"_index":99,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["computes",{"_index":104,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["const",{"_index":69,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SetData.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["constant",{"_index":236,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["constructor(data",{"_index":501,"title":{},"body":{"classes/SetData.html":{}}}],["constructor(format",{"_index":291,"title":{},"body":{"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["constructor(id",{"_index":57,"title":{},"body":{"classes/AddEntry.html":{}}}],["constructor(message",{"_index":488,"title":{},"body":{"classes/SendMessage.html":{}}}],["constructor(node",{"_index":497,"title":{},"body":{"classes/SetActiveNode.html":{}}}],["constructor(public",{"_index":50,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["constructor(readonly",{"_index":41,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["constructor(sourcelist",{"_index":22,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["constructor(summaries",{"_index":255,"title":{},"body":{"classes/ComputeAggregate.html":{}}}],["constructor(url",{"_index":503,"title":{},"body":{"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["contact",{"_index":268,"title":{},"body":{"injectables/ContactState.html":{},"miscellaneous/variables.html":{}}}],["contact.actions",{"_index":287,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactacknowledgement",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactions.sendmessage",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactmessage",{"_index":489,"title":{},"body":{"classes/SendMessage.html":{}}}],["contactservice",{"_index":272,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactstate",{"_index":265,"title":{"injectables/ContactState.html":{}},"body":{"injectables/ContactState.html":{}}}],["containing",{"_index":217,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["contains",{"_index":214,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":311,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":532,"title":{},"body":{"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["conversion",{"_index":408,"title":{},"body":{"classes/DownloadState.html":{}}}],["convert",{"_index":309,"title":{},"body":{"classes/DownloadState.html":{}}}],["converted",{"_index":390,"title":{},"body":{"classes/DownloadState.html":{}}}],["corresponding",{"_index":153,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["count",{"_index":146,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["counts",{"_index":138,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["counts[rowid",{"_index":176,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["create",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid",{"_index":624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdownloadformatid('png",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid('svg",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid(id",{"_index":629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid('about",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('exploreftu",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpagereadmore",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('producttitle",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('test",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('apptitle",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('contactacknowledgement",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthdescription",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthimg",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthmoretext",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthtitle",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrodescription",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroimg",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintromoretext",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintropartners",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrotitle",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metrics",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricslogo",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricstitle",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('productlogourl",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('producttitle",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":76,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/functions.html":{}}}],["ctx",{"_index":107,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/DownloadState.html":{},"interfaces/Source.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["ctx.dispatch([new",{"_index":348,"title":{},"body":{"classes/DownloadState.html":{}}}],["ctx.getstate",{"_index":356,"title":{},"body":{"classes/DownloadState.html":{}}}],["ctx.patchstate",{"_index":144,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["ctx.setstate",{"_index":351,"title":{},"body":{"classes/DownloadState.html":{}}}],["current",{"_index":43,"title":{},"body":{"classes/Add.html":{},"injectables/CellSummaryState.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["data",{"_index":95,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetData.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":101,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["default",{"_index":35,"title":{},"body":{"classes/Add.html":{},"classes/DownloadState.html":{},"classes/Set.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["default_loggable_actions",{"_index":559,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":130,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/SourceListState.html":{}}}],["define",{"_index":653,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["defines",{"_index":257,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["dependencies",{"_index":616,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":588,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["depth",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describes",{"_index":208,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":565,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["diff",{"_index":184,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["different",{"_index":312,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":406,"title":{},"body":{"classes/DownloadState.html":{}}}],["discriminated",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispatched",{"_index":551,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["display",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.appendchild(anchor",{"_index":398,"title":{},"body":{"classes/DownloadState.html":{}}}],["document.createelement('a",{"_index":397,"title":{},"body":{"classes/DownloadState.html":{}}}],["download",{"_index":56,"title":{"classes/Download.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["download(ctx",{"_index":324,"title":{},"body":{"classes/DownloadState.html":{}}}],["download.action",{"_index":345,"title":{},"body":{"classes/DownloadState.html":{}}}],["download.model",{"_index":67,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["download_entry",{"_index":657,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format",{"_index":658,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format_id",{"_index":659,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_model",{"_index":660,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadactions.download",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadcontext",{"_index":317,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloaddata(blob",{"_index":394,"title":{},"body":{"classes/DownloadState.html":{}}}],["downloadentry",{"_index":59,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformat",{"_index":66,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadformatid",{"_index":58,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformatid:'${id",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadmodel",{"_index":299,"title":{},"body":{"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloadremotedata(url",{"_index":410,"title":{},"body":{"classes/DownloadState.html":{}}}],["downloads",{"_index":404,"title":{},"body":{"classes/DownloadState.html":{}}}],["downloadselectors",{"_index":293,"title":{"classes/DownloadSelectors.html":{}},"body":{"classes/DownloadSelectors.html":{}}}],["downloadstate",{"_index":305,"title":{"classes/DownloadState.html":{}},"body":{"classes/DownloadState.html":{}}}],["draft.entries",{"_index":355,"title":{},"body":{"classes/DownloadState.html":{}}}],["draft.entries[id",{"_index":354,"title":{},"body":{"classes/DownloadState.html":{}}}],["draft.formats[format.id",{"_index":353,"title":{},"body":{"classes/DownloadState.html":{}}}],["draft.push(...sourcelist",{"_index":533,"title":{},"body":{"injectables/SourceListState.html":{}}}],["each",{"_index":148,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["effectively",{"_index":47,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["entires",{"_index":323,"title":{},"body":{"classes/DownloadState.html":{}}}],["entries",{"_index":81,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entries.reduce>((res",{"_index":158,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["entries[format",{"_index":357,"title":{},"body":{"classes/DownloadState.html":{}}}],["entry",{"_index":55,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entry.url",{"_index":364,"title":{},"body":{"classes/DownloadState.html":{}}}],["entry?.type",{"_index":359,"title":{},"body":{"classes/DownloadState.html":{}}}],["error('cannot",{"_index":371,"title":{},"body":{"classes/DownloadState.html":{}}}],["event",{"_index":595,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["execute",{"_index":640,"title":{},"body":{"index.html":{}}}],["exist_asctb",{"_index":432,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["explore",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exploreftu",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":39,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["extends",{"_index":74,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["extension",{"_index":375,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":259,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["fakebase",{"_index":377,"title":{},"body":{"classes/DownloadState.html":{}}}],["fakebase).pathname",{"_index":381,"title":{},"body":{"classes/DownloadState.html":{}}}],["feature",{"_index":211,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["fetch",{"_index":407,"title":{},"body":{"classes/DownloadState.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":362,"title":{},"body":{"classes/DownloadState.html":{}}}],["fileurl",{"_index":409,"title":{},"body":{"classes/DownloadState.html":{}}}],["finalpercentage",{"_index":187,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["form",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":72,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["format.id",{"_index":303,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats",{"_index":297,"title":{},"body":{"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["formats(state",{"_index":298,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats.ts",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formats[id",{"_index":376,"title":{},"body":{"classes/DownloadState.html":{}}}],["formatted",{"_index":391,"title":{},"body":{"classes/DownloadState.html":{}}}],["ftu",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":572,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["functions",{"_index":623,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funtion",{"_index":570,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":196,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["ga",{"_index":585,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["generated",{"_index":633,"title":{},"body":{"index.html":{}}}],["getactiontypefrominstance",{"_index":554,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getactiontypefrominstance(action",{"_index":597,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getcellcountmap(entries",{"_index":155,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["getrowsandcolumns",{"_index":162,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["gets",{"_index":145,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/SourceListSelectors.html":{}}}],["getsourcelist",{"_index":521,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["getsourcelist(state",{"_index":522,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["getting",{"_index":630,"title":{"index.html":{}},"body":{}}],["given",{"_index":118,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["google",{"_index":540,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["googleanalyticsservice",{"_index":557,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["gradient",{"_index":122,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["gradientpoint",{"_index":111,"title":{"interfaces/GradientPoint.html":{}},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["group",{"_index":68,"title":{},"body":{"classes/AddEntry.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"interfaces/GradientPoint.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["guess",{"_index":373,"title":{},"body":{"classes/DownloadState.html":{}}}],["guessfilename(ctx",{"_index":374,"title":{},"body":{"classes/DownloadState.html":{}}}],["handle",{"_index":542,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handle(state",{"_index":543,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handler's",{"_index":514,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["handles",{"_index":547,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handling",{"_index":92,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/SourceListState.html":{}}}],["hasdata",{"_index":302,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["header",{"_index":482,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["helper",{"_index":513,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["highpoint",{"_index":183,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["highpoint.percentage",{"_index":185,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["hra",{"_index":64,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["http",{"_index":346,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["httpclient",{"_index":337,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["https://base.com",{"_index":378,"title":{},"body":{"classes/DownloadState.html":{}}}],["id",{"_index":62,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ids.ts",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustration",{"_index":418,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["illustration.actions",{"_index":472,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["illustration.actions.ts",{"_index":495,"title":{},"body":{"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["illustration.actions.ts:20",{"_index":498,"title":{},"body":{"classes/SetActiveNode.html":{}}}],["illustration.actions.ts:33",{"_index":504,"title":{},"body":{"classes/SetMapping.html":{}}}],["illustration.actions.ts:7",{"_index":505,"title":{},"body":{"classes/SetUri.html":{}}}],["illustration.model",{"_index":444,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["illustration.model.ts",{"_index":416,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["illustration.selectors.ts",{"_index":438,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["illustration.selectors.ts:14",{"_index":443,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["illustration.selectors.ts:22",{"_index":441,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["illustration.state",{"_index":446,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["illustration.state.ts",{"_index":450,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"miscellaneous/typealiases.html":{}}}],["illustration.state.ts:30",{"_index":468,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["illustration.state.ts:38",{"_index":458,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["illustration.state.ts:46",{"_index":464,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["illustration/medical",{"_index":415,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["illustrations",{"_index":451,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["image",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["immer",{"_index":340,"title":{},"body":{"classes/DownloadState.html":{},"injectables/SourceListState.html":{}}}],["implements",{"_index":314,"title":{},"body":{"classes/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"classes/Add.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":486,"title":{},"body":{"classes/SendMessage.html":{}}}],["inferred",{"_index":656,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["information",{"_index":218,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"injectables/ContactState.html":{},"interfaces/GradientPoint.html":{}}}],["init",{"_index":332,"title":{},"body":{"classes/DownloadState.html":{}}}],["initializes",{"_index":25,"title":{},"body":{"classes/Add.html":{},"classes/SendMessage.html":{},"classes/Set.html":{}}}],["inject",{"_index":284,"title":{},"body":{"injectables/ContactState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["inject(contactservice",{"_index":289,"title":{},"body":{"injectables/ContactState.html":{}}}],["inject(googleanalyticsservice",{"_index":586,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["inject(httpclient",{"_index":347,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["injectable",{"_index":86,"title":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":88,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":552,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["injectiontoken('loggable",{"_index":580,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":583,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["input",{"_index":568,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["inset",{"_index":436,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["instance",{"_index":77,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"injectables/SourceListState.html":{}}}],["interface",{"_index":205,"title":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"interfaces/Source.html":{}},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/SendMessage.html":{},"interfaces/Source.html":{}}}],["interfaces",{"_index":206,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"interfaces/Source.html":{},"overview.html":{}}}],["interpolatecolor",{"_index":98,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["interpolatecolor(points",{"_index":110,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["interpolated",{"_index":116,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["intro",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isprimitive",{"_index":626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isprimitive(value",{"_index":573,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["json.stringify(action",{"_index":599,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["key",{"_index":134,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["label",{"_index":135,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":225,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{}}}],["lanading",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landing",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthdescription",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthimg",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthmoretext",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthtitle",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedescription",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroimg",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintromoretext",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagepartners",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagereadmore",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagetitle",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library",{"_index":632,"title":{},"body":{"index.html":{}}}],["link",{"_index":508,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/variables.html":{}}}],["linkid",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkregistryactions.navigate",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":12,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["list.actions",{"_index":531,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list.actions.ts",{"_index":8,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["list.actions.ts:17",{"_index":493,"title":{},"body":{"classes/Set.html":{}}}],["list.actions.ts:22",{"_index":494,"title":{},"body":{"classes/Set.html":{}}}],["list.actions.ts:6",{"_index":24,"title":{},"body":{"classes/Add.html":{}}}],["list.model",{"_index":38,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["list.model.ts",{"_index":506,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["list.selectors.ts",{"_index":518,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["list.selectors.ts:12",{"_index":523,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["list.state.ts",{"_index":524,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list.state.ts:20",{"_index":527,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list.state.ts:34",{"_index":530,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list/source",{"_index":7,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["logaction(action",{"_index":596,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["loggable",{"_index":560,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggable_actions",{"_index":577,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggabletypes",{"_index":589,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logged",{"_index":579,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":548,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logging",{"_index":587,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["login",{"_index":610,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs",{"_index":593,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["lowpoint",{"_index":180,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["lowpoint.percentage",{"_index":186,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["managing",{"_index":267,"title":{},"body":{"injectables/ContactState.html":{}}}],["map",{"_index":422,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"injectables/MedicalIllustrationState.html":{},"miscellaneous/variables.html":{}}}],["map((result",{"_index":479,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["mapentry",{"_index":420,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mapping",{"_index":152,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["mapping(state",{"_index":439,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["matching",{"_index":52,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.round(rgb1[0",{"_index":193,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["math.round(rgb1[1",{"_index":197,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["math.round(rgb1[2",{"_index":201,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["medical",{"_index":417,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["medicalillustration",{"_index":473,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["medicalillustrationcontext",{"_index":456,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"miscellaneous/typealiases.html":{}}}],["medicalillustrationmodel",{"_index":413,"title":{"interfaces/MedicalIllustrationModel.html":{}},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{}}}],["medicalillustrationselectors",{"_index":437,"title":{"classes/MedicalIllustrationSelectors.html":{}},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["medicalillustrationstate",{"_index":445,"title":{"injectables/MedicalIllustrationState.html":{}},"body":{"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{}}}],["message",{"_index":279,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":270,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["method",{"_index":278,"title":{},"body":{"injectables/ContactState.html":{},"classes/DownloadState.html":{}}}],["methods",{"_index":96,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["metrics",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricslogo",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricstitle",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":622,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":307,"title":{},"body":{"classes/DownloadState.html":{},"interfaces/MedicalIllustrationModel.html":{}}}],["modules",{"_index":641,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":614,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":29,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["name.includes",{"_index":388,"title":{},"body":{"classes/DownloadState.html":{}}}],["name}${extension",{"_index":389,"title":{},"body":{"classes/DownloadState.html":{}}}],["needs",{"_index":604,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["new",{"_index":45,"title":{},"body":{"classes/Add.html":{},"classes/DownloadState.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":544,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["next(state",{"_index":592,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngx",{"_index":558,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxs",{"_index":331,"title":{},"body":{"classes/DownloadState.html":{}}}],["ngxs/store",{"_index":124,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["ngxs_plugins",{"_index":556,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["ngxsnextpluginfn",{"_index":545,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxsoninit",{"_index":315,"title":{},"body":{"classes/DownloadState.html":{}}}],["ngxsoninit(ctx",{"_index":329,"title":{},"body":{"classes/DownloadState.html":{}}}],["ngxsplugin",{"_index":555,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["node",{"_index":419,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["node_name",{"_index":428,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":574,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":113,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numbers",{"_index":232,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":634,"title":{},"body":{"index.html":{}}}],["object",{"_index":151,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["object.values(formats).filter(hasdata",{"_index":304,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["objects",{"_index":32,"title":{},"body":{"classes/Add.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":283,"title":{},"body":{"injectables/ContactState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["occurrences",{"_index":147,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["ones",{"_index":46,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["ontologyid",{"_index":429,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["organ_id",{"_index":425,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["organ_label",{"_index":424,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["overall",{"_index":209,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["overview",{"_index":642,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":615,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["papaparse",{"_index":471,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["param",{"_index":40,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":470,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["parse(result",{"_index":481,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["parsedresult",{"_index":480,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["parses",{"_index":465,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["partial",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partners",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchstate",{"_index":476,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["path",{"_index":379,"title":{},"body":{"classes/DownloadState.html":{}}}],["path.split('/').filter((seg",{"_index":383,"title":{},"body":{"classes/DownloadState.html":{}}}],["payload",{"_index":26,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["peer",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":112,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["percentages",{"_index":248,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["pipe",{"_index":478,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["plugin",{"_index":541,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["plugin.service.ts",{"_index":539,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["plugin.service.ts:51",{"_index":546,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["plugin/default",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin/state",{"_index":538,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png_format",{"_index":342,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["point",{"_index":251,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["point.percentage",{"_index":179,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["points",{"_index":121,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["points[index",{"_index":181,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["primitive",{"_index":561,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["primitive_types",{"_index":562,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["primitive_types.includes(typeof",{"_index":575,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["private",{"_index":154,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["produce",{"_index":339,"title":{},"body":{"classes/DownloadState.html":{},"injectables/SourceListState.html":{}}}],["produce((draft",{"_index":352,"title":{},"body":{"classes/DownloadState.html":{},"injectables/SourceListState.html":{}}}],["product",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productlogourl",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producttitle",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":17,"title":{"properties.html":{}},"body":{"classes/Add.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":510,"title":{},"body":{"interfaces/Source.html":{}}}],["provide",{"_index":612,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":581,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":553,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":578,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":492,"title":{},"body":{"classes/Set.html":{}}}],["r",{"_index":192,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["read",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":19,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/Set.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["record",{"_index":164,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["ref/1",{"_index":433,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["ref/1/doi",{"_index":434,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["ref/1/notes",{"_index":435,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":71,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["registerformat",{"_index":73,"title":{"classes/RegisterFormat.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["registerformat(ctx",{"_index":334,"title":{},"body":{"classes/DownloadState.html":{}}}],["registerformat(png_format",{"_index":350,"title":{},"body":{"classes/DownloadState.html":{}}}],["registerformat(svg_format",{"_index":349,"title":{},"body":{"classes/DownloadState.html":{}}}],["registry",{"_index":333,"title":{},"body":{"classes/DownloadState.html":{}}}],["removes",{"_index":42,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["representation_of",{"_index":430,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["representing",{"_index":222,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{}}}],["res",{"_index":160,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["res[id",{"_index":159,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["resetting",{"_index":48,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["responsetype",{"_index":412,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["rest",{"_index":244,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":51,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":519,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["return",{"_index":157,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SourceListSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["returns",{"_index":108,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["rgb1",{"_index":188,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb1[0",{"_index":195,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb1[1",{"_index":199,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb1[2",{"_index":203,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb2",{"_index":190,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb2[0",{"_index":194,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb2[1",{"_index":198,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb2[2",{"_index":202,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["root",{"_index":582,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":177,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{}}}],["row.length",{"_index":178,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rowid",{"_index":165,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rowlabel",{"_index":166,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rows",{"_index":140,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["rows[rowid",{"_index":175,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["run",{"_index":638,"title":{},"body":{"index.html":{}}}],["running",{"_index":635,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":286,"title":{},"body":{"injectables/ContactState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["save",{"_index":405,"title":{},"body":{"classes/DownloadState.html":{}}}],["schema",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seg",{"_index":384,"title":{},"body":{"classes/DownloadState.html":{}}}],["segments",{"_index":382,"title":{},"body":{"classes/DownloadState.html":{}}}],["segments.length",{"_index":385,"title":{},"body":{"classes/DownloadState.html":{}}}],["segments[segments.length",{"_index":387,"title":{},"body":{"classes/DownloadState.html":{}}}],["selected",{"_index":421,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{}}}],["selectedformat",{"_index":85,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["selector",{"_index":300,"title":{},"body":{"classes/DownloadSelectors.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/SourceListSelectors.html":{}}}],["selector(['medicalillustrationstate",{"_index":440,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["selector([medicalillustrationstate",{"_index":447,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["selectors",{"_index":296,"title":{},"body":{"classes/DownloadSelectors.html":{},"classes/MedicalIllustrationSelectors.html":{}}}],["send",{"_index":281,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sending",{"_index":269,"title":{},"body":{"injectables/ContactState.html":{}}}],["sendmessage",{"_index":273,"title":{"classes/SendMessage.html":{}},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sendmessage(_ctx",{"_index":274,"title":{},"body":{"injectables/ContactState.html":{}}}],["sends",{"_index":485,"title":{},"body":{"classes/SendMessage.html":{}}}],["serialize",{"_index":569,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["serialize(this",{"_index":606,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serialized",{"_index":605,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serializes",{"_index":603,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["service",{"_index":584,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["set",{"_index":49,"title":{"classes/Set.html":{}},"body":{"classes/Add.html":{},"classes/ComputeAggregate.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"injectables/SourceListState.html":{}}}],["set(inject(loggable_actions).map(getactiontypefrominstance",{"_index":590,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["set(undefined",{"_index":528,"title":{},"body":{"injectables/SourceListState.html":{}}}],["setactivenode",{"_index":452,"title":{"classes/SetActiveNode.html":{}},"body":{"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["setactivenode(undefined",{"_index":455,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["setdata",{"_index":261,"title":{"classes/SetData.html":{}},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["setmapping",{"_index":453,"title":{"classes/SetMapping.html":{}},"body":{"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["setmapping(undefined",{"_index":460,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["sets",{"_index":263,"title":{},"body":{"classes/ComputeAggregate.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetData.html":{}}}],["setstate",{"_index":475,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"injectables/SourceListState.html":{}}}],["setstate(sourcelist",{"_index":534,"title":{},"body":{"injectables/SourceListState.html":{}}}],["setting",{"_index":496,"title":{},"body":{"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["seturi",{"_index":454,"title":{"classes/SetUri.html":{}},"body":{"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["seturi(undefined",{"_index":466,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["shape",{"_index":210,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["single",{"_index":219,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":245,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{"interfaces/Source.html":{}},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["source_spatial_entity",{"_index":427,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["sourcelist",{"_index":14,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["sourcelistcontext",{"_index":516,"title":{},"body":{"interfaces/Source.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["sourcelistmodel",{"_index":512,"title":{},"body":{"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["sourcelistselectors",{"_index":517,"title":{"classes/SourceListSelectors.html":{}},"body":{"classes/SourceListSelectors.html":{}}}],["sourceliststate",{"_index":520,"title":{"injectables/SourceListState.html":{}},"body":{"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["sources",{"_index":13,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["specific",{"_index":250,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["specified",{"_index":328,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/.../builtin",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cell",{"_index":650,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.action.ts",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.model.ts",{"_index":625,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../link",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../medical",{"_index":651,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../source",{"_index":652,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../state",{"_index":627,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cell",{"_index":89,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.actions.ts",{"_index":484,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.actions.ts:5",{"_index":490,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.state.ts",{"_index":266,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/contact/contact.state.ts:16",{"_index":277,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/download/builtin",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts",{"_index":54,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts:10",{"_index":483,"title":{},"body":{"classes/RegisterFormat.html":{}}}],["src/lib/download/download.action.ts:23",{"_index":60,"title":{},"body":{"classes/AddEntry.html":{}}}],["src/lib/download/download.action.ts:38",{"_index":292,"title":{},"body":{"classes/Download.html":{}}}],["src/lib/download/download.model.ts",{"_index":628,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.selectors.ts",{"_index":294,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.selectors.ts:14",{"_index":301,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.state.ts",{"_index":306,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/download/download.state.ts:33",{"_index":330,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/download/download.state.ts:43",{"_index":336,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/download/download.state.ts:57",{"_index":319,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/download/download.state.ts:70",{"_index":322,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/download/download.state.ts:84",{"_index":326,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/link",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/medical",{"_index":414,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/resource",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/source",{"_index":6,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/state",{"_index":536,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":631,"title":{"index.html":{}},"body":{}}],["state",{"_index":15,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/Set.html":{},"classes/SetData.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.mapping",{"_index":449,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["state.url",{"_index":448,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["state_logger_provider",{"_index":611,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["stateanalyticspluginservice",{"_index":535,"title":{"injectables/StateAnalyticsPluginService.html":{}},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["statecontext",{"_index":100,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/MedicalIllustrationState.html":{},"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["static",{"_index":18,"title":{},"body":{"classes/Add.html":{},"classes/DownloadSelectors.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{}}}],["store",{"_index":254,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["stores",{"_index":106,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["string",{"_index":34,"title":{},"body":{"classes/Add.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":240,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":507,"title":{},"body":{"interfaces/Source.html":{}}}],["submitted",{"_index":487,"title":{},"body":{"classes/SendMessage.html":{}}}],["submitting",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summaries",{"_index":131,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{}}}],["summaries[key].entries",{"_index":137,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summaries[key].label",{"_index":136,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary",{"_index":94,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{}}}],["summary.actions",{"_index":125,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.actions.ts",{"_index":252,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{},"miscellaneous/variables.html":{}}}],["summary.actions.ts:20",{"_index":256,"title":{},"body":{"classes/ComputeAggregate.html":{}}}],["summary.actions.ts:9",{"_index":502,"title":{},"body":{"classes/SetData.html":{}}}],["summary.model",{"_index":129,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["summary.model.ts",{"_index":207,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summary.state.ts",{"_index":91,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:114",{"_index":114,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:20",{"_index":103,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary/cell",{"_index":90,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":78,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["svg",{"_index":310,"title":{},"body":{"classes/DownloadState.html":{},"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["svg_format",{"_index":343,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":358,"title":{},"body":{"classes/DownloadState.html":{}}}],["table",{"_index":215,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["tap",{"_index":341,"title":{},"body":{"classes/DownloadState.html":{}}}],["test",{"_index":639,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["testid",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":637,"title":{},"body":{"index.html":{}}}],["text",{"_index":477,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"miscellaneous/variables.html":{}}}],["this.contact.sendmessage(message",{"_index":290,"title":{},"body":{"injectables/ContactState.html":{}}}],["this.downloaddata(data",{"_index":366,"title":{},"body":{"classes/DownloadState.html":{}}}],["this.downloaddata(new",{"_index":367,"title":{},"body":{"classes/DownloadState.html":{}}}],["this.downloadremotedata(entry.url).pipe(tap((data",{"_index":365,"title":{},"body":{"classes/DownloadState.html":{}}}],["this.ga.event(type",{"_index":601,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.getcellcountmap(entries",{"_index":139,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.getrowsandcolumns(entries",{"_index":142,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.guessfilename(ctx",{"_index":363,"title":{},"body":{"classes/DownloadState.html":{}}}],["this.hextorgb(highpoint.color",{"_index":191,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.hextorgb(lowpoint.color",{"_index":189,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.http.get(url",{"_index":411,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["this.logaction(action",{"_index":591,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.loggabletypes.has(type",{"_index":598,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.rgbtohex([r",{"_index":204,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.serialize",{"_index":600,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["throw",{"_index":370,"title":{},"body":{"classes/DownloadState.html":{}}}],["title",{"_index":509,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":576,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["transform((id",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformed",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigerred",{"_index":594,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["true",{"_index":463,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["tuple([z.string",{"_index":242,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":120,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":648,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":607,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["types",{"_index":213,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":654,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typings",{"_index":423,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["ui/cdk/state",{"_index":65,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["ui/services",{"_index":285,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["undefined",{"_index":275,"title":{},"body":{"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["union",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unique",{"_index":149,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["unit",{"_index":636,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":549,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["uri",{"_index":469,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["url",{"_index":361,"title":{},"body":{"classes/DownloadState.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/variables.html":{}}}],["url(state",{"_index":442,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["url(url",{"_index":380,"title":{},"body":{"classes/DownloadState.html":{}}}],["used",{"_index":308,"title":{},"body":{"classes/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":613,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":313,"title":{},"body":{"classes/DownloadState.html":{},"classes/SendMessage.html":{}}}],["uses",{"_index":280,"title":{},"body":{"injectables/ContactState.html":{}}}],["using",{"_index":271,"title":{},"body":{"injectables/ContactState.html":{}}}],["value",{"_index":36,"title":{},"body":{"classes/Add.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"classes/Set.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.every(isprimitive",{"_index":609,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["values",{"_index":226,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{}}}],["variable",{"_index":288,"title":{},"body":{"injectables/ContactState.html":{}}}],["variables",{"_index":661,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":646,"title":{},"body":{"properties.html":{}}}],["void",{"_index":109,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["whether",{"_index":566,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["window.url.createobjecturl(blob",{"_index":395,"title":{},"body":{"classes/DownloadState.html":{}}}],["window.url.revokeobjecturl(url",{"_index":403,"title":{},"body":{"classes/DownloadState.html":{}}}],["without",{"_index":372,"title":{},"body":{"classes/DownloadState.html":{}}}],["yes",{"_index":499,"title":{},"body":{"classes/SetActiveNode.html":{},"classes/SetUri.html":{}}}],["z",{"_index":220,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/SetData.html":{},"miscellaneous/variables.html":{}}}],["z.discriminatedunion('type",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":223,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{}}}],["z.literal('data",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal('url",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number",{"_index":235,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["z.number().optional",{"_index":243,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":233,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["z.record",{"_index":237,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["z.record(download_format_id",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":234,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":241,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":221,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/SetData.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Add.html":{"url":"classes/Add.html","title":"class - Add","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Add\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                action of adding a list of sources to the SourceList state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: Source[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-list/source-list.actions.ts:6\n                            \n                        \n\n                \n                    \n                            Initializes the payload for the action\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        Source[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                array of Source objects to be added to the state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SourceList] Add'\n                    \n                \n                    \n                        \n                                Defined in src/lib/source-list/source-list.actions.ts:6\n                        \n                    \n\n            \n                \n                    Action Type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Source } from './source-list.model';\n\n/** action of adding a list of sources to the SourceList state */\nexport class Add {\n  /** Action Type  */\n  static readonly type = '[SourceList] Add';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of Source objects to be added to the state\n   */\n  constructor(readonly sourceList: Source[]) {}\n}\n\n/** An action that removes all current sources and adds new ones, effectively resetting the state */\nexport class Set {\n  /** Action Type  */\n  static readonly type = '[SourceList] Set';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of source objects to be set as the new state\n   */\n  constructor(public sourceList: Source[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddEntry.html":{"url":"classes/AddEntry.html","title":"class - AddEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Add entry into download state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: DownloadFormatId, entry: DownloadEntry)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor for Addd Entry\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        DownloadEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CellSummaryState.html":{"url":"injectables/CellSummaryState.html","title":"injectable - CellSummaryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CellSummaryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling cell summary data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeAggregate\n                            \n                            \n                                interpolateColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        computeAggregate\n                        \n                    \n                \n            \n            \n                \ncomputeAggregate(ctx: StateContext, action: ComputeAggregate)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ComputeAggregate)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:20\n                \n            \n\n\n            \n                \n                    computes aggregate data and stores in the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ComputeAggregate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interpolateColor\n                        \n                    \n                \n            \n            \n                \ninterpolateColor(points: GradientPoint[], percentage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:114\n                \n            \n\n\n            \n                \n                    Calculates the interpolated color value at the given percentage between two points in a color gradient.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n                                    \n                                                GradientPoint[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { ComputeAggregate } from './cell-summary.actions';\nimport { Aggregate, AggregateRow, CellSummary, CellSummaryStateModel, GradientPoint } from './cell-summary.model';\n\n/** State handling cell summary data */\n@State({\n  name: 'cellsummary',\n  defaults: {\n    summaries: {},\n    aggregate: {},\n  },\n})\n@Injectable()\nexport class CellSummaryState {\n  /**\n   * computes aggregate data and stores in the current state\n   */\n  @Action(ComputeAggregate)\n  computeAggregate(ctx: StateContext, action: ComputeAggregate): void {\n    const summaries = action.summaries;\n    const aggregateData: Aggregate = {};\n\n    for (const key in summaries) {\n      const label = summaries[key].label;\n      const entries = summaries[key].entries;\n\n      const counts = this.getCellCountMap(entries);\n\n      const [rows, columns] = this.getRowsAndColumns(entries, counts);\n\n      aggregateData[key] = {\n        label: label,\n        columns: columns,\n        rows: rows,\n      };\n    }\n\n    ctx.patchState({\n      aggregate: aggregateData,\n    });\n  }\n\n  /** Gets a count of the number of occurrences of each unique cellId in an array of entries,\n   * and returns an object mapping each cellId to its corresponding count. */\n  private getCellCountMap(entries: CellSummary[string]['entries']): { [key: string]: number } {\n    return entries.reduce>((res, { cell: { id }, count }) => {\n      res[id] = res[id] ? res[id] + count : count;\n      return res;\n    }, {});\n  }\n\n  /** Returns an array of rows and columns based on an array of entries */\n  private getRowsAndColumns(\n    entries: CellSummary[string]['entries'],\n    counts: { [key: string]: number }\n  ): [rows: AggregateRow[], columns: string[]] {\n    const columns: string[] = [];\n    const columnIndices: Record = {};\n    const rows: Record = {};\n\n    for (const entry of entries) {\n      const {\n        cell: { id: rowId, label: rowLabel },\n        biomarker: { id: columnId, label: columnLabel },\n      } = entry;\n\n      if (!(columnId in columnIndices)) {\n        columnIndices[columnId] = columns.length + 2;\n        columns.push(columnLabel);\n      }\n      const columnIndex = columnIndices[columnId];\n\n      if (!(rowId in rows)) {\n        rows[rowId] = [rowLabel, counts[rowId]];\n      }\n      const row = rows[rowId];\n\n      if (row.length  point.percentage >= percentage);\n    const lowPoint = points[index - 1];\n    const highPoint = points[index];\n    const diff = highPoint.percentage - lowPoint.percentage;\n    const finalPercentage = (percentage - lowPoint.percentage) / diff;\n\n    const rgb1 = this.hexToRgb(lowPoint.color);\n    const rgb2 = this.hexToRgb(highPoint.color);\n\n    const r = Math.round(rgb1[0] + (rgb2[0] - rgb1[0]) * finalPercentage);\n    const g = Math.round(rgb1[1] + (rgb2[1] - rgb1[1]) * finalPercentage);\n    const b = Math.round(rgb1[2] + (rgb2[2] - rgb1[2]) * finalPercentage);\n\n    return this.rgbToHex([r, g, b]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CellSummaryStateModel.html":{"url":"interfaces/CellSummaryStateModel.html","title":"interface - CellSummaryStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CellSummaryStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.model.ts\n        \n\n\n            \n                Description\n            \n            \n                The CellSummaryStateModel interface describes the overall shape of the state for this feature.\nIt has two properties, summaries and aggregate, both of which are of their corresponding types.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aggregate\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aggregate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggregate:         Aggregate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Aggregate\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object where each entry contains a label and a table of aggregated data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:         CellSummary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CellSummary\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object where each entry is an object containing information about a single cell and its corresponding biomarker.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { z } from 'zod';\n\n/** Type representing a single cell value */\nexport type Cell = z.infer;\n/** Type representing CELL_SUMMARY_SCHEMA which has labels and entries */\nexport type CellSummary = z.infer;\n/** Type representing an aggregate summary of cell values in a group */\nexport type Aggregate = z.infer;\n/** Type representing a row in an aggregate summary */\nexport type AggregateRow = Aggregate[string]['rows'][number];\n/** Type representing a single entry in a row with cell, biomarker, count and percentage */\nexport type AggregateRowEntry = AggregateRow[2];\n\n/**\n * The CellSummaryStateModel interface describes the overall shape of the state for this feature.\n * It has two properties, summaries and aggregate, both of which are of their corresponding types.\n */\nexport interface CellSummaryStateModel {\n  /** An object where each entry is an object containing information about a single cell and its corresponding biomarker. */\n  summaries: CellSummary;\n  /** An object where each entry contains a label and a table of aggregated data */\n  aggregate: Aggregate;\n}\n\n/**\n * The CELL_SCHEMA has an object that contains an id and a label for the cell,\n * another object that contains an id and a label for the biomarker, and a count and a percentage that are both numbers.\n */\nexport const CELL_SCHEMA = z.object({\n  cell: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  biomarker: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  count: z.number(),\n  percentage: z.number(),\n});\n\n/**\n * The CELL_SUMMARY_SCHEMA constant is a record of CellSummary objects,\n * where each CellSummary object contains a label and an array of CELL_SCHEMA objects.\n */\nexport const CELL_SUMMARY_SCHEMA = z.record(\n  z.object({\n    label: z.string(),\n    entries: CELL_SCHEMA.array(),\n  })\n);\n\n/**\n * The CELL_SUMMARY_AGGREGATE_SCHEMA is a record of Aggregate objects, where each Aggregate object contains a label,\n * an array of columns that are strings, and an array of rows that are AggregateRow objects.\n */\nexport const CELL_SUMMARY_AGGREGATE_SCHEMA = z.record(\n  z.object({\n    label: z.string(),\n    columns: z.string().array(),\n    rows: z\n      .tuple([z.string(), z.number().optional()])\n      .rest(\n        z\n          .object({\n            color: z.string(),\n            size: z.number(),\n            data: CELL_SCHEMA,\n          })\n          .optional()\n      )\n      .array(),\n  })\n);\n\n/** An interface of gradient colors along with their percentages for the gradient bar. */\nexport interface GradientPoint {\n  /** Gradient color at a specific percentage */\n  color: string;\n  /** Percentage point along the gradient bar */\n  percentage: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearEntries.html":{"url":"classes/ClearEntries.html","title":"class - ClearEntries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearEntries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Clear all entries from download state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComputeAggregate.html":{"url":"classes/ComputeAggregate.html","title":"class - ComputeAggregate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComputeAggregate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Compute aggregate of the given data and store to state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(summaries: z.infer<>)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cell-summary/cell-summary.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Defines the ComputeAggregate action, which computes aggregate data for the given summaries.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        summaries\n                                                  \n                                                        \n                                                                    z.infer<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe cell summary data to compute aggregate for.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { z } from 'zod';\nimport { CELL_SUMMARY_SCHEMA } from './cell-summary.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Set data to store */\nexport class SetData extends Action('SetData') {\n  /**\n   * Defines the SetData action, which sets data to the store.\n   * @param data - The data to set to the store.\n   */\n  constructor(readonly data: object) {\n    super();\n  }\n}\n\n/** Compute aggregate of the given data and store to state */\nexport class ComputeAggregate extends Action('ComputeAggregate') {\n  /**\n   * Defines the ComputeAggregate action, which computes aggregate data for the given summaries.\n   * @param summaries - The cell summary data to compute aggregate for.\n   */\n  constructor(readonly summaries: z.infer) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactState.html":{"url":"injectables/ContactState.html","title":"injectable - ContactState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact'\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(_ctx: StateContext, undefined: SendMessage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SendMessage)\n                \n            \n\n            \n                \n                    Defined in src/lib/contact/contact.state.ts:16\n                \n            \n\n\n            \n                \n                    An action method for sending a message. It uses SendMessage action class to send messages.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SendMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { ContactService } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SendMessage } from './contact.actions';\n\n/** A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact' */\n@State({ name: 'contact' })\n@Injectable()\nexport class ContactState {\n  /** A variable to inject the ContactService */\n  private readonly contact = inject(ContactService);\n\n  /** An action method for sending a message. It uses SendMessage action class to send messages. */\n  @Action(SendMessage)\n  sendMessage(_ctx: StateContext, { message }: SendMessage): Observable {\n    return this.contact.sendMessage(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Download.html":{"url":"classes/Download.html","title":"class - Download","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Download\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Download file Action\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormatId)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of download.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DownloadSelectors.html":{"url":"classes/DownloadSelectors.html","title":"class - DownloadSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Available format selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                formats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        formats\n                        \n                    \n                \n            \n            \n                \n                    \n                    formats(state: DownloadModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Selectors available format for download selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                DownloadModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormat[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { DownloadFormat, DownloadModel } from './download.model';\n\n/**\n * Available format selectors\n */\nexport class DownloadSelectors {\n  /**\n   * Selectors available format for download selectors\n   * @param state\n   * @returns\n   */\n  @Selector()\n  static formats(state: DownloadModel): DownloadFormat[] {\n    const { formats, entries } = state;\n    const hasData = (format: DownloadFormat | undefined): format is DownloadFormat =>\n      !!(format && format.id in entries);\n    return Object.values(formats).filter(hasData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DownloadState.html":{"url":"classes/DownloadState.html","title":"class - DownloadState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Download State Model used to convert\nfile from SVG file content to different\nformat and download to user.\n\n            \n\n\n            \n                Implements\n            \n            \n                        NgxsOnInit\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEntry\n                            \n                            \n                                clearEntries\n                            \n                            \n                                download\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                registerFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEntry\n                        \n                    \n                \n            \n            \n                \naddEntry(ctx: DownloadContext, undefined: AddEntry)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddEntry)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:57\n                \n            \n\n\n            \n                \n                    Add entry into download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                AddEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearEntries\n                        \n                    \n                \n            \n            \n                \nclearEntries(ctx: DownloadContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearEntries)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:70\n                \n            \n\n\n            \n                \n                    Clear entires from download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        download\n                        \n                    \n                \n            \n            \n                \ndownload(ctx: DownloadContext, undefined: Download)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Download)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:84\n                \n            \n\n\n            \n                \n                    Actions download file in specified format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Download\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: DownloadContext)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/download/download.state.ts:33\n                \n            \n\n\n            \n                \n                    Ngxs on init and registry default format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFormat\n                        \n                    \n                \n            \n            \n                \nregisterFormat(ctx: DownloadContext, undefined: RegisterFormat)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RegisterFormat)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:43\n                \n            \n\n\n            \n                \n                    Actions register format in Download State\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                RegisterFormat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { Action, NgxsOnInit, State } from '@ngxs/store';\nimport produce from 'immer';\nimport { Observable, tap } from 'rxjs';\n\nimport { PNG_FORMAT, SVG_FORMAT } from './builtin-formats';\nimport { AddEntry, ClearEntries, Download, RegisterFormat } from './download.action';\nimport { DownloadContext, DownloadFormatId, DownloadModel } from './download.model';\n\n/**\n * Download State Model used to convert\n * file from SVG file content to different\n * format and download to user.\n */\n@State({\n  name: 'download',\n  defaults: {\n    formats: {},\n    entries: {},\n  },\n})\nexport class DownloadState implements NgxsOnInit {\n  /**\n   * Http object inject for download state\n   */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Ngxs on init and registry default format\n   * @param ctx\n   */\n  ngxsOnInit(ctx: DownloadContext): void {\n    ctx.dispatch([new RegisterFormat(SVG_FORMAT), new RegisterFormat(PNG_FORMAT)]);\n  }\n\n  /**\n   * Actions register format in Download State\n   * @param ctx\n   * @param { format }\n   */\n  @Action(RegisterFormat)\n  registerFormat(ctx: DownloadContext, { format }: RegisterFormat): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.formats[format.id] = format;\n      })\n    );\n  }\n\n  /**\n   * Add entry into download state\n   * @param ctx\n   * @param { id, entry }\n   */\n  @Action(AddEntry)\n  addEntry(ctx: DownloadContext, { id, entry }: AddEntry): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries[id] = entry;\n      })\n    );\n  }\n\n  /**\n   * Clear entires from download state\n   * @param ctx\n   */\n  @Action(ClearEntries)\n  clearEntries(ctx: DownloadContext): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries = {};\n      })\n    );\n  }\n\n  /**\n   * Actions download file in specified format\n   * @param ctx\n   * @param action\n   */\n  @Action(Download)\n  download(ctx: DownloadContext, { format }: Download): Observable | void {\n    const { entries } = ctx.getState();\n    const entry = entries[format];\n    switch (entry?.type) {\n      case 'url': {\n        const filename = this.guessFilename(ctx, format, entry.url);\n        return this.downloadRemoteData(entry.url).pipe(tap((data) => this.downloadData(data, filename)));\n      }\n\n      case 'data': {\n        const filename = this.guessFilename(ctx, format, '');\n        this.downloadData(new Blob([entry.data]), filename);\n        break;\n      }\n\n      default:\n        throw new Error('Cannot download file without data');\n    }\n  }\n\n  /**\n   * Guess filename\n   * @param ctx\n   * @param id\n   * @param url\n   * @returns filename\n   */\n  private guessFilename(ctx: DownloadContext, id: DownloadFormatId, url: string): string {\n    const { formats } = ctx.getState();\n    const { extension = '' } = formats[id] ?? {};\n    const fakeBase = 'https://base.com';\n    const path = new URL(url, fakeBase).pathname;\n    const segments = path.split('/').filter((seg) => seg !== '');\n    const name = segments.length > 0 ? segments[segments.length - 1] : 'download';\n    const guess = name.includes('.') ? name : `${name}${extension}`;\n\n    return guess;\n  }\n\n  /**\n   * Download converted formatted file to browser\n   * @param blob\n   * @param fileName\n   */\n  private downloadData(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n    anchor.download = filename;\n    anchor.href = url;\n    anchor.click();\n    anchor.remove();\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Downloads and save -  method is used to direct fetch file\n   * if available on url without conversion\n   * @param fileUrl\n   * @param fileName\n   */\n  private downloadRemoteData(url: string): Observable {\n    return this.http.get(url, { responseType: 'blob' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GradientPoint.html":{"url":"interfaces/GradientPoint.html","title":"interface - GradientPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GradientPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.model.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface of gradient colors along with their percentages for the gradient bar.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            percentage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gradient color at a specific percentage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Percentage point along the gradient bar\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { z } from 'zod';\n\n/** Type representing a single cell value */\nexport type Cell = z.infer;\n/** Type representing CELL_SUMMARY_SCHEMA which has labels and entries */\nexport type CellSummary = z.infer;\n/** Type representing an aggregate summary of cell values in a group */\nexport type Aggregate = z.infer;\n/** Type representing a row in an aggregate summary */\nexport type AggregateRow = Aggregate[string]['rows'][number];\n/** Type representing a single entry in a row with cell, biomarker, count and percentage */\nexport type AggregateRowEntry = AggregateRow[2];\n\n/**\n * The CellSummaryStateModel interface describes the overall shape of the state for this feature.\n * It has two properties, summaries and aggregate, both of which are of their corresponding types.\n */\nexport interface CellSummaryStateModel {\n  /** An object where each entry is an object containing information about a single cell and its corresponding biomarker. */\n  summaries: CellSummary;\n  /** An object where each entry contains a label and a table of aggregated data */\n  aggregate: Aggregate;\n}\n\n/**\n * The CELL_SCHEMA has an object that contains an id and a label for the cell,\n * another object that contains an id and a label for the biomarker, and a count and a percentage that are both numbers.\n */\nexport const CELL_SCHEMA = z.object({\n  cell: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  biomarker: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  count: z.number(),\n  percentage: z.number(),\n});\n\n/**\n * The CELL_SUMMARY_SCHEMA constant is a record of CellSummary objects,\n * where each CellSummary object contains a label and an array of CELL_SCHEMA objects.\n */\nexport const CELL_SUMMARY_SCHEMA = z.record(\n  z.object({\n    label: z.string(),\n    entries: CELL_SCHEMA.array(),\n  })\n);\n\n/**\n * The CELL_SUMMARY_AGGREGATE_SCHEMA is a record of Aggregate objects, where each Aggregate object contains a label,\n * an array of columns that are strings, and an array of rows that are AggregateRow objects.\n */\nexport const CELL_SUMMARY_AGGREGATE_SCHEMA = z.record(\n  z.object({\n    label: z.string(),\n    columns: z.string().array(),\n    rows: z\n      .tuple([z.string(), z.number().optional()])\n      .rest(\n        z\n          .object({\n            color: z.string(),\n            size: z.number(),\n            data: CELL_SCHEMA,\n          })\n          .optional()\n      )\n      .array(),\n  })\n);\n\n/** An interface of gradient colors along with their percentages for the gradient bar. */\nexport interface GradientPoint {\n  /** Gradient color at a specific percentage */\n  color: string;\n  /** Percentage point along the gradient bar */\n  percentage: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MedicalIllustrationModel.html":{"url":"interfaces/MedicalIllustrationModel.html","title":"interface - MedicalIllustrationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MedicalIllustrationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for medical illustration model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mapping\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            node\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapping:         MapEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapEntry[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Mapping info\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:         MapEntry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapEntry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Current selected node\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Illustration URL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { z } from 'zod';\n\n/** Map Entry typings */\nconst mapEntry = z.object({\n  organ_label: z.string(),\n  organ_id: z.string(),\n  anatomical_structure_of: z.string(),\n  source_spatial_entity: z.string(),\n  node_name: z.string(),\n  label: z.string(),\n  OntologyID: z.string(),\n  representation_of: z.string(),\n  'svg file of single 2DFTU': z.string(),\n  exist_asctb: z.string(),\n  type: z.string(),\n  'REF/1': z.string(),\n  'REF/1/DOI': z.string(),\n  'REF/1/NOTES': z.string(),\n  'Inset #': z.string(),\n});\n\nexport type MapEntry = z.infer;\n\n/** Interface for medical illustration model */\nexport interface MedicalIllustrationModel {\n  /** Illustration URL */\n  url?: string;\n  /** Current selected node */\n  node?: MapEntry;\n  /** Mapping info */\n  mapping?: MapEntry[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MedicalIllustrationSelectors.html":{"url":"classes/MedicalIllustrationSelectors.html","title":"class - MedicalIllustrationSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MedicalIllustrationSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for medical illustration\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapping\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapping(state: MedicalIllustrationModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['MedicalIllustrationState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/medical-illustration/medical-illustration.selectors.ts:22\n                \n            \n\n\n            \n                \n                    Returns current mapping file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                MedicalIllustrationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MapEntry[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(state: MedicalIllustrationModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['MedicalIllustrationState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/medical-illustration/medical-illustration.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Returns illustration url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                MedicalIllustrationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\n\nimport { MapEntry, MedicalIllustrationModel } from './medical-illustration.model';\nimport { MedicalIllustrationState } from './medical-illustration.state';\n\n/**\n * Selectors for medical illustration\n */\nexport class MedicalIllustrationSelectors {\n  /**\n   * Returns illustration url\n   */\n  @Selector([MedicalIllustrationState])\n  static url(state: MedicalIllustrationModel): string | undefined {\n    return state.url;\n  }\n\n  /**\n   * Returns current mapping file\n   */\n  @Selector([MedicalIllustrationState])\n  static mapping(state: MedicalIllustrationModel): MapEntry[] {\n    return state.mapping ?? [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MedicalIllustrationState.html":{"url":"injectables/MedicalIllustrationState.html","title":"injectable - MedicalIllustrationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MedicalIllustrationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling medical illustrations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActiveNode\n                            \n                            \n                                setMapping\n                            \n                            \n                                setUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActiveNode\n                        \n                    \n                \n            \n            \n                \nsetActiveNode(undefined: MedicalIllustrationContext, undefined: SetActiveNode)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetActiveNode)\n                \n            \n\n            \n                \n                    Defined in src/lib/medical-illustration/medical-illustration.state.ts:38\n                \n            \n\n\n            \n                \n                    Sets active node\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                MedicalIllustrationContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetActiveNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMapping\n                        \n                    \n                \n            \n            \n                \nsetMapping(undefined: MedicalIllustrationContext, undefined: SetMapping)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetMapping, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/medical-illustration/medical-illustration.state.ts:46\n                \n            \n\n\n            \n                \n                    Parses and sets mapping info\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                MedicalIllustrationContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetMapping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUri\n                        \n                    \n                \n            \n            \n                \nsetUri(undefined: MedicalIllustrationContext, undefined: SetUri)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetUri)\n                \n            \n\n            \n                \n                    Defined in src/lib/medical-illustration/medical-illustration.state.ts:30\n                \n            \n\n\n            \n                \n                    Sets illustration URI\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                MedicalIllustrationContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetUri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { parse } from 'papaparse';\nimport { map, Observable } from 'rxjs';\n\nimport { SetActiveNode, SetMapping, SetUri } from './medical-illustration.actions';\nimport { MedicalIllustrationModel, MapEntry } from './medical-illustration.model';\n\nexport type MedicalIllustrationContext = StateContext;\n\n/**\n * State handling medical illustrations\n */\n@State({\n  name: 'medicalIllustration',\n  defaults: {},\n})\n@Injectable()\nexport class MedicalIllustrationState {\n  /**\n   * Http client\n   */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Sets illustration URI\n   */\n  @Action(SetUri)\n  setUri({ setState }: MedicalIllustrationContext, { url }: SetUri) {\n    setState({ url: url, node: undefined });\n  }\n\n  /**\n   * Sets active node\n   */\n  @Action(SetActiveNode)\n  setActiveNode({ patchState }: MedicalIllustrationContext, { node }: SetActiveNode) {\n    patchState({ node });\n  }\n\n  /**\n   * Parses and sets mapping info\n   */\n  @Action(SetMapping, { cancelUncompleted: true })\n  setMapping({ patchState }: MedicalIllustrationContext, { url }: SetMapping): Observable {\n    return this.http.get(url, { responseType: 'text' }).pipe(\n      map((result) => {\n        const parsedResult = parse(result, { header: true }).data as MapEntry[];\n        patchState({ mapping: parsedResult });\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterFormat.html":{"url":"classes/RegisterFormat.html","title":"class - RegisterFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Register format into state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormat)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:10\n                            \n                        \n\n                \n                    \n                            Creates an instance of register format.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormat\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessage.html":{"url":"classes/SendMessage.html","title":"class - SendMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                A class which sends individual messages submitted by user.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: ContactMessage)\n                    \n                \n                        \n                            \n                                Defined in src/lib/contact/contact.actions.ts:5\n                            \n                        \n\n                \n                    \n                            A constructor which initializes the message of type ContactMessage interface.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    ContactMessage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { ContactMessage } from '@hra-ui/services';\n\n/** A class which sends individual messages submitted by user. */\nexport class SendMessage extends Action('[Contact] Send Message') {\n  /** A constructor which initializes the message of type ContactMessage interface. */\n  constructor(readonly message: ContactMessage) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                An action that removes all current sources and adds new ones, effectively resetting the state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sourceList\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: Source[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-list/source-list.actions.ts:17\n                            \n                        \n\n                \n                    \n                            Initializes the payload for the action\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        Source[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                array of source objects to be set as the new state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sourceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Source[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/source-list/source-list.actions.ts:22\n                        \n                    \n\n            \n                \n                    array of source objects to be set as the new state\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SourceList] Set'\n                    \n                \n                    \n                        \n                                Defined in src/lib/source-list/source-list.actions.ts:17\n                        \n                    \n\n            \n                \n                    Action Type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Source } from './source-list.model';\n\n/** action of adding a list of sources to the SourceList state */\nexport class Add {\n  /** Action Type  */\n  static readonly type = '[SourceList] Add';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of Source objects to be added to the state\n   */\n  constructor(readonly sourceList: Source[]) {}\n}\n\n/** An action that removes all current sources and adds new ones, effectively resetting the state */\nexport class Set {\n  /** Action Type  */\n  static readonly type = '[SourceList] Set';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of source objects to be set as the new state\n   */\n  constructor(public sourceList: Source[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetActiveNode.html":{"url":"classes/SetActiveNode.html","title":"class - SetActiveNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetActiveNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action for setting the current active node\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(node?: MapEntry)\n                    \n                \n                        \n                            \n                                Defined in src/lib/medical-illustration/medical-illustration.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Creates an instance of set active node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                  \n                                                        \n                                                                        MapEntry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { MapEntry } from './medical-illustration.model';\n\n/**\n * Action for setting the current illustration URI\n */\nexport class SetUri extends Action('[Medical Illustration] Set URI') {\n  /**\n   * Creates an instance of set uri.\n   * @param [url]\n   */\n  constructor(readonly url?: string) {\n    super();\n  }\n}\n\n/**\n * Action for setting the current active node\n */\nexport class SetActiveNode extends Action('[Medical Illustration] Set Active Node') {\n  /**\n   * Creates an instance of set active node.\n   * @param [node]\n   */\n  constructor(readonly node?: MapEntry) {\n    super();\n  }\n}\n\n/**\n * Action for setting the mapping file\n */\nexport class SetMapping extends Action('[Medical Illustration] Set Mapping') {\n  /**\n   * Creates an instance of set mapping.\n   * @param url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetData.html":{"url":"classes/SetData.html","title":"class - SetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Set data to store\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: object)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cell-summary/cell-summary.actions.ts:9\n                            \n                        \n\n                \n                    \n                            Defines the SetData action, which sets data to the store.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe data to set to the store.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { z } from 'zod';\nimport { CELL_SUMMARY_SCHEMA } from './cell-summary.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Set data to store */\nexport class SetData extends Action('SetData') {\n  /**\n   * Defines the SetData action, which sets data to the store.\n   * @param data - The data to set to the store.\n   */\n  constructor(readonly data: object) {\n    super();\n  }\n}\n\n/** Compute aggregate of the given data and store to state */\nexport class ComputeAggregate extends Action('ComputeAggregate') {\n  /**\n   * Defines the ComputeAggregate action, which computes aggregate data for the given summaries.\n   * @param summaries - The cell summary data to compute aggregate for.\n   */\n  constructor(readonly summaries: z.infer) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetMapping.html":{"url":"classes/SetMapping.html","title":"class - SetMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action for setting the mapping file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/medical-illustration/medical-illustration.actions.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of set mapping.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { MapEntry } from './medical-illustration.model';\n\n/**\n * Action for setting the current illustration URI\n */\nexport class SetUri extends Action('[Medical Illustration] Set URI') {\n  /**\n   * Creates an instance of set uri.\n   * @param [url]\n   */\n  constructor(readonly url?: string) {\n    super();\n  }\n}\n\n/**\n * Action for setting the current active node\n */\nexport class SetActiveNode extends Action('[Medical Illustration] Set Active Node') {\n  /**\n   * Creates an instance of set active node.\n   * @param [node]\n   */\n  constructor(readonly node?: MapEntry) {\n    super();\n  }\n}\n\n/**\n * Action for setting the mapping file\n */\nexport class SetMapping extends Action('[Medical Illustration] Set Mapping') {\n  /**\n   * Creates an instance of set mapping.\n   * @param url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetUri.html":{"url":"classes/SetUri.html","title":"class - SetUri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetUri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action for setting the current illustration URI\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url?: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/medical-illustration/medical-illustration.actions.ts:7\n                            \n                        \n\n                \n                    \n                            Creates an instance of set uri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { MapEntry } from './medical-illustration.model';\n\n/**\n * Action for setting the current illustration URI\n */\nexport class SetUri extends Action('[Medical Illustration] Set URI') {\n  /**\n   * Creates an instance of set uri.\n   * @param [url]\n   */\n  constructor(readonly url?: string) {\n    super();\n  }\n}\n\n/**\n * Action for setting the current active node\n */\nexport class SetActiveNode extends Action('[Medical Illustration] Set Active Node') {\n  /**\n   * Creates an instance of set active node.\n   * @param [node]\n   */\n  constructor(readonly node?: MapEntry) {\n    super();\n  }\n}\n\n/**\n * Action for setting the mapping file\n */\nexport class SetMapping extends Action('[Medical Illustration] Set Mapping') {\n  /**\n   * Creates an instance of set mapping.\n   * @param url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Source.html":{"url":"interfaces/Source.html","title":"interface - Source","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Source\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.model.ts\n        \n\n\n            \n                Description\n            \n            \n                structure of a source object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link property of the source object\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title property of the source object\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StateContext } from '@ngxs/store';\n\n/** structure of a source object */\nexport interface Source {\n  /** Title property of the source object  */\n  title: string;\n  /** Link property of the source object */\n  link: string;\n}\n\n/** Type alias for the array of source objects */\nexport type SourceListModel = Source[];\n\n/** Helper alias for action handler's ctx argument */\nexport type SourceListContext = StateContext;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceListSelectors.html":{"url":"classes/SourceListSelectors.html","title":"class - SourceListSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceListSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selector class for retrieving data from the SourceListState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSourceList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSourceList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceList(state: SourceListModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/lib/source-list/source-list.selectors.ts:12\n                \n            \n\n\n            \n                \n                    Gets the array of data sources from the SourceList object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SourceListModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current state of the SourceListState\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SourceListModel\n\n                    \n                    \n                        array of source objects\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { SourceListModel } from './source-list.model';\n\n/** Selector class for retrieving data from the SourceListState */\nexport class SourceListSelectors {\n  /**\n   * Gets the array of data sources from the SourceList object.\n   * @param state The current state of the SourceListState\n   * @returns array of source objects\n   */\n  @Selector()\n  static getSourceList(state: SourceListModel) {\n    return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SourceListState.html":{"url":"injectables/SourceListState.html","title":"injectable - SourceListState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SourceListState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling source list data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(undefined: SourceListContext, undefined: Add)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Add)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-list/source-list.state.ts:20\n                \n            \n\n\n            \n                \n                    adds a list of sources to the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                SourceListContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Add\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(undefined: SourceListContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-list/source-list.state.ts:34\n                \n            \n\n\n            \n                \n                    Removes all current sources and adds new ones, effectively resetting the state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                SourceListContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State } from '@ngxs/store';\nimport { produce } from 'immer';\nimport { Add, Set } from './source-list.actions';\nimport { SourceListContext, SourceListModel } from './source-list.model';\n\n/** State handling source list data */\n@State({\n  name: 'sourceList',\n  defaults: [],\n})\n@Injectable()\nexport class SourceListState {\n  /**\n   * adds a list of sources to the current state\n   * @param ctx The state context instance\n   * @param sourceList The payload which is an array of source objects to be added to the state\n   */\n  @Action(Add)\n  add({ setState }: SourceListContext, { sourceList }: Add) {\n    setState(\n      produce((draft) => {\n        draft.push(...sourceList);\n      })\n    );\n  }\n\n  /**\n   * Removes all current sources and adds new ones, effectively resetting the state.\n   * @param ctx The state context instance\n   * @param sourceList The payload which is an array of source objects to be set as the new state\n   */\n  @Action(Set)\n  set({ setState }: SourceListContext, { sourceList }: Set) {\n    setState(sourceList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateAnalyticsPluginService.html":{"url":"injectables/StateAnalyticsPluginService.html","title":"injectable - StateAnalyticsPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateAnalyticsPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Google Analytics Plugin Injectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(state, action, next: NgxsNextPluginFn)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state-analytics-plugin/state-analytics-plugin.service.ts:51\n                \n            \n\n\n            \n                \n                    Handles logger plugin\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent state of the store with type unknown.\n\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent action being dispatched with type unknown type.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            NgxsNextPluginFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnext plugin to handle the action\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nnext plugin with the current state and action.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, InjectionToken, Provider } from '@angular/core';\nimport { getActionTypeFromInstance, NgxsNextPluginFn, NgxsPlugin, NGXS_PLUGINS } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { DEFAULT_LOGGABLE_ACTIONS } from './default-loggable-actions';\n\n/** Primitive types */\nconst PRIMITIVE_TYPES = ['bigint', 'boolean', 'number', 'string'];\n\n/**\n * Determines whether primitive is\n * @param value is string - used to check the input value from serialize funtion\n * @returns type of value - boolean/number/string/null/bigint/undefined\n */\nfunction isPrimitive(value: unknown): value is bigint | boolean | number | string | null | undefined {\n  return value == null || PRIMITIVE_TYPES.includes(typeof value);\n}\n\n/**\n * Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n */\nexport const LOGGABLE_ACTIONS = new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n});\n\n/**\n * Google Analytics Plugin Injectable\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateAnalyticsPluginService implements NgxsPlugin {\n  /**\n   * Injects the service for state analytics plugin.\n   */\n  private readonly ga = inject(GoogleAnalyticsService);\n\n  /**\n   * Plugin service for logging state analytics\n   * Setting loggable action types from LOGGABLE_ACTIONS dependency.\n   */\n  private readonly loggableTypes = new Set(inject(LOGGABLE_ACTIONS).map(getActionTypeFromInstance));\n\n  /**\n   * Handles logger plugin\n   * @param state -  Current state of the store with type unknown.\n   * @param action - Current action being dispatched with type unknown type.\n   * @param next - next plugin to handle the action\n   * @returns - next plugin with the current state and action.\n   */\n  handle(state: unknown, action: unknown, next: NgxsNextPluginFn) {\n    this.logAction(action);\n    return next(state, action);\n  }\n\n  /**\n   * Logs action trigerred to google analytics event\n   * @param action - Current action being dispatched with type unknown type.\n   * @returns void\n   */\n  private logAction(action: unknown): void {\n    const type = getActionTypeFromInstance(action);\n    if (type && this.loggableTypes.has(type)) {\n      const payload = JSON.stringify(action, this.serialize);\n      this.ga.event(type, 'action_log', payload);\n    }\n  }\n\n  /**\n   * Serializes action data\n   * @param key - key with type unknown that needs to be serialized\n   * @param value - value with type unknown that needs to be serialized\n   * @returns serialized value\n   */\n  private serialize(this: void, key: unknown, value: unknown): unknown {\n    if (key === '' && typeof value === 'object') {\n      return { ...value, type: undefined };\n    } else if (isPrimitive(value) || (Array.isArray(value) && value.every(isPrimitive))) {\n      return value;\n    }\n\n    return undefined;\n  }\n}\n\n/**\n * State Login Provider\n */\nexport const STATE_LOGGER_PROVIDER: Provider = {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createDownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            isPrimitive   (src/.../state-analytics-plugin.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDownloadFormatId\n                        \n                    \n                \n            \n            \n                \ncreateDownloadFormatId(id: string)\n                \n            \n\n\n\n\n            \n                \n                    Creates download format id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormatId\n\n                    \n                    \n                        download format id\n\n                    \n                \n            \n        \n    \n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isPrimitive\n                        \n                    \n                \n            \n            \n                \nisPrimitive(value)\n                \n            \n\n\n\n\n            \n                \n                    Determines whether primitive is\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is string - used to check the input value from serialize funtion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :      | boolean | number | string | null | undefined\n\n                    \n                    \n                        type of value - boolean/number/string/null/bigint/undefined\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nstate\nThis library was generated with Nx.\nRunning unit tests\nRun nx test state to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Aggregate   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AggregateRow   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AggregateRowEntry   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Cell   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CellSummary   (src/.../cell-summary.model.ts)\n                        \n                        \n                            DownloadContext   (src/.../download.model.ts)\n                        \n                        \n                            DownloadEntry   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormat   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            DownloadModel   (src/.../download.model.ts)\n                        \n                        \n                            MapEntry   (src/.../medical-illustration.model.ts)\n                        \n                        \n                            MedicalIllustrationContext   (src/.../medical-illustration.state.ts)\n                        \n                        \n                            SourceListContext   (src/.../source-list.model.ts)\n                        \n                        \n                            SourceListModel   (src/.../source-list.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n    \n        \n            \n                \n                    \n                    Aggregate\n                \n            \n            \n                \n                    Type representing an aggregate summary of cell values in a group\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AggregateRow\n                \n            \n            \n                \n                    Type representing a row in an aggregate summary\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AggregateRowEntry\n                \n            \n            \n                \n                    Type representing a single entry in a row with cell, biomarker, count and percentage\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Cell\n                \n            \n            \n                \n                    Type representing a single cell value\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummary\n                \n            \n            \n                \n                    Type representing CELL_SUMMARY_SCHEMA which has labels and entries\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n    \n        \n            \n                \n                    \n                    DownloadContext\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadContext,\nwhich is a state context for the DownloadModel type\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadEntry\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadEntry,\nwhich is inferred from the type of the DOWNLOAD_ENTRY constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormat\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormat,\nwhich is inferred from the type of the DOWNLOAD_FORMAT constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormatId\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormatId,\nwhich is inferred from the type of the DOWNLOAD_FORMAT_ID constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadModel\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadModel,\nwhich is inferred from the type of the DOWNLOAD_MODEL constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/medical-illustration/medical-illustration.model.ts\n    \n    \n        \n            \n                \n                    \n                    MapEntry\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/medical-illustration/medical-illustration.state.ts\n    \n    \n        \n            \n                \n                    \n                    MedicalIllustrationContext\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/source-list/source-list.model.ts\n    \n    \n        \n            \n                \n                    \n                    SourceListContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceListModel\n                \n            \n            \n                \n                    Type alias for the array of source objects\n\n                \n            \n            \n                \n                            Source[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            About   (src/.../link-ids.ts)\n                        \n                        \n                            Action   (src/.../cell-summary.actions.ts)\n                        \n                        \n                            Action   (src/.../download.action.ts)\n                        \n                        \n                            AppTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            CELL_SCHEMA   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CELL_SUMMARY_AGGREGATE_SCHEMA   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CELL_SUMMARY_SCHEMA   (src/.../cell-summary.model.ts)\n                        \n                        \n                            ContactAcknowledgement   (src/.../resource-ids.ts)\n                        \n                        \n                            DEFAULT_LOGGABLE_ACTIONS   (src/.../default-loggable-actions.ts)\n                        \n                        \n                            DOWNLOAD_ENTRY   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT_ID   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_MODEL   (src/.../download.model.ts)\n                        \n                        \n                            ExploreFTU   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageDepthDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPagePartners   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageReadMore   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LOGGABLE_ACTIONS   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            mapEntry   (src/.../medical-illustration.model.ts)\n                        \n                        \n                            Metrics   (src/.../resource-ids.ts)\n                        \n                        \n                            MetricsLogo   (src/.../resource-ids.ts)\n                        \n                        \n                            MetricsTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            Png   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            PNG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                        \n                            PRIMITIVE_TYPES   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            ProductLogoUrl   (src/.../resource-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../link-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            STATE_LOGGER_PROVIDER   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Svg   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            SVG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                        \n                            TestId   (src/.../link-ids.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/link-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        About\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('About')\n                    \n                \n\n            \n                \n                    About Link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExploreFTU\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ExploreFTU')\n                    \n                \n\n            \n                \n                    LinkId for Explore FTU\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPageReadMore')\n                    \n                \n\n            \n                \n                    LinkId for read more in landing page content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TestId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Test')\n                    \n                \n\n            \n                \n                    LinkId for test\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('ResourceRegistry')\n                    \n                \n\n            \n                \n                    Base action factory\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Download')\n                    \n                \n\n            \n                \n                    Action Group for Download Action\n\n                \n            \n\n        \n    \n\n    src/lib/resource-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('AppTitle')\n                    \n                \n\n            \n                \n                    App title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ContactAcknowledgement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ContactAcknowledgement')\n                    \n                \n\n            \n                \n                    Message to display after submitting contact form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthDescription')\n                    \n                \n\n            \n                \n                    Lanading Page Depth Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthImg')\n                    \n                \n\n            \n                \n                    Landing Page Depth Img id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthMoreText')\n                    \n                \n\n            \n                \n                    Landing Page Depth More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthTitle')\n                    \n                \n\n            \n                \n                    Landing Page Depth Title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroDescription')\n                    \n                \n\n            \n                \n                    Landing Page Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroImg')\n                    \n                \n\n            \n                \n                    Landing Page Intro Image id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroMoreText')\n                    \n                \n\n            \n                \n                    Landing Page More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPagePartners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroPartners')\n                    \n                \n\n            \n                \n                    Landing Page Partners id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroTitle')\n                    \n                \n\n            \n                \n                    Landing Page Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('Metrics')\n                    \n                \n\n            \n                \n                    metrics id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsLogo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsLogo')\n                    \n                \n\n            \n                \n                    Metrics Logo id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsTitle')\n                    \n                \n\n            \n                \n                    Metrics Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductLogoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductLogoUrl')\n                    \n                \n\n            \n                \n                    Product logo url id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title id\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CELL_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  biomarker: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  count: z.number(),\n  percentage: z.number(),\n})\n                    \n                \n\n            \n                \n                    The CELL_SCHEMA has an object that contains an id and a label for the cell,\nanother object that contains an id and a label for the biomarker, and a count and a percentage that are both numbers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_AGGREGATE_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.record(\n  z.object({\n    label: z.string(),\n    columns: z.string().array(),\n    rows: z\n      .tuple([z.string(), z.number().optional()])\n      .rest(\n        z\n          .object({\n            color: z.string(),\n            size: z.number(),\n            data: CELL_SCHEMA,\n          })\n          .optional()\n      )\n      .array(),\n  })\n)\n                    \n                \n\n            \n                \n                    The CELL_SUMMARY_AGGREGATE_SCHEMA is a record of Aggregate objects, where each Aggregate object contains a label,\nan array of columns that are strings, and an array of rows that are AggregateRow objects.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.record(\n  z.object({\n    label: z.string(),\n    entries: CELL_SCHEMA.array(),\n  })\n)\n                    \n                \n\n            \n                \n                    The CELL_SUMMARY_SCHEMA constant is a record of CellSummary objects,\nwhere each CellSummary object contains a label and an array of CELL_SCHEMA objects.\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/default-loggable-actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ContactActions.SendMessage,\n  DownloadActions.Download,\n  LinkRegistryActions.Navigate,\n]\n                    \n                \n\n            \n                \n                    Default loggable actions\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.discriminatedUnion('type', [\n  z.object({ type: z.literal('url'), url: z.string() }),\n  z.object({ type: z.literal('data'), data: z.string() }),\n])\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_ENTRY,\nwhich is a discriminated union of two objects with different properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    id: DOWNLOAD_FORMAT_ID,\n    label: z.string(),\n    extension: z.string(),\n  })\n  .partial({ extension: true })\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT,\nwhich is an object with id, label, and extension properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .transform((id) => `DownloadFormatId:'${id}'`)\n  .brand('DownloadFormatId')\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT_ID,\nwhich is a string that is transformed into a branded string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_MODEL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  formats: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_FORMAT),\n  entries: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_ENTRY),\n})\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_MODEL,\nwhich is an object with formats and entries properties\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n})\n                    \n                \n\n            \n                \n                    Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRIMITIVE_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['bigint', 'boolean', 'number', 'string']\n                    \n                \n\n            \n                \n                    Primitive types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATE_LOGGER_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n}\n                    \n                \n\n            \n                \n                    State Login Provider\n\n                \n            \n\n        \n    \n\n    src/lib/medical-illustration/medical-illustration.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapEntry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  organ_label: z.string(),\n  organ_id: z.string(),\n  anatomical_structure_of: z.string(),\n  source_spatial_entity: z.string(),\n  node_name: z.string(),\n  label: z.string(),\n  OntologyID: z.string(),\n  representation_of: z.string(),\n  'svg file of single 2DFTU': z.string(),\n  exist_asctb: z.string(),\n  type: z.string(),\n  'REF/1': z.string(),\n  'REF/1/DOI': z.string(),\n  'REF/1/NOTES': z.string(),\n  'Inset #': z.string(),\n})\n                    \n                \n\n            \n                \n                    Map Entry typings\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Png\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('png')\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Svg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('svg')\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PNG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Png,\n  label: 'Download Png',\n  extension: '.png',\n}\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Svg,\n  label: 'Download Svg',\n  extension: '.svg',\n}\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
