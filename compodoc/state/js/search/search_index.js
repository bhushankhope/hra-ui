var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActiveFtuModel.html",[0,1.417,1,2.643]],["body/interfaces/ActiveFtuModel.html",[0,1.856,1,3.822,2,1.689,3,0.113,4,0.25,5,0.129,6,1.391,7,1.391,8,2.175,9,0.113,10,0.617,11,2.051,12,0.464,13,1.288,14,0.379,15,0.019,16,1.252,17,2.3,18,0.351,19,1.107,20,1.007,21,0.319,22,0.336,23,0.648,24,0.379,25,2.051,26,0.751,27,2.868,28,1.479,29,1.313,30,2.438,31,2.325,32,1.598,33,2.761,34,2.438,35,2.18,36,2.761,37,2.438,38,2.325,39,3.188,40,1.954,41,0.691,42,1.134,43,2.761,44,2.051,45,2.438,46,2.438,47,2.325,48,1.06,49,2.438,50,2.438,51,0.587,52,1.391,53,3.206,54,2.438,55,0.19,56,2.559,57,1.977,58,1.313,59,0.495,60,2.438,61,1.479,62,2.438,63,0.198,64,1.689,65,0.788,66,0.788,67,2.4,68,0.751,69,2.4,70,1.479,71,1.82,72,1.313,73,1.82,74,3.518,75,4.482,76,2.438,77,1.38,78,3.946,79,2.438,80,2.438,81,2.438,82,2.438,83,2.438,84,2.438,85,2.175,86,2.438,87,2.438,88,1.479,89,2.175,90,2.438,91,2.438,92,0.747,93,2.438,94,2.438,95,2.438,96,2.438,97,1.82,98,2.438,99,2.438,100,2.175,101,2.438,102,2.438,103,2.438,104,2.438,105,1.06,106,1.977,107,1.689,108,2.438,109,2.438,110,2.438,111,2.438,112,0.01,113,0.01]],["title/classes/ActiveFtuSelectors.html",[63,0.264,114,3.26]],["body/classes/ActiveFtuSelectors.html",[1,5.025,3,0.163,4,0.187,5,0.187,6,2.976,7,2.976,9,0.163,10,0.894,12,0.601,13,1.322,14,0.414,15,0.019,18,0.312,21,0.314,22,0.487,26,1.088,44,2.017,55,0.187,59,0.642,63,0.287,64,3.612,68,1.435,77,1.507,105,2.266,112,0.013,113,0.013,114,4.661,115,0.619,116,4.116,117,3.229,118,1.744,119,3.377,120,6.072,121,4.116,122,1.926,123,5.427,124,0.816,125,4.116,126,4.157,127,0.77,128,4.116,129,4.116,130,5.427,131,1.507,132,2.826,133,2.286,134,4.116,135,5.427]],["title/injectables/ActiveFtuState.html",[19,1.004,64,2.258]],["body/injectables/ActiveFtuState.html",[0,1.365,1,2.547,3,0.094,4,0.26,5,0.108,6,2.653,7,2.653,8,1.818,9,0.094,10,0.516,12,0.555,13,1.219,14,0.436,15,0.019,16,1.124,17,2.128,18,0.337,19,0.967,20,0.842,21,0.279,22,0.281,23,0.699,24,0.382,25,1.792,26,0.628,27,3.093,28,1.236,29,1.098,30,2.039,31,2.031,32,1.74,33,3.007,34,2.039,35,1.905,36,3.007,37,2.039,38,2.031,39,3.471,40,2.248,41,0.795,42,1.272,43,3.309,44,2.186,45,2.039,46,2.039,47,2.031,48,0.886,49,2.039,50,2.039,51,0.491,52,1.163,53,3.417,54,2.039,55,0.166,56,2.948,57,2.547,58,1.691,59,0.676,60,2.039,61,1.236,62,2.039,63,0.165,64,2.176,65,1.015,66,0.659,67,2.367,68,1.432,69,2.691,70,1.905,71,2.344,72,1.691,73,1.522,74,3.213,75,4.146,76,2.039,77,1.239,78,3.755,79,2.039,80,2.039,81,2.039,82,2.039,83,2.039,84,2.039,85,2.801,86,3.141,87,3.141,88,1.905,89,2.801,90,3.141,91,3.141,92,0.671,93,2.039,94,2.039,95,2.039,96,2.039,97,1.522,98,2.039,99,2.039,100,1.818,101,2.039,102,2.039,103,3.141,104,2.039,105,1.665,106,2.547,107,2.176,108,2.039,109,2.039,110,2.039,111,2.039,112,0.009,113,0.009,118,1.175,122,1.779,124,0.753,127,0.711,136,1.098,137,2.374,138,2.374,139,2.374,140,1.653,141,2.374,142,1.653,143,2.374,144,2.374,145,2.374]],["title/classes/AddEntry.html",[63,0.264,146,2.108]],["body/classes/AddEntry.html",[3,0.141,4,0.162,5,0.224,9,0.141,12,0.394,13,1.13,14,0.271,15,0.019,18,0.289,21,0.375,22,0.42,23,0.731,24,0.463,40,1.397,41,0.709,48,2.525,51,0.735,55,0.29,59,0.42,63,0.444,66,1.564,88,2.56,92,0.534,112,0.012,113,0.012,115,0.534,124,0.534,127,0.504,146,2.73,147,2.115,148,3.757,149,1.81,150,3.554,151,3.323,152,3.616,153,3.554,154,3.151,155,1.579,156,0.987,157,2.56,158,1.974,159,2.115,160,2.115,161,2.924,162,3.234,163,1.974,164,1.457,165,2.279,166,2.334,167,2.036,168,1.458,169,1.458,170,2.761,171,1.238,172,2.149,173,0.987,174,2.279,175,2.115,176,2.279,177,2.279,178,1.397,179,1.974,180,1.261,181,2.279,182,2.279]],["title/interfaces/CellSummaryModel.html",[0,1.417,183,2.643]],["body/interfaces/CellSummaryModel.html",[0,2.105,2,2.119,3,0.141,4,0.162,5,0.162,9,0.141,10,0.774,11,2.412,12,0.395,14,0.526,15,0.019,18,0.29,21,0.271,22,0.421,25,2.412,26,0.942,32,2.175,33,3.668,55,0.29,56,1.558,92,0.848,112,0.012,113,0.012,171,1.421,183,3.428,184,1.746,185,1.746,186,2.728,187,2.928,188,4.844,189,5.283,190,4.922,191,3.929,192,4.238,193,4.238,194,4.238,195,3.562,196,3.059,197,3.059,198,4.228,199,3.326,200,3.059,201,4.844,202,4.228,203,4.32,204,2.728,205,2.337,206,4.32,207,4.32,208,4.228,209,2.563,210,3.428,211,4.228,212,2.734,213,4.228,214,4.228,215,3.059,216,3.059,217,3.059,218,3.059,219,3.059,220,3.059,221,1.202,222,3.059,223,2.481,224,3.059,225,3.059,226,3.059,227,3.059,228,3.059]],["title/classes/CellSummarySelectors.html",[63,0.264,229,3.26]],["body/classes/CellSummarySelectors.html",[3,0.163,4,0.187,5,0.187,9,0.163,10,0.894,12,0.601,14,0.414,15,0.019,18,0.331,21,0.314,22,0.487,24,0.543,26,1.088,31,2.286,32,1.744,55,0.187,59,0.642,63,0.287,68,1.435,77,1.507,112,0.013,113,0.013,115,0.619,117,3.229,118,1.744,119,3.377,122,1.926,124,0.816,127,0.77,133,2.286,171,1.626,183,4.893,184,2.976,185,2.976,189,4.944,191,3.229,192,4.229,194,4.673,199,2.826,229,4.661,230,4.116,231,5.427,232,5.427,233,4.116,234,5.427,235,4.116,236,3.535,237,4.116,238,5.427,239,4.116,240,4.116]],["title/injectables/CellSummaryState.html",[19,1.004,31,2.108]],["body/injectables/CellSummaryState.html",[3,0.119,4,0.136,5,0.136,9,0.119,10,0.649,12,0.567,13,0.906,14,0.39,15,0.019,16,1.57,17,1.173,18,0.33,19,1.148,20,1.059,21,0.227,22,0.353,23,0.567,24,0.52,26,0.789,27,2.508,28,1.554,29,1.38,31,2.411,32,2.066,33,3.121,41,0.83,42,1.162,55,0.136,56,2.985,59,0.664,61,1.554,63,0.208,65,1.205,68,1.353,69,2.457,70,2.261,71,2.783,72,2.008,73,2.783,74,3.994,75,2.286,77,0.828,85,3.325,92,0.653,100,2.286,105,1.114,107,2.583,112,0.011,113,0.011,118,1.395,122,1.816,124,0.769,127,0.726,136,1.38,140,2.079,142,2.079,171,1.66,172,1.305,178,1.173,183,2.079,184,2.754,185,2.754,189,4.772,191,3.826,194,2.079,199,2.261,236,2.563,241,2.984,242,3.024,243,3.828,244,2.984,245,4.342,246,2.984,247,4.342,248,2.984,249,4.342,250,3.325,251,3.325,252,2.984,253,1.621,254,1.463,255,1.775,256,4.342,257,2.984,258,2.563,259,2.984,260,1.554,261,1.775,262,1.775,263,2.984,264,2.984,265,2.984]],["title/classes/Clear.html",[40,1.492,63,0.264]],["body/classes/Clear.html",[3,0.17,4,0.195,5,0.195,6,2.099,7,2.099,9,0.17,13,1.316,15,0.019,17,1.683,18,0.286,21,0.424,22,0.506,23,0.686,24,0.326,40,2.189,41,0.539,42,0.885,43,2.378,44,2.099,51,0.885,52,2.73,55,0.298,63,0.473,65,1.189,66,1.546,67,2.436,92,0.644,112,0.014,113,0.014,115,0.644,131,1.718,156,1.189,164,1.497,166,2.307,167,2.307,168,1.336,169,1.336,173,1.189,180,1.52,253,1.598,266,2.745,267,2.307,268,1.446,269,1.376,270,2.745,271,1.98,272,1.52]],["title/classes/ClearEntries.html",[63,0.264,179,2.108]],["body/classes/ClearEntries.html",[3,0.147,4,0.168,5,0.23,9,0.147,13,1.146,15,0.019,18,0.296,21,0.385,22,0.438,23,0.74,24,0.471,40,1.986,41,0.725,48,2.553,51,0.765,55,0.294,63,0.451,66,1.598,88,1.928,92,0.556,112,0.013,113,0.013,115,0.556,146,2.056,147,2.202,148,3.196,149,1.19,151,2.997,152,3.007,154,2.373,155,1.19,156,1.028,157,2.632,158,2.056,159,2.202,160,2.202,161,3.007,162,3.275,163,2.056,164,1.478,165,2.373,166,2.384,167,2.094,168,1.483,169,1.483,170,3.031,171,1.273,172,2.21,173,1.028,174,2.373,175,2.202,176,2.373,177,2.373,178,1.455,179,2.807,180,1.314,181,2.373,182,2.373]],["title/classes/ClearSelection.html",[63,0.264,273,1.86]],["body/classes/ClearSelection.html",[3,0.148,4,0.169,5,0.169,9,0.148,13,1.148,14,0.386,15,0.019,16,1.633,18,0.26,21,0.386,22,0.44,23,0.562,24,0.522,32,1.629,41,0.468,42,0.769,51,0.769,55,0.304,58,3.166,63,0.477,65,1.032,92,0.559,112,0.013,113,0.013,115,0.559,131,1.032,155,1.629,156,1.032,164,1.528,168,1.486,169,1.486,173,1.032,180,1.319,205,1.54,221,1.255,253,1.388,267,2.1,268,1.255,269,1.195,271,2.344,272,1.319,273,2.484,274,2.065,275,2.827,276,2.065,277,1.626,278,3.004,279,3.177,280,2.484,281,1.822,282,3.204,283,2.827,284,1.822,285,2.484,286,2.212,287,1.822,288,1.936,289,1.822,290,2.212,291,1.936]],["title/classes/ComputeAggregates.html",[63,0.264,243,2.433]],["body/classes/ComputeAggregates.html",[3,0.181,4,0.207,5,0.207,9,0.181,13,1.226,15,0.019,16,1.145,18,0.297,21,0.441,22,0.538,23,0.705,24,0.511,41,0.573,42,1.196,51,0.94,55,0.29,63,0.467,65,1.262,92,0.683,112,0.014,113,0.014,115,0.683,131,1.262,156,1.262,164,1.454,168,1.091,169,1.091,171,1.458,173,1.262,184,2.228,185,2.228,191,2.705,199,3.015,243,3.711,268,1.535,269,1.461,272,1.613,277,1.988,292,3.167,293,4.434,294,4.436,295,4.032,296,3.167,297,3.483]],["title/injectables/ContactState.html",[19,1.004,298,2.643]],["body/injectables/ContactState.html",[3,0.156,4,0.178,5,0.178,9,0.156,10,0.853,12,0.435,14,0.299,15,0.019,18,0.339,19,1.675,20,1.393,21,0.299,22,0.464,23,0.732,24,0.518,25,3.104,26,1.038,27,2.906,29,1.815,55,0.178,59,0.749,63,0.46,68,1.038,69,2.3,77,1.09,105,1.465,112,0.013,113,0.013,118,1.69,122,1.393,124,0.59,127,0.557,136,1.815,178,1.543,254,2.577,260,2.044,298,4.412,299,3.925,300,5.258,301,4.735,302,5.258,303,6.334,304,5.44,305,4.028,306,6.334,307,5.405,308,5.258,309,5.258,310,3.925,311,3.662,312,4.542,313,5.258,314,4.516,315,3.925,316,3.925,317,3.925,318,3.925,319,3.925]],["title/classes/Download.html",[48,1.417,63,0.264]],["body/classes/Download.html",[3,0.143,4,0.163,5,0.258,9,0.143,12,0.398,13,1.134,14,0.274,15,0.019,18,0.291,21,0.377,22,0.425,23,0.752,24,0.432,40,1.412,41,0.713,48,2.619,51,0.742,55,0.291,59,0.425,63,0.446,66,1.573,88,1.871,92,0.54,112,0.012,113,0.012,115,0.54,124,0.54,127,0.51,146,1.995,147,2.137,148,3.146,149,1.591,151,3.336,152,2.945,154,2.303,155,1.154,156,0.997,157,2.578,158,1.995,159,2.137,160,2.137,161,2.945,162,3.325,163,1.995,164,1.463,165,2.303,166,2.53,167,2.347,168,1.465,169,1.465,170,2.777,171,1.247,172,2.165,173,0.997,174,2.303,175,2.137,176,2.303,177,2.303,178,1.412,179,1.995,180,1.275,181,2.303,182,2.303,320,3.085,321,3.592]],["title/classes/DownloadSelectors.html",[63,0.264,322,3.26]],["body/classes/DownloadSelectors.html",[3,0.172,4,0.197,5,0.197,9,0.172,10,0.94,12,0.479,14,0.33,15,0.019,18,0.319,24,0.474,26,1.144,47,2.403,48,2.093,55,0.197,59,0.512,63,0.301,66,1.201,68,1.483,77,1.201,92,0.843,105,1.615,112,0.014,113,0.014,115,0.65,117,4.155,118,1.802,119,3.048,122,1.535,124,0.65,127,0.614,133,2.403,157,3.551,158,2.403,162,3.484,170,2.748,322,4.815,323,4.326,324,5.04,325,4.764,326,5.607,327,5.04,328,4.326,329,4.326,330,4.326,331,4.326,332,4.326,333,4.326,334,4.326]],["title/injectables/DownloadState.html",[19,1.004,47,2.108]],["body/injectables/DownloadState.html",[3,0.068,4,0.078,5,0.265,9,0.112,10,0.372,12,0.549,13,0.815,14,0.399,15,0.019,18,0.291,19,0.746,20,0.608,21,0.131,22,0.203,23,0.461,24,0.465,26,0.453,27,2.427,28,0.892,29,0.792,40,1.108,41,0.624,47,1.566,48,2.58,55,0.078,56,1.233,59,0.67,61,0.892,63,0.119,66,1.82,67,2.478,68,1.446,69,2.552,70,1.469,77,1.156,78,2.138,88,2.169,89,2.16,92,0.95,97,1.098,105,1.555,112,0.007,113,0.007,118,0.906,122,1.634,124,0.744,127,0.703,136,0.792,146,2.75,148,2.75,151,1.469,155,1.338,158,0.951,161,1.678,162,3.139,163,2.75,170,1.382,171,1.247,172,1.571,175,1.019,178,1.108,179,1.996,187,1.678,209,0.892,221,1.406,254,1.382,255,1.019,260,2.398,261,1.019,262,1.019,311,1.193,324,1.312,325,2.752,327,1.312,335,1.713,336,2.752,337,2.82,338,2.422,339,2.422,340,2.422,341,2.422,342,4.165,343,2.82,344,5.785,345,2.82,346,1.713,347,4.331,348,2.82,349,2.82,350,1.713,351,2.82,352,2.82,353,2.82,354,1.713,355,2.478,356,2.422,357,2.82,358,1.713,359,2.82,360,2.82,361,1.713,362,2.82,363,2.82,364,2.503,365,2.82,366,2.82,367,1.713,368,1.713,369,1.713,370,1.471,371,1.471,372,1.471,373,1.471,374,1.713,375,1.713,376,1.471,377,1.471,378,2.82,379,1.713,380,1.713,381,1.713,382,1.713,383,4.165,384,3.577,385,1.713,386,1.713,387,1.713,388,2.82,389,1.193,390,1.713,391,1.713,392,2.82,393,1.713,394,1.713,395,1.713,396,2.82,397,5.835,398,2.82,399,1.713,400,1.713,401,1.713,402,1.713,403,1.713,404,1.713,405,1.713,406,1.713,407,2.82,408,3.593,409,1.713,410,1.471,411,1.713,412,1.713,413,1.713,414,1.713,415,1.713,416,1.713,417,1.713,418,1.713,419,1.713,420,1.713,421,1.471,422,1.713,423,1.713,424,1.713,425,1.713,426,1.713,427,1.713,428,3.593,429,1.713,430,1.713,431,1.713,432,1.713,433,1.713,434,1.713,435,1.713,436,1.713,437,1.713,438,1.713,439,1.713,440,1.713,441,1.713,442,1.713,443,1.713,444,1.713,445,1.713,446,1.713,447,1.713]],["title/classes/HighlightCellType.html",[63,0.264,289,1.86]],["body/classes/HighlightCellType.html",[3,0.142,4,0.162,5,0.162,9,0.142,12,0.395,13,1.131,14,0.464,15,0.019,16,1.534,18,0.253,21,0.376,22,0.422,23,0.546,24,0.516,32,1.814,41,0.449,42,0.738,51,0.738,55,0.301,58,3.056,59,0.422,63,0.472,65,0.991,92,0.537,112,0.012,113,0.012,115,0.537,124,0.537,127,0.507,131,0.991,149,1.147,155,1.814,156,0.991,164,1.509,168,1.461,169,1.461,173,0.991,180,1.267,205,2.042,221,1.906,253,1.332,267,1.479,268,1.205,269,1.147,271,2.279,272,1.267,273,1.749,274,1.982,275,2.767,276,1.982,277,1.561,278,3.171,279,3.238,280,2.416,281,1.749,282,3.382,283,2.984,284,1.749,285,2.416,286,2.123,287,1.749,288,2.567,289,2.416,290,2.123,291,2.567,448,3.569,449,3.569,450,3.569]],["title/modules/HraStateModule.html",[451,2.433,452,2.643]],["body/modules/HraStateModule.html",[0,1.84,3,0.142,4,0.224,5,0.162,9,0.142,12,0.395,14,0.272,15,0.019,17,1.403,18,0.371,20,1.267,21,0.272,24,0.376,26,0.944,31,2.738,32,1.147,33,1.982,35,2.567,36,1.982,38,2.738,39,2.288,44,1.749,47,2.738,48,1.332,55,0.224,59,0.422,63,0.248,64,2.933,68,1.493,72,1.651,77,0.991,92,0.537,106,3.433,112,0.012,113,0.012,118,1.147,119,2.984,124,0.537,127,0.507,209,2.567,221,1.664,298,3.433,301,2.486,311,3.433,451,4.097,452,3.933,453,2.288,454,3.066,455,3.433,456,3.569,457,4.234,458,4.664,459,3.569,460,4.234,461,4.234,462,5.23,463,4.234,464,4.85,465,4.325,466,3.066,467,3.433,468,3.066,469,3.16,470,1.859,471,1.982,472,3.16,473,3.359,474,2.734,475,3.16,476,2.123,477,2.734,478,4.234,479,2.486,480,3.433,481,3.066,482,2.486,483,3.066,484,3.066,485,3.066,486,2.486,487,2.486,488,2.486,489,4.234,490,3.066]],["title/interfaces/HraStateModuleOptions.html",[0,1.417,458,2.907]],["body/interfaces/HraStateModuleOptions.html",[0,2.127,2,2.16,3,0.144,4,0.227,5,0.165,9,0.144,10,0.789,11,2.444,14,0.277,15,0.019,17,1.427,18,0.372,20,1.288,21,0.38,24,0.434,26,0.96,31,2.77,32,1.167,33,2.016,35,2.597,36,2.016,38,2.77,39,2.327,44,1.779,47,2.77,48,1.355,55,0.227,63,0.253,64,2.967,68,0.96,72,1.679,77,1.008,92,0.546,106,2.529,112,0.012,113,0.012,119,2.444,209,1.891,221,2.17,298,3.474,301,2.529,311,2.529,451,3.932,452,3.474,454,3.118,455,2.529,457,3.118,458,4.364,460,3.118,461,3.118,462,4.893,463,4.284,464,4.284,465,4.364,466,3.118,467,3.474,468,3.118,469,3.197,470,1.891,471,2.016,472,3.197,473,3.649,474,2.781,475,3.197,476,2.16,477,2.781,478,4.284,479,2.529,480,3.968,481,4.284,482,3.474,483,5.268,484,3.118,485,3.118,486,2.529,487,2.529,488,2.529,489,4.284,490,3.118]],["title/interfaces/IllustratorModel.html",[0,1.417,491,2.643]],["body/interfaces/IllustratorModel.html",[0,1.701,2,1.461,3,0.098,4,0.112,5,0.112,9,0.098,10,0.534,11,1.84,12,0.689,13,0.435,14,0.486,15,0.019,16,1.519,17,0.965,18,0.282,19,0.993,20,0.872,21,0.187,22,0.29,23,0.272,24,0.486,25,1.84,26,0.65,27,1.84,28,1.279,29,1.136,32,1.464,35,1.279,36,3.35,41,0.574,42,0.776,52,1.84,55,0.171,56,2.638,58,2.107,59,0.29,61,1.279,63,0.171,65,0.682,67,3.077,69,2.404,70,1.279,71,1.575,72,1.136,73,1.575,74,4.17,77,0.682,92,0.767,105,2.052,107,1.461,112,0.009,113,0.009,155,1.464,171,0.619,172,1.074,178,0.965,187,2.234,193,2.615,205,1.018,210,2.615,221,1.957,242,1.711,250,1.881,251,1.881,253,0.917,254,1.204,255,1.461,260,1.279,261,1.461,262,1.461,267,1.018,273,1.84,275,3.188,278,2.374,279,2.501,280,2.501,281,2.501,283,3.364,284,3.048,285,2.501,287,3.048,288,1.279,289,2.233,291,1.955,305,1.881,355,1.461,389,2.615,491,2.615,492,1.881,493,4.44,494,3.225,495,4.211,496,2.876,497,3.225,498,2.407,499,3.914,500,2.11,501,1.881,502,1.881,503,2.11,504,2.11,505,2.11,506,2.11,507,3.225,508,2.11,509,2.11,510,2.11,511,2.11,512,2.11,513,2.615,514,2.11,515,3.225,516,2.11,517,2.11,518,2.11]],["title/classes/IllustratorSelectors.html",[63,0.264,519,3.26]],["body/classes/IllustratorSelectors.html",[3,0.12,4,0.138,5,0.138,9,0.12,10,0.659,12,0.666,14,0.458,15,0.019,16,1.426,18,0.265,21,0.231,22,0.359,26,0.802,32,1.411,35,1.579,36,3.676,55,0.138,59,0.711,63,0.211,67,2.995,68,1.9,77,1.668,105,2.47,112,0.011,113,0.011,115,0.456,117,2.613,118,1.411,119,3.521,122,2.132,124,0.903,127,0.853,133,1.684,155,1.411,187,3.368,221,1.911,275,3.167,281,2.153,283,3.167,284,2.153,287,2.153,491,5.035,493,4.337,495,3.364,496,3.364,498,2.816,501,3.364,502,3.364,519,3.772,520,3.032,521,5.164,522,5.164,523,5.164,524,3.032,525,6.009,526,3.032,527,3.032,528,3.032,529,3.032,530,3.032,531,3.032,532,3.032,533,3.032,534,3.032,535,3.032,536,6.009]],["title/injectables/IllustratorState.html",[19,1.004,35,1.977]],["body/injectables/IllustratorState.html",[0,1.269,3,0.086,4,0.098,5,0.098,9,0.086,10,0.47,12,0.61,13,0.383,14,0.478,15,0.019,16,1.613,17,0.849,18,0.266,19,0.899,20,0.767,21,0.165,22,0.256,23,0.239,24,0.52,25,1.666,26,0.572,27,2.06,28,1.126,29,1,32,1.35,35,1.771,36,2.647,41,0.725,42,0.985,52,1.059,55,0.155,56,3.051,58,2.544,59,0.681,61,1.126,63,0.15,65,0.944,67,2.846,68,1.455,69,2.746,70,1.771,71,2.18,72,1.572,73,1.386,74,4.025,77,0.6,92,0.716,105,2.29,107,2.023,112,0.008,113,0.008,118,1.093,122,1.952,124,0.827,127,0.781,136,1,140,1.505,142,1.505,155,1.35,171,0.544,172,0.945,178,0.849,187,1.286,193,1.505,205,1.409,210,1.505,221,1.148,242,2.368,250,2.604,251,2.604,253,1.269,254,1.059,255,1.286,260,1.126,261,1.286,262,1.286,267,1.409,273,2.336,275,2.336,278,2.866,279,1.666,280,3.006,281,2.539,283,3.235,284,2.539,285,3.006,287,2.539,288,1.771,289,2.821,291,1.771,305,2.604,355,2.023,389,1.505,491,1.505,492,1.656,493,3.219,494,1.856,495,2.604,496,1.656,497,1.856,498,1.386,499,4.093,500,1.856,501,2.604,502,2.604,503,2.92,504,2.92,505,1.856,506,1.856,507,2.92,508,1.856,509,1.856,510,2.92,511,2.92,512,2.92,513,2.368,514,2.92,515,2.92,516,1.856,517,1.856,518,1.856,537,2.161,538,2.161,539,2.161,540,2.161,541,2.161,542,2.161,543,2.161,544,2.161,545,2.161,546,2.161]],["title/classes/Load.html",[41,0.478,63,0.264]],["body/classes/Load.html",[3,0.163,4,0.186,5,0.186,6,2.651,7,2.651,9,0.163,12,0.454,13,1.332,14,0.312,15,0.019,17,1.61,18,0.278,21,0.412,22,0.484,23,0.671,24,0.312,40,1.61,41,0.681,42,0.847,43,2.275,44,2.007,51,0.847,52,2.651,55,0.293,59,0.484,63,0.466,65,1.502,66,1.502,67,2.366,92,0.616,112,0.013,113,0.013,115,0.616,124,0.616,127,0.581,131,1.789,149,1.316,156,1.137,164,1.471,166,2.509,167,2.509,168,1.298,169,1.298,173,1.137,180,1.453,253,1.529,266,2.626,267,1.697,268,1.383,269,1.316,270,2.626,271,1.894,272,1.453,547,2.437,548,4.096]],["title/classes/Load-1.html",[41,0.402,63,0.222,97,2.044]],["body/classes/Load-1.html",[3,0.174,4,0.199,5,0.199,9,0.174,12,0.484,13,1.303,14,0.333,15,0.019,16,1.101,18,0.29,21,0.43,22,0.517,23,0.692,24,0.503,41,0.711,42,1.167,51,0.903,55,0.284,59,0.517,63,0.46,65,1.567,92,0.657,112,0.014,113,0.014,115,0.657,124,0.657,127,0.62,131,1.567,149,1.404,156,1.213,164,1.428,168,1.048,169,1.048,171,1.101,173,1.213,184,2.766,185,2.766,191,2.6,199,2.276,243,2.802,268,1.475,269,1.404,272,1.551,277,2.468,292,3.044,293,3.348,294,4.354,295,3.044,296,3.044,297,3.348,547,2.6,549,4.371]],["title/classes/Load-2.html",[41,0.402,63,0.222,550,2.442]],["body/classes/Load-2.html",[3,0.143,4,0.164,5,0.164,9,0.143,12,0.399,13,1.258,14,0.432,15,0.019,16,1.615,18,0.255,21,0.378,22,0.426,23,0.549,24,0.517,32,1.593,41,0.624,42,0.744,51,0.744,55,0.301,58,3.064,59,0.426,63,0.473,65,1.376,92,0.541,112,0.012,113,0.012,115,0.541,124,0.541,127,0.511,131,1.376,149,1.157,155,1.593,156,0.999,164,1.513,168,1.466,169,1.466,173,0.999,180,1.277,205,1.491,221,1.215,253,1.344,267,1.491,268,1.215,269,1.157,271,2.293,272,1.277,273,1.764,274,1.999,275,2.78,276,1.999,277,2.168,278,2.954,279,3.141,280,2.43,281,1.764,282,3.15,283,2.78,284,1.764,285,2.43,286,2.141,287,1.764,288,1.875,289,1.764,290,2.141,291,1.875,547,2.141,551,3.6]],["title/classes/Load-3.html",[41,0.402,63,0.222,552,2.739]],["body/classes/Load-3.html",[3,0.14,4,0.16,5,0.222,9,0.194,12,0.39,13,1.236,14,0.268,15,0.019,18,0.288,21,0.372,22,0.416,23,0.762,24,0.427,40,1.382,41,0.828,48,2.455,51,0.727,55,0.289,59,0.416,63,0.443,66,1.555,88,1.832,92,0.529,112,0.012,113,0.012,115,0.529,124,0.529,127,0.499,146,1.954,147,2.093,148,3.112,149,1.568,151,2.918,152,2.903,154,2.255,155,1.13,156,0.976,157,2.541,158,1.954,159,2.093,160,2.093,161,2.903,162,3.224,163,1.954,164,1.452,165,2.255,166,2.507,167,2.021,168,1.452,169,1.452,170,3.115,171,1.524,172,2.646,173,0.976,174,3.128,175,2.903,176,3.128,177,2.255,178,1.382,179,1.954,180,1.248,181,2.255,182,2.255,547,2.093,553,3.517]],["title/classes/Load-4.html",[41,0.402,63,0.222,554,3.189]],["body/classes/Load-4.html",[3,0.21,4,0.24,5,0.24,9,0.21,15,0.018,18,0.271,21,0.403,23,0.755,24,0.484,41,0.858,51,1.092,55,0.24,63,0.368,112,0.016,113,0.016,115,0.794,164,1.207,171,1.716,476,4.053,555,3.681,556,3.681,557,5.285,558,6.353,559,4.425,560,5.285]],["title/classes/Load-5.html",[41,0.402,63,0.222,561,2.739]],["body/classes/Load-5.html",[3,0.18,4,0.206,5,0.206,9,0.18,12,0.502,13,1.311,14,0.346,15,0.019,16,1.456,18,0.297,21,0.44,22,0.536,23,0.766,24,0.485,41,0.843,42,1.194,51,0.937,55,0.263,59,0.536,63,0.443,92,0.682,112,0.014,113,0.014,115,0.682,124,0.682,127,0.644,131,1.604,149,1.457,156,1.259,164,1.32,168,1.088,169,1.088,173,1.259,268,1.531,269,1.457,272,1.609,277,2.527,547,2.698,562,3.438,563,3.438,564,3.473,565,4.535,566,3.473]],["title/modules/MouseTrackerModule.html",[451,2.433,567,2.907]],["body/modules/MouseTrackerModule.html",[3,0.143,4,0.164,5,0.164,15,0.019,18,0.329,20,1.28,29,1.668,55,0.258,59,0.427,63,0.346,68,1.313,77,1.84,92,1.04,112,0.012,113,0.012,149,1.159,171,1.251,254,1.768,451,2.313,453,2.313,465,3.803,473,2.954,479,2.512,480,2.512,498,3.183,567,3.803,568,2.512,569,3.098,570,3.098,571,3.098,572,5.678,573,3.098,574,4.685,575,3.607,576,4.877,577,3.098,578,3.607,579,3.607,580,4.265,581,4.265,582,3.098,583,3.098,584,3.803,585,3.098,586,4.877,587,4.913,588,4.965,589,4.877,590,4.965,591,4.965,592,4.965,593,3.098,594,4.965,595,4.965,596,3.607,597,3.607,598,4.965,599,4.965,600,3.607,601,3.607,602,4.965,603,4.965,604,3.607,605,4.265,606,3.098,607,3.607,608,3.607,609,3.607,610,3.607,611,3.607,612,3.098,613,3.607,614,4.265,615,3.607,616,3.607,617,3.607,618,3.607,619,2.763,620,3.607,621,3.607,622,4.965,623,3.607]],["title/classes/RegisterFormat.html",[63,0.264,163,2.108]],["body/classes/RegisterFormat.html",[3,0.142,4,0.163,5,0.225,9,0.142,12,0.397,13,1.133,14,0.273,15,0.019,18,0.291,21,0.377,22,0.424,23,0.733,24,0.465,40,1.409,41,0.713,48,2.47,51,0.741,55,0.291,59,0.424,63,0.446,66,1.571,88,1.867,92,0.539,112,0.012,113,0.012,115,0.539,124,0.539,127,0.509,146,1.991,147,2.132,148,3.143,149,1.589,151,2.947,152,2.941,154,2.298,155,1.152,156,0.995,157,3.177,158,1.991,159,2.132,160,2.132,161,3.629,162,3.436,163,2.746,164,1.462,165,2.298,166,2.527,167,2.344,168,1.463,169,1.463,170,2.773,171,1.245,172,2.162,173,0.995,174,2.298,175,2.132,176,2.298,177,2.298,178,1.409,179,1.991,180,1.272,181,2.298,182,2.298,320,3.079,624,3.584]],["title/classes/Reset.html",[42,0.784,63,0.264]],["body/classes/Reset.html",[3,0.17,4,0.195,5,0.195,6,2.099,7,2.099,9,0.17,13,1.308,15,0.019,17,1.683,18,0.286,21,0.424,22,0.506,23,0.686,24,0.424,40,1.683,41,0.539,42,1.151,43,2.378,44,2.099,51,0.885,52,2.73,55,0.298,63,0.473,65,1.189,66,1.546,67,2.436,92,0.644,112,0.014,113,0.014,115,0.644,131,1.718,156,1.189,164,1.497,166,2.307,167,2.307,168,1.336,169,1.336,173,1.189,180,1.52,253,2.079,266,2.745,267,1.774,268,1.446,269,1.376,270,2.745,271,1.98,272,1.52]],["title/classes/Reset-1.html",[42,0.659,63,0.222,97,2.044]],["body/classes/Reset-1.html",[3,0.182,4,0.208,5,0.208,9,0.182,13,1.228,15,0.019,16,1.463,18,0.298,21,0.443,22,0.541,23,0.744,24,0.512,41,0.576,42,1.388,51,0.945,55,0.29,63,0.468,65,1.269,92,0.687,112,0.014,113,0.014,115,0.687,131,1.269,156,1.269,164,1.458,168,1.097,169,1.097,171,1.152,173,1.269,184,2.24,185,2.24,191,2.72,199,2.381,243,2.931,268,1.543,269,1.469,272,1.622,277,1.999,292,3.184,293,3.501,294,4.046,295,3.184,296,3.184,297,3.501]],["title/classes/Reset-2.html",[42,0.659,63,0.222,550,2.442]],["body/classes/Reset-2.html",[3,0.148,4,0.17,5,0.17,9,0.148,13,1.15,14,0.387,15,0.019,16,1.563,18,0.261,21,0.387,22,0.442,23,0.563,24,0.522,32,1.634,41,0.47,42,1.051,51,0.772,55,0.305,58,3.098,63,0.477,65,1.037,92,0.561,112,0.013,113,0.013,115,0.561,131,1.037,155,1.634,156,1.037,164,1.53,168,1.489,169,1.489,173,1.037,180,1.325,205,1.547,221,1.261,253,1.898,267,1.547,268,1.261,269,1.2,271,2.351,272,1.325,273,1.83,274,2.074,275,2.833,276,2.074,277,1.633,278,3.011,279,3.182,280,2.492,281,1.83,282,3.211,283,2.833,284,1.83,285,2.492,286,2.222,287,1.83,288,1.945,289,1.83,290,2.222,291,1.945]],["title/classes/Reset-3.html",[42,0.659,63,0.222,552,2.739]],["body/classes/Reset-3.html",[3,0.19,4,0.217,5,0.217,9,0.19,13,1.244,15,0.019,16,1.203,18,0.307,21,0.455,22,0.565,23,0.778,24,0.497,41,0.752,42,1.411,51,0.988,55,0.272,63,0.454,92,0.718,112,0.015,113,0.015,115,0.718,131,1.326,156,1.326,164,1.364,168,1.146,169,1.146,173,1.326,268,1.613,269,1.535,272,1.695,277,2.089,562,2.842,563,2.842,564,3.659,566,3.659]],["title/interfaces/ScreenModeModel.html",[0,1.417,625,2.643]],["body/interfaces/ScreenModeModel.html",[0,1.809,2,2.883,3,0.192,4,0.22,5,0.22,9,0.192,10,1.053,11,2.953,14,0.459,15,0.019,24,0.369,55,0.22,112,0.015,113,0.015,132,3.415,187,2.883,212,3.81,470,3.415,471,3.642,625,4.197,626,3.107,627,3.107,628,4.846,629,4.398,630,3.863,631,4.615,632,4.914,633,4.204,634,6.026,635,4.615,636,5.175,637,6.026]],["title/classes/ScreenModeSelectors.html",[63,0.264,638,3.26]],["body/classes/ScreenModeSelectors.html",[3,0.152,4,0.174,5,0.174,9,0.152,10,0.834,12,0.574,14,0.395,15,0.019,18,0.301,24,0.478,26,1.014,55,0.174,59,0.612,63,0.267,66,1.437,68,1.66,72,2.394,77,1.437,112,0.013,113,0.013,115,0.577,117,4.278,118,1.664,119,3.309,122,1.837,124,0.778,127,0.735,132,2.697,133,2.131,212,3.485,469,2.459,470,3.745,471,3.75,625,4.808,626,3.758,627,3.758,629,3.319,632,4.371,633,4.023,638,4.447,639,3.836,640,5.178,641,5.178,642,3.836,643,5.178,644,5.178,645,3.836,646,3.606,647,3.295,648,3.836,649,5.178,650,3.836,651,3.836]],["title/injectables/ScreenModeState.html",[19,1.004,469,2.433]],["body/injectables/ScreenModeState.html",[3,0.139,4,0.159,5,0.159,9,0.139,10,0.758,12,0.537,14,0.37,15,0.019,18,0.325,19,1.283,20,1.238,23,0.668,24,0.523,25,3.298,26,0.923,55,0.159,56,2.122,59,0.66,61,1.817,63,0.243,66,1.674,68,1.283,69,2.637,78,2.075,105,1.811,112,0.012,113,0.012,118,1.559,122,1.722,124,0.729,127,0.689,131,1.868,136,1.613,212,3.349,347,2.43,355,2.886,370,2.996,371,2.996,384,4.167,469,3.11,470,3.63,471,3.738,513,4.414,625,3.885,626,3.576,627,3.576,629,3.576,633,2.236,647,2.996,652,3.488,653,4.852,654,4.688,655,3.488,656,4.852,657,3.488,658,4.852,659,3.488,660,4.852,661,3.488,662,3.488,663,2.672,664,3.488,665,3.488,666,3.488,667,3.488]],["title/classes/SendMessage.html",[63,0.264,307,2.907]],["body/classes/SendMessage.html",[0,2.222,3,0.189,4,0.216,5,0.216,9,0.189,12,0.526,14,0.495,15,0.019,18,0.306,21,0.454,22,0.562,23,0.526,51,0.982,55,0.216,59,0.562,63,0.452,112,0.015,113,0.015,115,0.714,124,0.714,127,0.674,149,2.088,164,1.085,168,1.14,169,1.14,282,3.305,304,5.112,307,4.558,312,5.373,314,4.081,341,5.112,668,4.751,669,5.951,670,5.951,671,5.951,672,4.751,673,7.157,674,4.751,675,4.751]],["title/classes/Set.html",[63,0.264,131,1.054]],["body/classes/Set.html",[3,0.172,4,0.197,5,0.197,9,0.223,12,0.48,14,0.331,15,0.019,18,0.223,21,0.331,23,0.48,51,0.896,55,0.255,59,0.513,63,0.391,66,1.559,112,0.014,113,0.014,115,0.652,124,0.652,127,0.616,131,1.975,132,3.244,149,1.394,164,1.283,166,2.58,167,2.58,168,1.347,169,1.347,212,3.459,470,3.244,471,3.882,626,3.6,627,3.6,629,3.993,630,3.993,631,4.301,632,3.021,633,2.78,635,3.322,654,3.021,663,3.322,676,3.725,677,5.349,678,4.337,679,4.337,680,4.823,681,3.725,682,3.725,683,3.725]],["title/classes/SetClicked.html",[63,0.264,285,1.86]],["body/classes/SetClicked.html",[3,0.142,4,0.163,5,0.163,9,0.142,12,0.397,13,1.133,14,0.431,15,0.019,16,1.612,18,0.254,21,0.377,22,0.424,23,0.548,24,0.517,32,1.589,41,0.451,42,0.741,51,0.741,55,0.301,58,3.135,59,0.424,63,0.472,65,0.995,92,0.539,112,0.012,113,0.012,115,0.539,124,0.539,127,0.509,131,0.995,149,1.152,155,1.589,156,0.995,164,1.511,168,1.463,169,1.463,173,0.995,180,1.272,205,1.485,221,1.21,253,1.338,267,1.485,268,1.21,269,1.152,271,2.286,272,1.272,273,1.757,274,1.991,275,3.136,276,1.991,277,1.567,278,3.177,279,3.323,280,2.423,281,1.757,282,3.388,283,2.99,284,1.757,285,2.99,286,2.132,287,2.423,288,1.867,289,1.757,290,2.132,291,1.867,684,3.584,685,3.584]],["title/classes/SetHover.html",[63,0.264,280,1.86]],["body/classes/SetHover.html",[3,0.142,4,0.163,5,0.163,9,0.142,12,0.397,13,1.133,14,0.431,15,0.019,16,1.612,18,0.254,21,0.377,22,0.424,23,0.548,24,0.517,32,1.589,41,0.451,42,0.741,51,0.741,55,0.301,58,3.135,59,0.424,63,0.472,65,0.995,92,0.539,112,0.012,113,0.012,115,0.539,124,0.539,127,0.509,131,0.995,149,1.152,155,1.589,156,0.995,164,1.511,168,1.463,169,1.463,173,0.995,180,1.272,205,1.485,221,1.21,253,1.338,267,1.485,268,1.21,269,1.152,271,2.286,272,1.272,273,1.757,274,1.991,275,3.136,276,1.991,277,1.567,278,3.177,279,3.323,280,2.99,281,1.757,282,3.388,283,2.99,284,2.423,285,2.423,286,2.132,287,1.757,288,1.867,289,1.757,290,2.132,291,1.867,686,3.584,687,3.584]],["title/classes/SetIllustrationUrl.html",[43,2.108,63,0.264]],["body/classes/SetIllustrationUrl.html",[3,0.161,4,0.184,5,0.184,6,2.634,7,2.634,9,0.161,12,0.449,13,1.325,14,0.309,15,0.019,17,2.113,18,0.276,21,0.41,22,0.48,23,0.711,24,0.309,40,1.594,41,0.511,42,0.838,43,2.985,44,2.634,51,0.838,52,2.954,55,0.292,59,0.48,63,0.465,65,1.126,66,1.492,67,2.636,92,0.61,112,0.013,113,0.013,115,0.61,124,0.61,127,0.576,131,1.854,149,1.303,156,1.126,164,1.466,166,2.497,167,2.497,168,1.289,169,1.289,173,1.126,180,1.439,253,1.514,266,2.601,267,1.681,268,1.369,269,1.303,270,2.601,271,1.876,272,1.439,547,2.413,688,4.057]],["title/classes/SetSize.html",[63,0.264,654,2.643]],["body/classes/SetSize.html",[3,0.169,4,0.194,5,0.194,9,0.221,12,0.472,14,0.325,15,0.019,18,0.219,21,0.325,23,0.472,51,0.881,55,0.252,59,0.504,63,0.386,66,1.541,112,0.014,113,0.014,115,0.64,124,0.64,127,0.605,131,1.931,132,2.219,149,1.369,164,1.268,166,2.558,167,2.558,168,1.332,169,1.332,212,3.634,470,3.216,471,3.863,626,3.559,627,3.559,629,3.559,630,3.959,631,3.263,632,4.301,633,3.959,635,4.252,654,3.867,663,3.263,676,3.66,677,5.304,680,4.768,681,4.768,682,4.768,683,4.768,689,4.261,690,4.261]],["title/classes/SourceRefsSelectors.html",[63,0.264,691,3.26]],["body/classes/SourceRefsSelectors.html",[3,0.186,4,0.308,5,0.212,9,0.186,10,1.015,12,0.518,14,0.356,15,0.019,18,0.331,21,0.356,22,0.552,26,1.236,38,2.595,39,3.775,55,0.212,59,0.552,63,0.325,68,1.706,77,1.297,112,0.015,113,0.015,115,0.702,117,3.504,118,1.892,119,3.161,122,1.658,124,0.702,127,0.663,133,2.595,562,3.504,563,3.504,691,5.058,692,4.672,693,5.889,694,5.058,695,5.889,696,6.121,697,4.672,698,4.672,699,5.058,700,4.672,701,4.672]],["title/injectables/SourceRefsState.html",[19,1.004,38,2.108]],["body/injectables/SourceRefsState.html",[3,0.148,4,0.305,5,0.17,9,0.148,10,0.812,12,0.563,13,0.661,14,0.441,15,0.019,16,1.563,17,1.468,18,0.333,19,1.345,20,1.325,21,0.285,22,0.442,23,0.414,24,0.532,25,2.492,26,0.988,27,2.833,28,1.945,29,1.727,38,2.824,41,0.863,42,1.283,55,0.17,56,2.998,57,3.542,59,0.684,61,1.945,63,0.26,65,1.412,68,1.345,69,2.224,70,2.648,77,1.037,105,1.394,107,3.025,112,0.013,113,0.013,118,1.634,122,1.804,124,0.764,127,0.722,136,1.727,140,2.601,142,2.601,171,0.941,172,1.633,178,1.468,253,1.898,254,1.83,255,2.222,260,1.945,261,2.222,262,2.222,513,4.027,562,3.439,563,3.439,694,3.208,696,3.208,699,5.331,702,3.208,703,3.735,704,3.735,705,3.735,706,3.735]],["title/injectables/StateAnalyticsPluginService.html",[19,1.004,472,2.433]],["body/injectables/StateAnalyticsPluginService.html",[3,0.098,4,0.112,5,0.112,9,0.149,10,0.535,12,0.272,14,0.528,15,0.019,16,1.52,18,0.262,19,1.455,20,0.873,23,0.774,24,0.486,26,0.65,55,0.207,57,3.557,59,0.291,63,0.171,66,1.675,68,1.455,69,1.995,72,1.137,77,1.527,78,2.236,92,0.827,105,1.703,112,0.009,113,0.009,118,1.208,124,0.37,127,0.349,132,1.958,136,1.137,171,0.62,172,1.644,178,1.477,209,1.281,221,1.54,223,2.618,254,1.205,260,2.66,269,0.79,295,2.618,336,1.884,355,2.714,364,1.713,377,2.113,455,1.713,467,2.618,472,2.924,473,3.871,474,4.984,479,1.713,480,3.557,482,1.713,486,1.713,487,1.713,488,1.713,568,2.618,574,1.884,584,1.884,587,1.884,589,2.113,612,5.345,619,2.879,630,1.577,646,4.732,707,2.879,708,1.884,709,3.759,710,5.107,711,2.46,712,3.759,713,3.759,714,6.866,715,4.561,716,4.561,717,2.46,718,3.918,719,2.46,720,3.759,721,3.228,722,3.228,723,2.879,724,2.113,725,3.228,726,2.113,727,2.113,728,2.113,729,2.113,730,2.113,731,2.113,732,3.228,733,3.228,734,2.46,735,3.918,736,2.113,737,2.113,738,2.113,739,3.228,740,3.228,741,2.113,742,2.46,743,2.46,744,2.46,745,2.46,746,2.46,747,2.46,748,2.46,749,2.46,750,2.46,751,2.46,752,2.46,753,2.46,754,2.46,755,3.228,756,2.46,757,2.46,758,2.46,759,2.46,760,2.46,761,5.107,762,3.759,763,4.561,764,2.46,765,2.46,766,2.46,767,2.46,768,2.113,769,2.113]],["title/classes/TissueLibrarySelectors.html",[63,0.264,770,3.26]],["body/classes/TissueLibrarySelectors.html",[3,0.168,4,0.192,5,0.192,9,0.219,10,0.917,12,0.467,13,0.747,14,0.468,15,0.019,16,1.389,18,0.335,21,0.321,22,0.499,24,0.497,26,1.116,55,0.192,59,0.499,63,0.428,66,1.171,68,1.459,77,1.171,112,0.014,113,0.014,115,0.634,118,1.772,119,3.012,122,1.497,124,0.634,126,4.224,127,0.599,133,3.413,171,1.747,209,2.872,475,4.335,476,4.023,555,3.841,556,3.841,559,3.841,770,4.737,771,4.218,772,5.515,773,5.515,774,5.515,775,4.992,776,4.218,777,4.218,778,6.145,779,5.515,780,5.515,781,3.623,782,4.218,783,4.218,784,4.218]],["title/injectables/TissueLibraryState.html",[19,1.004,475,2.433]],["body/injectables/TissueLibraryState.html",[3,0.157,4,0.18,5,0.18,9,0.21,10,0.859,12,0.438,14,0.301,15,0.019,16,1.331,18,0.35,19,1.397,20,1.403,21,0.301,22,0.467,23,0.438,24,0.551,26,1.045,27,2.916,28,2.059,29,1.828,41,0.498,55,0.18,56,2.31,59,0.625,63,0.275,65,1.467,66,1.097,68,1.397,70,2.751,77,1.097,112,0.013,113,0.013,118,1.698,122,1.403,124,0.594,127,0.561,136,1.828,167,2.189,171,1.78,178,2.076,242,3.68,254,1.937,255,2.351,260,2.751,261,2.351,262,2.351,347,3.68,475,3.387,476,4.204,555,3.68,556,3.68,559,2.753,741,3.395,775,3.027,781,3.395,785,3.952,786,5.283,787,5.283,788,5.456,789,3.952,790,5.283,791,3.952,792,3.952,793,3.395,794,3.952,795,3.952]],["title/dependencies.html",[796,2.739,797,3.488]],["body/dependencies.html",[15,0.018,20,2.041,112,0.017,113,0.017,573,4.94,797,5.116,798,5.751,799,5.751,800,5.751,801,6.679]],["title/miscellaneous/functions.html",[802,1.897,803,3.911]],["body/miscellaneous/functions.html",[9,0.114,10,1.086,11,1.403,12,0.749,14,0.522,15,0.019,16,0.721,33,2.339,48,1.572,59,0.81,63,0.199,68,1.868,69,1.252,105,1.572,112,0.01,113,0.01,126,3.226,127,0.959,132,1.491,148,1.59,151,1.491,155,2.172,162,2.064,166,1.186,170,1.403,184,1.403,185,1.403,192,1.994,193,2.934,194,2.934,204,4.497,205,1.745,209,2.602,221,2.385,223,4.09,258,4.292,279,2.064,294,1.994,336,2.193,356,2.459,364,1.994,376,3.618,389,1.994,421,2.459,473,3.278,498,1.835,568,2.934,569,2.459,570,4.292,571,4.292,574,4.22,576,3.618,577,4.732,580,3.618,581,3.618,582,2.459,583,2.459,584,4.703,585,2.459,586,4.732,587,4.22,593,3.618,605,2.459,606,2.459,630,1.835,646,3.838,707,2.193,708,3.226,723,2.193,726,2.459,727,2.459,728,2.459,729,2.459,730,2.459,731,2.459,732,2.459,733,2.459,793,2.459,802,1.703,803,2.459,804,4.703,805,6.348,806,2.193,807,4.212,808,4.212,809,4.212,810,4.212,811,4.212,812,4.212,813,2.459,814,4.212,815,4.212,816,4.212,817,2.863,818,2.863,819,2.863,820,2.863,821,2.863,822,2.863,823,5.872,824,2.863,825,5.872,826,2.863,827,2.863,828,2.863,829,2.863,830,2.863,831,2.863,832,2.863,833,2.863,834,2.863,835,2.863,836,2.863,837,2.863,838,2.863,839,2.863,840,2.863,841,4.212,842,2.863,843,2.863,844,2.863,845,2.863,846,2.863,847,2.863,848,2.863,849,2.863,850,2.193,851,2.863]],["title/index.html",[10,0.693,852,3.189,853,3.189]],["body/index.html",[15,0.016,24,0.507,112,0.016,113,0.016,477,4.375,854,5.713,855,6.653,856,5.713,857,6.653,858,6.653,859,5.713,860,5.713,861,5.713]],["title/modules.html",[453,3.295]],["body/modules.html",[15,0.017,112,0.017,113,0.017,324,5.146,452,4.047,453,3.725,567,4.451,862,6.719,863,6.719]],["title/overview.html",[864,4.415]],["body/overview.html",[2,3.387,15,0.016,42,1.177,112,0.016,113,0.016,115,0.856,136,2.633,453,3.65,550,4.361,561,4.89,797,5.086,864,4.89,865,6.64,866,5.693,867,5.693,868,5.693]],["title/properties.html",[11,2.232,796,2.739]],["body/properties.html",[11,2.897,15,0.018,112,0.017,113,0.017,869,5.912,870,5.912]],["title/miscellaneous/typealiases.html",[802,1.897,871,4.554]],["body/miscellaneous/typealiases.html",[6,1.915,7,1.915,8,4.015,10,0.849,14,0.565,15,0.013,23,0.433,24,0.298,25,3.327,32,1.255,56,3.122,112,0.013,113,0.013,151,3.081,152,3.52,157,3.081,171,0.984,184,1.915,185,1.915,186,5.051,188,3.356,192,3.651,198,4.502,199,2.73,200,4.502,201,5.956,202,4.502,203,2.992,204,4.015,205,1.619,206,2.992,207,2.992,327,4.843,344,5.081,347,2.721,476,2.324,492,2.992,555,2.721,556,2.721,559,2.721,562,2.324,563,2.324,614,5.664,702,4.502,775,4.015,788,4.502,802,2.324,804,4.843,806,5.051,850,2.992,872,3.907,873,3.356,874,3.907,875,3.356,876,5.242,877,5.916,878,5.664,879,6.594,880,6.322,881,3.356,882,6.322,883,3.356,884,3.356,885,3.356,886,3.907,887,5.242,888,3.907,889,3.907]],["title/miscellaneous/variables.html",[802,1.897,890,3.911]],["body/miscellaneous/variables.html",[3,0.103,6,0.757,7,0.757,9,0.103,10,0.336,11,1.636,12,0.171,14,0.381,15,0.019,17,0.607,19,0.408,21,0.118,23,0.7,24,0.118,48,1.246,52,1.636,53,1.982,63,0.272,67,1.131,72,1.196,78,0.919,112,0.006,113,0.006,132,0.804,147,0.919,155,2.194,157,1.347,159,0.919,160,0.919,162,1.914,170,1.268,171,0.984,184,1.268,185,1.268,186,2.991,196,2.222,197,3.354,199,2.034,203,2.557,205,1.949,206,1.982,207,1.982,208,2.867,209,2.265,210,1.802,211,2.222,212,2.911,213,3.735,214,2.222,215,1.326,216,1.326,217,1.326,218,2.222,219,1.326,220,1.326,221,1.468,222,1.326,223,1.802,224,1.326,225,1.326,226,3.735,227,1.326,228,1.326,266,1.659,268,1.318,269,1.397,270,0.99,274,0.858,276,0.858,292,1.802,296,1.076,301,1.076,312,1.183,325,3.331,338,4.292,339,2.222,340,1.326,355,1.986,364,5.176,372,2.222,373,2.222,410,3.735,455,1.076,467,1.076,470,0.804,472,0.99,473,2.799,482,1.076,486,1.076,487,1.076,488,1.076,562,0.919,563,0.919,564,1.982,566,1.183,568,1.802,619,1.183,636,2.222,646,5.143,707,1.183,708,2.991,718,2.222,721,2.867,722,2.867,723,1.183,724,2.222,725,1.326,735,2.867,736,1.326,737,1.326,738,1.326,739,1.326,740,1.326,755,2.867,768,1.326,769,2.222,802,0.919,804,2.991,806,2.991,813,2.867,850,1.183,873,1.326,875,1.326,878,3.354,881,3.354,883,3.354,884,3.354,885,2.867,890,1.326,891,5.241,892,7.118,893,1.544,894,1.544,895,2.587,896,6.828,897,2.587,898,1.544,899,2.587,900,3.338,901,2.587,902,4.349,903,3.905,904,2.587,905,2.587,906,2.587,907,2.587,908,2.587,909,2.587,910,2.587,911,2.587,912,2.587,913,2.587,914,2.587,915,2.587,916,2.587,917,2.587,918,5.448,919,2.587,920,2.587,921,4.997,922,3.905,923,3.338,924,3.338,925,2.587,926,3.905,927,2.587,928,2.587,929,2.587,930,1.544,931,1.544,932,1.544,933,4.349,934,1.544,935,1.544,936,1.544,937,1.544,938,1.544,939,5.78,940,5.915,941,1.544,942,2.587,943,3.905,944,1.544,945,1.544,946,3.338,947,4.705,948,2.587,949,1.544,950,1.544,951,1.544,952,1.544,953,1.544,954,1.544,955,1.544,956,4.705,957,1.544,958,2.587,959,2.587,960,1.544,961,1.544,962,3.905,963,1.544,964,1.544,965,1.544,966,3.338,967,1.544,968,1.544,969,1.544,970,1.544,971,1.544,972,1.544,973,1.544,974,1.544,975,1.544,976,1.544,977,1.544,978,1.544,979,1.544,980,1.544,981,1.544,982,1.544,983,1.544,984,1.544,985,1.544,986,1.544,987,1.544,988,1.544,989,1.544,990,1.544,991,1.544,992,1.544,993,1.544,994,1.544,995,1.544,996,1.544,997,1.544,998,1.544,999,3.905,1000,1.544,1001,1.544,1002,1.544,1003,1.544,1004,1.544,1005,1.544,1006,1.544,1007,1.544,1008,1.544,1009,2.587,1010,1.544,1011,3.338,1012,1.544,1013,1.544,1014,2.587,1015,1.544,1016,2.587,1017,1.544]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":421,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":870,"title":{},"body":{"properties.html":{}}}],["1",{"_index":97,"title":{"classes/Load-1.html":{},"classes/Reset-1.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{}}}],["15.1.0",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":550,"title":{"classes/Load-2.html":{},"classes/Reset-2.html":{}},"body":{"overview.html":{}}}],["2.3.0",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":552,"title":{"classes/Load-3.html":{},"classes/Reset-3.html":{}},"body":{}}],["31",{"_index":868,"title":{},"body":{"overview.html":{}}}],["4",{"_index":554,"title":{"classes/Load-4.html":{}},"body":{}}],["5",{"_index":561,"title":{"classes/Load-5.html":{}},"body":{"overview.html":{}}}],["9",{"_index":867,"title":{},"body":{"overview.html":{}}}],["_ctx",{"_index":315,"title":{},"body":{"injectables/ContactState.html":{}}}],["absence",{"_index":835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["action",{"_index":23,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action('[contact",{"_index":675,"title":{},"body":{"classes/SendMessage.html":{}}}],["action('[screenmode",{"_index":680,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["action('[tissuelibrary",{"_index":560,"title":{},"body":{"classes/Load-4.html":{}}}],["action('add",{"_index":177,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["action('clear",{"_index":180,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('compute",{"_index":297,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["action('download",{"_index":181,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["action('highlight",{"_index":290,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["action('load",{"_index":173,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('register",{"_index":165,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["action('reset",{"_index":272,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-5.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('set",{"_index":271,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action(['clear",{"_index":138,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["action([clear",{"_index":104,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["action(addentry",{"_index":345,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearentries",{"_index":349,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearselection",{"_index":512,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(computeaggregates",{"_index":245,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["action(download",{"_index":353,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(highlightcelltype",{"_index":514,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(load",{"_index":70,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["action(registerformat",{"_index":366,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(reset",{"_index":107,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["action(sendmessage",{"_index":309,"title":{},"body":{"injectables/ContactState.html":{}}}],["action(set",{"_index":656,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["action(setclicked",{"_index":511,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(sethover",{"_index":510,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(setillustrationurl",{"_index":91,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["action(setsize",{"_index":660,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["action_log",{"_index":759,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["actiongroup",{"_index":156,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["actiongroup('activeftu",{"_index":270,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('cellsummary",{"_index":296,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('download",{"_index":160,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('illustrator",{"_index":276,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('sourcerefs",{"_index":566,"title":{},"body":{"classes/Load-5.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":355,"title":{},"body":{"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":44,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["activeftu",{"_index":60,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftuactions.load",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeftumodel",{"_index":1,"title":{"interfaces/ActiveFtuModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftuselectors",{"_index":114,"title":{"classes/ActiveFtuSelectors.html":{}},"body":{"classes/ActiveFtuSelectors.html":{}}}],["activeftustate",{"_index":64,"title":{"injectables/ActiveFtuState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["add",{"_index":88,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["addd",{"_index":154,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["added",{"_index":790,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["addentry",{"_index":146,"title":{"classes/AddEntry.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["addentry(ctx",{"_index":343,"title":{},"body":{"injectables/DownloadState.html":{}}}],["aggregate",{"_index":199,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_cell",{"_index":208,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row",{"_index":203,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row.array",{"_index":228,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregates",{"_index":191,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["aggregates(state",{"_index":231,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["aggregation",{"_index":820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aggregrated",{"_index":249,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["aggregrates",{"_index":190,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["alias",{"_index":887,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":872,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["analytics",{"_index":473,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"modules/MouseTrackerModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["analyticsproviders",{"_index":489,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["anchor",{"_index":431,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.click",{"_index":436,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.download",{"_index":434,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.href",{"_index":435,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.remove",{"_index":437,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/common",{"_index":573,"title":{},"body":{"modules/MouseTrackerModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":369,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"modules/MouseTrackerModule.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{}}}],["app",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptitle",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":889,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["array",{"_index":193,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["array.isarray(value",{"_index":766,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["available",{"_index":324,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules.html":{}}}],["base",{"_index":268,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-5.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["base_url",{"_index":93,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["base_url}2d",{"_index":98,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["based",{"_index":832,"title":{},"body":{"miscellaneous/functions.html":{}}}],["behaviour",{"_index":683,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["being",{"_index":715,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["bigint",{"_index":725,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":428,"title":{},"body":{"injectables/DownloadState.html":{}}}],["blob([entry.data",{"_index":403,"title":{},"body":{"injectables/DownloadState.html":{}}}],["boolean",{"_index":132,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["boolean/number/string/null/bigint/undefined",{"_index":731,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["boundary",{"_index":618,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["brand('downloadformatid",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branded",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":404,"title":{},"body":{"injectables/DownloadState.html":{}}}],["browse",{"_index":863,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":427,"title":{},"body":{"injectables/DownloadState.html":{}}}],["builtin",{"_index":374,"title":{},"body":{"injectables/DownloadState.html":{}}}],["calculates",{"_index":839,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":879,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["cancels",{"_index":250,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["canceluncompleted",{"_index":71,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["case",{"_index":396,"title":{},"body":{"injectables/DownloadState.html":{}}}],["cell",{"_index":32,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummary",{"_index":194,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["cellsummaryactions",{"_index":30,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.load(iri",{"_index":79,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.reset",{"_index":108,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryaggregate",{"_index":192,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummaryaggregatecell",{"_index":200,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummaryaggregaterow",{"_index":204,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummarymodel",{"_index":183,"title":{"interfaces/CellSummaryModel.html":{}},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["cellsummaryselectors",{"_index":229,"title":{"classes/CellSummarySelectors.html":{}},"body":{"classes/CellSummarySelectors.html":{}}}],["cellsummarystate",{"_index":31,"title":{"injectables/CellSummaryState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["check",{"_index":727,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["checks",{"_index":130,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["children",{"_index":62,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["class",{"_index":63,"title":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/HighlightCellType.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":115,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/HighlightCellType.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"overview.html":{}}}],["clear",{"_index":40,"title":{"classes/Clear.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["clear(undefined",{"_index":137,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["clearentries",{"_index":179,"title":{"classes/ClearEntries.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["clearentries(ctx",{"_index":348,"title":{},"body":{"injectables/DownloadState.html":{}}}],["clears",{"_index":267,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["clearselection",{"_index":273,"title":{"classes/ClearSelection.html":{}},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["clearselection(undefined",{"_index":537,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["click",{"_index":498,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["click').pipe(map(formatdata",{"_index":609,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["clicked",{"_index":286,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["clientheight",{"_index":592,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["clientwidth",{"_index":591,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["clientx",{"_index":594,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["clienty",{"_index":595,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["color",{"_index":211,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":206,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compute",{"_index":293,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregate",{"_index":258,"title":{},"body":{"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["computeaggregate(summary",{"_index":817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["computeaggregates",{"_index":243,"title":{"classes/ComputeAggregates.html":{}},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregates(undefined",{"_index":244,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["computes",{"_index":85,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["configuration",{"_index":461,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["configuring",{"_index":460,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["const",{"_index":92,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["constant",{"_index":882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constructor",{"_index":149,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["constructor(format",{"_index":320,"title":{},"body":{"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["constructor(hoverlabel",{"_index":448,"title":{},"body":{"classes/HighlightCellType.html":{}}}],["constructor(id",{"_index":150,"title":{},"body":{"classes/AddEntry.html":{}}}],["constructor(iri",{"_index":547,"title":{},"body":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/SetIllustrationUrl.html":{}}}],["constructor(isfullscreen",{"_index":678,"title":{},"body":{"classes/Set.html":{}}}],["constructor(message",{"_index":672,"title":{},"body":{"classes/SendMessage.html":{}}}],["constructor(readonly",{"_index":168,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["constructor(selectedonclick",{"_index":684,"title":{},"body":{"classes/SetClicked.html":{}}}],["constructor(selectedonhover",{"_index":686,"title":{},"body":{"classes/SetHover.html":{}}}],["constructor(size",{"_index":689,"title":{},"body":{"classes/SetSize.html":{}}}],["contact",{"_index":301,"title":{},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["contact.actions",{"_index":316,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactacknowledgement",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactions.sendmessage",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactmessage",{"_index":673,"title":{},"body":{"classes/SendMessage.html":{}}}],["contactservice",{"_index":306,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactstate",{"_index":298,"title":{"injectables/ContactState.html":{}},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["contains",{"_index":210,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":339,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":56,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["conversion",{"_index":443,"title":{},"body":{"injectables/DownloadState.html":{}}}],["convert",{"_index":337,"title":{},"body":{"injectables/DownloadState.html":{}}}],["converted",{"_index":425,"title":{},"body":{"injectables/DownloadState.html":{}}}],["count",{"_index":841,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('gradient",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('size",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid",{"_index":376,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["createdownloadformatid('png",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid('svg",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid(id",{"_index":851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid('about",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('embed",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('exploreftu",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('illustration",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpage",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpagereadmore",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('portal",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('producttitle",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('apptitle",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('contactacknowledgement",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegend",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegendinfo",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthdescription",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthimg",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthmoretext",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthtitle",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrodescription",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroimg",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintromoretext",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintropartners",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroreadmore",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrotitle",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metrics",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricslogo",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricstitle",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('productlogourl",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('producttitle",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('screensizenoticecontent",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegend",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegendinfo",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":166,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"miscellaneous/functions.html":{}}}],["ctx",{"_index":347,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["ctx.dispatch([new",{"_index":380,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.getstate",{"_index":392,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate",{"_index":383,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate(data",{"_index":795,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["current",{"_index":16,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-5.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":171,"title":{},"body":{"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/Reset-1.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dataservice",{"_index":261,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["decorators",{"_index":122,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["default",{"_index":364,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_loggable_actions",{"_index":721,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":61,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["define",{"_index":878,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":124,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["dependencies",{"_index":797,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":745,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["depth",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":726,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["different",{"_index":340,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":441,"title":{},"body":{"injectables/DownloadState.html":{}}}],["disable",{"_index":611,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["discriminated",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispatch",{"_index":75,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["dispatch(new",{"_index":100,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["dispatched",{"_index":716,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["dispatches",{"_index":86,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["display",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document",{"_index":572,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["document).body",{"_index":622,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["document.body.appendchild(anchor",{"_index":433,"title":{},"body":{"injectables/DownloadState.html":{}}}],["document.createelement('a",{"_index":432,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download",{"_index":48,"title":{"classes/Download.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["download(ctx",{"_index":352,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.action",{"_index":375,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.model",{"_index":158,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["download.state",{"_index":330,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["download_entry",{"_index":881,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format",{"_index":883,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format_id",{"_index":884,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_model",{"_index":885,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadactions",{"_index":46,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["downloadactions.clearentries",{"_index":111,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["downloadactions.download",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadactions.load(iri",{"_index":81,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["downloadcontext",{"_index":344,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloaddata(blob",{"_index":429,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadentry",{"_index":152,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformat",{"_index":157,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadformatid",{"_index":151,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformatid:'${id",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadmodel",{"_index":327,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloadremotedata(url",{"_index":445,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloads",{"_index":439,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadselectors",{"_index":322,"title":{"classes/DownloadSelectors.html":{}},"body":{"classes/DownloadSelectors.html":{}}}],["downloadstate",{"_index":47,"title":{"injectables/DownloadState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["draft.entries",{"_index":388,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.entries[createdownloadformatid(format",{"_index":390,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.entries[id",{"_index":391,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.formats[format.id",{"_index":385,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.isfullscreen",{"_index":665,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["draft.size",{"_index":667,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["each",{"_index":846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["el",{"_index":593,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["elements",{"_index":219,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enteries",{"_index":174,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["entires",{"_index":351,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entries",{"_index":170,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["entries[format",{"_index":393,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry",{"_index":148,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{}}}],["entry.ontologyid",{"_index":517,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["entry.url",{"_index":399,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry?.type",{"_index":395,"title":{},"body":{"injectables/DownloadState.html":{}}}],["error('cannot",{"_index":406,"title":{},"body":{"injectables/DownloadState.html":{}}}],["eslint",{"_index":610,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["eslint/explicit",{"_index":617,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["eslint/no",{"_index":615,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["event",{"_index":589,"title":{},"body":{"modules/MouseTrackerModule.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["event.target",{"_index":607,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["events",{"_index":598,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["events.subscribe((data",{"_index":602,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["execute",{"_index":861,"title":{},"body":{"index.html":{}}}],["expandrow",{"_index":807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandrow(row",{"_index":822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expands",{"_index":824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["explicit",{"_index":616,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["explore",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exploreftu",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":55,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["extends",{"_index":164,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["extension",{"_index":410,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":269,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-5.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["fakebase",{"_index":412,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fakebase).pathname",{"_index":416,"title":{},"body":{"injectables/DownloadState.html":{}}}],["false",{"_index":664,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["fetch",{"_index":442,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fields",{"_index":494,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["filename",{"_index":397,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fileurl",{"_index":444,"title":{},"body":{"injectables/DownloadState.html":{}}}],["followed",{"_index":222,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":635,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["forked",{"_index":503,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["forkjoin",{"_index":499,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["form",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":162,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["format.id",{"_index":333,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formatdata",{"_index":588,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["formats",{"_index":325,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["formats(state",{"_index":326,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats.ts",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formats[id",{"_index":411,"title":{},"body":{"injectables/DownloadState.html":{}}}],["formatted",{"_index":426,"title":{},"body":{"injectables/DownloadState.html":{}}}],["forroot",{"_index":456,"title":{},"body":{"modules/HraStateModule.html":{}}}],["forroot(options",{"_index":457,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["found",{"_index":833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fromevent",{"_index":575,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["fromevent(el",{"_index":599,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["ftu",{"_index":17,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions",{"_index":45,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["ftu.actions.ts",{"_index":266,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions.ts:19",{"_index":688,"title":{},"body":{"classes/SetIllustrationUrl.html":{}}}],["ftu.actions.ts:8",{"_index":548,"title":{},"body":{"classes/Load.html":{}}}],["ftu.selectors.ts",{"_index":116,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:15",{"_index":125,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:9",{"_index":129,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state",{"_index":134,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state.ts",{"_index":8,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"miscellaneous/typealiases.html":{}}}],["ftu.state.ts:39",{"_index":141,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:56",{"_index":145,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:67",{"_index":139,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:76",{"_index":143,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu/active",{"_index":7,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftudataschemas",{"_index":195,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["ftudataschemas.cell_summary_row",{"_index":215,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["ftudataservice",{"_index":255,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["full",{"_index":643,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["fullscreen",{"_index":631,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["function",{"_index":584,"title":{},"body":{"modules/MouseTrackerModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":803,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funtion",{"_index":730,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["ga",{"_index":587,"title":{},"body":{"modules/MouseTrackerModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["ga.event('webpage",{"_index":603,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["generated",{"_index":854,"title":{},"body":{"index.html":{}}}],["getactiontypefrominstance",{"_index":719,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getactiontypefrominstance(action",{"_index":753,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getcolumnindex",{"_index":808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnindex(indexbyid",{"_index":827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel",{"_index":809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel(items",{"_index":830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow",{"_index":810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow(rowbyid",{"_index":836,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":126,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{}}}],["getstate",{"_index":73,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["getstate().iri",{"_index":76,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["getstate().mapping.find((entry",{"_index":516,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["getting",{"_index":852,"title":{"index.html":{}},"body":{}}],["gettotalcount",{"_index":811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettotalcount(row",{"_index":838,"title":{},"body":{"miscellaneous/functions.html":{}}}],["given",{"_index":294,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{}}}],["google",{"_index":480,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"modules/MouseTrackerModule.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["googleanalyticsservice",{"_index":574,"title":{},"body":{"modules/MouseTrackerModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["googleanalyticstoken",{"_index":483,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["gradient",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegend",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegendinfo",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":862,"title":{},"body":{"modules.html":{}}}],["group",{"_index":159,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["guess",{"_index":408,"title":{},"body":{"injectables/DownloadState.html":{}}}],["guessfilename(ctx",{"_index":409,"title":{},"body":{"injectables/DownloadState.html":{}}}],["handle",{"_index":57,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["handle(state",{"_index":709,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handler's",{"_index":888,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handles",{"_index":712,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handling",{"_index":242,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/TissueLibraryState.html":{}}}],["hasdata",{"_index":332,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["having",{"_index":188,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["helper",{"_index":886,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["highlightcelltype",{"_index":289,"title":{"classes/HighlightCellType.html":{}},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["highlightcelltype(undefined",{"_index":539,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["highlighted",{"_index":288,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["highlightedcell",{"_index":521,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["highlightedcell(undefined",{"_index":524,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["hover",{"_index":281,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["hovered",{"_index":496,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["hoveredcelltypeid",{"_index":495,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["hoverlabel",{"_index":291,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["hra",{"_index":21,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["hrastatemodule",{"_index":452,"title":{"modules/HraStateModule.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"modules.html":{}}}],["hrastatemoduleoptions",{"_index":458,"title":{"interfaces/HraStateModuleOptions.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["htmlelement",{"_index":586,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["http",{"_index":378,"title":{},"body":{"injectables/DownloadState.html":{}}}],["httpclient",{"_index":368,"title":{},"body":{"injectables/DownloadState.html":{}}}],["https://base.com",{"_index":413,"title":{},"body":{"injectables/DownloadState.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":94,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["id",{"_index":155,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":54,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["ids.ts",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignoring",{"_index":847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["illustrartor",{"_index":497,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustration",{"_index":52,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":275,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["illustrator",{"_index":36,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.actions",{"_index":500,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.state",{"_index":535,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratoractions",{"_index":34,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.load(iri",{"_index":80,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.reset",{"_index":109,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.setclicked",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustratoractions.sethover",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustratormodel",{"_index":491,"title":{"interfaces/IllustratorModel.html":{}},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrators",{"_index":502,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustratorselectors",{"_index":519,"title":{"classes/IllustratorSelectors.html":{}},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratorstate",{"_index":35,"title":{"injectables/IllustratorState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["image",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["immer",{"_index":371,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["implements",{"_index":377,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["importprovidersfrom",{"_index":466,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["importprovidersfrom(ngxgoogleanalyticsmodule.forroot(options.googleanalyticstoken",{"_index":490,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["imports",{"_index":484,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexbyid",{"_index":829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicating",{"_index":834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["individual",{"_index":670,"title":{},"body":{"classes/SendMessage.html":{}}}],["inferred",{"_index":880,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":302,"title":{},"body":{"injectables/ContactState.html":{}}}],["init",{"_index":363,"title":{},"body":{"injectables/DownloadState.html":{}}}],["initial",{"_index":849,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializes",{"_index":282,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SendMessage.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["inject",{"_index":254,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"modules/MouseTrackerModule.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["inject(contactservice",{"_index":318,"title":{},"body":{"injectables/ContactState.html":{}}}],["inject(document",{"_index":620,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["inject(ftudataservice",{"_index":262,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["inject(googleanalyticsservice",{"_index":742,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["inject(httpclient",{"_index":379,"title":{},"body":{"injectables/DownloadState.html":{}}}],["injectable",{"_index":19,"title":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":136,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"overview.html":{}}}],["injectiontoken",{"_index":717,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["injectiontoken('loggable",{"_index":738,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":741,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["input",{"_index":728,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":167,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/TissueLibraryState.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/SendMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{},"overview.html":{}}}],["intializes",{"_index":277,"title":{},"body":{"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-5.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["intro",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iri",{"_index":13,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{}}}],["iri(undefined",{"_index":121,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["iri.split('/').slice",{"_index":96,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["isactive",{"_index":120,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isactive(undefined",{"_index":128,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isfullscreen",{"_index":629,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["isfullscreen(state",{"_index":640,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["isprimitive",{"_index":812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isprimitive(value",{"_index":732,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":279,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/functions.html":{}}}],["items",{"_index":389,"title":{},"body":{"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["iterating",{"_index":842,"title":{},"body":{"miscellaneous/functions.html":{}}}],["json.stringify(action",{"_index":756,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["key",{"_index":761,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["label",{"_index":205,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lanading",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landing",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpage",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthdescription",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthimg",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthmoretext",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthtitle",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedescription",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroimg",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintromoretext",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroreadmore",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagepartners",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagereadmore",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagetitle",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["large",{"_index":633,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["legend",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length",{"_index":823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["less",{"_index":826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":477,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"index.html":{}}}],["library.actions",{"_index":791,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.actions.ts",{"_index":557,"title":{},"body":{"classes/Load-4.html":{}}}],["library.model",{"_index":781,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["library.model.ts",{"_index":877,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["library.selectors.ts",{"_index":771,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.selectors.ts:14",{"_index":777,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state",{"_index":782,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state.ts",{"_index":785,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.state.ts:23",{"_index":789,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library/tissue",{"_index":556,"title":{},"body":{"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["line",{"_index":613,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["link",{"_index":53,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"miscellaneous/variables.html":{}}}],["linkid",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkregistry",{"_index":87,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions",{"_index":49,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions.add(illustration",{"_index":101,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions.navigate",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linktype",{"_index":50,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linktype.external",{"_index":102,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["list",{"_index":736,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":41,"title":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["load(ctx",{"_index":357,"title":{},"body":{"injectables/DownloadState.html":{}}}],["load(undefined",{"_index":140,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["loaded",{"_index":176,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["loading",{"_index":558,"title":{},"body":{"classes/Load-4.html":{}}}],["loads",{"_index":65,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["logaction(action",{"_index":752,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["loggable",{"_index":722,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggable_actions",{"_index":735,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggabletypes",{"_index":746,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logged",{"_index":737,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":713,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logging",{"_index":743,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["login",{"_index":768,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":636,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":750,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["managing",{"_index":300,"title":{},"body":{"injectables/ContactState.html":{}}}],["map",{"_index":577,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["map(formatdata",{"_index":601,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["mapping",{"_index":283,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["mapping(undefined",{"_index":527,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["match",{"_index":515,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["match.ontologyid",{"_index":518,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["matching",{"_index":113,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medical",{"_index":501,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["message",{"_index":312,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":304,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["metadata",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":311,"title":{},"body":{"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["methods",{"_index":118,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["metrics",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricslogo",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricstitle",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":802,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":471,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["mode.actions",{"_index":662,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.actions.ts",{"_index":676,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["mode.actions.ts:15",{"_index":690,"title":{},"body":{"classes/SetSize.html":{}}}],["mode.actions.ts:4",{"_index":679,"title":{},"body":{"classes/Set.html":{}}}],["mode.model",{"_index":647,"title":{},"body":{"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["mode.model.ts",{"_index":628,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["mode.selectors.ts",{"_index":639,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.selectors.ts:15",{"_index":642,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.selectors.ts:24",{"_index":645,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state",{"_index":648,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state.ts",{"_index":652,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.state.ts:23",{"_index":657,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.state.ts:36",{"_index":661,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode/screen",{"_index":627,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["model",{"_index":187,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{}}}],["module",{"_index":451,"title":{"modules/HraStateModule.html":{},"modules/MouseTrackerModule.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"modules/MouseTrackerModule.html":{}}}],["module.ts",{"_index":571,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["modules",{"_index":453,"title":{"modules.html":{}},"body":{"modules/HraStateModule.html":{},"modules/MouseTrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":464,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["more",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mouse",{"_index":581,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["mouseevent",{"_index":590,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["mousemove",{"_index":604,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["mousemove').pipe(throttletime(1000",{"_index":600,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["mousetrackermodule",{"_index":567,"title":{"modules/MouseTrackerModule.html":{}},"body":{"modules/MouseTrackerModule.html":{},"modules.html":{}}}],["movement",{"_index":582,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["multi",{"_index":488,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":59,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["name.includes",{"_index":423,"title":{},"body":{"injectables/DownloadState.html":{}}}],["name}${extension",{"_index":424,"title":{},"body":{"injectables/DownloadState.html":{}}}],["name}.html",{"_index":99,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["navigation",{"_index":90,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["needs",{"_index":762,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["new",{"_index":78,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":612,"title":{},"body":{"modules/MouseTrackerModule.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["next(state",{"_index":749,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngmodule",{"_index":465,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"modules/MouseTrackerModule.html":{}}}],["ngx",{"_index":479,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"modules/MouseTrackerModule.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":478,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxs",{"_index":362,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxs/store",{"_index":26,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["ngxs_plugins",{"_index":467,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["ngxsmodule",{"_index":468,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxsmodule.forfeature",{"_index":485,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxsnextpluginfn",{"_index":710,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxsoninit",{"_index":342,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsoninit(ctx",{"_index":360,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsplugin",{"_index":720,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["node",{"_index":779,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["non",{"_index":848,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notice",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":733,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":223,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":855,"title":{},"body":{"index.html":{}}}],["object",{"_index":209,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.values(formats).filter(hasdata",{"_index":334,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["objects",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":27,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["operations",{"_index":821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":463,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["organ",{"_index":175,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["organs",{"_index":359,"title":{},"body":{"injectables/DownloadState.html":{}}}],["out",{"_index":866,"title":{},"body":{"overview.html":{}}}],["over",{"_index":843,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":864,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":796,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":66,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["parameters",{"_index":127,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partners",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchstate",{"_index":74,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["path",{"_index":414,"title":{},"body":{"injectables/DownloadState.html":{}}}],["path.split('/').filter((seg",{"_index":418,"title":{},"body":{"injectables/DownloadState.html":{}}}],["payload",{"_index":755,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["peer",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["performs",{"_index":819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe(tap",{"_index":84,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["plugin",{"_index":474,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["plugin.service.ts",{"_index":708,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["plugin.service.ts:51",{"_index":711,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["plugin/default",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin/mouse",{"_index":569,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["plugin/state",{"_index":707,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png_format",{"_index":372,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["points",{"_index":596,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["points.join('_",{"_index":597,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["portal",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["position",{"_index":583,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["primitive",{"_index":723,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["primitive_types",{"_index":724,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["primitive_types.includes(typeof",{"_index":734,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["private",{"_index":260,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["produce",{"_index":370,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["produce((draft",{"_index":384,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["product",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productlogourl",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producttitle",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":793,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["provide",{"_index":486,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":739,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":718,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":462,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["provides",{"_index":455,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":481,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["read",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":178,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["record",{"_index":778,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["references",{"_index":699,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["refs",{"_index":39,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/SourceRefsSelectors.html":{}}}],["refs.actions",{"_index":705,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.actions.ts",{"_index":564,"title":{},"body":{"classes/Load-5.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["refs.actions.ts:10",{"_index":565,"title":{},"body":{"classes/Load-5.html":{}}}],["refs.selectors.ts",{"_index":692,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.selectors.ts:9",{"_index":698,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state",{"_index":700,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state.ts",{"_index":702,"title":{},"body":{"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["refs.state.ts:27",{"_index":703,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.state.ts:35",{"_index":704,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs/source",{"_index":563,"title":{},"body":{"classes/Load-5.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["regarding",{"_index":666,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["register",{"_index":161,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["registerformat",{"_index":163,"title":{"classes/RegisterFormat.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["registerformat(ctx",{"_index":365,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(png_format",{"_index":382,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(svg_format",{"_index":381,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registry",{"_index":89,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{}}}],["releases/v1.4/docs/2d",{"_index":95,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["representing",{"_index":202,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["required",{"_index":220,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":42,"title":{"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-5.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"overview.html":{}}}],["reset(undefined",{"_index":142,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["resets",{"_index":253,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{}}}],["resource",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetype",{"_index":447,"title":{},"body":{"injectables/DownloadState.html":{}}}],["result",{"_index":507,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["result$.pipe",{"_index":508,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["results",{"_index":112,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retreiving",{"_index":772,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["retrieves",{"_index":831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":77,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"modules/MouseTrackerModule.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["returns",{"_index":68,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"modules/MouseTrackerModule.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":740,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rowbyid",{"_index":837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rows",{"_index":207,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":859,"title":{},"body":{"index.html":{}}}],["running",{"_index":856,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":29,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"modules/MouseTrackerModule.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["rxjs/operators",{"_index":579,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["save",{"_index":440,"title":{},"body":{"injectables/DownloadState.html":{}}}],["schema",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":470,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"miscellaneous/variables.html":{}}}],["screenmode",{"_index":663,"title":{},"body":{"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["screenmodeaction.set",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screenmodemodel",{"_index":625,"title":{"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screenmodeselectors",{"_index":638,"title":{"classes/ScreenModeSelectors.html":{}},"body":{"classes/ScreenModeSelectors.html":{}}}],["screenmodestate",{"_index":469,"title":{"injectables/ScreenModeState.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screensizenoticecontent",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seg",{"_index":419,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments",{"_index":417,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments.length",{"_index":420,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments[segments.length",{"_index":422,"title":{},"body":{"injectables/DownloadState.html":{}}}],["selected",{"_index":493,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["selectedformat",{"_index":182,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["selectedonclick",{"_index":287,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selectedonclicked",{"_index":522,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonclicked(undefined",{"_index":529,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonhover",{"_index":284,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selectedonhovered",{"_index":523,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonhovered(undefined",{"_index":531,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selection",{"_index":58,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selections",{"_index":103,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["selector",{"_index":133,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["selector(['activeftustate",{"_index":123,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector(['cellsummarystate",{"_index":232,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector(['downloadstate",{"_index":328,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["selector(['illustratorstate",{"_index":525,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector(['screenmodestate",{"_index":641,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["selector(['sourcerefsstate",{"_index":697,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector(['tissuelibrarystate",{"_index":776,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selector([activeftustate",{"_index":135,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector([cellsummarystate",{"_index":238,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector([downloadstate",{"_index":331,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["selector([illustratorstate",{"_index":536,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector([screenmodestate",{"_index":649,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["selector([sourcerefsstate",{"_index":701,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector([tissuelibrarystate",{"_index":783,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selectors",{"_index":117,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{}}}],["send",{"_index":314,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sending",{"_index":303,"title":{},"body":{"injectables/ContactState.html":{}}}],["sendmessage",{"_index":307,"title":{"classes/SendMessage.html":{}},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sendmessage(_ctx",{"_index":308,"title":{},"body":{"injectables/ContactState.html":{}}}],["sends",{"_index":669,"title":{},"body":{"classes/SendMessage.html":{}}}],["serialize",{"_index":729,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["serialize(this",{"_index":764,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serialized",{"_index":763,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serializes",{"_index":760,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["service",{"_index":172,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["set",{"_index":131,"title":{"classes/Set.html":{}},"body":{"classes/ActiveFtuSelectors.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-5.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["set(inject(loggable_actions).map(getactiontypefrominstance",{"_index":747,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["set(undefined",{"_index":655,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["setactive",{"_index":786,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["setactive(ctx",{"_index":787,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["setclicked",{"_index":285,"title":{"classes/SetClicked.html":{}},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["setclicked(undefined",{"_index":543,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["sethover",{"_index":280,"title":{"classes/SetHover.html":{}},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["sethover(undefined",{"_index":545,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["setillustrationurl",{"_index":43,"title":{"classes/SetIllustrationUrl.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["setillustrationurl(iri",{"_index":83,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["setillustrationurl(undefined",{"_index":144,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["sets",{"_index":278,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["setsize",{"_index":654,"title":{"classes/SetSize.html":{}},"body":{"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["setsize(undefined",{"_index":659,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["setstate",{"_index":513,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["setting",{"_index":744,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["show",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["single",{"_index":198,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":212,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"miscellaneous/variables.html":{}}}],["size(state",{"_index":644,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["sizelegend",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sizelegendinfo",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["small",{"_index":632,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["small/large",{"_index":681,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"modules/MouseTrackerModule.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["sourcereference",{"_index":696,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences",{"_index":694,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences(refs",{"_index":695,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsactions",{"_index":37,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.load(iri",{"_index":82,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.reset",{"_index":110,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsselectors",{"_index":691,"title":{"classes/SourceRefsSelectors.html":{}},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsstate",{"_index":38,"title":{"injectables/SourceRefsState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcerefstate",{"_index":693,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["specified",{"_index":356,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["src/.../active",{"_index":873,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../builtin",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cell",{"_index":804,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.action.ts",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.model.ts",{"_index":806,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../illustrator.actions.ts",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../illustrator.state.ts",{"_index":874,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../link",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mouse",{"_index":815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../resource",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../source",{"_index":875,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../state",{"_index":813,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":876,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/active",{"_index":6,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cell",{"_index":184,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.actions.ts",{"_index":668,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.actions.ts:5",{"_index":674,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.state.ts",{"_index":299,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/contact/contact.state.ts:16",{"_index":310,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/download/builtin",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts",{"_index":147,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts:11",{"_index":624,"title":{},"body":{"classes/RegisterFormat.html":{}}}],["src/lib/download/download.action.ts:24",{"_index":553,"title":{},"body":{"classes/Load-3.html":{}}}],["src/lib/download/download.action.ts:37",{"_index":153,"title":{},"body":{"classes/AddEntry.html":{}}}],["src/lib/download/download.action.ts:52",{"_index":321,"title":{},"body":{"classes/Download.html":{}}}],["src/lib/download/download.model.ts",{"_index":850,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.selectors.ts",{"_index":323,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.selectors.ts:15",{"_index":329,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.state.ts",{"_index":335,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:113",{"_index":354,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:40",{"_index":361,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:50",{"_index":367,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:65",{"_index":358,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:86",{"_index":346,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:99",{"_index":350,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/illustrator/illustrator.actions.ts",{"_index":274,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/variables.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:10",{"_index":551,"title":{},"body":{"classes/Load-2.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:20",{"_index":687,"title":{},"body":{"classes/SetHover.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:30",{"_index":685,"title":{},"body":{"classes/SetClicked.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:40",{"_index":449,"title":{},"body":{"classes/HighlightCellType.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts",{"_index":520,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:14",{"_index":534,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:22",{"_index":532,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:30",{"_index":530,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:38",{"_index":528,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:46",{"_index":526,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.state.ts",{"_index":492,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/illustrator/illustrator.state.ts:100",{"_index":540,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:49",{"_index":541,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:68",{"_index":546,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:76",{"_index":544,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:84",{"_index":538,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:92",{"_index":542,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/link",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/resource",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/screen",{"_index":626,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["src/lib/source",{"_index":562,"title":{},"body":{"classes/Load-5.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state",{"_index":568,"title":{},"body":{"modules/MouseTrackerModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state.module.ts",{"_index":454,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["src/lib/state.module.ts:47",{"_index":459,"title":{},"body":{"modules/HraStateModule.html":{}}}],["src/lib/tissue",{"_index":555,"title":{},"body":{"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":853,"title":{"index.html":{}},"body":{}}],["state",{"_index":24,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.aggregates",{"_index":239,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state.isfullscreen",{"_index":650,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["state.nodes",{"_index":784,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["state.size",{"_index":651,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["state.summaries",{"_index":240,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state_logger_provider",{"_index":769,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["stateanalyticspluginservice",{"_index":472,"title":{"injectables/StateAnalyticsPluginService.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["statecontext",{"_index":25,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["states",{"_index":106,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["static",{"_index":119,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["store",{"_index":295,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["stores",{"_index":247,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["storing",{"_index":653,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["string",{"_index":221,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/ClearSelection.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":217,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["submitted",{"_index":671,"title":{},"body":{"classes/SendMessage.html":{}}}],["submitting",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subscription",{"_index":576,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["summaries",{"_index":189,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summaries(state",{"_index":234,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summaries.map(computeaggregate",{"_index":265,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary",{"_index":33,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"miscellaneous/functions.html":{}}}],["summary.actions",{"_index":257,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.actions.ts",{"_index":292,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["summary.actions.ts:8",{"_index":549,"title":{},"body":{"classes/Load-1.html":{}}}],["summary.helpers",{"_index":259,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.helpers.ts",{"_index":805,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary.model",{"_index":236,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summary.model.ts",{"_index":186,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summary.selectors.ts",{"_index":230,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:10",{"_index":233,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:16",{"_index":235,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state",{"_index":237,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state.ts",{"_index":241,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:27",{"_index":248,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:38",{"_index":246,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:48",{"_index":252,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary/cell",{"_index":185,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summing",{"_index":844,"title":{},"body":{"miscellaneous/functions.html":{}}}],["super",{"_index":169,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["svg",{"_index":338,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["svg_format",{"_index":373,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":394,"title":{},"body":{"injectables/DownloadState.html":{}}}],["switchmap",{"_index":256,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["takes",{"_index":818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tap",{"_index":28,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["tap((items",{"_index":387,"title":{},"body":{"injectables/DownloadState.html":{}}}],["tap((result",{"_index":509,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["tap((summaries",{"_index":264,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["target",{"_index":605,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["target.classname",{"_index":608,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["test",{"_index":860,"title":{},"body":{"index.html":{}}}],["tests",{"_index":858,"title":{},"body":{"index.html":{}}}],["text",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.contact.sendmessage(message",{"_index":319,"title":{},"body":{"injectables/ContactState.html":{}}}],["this.dataservice.getcellsummaries(iri).pipe",{"_index":263,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.dataservice.getdatafilereferences(iri).pipe",{"_index":386,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.dataservice.getillustrationmapping(iri",{"_index":506,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getillustrationurl(iri",{"_index":505,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getsourcereferences(iri).pipe(tap(setstate",{"_index":706,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["this.dataservice.gettissuelibrary().pipe(tap((data",{"_index":794,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["this.downloaddata(data",{"_index":401,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloaddata(new",{"_index":402,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloadremotedata(entry.url).pipe(tap((data",{"_index":400,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.ga.event(type",{"_index":758,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.guessfilename(ctx",{"_index":398,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.http.get(url",{"_index":446,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.logaction(action",{"_index":748,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.loggabletypes.has(type",{"_index":754,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.serialize",{"_index":757,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["throttletime",{"_index":578,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["throw",{"_index":405,"title":{},"body":{"injectables/DownloadState.html":{}}}],["tissedata",{"_index":780,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissue",{"_index":476,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrary",{"_index":559,"title":{},"body":{"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarycontext",{"_index":788,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarymodel",{"_index":775,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryselectors",{"_index":770,"title":{"classes/TissueLibrarySelectors.html":{}},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissuelibraryservice",{"_index":792,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["tissuelibrarystate",{"_index":475,"title":{"injectables/TissueLibraryState.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["tissues",{"_index":773,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissues(state",{"_index":774,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["title",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["together",{"_index":504,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["toggle",{"_index":682,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["token",{"_index":482,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tooltip",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":840,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tracker",{"_index":570,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["trackmouseclicks",{"_index":814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trackmouseclicks((document",{"_index":623,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["trackmouseclicks(el",{"_index":606,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["trackmouseposition",{"_index":816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trackmouseposition((document",{"_index":621,"title":{},"body":{"modules/MouseTrackerModule.html":{}}}],["trackmouseposition(el",{"_index":585,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["tracks",{"_index":580,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["transform((id",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformed",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigerred",{"_index":751,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["true",{"_index":72,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":216,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":218,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ClearSelection.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset-2.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":871,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":765,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["types",{"_index":619,"title":{},"body":{"modules/MouseTrackerModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["types.ts",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":614,"title":{},"body":{"modules/MouseTrackerModule.html":{},"miscellaneous/typealiases.html":{}}}],["ui/cdk/state",{"_index":51,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["ui/services",{"_index":22,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["uncompleted",{"_index":251,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["undefined",{"_index":105,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["union",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":857,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":714,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["up",{"_index":845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update",{"_index":677,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["updates",{"_index":658,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["url",{"_index":67,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["url(undefined",{"_index":533,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["url(url",{"_index":415,"title":{},"body":{"injectables/DownloadState.html":{}}}],["used",{"_index":336,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":487,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":341,"title":{},"body":{"injectables/DownloadState.html":{},"classes/SendMessage.html":{}}}],["uses",{"_index":313,"title":{},"body":{"injectables/ContactState.html":{}}}],["using",{"_index":305,"title":{},"body":{"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["value",{"_index":646,"title":{},"body":{"classes/ScreenModeSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.every(isprimitive",{"_index":767,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["variable",{"_index":317,"title":{},"body":{"injectables/ContactState.html":{}}}],["variables",{"_index":890,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":869,"title":{},"body":{"properties.html":{}}}],["visibility",{"_index":637,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["void",{"_index":69,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["web",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wheather",{"_index":634,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["whether",{"_index":630,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["window.url.createobjecturl(blob",{"_index":430,"title":{},"body":{"injectables/DownloadState.html":{}}}],["window.url.revokeobjecturl(url",{"_index":438,"title":{},"body":{"injectables/DownloadState.html":{}}}],["without",{"_index":407,"title":{},"body":{"injectables/DownloadState.html":{}}}],["yes",{"_index":450,"title":{},"body":{"classes/HighlightCellType.html":{}}}],["z",{"_index":196,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.discriminatedunion('type",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":201,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["z.literal('data",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal('url",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().nonnegative",{"_index":214,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.number().optional()]).rest(aggregate_cell.optional",{"_index":225,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":213,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.record(download_format_id",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":226,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":227,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.tuple([z.string",{"_index":224,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":197,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":865,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActiveFtuModel.html":{"url":"interfaces/ActiveFtuModel.html","title":"interface - ActiveFtuModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveFtuModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for ActiveFtuModel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            iri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iri:     Iri\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Iri\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Iri for the current Ftu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions, CellSummaryState } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset, SetIllustrationUrl } from './active-ftu.actions';\nimport { DownloadActions, DownloadState } from '../download';\nimport { LinkRegistryActions, LinkType } from '@hra-ui/cdk/state';\nimport { Illustration } from '../link-ids';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [CellSummaryState, DownloadState, IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new DownloadActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n        new SetIllustrationUrl(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * This Action computes the url and dispatches the LinkRegistry Action to add\n   * the link to the registry for navigation\n   */\n  @Action(SetIllustrationUrl)\n  setIllustrationUrl({ dispatch }: Context, { iri }: SetIllustrationUrl): Observable | void {\n    const BASE_URL = 'https://hubmapconsortium.github.io/ccf-releases/v1.4/docs/2d-ftu/';\n    const [name] = iri.split('/').slice(-1);\n    const url = `${BASE_URL}2d-ftu-${name}.html`;\n    return dispatch(new LinkRegistryActions.Add(Illustration, { type: LinkType.External, url }));\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to reset the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([\n      new CellSummaryActions.Reset(),\n      new IllustratorActions.Reset(),\n      new SourceRefsActions.Reset(),\n      new DownloadActions.ClearEntries(),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActiveFtuSelectors.html":{"url":"classes/ActiveFtuSelectors.html","title":"class - ActiveFtuSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActiveFtuSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for ActiveftuState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                iri\n                            \n                            \n                                    Static\n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        iri\n                        \n                    \n                \n            \n            \n                \n                    \n                    iri(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:15\n                \n            \n\n\n            \n                \n                    gets the iri from the ActiveFtuModel\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Iri | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:9\n                \n            \n\n\n            \n                \n                    checks if the Iri is set\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { ActiveFtuModel, ActiveFtuState } from './active-ftu.state';\n\n/** selectors for ActiveftuState */\nexport class ActiveFtuSelectors {\n  /** checks if the Iri is set */\n  @Selector([ActiveFtuState])\n  static isActive({ iri }: ActiveFtuModel): boolean {\n    return iri !== undefined;\n  }\n\n  /** gets the iri from the ActiveFtuModel */\n  @Selector([ActiveFtuState])\n  static iri({ iri }: ActiveFtuModel): Iri | undefined {\n    return iri;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActiveFtuState.html":{"url":"injectables/ActiveFtuState.html","title":"injectable - ActiveFtuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActiveFtuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle active FTU selection\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                            \n                                setIllustrationUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(['Clear', 'Reset'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:67\n                \n            \n\n\n            \n                \n                    Action to clear the iri selections\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:39\n                \n            \n\n\n            \n                \n                    loads the Cell summary, Illustrator and Source Refs\nwith the current iri\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        load An observable of void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:76\n                \n            \n\n\n            \n                \n                    Action to reset the states for\nCell summary, Illustrator and Source Refs\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIllustrationUrl\n                        \n                    \n                \n            \n            \n                \nsetIllustrationUrl(undefined: Context, undefined: SetIllustrationUrl)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetIllustrationUrl)\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:56\n                \n            \n\n\n            \n                \n                    This Action computes the url and dispatches the LinkRegistry Action to add\nthe link to the registry for navigation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetIllustrationUrl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions, CellSummaryState } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset, SetIllustrationUrl } from './active-ftu.actions';\nimport { DownloadActions, DownloadState } from '../download';\nimport { LinkRegistryActions, LinkType } from '@hra-ui/cdk/state';\nimport { Illustration } from '../link-ids';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [CellSummaryState, DownloadState, IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new DownloadActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n        new SetIllustrationUrl(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * This Action computes the url and dispatches the LinkRegistry Action to add\n   * the link to the registry for navigation\n   */\n  @Action(SetIllustrationUrl)\n  setIllustrationUrl({ dispatch }: Context, { iri }: SetIllustrationUrl): Observable | void {\n    const BASE_URL = 'https://hubmapconsortium.github.io/ccf-releases/v1.4/docs/2d-ftu/';\n    const [name] = iri.split('/').slice(-1);\n    const url = `${BASE_URL}2d-ftu-${name}.html`;\n    return dispatch(new LinkRegistryActions.Add(Illustration, { type: LinkType.External, url }));\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to reset the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([\n      new CellSummaryActions.Reset(),\n      new IllustratorActions.Reset(),\n      new SourceRefsActions.Reset(),\n      new DownloadActions.ClearEntries(),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddEntry.html":{"url":"classes/AddEntry.html","title":"class - AddEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Add entry into download state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: DownloadFormatId, entry: DownloadEntry)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor for Addd Entry\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        DownloadEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CellSummaryModel.html":{"url":"interfaces/CellSummaryModel.html","title":"interface - CellSummaryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CellSummaryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.model.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface of the Cell summary model\nhaving the summaries and aggregrates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aggregates\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aggregates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggregates:         CellSummaryAggregate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CellSummaryAggregate[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of aggregates of the Cell Summary\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:     CellSummary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CellSummary[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of summaries of the Cell Summary\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CellSummary, FtuDataSchemas } from '@hra-ui/services';\nimport { StateContext } from '@ngxs/store';\nimport { z } from 'zod';\n\n/** Single aggregate cell */\nexport type CellSummaryAggregateCell = z.infer;\n\n/** Type representing a single AGGREGATE_ROW */\nexport type CellSummaryAggregateRow = z.infer;\n\n/** Type representing AGGREGATE having label, columns and rows */\nexport type CellSummaryAggregate = z.infer;\n\n/**\n * An interface of the Cell summary model\n * having the summaries and aggregrates\n */\nexport interface CellSummaryModel {\n  /** Array of summaries of the Cell Summary */\n  summaries: CellSummary[];\n  /** Array of aggregates of the Cell Summary */\n  aggregates: CellSummaryAggregate[];\n}\n\nexport type Context = StateContext;\n\n/**\n * The AGGREGATE_CELL is an object that contains the color, size and\n * the data\n */\nconst AGGREGATE_CELL = z.object({\n  color: z.number().nonnegative(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n});\n\n/**\n * The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\n * a required string followed by an optional number\n */\nconst AGGREGATE_ROW = z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional());\n\n/**\n * The AGGREGATE is an object that contains the label, columns\n * and rows */\nconst AGGREGATE = z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellSummarySelectors.html":{"url":"classes/CellSummarySelectors.html","title":"class - CellSummarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellSummarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for the CellSummary state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                aggregates\n                            \n                            \n                                    Static\n                                summaries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        aggregates\n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregates(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:10\n                \n            \n\n\n            \n                \n                    get the aggregate data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        summaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    summaries(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:16\n                \n            \n\n\n            \n                \n                    get the summaries data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CellSummary[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { CellSummary } from '@hra-ui/services';\nimport { CellSummaryModel, CellSummaryAggregate } from './cell-summary.model';\nimport { CellSummaryState } from './cell-summary.state';\n\n/** selectors for the CellSummary state */\nexport class CellSummarySelectors {\n  /** get the aggregate data from the state */\n  @Selector([CellSummaryState])\n  static aggregates(state: CellSummaryModel): CellSummaryAggregate[] {\n    return state.aggregates;\n  }\n\n  /** get the summaries data from the state */\n  @Selector([CellSummaryState])\n  static summaries(state: CellSummaryModel): CellSummary[] {\n    return state.summaries;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CellSummaryState.html":{"url":"injectables/CellSummaryState.html","title":"injectable - CellSummaryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CellSummaryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling cell summary data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeAggregates\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        computeAggregates\n                        \n                    \n                \n            \n            \n                \ncomputeAggregates(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ComputeAggregates)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:38\n                \n            \n\n\n            \n                \n                    computes aggregate data and stores in the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the cell summary data and aggregrated of the current Iri into\nthe state and cancels uncompleted action if any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:48\n                \n            \n\n\n            \n                \n                    Resets the summaries and aggregates for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { ComputeAggregates, Load, Reset } from './cell-summary.actions';\nimport { computeAggregate } from './cell-summary.helpers';\nimport { CellSummaryModel, Context } from './cell-summary.model';\n\n/** State handling cell summary data */\n@State({\n  name: 'cellSummary',\n  defaults: {\n    summaries: [],\n    aggregates: [],\n  },\n})\n@Injectable()\nexport class CellSummaryState {\n  /** Data service to load the FTU data */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the cell summary data and aggregrated of the current Iri into\n   * the state and cancels uncompleted action if any\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState, dispatch }: Context, { iri }: Load): Observable {\n    return this.dataService.getCellSummaries(iri).pipe(\n      tap((summaries) => patchState({ summaries, aggregates: [] })),\n      switchMap(() => dispatch(new ComputeAggregates()))\n    );\n  }\n\n  /**\n   * computes aggregate data and stores in the current state\n   */\n  @Action(ComputeAggregates)\n  computeAggregates({ getState, patchState }: Context): void {\n    const { summaries } = getState();\n    const aggregates = summaries.map(computeAggregate);\n    patchState({ aggregates });\n  }\n\n  /**\n   * Resets the summaries and aggregates for the current state\n   */\n  @Action(Reset)\n  reset({ patchState }: Context): void {\n    patchState({ summaries: [], aggregates: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clear.html":{"url":"classes/Clear.html","title":"class - Clear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the Iri\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearEntries.html":{"url":"classes/ClearEntries.html","title":"class - ClearEntries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearEntries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Clear all entries from download state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelection.html":{"url":"classes/ClearSelection.html","title":"class - ClearSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the selection for the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComputeAggregates.html":{"url":"classes/ComputeAggregates.html","title":"class - ComputeAggregates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComputeAggregates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Compute aggregate of the given data and store to state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactState.html":{"url":"injectables/ContactState.html","title":"injectable - ContactState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact'\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(_ctx: StateContext, undefined: SendMessage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SendMessage)\n                \n            \n\n            \n                \n                    Defined in src/lib/contact/contact.state.ts:16\n                \n            \n\n\n            \n                \n                    An action method for sending a message. It uses SendMessage action class to send messages.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SendMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { ContactService } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SendMessage } from './contact.actions';\n\n/** A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact' */\n@State({ name: 'contact' })\n@Injectable()\nexport class ContactState {\n  /** A variable to inject the ContactService */\n  private readonly contact = inject(ContactService);\n\n  /** An action method for sending a message. It uses SendMessage action class to send messages. */\n  @Action(SendMessage)\n  sendMessage(_ctx: StateContext, { message }: SendMessage): Observable | void {\n    return this.contact.sendMessage(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Download.html":{"url":"classes/Download.html","title":"class - Download","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Download\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Download file Action\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormatId)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:52\n                            \n                        \n\n                \n                    \n                            Creates an instance of download.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DownloadSelectors.html":{"url":"classes/DownloadSelectors.html","title":"class - DownloadSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Available format selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                formats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        formats\n                        \n                    \n                \n            \n            \n                \n                    \n                    formats(state: DownloadModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['DownloadState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.selectors.ts:15\n                \n            \n\n\n            \n                \n                    Selectors available format for download selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                DownloadModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormat[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { DownloadFormat, DownloadModel } from './download.model';\nimport { DownloadState } from './download.state';\n\n/**\n * Available format selectors\n */\nexport class DownloadSelectors {\n  /**\n   * Selectors available format for download selectors\n   * @param state\n   * @returns\n   */\n  @Selector([DownloadState])\n  static formats(state: DownloadModel): DownloadFormat[] {\n    const { formats, entries } = state;\n    const hasData = (format: DownloadFormat | undefined): format is DownloadFormat =>\n      !!(format && format.id in entries);\n    return Object.values(formats).filter(hasData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DownloadState.html":{"url":"injectables/DownloadState.html","title":"injectable - DownloadState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DownloadState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Download State Model used to convert\nfile from SVG file content to different\nformat and download to user.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEntry\n                            \n                            \n                                clearEntries\n                            \n                            \n                                download\n                            \n                            \n                                load\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                registerFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEntry\n                        \n                    \n                \n            \n            \n                \naddEntry(ctx: DownloadContext, undefined: AddEntry)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddEntry)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:86\n                \n            \n\n\n            \n                \n                    Add entry into download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                AddEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearEntries\n                        \n                    \n                \n            \n            \n                \nclearEntries(ctx: DownloadContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearEntries)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:99\n                \n            \n\n\n            \n                \n                    Clear entires from download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        download\n                        \n                    \n                \n            \n            \n                \ndownload(ctx: DownloadContext, undefined: Download)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Download)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:113\n                \n            \n\n\n            \n                \n                    Actions download file in specified format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Download\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(ctx: DownloadContext, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:65\n                \n            \n\n\n            \n                \n                    Action to add the Organs IRI from the data service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Context\n\n                                    \n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: DownloadContext)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/download/download.state.ts:40\n                \n            \n\n\n            \n                \n                    Ngxs on init and registry default format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFormat\n                        \n                    \n                \n            \n            \n                \nregisterFormat(ctx: DownloadContext, undefined: RegisterFormat)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RegisterFormat)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:50\n                \n            \n\n\n            \n                \n                    Actions register format in Download State\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                RegisterFormat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, NgxsOnInit, State } from '@ngxs/store';\nimport produce from 'immer';\nimport { Observable, tap } from 'rxjs';\n\nimport { FtuDataService, Iri } from '@hra-ui/services';\nimport { PNG_FORMAT, SVG_FORMAT } from './builtin-formats';\nimport { AddEntry, ClearEntries, Download, Load, RegisterFormat } from './download.action';\nimport { createDownloadFormatId, DownloadContext, DownloadFormatId, DownloadModel } from './download.model';\n\n/**\n * Download State Model used to convert\n * file from SVG file content to different\n * format and download to user.\n */\n@State({\n  name: 'download',\n  defaults: {\n    formats: {},\n    entries: {},\n  },\n})\n@Injectable()\nexport class DownloadState implements NgxsOnInit {\n  /**\n   * Http object inject for download state\n   */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Data service of download state\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Ngxs on init and registry default format\n   * @param ctx\n   */\n  ngxsOnInit(ctx: DownloadContext): void {\n    ctx.dispatch([new RegisterFormat(SVG_FORMAT), new RegisterFormat(PNG_FORMAT)]);\n  }\n\n  /**\n   * Actions register format in Download State\n   * @param ctx\n   * @param { format }\n   */\n  @Action(RegisterFormat)\n  registerFormat(ctx: DownloadContext, { format }: RegisterFormat): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.formats[format.id] = format;\n      })\n    );\n  }\n\n  /**\n   * Action to add the Organs IRI from the data service\n   * @param ctx Context\n   * @param iri Organ Data\n   * @returns\n   */\n  @Action(Load)\n  load(ctx: DownloadContext, { iri }: Load): Observable {\n    return this.dataService.getDataFileReferences(iri).pipe(\n      tap((items) =>\n        ctx.setState(\n          produce((draft) => {\n            draft.entries = {};\n            for (const { format, url } of items) {\n              draft.entries[createDownloadFormatId(format)] = { type: 'url', url };\n            }\n          })\n        )\n      )\n    );\n  }\n\n  /**\n   * Add entry into download state\n   * @param ctx\n   * @param { id, entry }\n   */\n  @Action(AddEntry)\n  addEntry(ctx: DownloadContext, { id, entry }: AddEntry): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries[id] = entry;\n      })\n    );\n  }\n\n  /**\n   * Clear entires from download state\n   * @param ctx\n   */\n  @Action(ClearEntries)\n  clearEntries(ctx: DownloadContext): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries = {};\n      })\n    );\n  }\n\n  /**\n   * Actions download file in specified format\n   * @param ctx\n   * @param action\n   */\n  @Action(Download)\n  download(ctx: DownloadContext, { format }: Download): Observable | void {\n    const { entries } = ctx.getState();\n    const entry = entries[format];\n    switch (entry?.type) {\n      case 'url': {\n        const filename = this.guessFilename(ctx, format, entry.url);\n        return this.downloadRemoteData(entry.url).pipe(tap((data) => this.downloadData(data, filename)));\n      }\n\n      case 'data': {\n        const filename = this.guessFilename(ctx, format, '');\n        this.downloadData(new Blob([entry.data]), filename);\n        break;\n      }\n\n      default:\n        throw new Error('Cannot download file without data');\n    }\n  }\n\n  /**\n   * Guess filename\n   * @param ctx\n   * @param id\n   * @param url\n   * @returns filename\n   */\n  private guessFilename(ctx: DownloadContext, id: DownloadFormatId, url: string): string {\n    const { formats } = ctx.getState();\n    const { extension = '' } = formats[id] ?? {};\n    const fakeBase = 'https://base.com';\n    const path = new URL(url, fakeBase).pathname;\n    const segments = path.split('/').filter((seg) => seg !== '');\n    const name = segments.length > 0 ? segments[segments.length - 1] : 'download';\n    const guess = name.includes('.') ? name : `${name}${extension}`;\n\n    return guess;\n  }\n\n  /**\n   * Download converted formatted file to browser\n   * @param blob\n   * @param fileName\n   */\n  private downloadData(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n    anchor.download = filename;\n    anchor.href = url;\n    anchor.click();\n    anchor.remove();\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Downloads and save -  method is used to direct fetch file\n   * if available on url without conversion\n   * @param fileUrl\n   * @param fileName\n   */\n  private downloadRemoteData(url: string): Observable {\n    return this.http.get(url, { responseType: 'blob' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HighlightCellType.html":{"url":"classes/HighlightCellType.html","title":"class - HighlightCellType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HighlightCellType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets highlighted cell type id in the state from label\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hoverLabel?: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:40\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hoverLabel\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraStateModule.html":{"url":"modules/HraStateModule.html","title":"module - HraStateModule","body":"\n                   \n\n\n\n\n    Modules\n    HraStateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/state.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Provides all states\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: HraStateModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state.module.ts:47\n                \n            \n\n\n            \n                \n                    Static method for configuring the module\nReturns a configuration object with the module and the providers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HraStateModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, importProvidersFrom } from '@angular/core';\nimport { NGXS_PLUGINS, NgxsModule } from '@ngxs/store';\nimport { ActiveFtuState } from './active-ftu';\nimport { CellSummaryState } from './cell-summary';\nimport { ContactState } from './contact';\nimport { DownloadState } from './download';\nimport { IllustratorState } from './illustrator';\nimport { ScreenModeState } from './screen-mode';\nimport { SourceRefsState } from './source-refs';\nimport { StateAnalyticsPluginService } from './state-analytics-plugin';\nimport { TissueLibraryState } from './tissue-library';\nimport { NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\n/** Interface for providing options for the hra state module */\nexport interface HraStateModuleOptions {\n  /** token string for google analytics*/\n  googleAnalyticsToken: string;\n}\n\n/** Provides all states */\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([\n      ActiveFtuState,\n      CellSummaryState,\n      ContactState,\n      DownloadState,\n      IllustratorState,\n      ScreenModeState,\n      SourceRefsState,\n      TissueLibraryState,\n    ]),\n    NgxGoogleAnalyticsModule,\n  ],\n  providers: [\n    {\n      provide: NGXS_PLUGINS,\n      useExisting: StateAnalyticsPluginService,\n      multi: true,\n    },\n  ],\n})\nexport class HraStateModule {\n  /** Static method for configuring the module\n   * Returns a configuration object with the module and the providers\n   */\n  static forRoot(options: HraStateModuleOptions): ModuleWithProviders {\n    const analyticsProviders = importProvidersFrom(NgxGoogleAnalyticsModule.forRoot(options.googleAnalyticsToken));\n    return {\n      ngModule: HraStateModule,\n      providers: [analyticsProviders],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HraStateModuleOptions.html":{"url":"interfaces/HraStateModuleOptions.html","title":"interface - HraStateModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HraStateModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for providing options for the hra state module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            googleAnalyticsToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        googleAnalyticsToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        googleAnalyticsToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    token string for google analytics\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ModuleWithProviders, NgModule, importProvidersFrom } from '@angular/core';\nimport { NGXS_PLUGINS, NgxsModule } from '@ngxs/store';\nimport { ActiveFtuState } from './active-ftu';\nimport { CellSummaryState } from './cell-summary';\nimport { ContactState } from './contact';\nimport { DownloadState } from './download';\nimport { IllustratorState } from './illustrator';\nimport { ScreenModeState } from './screen-mode';\nimport { SourceRefsState } from './source-refs';\nimport { StateAnalyticsPluginService } from './state-analytics-plugin';\nimport { TissueLibraryState } from './tissue-library';\nimport { NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\n/** Interface for providing options for the hra state module */\nexport interface HraStateModuleOptions {\n  /** token string for google analytics*/\n  googleAnalyticsToken: string;\n}\n\n/** Provides all states */\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([\n      ActiveFtuState,\n      CellSummaryState,\n      ContactState,\n      DownloadState,\n      IllustratorState,\n      ScreenModeState,\n      SourceRefsState,\n      TissueLibraryState,\n    ]),\n    NgxGoogleAnalyticsModule,\n  ],\n  providers: [\n    {\n      provide: NGXS_PLUGINS,\n      useExisting: StateAnalyticsPluginService,\n      multi: true,\n    },\n  ],\n})\nexport class HraStateModule {\n  /** Static method for configuring the module\n   * Returns a configuration object with the module and the providers\n   */\n  static forRoot(options: HraStateModuleOptions): ModuleWithProviders {\n    const analyticsProviders = importProvidersFrom(NgxGoogleAnalyticsModule.forRoot(options.googleAnalyticsToken));\n    return {\n      ngModule: HraStateModule,\n      providers: [analyticsProviders],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IllustratorModel.html":{"url":"interfaces/IllustratorModel.html","title":"interface - IllustratorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IllustratorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the Illustrator Model that contains the url, selected\nand mapping fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hoveredCellTypeId\n                                        \n                                \n                                \n                                        \n                                            mapping\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedOnClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedOnHover\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hoveredCellTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hoveredCellTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Current hovered cell type id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapping:         IllustrationMappingItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of Illustrartor Items\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOnClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOnClick:         IllustrationMappingItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected Illustrator Item on click\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOnHover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOnHover:         IllustrationMappingItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected Illustrator Item on hover\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     Url | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Url | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Illustration URL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\n\nimport { ClearSelection, HighlightCellType, Load, Reset, SetClicked, SetHover } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url | string;\n  /** Selected Illustrator Item on hover */\n  selectedOnHover?: IllustrationMappingItem;\n  /** Selected Illustrator Item on click */\n  selectedOnClick?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n  /** Current hovered cell type id */\n  hoveredCellTypeId?: string;\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(\n      tap((result) =>\n        patchState({\n          ...result,\n          selectedOnHover: undefined,\n          selectedOnClick: undefined,\n        })\n      )\n    );\n  }\n\n  /**\n   * Sets the current selection to the state for SetHover\n   */\n  @Action(SetHover)\n  SetHover({ patchState }: Context, { selectedOnHover }: SetHover): void {\n    patchState({ selectedOnHover });\n  }\n\n  /**\n   * Sets the current selection to the state for SetClicked\n   */\n  @Action(SetClicked)\n  SetClicked({ patchState }: Context, { selectedOnClick }: SetClicked): void {\n    patchState({ selectedOnClick });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selectedOnHover: undefined, selectedOnClick: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n\n  /**\n   * Sets hover id of highlighted cell type from hover label\n   */\n  @Action(HighlightCellType)\n  HighlightCellType({ patchState, getState }: Context, { hoverLabel }: HighlightCellType): void {\n    const match = getState().mapping.find((entry) => entry.ontologyId === hoverLabel);\n    patchState({ hoveredCellTypeId: match ? match.ontologyId : undefined });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IllustratorSelectors.html":{"url":"classes/IllustratorSelectors.html","title":"class - IllustratorSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IllustratorSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for Medical Illustrators\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                highlightedCell\n                            \n                            \n                                    Static\n                                mapping\n                            \n                            \n                                    Static\n                                selectedOnClicked\n                            \n                            \n                                    Static\n                                selectedOnHovered\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        highlightedCell\n                        \n                    \n                \n            \n            \n                \n                    \n                    highlightedCell(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:46\n                \n            \n\n\n            \n                \n                    Returns the current hovered cell id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapping(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:38\n                \n            \n\n\n            \n                \n                    Returns the current mapping of the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectedOnClicked\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedOnClicked(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:30\n                \n            \n\n\n            \n                \n                    Returns the selected model of the illustrator on click\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectedOnHovered\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedOnHovered(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:22\n                \n            \n\n\n            \n                \n                    Returns the selected model of the illustrator on hover\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Returns the url for the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Url | string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\n\nimport { IllustratorModel, IllustratorState } from './illustrator.state';\n\n/**\n * Selectors for Medical Illustrators\n */\nexport class IllustratorSelectors {\n  /**\n   * Returns the url for the illustrator\n   */\n  @Selector([IllustratorState])\n  static url({ url }: IllustratorModel): Url | string | undefined {\n    return url;\n  }\n\n  /**\n   * Returns the selected model of the illustrator on hover\n   */\n  @Selector([IllustratorState])\n  static selectedOnHovered({ selectedOnHover }: IllustratorModel): IllustrationMappingItem | undefined {\n    return selectedOnHover;\n  }\n\n  /**\n   * Returns the selected model of the illustrator on click\n   */\n  @Selector([IllustratorState])\n  static selectedOnClicked({ selectedOnClick }: IllustratorModel): IllustrationMappingItem | undefined {\n    return selectedOnClick;\n  }\n\n  /**\n   * Returns the current mapping of the illustrator\n   */\n  @Selector([IllustratorState])\n  static mapping({ mapping }: IllustratorModel): IllustrationMappingItem[] {\n    return mapping;\n  }\n\n  /**\n   * Returns the current hovered cell id\n   */\n  @Selector([IllustratorState])\n  static highlightedCell({ hoveredCellTypeId }: IllustratorModel): string | undefined {\n    return hoveredCellTypeId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IllustratorState.html":{"url":"injectables/IllustratorState.html","title":"injectable - IllustratorState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IllustratorState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling medical illustrators\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSelection\n                            \n                            \n                                HighlightCellType\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                            \n                                SetClicked\n                            \n                            \n                                SetHover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearSelection)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:84\n                \n            \n\n\n            \n                \n                    Clears the current selection from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HighlightCellType\n                        \n                    \n                \n            \n            \n                \nHighlightCellType(undefined: Context, undefined: HighlightCellType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(HighlightCellType)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:100\n                \n            \n\n\n            \n                \n                    Sets hover id of highlighted cell type from hover label\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                HighlightCellType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:49\n                \n            \n\n\n            \n                \n                    Loads the current state with the url and mapping.\nThe url and mapping are forked together using forkJoin.\nIt also cancels any uncompleted actions to the state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:92\n                \n            \n\n\n            \n                \n                    Resets the mapping for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetClicked\n                        \n                    \n                \n            \n            \n                \nSetClicked(undefined: Context, undefined: SetClicked)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetClicked)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:76\n                \n            \n\n\n            \n                \n                    Sets the current selection to the state for SetClicked\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetClicked\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetHover\n                        \n                    \n                \n            \n            \n                \nSetHover(undefined: Context, undefined: SetHover)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetHover)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:68\n                \n            \n\n\n            \n                \n                    Sets the current selection to the state for SetHover\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetHover\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\n\nimport { ClearSelection, HighlightCellType, Load, Reset, SetClicked, SetHover } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url | string;\n  /** Selected Illustrator Item on hover */\n  selectedOnHover?: IllustrationMappingItem;\n  /** Selected Illustrator Item on click */\n  selectedOnClick?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n  /** Current hovered cell type id */\n  hoveredCellTypeId?: string;\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(\n      tap((result) =>\n        patchState({\n          ...result,\n          selectedOnHover: undefined,\n          selectedOnClick: undefined,\n        })\n      )\n    );\n  }\n\n  /**\n   * Sets the current selection to the state for SetHover\n   */\n  @Action(SetHover)\n  SetHover({ patchState }: Context, { selectedOnHover }: SetHover): void {\n    patchState({ selectedOnHover });\n  }\n\n  /**\n   * Sets the current selection to the state for SetClicked\n   */\n  @Action(SetClicked)\n  SetClicked({ patchState }: Context, { selectedOnClick }: SetClicked): void {\n    patchState({ selectedOnClick });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selectedOnHover: undefined, selectedOnClick: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n\n  /**\n   * Sets hover id of highlighted cell type from hover label\n   */\n  @Action(HighlightCellType)\n  HighlightCellType({ patchState, getState }: Context, { hoverLabel }: HighlightCellType): void {\n    const match = getState().mapping.find((entry) => entry.ontologyId === hoverLabel);\n    patchState({ hoveredCellTypeId: match ? match.ontologyId : undefined });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load.html":{"url":"classes/Load.html","title":"class - Load","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/active-ftu/active-ftu.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Creates an instance of set iri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-1.html":{"url":"classes/Load-1.html","title":"class - Load-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                loads the given Iri to the state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cell-summary/cell-summary.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-2.html":{"url":"classes/Load-2.html","title":"class - Load-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-3.html":{"url":"classes/Load-3.html","title":"class - Load-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to load entries from data service\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:24\n                            \n                        \n\n                \n                    \n                            Creates a action to load from the enteries from the data service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Organ Iri for which the entries are loaded\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-4.html":{"url":"classes/Load-4.html","title":"class - Load-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                action of loading tissue data into the TissueLibrary state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** action of loading tissue data into the TissueLibrary state */\nexport class Load extends Action('[TissueLibrary] Load Tissue Data') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-5.html":{"url":"classes/Load-5.html","title":"class - Load-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to load the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-refs/source-refs.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MouseTrackerModule.html":{"url":"modules/MouseTrackerModule.html","title":"module - MouseTrackerModule","body":"\n                   \n\n\n\n\n    Modules\n    MouseTrackerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/state-analytics-plugin/mouse-tracker-module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, NgModule } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { map, throttleTime } from 'rxjs/operators';\n\n/**\n * Tracks mouse movement and returns position\n */\nexport function trackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const { clientWidth, clientHeight } = el;\n    const { clientX, clientY } = event;\n    const points = [clientX, clientY, clientWidth, clientHeight];\n    return points.join('_');\n  };\n\n  const events = fromEvent(el, 'mousemove').pipe(throttleTime(1000), map(formatData));\n\n  return events.subscribe((data) => {\n    return ga.event('webpage', 'mousemove', data);\n  });\n}\n\n/**\n * Tracks mouse click and returns target class name\n */\nexport function trackMouseClicks(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const target = event.target as HTMLElement;\n    return target.className;\n  };\n\n  const events = fromEvent(el, 'click').pipe(map(formatData));\n\n  return events.subscribe((data) => {\n    return ga.event('webpage', 'click', data);\n  });\n}\n\n@NgModule()\nexport class MouseTrackerModule {\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    @Inject(DOCUMENT) document: any,\n    ga: GoogleAnalyticsService\n  ) {\n    if (document) {\n      trackMousePosition((document as Document).body, ga);\n      trackMouseClicks((document as Document).body, ga);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterFormat.html":{"url":"classes/RegisterFormat.html","title":"class - RegisterFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Register format into state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormat)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:11\n                            \n                        \n\n                \n                    \n                            Creates an instance of register format.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormat\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-1.html":{"url":"classes/Reset-1.html","title":"class - Reset-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-2.html":{"url":"classes/Reset-2.html","title":"class - Reset-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-3.html":{"url":"classes/Reset-3.html","title":"class - Reset-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScreenModeModel.html":{"url":"interfaces/ScreenModeModel.html","title":"interface - ScreenModeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScreenModeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isFullScreen\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isFullScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFullScreen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether in fullscreen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \"small\" | \"large\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"small\" | \"large\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wheather footer should be in small screen mode: Logo visibility\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ScreenModeModel {\n  /** Whether in fullscreen */\n  isFullScreen: boolean;\n\n  /** Wheather footer should be in small screen mode: Logo visibility */\n  size: 'small' | 'large';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScreenModeSelectors.html":{"url":"classes/ScreenModeSelectors.html","title":"class - ScreenModeSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScreenModeSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isFullScreen\n                            \n                            \n                                    Static\n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFullScreen\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFullScreen(state: ScreenModeModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ScreenModeState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.selectors.ts:15\n                \n            \n\n\n            \n                \n                    Selectors screen mode selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ScreenModeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if full screen\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        size\n                        \n                    \n                \n            \n            \n                \n                    \n                    size(state: ScreenModeModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ScreenModeState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.selectors.ts:24\n                \n            \n\n\n            \n                \n                    Selectors screen mode selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ScreenModeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"small\" | \"large\"\n\n                    \n                    \n                        size of value 'small' | 'large'\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { ScreenModeModel } from './screen-mode.model';\nimport { ScreenModeState } from './screen-mode.state';\n\n/**\n * Screen mode selectors\n */\nexport class ScreenModeSelectors {\n  /**\n   * Selectors screen mode selectors\n   * @param state\n   * @returns true if full screen\n   */\n  @Selector([ScreenModeState])\n  static isFullScreen(state: ScreenModeModel): boolean {\n    return state.isFullScreen;\n  }\n  /**\n   * Selectors screen mode selectors\n   * @param state\n   * @returns size of value 'small' | 'large'\n   */\n  @Selector([ScreenModeState])\n  static size(state: ScreenModeModel): 'small' | 'large' {\n    return state.size;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenModeState.html":{"url":"injectables/ScreenModeState.html","title":"injectable - ScreenModeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenModeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State storing the screen mode\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                SetSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(undefined: StateContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.state.ts:23\n                \n            \n\n\n            \n                \n                    Updates the screen mode\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetSize\n                        \n                    \n                \n            \n            \n                \nSetSize(undefined: StateContext, undefined: SetSize)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetSize)\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.state.ts:36\n                \n            \n\n\n            \n                \n                    Actions screen mode state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetSize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport produce from 'immer';\nimport { Set, SetSize } from './screen-mode.actions';\nimport { ScreenModeModel } from './screen-mode.model';\n\n/** State storing the screen mode */\n@State({\n  name: 'screenmode',\n  defaults: {\n    isFullScreen: false,\n    size: 'large',\n  },\n})\n@Injectable()\nexport class ScreenModeState {\n  /**\n   * Updates the screen mode\n   * @param ctx State context\n   * @param action Action with new mode\n   */\n  @Action(Set)\n  set({ setState }: StateContext, { isFullScreen }: Set): void {\n    setState(\n      produce((draft: ScreenModeModel) => {\n        draft.isFullScreen = isFullScreen;\n      })\n    );\n  }\n  /**\n   * Actions screen mode state\n   * @param { setState } State Context\n   * @param { size } Action regarding screen\n   */\n  @Action(SetSize)\n  SetSize({ setState }: StateContext, { size }: SetSize): void {\n    setState(\n      produce((draft: ScreenModeModel) => {\n        draft.size = size;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessage.html":{"url":"classes/SendMessage.html","title":"class - SendMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                A class which sends individual messages submitted by user.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: ContactMessage)\n                    \n                \n                        \n                            \n                                Defined in src/lib/contact/contact.actions.ts:5\n                            \n                        \n\n                \n                    \n                            A constructor which initializes the message of type ContactMessage interface.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    ContactMessage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { ContactMessage } from '@hra-ui/services';\n\n/** A class which sends individual messages submitted by user. */\nexport class SendMessage extends Action('[Contact] Send Message') {\n  /** A constructor which initializes the message of type ContactMessage interface. */\n  constructor(readonly message: ContactMessage) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Update the screen mode\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(isFullScreen: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/screen-mode/screen-mode.actions.ts:4\n                            \n                        \n\n                \n                    \n                            Creates an instance of Set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isFullScreen\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the mode is fullscreen\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** Update the screen mode */\nexport class Set extends Action('[Screenmode] Set Screenmode') {\n  /**\n   * Creates an instance of Set\n   * @param isFullScreen Whether the mode is fullscreen\n   */\n  constructor(readonly isFullScreen: boolean) {\n    super();\n  }\n}\n\n/** Update the screen mode */\nexport class SetSize extends Action('[Screenmode] Set Size') {\n  /**\n   * Creates an instance of Set\n   * @param size Whether the mode is small/large to toggle the footer behaviour\n   */\n  constructor(readonly size: 'small' | 'large') {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetClicked.html":{"url":"classes/SetClicked.html","title":"class - SetClicked","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetClicked\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the selection for the Item in the current state on SetClicked\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(selectedOnClick: IllustrationMappingItem)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:30\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedOnClick\n                                                  \n                                                        \n                                                                        IllustrationMappingItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetHover.html":{"url":"classes/SetHover.html","title":"class - SetHover","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetHover\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the selection for the Item in the current state on SetHover\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(selectedOnHover: IllustrationMappingItem)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedOnHover\n                                                  \n                                                        \n                                                                        IllustrationMappingItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetIllustrationUrl.html":{"url":"classes/SetIllustrationUrl.html","title":"class - SetIllustrationUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetIllustrationUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to set the illustration url of the active FTU\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/active-ftu/active-ftu.actions.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of set iri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSize.html":{"url":"classes/SetSize.html","title":"class - SetSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Update the screen mode\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(size: \"small\" | \"large\")\n                    \n                \n                        \n                            \n                                Defined in src/lib/screen-mode/screen-mode.actions.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of Set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                    \"small\" | \"large\"\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the mode is small/large to toggle the footer behaviour\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** Update the screen mode */\nexport class Set extends Action('[Screenmode] Set Screenmode') {\n  /**\n   * Creates an instance of Set\n   * @param isFullScreen Whether the mode is fullscreen\n   */\n  constructor(readonly isFullScreen: boolean) {\n    super();\n  }\n}\n\n/** Update the screen mode */\nexport class SetSize extends Action('[Screenmode] Set Size') {\n  /**\n   * Creates an instance of Set\n   * @param size Whether the mode is small/large to toggle the footer behaviour\n   */\n  constructor(readonly size: 'small' | 'large') {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceRefsSelectors.html":{"url":"classes/SourceRefsSelectors.html","title":"class - SourceRefsSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceRefsSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for SourceRefState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sourceReferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    sourceReferences(refs: SourceReference[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['SourceRefsState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.selectors.ts:9\n                \n            \n\n\n            \n                \n                    returns the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refs\n                                    \n                                            SourceReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SourceReference[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceReference } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { SourceRefsState } from './source-refs.state';\n\n/** Selectors for SourceRefState */\nexport class SourceRefsSelectors {\n  /** returns the source references */\n  @Selector([SourceRefsState])\n  static sourceReferences(refs: SourceReference[]): SourceReference[] {\n    return refs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SourceRefsState.html":{"url":"injectables/SourceRefsState.html","title":"injectable - SourceRefsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SourceRefsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle the source references\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the current state with the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:35\n                \n            \n\n\n            \n                \n                    Resets the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, SourceReference } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load, Reset } from './source-refs.actions';\n\ntype Context = StateContext;\n\n/**\n * State to handle the source references\n */\n@State({\n  name: 'sourceReferences',\n  defaults: [],\n})\n@Injectable()\nexport class SourceRefsState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the source references\n   */\n  @Action(Load)\n  load({ setState }: Context, { iri }: Load): Observable {\n    return this.dataService.getSourceReferences(iri).pipe(tap(setState));\n  }\n\n  /**\n   * Resets the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState([]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateAnalyticsPluginService.html":{"url":"injectables/StateAnalyticsPluginService.html","title":"injectable - StateAnalyticsPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateAnalyticsPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Google Analytics Plugin Injectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(state, action, next: NgxsNextPluginFn)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state-analytics-plugin/state-analytics-plugin.service.ts:51\n                \n            \n\n\n            \n                \n                    Handles logger plugin\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent state of the store with type unknown.\n\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent action being dispatched with type unknown type.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            NgxsNextPluginFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnext plugin to handle the action\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nnext plugin with the current state and action.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, InjectionToken, Provider } from '@angular/core';\nimport { getActionTypeFromInstance, NgxsNextPluginFn, NgxsPlugin, NGXS_PLUGINS } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { DEFAULT_LOGGABLE_ACTIONS } from './default-loggable-actions';\n\n/** Primitive types */\nconst PRIMITIVE_TYPES = ['bigint', 'boolean', 'number', 'string'];\n\n/**\n * Determines whether primitive is\n * @param value is string - used to check the input value from serialize funtion\n * @returns type of value - boolean/number/string/null/bigint/undefined\n */\nfunction isPrimitive(value: unknown): value is bigint | boolean | number | string | null | undefined {\n  return value == null || PRIMITIVE_TYPES.includes(typeof value);\n}\n\n/**\n * Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n */\nexport const LOGGABLE_ACTIONS = new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n});\n\n/**\n * Google Analytics Plugin Injectable\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateAnalyticsPluginService implements NgxsPlugin {\n  /**\n   * Injects the service for state analytics plugin.\n   */\n  private readonly ga = inject(GoogleAnalyticsService);\n\n  /**\n   * Plugin service for logging state analytics\n   * Setting loggable action types from LOGGABLE_ACTIONS dependency.\n   */\n  private readonly loggableTypes = new Set(inject(LOGGABLE_ACTIONS).map(getActionTypeFromInstance));\n\n  /**\n   * Handles logger plugin\n   * @param state -  Current state of the store with type unknown.\n   * @param action - Current action being dispatched with type unknown type.\n   * @param next - next plugin to handle the action\n   * @returns - next plugin with the current state and action.\n   */\n  handle(state: unknown, action: unknown, next: NgxsNextPluginFn) {\n    this.logAction(action);\n    return next(state, action);\n  }\n\n  /**\n   * Logs action trigerred to google analytics event\n   * @param action - Current action being dispatched with type unknown type.\n   * @returns void\n   */\n  private logAction(action: unknown): void {\n    const type = getActionTypeFromInstance(action);\n    if (type && this.loggableTypes.has(type)) {\n      const payload = JSON.stringify(action, this.serialize);\n      this.ga.event(type, 'action_log', payload);\n    }\n  }\n\n  /**\n   * Serializes action data\n   * @param key - key with type unknown that needs to be serialized\n   * @param value - value with type unknown that needs to be serialized\n   * @returns serialized value\n   */\n  private serialize(this: void, key: unknown, value: unknown): unknown {\n    if (key === '' && typeof value === 'object') {\n      return { ...value, type: undefined };\n    } else if (isPrimitive(value) || (Array.isArray(value) && value.every(isPrimitive))) {\n      return value;\n    }\n\n    return undefined;\n  }\n}\n\n/**\n * State Login Provider\n */\nexport const STATE_LOGGER_PROVIDER: Provider = {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TissueLibrarySelectors.html":{"url":"classes/TissueLibrarySelectors.html","title":"class - TissueLibrarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TissueLibrarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selector class for retreiving data from the TissueLibraryState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        tissues\n                        \n                    \n                \n            \n            \n                \n                    \n                    tissues(state: TissueLibraryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['TissueLibraryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Gets the tissue data from the TissueLibrary object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                TissueLibraryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current state of the TissueLibraryState.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        node data of the type of TisseData.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri, Tissue } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { TissueLibraryModel } from './tissue-library.model';\nimport { TissueLibraryState } from './tissue-library.state';\n\n/** Selector class for retreiving data from the TissueLibraryState */\nexport class TissueLibrarySelectors {\n  /**\n   * Gets the tissue data from the TissueLibrary object.\n   * @param state the current state of the TissueLibraryState.\n   * @returns node data of the type of TisseData.\n   */\n  @Selector([TissueLibraryState])\n  static tissues(state: TissueLibraryModel): Record {\n    return state.nodes as Record;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryState.html":{"url":"injectables/TissueLibraryState.html","title":"injectable - TissueLibraryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling tissue data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActive\n                        \n                    \n                \n            \n            \n                \nsetActive(ctx: TissueLibraryContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.state.ts:23\n                \n            \n\n\n            \n                \n                    Loads the tissue data into the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                TissueLibraryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The state context instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        data The tissue data to be added to the state\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load } from './tissue-library.actions';\nimport { TissueLibraryContext, TissueLibraryModel } from './tissue-library.model';\n\n/** State handling tissue data*/\n@State({\n  name: 'tissueLibrary',\n})\n@Injectable()\nexport class TissueLibraryState {\n  /** injects the TissueLibraryService into a private readonly property */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the tissue data into the current state\n   * @param ctx The state context instance\n   * @returns data The tissue data to be added to the state\n   */\n  @Action(Load)\n  setActive(ctx: TissueLibraryContext): Observable {\n    return this.dataService.getTissueLibrary().pipe(tap((data) => ctx.setState(data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            computeAggregate   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            createDownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            expandRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getColumnIndex   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getLabel   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getTotalCount   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            isPrimitive   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            trackMouseClicks   (src/.../mouse-tracker-module.ts)\n                        \n                        \n                            trackMousePosition   (src/.../mouse-tracker-module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        computeAggregate\n                        \n                    \n                \n            \n            \n                \ncomputeAggregate(summary: CellSummary)\n                \n            \n\n\n\n\n            \n                \n                    The computeAggregate function takes a summary object and performs aggregation operations on its properties\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    summary\n                                    \n                                            CellSummary\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandRow\n                        \n                    \n                \n            \n            \n                \nexpandRow(row: CellSummaryAggregateRow, length: number)\n                \n            \n\n\n\n\n            \n                \n                    This function expands the current row length with undefined if its length is\nless than the given length\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnIndex\n                        \n                    \n                \n            \n            \n                \ngetColumnIndex(indexById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the column if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    indexById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLabel\n                        \n                    \n                \n            \n            \n                \ngetLabel(items, id: string, what: string)\n                \n            \n\n\n\n\n            \n                \n                    This function retrieves the label of an item from an array based on its ID,\nand if not found, it returns a default string indicating the absence of a label for the specified item type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    what\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRow\n                        \n                    \n                \n            \n            \n                \ngetRow(rowById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the row if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregateRow\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalCount\n                        \n                    \n                \n            \n            \n                \ngetTotalCount(row: CellSummaryAggregateRow)\n                \n            \n\n\n\n\n            \n                \n                    This function calculates and returns the total count by iterating over a row array and summing\nup the count property of each object entry, while ignoring non-object entries, with an initial value of 0.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDownloadFormatId\n                        \n                    \n                \n            \n            \n                \ncreateDownloadFormatId(id: string)\n                \n            \n\n\n\n\n            \n                \n                    Creates download format id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormatId\n\n                    \n                    \n                        download format id\n\n                    \n                \n            \n        \n    \n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isPrimitive\n                        \n                    \n                \n            \n            \n                \nisPrimitive(value)\n                \n            \n\n\n\n\n            \n                \n                    Determines whether primitive is\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is string - used to check the input value from serialize funtion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :      | boolean | number | string | null | undefined\n\n                    \n                    \n                        type of value - boolean/number/string/null/bigint/undefined\n\n                    \n                \n            \n        \n    \n    src/lib/state-analytics-plugin/mouse-tracker-module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        trackMouseClicks\n                        \n                    \n                \n            \n            \n                \ntrackMouseClicks(el: HTMLElement, ga: GoogleAnalyticsService)\n                \n            \n\n\n\n\n            \n                \n                    Tracks mouse click and returns target class name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ga\n                                    \n                                            GoogleAnalyticsService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackMousePosition\n                        \n                    \n                \n            \n            \n                \ntrackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService)\n                \n            \n\n\n\n\n            \n                \n                    Tracks mouse movement and returns position\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ga\n                                    \n                                            GoogleAnalyticsService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nstate\nThis library was generated with Nx.\nRunning unit tests\nRun nx test state to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraStateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MouseTrackerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    31 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellSummaryAggregate   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CellSummaryAggregateCell   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CellSummaryAggregateRow   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../active-ftu.state.ts)\n                        \n                        \n                            Context   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../illustrator.state.ts)\n                        \n                        \n                            Context   (src/.../source-refs.state.ts)\n                        \n                        \n                            DownloadContext   (src/.../download.model.ts)\n                        \n                        \n                            DownloadEntry   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormat   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            DownloadModel   (src/.../download.model.ts)\n                        \n                        \n                            TissueLibraryContext   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibraryModel   (src/.../tissue-library.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregate\n                \n            \n            \n                \n                    Type representing AGGREGATE having label, columns and rows\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregateCell\n                \n            \n            \n                \n                    Single aggregate cell\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregateRow\n                \n            \n            \n                \n                    Type representing a single AGGREGATE_ROW\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/active-ftu/active-ftu.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/illustrator/illustrator.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/source-refs/source-refs.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n    \n        \n            \n                \n                    \n                    DownloadContext\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadContext,\nwhich is a state context for the DownloadModel type\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadEntry\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadEntry,\nwhich is inferred from the type of the DOWNLOAD_ENTRY constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormat\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormat,\nwhich is inferred from the type of the DOWNLOAD_FORMAT constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormatId\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormatId,\nwhich is inferred from the type of the DOWNLOAD_FORMAT_ID constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadModel\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadModel,\nwhich is inferred from the type of the DOWNLOAD_MODEL constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    TissueLibraryContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibraryModel\n                \n            \n            \n                \n                    Type alias for the tissue data\n\n                \n            \n            \n                \n                        TissueLibrary\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            About   (src/.../link-ids.ts)\n                        \n                        \n                            Action   (src/.../active-ftu.actions.ts)\n                        \n                        \n                            Action   (src/.../cell-summary.actions.ts)\n                        \n                        \n                            Action   (src/.../illustrator.actions.ts)\n                        \n                        \n                            Action   (src/.../download.action.ts)\n                        \n                        \n                            Action   (src/.../source-refs.actions.ts)\n                        \n                        \n                            AGGREGATE   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_CELL   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_ROW   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AppTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            ContactAcknowledgement   (src/.../resource-ids.ts)\n                        \n                        \n                            DEFAULT_LOGGABLE_ACTIONS   (src/.../default-loggable-actions.ts)\n                        \n                        \n                            DOWNLOAD_ENTRY   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT_ID   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_MODEL   (src/.../download.model.ts)\n                        \n                        \n                            Embed   (src/.../link-ids.ts)\n                        \n                        \n                            ExploreFTU   (src/.../link-ids.ts)\n                        \n                        \n                            Gradient   (src/.../resource-types.ts)\n                        \n                        \n                            GradientLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            GradientLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            Illustration   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPage   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageDepthDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroReadMore   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPagePartners   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageReadMore   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LOGGABLE_ACTIONS   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Metrics   (src/.../resource-ids.ts)\n                        \n                        \n                            Metrics   (src/.../resource-types.ts)\n                        \n                        \n                            MetricsLogo   (src/.../resource-ids.ts)\n                        \n                        \n                            MetricsTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            Png   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            PNG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                        \n                            Portal   (src/.../link-ids.ts)\n                        \n                        \n                            PRIMITIVE_TYPES   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            ProductLogoUrl   (src/.../resource-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../link-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            ScreenSizeNoticeContent   (src/.../resource-ids.ts)\n                        \n                        \n                            Size   (src/.../resource-types.ts)\n                        \n                        \n                            SizeLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            SizeLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            STATE_LOGGER_PROVIDER   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Svg   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            SVG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/link-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        About\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('About')\n                    \n                \n\n            \n                \n                    About Link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Embed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Embed')\n                    \n                \n\n            \n                \n                    LinkId for Embed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExploreFTU\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ExploreFTU')\n                    \n                \n\n            \n                \n                    LinkId for Explore FTU\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Illustration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Illustration')\n                    \n                \n\n            \n                \n                    LinkId for Illustration metadata\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPage')\n                    \n                \n\n            \n                \n                    Landing page id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPageReadMore')\n                    \n                \n\n            \n                \n                    LinkId for read more in landing page content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Portal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Portal')\n                    \n                \n\n            \n                \n                    LinkId for HRA Portal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title link id\n\n                \n            \n\n        \n    \n\n    src/lib/active-ftu/active-ftu.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('ActiveFtu')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('CellSummary')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/illustrator/illustrator.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Illustrator')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Download')\n                    \n                \n\n            \n                \n                    Action Group for Download Action\n\n                \n            \n\n        \n    \n\n    src/lib/source-refs/source-refs.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('SourceRefs')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AGGREGATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE is an object that contains the label, columns\nand rows\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  color: z.number().nonnegative(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE_CELL is an object that contains the color, size and\nthe data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional())\n                    \n                \n\n            \n                \n                    The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\na required string followed by an optional number\n\n                \n            \n\n        \n    \n\n    src/lib/resource-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('AppTitle')\n                    \n                \n\n            \n                \n                    App title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ContactAcknowledgement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ContactAcknowledgement')\n                    \n                \n\n            \n                \n                    Message to display after submitting contact form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegend')\n                    \n                \n\n            \n                \n                    Gradient legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Gradient legend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthDescription')\n                    \n                \n\n            \n                \n                    Lanading Page Depth Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthImg')\n                    \n                \n\n            \n                \n                    Landing Page Depth Img id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthMoreText')\n                    \n                \n\n            \n                \n                    Landing Page Depth More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthTitle')\n                    \n                \n\n            \n                \n                    Landing Page Depth Title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroDescription')\n                    \n                \n\n            \n                \n                    Landing Page Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroImg')\n                    \n                \n\n            \n                \n                    Landing Page Intro Image id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroMoreText')\n                    \n                \n\n            \n                \n                    Landing Page More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroReadMore')\n                    \n                \n\n            \n                \n                    Landing Page Read More text (For web components)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPagePartners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroPartners')\n                    \n                \n\n            \n                \n                    Landing Page Partners id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroTitle')\n                    \n                \n\n            \n                \n                    Landing Page Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('Metrics')\n                    \n                \n\n            \n                \n                    metrics id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsLogo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsLogo')\n                    \n                \n\n            \n                \n                    Metrics Logo id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsTitle')\n                    \n                \n\n            \n                \n                    Metrics Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductLogoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductLogoUrl')\n                    \n                \n\n            \n                \n                    Product logo url id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ScreenSizeNoticeContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ScreenSizeNoticeContent')\n                    \n                \n\n            \n                \n                    Screen size notice content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegend')\n                    \n                \n\n            \n                \n                    Size legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Size legend\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/default-loggable-actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ContactActions.SendMessage,\n  DownloadActions.Download,\n  LinkRegistryActions.Navigate,\n  ActiveFtuActions.Load,\n  IllustratorActions.SetHover,\n  IllustratorActions.SetClicked,\n  ScreenModeAction.Set,\n]\n                    \n                \n\n            \n                \n                    Default loggable actions\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.discriminatedUnion('type', [\n  z.object({ type: z.literal('url'), url: z.string() }),\n  z.object({ type: z.literal('data'), data: z.string() }),\n])\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_ENTRY,\nwhich is a discriminated union of two objects with different properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    id: DOWNLOAD_FORMAT_ID,\n    label: z.string(),\n    extension: z.string(),\n  })\n  .partial({ extension: true })\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT,\nwhich is an object with id, label, and extension properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .transform((id) => `DownloadFormatId:'${id}'`)\n  .brand('DownloadFormatId')\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT_ID,\nwhich is a string that is transformed into a branded string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_MODEL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  formats: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_FORMAT),\n  entries: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_ENTRY),\n})\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_MODEL,\nwhich is an object with formats and entries properties\n\n                \n            \n\n        \n    \n\n    src/lib/resource-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Gradient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('gradient', payload())\n                    \n                \n\n            \n                \n                    Gradient legend resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType(\n  'metrics',\n  payload()\n)\n                    \n                \n\n            \n                \n                    Metrics resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Size\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('size', payload())\n                    \n                \n\n            \n                \n                    Size legend resource\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n})\n                    \n                \n\n            \n                \n                    Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRIMITIVE_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['bigint', 'boolean', 'number', 'string']\n                    \n                \n\n            \n                \n                    Primitive types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATE_LOGGER_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n}\n                    \n                \n\n            \n                \n                    State Login Provider\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Png\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('png')\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Svg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('svg')\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PNG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Png,\n  label: 'Download PNG',\n  extension: '.png',\n}\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Svg,\n  label: 'Download SVG',\n  extension: '.svg',\n}\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
