var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActiveFtuModel.html",[0,1.524,1,2.51]],["body/interfaces/ActiveFtuModel.html",[0,2.067,1,3.733,2,1.831,3,0.139,4,0.298,5,0.159,6,1.466,7,1.466,8,2.209,9,0.119,10,0.58,11,2.124,12,0.536,13,1.758,14,0.461,15,0.022,16,1.243,17,2.498,18,0.394,19,0.999,20,1.079,21,0.294,22,0.483,23,0.585,24,0.381,25,1.989,26,0.729,27,2.565,28,1.466,29,1.373,30,2.491,31,2.881,32,2.881,33,2.491,34,2.276,35,2.881,36,2.491,37,2.45,38,3.405,39,2.067,40,1.021,41,1.048,42,2.896,43,2.491,44,0.231,45,2.408,46,1.999,47,1.466,48,0.425,49,2.491,50,1.466,51,2.491,52,0.188,53,1.831,54,0.862,55,0.862,56,1.571,57,0.815,58,2.197,59,1.571,60,1.831,61,1.373,62,2.209,63,3.42,64,3.763,65,2.491,66,1.249,67,3.352,68,2.491,69,2.491,70,2.491,71,2.491,72,2.491,73,2.491,74,1.019,75,2.491,76,2.209,77,1.691,78,2.491,79,2.491,80,2.491,81,2.491,82,0.012,83,0.012]],["title/classes/ActiveFtuSelectors.html",[52,0.236,84,3.128]],["body/classes/ActiveFtuSelectors.html",[1,4.7,3,0.177,4,0.203,5,0.203,6,2.848,7,2.848,9,0.152,10,0.74,12,0.635,13,1.782,14,0.547,15,0.022,18,0.35,21,0.375,22,0.617,26,0.931,42,2.55,44,0.203,48,0.73,52,0.24,53,3.555,57,1.401,66,1.481,74,1.98,82,0.015,83,0.015,84,4.279,85,0.617,86,3.724,87,2.905,88,1.565,89,3.509,90,5.668,91,3.724,92,1.655,93,5.013,94,0.884,95,3.724,96,3.795,97,0.831,98,3.724,99,3.724,100,5.013,101,1.565,102,2.699,103,2.005,104,3.724,105,5.013]],["title/injectables/ActiveFtuState.html",[19,0.866,53,2.299]],["body/injectables/ActiveFtuState.html",[0,1.559,1,2.569,3,0.118,4,0.311,5,0.136,6,2.531,7,2.531,8,1.879,9,0.101,10,0.494,12,0.573,13,1.668,14,0.55,15,0.022,16,1.13,17,2.271,18,0.376,19,0.886,20,0.918,21,0.25,22,0.411,23,0.637,24,0.387,25,1.765,26,0.62,27,2.779,28,1.247,29,1.168,30,2.119,31,3.134,32,3.134,33,2.119,34,2.019,35,3.134,36,2.119,37,2.173,38,3.705,39,2.365,40,1.166,41,1.199,42,3.096,43,2.119,44,0.205,45,2.803,46,2.569,47,1.885,48,0.733,49,2.119,50,1.247,51,2.119,52,0.16,53,2.353,54,1.108,55,0.733,56,1.336,57,1.408,58,2.513,59,2.019,60,2.353,61,1.765,62,1.879,63,3.16,64,3.422,65,2.119,66,1.108,67,3.134,68,2.119,69,2.119,70,2.119,71,2.119,72,3.201,73,2.119,74,1.31,75,3.201,76,2.839,77,2.173,78,2.119,79,2.119,80,2.119,81,2.119,82,0.011,83,0.011,88,1.171,92,1.492,94,0.797,97,0.749,106,1.097,107,2.482,108,2.482,109,2.482,110,1.7,111,2.482,112,1.7,113,2.482]],["title/classes/AddEntry.html",[52,0.236,114,2.124]],["body/classes/AddEntry.html",[3,0.167,4,0.192,5,0.263,9,0.143,12,0.445,14,0.383,15,0.022,18,0.298,21,0.353,23,0.697,24,0.454,39,1.46,44,0.323,48,0.511,52,0.381,55,1.423,82,0.014,83,0.014,85,0.582,94,0.619,97,0.582,114,2.792,115,2.203,116,3.023,117,3.801,118,2.899,119,2.287,120,3.512,121,3.339,122,3.713,123,3.512,124,3.3,125,2.594,126,1.097,127,0.928,128,2.594,129,2.035,130,2.203,131,0.74,132,2.203,133,3.023,134,3.219,135,2.035,136,1.564,137,2.406,138,2.267,139,2.267,140,1.537,141,1.537,142,2.406,143,1.376,144,1.765,145,2.035,146,1.46,147,2.406,148,2.406]],["title/interfaces/CellSummaryModel.html",[0,1.524,149,2.51]],["body/interfaces/CellSummaryModel.html",[0,2.192,2,2.036,3,0.155,4,0.177,5,0.177,9,0.132,10,0.645,11,2.291,12,0.411,14,0.7,15,0.022,18,0.326,21,0.327,22,0.538,25,2.146,26,0.811,31,3.621,32,3.621,44,0.313,45,1.434,82,0.013,83,0.013,131,1.111,149,3.123,150,1.527,151,1.527,152,2.456,153,2.642,154,4.5,155,4.96,156,4.56,157,3.621,158,3.917,159,3.917,160,3.917,161,3.245,162,2.769,163,2.769,164,3.892,165,2.769,166,3.991,167,2.456,168,3.892,169,2.874,170,3.611,171,3.991,172,3.991,173,3.892,174,2.642,175,3.123,176,3.892,177,3.892,178,1.646,179,3.892,180,3.892,181,2.769,182,2.769,183,2.769,184,2.769,185,2.769,186,2.769,187,2.769,188,2.036,189,2.769,190,2.222,191,2.769,192,2.769,193,2.769,194,2.769]],["title/classes/CellSummarySelectors.html",[52,0.236,195,3.128]],["body/classes/CellSummarySelectors.html",[3,0.177,4,0.203,5,0.203,9,0.152,10,0.74,12,0.635,14,0.547,15,0.022,18,0.375,21,0.375,22,0.617,24,0.52,26,0.931,31,2.905,44,0.203,48,0.73,52,0.24,57,1.401,66,1.481,82,0.015,83,0.015,85,0.617,87,2.905,88,1.565,89,3.509,92,1.655,94,0.884,97,0.831,103,2.005,149,4.562,150,2.667,151,2.667,155,4.59,157,2.905,158,3.882,160,4.334,169,2.519,178,1.893,195,4.279,196,3.724,197,5.013,198,5.013,199,3.724,200,5.013,201,3.724,202,3.178,203,2.55,204,3.724,205,5.013,206,3.724,207,3.724]],["title/injectables/CellSummaryState.html",[19,0.866,203,2.51]],["body/injectables/CellSummaryState.html",[3,0.123,4,0.142,5,0.142,9,0.106,10,0.515,12,0.588,13,1.159,14,0.506,15,0.022,16,1.445,17,1.302,18,0.37,19,0.915,20,0.958,21,0.261,22,0.429,23,0.546,24,0.492,26,0.648,27,2.183,28,1.302,29,1.219,31,3.472,32,2.982,40,1.154,41,1.085,44,0.142,45,2.833,48,0.749,50,1.302,52,0.167,54,1.144,57,1.296,58,2.554,59,2.085,60,2.43,61,1.823,62,2.932,63,3.627,64,1.961,66,0.765,74,0.905,77,2.244,82,0.011,83,0.011,88,1.209,92,1.531,94,0.818,97,0.769,106,1.145,110,1.774,112,1.774,131,0.816,143,1.015,149,1.774,150,2.422,151,2.422,155,4.376,157,3.472,160,1.774,169,1.946,178,1.923,202,2.211,203,2.653,208,2.591,209,2.653,210,3.456,211,2.591,212,3.873,213,2.591,214,3.873,215,3.873,216,2.591,217,3.873,218,2.932,219,2.932,220,2.591,221,1.61,222,1.302,223,1.774,224,3.873,225,2.591,226,2.211,227,2.591,228,1.625,229,1.302,230,1.625,231,1.774,232,2.591,233,2.591,234,2.591,235,2.591]],["title/classes/Clear.html",[39,1.524,52,0.236]],["body/classes/Clear.html",[3,0.205,4,0.235,5,0.235,6,2.16,7,2.16,9,0.175,13,1.746,15,0.022,18,0.341,21,0.555,22,0.712,23,0.649,24,0.33,39,2.291,40,0.805,41,0.906,44,0.332,52,0.413,54,1.27,55,1.27,82,0.016,83,0.016,85,0.712,101,1.342,126,1.342,127,1.136,131,0.906,136,1.607,138,2.023,139,2.023,140,1.201,141,1.201,146,1.787,221,1.787,236,2.944,237,2.593,238,1.59,239,1.502,240,2.944,241,1.685,242,1.685]],["title/classes/ClearEntries.html",[52,0.236,145,2.124]],["body/classes/ClearEntries.html",[3,0.176,4,0.202,5,0.272,9,0.151,15,0.022,18,0.308,21,0.372,23,0.712,24,0.464,39,2.073,44,0.33,52,0.389,55,1.472,82,0.015,83,0.015,85,0.612,114,2.14,115,2.317,116,2.317,117,3.27,118,2.937,119,1.535,121,3.039,122,3.128,124,2.529,125,1.988,126,1.153,127,0.976,128,2.684,129,2.14,130,2.317,131,0.778,132,2.317,133,3.128,134,3.267,135,2.14,136,1.597,137,2.529,138,2.346,139,2.346,140,1.577,141,1.577,142,2.529,143,1.447,144,2.505,145,2.889,146,1.535,147,2.529,148,2.529]],["title/classes/ClearSelection.html",[52,0.236,243,1.973]],["body/classes/ClearSelection.html",[3,0.187,4,0.214,5,0.214,9,0.16,13,1.609,15,0.022,16,1.546,18,0.321,21,0.522,22,0.649,23,0.611,24,0.494,40,0.734,41,0.825,44,0.338,47,3.234,52,0.415,54,1.157,82,0.015,83,0.015,85,0.649,101,1.223,126,1.223,127,1.035,131,0.825,136,1.635,140,1.449,141,1.449,146,1.628,221,1.628,237,2.44,238,1.448,239,1.368,241,1.535,242,1.535,243,2.791,244,2.457,245,2.791,246,2.457,247,1.843,248,2.269,249,2.791,250,2.108,251,2.682,252,2.457,253,2.108,254,2.108]],["title/classes/ComputeAggregates.html",[52,0.236,210,2.299]],["body/classes/ComputeAggregates.html",[3,0.199,4,0.228,5,0.228,9,0.17,13,1.641,15,0.022,16,1.042,18,0.334,21,0.544,22,0.691,23,0.706,24,0.486,40,0.781,41,1.138,44,0.327,52,0.408,54,1.231,82,0.016,83,0.016,85,0.691,101,1.301,126,1.301,127,1.101,131,0.878,136,1.584,140,1.164,141,1.164,150,1.961,151,1.961,157,2.415,169,2.714,178,1.686,210,3.388,238,1.541,239,1.456,241,1.633,242,1.633,247,1.961,255,2.854,256,4.088,257,4.104,258,3.699,259,2.854,260,3.155]],["title/injectables/ContactState.html",[19,0.866,261,2.774]],["body/injectables/ContactState.html",[3,0.17,4,0.195,5,0.195,9,0.146,10,0.709,12,0.452,14,0.389,15,0.022,18,0.385,19,1.408,20,1.319,21,0.359,22,0.591,23,0.734,24,0.494,25,2.803,26,0.892,27,2.609,29,1.679,44,0.195,48,0.867,52,0.402,57,0.997,66,1.054,74,1.246,82,0.014,83,0.014,88,1.52,92,1.178,94,0.629,97,0.591,106,1.576,143,1.398,222,2.447,229,1.793,261,4.51,262,3.568,263,4.87,264,4.872,265,4.87,266,5.957,267,5.084,268,3.686,269,5.957,270,5.076,271,4.87,272,4.87,273,3.568,274,4.156,275,4.197,276,4.87,277,4.156,278,3.568,279,3.568,280,3.568,281,3.568,282,3.568]],["title/classes/Download.html",[52,0.236,118,1.619]],["body/classes/Download.html",[3,0.17,4,0.194,5,0.303,9,0.145,12,0.451,14,0.388,15,0.022,18,0.301,21,0.358,23,0.734,24,0.425,39,1.479,44,0.325,48,0.518,52,0.383,55,1.436,82,0.014,83,0.014,85,0.59,94,0.627,97,0.59,114,2.062,115,2.232,116,2.232,117,3.208,118,3.003,119,2.021,121,3.354,122,3.05,124,2.437,125,1.916,126,1.111,127,0.94,128,2.617,129,2.062,130,2.232,131,0.75,132,2.232,133,3.05,134,3.308,135,2.062,136,1.573,137,2.437,138,2.606,139,2.606,140,1.547,141,1.547,142,2.437,143,1.394,144,1.788,145,2.062,146,1.479,147,2.437,148,2.437,283,3.037,284,3.558]],["title/classes/DownloadSelectors.html",[52,0.236,285,3.128]],["body/classes/DownloadSelectors.html",[3,0.19,4,0.218,5,0.218,9,0.163,10,0.795,12,0.506,14,0.436,15,0.022,18,0.325,24,0.45,26,0.999,44,0.218,48,0.582,52,0.258,55,1.18,57,1.468,66,1.18,74,1.396,82,0.015,83,0.015,85,0.662,87,3.854,88,1.641,89,3.161,92,1.319,94,0.705,97,0.662,103,3.161,118,2.322,128,3.488,129,2.316,131,1.108,134,3.407,144,2.64,285,4.485,286,3.997,287,4.721,288,4.444,289,5.255,290,4.721,291,3.997,292,3.997,293,3.997,294,3.997]],["title/injectables/DownloadState.html",[19,0.866,295,2.774]],["body/injectables/DownloadState.html",[3,0.078,4,0.09,5,0.306,9,0.067,10,0.326,12,0.56,14,0.482,15,0.022,18,0.325,19,0.638,20,0.606,23,0.318,24,0.441,26,0.409,27,1.879,28,0.823,29,0.771,39,1.122,44,0.09,48,0.764,50,0.823,52,0.106,55,1.819,56,2.559,57,1.328,58,2.477,66,1.017,67,1.995,74,1.203,82,0.008,83,0.008,88,0.843,92,1.318,94,0.779,97,0.732,106,0.724,114,2.754,116,1.693,117,2.754,118,2.921,121,1.453,125,2.15,129,0.949,131,1.26,133,1.693,134,3.051,135,2.754,143,0.642,144,1.356,145,1.995,153,1.564,174,0.949,178,0.843,188,2.505,222,1.356,229,2.006,274,1.398,287,1.24,288,2.606,290,1.24,295,2.043,296,1.638,297,2.606,298,2.699,299,2.304,300,2.304,301,2.304,302,2.304,303,3.993,304,2.699,305,5.381,306,2.699,307,1.638,308,3.935,309,2.699,310,2.699,311,1.638,312,2.699,313,2.699,314,2.699,315,1.638,316,2.505,317,2.304,318,2.699,319,1.638,320,2.699,321,2.699,322,2.699,323,2.358,324,2.699,325,2.699,326,1.638,327,1.638,328,1.638,329,1.398,330,1.398,331,1.398,332,1.398,333,1.638,334,1.638,335,1.398,336,2.699,337,1.638,338,1.638,339,1.638,340,1.638,341,3.443,342,2.939,343,1.638,344,1.638,345,1.638,346,2.699,347,1.638,348,1.638,349,1.638,350,2.699,351,5.606,352,2.699,353,1.638,354,1.638,355,1.638,356,1.638,357,1.638,358,1.638,359,1.638,360,1.638,361,2.699,362,3.443,363,1.638,364,1.398,365,1.638,366,1.638,367,1.638,368,1.638,369,1.638,370,1.638,371,1.638,372,1.638,373,1.638,374,1.638,375,1.398,376,1.638,377,1.122,378,1.638,379,1.638,380,1.638,381,1.638,382,1.638,383,3.443,384,1.638,385,1.638,386,1.638,387,1.638,388,1.638,389,1.638,390,1.638,391,1.638,392,1.638,393,1.638,394,1.638,395,1.638,396,1.638,397,1.638,398,1.638,399,1.638,400,1.638,401,1.638,402,1.638]],["title/modules/HraStateModule.html",[403,3.128,404,2.774]],["body/modules/HraStateModule.html",[3,0.189,4,0.286,5,0.217,9,0.162,15,0.022,17,1.996,18,0.437,20,1.469,24,0.305,26,0.993,31,2.302,32,2.302,34,2.818,35,2.302,37,3.033,38,2.721,42,2.721,44,0.217,52,0.256,53,3.284,61,1.87,76,3.963,82,0.015,83,0.015,118,1.756,203,3.585,261,3.963,264,3.008,295,3.963,404,3.963,405,3.008,406,3.973,407,3.963,408,5.235,409,3.963,410,3.973,411,3.585,412,2.302,413,2.493,414,3.585,415,2.721,416,3.391,417,3.585,418,2.493,419,3.391,420,3.973,421,3.973,422,3.973,423,3.008,424,3.008,425,3.008]],["title/interfaces/IllustratorModel.html",[0,1.524,426,2.51]],["body/interfaces/IllustratorModel.html",[0,1.944,2,1.647,3,0.125,4,0.143,5,0.143,9,0.107,10,0.522,11,1.966,12,0.657,13,0.656,14,0.565,15,0.022,16,1.295,17,1.319,18,0.343,19,0.924,20,0.971,21,0.264,22,0.435,23,0.309,24,0.475,25,1.841,26,0.656,27,1.841,28,1.319,29,1.236,34,1.414,35,3.211,40,0.876,41,0.825,44,0.214,45,2.448,47,1.966,48,0.382,50,1.319,52,0.169,54,0.775,56,3.71,58,2.066,59,1.414,60,1.647,61,1.236,63,3.645,66,0.775,74,1.366,77,1.521,82,0.012,83,0.012,131,0.986,143,1.029,153,2.267,159,2.679,175,2.679,178,0.82,209,1.798,218,1.988,219,1.988,221,1.092,222,1.319,223,1.798,228,1.647,229,1.319,230,1.647,231,1.798,237,1.236,243,2.106,245,3.24,248,1.521,249,2.106,250,2.517,253,3.631,254,3.559,268,1.988,316,1.647,426,2.679,427,1.988,428,3.339,429,3.339,430,2.961,431,2.961,432,3.991,433,2.241,434,1.988,435,1.988,436,2.241,437,2.241,438,2.241,439,2.241,440,3.339,441,2.241,442,2.241,443,2.241,444,2.679]],["title/classes/IllustratorSelectors.html",[52,0.236,445,3.128]],["body/classes/IllustratorSelectors.html",[3,0.158,4,0.182,5,0.182,9,0.136,10,0.661,12,0.677,14,0.583,15,0.022,16,1.159,18,0.33,21,0.335,22,0.551,26,0.831,34,1.789,35,3.649,44,0.182,48,0.777,52,0.214,56,3.652,57,1.871,66,1.578,74,2.019,82,0.014,83,0.014,85,0.551,87,2.687,88,1.448,89,3.605,92,1.764,94,0.942,97,0.885,103,1.789,153,2.687,245,2.876,253,3.479,254,3.479,426,4.646,434,3.511,435,3.511,445,3.958,446,3.324,447,3.324,448,5.342,449,3.324,450,3.324,451,3.324,452,3.324,453,3.324,454,3.324,455,5.342,456,2.837]],["title/injectables/IllustratorState.html",[19,0.866,34,1.973]],["body/injectables/IllustratorState.html",[0,1.478,3,0.11,4,0.126,5,0.126,9,0.094,10,0.46,12,0.616,13,0.578,14,0.572,15,0.022,16,1.487,17,1.163,18,0.324,19,0.84,20,0.856,21,0.233,22,0.383,23,0.272,24,0.505,25,1.673,26,0.578,27,2.037,28,1.163,29,1.089,34,1.914,35,2.508,40,1.08,41,1.024,44,0.194,45,2.877,47,2.441,48,0.763,50,1.163,52,0.149,54,1.05,56,3.461,57,1.357,58,2.445,59,1.914,60,2.23,61,1.673,63,3.472,66,0.683,74,1.697,77,2.06,82,0.01,83,0.01,88,1.11,92,1.604,94,0.857,97,0.805,106,1.022,110,1.585,112,1.585,131,0.912,143,0.907,153,1.341,159,1.585,175,1.585,178,0.722,209,2.435,218,2.691,219,2.691,221,1.478,222,1.163,223,1.585,228,1.451,229,1.163,230,1.451,231,1.585,237,1.673,243,2.615,245,2.331,248,2.06,249,1.246,250,3.103,253,3.505,254,3.103,268,2.691,316,2.23,426,1.585,427,1.751,428,1.975,429,1.975,430,1.751,431,1.751,432,4.146,433,1.975,434,2.691,435,2.691,436,3.034,437,3.034,438,1.975,439,1.975,440,3.034,441,1.975,442,3.034,443,3.034,444,2.435,457,2.314,458,2.314,459,2.314,460,2.314,461,2.314,462,2.314]],["title/classes/Load.html",[40,0.687,52,0.236]],["body/classes/Load.html",[3,0.194,4,0.222,5,0.222,6,2.671,7,2.671,9,0.166,12,0.516,13,1.785,14,0.444,15,0.022,18,0.329,21,0.535,22,0.674,23,0.626,24,0.312,39,1.691,40,0.996,41,0.857,44,0.324,48,0.592,52,0.405,54,1.57,55,1.201,82,0.016,83,0.016,85,0.674,94,0.717,97,0.674,101,1.66,119,1.691,126,1.27,127,1.075,131,0.857,136,1.565,138,2.502,139,2.502,140,1.137,141,1.137,146,1.691,221,1.691,236,2.786,237,1.914,238,1.504,239,1.421,240,2.786,241,1.594,242,1.594,463,2.786,464,4.068]],["title/classes/Load-1.html",[40,0.577,52,0.199,377,2.111]],["body/classes/Load-1.html",[3,0.19,4,0.218,5,0.218,9,0.163,12,0.505,13,1.755,14,0.435,15,0.022,16,0.996,18,0.324,21,0.528,22,0.66,23,0.69,24,0.478,40,0.983,41,1.105,44,0.32,48,0.58,52,0.401,54,1.549,82,0.015,83,0.015,85,0.66,94,0.703,97,0.66,101,1.637,119,1.657,126,1.244,127,1.053,131,0.84,136,1.549,140,1.113,141,1.113,150,2.468,151,2.468,157,2.309,169,2.002,178,1.244,210,2.5,238,1.473,239,1.392,241,1.561,242,1.561,247,2.468,255,2.729,256,3.016,257,4.015,258,2.729,259,2.729,260,3.016,463,2.729,465,3.985]],["title/classes/Load-2.html",[40,0.577,52,0.199,466,2.63]],["body/classes/Load-2.html",[3,0.179,4,0.205,5,0.205,9,0.153,12,0.476,13,1.736,14,0.41,15,0.022,16,1.521,18,0.312,21,0.507,22,0.622,23,0.594,24,0.487,40,0.944,41,0.791,44,0.332,47,3.057,48,0.546,52,0.409,54,1.489,82,0.015,83,0.015,85,0.622,94,0.662,97,0.622,101,1.574,119,1.561,126,1.172,127,0.992,131,0.791,136,1.608,140,1.408,141,1.408,146,1.561,221,1.561,237,1.767,238,1.388,239,1.311,241,1.471,242,1.471,243,2.021,244,2.355,245,2.714,246,2.355,247,2.372,248,2.175,249,2.714,250,2.021,251,2.571,252,2.355,253,2.021,254,2.021,463,2.571,467,3.754]],["title/classes/Load-3.html",[40,0.577,52,0.199,468,2.63]],["body/classes/Load-3.html",[3,0.198,4,0.227,5,0.227,9,0.17,12,0.527,13,1.768,14,0.453,15,0.022,16,1.347,18,0.333,21,0.542,22,0.688,23,0.773,24,0.459,40,1.186,41,1.136,44,0.295,48,0.605,52,0.386,82,0.016,83,0.016,85,0.688,94,0.733,97,0.688,101,1.683,119,1.727,126,1.297,127,1.098,131,0.876,136,1.425,140,1.161,141,1.161,238,1.536,239,1.451,241,1.628,242,1.628,247,2.536,463,2.846,469,3.123,470,3.123,471,3.145,472,4.155,473,3.145]],["title/classes/Load-4.html",[40,0.577,52,0.199,474,2.63]],["body/classes/Load-4.html",[3,0.236,4,0.271,5,0.271,9,0.202,15,0.021,18,0.306,21,0.499,23,0.764,24,0.462,40,1.215,44,0.271,52,0.319,82,0.018,83,0.018,85,0.821,127,1.31,136,1.31,178,2.025,418,4.069,475,3.394,476,3.394,477,4.956,478,6.021,479,4.124,480,4.956]],["title/classes/RegisterFormat.html",[52,0.236,135,2.124]],["body/classes/RegisterFormat.html",[3,0.169,4,0.194,5,0.265,9,0.145,12,0.45,14,0.387,15,0.022,18,0.3,21,0.357,23,0.7,24,0.456,39,1.476,44,0.325,48,0.517,52,0.383,55,1.433,82,0.014,83,0.014,85,0.588,94,0.626,97,0.588,114,2.056,115,2.226,116,2.226,117,3.204,118,2.839,119,2.017,121,2.977,122,3.044,124,2.431,125,1.911,126,1.108,127,0.938,128,3.2,129,2.056,130,2.226,131,0.748,132,2.226,133,3.729,134,3.413,135,2.812,136,1.571,137,2.431,138,2.602,139,2.602,140,1.545,141,1.545,142,2.431,143,1.391,144,1.783,145,2.056,146,1.476,147,2.431,148,2.431,283,3.029,481,3.549]],["title/classes/Reset.html",[41,0.773,52,0.236]],["body/classes/Reset.html",[3,0.205,4,0.235,5,0.235,6,2.16,7,2.16,9,0.175,13,1.724,15,0.022,18,0.341,21,0.555,22,0.712,23,0.649,24,0.423,39,1.787,40,0.805,41,1.161,44,0.332,52,0.413,54,1.27,55,1.27,82,0.016,83,0.016,85,0.712,101,1.342,126,1.342,127,1.136,131,0.906,136,1.607,138,2.023,139,2.023,140,1.201,141,1.201,146,1.787,221,2.291,236,2.944,237,2.023,238,1.59,239,1.502,240,2.944,241,1.685,242,1.685]],["title/classes/Reset-1.html",[41,0.65,52,0.199,377,2.111]],["body/classes/Reset-1.html",[3,0.2,4,0.229,5,0.229,9,0.171,13,1.644,15,0.022,16,1.355,18,0.335,21,0.546,22,0.695,23,0.748,24,0.487,40,0.786,41,1.339,44,0.328,52,0.409,54,1.238,82,0.016,83,0.016,85,0.695,101,1.309,126,1.309,127,1.108,131,0.884,136,1.588,140,1.172,141,1.172,150,1.973,151,1.973,157,2.43,169,2.107,178,1.309,210,2.631,238,1.551,239,1.465,241,1.643,242,1.643,247,1.973,255,2.872,256,3.174,257,3.714,258,2.872,259,2.872,260,3.174]],["title/classes/Reset-2.html",[41,0.65,52,0.199,466,2.63]],["body/classes/Reset-2.html",[3,0.188,4,0.215,5,0.215,9,0.161,13,1.612,15,0.022,16,1.457,18,0.322,21,0.524,22,0.653,23,0.613,24,0.495,40,0.738,41,1.097,44,0.339,47,3.116,52,0.416,54,1.163,82,0.015,83,0.015,85,0.653,101,1.23,126,1.23,127,1.041,131,0.83,136,1.639,140,1.454,141,1.454,146,1.638,221,2.164,237,1.853,238,1.456,239,1.376,241,1.543,242,1.543,243,2.12,244,2.471,245,2.802,246,2.471,247,1.853,248,2.282,249,2.802,250,2.12,251,2.698,252,2.471,253,2.12,254,2.12]],["title/classes/Reset-3.html",[41,0.65,52,0.199,468,2.63]],["body/classes/Reset-3.html",[3,0.21,4,0.241,5,0.241,9,0.18,13,1.67,15,0.022,16,1.102,18,0.346,21,0.564,22,0.731,23,0.787,24,0.472,40,1.049,41,1.365,44,0.306,52,0.397,82,0.016,83,0.016,85,0.731,101,1.377,126,1.377,127,1.166,131,0.93,136,1.48,140,1.232,141,1.232,238,1.631,239,1.54,241,1.728,242,1.728,247,2.075,469,2.555,470,2.555,471,3.339,473,3.339]],["title/interfaces/ScreenModeModel.html",[0,1.524,482,2.51]],["body/interfaces/ScreenModeModel.html",[0,2.076,2,3.132,3,0.238,4,0.273,5,0.273,9,0.204,10,0.993,11,3.039,14,0.545,15,0.021,24,0.383,44,0.273,82,0.018,83,0.018,102,3.503,153,2.892,412,2.892,413,3.132,482,4.142,483,3.419,484,3.419,485,4.992,486,4.632,487,4.142,488,5.162]],["title/classes/ScreenModeSelectors.html",[52,0.236,489,3.128]],["body/classes/ScreenModeSelectors.html",[3,0.194,4,0.223,5,0.223,9,0.167,10,0.811,12,0.517,14,0.445,15,0.022,18,0.367,24,0.409,26,1.02,44,0.223,48,0.594,52,0.263,55,1.205,57,1.488,61,2.507,66,1.205,82,0.016,83,0.016,85,0.676,87,3.876,88,1.663,89,3.193,92,1.347,94,0.719,97,0.676,102,2.868,103,2.197,411,2.795,412,4.004,413,3.944,482,4.306,483,3.648,484,3.648,486,3.648,489,4.546,490,4.08,491,5.327,492,4.08,493,4.08,494,5.327,495,3.482,496,4.08,497,4.08,498,4.08]],["title/injectables/ScreenModeState.html",[19,0.866,411,2.51]],["body/injectables/ScreenModeState.html",[3,0.177,4,0.203,5,0.203,9,0.152,10,0.74,12,0.472,14,0.406,15,0.022,18,0.391,19,1.185,20,1.377,23,0.667,24,0.486,25,2.853,26,0.931,44,0.203,45,1.645,48,0.73,50,1.871,52,0.24,55,1.481,57,1.04,58,2.215,67,2.157,74,1.301,82,0.015,83,0.015,88,1.565,92,1.229,94,0.656,97,0.617,101,2.08,106,1.645,308,2.55,329,3.178,330,3.178,342,3.178,411,3.434,412,3.777,413,3.97,444,3.434,482,3.434,483,3.434,484,3.434,486,3.882,495,3.178,499,3.724,500,5.013,501,3.724,502,5.013,503,3.724,504,5.013,505,3.724,506,3.178,507,3.724,508,3.724]],["title/classes/SendMessage.html",[52,0.236,270,2.774]],["body/classes/SendMessage.html",[0,2.319,3,0.209,4,0.239,5,0.239,9,0.179,12,0.555,14,0.669,15,0.021,18,0.345,21,0.561,22,0.726,23,0.516,44,0.239,48,0.638,52,0.395,82,0.016,83,0.016,85,0.726,94,0.773,97,0.726,119,2.551,127,1.158,136,1.158,140,1.224,141,1.224,252,3.499,267,4.76,270,4.222,275,5.048,277,3.74,302,4.76,509,4.382,510,5.578,511,5.578,512,5.578,513,4.382,514,6.817,515,4.382,516,4.382]],["title/classes/Set.html",[52,0.236,101,1.144]],["body/classes/Set.html",[3,0.211,4,0.242,5,0.242,9,0.229,12,0.561,14,0.483,15,0.022,18,0.274,21,0.445,23,0.521,44,0.242,48,0.644,52,0.285,55,1.307,82,0.017,83,0.017,85,0.733,94,0.78,97,0.733,101,2.088,102,3.318,119,1.84,127,1.169,136,1.169,138,2.641,139,2.641,140,1.236,141,1.236,412,3.252,413,4.066,483,3.844,484,3.844,486,4.221,487,3.844,488,4.79,506,3.776,517,4.425,518,5.612,519,4.425,520,4.425,521,4.425]],["title/classes/SetSelection.html",[52,0.236,250,1.973]],["body/classes/SetSelection.html",[3,0.178,4,0.205,5,0.205,9,0.153,12,0.474,13,1.585,14,0.408,15,0.022,16,1.519,18,0.311,21,0.506,22,0.62,23,0.593,24,0.486,40,0.701,41,0.789,44,0.332,47,3.186,48,0.545,52,0.409,54,1.106,82,0.015,83,0.015,85,0.62,94,0.66,97,0.62,101,1.169,119,1.557,126,1.169,127,0.989,131,0.789,136,1.606,140,1.406,141,1.406,146,1.557,221,1.557,237,1.762,238,1.384,239,1.308,241,1.467,242,1.467,243,2.016,244,2.349,245,3.272,246,2.349,247,1.762,248,2.915,249,3.272,250,2.709,251,2.564,252,3.157,253,2.709,254,2.709,522,3.744,523,3.744]],["title/classes/SourceRefsSelectors.html",[52,0.236,524,3.128]],["body/classes/SourceRefsSelectors.html",[3,0.205,4,0.35,5,0.235,9,0.175,10,0.855,12,0.545,14,0.469,15,0.022,18,0.376,21,0.433,22,0.712,26,1.075,37,2.491,38,3.774,44,0.235,48,0.626,52,0.277,57,1.699,66,1.27,82,0.016,83,0.016,85,0.712,87,3.192,88,1.72,89,3.274,92,1.419,94,0.758,97,0.712,103,2.314,469,3.192,470,3.192,524,4.703,525,4.299,526,5.51,527,4.703,528,5.51,529,5.79,530,4.299,531,4.299,532,4.703,533,4.299,534,4.299]],["title/injectables/SourceRefsState.html",[19,0.866,37,2.124]],["body/injectables/SourceRefsState.html",[3,0.159,4,0.345,5,0.183,9,0.136,10,0.664,12,0.59,13,0.835,14,0.584,15,0.022,16,1.448,17,1.678,18,0.377,19,1.1,20,1.235,21,0.336,22,0.553,23,0.393,24,0.506,25,2.19,26,0.835,27,2.52,28,1.678,29,1.572,37,2.696,40,1.212,41,1.221,44,0.183,45,2.859,46,3.187,48,0.78,50,1.678,52,0.215,54,1.374,57,1.3,58,2.056,59,2.505,66,0.986,74,1.167,77,2.696,82,0.014,83,0.014,88,1.453,92,1.536,94,0.82,97,0.771,106,1.476,110,2.288,112,2.288,143,1.309,178,1.043,221,1.935,222,1.678,223,2.288,228,2.095,229,1.678,230,2.095,231,2.288,444,3.668,469,3.103,470,3.103,527,2.851,529,2.851,532,4.944,535,2.851,536,3.34,537,3.34,538,3.34,539,3.34]],["title/injectables/StateAnalyticsPluginService.html",[19,0.866,414,2.51]],["body/injectables/StateAnalyticsPluginService.html",[3,0.101,4,0.116,5,0.116,9,0.136,10,0.421,12,0.269,14,0.712,15,0.022,16,1.395,18,0.287,19,1.189,20,0.784,23,0.776,24,0.456,26,0.53,44,0.224,46,3.175,48,0.308,52,0.137,55,1.648,57,1.406,58,1.809,61,0.997,66,1.487,67,1.924,74,1.43,82,0.01,83,0.01,88,1.037,94,0.374,97,0.351,102,1.788,106,0.936,131,1.061,143,1.301,174,1.228,178,0.662,188,2.569,190,2.275,222,1.065,228,2.083,229,2.329,239,0.74,258,2.275,297,1.604,316,2.569,323,1.452,335,1.809,407,1.604,409,2.514,414,2.805,415,4.163,416,5.188,423,1.604,424,1.604,425,1.604,456,5.515,487,1.452,540,2.514,541,2.514,542,1.604,543,4.635,544,3.321,545,5.778,546,4.635,547,2.119,548,3.321,549,3.321,550,4.095,551,4.095,552,2.119,553,3.495,554,2.119,555,3.321,556,2.119,557,2.119,558,2.834,559,2.834,560,2.514,561,2.834,562,1.809,563,2.834,564,1.809,565,4.832,566,1.809,567,1.809,568,1.809,569,1.809,570,1.809,571,1.809,572,2.834,573,2.834,574,2.119,575,1.809,576,3.495,577,1.809,578,1.809,579,1.809,580,2.834,581,2.834,582,1.809,583,2.119,584,2.119,585,2.119,586,2.119,587,2.119,588,2.119,589,2.119,590,2.119,591,2.119,592,2.119,593,2.119,594,2.119,595,2.119,596,2.119,597,2.119,598,2.834,599,2.119,600,2.119,601,2.119,602,2.119,603,2.119,604,4.635,605,3.321,606,4.095,607,2.119,608,2.119,609,2.119,610,2.119,611,1.809,612,1.809]],["title/classes/TissueLibrarySelectors.html",[52,0.236,613,3.128]],["body/classes/TissueLibrarySelectors.html",[3,0.182,4,0.209,5,0.209,9,0.208,10,0.761,12,0.485,13,0.957,14,0.627,15,0.022,16,1.277,18,0.379,21,0.385,22,0.634,24,0.47,26,0.957,44,0.209,48,0.557,52,0.37,55,1.131,57,1.427,66,1.131,82,0.015,83,0.015,85,0.634,88,1.595,89,3.094,92,1.264,94,0.675,96,3.866,97,0.634,103,3.094,174,2.959,178,2.051,417,4.375,418,4.007,475,3.498,476,3.498,479,3.498,613,4.359,614,3.828,615,5.107,616,5.107,617,5.107,618,4.641,619,3.828,620,3.828,621,5.747,622,5.107,623,5.107,624,3.267,625,3.828,626,3.828,627,3.828]],["title/injectables/TissueLibraryState.html",[19,0.866,417,2.51]],["body/injectables/TissueLibraryState.html",[3,0.17,4,0.194,5,0.194,9,0.198,10,0.707,12,0.451,14,0.388,15,0.022,16,1.215,18,0.398,19,1.149,20,1.316,21,0.358,22,0.59,23,0.419,24,0.527,26,0.889,27,2.606,28,1.788,29,1.674,40,0.667,44,0.194,45,2.148,48,0.708,52,0.229,54,1.436,55,1.051,57,1.358,59,2.617,66,1.051,82,0.014,83,0.014,88,1.518,92,1.175,94,0.627,97,0.59,106,1.572,139,2.287,143,1.905,178,2.092,209,3.329,222,1.788,229,2.443,230,2.232,308,3.329,417,3.329,418,4.204,475,3.329,476,3.329,479,2.437,582,3.037,618,2.693,624,3.037,628,3.558,629,4.861,630,4.861,631,5.079,632,3.558,633,4.861,634,4.861,635,3.558,636,3.037,637,3.558,638,3.558,639,3.558]],["title/dependencies.html",[640,2.63,641,3.328]],["body/dependencies.html",[15,0.021,20,2.024,82,0.019,83,0.019,641,4.836,642,5.473,643,5.473,644,5.473,645,5.473,646,6.388]],["title/miscellaneous/functions.html",[647,1.785,648,3.752]],["body/miscellaneous/functions.html",[9,0.114,10,0.965,11,1.406,12,0.798,14,0.701,15,0.021,16,0.699,32,2.376,48,0.917,57,1.825,58,1.236,74,1.432,82,0.012,83,0.012,96,3.104,97,1.044,102,1.506,117,1.621,118,1.812,121,1.506,125,3.517,134,2.06,138,1.317,144,1.406,150,1.317,151,1.317,158,1.917,159,2.808,160,2.808,167,4.306,170,2.808,174,2.812,188,4.279,190,3.896,226,4.142,249,2.208,257,1.917,297,2.118,317,2.388,323,1.917,375,2.388,415,3.324,430,2.118,487,1.917,540,2.118,541,2.118,542,3.104,560,2.118,564,2.388,565,4.045,566,2.388,567,2.388,568,2.388,569,2.388,570,2.388,571,5.074,572,2.388,573,2.388,636,2.388,647,1.621,648,2.388,649,4.5,650,6.142,651,4.101,652,2.118,653,4.101,654,4.101,655,4.101,656,4.101,657,4.101,658,4.101,659,2.388,660,2.798,661,2.798,662,2.798,663,2.798,664,2.798,665,2.798,666,5.689,667,2.798,668,5.689,669,2.798,670,2.798,671,5.344,672,2.798,673,2.798,674,2.798,675,2.798,676,2.798,677,2.798,678,2.798,679,2.798,680,2.798,681,2.798,682,2.798,683,2.798,684,2.798,685,4.101,686,2.798,687,2.798,688,2.798,689,2.798,690,2.798,691,2.798,692,2.798,693,2.798,694,2.118,695,2.798]],["title/index.html",[10,0.613,696,3.082,697,3.082]],["body/index.html",[15,0.019,24,0.488,82,0.019,83,0.019,419,4.634,698,5.43,699,6.358,700,5.43,701,6.358,702,6.358,703,5.43,704,5.43,705,5.43]],["title/modules.html",[405,3.755]],["body/modules.html",[15,0.019,82,0.019,83,0.019,287,4.263,404,4.263,405,4.263,706,5.632,707,5.632]],["title/overview.html",[708,4.233]],["body/overview.html",[2,3.393,15,0.019,41,1.14,82,0.019,83,0.019,85,0.896,106,2.39,377,3.704,403,4.616,474,4.616,641,4.802,708,4.616,709,6.344,710,5.408,711,5.408,712,5.408]],["title/properties.html",[11,2.209,640,2.63]],["body/properties.html",[11,2.841,15,0.02,82,0.019,83,0.019,713,5.655,714,5.655]],["title/miscellaneous/typealiases.html",[647,1.785,715,4.397]],["body/miscellaneous/typealiases.html",[6,1.802,7,1.802,8,3.7,10,0.713,14,0.774,15,0.014,23,0.422,24,0.275,25,3.033,45,3.008,82,0.014,83,0.014,121,2.993,122,3.488,128,2.993,150,1.688,151,1.688,152,4.519,154,3.061,158,3.347,164,4.171,165,3.061,166,2.715,167,3.7,168,5.502,169,1.802,170,2.456,171,2.715,172,2.715,178,1.12,290,4.519,305,4.745,308,2.456,418,2.25,427,2.715,469,2.078,470,2.078,475,2.456,476,2.456,479,2.456,535,4.171,618,3.7,631,4.171,647,2.078,649,4.209,652,4.729,694,2.715,716,3.586,717,3.061,718,3.586,719,3.061,720,4.887,721,5.56,722,5.332,723,6.247,724,6.247,725,5.97,726,3.061,727,5.97,728,3.061,729,3.061,730,3.061,731,3.586,732,4.887,733,3.586,734,3.586]],["title/miscellaneous/variables.html",[647,1.785,735,3.752]],["body/miscellaneous/variables.html",[3,0.107,6,0.663,7,0.663,9,0.092,10,0.263,11,1.481,12,0.167,14,0.496,15,0.021,17,0.663,19,0.312,21,0.133,23,0.695,24,0.101,52,0.224,56,1.213,61,1.06,67,0.765,82,0.007,83,0.007,102,0.711,115,0.828,118,1.302,125,3.463,128,1.213,130,0.828,132,0.828,134,1.75,144,1.132,150,1.06,151,1.06,152,2.636,162,1.923,163,2.973,166,2.231,169,1.75,170,2.916,171,1.705,172,1.705,173,2.515,174,2.265,175,1.543,176,1.923,177,4.089,178,1.087,179,3.337,180,3.634,181,1.127,182,1.127,183,1.127,184,1.127,185,1.923,186,1.127,187,1.127,188,2.453,189,1.127,190,1.543,191,1.127,192,1.127,193,1.127,194,1.127,236,1.543,238,1.288,239,1.366,240,0.904,244,0.828,246,0.828,255,1.543,259,0.904,264,1,275,1,288,2.96,299,3.881,300,1.923,301,1.127,316,1.849,323,4.844,331,1.923,332,1.923,364,3.337,407,1,409,1,412,0.765,414,0.904,415,2.916,423,1,424,1,425,1,431,2.231,469,0.765,470,0.765,471,1.705,473,1,540,1.705,541,1,542,2.636,553,1.923,558,2.515,559,2.515,560,1,561,1.127,562,1.923,563,1.127,565,5.314,575,1.127,576,2.515,577,1.127,578,1.127,579,1.127,580,1.127,581,1.127,598,2.515,611,1.127,612,1.923,647,0.765,649,2.636,652,2.636,659,2.515,694,1,717,1.127,719,1.127,722,2.973,726,2.973,728,2.973,729,2.973,730,2.515,735,1.127,736,4.791,737,6.72,738,1.32,739,1.32,740,2.253,741,6.39,742,2.253,743,1.32,744,2.253,745,2.947,746,2.253,747,3.91,748,3.483,749,2.253,750,2.253,751,2.253,752,2.253,753,2.253,754,2.253,755,2.253,756,2.253,757,2.253,758,2.253,759,2.253,760,2.253,761,2.253,762,4.999,763,2.253,764,2.253,765,4.547,766,3.483,767,2.947,768,2.947,769,2.253,770,3.483,771,2.253,772,2.253,773,2.253,774,1.32,775,1.32,776,2.253,777,1.32,778,3.91,779,1.32,780,1.32,781,1.32,782,1.32,783,1.32,784,5.179,785,5.337,786,1.32,787,1.32,788,2.947,789,1.32,790,1.32,791,2.947,792,4.258,793,2.253,794,1.32,795,1.32,796,1.32,797,1.32,798,1.32,799,1.32,800,1.32,801,4.258,802,1.32,803,2.253,804,2.253,805,1.32,806,1.32,807,3.483,808,1.32,809,1.32,810,1.32,811,2.253,812,1.32,813,1.32,814,1.32,815,1.32,816,1.32,817,1.32,818,1.32,819,1.32,820,1.32,821,1.32,822,1.32,823,2.253,824,1.32,825,1.32,826,1.32,827,1.32,828,1.32,829,1.32,830,1.32,831,1.32,832,1.32,833,1.32,834,1.32,835,1.32,836,1.32,837,1.32,838,3.483,839,1.32,840,1.32,841,1.32,842,1.32,843,1.32,844,1.32,845,1.32,846,1.32,847,1.32,848,2.253,849,1.32,850,2.947,851,1.32,852,1.32,853,2.253,854,1.32,855,2.253,856,1.32]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":375,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":714,"title":{},"body":{"properties.html":{}}}],["1",{"_index":377,"title":{"classes/Load-1.html":{},"classes/Reset-1.html":{}},"body":{"injectables/DownloadState.html":{},"overview.html":{}}}],["15.1.0",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":466,"title":{"classes/Load-2.html":{},"classes/Reset-2.html":{}},"body":{}}],["2.3.0",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["26",{"_index":712,"title":{},"body":{"overview.html":{}}}],["3",{"_index":468,"title":{"classes/Load-3.html":{},"classes/Reset-3.html":{}},"body":{}}],["4",{"_index":474,"title":{"classes/Load-4.html":{}},"body":{"overview.html":{}}}],["9",{"_index":711,"title":{},"body":{"overview.html":{}}}],["_ctx",{"_index":278,"title":{},"body":{"injectables/ContactState.html":{}}}],["absence",{"_index":679,"title":{},"body":{"miscellaneous/functions.html":{}}}],["action",{"_index":23,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action('[contact",{"_index":516,"title":{},"body":{"classes/SendMessage.html":{}}}],["action('[screenmode",{"_index":521,"title":{},"body":{"classes/Set.html":{}}}],["action('[tissuelibrary",{"_index":480,"title":{},"body":{"classes/Load-4.html":{}}}],["action('add",{"_index":142,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('clear",{"_index":146,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["action('compute",{"_index":260,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["action('download",{"_index":147,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('load",{"_index":241,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{}}}],["action('register",{"_index":137,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('reset",{"_index":242,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{}}}],["action('set",{"_index":251,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["action(['clear",{"_index":108,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["action([clear",{"_index":73,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["action(addentry",{"_index":306,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearentries",{"_index":310,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearselection",{"_index":443,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(computeaggregates",{"_index":212,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["action(download",{"_index":314,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(load",{"_index":59,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["action(registerformat",{"_index":325,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(reset",{"_index":77,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["action(sendmessage",{"_index":272,"title":{},"body":{"injectables/ContactState.html":{}}}],["action(set",{"_index":502,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["action(setselection",{"_index":442,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action_log",{"_index":602,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["actiongroup",{"_index":126,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{}}}],["actiongroup('activeftu",{"_index":240,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('cellsummary",{"_index":259,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('download",{"_index":132,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('illustrator",{"_index":246,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('sourcerefs",{"_index":473,"title":{},"body":{"classes/Load-3.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":316,"title":{},"body":{"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":42,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{}}}],["activeftu",{"_index":49,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftumodel",{"_index":1,"title":{"interfaces/ActiveFtuModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftuselectors",{"_index":84,"title":{"classes/ActiveFtuSelectors.html":{}},"body":{"classes/ActiveFtuSelectors.html":{}}}],["activeftustate",{"_index":53,"title":{"injectables/ActiveFtuState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{}}}],["add",{"_index":116,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["addd",{"_index":124,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["added",{"_index":633,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["addentry",{"_index":114,"title":{"classes/AddEntry.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["addentry(ctx",{"_index":304,"title":{},"body":{"injectables/DownloadState.html":{}}}],["aggregate",{"_index":169,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_cell",{"_index":173,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row",{"_index":166,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row.array",{"_index":194,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregates",{"_index":157,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["aggregates(state",{"_index":197,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["aggregation",{"_index":663,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aggregrated",{"_index":217,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["aggregrates",{"_index":156,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["alias",{"_index":732,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":716,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["analytics",{"_index":415,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["anchor",{"_index":386,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.click",{"_index":391,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.download",{"_index":389,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.href",{"_index":390,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.remove",{"_index":392,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/common",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":328,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{}}}],["app",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptitle",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":734,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["array",{"_index":159,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["array.isarray(value",{"_index":609,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["available",{"_index":287,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules.html":{}}}],["base",{"_index":238,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":676,"title":{},"body":{"miscellaneous/functions.html":{}}}],["being",{"_index":550,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["bigint",{"_index":563,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":383,"title":{},"body":{"injectables/DownloadState.html":{}}}],["blob([entry.data",{"_index":357,"title":{},"body":{"injectables/DownloadState.html":{}}}],["boolean",{"_index":102,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["boolean/number/string/null/bigint/undefined",{"_index":570,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["brand('downloadformatid",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branded",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":358,"title":{},"body":{"injectables/DownloadState.html":{}}}],["browse",{"_index":707,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":382,"title":{},"body":{"injectables/DownloadState.html":{}}}],["builtin",{"_index":333,"title":{},"body":{"injectables/DownloadState.html":{}}}],["calculates",{"_index":683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":724,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["cancels",{"_index":218,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["canceluncompleted",{"_index":60,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["case",{"_index":350,"title":{},"body":{"injectables/DownloadState.html":{}}}],["cell",{"_index":31,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{}}}],["cellsummary",{"_index":160,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["cellsummaryactions",{"_index":30,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.load(iri",{"_index":68,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.reset",{"_index":79,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryaggregate",{"_index":158,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummaryaggregaterow",{"_index":167,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummarymodel",{"_index":149,"title":{"interfaces/CellSummaryModel.html":{}},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["cellsummaryselectors",{"_index":195,"title":{"classes/CellSummarySelectors.html":{}},"body":{"classes/CellSummarySelectors.html":{}}}],["cellsummarystate",{"_index":203,"title":{"injectables/CellSummaryState.html":{}},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{}}}],["check",{"_index":566,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["checks",{"_index":100,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["children",{"_index":51,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["class",{"_index":52,"title":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":85,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"overview.html":{}}}],["clear",{"_index":39,"title":{"classes/Clear.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{}}}],["clear(undefined",{"_index":107,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["clearentries",{"_index":145,"title":{"classes/ClearEntries.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["clearentries(ctx",{"_index":309,"title":{},"body":{"injectables/DownloadState.html":{}}}],["clears",{"_index":237,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["clearselection",{"_index":243,"title":{"classes/ClearSelection.html":{}},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["clearselection(undefined",{"_index":457,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["color",{"_index":176,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":672,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":171,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["compute",{"_index":256,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregate",{"_index":226,"title":{},"body":{"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["computeaggregate(summary",{"_index":660,"title":{},"body":{"miscellaneous/functions.html":{}}}],["computeaggregates",{"_index":210,"title":{"classes/ComputeAggregates.html":{}},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregates(undefined",{"_index":211,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["computes",{"_index":214,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["const",{"_index":131,"title":{},"body":{"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["constant",{"_index":727,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constructor",{"_index":119,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["constructor(format",{"_index":283,"title":{},"body":{"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["constructor(id",{"_index":120,"title":{},"body":{"classes/AddEntry.html":{}}}],["constructor(iri",{"_index":463,"title":{},"body":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{}}}],["constructor(isfullscreen",{"_index":519,"title":{},"body":{"classes/Set.html":{}}}],["constructor(message",{"_index":513,"title":{},"body":{"classes/SendMessage.html":{}}}],["constructor(readonly",{"_index":140,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["constructor(selected",{"_index":522,"title":{},"body":{"classes/SetSelection.html":{}}}],["contact",{"_index":264,"title":{},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{},"miscellaneous/variables.html":{}}}],["contact.actions",{"_index":279,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactacknowledgement",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactions.sendmessage",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactmessage",{"_index":514,"title":{},"body":{"classes/SendMessage.html":{}}}],["contactservice",{"_index":269,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactstate",{"_index":261,"title":{"injectables/ContactState.html":{}},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{}}}],["contains",{"_index":175,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":300,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":45,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["conversion",{"_index":398,"title":{},"body":{"injectables/DownloadState.html":{}}}],["convert",{"_index":298,"title":{},"body":{"injectables/DownloadState.html":{}}}],["converted",{"_index":380,"title":{},"body":{"injectables/DownloadState.html":{}}}],["count",{"_index":685,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('gradient",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('size",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid",{"_index":651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdownloadformatid('png",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid('svg",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid(id",{"_index":695,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid('about",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('embed",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('exploreftu",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('illustration",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpage",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpagereadmore",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('portal",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('producttitle",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('apptitle",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('contactacknowledgement",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegend",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegendinfo",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthdescription",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthimg",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthmoretext",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthtitle",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrodescription",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroimg",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintromoretext",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintropartners",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrotitle",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metrics",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricslogo",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricstitle",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('productlogourl",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('producttitle",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('screensizenoticecontent",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegend",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegendinfo",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":138,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"miscellaneous/functions.html":{}}}],["ctx",{"_index":308,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["ctx.dispatch([new",{"_index":338,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.getstate",{"_index":346,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate",{"_index":341,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate(data",{"_index":639,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["current",{"_index":16,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":178,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-4.html":{},"classes/Reset-1.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dataservice",{"_index":230,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["decorators",{"_index":92,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["default",{"_index":323,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_loggable_actions",{"_index":558,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":50,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["define",{"_index":722,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":94,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["dependencies",{"_index":641,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":587,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["depth",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":564,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["different",{"_index":301,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":396,"title":{},"body":{"injectables/DownloadState.html":{}}}],["discriminated",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispatch",{"_index":64,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["dispatch([new",{"_index":78,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["dispatch(new",{"_index":234,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["dispatched",{"_index":551,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["display",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.appendchild(anchor",{"_index":388,"title":{},"body":{"injectables/DownloadState.html":{}}}],["document.createelement('a",{"_index":387,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download",{"_index":118,"title":{"classes/Download.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["download(ctx",{"_index":313,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.action",{"_index":334,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.model",{"_index":129,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["download_entry",{"_index":726,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format",{"_index":728,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format_id",{"_index":729,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_model",{"_index":730,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadactions.download",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadcontext",{"_index":305,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloaddata(blob",{"_index":384,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadentry",{"_index":122,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformat",{"_index":128,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadformatid",{"_index":121,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformatid:'${id",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadmodel",{"_index":290,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloadremotedata(url",{"_index":400,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloads",{"_index":394,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadselectors",{"_index":285,"title":{"classes/DownloadSelectors.html":{}},"body":{"classes/DownloadSelectors.html":{}}}],["downloadstate",{"_index":295,"title":{"injectables/DownloadState.html":{}},"body":{"injectables/DownloadState.html":{},"modules/HraStateModule.html":{}}}],["draft.entries",{"_index":345,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.entries[id",{"_index":344,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.formats[format.id",{"_index":343,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.isfullscreen",{"_index":508,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["each",{"_index":690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["elements",{"_index":186,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entires",{"_index":312,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entries",{"_index":144,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["entries[format",{"_index":347,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry",{"_index":117,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{}}}],["entry.url",{"_index":353,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry?.type",{"_index":349,"title":{},"body":{"injectables/DownloadState.html":{}}}],["error('cannot",{"_index":360,"title":{},"body":{"injectables/DownloadState.html":{}}}],["event",{"_index":594,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["execute",{"_index":705,"title":{},"body":{"index.html":{}}}],["expandrow",{"_index":653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandrow(row",{"_index":665,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expands",{"_index":667,"title":{},"body":{"miscellaneous/functions.html":{}}}],["explore",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exploreftu",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["extends",{"_index":136,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["extension",{"_index":364,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":239,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["fakebase",{"_index":366,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fakebase).pathname",{"_index":370,"title":{},"body":{"injectables/DownloadState.html":{}}}],["false",{"_index":507,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["fetch",{"_index":397,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fields",{"_index":428,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["filename",{"_index":351,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fileurl",{"_index":399,"title":{},"body":{"injectables/DownloadState.html":{}}}],["followed",{"_index":189,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["forked",{"_index":436,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["forkjoin",{"_index":432,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["form",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":134,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["format.id",{"_index":293,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats",{"_index":288,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["formats(state",{"_index":289,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats.ts",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formats[id",{"_index":365,"title":{},"body":{"injectables/DownloadState.html":{}}}],["formatted",{"_index":381,"title":{},"body":{"injectables/DownloadState.html":{}}}],["found",{"_index":677,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ftu",{"_index":17,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions",{"_index":43,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["ftu.actions.ts",{"_index":236,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions.ts:8",{"_index":464,"title":{},"body":{"classes/Load.html":{}}}],["ftu.selectors.ts",{"_index":86,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:15",{"_index":95,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:9",{"_index":99,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state",{"_index":104,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state.ts",{"_index":8,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"miscellaneous/typealiases.html":{}}}],["ftu.state.ts:36",{"_index":111,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:50",{"_index":109,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:59",{"_index":113,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu/active",{"_index":7,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftudataschemas",{"_index":161,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["ftudataschemas.cell_summary_row",{"_index":182,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["ftudataservice",{"_index":223,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["full",{"_index":494,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["fullscreen",{"_index":488,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{}}}],["function",{"_index":571,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":648,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funtion",{"_index":569,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["ga",{"_index":583,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["generated",{"_index":698,"title":{},"body":{"index.html":{}}}],["getactiontypefrominstance",{"_index":554,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getactiontypefrominstance(action",{"_index":596,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getcolumnindex",{"_index":654,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnindex(indexbyid",{"_index":670,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel",{"_index":655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel(items",{"_index":674,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow(rowbyid",{"_index":680,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":96,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{}}}],["getstate",{"_index":62,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["getstate().iri",{"_index":65,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["getting",{"_index":696,"title":{"index.html":{}},"body":{}}],["gettotalcount",{"_index":657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettotalcount(row",{"_index":682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["given",{"_index":257,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{}}}],["google",{"_index":543,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["googleanalyticsservice",{"_index":556,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["gradient",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegend",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegendinfo",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":706,"title":{},"body":{"modules.html":{}}}],["group",{"_index":130,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["guess",{"_index":362,"title":{},"body":{"injectables/DownloadState.html":{}}}],["guessfilename(ctx",{"_index":363,"title":{},"body":{"injectables/DownloadState.html":{}}}],["handle",{"_index":46,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["handle(state",{"_index":544,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handler's",{"_index":733,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handles",{"_index":548,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handling",{"_index":209,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/TissueLibraryState.html":{}}}],["hasdata",{"_index":292,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["having",{"_index":154,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["helper",{"_index":731,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["hra",{"_index":21,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["hrastatemodule",{"_index":404,"title":{"modules/HraStateModule.html":{}},"body":{"modules/HraStateModule.html":{},"modules.html":{}}}],["http",{"_index":336,"title":{},"body":{"injectables/DownloadState.html":{}}}],["httpclient",{"_index":327,"title":{},"body":{"injectables/DownloadState.html":{}}}],["https://base.com",{"_index":367,"title":{},"body":{"injectables/DownloadState.html":{}}}],["id",{"_index":125,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ids.ts",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignoring",{"_index":691,"title":{},"body":{"miscellaneous/functions.html":{}}}],["illustrartor",{"_index":429,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustration",{"_index":431,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":245,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["illustrator",{"_index":35,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.actions",{"_index":433,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.state",{"_index":454,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratoractions",{"_index":33,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.load(iri",{"_index":69,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.reset",{"_index":80,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratormodel",{"_index":426,"title":{"interfaces/IllustratorModel.html":{}},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrators",{"_index":435,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustratorselectors",{"_index":445,"title":{"classes/IllustratorSelectors.html":{}},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratorstate",{"_index":34,"title":{"injectables/IllustratorState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["image",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["immer",{"_index":330,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["implements",{"_index":335,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["imports",{"_index":420,"title":{},"body":{"modules/HraStateModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexbyid",{"_index":673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicating",{"_index":678,"title":{},"body":{"miscellaneous/functions.html":{}}}],["individual",{"_index":511,"title":{},"body":{"classes/SendMessage.html":{}}}],["inferred",{"_index":725,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":265,"title":{},"body":{"injectables/ContactState.html":{}}}],["init",{"_index":321,"title":{},"body":{"injectables/DownloadState.html":{}}}],["initial",{"_index":693,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializes",{"_index":252,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SendMessage.html":{},"classes/SetSelection.html":{}}}],["inject",{"_index":222,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["inject(contactservice",{"_index":281,"title":{},"body":{"injectables/ContactState.html":{}}}],["inject(ftudataservice",{"_index":231,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["inject(googleanalyticsservice",{"_index":584,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["inject(httpclient",{"_index":337,"title":{},"body":{"injectables/DownloadState.html":{}}}],["inject(tissuelibraryservice",{"_index":637,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["injectable",{"_index":19,"title":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":106,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"overview.html":{}}}],["injectiontoken",{"_index":552,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["injectiontoken('loggable",{"_index":579,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":582,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["input",{"_index":567,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":139,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"injectables/TissueLibraryState.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/SendMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{},"overview.html":{}}}],["intializes",{"_index":247,"title":{},"body":{"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{}}}],["intro",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iri",{"_index":13,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{}}}],["iri(undefined",{"_index":91,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isactive",{"_index":90,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isactive(undefined",{"_index":98,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isfullscreen",{"_index":486,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["isfullscreen(state",{"_index":491,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["isprimitive",{"_index":658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isprimitive(value",{"_index":572,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":249,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{},"miscellaneous/functions.html":{}}}],["items",{"_index":430,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["iterating",{"_index":686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["json.stringify(action",{"_index":599,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["key",{"_index":604,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["label",{"_index":170,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lanading",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landing",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpage",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthdescription",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthimg",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthmoretext",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthtitle",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedescription",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroimg",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintromoretext",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagepartners",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagereadmore",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagetitle",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length",{"_index":666,"title":{},"body":{"miscellaneous/functions.html":{}}}],["less",{"_index":669,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":419,"title":{},"body":{"modules/HraStateModule.html":{},"index.html":{}}}],["library.actions",{"_index":635,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.actions.ts",{"_index":477,"title":{},"body":{"classes/Load-4.html":{}}}],["library.model",{"_index":624,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["library.model.ts",{"_index":721,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["library.selectors.ts",{"_index":614,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.selectors.ts:14",{"_index":620,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state",{"_index":625,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state.ts",{"_index":628,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.state.ts:22",{"_index":632,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library/tissue",{"_index":476,"title":{},"body":{"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["link",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkid",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkregistryactions.navigate",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":577,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":40,"title":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["load(undefined",{"_index":110,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["loading",{"_index":478,"title":{},"body":{"classes/Load-4.html":{}}}],["loads",{"_index":54,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["logaction(action",{"_index":595,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["loggable",{"_index":559,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggable_actions",{"_index":576,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggabletypes",{"_index":588,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logged",{"_index":578,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":549,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logging",{"_index":585,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["login",{"_index":611,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs",{"_index":592,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["managing",{"_index":263,"title":{},"body":{"injectables/ContactState.html":{}}}],["map",{"_index":671,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapping",{"_index":253,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["mapping(undefined",{"_index":447,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["matching",{"_index":83,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medical",{"_index":434,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["message",{"_index":275,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":267,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["metadata",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":274,"title":{},"body":{"injectables/ContactState.html":{},"injectables/DownloadState.html":{}}}],["methods",{"_index":88,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["metrics",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricslogo",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricstitle",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":647,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":413,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["mode.actions",{"_index":505,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.actions.ts",{"_index":517,"title":{},"body":{"classes/Set.html":{}}}],["mode.actions.ts:4",{"_index":520,"title":{},"body":{"classes/Set.html":{}}}],["mode.model",{"_index":495,"title":{},"body":{"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["mode.model.ts",{"_index":485,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["mode.selectors.ts",{"_index":490,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.selectors.ts:15",{"_index":493,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state",{"_index":496,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state.ts",{"_index":499,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.state.ts:22",{"_index":503,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode/screen",{"_index":484,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["model",{"_index":153,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{}}}],["module",{"_index":403,"title":{"modules/HraStateModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":405,"title":{"modules.html":{}},"body":{"modules/HraStateModule.html":{},"modules.html":{}}}],["more",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":425,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":48,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["name.includes",{"_index":378,"title":{},"body":{"injectables/DownloadState.html":{}}}],["name}${extension",{"_index":379,"title":{},"body":{"injectables/DownloadState.html":{}}}],["needs",{"_index":605,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["new",{"_index":67,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":545,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["next(state",{"_index":591,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngmodule",{"_index":408,"title":{},"body":{"modules/HraStateModule.html":{}}}],["ngx",{"_index":557,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxs",{"_index":320,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxs/store",{"_index":26,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["ngxs_plugins",{"_index":409,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["ngxsmodule",{"_index":410,"title":{},"body":{"modules/HraStateModule.html":{}}}],["ngxsmodule.forfeature",{"_index":421,"title":{},"body":{"modules/HraStateModule.html":{}}}],["ngxsnextpluginfn",{"_index":546,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxsoninit",{"_index":303,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsoninit(ctx",{"_index":318,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsplugin",{"_index":555,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["node",{"_index":622,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["non",{"_index":692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notice",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":573,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":190,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":699,"title":{},"body":{"index.html":{}}}],["object",{"_index":174,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.values(formats).filter(hasdata",{"_index":294,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["objects",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":27,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["operations",{"_index":664,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":710,"title":{},"body":{"overview.html":{}}}],["over",{"_index":687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":708,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":640,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":55,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["parameters",{"_index":97,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partners",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchstate",{"_index":63,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["path",{"_index":368,"title":{},"body":{"injectables/DownloadState.html":{}}}],["path.split('/').filter((seg",{"_index":372,"title":{},"body":{"injectables/DownloadState.html":{}}}],["payload",{"_index":598,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["peer",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["performs",{"_index":662,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe(tap",{"_index":71,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["plugin",{"_index":416,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["plugin.service.ts",{"_index":542,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["plugin.service.ts:51",{"_index":547,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["plugin/default",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin/state",{"_index":541,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png_format",{"_index":331,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["portal",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primitive",{"_index":560,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["primitive_types",{"_index":562,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["primitive_types.includes(typeof",{"_index":574,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["private",{"_index":229,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["produce",{"_index":329,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["produce((draft",{"_index":342,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["product",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productlogourl",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producttitle",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":636,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["provide",{"_index":423,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":580,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":553,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":422,"title":{},"body":{"modules/HraStateModule.html":{}}}],["provides",{"_index":407,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":143,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/RegisterFormat.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["record",{"_index":621,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["references",{"_index":532,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["refs",{"_index":38,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"classes/SourceRefsSelectors.html":{}}}],["refs.actions",{"_index":538,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.actions.ts",{"_index":471,"title":{},"body":{"classes/Load-3.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["refs.actions.ts:10",{"_index":472,"title":{},"body":{"classes/Load-3.html":{}}}],["refs.selectors.ts",{"_index":525,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.selectors.ts:9",{"_index":531,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state",{"_index":533,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state.ts",{"_index":535,"title":{},"body":{"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["refs.state.ts:27",{"_index":536,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.state.ts:35",{"_index":537,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs/source",{"_index":470,"title":{},"body":{"classes/Load-3.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":133,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["registerformat",{"_index":135,"title":{"classes/RegisterFormat.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["registerformat(ctx",{"_index":324,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(png_format",{"_index":340,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(svg_format",{"_index":339,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registry",{"_index":322,"title":{},"body":{"injectables/DownloadState.html":{}}}],["representing",{"_index":164,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["required",{"_index":187,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["rese",{"_index":75,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["reset",{"_index":41,"title":{"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"overview.html":{}}}],["reset(undefined",{"_index":112,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["resets",{"_index":221,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{}}}],["resource",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetype",{"_index":402,"title":{},"body":{"injectables/DownloadState.html":{}}}],["result",{"_index":440,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["result$.pipe(tap((result",{"_index":441,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["results",{"_index":82,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retreiving",{"_index":615,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["retrieves",{"_index":675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":66,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["returns",{"_index":57,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":581,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":668,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rowbyid",{"_index":681,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rows",{"_index":172,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":703,"title":{},"body":{"index.html":{}}}],["running",{"_index":700,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":29,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["save",{"_index":395,"title":{},"body":{"injectables/DownloadState.html":{}}}],["schema",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":412,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["screenmode",{"_index":506,"title":{},"body":{"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["screenmodemodel",{"_index":482,"title":{"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screenmodeselectors",{"_index":489,"title":{"classes/ScreenModeSelectors.html":{}},"body":{"classes/ScreenModeSelectors.html":{}}}],["screenmodestate",{"_index":411,"title":{"injectables/ScreenModeState.html":{}},"body":{"modules/HraStateModule.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screensizenoticecontent",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seg",{"_index":373,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments",{"_index":371,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments.length",{"_index":374,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments[segments.length",{"_index":376,"title":{},"body":{"injectables/DownloadState.html":{}}}],["selected",{"_index":254,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["selected(undefined",{"_index":450,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedformat",{"_index":148,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["selection",{"_index":47,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["selections",{"_index":72,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["selector",{"_index":103,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["selector(['activeftustate",{"_index":93,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector(['cellsummarystate",{"_index":198,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector(['illustratorstate",{"_index":448,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector(['screenmodestate",{"_index":492,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["selector(['sourcerefsstate",{"_index":530,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector(['tissuelibrarystate",{"_index":619,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selector([activeftustate",{"_index":105,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector([cellsummarystate",{"_index":205,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector([illustratorstate",{"_index":455,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector([screenmodestate",{"_index":497,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["selector([sourcerefsstate",{"_index":534,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector([tissuelibrarystate",{"_index":626,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selectors",{"_index":87,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{}}}],["send",{"_index":277,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sending",{"_index":266,"title":{},"body":{"injectables/ContactState.html":{}}}],["sendmessage",{"_index":270,"title":{"classes/SendMessage.html":{}},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sendmessage(_ctx",{"_index":271,"title":{},"body":{"injectables/ContactState.html":{}}}],["sends",{"_index":510,"title":{},"body":{"classes/SendMessage.html":{}}}],["serialize",{"_index":568,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["serialize(this",{"_index":607,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serialized",{"_index":606,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serializes",{"_index":603,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["service",{"_index":228,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["set",{"_index":101,"title":{"classes/Set.html":{}},"body":{"classes/ActiveFtuSelectors.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["set(inject(loggable_actions).map(getactiontypefrominstance",{"_index":589,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["set(undefined",{"_index":501,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["setactive",{"_index":629,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["setactive(ctx",{"_index":630,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["sets",{"_index":248,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["setselection",{"_index":250,"title":{"classes/SetSelection.html":{}},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["setselection(undefined",{"_index":461,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["setstate",{"_index":444,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["setting",{"_index":586,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["show",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["single",{"_index":165,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":177,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["sizelegend",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sizelegendinfo",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["sourcereference",{"_index":529,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences",{"_index":527,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences(refs",{"_index":528,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsactions",{"_index":36,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.load(iri",{"_index":70,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.reset",{"_index":81,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsselectors",{"_index":524,"title":{"classes/SourceRefsSelectors.html":{}},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsstate",{"_index":37,"title":{"injectables/SourceRefsState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcerefstate",{"_index":526,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["specified",{"_index":317,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["src/.../active",{"_index":717,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../builtin",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cell",{"_index":649,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.action.ts",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.model.ts",{"_index":652,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../illustrator.actions.ts",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../illustrator.state.ts",{"_index":718,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../link",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../source",{"_index":719,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../state",{"_index":659,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":720,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/active",{"_index":6,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cell",{"_index":150,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.actions.ts",{"_index":509,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.actions.ts:5",{"_index":515,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.state.ts",{"_index":262,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/contact/contact.state.ts:16",{"_index":273,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/download/builtin",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts",{"_index":115,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts:10",{"_index":481,"title":{},"body":{"classes/RegisterFormat.html":{}}}],["src/lib/download/download.action.ts:23",{"_index":123,"title":{},"body":{"classes/AddEntry.html":{}}}],["src/lib/download/download.action.ts:38",{"_index":284,"title":{},"body":{"classes/Download.html":{}}}],["src/lib/download/download.model.ts",{"_index":694,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.selectors.ts",{"_index":286,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.selectors.ts:14",{"_index":291,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.state.ts",{"_index":296,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:34",{"_index":319,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:44",{"_index":326,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:58",{"_index":307,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:71",{"_index":311,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:85",{"_index":315,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/illustrator/illustrator.actions.ts",{"_index":244,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{},"miscellaneous/variables.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:10",{"_index":467,"title":{},"body":{"classes/Load-2.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:20",{"_index":523,"title":{},"body":{"classes/SetSelection.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts",{"_index":446,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:13",{"_index":453,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:21",{"_index":451,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:29",{"_index":449,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.state.ts",{"_index":427,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/illustrator/illustrator.state.ts:44",{"_index":459,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:55",{"_index":462,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:63",{"_index":458,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:71",{"_index":460,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/link",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/resource",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/screen",{"_index":483,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["src/lib/source",{"_index":469,"title":{},"body":{"classes/Load-3.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state",{"_index":540,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state.module.ts",{"_index":406,"title":{},"body":{"modules/HraStateModule.html":{}}}],["src/lib/tissue",{"_index":475,"title":{},"body":{"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":697,"title":{"index.html":{}},"body":{}}],["state",{"_index":24,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.aggregates",{"_index":206,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state.isfullscreen",{"_index":498,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["state.nodes",{"_index":627,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["state.summaries",{"_index":207,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state_logger_provider",{"_index":612,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["stateanalyticspluginservice",{"_index":414,"title":{"injectables/StateAnalyticsPluginService.html":{}},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["statecontext",{"_index":25,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["states",{"_index":76,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{}}}],["static",{"_index":89,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["store",{"_index":258,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["stores",{"_index":215,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["storing",{"_index":500,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["string",{"_index":188,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":184,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["submitted",{"_index":512,"title":{},"body":{"classes/SendMessage.html":{}}}],["submitting",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summaries",{"_index":155,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summaries(state",{"_index":200,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summaries.map(computeaggregate",{"_index":235,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary",{"_index":32,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"miscellaneous/functions.html":{}}}],["summary.actions",{"_index":225,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.actions.ts",{"_index":255,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["summary.actions.ts:8",{"_index":465,"title":{},"body":{"classes/Load-1.html":{}}}],["summary.helpers",{"_index":227,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.helpers.ts",{"_index":650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary.model",{"_index":202,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summary.model.ts",{"_index":152,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summary.selectors.ts",{"_index":196,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:10",{"_index":199,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:16",{"_index":201,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state",{"_index":204,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state.ts",{"_index":208,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:27",{"_index":216,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:38",{"_index":213,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:48",{"_index":220,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary/cell",{"_index":151,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summing",{"_index":688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["super",{"_index":141,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["svg",{"_index":299,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["svg_format",{"_index":332,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":348,"title":{},"body":{"injectables/DownloadState.html":{}}}],["switchmap",{"_index":224,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["takes",{"_index":661,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tap",{"_index":28,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["tap((summaries",{"_index":233,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["test",{"_index":704,"title":{},"body":{"index.html":{}}}],["tests",{"_index":702,"title":{},"body":{"index.html":{}}}],["text",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.contact.sendmessage(message",{"_index":282,"title":{},"body":{"injectables/ContactState.html":{}}}],["this.dataservice.getcellsummaries(iri).pipe",{"_index":232,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.dataservice.getillustrationmapping(iri",{"_index":439,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getillustrationurl(iri",{"_index":438,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getsourcereferences(iri).pipe(tap(setstate",{"_index":539,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["this.dataservice.gettissuelibrary().pipe(tap((data",{"_index":638,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["this.downloaddata(data",{"_index":355,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloaddata(new",{"_index":356,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloadremotedata(entry.url).pipe(tap((data",{"_index":354,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.ga.event(type",{"_index":601,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.guessfilename(ctx",{"_index":352,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.http.get(url",{"_index":401,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.logaction(action",{"_index":590,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.loggabletypes.has(type",{"_index":597,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.serialize",{"_index":600,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["throw",{"_index":359,"title":{},"body":{"injectables/DownloadState.html":{}}}],["tissedata",{"_index":623,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissue",{"_index":418,"title":{},"body":{"modules/HraStateModule.html":{},"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrary",{"_index":479,"title":{},"body":{"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarycontext",{"_index":631,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarymodel",{"_index":618,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryselectors",{"_index":613,"title":{"classes/TissueLibrarySelectors.html":{}},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissuelibraryservice",{"_index":634,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["tissuelibrarystate",{"_index":417,"title":{"injectables/TissueLibraryState.html":{}},"body":{"modules/HraStateModule.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["tissues",{"_index":616,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissues(state",{"_index":617,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["title",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["together",{"_index":437,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["token",{"_index":575,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tooltip",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":684,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transform((id",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformed",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigerred",{"_index":593,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["true",{"_index":61,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":183,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":185,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":715,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":608,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["types",{"_index":561,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["types.ts",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":723,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/cdk/state",{"_index":127,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["ui/services",{"_index":22,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["uncompleted",{"_index":219,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["undefined",{"_index":74,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["union",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":701,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":456,"title":{},"body":{"classes/IllustratorSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["up",{"_index":689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update",{"_index":518,"title":{},"body":{"classes/Set.html":{}}}],["updates",{"_index":504,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["url",{"_index":56,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"miscellaneous/variables.html":{}}}],["url(undefined",{"_index":452,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["url(url",{"_index":369,"title":{},"body":{"injectables/DownloadState.html":{}}}],["used",{"_index":297,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":424,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":302,"title":{},"body":{"injectables/DownloadState.html":{},"classes/SendMessage.html":{}}}],["uses",{"_index":276,"title":{},"body":{"injectables/ContactState.html":{}}}],["using",{"_index":268,"title":{},"body":{"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["value",{"_index":565,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.every(isprimitive",{"_index":610,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["variable",{"_index":280,"title":{},"body":{"injectables/ContactState.html":{}}}],["variables",{"_index":735,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":713,"title":{},"body":{"properties.html":{}}}],["void",{"_index":58,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":487,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["window.url.createobjecturl(blob",{"_index":385,"title":{},"body":{"injectables/DownloadState.html":{}}}],["window.url.revokeobjecturl(url",{"_index":393,"title":{},"body":{"injectables/DownloadState.html":{}}}],["without",{"_index":361,"title":{},"body":{"injectables/DownloadState.html":{}}}],["z",{"_index":162,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.discriminatedunion('type",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":168,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["z.literal('data",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal('url",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().nonnegative",{"_index":181,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.number().optional()]).rest(aggregate_cell.optional",{"_index":192,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":179,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.record(download_format_id",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":180,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":193,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.tuple([z.string",{"_index":191,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":163,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":709,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActiveFtuModel.html":{"url":"interfaces/ActiveFtuModel.html","title":"interface - ActiveFtuModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveFtuModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for ActiveFtuModel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            iri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iri:     Iri\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Iri\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Iri for the current Ftu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset } from './active-ftu.actions';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to rese the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([new CellSummaryActions.Reset(), new IllustratorActions.Reset(), new SourceRefsActions.Reset()]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActiveFtuSelectors.html":{"url":"classes/ActiveFtuSelectors.html","title":"class - ActiveFtuSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActiveFtuSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for ActiveftuState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                iri\n                            \n                            \n                                    Static\n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        iri\n                        \n                    \n                \n            \n            \n                \n                    \n                    iri(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:15\n                \n            \n\n\n            \n                \n                    gets the iri from the ActiveFtuModel\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Iri | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:9\n                \n            \n\n\n            \n                \n                    checks if the Iri is set\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { ActiveFtuModel, ActiveFtuState } from './active-ftu.state';\n\n/** selectors for ActiveftuState */\nexport class ActiveFtuSelectors {\n  /** checks if the Iri is set */\n  @Selector([ActiveFtuState])\n  static isActive({ iri }: ActiveFtuModel): boolean {\n    return iri !== undefined;\n  }\n\n  /** gets the iri from the ActiveFtuModel */\n  @Selector([ActiveFtuState])\n  static iri({ iri }: ActiveFtuModel): Iri | undefined {\n    return iri;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActiveFtuState.html":{"url":"injectables/ActiveFtuState.html","title":"injectable - ActiveFtuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActiveFtuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle active FTU selection\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(['Clear', 'Reset'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:50\n                \n            \n\n\n            \n                \n                    Action to clear the iri selections\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:36\n                \n            \n\n\n            \n                \n                    loads the Cell summary, Illustrator and Source Refs\nwith the current iri\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        load An observable of void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:59\n                \n            \n\n\n            \n                \n                    Action to rese the states for\nCell summary, Illustrator and Source Refs\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset } from './active-ftu.actions';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to rese the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([new CellSummaryActions.Reset(), new IllustratorActions.Reset(), new SourceRefsActions.Reset()]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddEntry.html":{"url":"classes/AddEntry.html","title":"class - AddEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Add entry into download state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: DownloadFormatId, entry: DownloadEntry)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor for Addd Entry\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        DownloadEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CellSummaryModel.html":{"url":"interfaces/CellSummaryModel.html","title":"interface - CellSummaryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CellSummaryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.model.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface of the Cell summary model\nhaving the summaries and aggregrates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aggregates\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aggregates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggregates:         CellSummaryAggregate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CellSummaryAggregate[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of aggregates of the Cell Summary\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:     CellSummary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CellSummary[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of summaries of the Cell Summary\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CellSummary, FtuDataSchemas } from '@hra-ui/services';\nimport { StateContext } from '@ngxs/store';\nimport { z } from 'zod';\n\n/** Type representing a single AGGREGATE_ROW */\nexport type CellSummaryAggregateRow = z.infer;\n\n/** Type representing AGGREGATE having label, columns and rows */\nexport type CellSummaryAggregate = z.infer;\n\n/**\n * An interface of the Cell summary model\n * having the summaries and aggregrates\n */\nexport interface CellSummaryModel {\n  /** Array of summaries of the Cell Summary */\n  summaries: CellSummary[];\n  /** Array of aggregates of the Cell Summary */\n  aggregates: CellSummaryAggregate[];\n}\n\nexport type Context = StateContext;\n\n/**\n * The AGGREGATE_CELL is an object that contains the color, size and\n * the data\n */\nconst AGGREGATE_CELL = z.object({\n  color: z.string(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n});\n\n/**\n * The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\n * a required string followed by an optional number\n */\nconst AGGREGATE_ROW = z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional());\n\n/**\n * The AGGREGATE is an object that contains the label, columns\n * and rows */\nconst AGGREGATE = z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellSummarySelectors.html":{"url":"classes/CellSummarySelectors.html","title":"class - CellSummarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellSummarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for the CellSummary state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                aggregates\n                            \n                            \n                                    Static\n                                summaries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        aggregates\n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregates(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:10\n                \n            \n\n\n            \n                \n                    get the aggregate data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        summaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    summaries(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:16\n                \n            \n\n\n            \n                \n                    get the summaries data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CellSummary[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { CellSummary } from '@hra-ui/services';\nimport { CellSummaryModel, CellSummaryAggregate } from './cell-summary.model';\nimport { CellSummaryState } from './cell-summary.state';\n\n/** selectors for the CellSummary state */\nexport class CellSummarySelectors {\n  /** get the aggregate data from the state */\n  @Selector([CellSummaryState])\n  static aggregates(state: CellSummaryModel): CellSummaryAggregate[] {\n    return state.aggregates;\n  }\n\n  /** get the summaries data from the state */\n  @Selector([CellSummaryState])\n  static summaries(state: CellSummaryModel): CellSummary[] {\n    return state.summaries;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CellSummaryState.html":{"url":"injectables/CellSummaryState.html","title":"injectable - CellSummaryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CellSummaryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling cell summary data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeAggregates\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        computeAggregates\n                        \n                    \n                \n            \n            \n                \ncomputeAggregates(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ComputeAggregates)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:38\n                \n            \n\n\n            \n                \n                    computes aggregate data and stores in the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the cell summary data and aggregrated of the current Iri into\nthe state and cancels uncompleted action if any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:48\n                \n            \n\n\n            \n                \n                    Resets the summaries and aggregates for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { ComputeAggregates, Load, Reset } from './cell-summary.actions';\nimport { computeAggregate } from './cell-summary.helpers';\nimport { CellSummaryModel, Context } from './cell-summary.model';\n\n/** State handling cell summary data */\n@State({\n  name: 'cellSummary',\n  defaults: {\n    summaries: [],\n    aggregates: [],\n  },\n})\n@Injectable()\nexport class CellSummaryState {\n  /** Data service to load the FTU data */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the cell summary data and aggregrated of the current Iri into\n   * the state and cancels uncompleted action if any\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    return this.dataService.getCellSummaries(iri).pipe(\n      tap((summaries) => patchState({ summaries, aggregates: [] })),\n      switchMap(() => dispatch(new ComputeAggregates()))\n    );\n  }\n\n  /**\n   * computes aggregate data and stores in the current state\n   */\n  @Action(ComputeAggregates)\n  computeAggregates({ getState, patchState }: Context): void {\n    const { summaries } = getState();\n    const aggregates = summaries.map(computeAggregate);\n    patchState({ aggregates });\n  }\n\n  /**\n   * Resets the summaries and aggregates for the current state\n   */\n  @Action(Reset)\n  reset({ patchState }: Context): void {\n    patchState({ summaries: [], aggregates: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clear.html":{"url":"classes/Clear.html","title":"class - Clear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the Iri\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearEntries.html":{"url":"classes/ClearEntries.html","title":"class - ClearEntries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearEntries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Clear all entries from download state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelection.html":{"url":"classes/ClearSelection.html","title":"class - ClearSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the selection for the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state\n */\nexport class SetSelection extends Action('Set Selection') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selected: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComputeAggregates.html":{"url":"classes/ComputeAggregates.html","title":"class - ComputeAggregates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComputeAggregates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Compute aggregate of the given data and store to state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactState.html":{"url":"injectables/ContactState.html","title":"injectable - ContactState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact'\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(_ctx: StateContext, undefined: SendMessage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SendMessage)\n                \n            \n\n            \n                \n                    Defined in src/lib/contact/contact.state.ts:16\n                \n            \n\n\n            \n                \n                    An action method for sending a message. It uses SendMessage action class to send messages.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SendMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { ContactService } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SendMessage } from './contact.actions';\n\n/** A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact' */\n@State({ name: 'contact' })\n@Injectable()\nexport class ContactState {\n  /** A variable to inject the ContactService */\n  private readonly contact = inject(ContactService);\n\n  /** An action method for sending a message. It uses SendMessage action class to send messages. */\n  @Action(SendMessage)\n  sendMessage(_ctx: StateContext, { message }: SendMessage): Observable {\n    return this.contact.sendMessage(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Download.html":{"url":"classes/Download.html","title":"class - Download","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Download\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Download file Action\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormatId)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of download.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DownloadSelectors.html":{"url":"classes/DownloadSelectors.html","title":"class - DownloadSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Available format selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                formats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        formats\n                        \n                    \n                \n            \n            \n                \n                    \n                    formats(state: DownloadModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Selectors available format for download selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                DownloadModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormat[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { DownloadFormat, DownloadModel } from './download.model';\n\n/**\n * Available format selectors\n */\nexport class DownloadSelectors {\n  /**\n   * Selectors available format for download selectors\n   * @param state\n   * @returns\n   */\n  @Selector()\n  static formats(state: DownloadModel): DownloadFormat[] {\n    const { formats, entries } = state;\n    const hasData = (format: DownloadFormat | undefined): format is DownloadFormat =>\n      !!(format && format.id in entries);\n    return Object.values(formats).filter(hasData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DownloadState.html":{"url":"injectables/DownloadState.html","title":"injectable - DownloadState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DownloadState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Download State Model used to convert\nfile from SVG file content to different\nformat and download to user.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEntry\n                            \n                            \n                                clearEntries\n                            \n                            \n                                download\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                registerFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEntry\n                        \n                    \n                \n            \n            \n                \naddEntry(ctx: DownloadContext, undefined: AddEntry)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddEntry)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:58\n                \n            \n\n\n            \n                \n                    Add entry into download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                AddEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearEntries\n                        \n                    \n                \n            \n            \n                \nclearEntries(ctx: DownloadContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearEntries)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:71\n                \n            \n\n\n            \n                \n                    Clear entires from download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        download\n                        \n                    \n                \n            \n            \n                \ndownload(ctx: DownloadContext, undefined: Download)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Download)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:85\n                \n            \n\n\n            \n                \n                    Actions download file in specified format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Download\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: DownloadContext)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/download/download.state.ts:34\n                \n            \n\n\n            \n                \n                    Ngxs on init and registry default format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFormat\n                        \n                    \n                \n            \n            \n                \nregisterFormat(ctx: DownloadContext, undefined: RegisterFormat)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RegisterFormat)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:44\n                \n            \n\n\n            \n                \n                    Actions register format in Download State\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                RegisterFormat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, NgxsOnInit, State } from '@ngxs/store';\nimport produce from 'immer';\nimport { Observable, tap } from 'rxjs';\n\nimport { PNG_FORMAT, SVG_FORMAT } from './builtin-formats';\nimport { AddEntry, ClearEntries, Download, RegisterFormat } from './download.action';\nimport { DownloadContext, DownloadFormatId, DownloadModel } from './download.model';\n\n/**\n * Download State Model used to convert\n * file from SVG file content to different\n * format and download to user.\n */\n@State({\n  name: 'download',\n  defaults: {\n    formats: {},\n    entries: {},\n  },\n})\n@Injectable()\nexport class DownloadState implements NgxsOnInit {\n  /**\n   * Http object inject for download state\n   */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Ngxs on init and registry default format\n   * @param ctx\n   */\n  ngxsOnInit(ctx: DownloadContext): void {\n    ctx.dispatch([new RegisterFormat(SVG_FORMAT), new RegisterFormat(PNG_FORMAT)]);\n  }\n\n  /**\n   * Actions register format in Download State\n   * @param ctx\n   * @param { format }\n   */\n  @Action(RegisterFormat)\n  registerFormat(ctx: DownloadContext, { format }: RegisterFormat): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.formats[format.id] = format;\n      })\n    );\n  }\n\n  /**\n   * Add entry into download state\n   * @param ctx\n   * @param { id, entry }\n   */\n  @Action(AddEntry)\n  addEntry(ctx: DownloadContext, { id, entry }: AddEntry): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries[id] = entry;\n      })\n    );\n  }\n\n  /**\n   * Clear entires from download state\n   * @param ctx\n   */\n  @Action(ClearEntries)\n  clearEntries(ctx: DownloadContext): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries = {};\n      })\n    );\n  }\n\n  /**\n   * Actions download file in specified format\n   * @param ctx\n   * @param action\n   */\n  @Action(Download)\n  download(ctx: DownloadContext, { format }: Download): Observable | void {\n    const { entries } = ctx.getState();\n    const entry = entries[format];\n    switch (entry?.type) {\n      case 'url': {\n        const filename = this.guessFilename(ctx, format, entry.url);\n        return this.downloadRemoteData(entry.url).pipe(tap((data) => this.downloadData(data, filename)));\n      }\n\n      case 'data': {\n        const filename = this.guessFilename(ctx, format, '');\n        this.downloadData(new Blob([entry.data]), filename);\n        break;\n      }\n\n      default:\n        throw new Error('Cannot download file without data');\n    }\n  }\n\n  /**\n   * Guess filename\n   * @param ctx\n   * @param id\n   * @param url\n   * @returns filename\n   */\n  private guessFilename(ctx: DownloadContext, id: DownloadFormatId, url: string): string {\n    const { formats } = ctx.getState();\n    const { extension = '' } = formats[id] ?? {};\n    const fakeBase = 'https://base.com';\n    const path = new URL(url, fakeBase).pathname;\n    const segments = path.split('/').filter((seg) => seg !== '');\n    const name = segments.length > 0 ? segments[segments.length - 1] : 'download';\n    const guess = name.includes('.') ? name : `${name}${extension}`;\n\n    return guess;\n  }\n\n  /**\n   * Download converted formatted file to browser\n   * @param blob\n   * @param fileName\n   */\n  private downloadData(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n    anchor.download = filename;\n    anchor.href = url;\n    anchor.click();\n    anchor.remove();\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Downloads and save -  method is used to direct fetch file\n   * if available on url without conversion\n   * @param fileUrl\n   * @param fileName\n   */\n  private downloadRemoteData(url: string): Observable {\n    return this.http.get(url, { responseType: 'blob' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraStateModule.html":{"url":"modules/HraStateModule.html","title":"module - HraStateModule","body":"\n                   \n\n\n\n\n    Modules\n    HraStateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/state.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Provides all states\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NGXS_PLUGINS, NgxsModule } from '@ngxs/store';\nimport { ActiveFtuState } from './active-ftu';\nimport { CellSummaryState } from './cell-summary';\nimport { ContactState } from './contact';\nimport { DownloadState } from './download';\nimport { IllustratorState } from './illustrator';\nimport { ScreenModeState } from './screen-mode';\nimport { SourceRefsState } from './source-refs';\nimport { StateAnalyticsPluginService } from './state-analytics-plugin';\nimport { TissueLibraryState } from './tissue-library';\n\n/** Provides all states */\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([\n      ActiveFtuState,\n      CellSummaryState,\n      ContactState,\n      DownloadState,\n      IllustratorState,\n      ScreenModeState,\n      SourceRefsState,\n      TissueLibraryState,\n    ]),\n  ],\n  providers: [\n    {\n      provide: NGXS_PLUGINS,\n      useExisting: StateAnalyticsPluginService,\n      multi: true,\n    },\n  ],\n})\nexport class HraStateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IllustratorModel.html":{"url":"interfaces/IllustratorModel.html","title":"interface - IllustratorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IllustratorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the Illustrator Model that contains the url, selected\nand mapping fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mapping\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapping:         IllustrationMappingItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of Illustrartor Items\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         IllustrationMappingItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected Illustrator Item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Url\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Illustration URL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\nimport { ClearSelection, Load, Reset, SetSelection } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url;\n  /** Selected Illustrator Item */\n  selected?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(tap((result) => patchState({ ...result, selected: undefined })));\n  }\n\n  /**\n   * Sets the current selection to the state\n   */\n  @Action(SetSelection)\n  setSelection({ patchState }: Context, { selected }: SetSelection): void {\n    patchState({ selected });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selected: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IllustratorSelectors.html":{"url":"classes/IllustratorSelectors.html","title":"class - IllustratorSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IllustratorSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for Medical Illustrators\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapping\n                            \n                            \n                                    Static\n                                selected\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapping(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:29\n                \n            \n\n\n            \n                \n                    Returns the current mapping of the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selected\n                        \n                    \n                \n            \n            \n                \n                    \n                    selected(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:21\n                \n            \n\n\n            \n                \n                    Returns the selected model of the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :      | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:13\n                \n            \n\n\n            \n                \n                    Returns the url for the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Url | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { IllustratorModel, IllustratorState } from './illustrator.state';\n\n/**\n * Selectors for Medical Illustrators\n */\nexport class IllustratorSelectors {\n  /**\n   * Returns the url for the illustrator\n   */\n  @Selector([IllustratorState])\n  static url({ url }: IllustratorModel): Url | undefined {\n    return url;\n  }\n\n  /**\n   * Returns the selected model of the illustrator\n   */\n  @Selector([IllustratorState])\n  static selected({ selected }: IllustratorModel): unknown | undefined {\n    return selected;\n  }\n\n  /**\n   * Returns the current mapping of the illustrator\n   */\n  @Selector([IllustratorState])\n  static mapping({ mapping }: IllustratorModel): IllustrationMappingItem[] {\n    return mapping;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IllustratorState.html":{"url":"injectables/IllustratorState.html","title":"injectable - IllustratorState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IllustratorState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling medical illustrators\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSelection\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                            \n                                setSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearSelection)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:63\n                \n            \n\n\n            \n                \n                    Clears the current selection from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:44\n                \n            \n\n\n            \n                \n                    Loads the current state with the url and mapping.\nThe url and mapping are forked together using forkJoin.\nIt also cancels any uncompleted actions to the state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:71\n                \n            \n\n\n            \n                \n                    Resets the mapping for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelection\n                        \n                    \n                \n            \n            \n                \nsetSelection(undefined: Context, undefined: SetSelection)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetSelection)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:55\n                \n            \n\n\n            \n                \n                    Sets the current selection to the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetSelection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\nimport { ClearSelection, Load, Reset, SetSelection } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url;\n  /** Selected Illustrator Item */\n  selected?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(tap((result) => patchState({ ...result, selected: undefined })));\n  }\n\n  /**\n   * Sets the current selection to the state\n   */\n  @Action(SetSelection)\n  setSelection({ patchState }: Context, { selected }: SetSelection): void {\n    patchState({ selected });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selected: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load.html":{"url":"classes/Load.html","title":"class - Load","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/active-ftu/active-ftu.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Creates an instance of set iri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-1.html":{"url":"classes/Load-1.html","title":"class - Load-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                loads the given Iri to the state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cell-summary/cell-summary.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-2.html":{"url":"classes/Load-2.html","title":"class - Load-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state\n */\nexport class SetSelection extends Action('Set Selection') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selected: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-3.html":{"url":"classes/Load-3.html","title":"class - Load-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to load the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-refs/source-refs.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-4.html":{"url":"classes/Load-4.html","title":"class - Load-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                action of loading tissue data into the TissueLibrary state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** action of loading tissue data into the TissueLibrary state */\nexport class Load extends Action('[TissueLibrary] Load Tissue Data') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterFormat.html":{"url":"classes/RegisterFormat.html","title":"class - RegisterFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Register format into state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormat)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:10\n                            \n                        \n\n                \n                    \n                            Creates an instance of register format.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormat\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-1.html":{"url":"classes/Reset-1.html","title":"class - Reset-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-2.html":{"url":"classes/Reset-2.html","title":"class - Reset-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state\n */\nexport class SetSelection extends Action('Set Selection') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selected: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-3.html":{"url":"classes/Reset-3.html","title":"class - Reset-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScreenModeModel.html":{"url":"interfaces/ScreenModeModel.html","title":"interface - ScreenModeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScreenModeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isFullScreen\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isFullScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFullScreen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether in fullscreen\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ScreenModeModel {\n  /** Whether in fullscreen */\n  isFullScreen: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScreenModeSelectors.html":{"url":"classes/ScreenModeSelectors.html","title":"class - ScreenModeSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScreenModeSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isFullScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFullScreen\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFullScreen(state: ScreenModeModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ScreenModeState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.selectors.ts:15\n                \n            \n\n\n            \n                \n                    Selectors screen mode selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ScreenModeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if full screen\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { ScreenModeModel } from './screen-mode.model';\nimport { ScreenModeState } from './screen-mode.state';\n\n/**\n * Screen mode selectors\n */\nexport class ScreenModeSelectors {\n  /**\n   * Selectors screen mode selectors\n   * @param state\n   * @returns true if full screen\n   */\n  @Selector([ScreenModeState])\n  static isFullScreen(state: ScreenModeModel): boolean {\n    return state.isFullScreen;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenModeState.html":{"url":"injectables/ScreenModeState.html","title":"injectable - ScreenModeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenModeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State storing the screen mode\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(undefined: StateContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.state.ts:22\n                \n            \n\n\n            \n                \n                    Updates the screen mode\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport produce from 'immer';\nimport { Set } from './screen-mode.actions';\nimport { ScreenModeModel } from './screen-mode.model';\n\n/** State storing the screen mode */\n@State({\n  name: 'screenmode',\n  defaults: {\n    isFullScreen: false,\n  },\n})\n@Injectable()\nexport class ScreenModeState {\n  /**\n   * Updates the screen mode\n   * @param ctx State context\n   * @param action Action with new mode\n   */\n  @Action(Set)\n  set({ setState }: StateContext, { isFullScreen }: Set): void {\n    setState(\n      produce((draft: ScreenModeModel) => {\n        draft.isFullScreen = isFullScreen;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessage.html":{"url":"classes/SendMessage.html","title":"class - SendMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                A class which sends individual messages submitted by user.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: ContactMessage)\n                    \n                \n                        \n                            \n                                Defined in src/lib/contact/contact.actions.ts:5\n                            \n                        \n\n                \n                    \n                            A constructor which initializes the message of type ContactMessage interface.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    ContactMessage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { ContactMessage } from '@hra-ui/services';\n\n/** A class which sends individual messages submitted by user. */\nexport class SendMessage extends Action('[Contact] Send Message') {\n  /** A constructor which initializes the message of type ContactMessage interface. */\n  constructor(readonly message: ContactMessage) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Update the screen mode\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(isFullScreen: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/screen-mode/screen-mode.actions.ts:4\n                            \n                        \n\n                \n                    \n                            Creates an instance of Set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isFullScreen\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the mode is fullscreen\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** Update the screen mode */\nexport class Set extends Action('[Screenmode] Set Screenmode') {\n  /**\n   * Creates an instance of Set\n   * @param isFullScreen Whether the mode is fullscreen\n   */\n  constructor(readonly isFullScreen: boolean) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSelection.html":{"url":"classes/SetSelection.html","title":"class - SetSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the selection for the Item in the current state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(selected: IllustrationMappingItem)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selected\n                                                  \n                                                        \n                                                                        IllustrationMappingItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state\n */\nexport class SetSelection extends Action('Set Selection') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selected: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceRefsSelectors.html":{"url":"classes/SourceRefsSelectors.html","title":"class - SourceRefsSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceRefsSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for SourceRefState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sourceReferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    sourceReferences(refs: SourceReference[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['SourceRefsState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.selectors.ts:9\n                \n            \n\n\n            \n                \n                    returns the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refs\n                                    \n                                            SourceReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SourceReference[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceReference } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { SourceRefsState } from './source-refs.state';\n\n/** Selectors for SourceRefState */\nexport class SourceRefsSelectors {\n  /** returns the source references */\n  @Selector([SourceRefsState])\n  static sourceReferences(refs: SourceReference[]): SourceReference[] {\n    return refs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SourceRefsState.html":{"url":"injectables/SourceRefsState.html","title":"injectable - SourceRefsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SourceRefsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle the source references\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the current state with the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:35\n                \n            \n\n\n            \n                \n                    Resets the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, SourceReference } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load, Reset } from './source-refs.actions';\n\ntype Context = StateContext;\n\n/**\n * State to handle the source references\n */\n@State({\n  name: 'sourceReferences',\n  defaults: [],\n})\n@Injectable()\nexport class SourceRefsState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the source references\n   */\n  @Action(Load)\n  load({ setState }: Context, { iri }: Load): Observable {\n    return this.dataService.getSourceReferences(iri).pipe(tap(setState));\n  }\n\n  /**\n   * Resets the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState([]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateAnalyticsPluginService.html":{"url":"injectables/StateAnalyticsPluginService.html","title":"injectable - StateAnalyticsPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateAnalyticsPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Google Analytics Plugin Injectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(state, action, next: NgxsNextPluginFn)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state-analytics-plugin/state-analytics-plugin.service.ts:51\n                \n            \n\n\n            \n                \n                    Handles logger plugin\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent state of the store with type unknown.\n\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent action being dispatched with type unknown type.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            NgxsNextPluginFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnext plugin to handle the action\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nnext plugin with the current state and action.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, InjectionToken, Provider } from '@angular/core';\nimport { getActionTypeFromInstance, NgxsNextPluginFn, NgxsPlugin, NGXS_PLUGINS } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { DEFAULT_LOGGABLE_ACTIONS } from './default-loggable-actions';\n\n/** Primitive types */\nconst PRIMITIVE_TYPES = ['bigint', 'boolean', 'number', 'string'];\n\n/**\n * Determines whether primitive is\n * @param value is string - used to check the input value from serialize funtion\n * @returns type of value - boolean/number/string/null/bigint/undefined\n */\nfunction isPrimitive(value: unknown): value is bigint | boolean | number | string | null | undefined {\n  return value == null || PRIMITIVE_TYPES.includes(typeof value);\n}\n\n/**\n * Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n */\nexport const LOGGABLE_ACTIONS = new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n});\n\n/**\n * Google Analytics Plugin Injectable\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateAnalyticsPluginService implements NgxsPlugin {\n  /**\n   * Injects the service for state analytics plugin.\n   */\n  private readonly ga = inject(GoogleAnalyticsService);\n\n  /**\n   * Plugin service for logging state analytics\n   * Setting loggable action types from LOGGABLE_ACTIONS dependency.\n   */\n  private readonly loggableTypes = new Set(inject(LOGGABLE_ACTIONS).map(getActionTypeFromInstance));\n\n  /**\n   * Handles logger plugin\n   * @param state -  Current state of the store with type unknown.\n   * @param action - Current action being dispatched with type unknown type.\n   * @param next - next plugin to handle the action\n   * @returns - next plugin with the current state and action.\n   */\n  handle(state: unknown, action: unknown, next: NgxsNextPluginFn) {\n    this.logAction(action);\n    return next(state, action);\n  }\n\n  /**\n   * Logs action trigerred to google analytics event\n   * @param action - Current action being dispatched with type unknown type.\n   * @returns void\n   */\n  private logAction(action: unknown): void {\n    const type = getActionTypeFromInstance(action);\n    if (type && this.loggableTypes.has(type)) {\n      const payload = JSON.stringify(action, this.serialize);\n      this.ga.event(type, 'action_log', payload);\n    }\n  }\n\n  /**\n   * Serializes action data\n   * @param key - key with type unknown that needs to be serialized\n   * @param value - value with type unknown that needs to be serialized\n   * @returns serialized value\n   */\n  private serialize(this: void, key: unknown, value: unknown): unknown {\n    if (key === '' && typeof value === 'object') {\n      return { ...value, type: undefined };\n    } else if (isPrimitive(value) || (Array.isArray(value) && value.every(isPrimitive))) {\n      return value;\n    }\n\n    return undefined;\n  }\n}\n\n/**\n * State Login Provider\n */\nexport const STATE_LOGGER_PROVIDER: Provider = {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TissueLibrarySelectors.html":{"url":"classes/TissueLibrarySelectors.html","title":"class - TissueLibrarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TissueLibrarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selector class for retreiving data from the TissueLibraryState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        tissues\n                        \n                    \n                \n            \n            \n                \n                    \n                    tissues(state: TissueLibraryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['TissueLibraryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Gets the tissue data from the TissueLibrary object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                TissueLibraryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current state of the TissueLibraryState.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        node data of the type of TisseData.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri, Tissue } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { TissueLibraryModel } from './tissue-library.model';\nimport { TissueLibraryState } from './tissue-library.state';\n\n/** Selector class for retreiving data from the TissueLibraryState */\nexport class TissueLibrarySelectors {\n  /**\n   * Gets the tissue data from the TissueLibrary object.\n   * @param state the current state of the TissueLibraryState.\n   * @returns node data of the type of TisseData.\n   */\n  @Selector([TissueLibraryState])\n  static tissues(state: TissueLibraryModel): Record {\n    return state.nodes as Record;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryState.html":{"url":"injectables/TissueLibraryState.html","title":"injectable - TissueLibraryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling tissue data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActive\n                        \n                    \n                \n            \n            \n                \nsetActive(ctx: TissueLibraryContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.state.ts:22\n                \n            \n\n\n            \n                \n                    Loads the tissue data into the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                TissueLibraryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The state context instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        data The tissue data to be added to the state\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { TissueLibraryService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load } from './tissue-library.actions';\nimport { TissueLibraryContext, TissueLibraryModel } from './tissue-library.model';\n\n/** State handling tissue data*/\n@State({\n  name: 'tissueLibrary',\n})\n@Injectable()\nexport class TissueLibraryState {\n  /** injects the TissueLibraryService into a private readonly property */\n  private readonly dataService = inject(TissueLibraryService);\n  /**\n   * Loads the tissue data into the current state\n   * @param ctx The state context instance\n   * @returns data The tissue data to be added to the state\n   */\n  @Action(Load)\n  setActive(ctx: TissueLibraryContext): Observable {\n    return this.dataService.getTissueLibrary().pipe(tap((data) => ctx.setState(data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            computeAggregate   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            createDownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            expandRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getColumnIndex   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getLabel   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getTotalCount   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            isPrimitive   (src/.../state-analytics-plugin.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        computeAggregate\n                        \n                    \n                \n            \n            \n                \ncomputeAggregate(summary: CellSummary)\n                \n            \n\n\n\n\n            \n                \n                    The computeAggregate function takes a summary object and performs aggregation operations on its properties\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    summary\n                                    \n                                            CellSummary\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandRow\n                        \n                    \n                \n            \n            \n                \nexpandRow(row: CellSummaryAggregateRow, length: number)\n                \n            \n\n\n\n\n            \n                \n                    This function expands the current row length with undefined if its length is\nless than the given length\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnIndex\n                        \n                    \n                \n            \n            \n                \ngetColumnIndex(indexById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the column if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    indexById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLabel\n                        \n                    \n                \n            \n            \n                \ngetLabel(items, id: string, what: string)\n                \n            \n\n\n\n\n            \n                \n                    This function retrieves the label of an item from an array based on its ID,\nand if not found, it returns a default string indicating the absence of a label for the specified item type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    what\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRow\n                        \n                    \n                \n            \n            \n                \ngetRow(rowById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the row if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregateRow\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalCount\n                        \n                    \n                \n            \n            \n                \ngetTotalCount(row: CellSummaryAggregateRow)\n                \n            \n\n\n\n\n            \n                \n                    This function calculates and returns the total count by iterating over a row array and summing\nup the count property of each object entry, while ignoring non-object entries, with an initial value of 0.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDownloadFormatId\n                        \n                    \n                \n            \n            \n                \ncreateDownloadFormatId(id: string)\n                \n            \n\n\n\n\n            \n                \n                    Creates download format id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormatId\n\n                    \n                    \n                        download format id\n\n                    \n                \n            \n        \n    \n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isPrimitive\n                        \n                    \n                \n            \n            \n                \nisPrimitive(value)\n                \n            \n\n\n\n\n            \n                \n                    Determines whether primitive is\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is string - used to check the input value from serialize funtion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :      | boolean | number | string | null | undefined\n\n                    \n                    \n                        type of value - boolean/number/string/null/bigint/undefined\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nstate\nThis library was generated with Nx.\nRunning unit tests\nRun nx test state to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraStateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellSummaryAggregate   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CellSummaryAggregateRow   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../active-ftu.state.ts)\n                        \n                        \n                            Context   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../illustrator.state.ts)\n                        \n                        \n                            Context   (src/.../source-refs.state.ts)\n                        \n                        \n                            DownloadContext   (src/.../download.model.ts)\n                        \n                        \n                            DownloadEntry   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormat   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            DownloadModel   (src/.../download.model.ts)\n                        \n                        \n                            TissueLibraryContext   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibraryModel   (src/.../tissue-library.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregate\n                \n            \n            \n                \n                    Type representing AGGREGATE having label, columns and rows\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregateRow\n                \n            \n            \n                \n                    Type representing a single AGGREGATE_ROW\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/active-ftu/active-ftu.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/illustrator/illustrator.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/source-refs/source-refs.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n    \n        \n            \n                \n                    \n                    DownloadContext\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadContext,\nwhich is a state context for the DownloadModel type\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadEntry\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadEntry,\nwhich is inferred from the type of the DOWNLOAD_ENTRY constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormat\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormat,\nwhich is inferred from the type of the DOWNLOAD_FORMAT constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormatId\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormatId,\nwhich is inferred from the type of the DOWNLOAD_FORMAT_ID constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadModel\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadModel,\nwhich is inferred from the type of the DOWNLOAD_MODEL constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    TissueLibraryContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibraryModel\n                \n            \n            \n                \n                    Type alias for the tissue data\n\n                \n            \n            \n                \n                        TissueLibrary\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            About   (src/.../link-ids.ts)\n                        \n                        \n                            Action   (src/.../active-ftu.actions.ts)\n                        \n                        \n                            Action   (src/.../cell-summary.actions.ts)\n                        \n                        \n                            Action   (src/.../download.action.ts)\n                        \n                        \n                            Action   (src/.../illustrator.actions.ts)\n                        \n                        \n                            Action   (src/.../source-refs.actions.ts)\n                        \n                        \n                            AGGREGATE   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_CELL   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_ROW   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AppTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            ContactAcknowledgement   (src/.../resource-ids.ts)\n                        \n                        \n                            DEFAULT_LOGGABLE_ACTIONS   (src/.../default-loggable-actions.ts)\n                        \n                        \n                            DOWNLOAD_ENTRY   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT_ID   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_MODEL   (src/.../download.model.ts)\n                        \n                        \n                            Embed   (src/.../link-ids.ts)\n                        \n                        \n                            ExploreFTU   (src/.../link-ids.ts)\n                        \n                        \n                            Gradient   (src/.../resource-types.ts)\n                        \n                        \n                            GradientLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            GradientLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            Illustration   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPage   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageDepthDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPagePartners   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageReadMore   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LOGGABLE_ACTIONS   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Metrics   (src/.../resource-ids.ts)\n                        \n                        \n                            Metrics   (src/.../resource-types.ts)\n                        \n                        \n                            MetricsLogo   (src/.../resource-ids.ts)\n                        \n                        \n                            MetricsTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            Png   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            PNG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                        \n                            Portal   (src/.../link-ids.ts)\n                        \n                        \n                            PRIMITIVE_TYPES   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            ProductLogoUrl   (src/.../resource-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../link-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            ScreenSizeNoticeContent   (src/.../resource-ids.ts)\n                        \n                        \n                            Size   (src/.../resource-types.ts)\n                        \n                        \n                            SizeLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            SizeLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            STATE_LOGGER_PROVIDER   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Svg   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            SVG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/link-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        About\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('About')\n                    \n                \n\n            \n                \n                    About Link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Embed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Embed')\n                    \n                \n\n            \n                \n                    LinkId for Embed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExploreFTU\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ExploreFTU')\n                    \n                \n\n            \n                \n                    LinkId for Explore FTU\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Illustration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Illustration')\n                    \n                \n\n            \n                \n                    LinkId for Illustration metadata\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPage')\n                    \n                \n\n            \n                \n                    Landing page id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPageReadMore')\n                    \n                \n\n            \n                \n                    LinkId for read more in landing page content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Portal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Portal')\n                    \n                \n\n            \n                \n                    LinkId for HRA Portal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title link id\n\n                \n            \n\n        \n    \n\n    src/lib/active-ftu/active-ftu.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('ActiveFtu')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('CellSummary')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Download')\n                    \n                \n\n            \n                \n                    Action Group for Download Action\n\n                \n            \n\n        \n    \n\n    src/lib/illustrator/illustrator.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Illustrator')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/source-refs/source-refs.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('SourceRefs')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AGGREGATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE is an object that contains the label, columns\nand rows\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  color: z.string(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE_CELL is an object that contains the color, size and\nthe data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional())\n                    \n                \n\n            \n                \n                    The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\na required string followed by an optional number\n\n                \n            \n\n        \n    \n\n    src/lib/resource-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('AppTitle')\n                    \n                \n\n            \n                \n                    App title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ContactAcknowledgement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ContactAcknowledgement')\n                    \n                \n\n            \n                \n                    Message to display after submitting contact form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegend')\n                    \n                \n\n            \n                \n                    Gradient legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Gradient legend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthDescription')\n                    \n                \n\n            \n                \n                    Lanading Page Depth Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthImg')\n                    \n                \n\n            \n                \n                    Landing Page Depth Img id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthMoreText')\n                    \n                \n\n            \n                \n                    Landing Page Depth More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthTitle')\n                    \n                \n\n            \n                \n                    Landing Page Depth Title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroDescription')\n                    \n                \n\n            \n                \n                    Landing Page Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroImg')\n                    \n                \n\n            \n                \n                    Landing Page Intro Image id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroMoreText')\n                    \n                \n\n            \n                \n                    Landing Page More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPagePartners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroPartners')\n                    \n                \n\n            \n                \n                    Landing Page Partners id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroTitle')\n                    \n                \n\n            \n                \n                    Landing Page Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('Metrics')\n                    \n                \n\n            \n                \n                    metrics id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsLogo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsLogo')\n                    \n                \n\n            \n                \n                    Metrics Logo id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsTitle')\n                    \n                \n\n            \n                \n                    Metrics Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductLogoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductLogoUrl')\n                    \n                \n\n            \n                \n                    Product logo url id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ScreenSizeNoticeContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ScreenSizeNoticeContent')\n                    \n                \n\n            \n                \n                    Screen size notice content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegend')\n                    \n                \n\n            \n                \n                    Size legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Size legend\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/default-loggable-actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ContactActions.SendMessage,\n  DownloadActions.Download,\n  LinkRegistryActions.Navigate,\n]\n                    \n                \n\n            \n                \n                    Default loggable actions\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.discriminatedUnion('type', [\n  z.object({ type: z.literal('url'), url: z.string() }),\n  z.object({ type: z.literal('data'), data: z.string() }),\n])\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_ENTRY,\nwhich is a discriminated union of two objects with different properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    id: DOWNLOAD_FORMAT_ID,\n    label: z.string(),\n    extension: z.string(),\n  })\n  .partial({ extension: true })\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT,\nwhich is an object with id, label, and extension properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .transform((id) => `DownloadFormatId:'${id}'`)\n  .brand('DownloadFormatId')\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT_ID,\nwhich is a string that is transformed into a branded string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_MODEL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  formats: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_FORMAT),\n  entries: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_ENTRY),\n})\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_MODEL,\nwhich is an object with formats and entries properties\n\n                \n            \n\n        \n    \n\n    src/lib/resource-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Gradient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('gradient', payload())\n                    \n                \n\n            \n                \n                    Gradient legend resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType(\n  'metrics',\n  payload()\n)\n                    \n                \n\n            \n                \n                    Metrics resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Size\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('size', payload())\n                    \n                \n\n            \n                \n                    Size legend resource\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n})\n                    \n                \n\n            \n                \n                    Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRIMITIVE_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['bigint', 'boolean', 'number', 'string']\n                    \n                \n\n            \n                \n                    Primitive types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATE_LOGGER_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n}\n                    \n                \n\n            \n                \n                    State Login Provider\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Png\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('png')\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Svg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('svg')\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PNG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Png,\n  label: 'Download Png',\n  extension: '.png',\n}\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Svg,\n  label: 'Download Svg',\n  extension: '.svg',\n}\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
