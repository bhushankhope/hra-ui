var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActiveFtuModel.html",[0,1.381,1,2.609]],["body/interfaces/ActiveFtuModel.html",[0,1.78,1,3.722,2,1.62,3,0.114,4,0.257,5,0.131,6,1.33,7,1.33,8,2.094,9,0.098,10,0.574,11,1.973,12,0.445,13,1.28,14,0.423,15,0.02,16,1.247,17,2.218,18,0.364,19,1.046,20,1.006,21,0.299,22,0.321,23,0.627,24,0.356,25,1.973,26,0.705,27,2.78,28,1.415,29,1.33,30,2.351,31,2.242,32,2.673,33,2.673,34,2.351,35,2.1,36,2.673,37,2.351,38,2.242,39,3.093,40,1.877,41,0.671,42,1.124,43,2.673,44,1.973,45,2.351,46,2.351,47,2.242,48,1.006,49,2.351,50,2.351,51,0.574,52,1.33,53,3.107,54,2.351,55,0.194,56,2.475,57,1.902,58,1.33,59,0.509,60,2.351,61,1.415,62,2.351,63,0.186,64,1.62,65,0.779,66,0.741,67,2.317,68,0.741,69,2.317,70,1.415,71,1.748,72,1.253,73,2.094,74,3.422,75,4.378,76,2.351,77,1.379,78,3.855,79,2.351,80,2.351,81,2.351,82,2.351,83,2.351,84,2.351,85,2.094,86,2.351,87,2.351,88,1.415,89,2.094,90,2.351,91,2.351,92,0.773,93,2.351,94,2.351,95,2.351,96,2.351,97,1.62,98,2.351,99,2.351,100,2.094,101,2.351,102,2.351,103,2.351,104,2.351,105,1.006,106,1.902,107,1.62,108,2.351,109,2.351,110,2.351,111,2.351,112,0.011,113,0.011]],["title/classes/ActiveFtuSelectors.html",[63,0.255,114,3.227]],["body/classes/ActiveFtuSelectors.html",[1,4.938,3,0.167,4,0.192,5,0.192,6,2.893,7,2.893,9,0.144,10,0.84,12,0.581,13,1.315,14,0.464,15,0.02,18,0.322,21,0.295,22,0.47,26,1.031,44,1.946,55,0.192,59,0.665,63,0.272,64,3.525,68,1.438,77,1.512,105,2.189,112,0.014,113,0.014,114,4.561,115,0.604,116,4.013,117,3.143,118,1.672,119,3.294,120,5.966,121,4.013,122,1.853,123,5.319,124,0.8,125,4.013,126,4.061,127,0.754,128,4.013,129,4.013,130,5.319,131,1.512,132,2.744,133,2.211,134,4.013,135,5.319]],["title/injectables/ActiveFtuState.html",[19,0.967,64,2.223]],["body/injectables/ActiveFtuState.html",[0,1.3,1,2.457,3,0.095,4,0.268,5,0.109,6,2.566,7,2.566,8,1.745,9,0.082,10,0.478,12,0.534,13,1.209,14,0.488,15,0.02,16,1.115,17,2.047,18,0.348,19,0.91,20,0.838,21,0.26,22,0.267,23,0.677,24,0.359,25,1.718,26,0.587,27,3.005,28,1.179,29,1.108,30,1.959,31,1.952,32,2.915,33,2.915,34,1.959,35,1.828,36,2.915,37,1.959,38,1.952,39,3.372,40,2.165,41,0.775,42,1.264,43,3.217,44,2.104,45,1.959,46,1.959,47,1.952,48,0.838,49,1.959,50,1.959,51,0.478,52,1.108,53,3.313,54,1.959,55,0.169,56,2.863,57,2.457,58,1.718,59,0.7,60,1.959,61,1.179,62,1.959,63,0.155,64,2.093,65,1.007,66,0.618,67,2.283,68,1.43,69,2.605,70,1.828,71,2.258,72,1.619,73,1.745,74,3.116,75,4.04,76,1.959,77,1.233,78,3.661,79,1.959,80,1.959,81,1.959,82,1.959,83,1.959,84,1.959,85,2.705,86,3.038,87,3.038,88,1.828,89,2.705,90,3.038,91,3.038,92,0.692,93,1.959,94,1.959,95,1.959,96,1.959,97,1.35,98,1.959,99,1.959,100,1.745,101,1.959,102,1.959,103,3.038,104,1.959,105,1.592,106,2.457,107,2.093,108,1.959,109,1.959,110,1.959,111,1.959,112,0.009,113,0.009,118,1.114,122,1.703,124,0.735,127,0.693,136,1.044,137,2.285,138,2.285,139,2.285,140,1.584,141,2.285,142,1.584,143,2.285,144,2.285,145,2.285]],["title/classes/AddEntry.html",[63,0.255,146,2.073]],["body/classes/AddEntry.html",[3,0.144,4,0.165,5,0.229,9,0.124,12,0.377,13,1.119,14,0.301,15,0.02,18,0.298,21,0.353,22,0.404,23,0.71,24,0.438,40,1.335,41,0.69,48,2.444,51,0.723,55,0.3,59,0.432,63,0.425,66,1.492,88,2.477,92,0.55,112,0.012,113,0.012,115,0.519,124,0.519,127,0.489,146,2.645,147,2.039,148,3.67,149,1.923,150,3.451,151,3.236,152,3.526,153,3.451,154,3.06,155,2.477,156,0.981,157,2.477,158,1.901,159,2.039,160,2.039,161,2.836,162,3.149,163,1.901,164,1.456,165,2.2,166,2.254,167,1.96,168,1.458,169,1.458,170,2.677,171,1.234,172,2.072,173,0.981,174,2.2,175,2.039,176,2.2,177,2.2,178,1.335,179,1.901,180,1.266,181,2.2,182,2.2]],["title/interfaces/CellSummaryModel.html",[0,1.381,183,2.609]],["body/interfaces/CellSummaryModel.html",[0,2.051,2,2.089,3,0.148,4,0.169,5,0.169,9,0.127,10,0.74,11,2.367,12,0.386,14,0.585,15,0.02,18,0.302,21,0.26,22,0.414,25,2.367,26,0.909,32,3.604,33,3.604,55,0.288,56,1.526,92,0.891,112,0.013,113,0.013,171,1.437,183,3.385,184,1.714,185,1.714,186,2.699,187,2.884,188,4.794,189,5.217,190,4.881,191,3.865,192,4.181,193,4.181,194,4.181,195,3.535,196,3.031,197,3.031,198,4.186,199,3.031,200,4.269,201,2.699,202,4.186,203,3.111,204,3.877,205,4.269,206,4.269,207,4.186,208,2.519,209,3.385,210,4.186,211,2.689,212,4.186,213,4.186,214,3.031,215,3.031,216,3.031,217,3.031,218,3.031,219,3.031,220,1.947,221,3.031,222,2.451,223,3.031,224,3.031,225,3.031,226,3.031,227,3.031]],["title/classes/CellSummarySelectors.html",[63,0.255,228,3.227]],["body/classes/CellSummarySelectors.html",[3,0.167,4,0.192,5,0.192,9,0.144,10,0.84,12,0.581,14,0.464,15,0.02,18,0.343,21,0.295,22,0.47,24,0.517,26,1.031,31,2.211,32,2.93,55,0.192,59,0.665,63,0.272,68,1.438,77,1.512,112,0.014,113,0.014,115,0.604,117,3.143,118,1.672,119,3.294,122,1.853,124,0.8,127,0.754,133,2.211,171,1.632,183,4.805,184,2.893,185,2.893,189,4.85,191,3.143,192,4.137,194,4.583,203,2.744,228,4.561,229,4.013,230,5.319,231,5.319,232,4.013,233,5.319,234,4.013,235,3.441,236,4.013,237,5.319,238,4.013,239,4.013]],["title/injectables/CellSummaryState.html",[19,0.967,31,2.073]],["body/injectables/CellSummaryState.html",[3,0.12,4,0.138,5,0.138,9,0.103,10,0.604,12,0.546,13,0.891,14,0.436,15,0.02,16,1.572,17,1.116,18,0.341,19,1.086,20,1.059,21,0.212,22,0.338,23,0.546,24,0.494,26,0.742,27,2.424,28,1.489,29,1.399,31,2.327,32,3.482,33,3.031,41,0.81,42,1.152,55,0.138,56,2.9,59,0.688,61,1.489,63,0.196,65,1.201,68,1.351,69,2.374,70,2.18,71,2.693,72,1.931,73,3.226,74,3.9,75,2.203,77,0.82,85,3.226,92,0.674,100,2.203,105,1.059,107,2.496,112,0.011,113,0.011,118,1.328,122,1.741,124,0.752,127,0.708,136,1.319,140,2.001,142,2.001,171,1.665,172,1.245,178,1.116,183,2.001,184,2.668,185,2.668,189,4.671,191,3.734,194,2.001,203,2.18,235,2.474,240,2.886,241,2.93,242,3.732,243,2.886,244,4.225,245,2.886,246,4.225,247,2.886,248,4.225,249,3.226,250,3.226,251,2.886,252,1.634,253,1.489,254,1.705,255,4.225,256,2.886,257,2.474,258,2.886,259,1.489,260,1.705,261,1.705,262,2.886,263,2.886,264,2.886]],["title/classes/Clear.html",[40,1.456,63,0.255]],["body/classes/Clear.html",[3,0.174,4,0.2,5,0.2,6,2.027,7,2.027,9,0.15,13,1.309,15,0.02,17,1.617,18,0.295,21,0.401,22,0.489,23,0.665,24,0.307,40,2.114,41,0.523,42,0.875,43,2.303,44,2.027,51,0.875,52,2.65,55,0.308,63,0.454,65,1.188,66,1.477,67,2.358,92,0.667,112,0.014,113,0.014,115,0.629,131,1.73,156,1.188,164,1.499,166,2.231,167,2.231,168,1.335,169,1.335,173,1.188,180,1.534,252,1.617,265,2.665,266,2.358,267,1.456,268,1.383,269,2.665,270,2.027,271,1.534]],["title/classes/ClearEntries.html",[63,0.255,179,2.073]],["body/classes/ClearEntries.html",[3,0.15,4,0.172,5,0.236,9,0.129,13,1.136,15,0.02,18,0.305,21,0.363,22,0.421,23,0.719,24,0.446,40,1.912,41,0.706,48,2.472,51,0.753,55,0.304,63,0.432,66,1.525,88,1.857,92,0.574,112,0.013,113,0.013,115,0.541,146,1.982,147,2.126,148,3.109,149,1.253,151,2.912,152,2.92,154,2.294,155,1.857,156,1.023,157,2.55,158,1.982,159,2.126,160,2.126,161,2.92,162,3.19,163,1.982,164,1.478,165,2.294,166,2.304,167,2.018,168,1.484,169,1.484,170,2.946,171,1.27,172,2.133,173,1.023,174,2.294,175,2.126,176,2.294,177,2.294,178,1.392,179,2.722,180,1.32,181,2.294,182,2.294]],["title/classes/ClearSelection.html",[63,0.255,272,1.942]],["body/classes/ClearSelection.html",[3,0.162,4,0.186,5,0.186,9,0.139,13,1.166,15,0.02,16,1.68,18,0.281,21,0.383,22,0.455,23,0.569,24,0.494,41,0.486,42,0.814,51,0.814,55,0.313,58,3.333,63,0.457,65,1.105,92,0.62,112,0.014,113,0.014,115,0.585,131,1.105,156,1.105,164,1.518,168,1.434,169,1.434,173,1.105,180,1.426,252,1.504,266,2.247,267,1.354,268,1.286,270,2.525,271,1.426,272,2.686,273,2.296,274,3.029,275,2.296,276,1.776,277,2.868,278,3.236,279,2.686,280,2.005,281,3.076,282,2.686,283,2.005,284,2.686,285,2.478,286,2.005]],["title/classes/ComputeAggregates.html",[63,0.255,242,2.399]],["body/classes/ComputeAggregates.html",[3,0.186,4,0.213,5,0.213,9,0.159,13,1.218,15,0.02,16,1.143,18,0.307,21,0.418,22,0.521,23,0.685,24,0.485,41,0.556,42,1.191,51,0.931,55,0.3,63,0.448,65,1.264,92,0.709,112,0.015,113,0.015,115,0.669,131,1.264,156,1.264,164,1.456,168,1.087,169,1.087,171,1.462,173,1.264,184,2.157,185,2.157,191,2.628,203,2.934,242,3.625,267,1.549,268,1.472,271,1.632,276,2.033,287,3.084,288,4.343,289,4.347,290,3.944,291,3.084,292,3.396]],["title/injectables/ContactState.html",[19,0.967,293,2.609]],["body/injectables/ContactState.html",[3,0.159,4,0.183,5,0.183,9,0.137,10,0.8,12,0.418,14,0.333,15,0.02,18,0.351,19,1.601,20,1.402,21,0.281,22,0.447,23,0.711,24,0.492,25,3.02,26,0.982,27,2.823,29,1.853,55,0.183,59,0.779,63,0.441,68,1.033,69,2.222,77,1.086,105,1.402,112,0.013,113,0.013,118,1.619,122,1.331,124,0.575,127,0.542,136,1.747,178,1.479,253,2.656,259,1.972,293,4.319,294,3.822,295,5.148,296,4.644,297,5.148,298,6.229,299,5.341,300,3.931,301,6.229,302,5.314,303,5.148,304,5.148,305,3.822,306,3.57,307,4.445,308,5.148,309,4.414,310,3.822,311,3.822,312,3.822,313,3.822,314,3.822]],["title/classes/Download.html",[48,1.381,63,0.255]],["body/classes/Download.html",[3,0.146,4,0.167,5,0.265,9,0.125,12,0.381,13,1.123,14,0.304,15,0.02,18,0.3,21,0.355,22,0.408,23,0.73,24,0.408,40,1.35,41,0.694,48,2.537,51,0.731,55,0.301,59,0.436,63,0.427,66,1.501,88,1.8,92,0.556,112,0.013,113,0.013,115,0.525,124,0.525,127,0.494,146,1.922,147,2.061,148,3.059,149,1.685,151,3.249,152,2.858,154,2.224,155,1.8,156,0.992,157,2.496,158,1.922,159,2.061,160,2.061,161,2.858,162,3.24,163,1.922,164,1.462,165,2.224,166,2.448,167,2.267,168,1.465,169,1.465,170,2.692,171,1.243,172,2.088,173,0.992,174,2.224,175,2.061,176,2.224,177,2.224,178,1.35,179,1.922,180,1.28,181,2.224,182,2.224,315,2.992,316,3.489]],["title/classes/DownloadSelectors.html",[63,0.255,317,3.227]],["body/classes/DownloadSelectors.html",[3,0.176,4,0.202,5,0.202,9,0.151,10,0.885,12,0.462,14,0.369,15,0.02,18,0.33,24,0.449,26,1.086,47,2.328,48,2.019,55,0.202,59,0.528,63,0.287,66,1.142,68,1.487,77,1.201,92,0.877,105,1.55,112,0.014,113,0.014,115,0.635,117,4.07,118,1.73,119,2.967,122,1.472,124,0.635,127,0.599,133,2.328,157,3.467,158,2.328,162,3.402,170,2.668,317,4.717,318,4.225,319,4.948,320,4.671,321,5.502,322,4.948,323,4.225,324,4.225,325,4.225,326,4.225,327,4.225,328,4.225,329,4.225]],["title/injectables/DownloadState.html",[19,0.967,47,2.073]],["body/injectables/DownloadState.html",[3,0.068,4,0.078,5,0.273,9,0.097,10,0.344,12,0.527,13,0.799,14,0.446,15,0.02,18,0.299,19,0.698,20,0.602,21,0.121,22,0.192,23,0.442,24,0.44,26,0.422,27,2.34,28,0.847,29,0.796,40,1.051,41,0.603,47,1.497,48,2.497,55,0.078,56,1.173,59,0.693,61,0.847,63,0.111,66,1.741,67,2.392,68,1.444,69,2.465,70,1.402,77,1.149,78,2.054,88,2.085,89,2.074,92,0.988,97,0.97,105,1.483,112,0.007,113,0.007,118,0.854,122,1.56,124,0.726,127,0.684,136,0.75,146,2.658,148,2.658,151,1.402,155,2.085,158,0.904,161,1.605,162,3.05,163,2.658,170,1.317,171,1.24,172,1.5,175,0.97,178,1.051,179,1.915,187,1.605,208,0.847,220,2.226,253,1.402,254,0.97,259,2.31,260,0.97,261,0.97,306,1.138,319,1.253,320,2.654,322,1.253,330,1.641,331,2.654,332,2.717,333,2.329,334,2.329,335,2.329,336,2.329,337,4.041,338,2.717,339,5.68,340,2.717,341,1.641,342,4.229,343,2.717,344,2.717,345,1.641,346,2.717,347,2.717,348,2.717,349,1.641,350,2.387,351,2.329,352,2.717,353,1.641,354,2.717,355,2.717,356,1.641,357,2.717,358,2.717,359,2.41,360,2.717,361,2.717,362,1.641,363,1.641,364,1.641,365,1.407,366,1.407,367,1.407,368,1.407,369,1.641,370,1.641,371,1.407,372,1.407,373,2.717,374,1.641,375,1.641,376,1.641,377,1.641,378,4.041,379,3.465,380,1.641,381,1.641,382,1.641,383,2.717,384,1.138,385,1.641,386,1.641,387,2.717,388,1.641,389,1.641,390,1.641,391,2.717,392,5.711,393,2.717,394,1.641,395,1.641,396,1.641,397,1.641,398,1.641,399,1.641,400,1.641,401,1.641,402,2.717,403,3.476,404,1.641,405,1.407,406,1.641,407,1.641,408,1.641,409,1.641,410,1.641,411,1.641,412,1.641,413,1.641,414,1.641,415,1.641,416,1.407,417,1.641,418,1.641,419,1.641,420,1.641,421,1.641,422,1.641,423,3.476,424,1.641,425,1.641,426,1.641,427,1.641,428,1.641,429,1.641,430,1.641,431,1.641,432,1.641,433,1.641,434,1.641,435,1.641,436,1.641,437,1.641,438,1.641,439,1.641,440,1.641,441,1.641,442,1.641]],["title/modules/HraStateModule.html",[443,2.609,444,2.609]],["body/modules/HraStateModule.html",[0,1.767,3,0.145,4,0.23,5,0.166,9,0.124,12,0.379,14,0.302,15,0.02,17,1.341,18,0.385,20,1.272,21,0.255,24,0.354,26,0.891,31,2.653,32,1.91,33,1.91,35,2.485,36,1.91,38,2.653,39,2.21,44,1.681,47,2.653,48,1.272,55,0.23,59,0.433,63,0.235,64,2.845,68,1.496,72,1.584,77,0.985,92,0.553,106,3.339,112,0.013,113,0.013,118,1.09,119,2.899,124,0.521,127,0.491,208,2.485,220,2.653,293,3.339,296,2.404,306,3.339,443,4.356,444,3.837,445,2.647,446,2.972,447,3.339,448,3.466,449,4.129,450,4.565,451,3.466,452,4.129,453,4.129,454,5.127,455,4.129,456,4.745,457,4.745,458,2.972,459,3.339,460,2.972,461,3.069,462,1.788,463,1.91,464,3.069,465,3.527,466,2.647,467,3.069,468,2.048,469,2.647,470,4.129,471,2.647,472,3.677,473,2.972,474,2.404,475,2.972,476,2.972,477,2.972,478,2.404,479,2.404,480,2.404,481,4.129,482,2.972]],["title/interfaces/HraStateModuleOptions.html",[0,1.381,450,2.873]],["body/interfaces/HraStateModuleOptions.html",[0,2.049,2,2.084,3,0.147,4,0.233,5,0.169,9,0.126,10,0.739,11,2.363,14,0.308,15,0.02,17,1.365,18,0.386,20,1.294,21,0.358,24,0.41,26,0.907,31,2.685,32,1.943,33,1.943,35,2.515,36,1.943,38,2.685,39,2.248,44,1.71,47,2.685,48,1.294,55,0.233,63,0.239,64,2.88,68,0.953,72,1.612,77,1.003,92,0.562,106,2.446,112,0.013,113,0.013,119,2.363,208,1.82,220,3.483,293,3.38,296,2.446,306,2.446,443,4.177,444,3.38,446,3.025,447,2.446,449,3.025,450,4.264,452,3.025,453,3.025,454,4.789,455,4.179,456,4.179,457,4.789,458,3.025,459,3.38,460,3.025,461,3.107,462,1.82,463,1.943,464,3.107,465,3.84,466,2.693,467,3.107,468,2.084,469,2.693,470,4.179,471,2.693,472,4.264,473,4.179,474,3.38,475,5.165,476,3.025,477,3.025,478,2.446,479,2.446,480,2.446,481,4.179,482,3.025]],["title/interfaces/IllustratorModel.html",[0,1.381,483,2.609]],["body/interfaces/IllustratorModel.html",[0,1.742,2,1.561,3,0.11,4,0.126,5,0.126,9,0.095,10,0.553,11,1.92,12,0.648,13,0.471,14,0.493,15,0.02,16,1.451,17,1.022,18,0.305,19,1.017,20,0.97,21,0.194,22,0.309,23,0.289,24,0.475,25,1.92,26,0.679,27,1.92,28,1.364,29,1.282,35,1.364,36,3.384,41,0.593,42,0.829,52,1.92,55,0.189,56,2.557,58,2.302,59,0.33,61,1.364,63,0.179,65,0.751,67,3.047,69,2.275,70,1.364,71,1.685,72,1.208,74,4.027,77,0.751,92,0.757,105,1.934,107,1.561,112,0.01,113,0.01,171,0.679,172,1.141,178,1.022,187,2.339,193,2.745,209,2.745,241,1.833,249,2.018,250,2.018,252,1.022,253,1.364,254,1.561,259,1.364,260,1.561,261,1.561,266,1.141,272,2.042,274,3.394,277,2.181,278,2.719,279,2.719,280,2.042,282,3.563,283,3.26,284,2.719,286,3.26,300,2.018,350,1.561,384,2.745,483,2.745,484,2.018,485,4.524,486,3.394,487,3.394,488,3.023,489,4.07,490,2.266,491,2.018,492,2.018,493,2.266,494,2.266,495,2.266,496,2.266,497,3.394,498,2.266,499,2.266,500,2.266,501,2.266,502,2.266,503,2.745]],["title/classes/IllustratorSelectors.html",[63,0.255,504,3.227]],["body/classes/IllustratorSelectors.html",[3,0.135,4,0.155,5,0.155,9,0.116,10,0.679,12,0.635,14,0.507,15,0.02,16,1.181,18,0.288,21,0.238,22,0.379,26,0.833,35,1.673,36,3.684,55,0.155,59,0.726,63,0.22,67,2.976,68,1.904,77,1.65,105,2.335,112,0.012,113,0.012,115,0.488,117,2.714,118,1.445,119,3.415,122,2.022,124,0.873,127,0.823,133,1.786,187,3.43,274,3.377,280,2.371,282,3.377,283,2.371,286,2.371,483,4.924,485,4.433,488,3.508,491,3.508,492,3.508,504,3.94,505,3.242,506,5.337,507,5.337,508,3.242,509,5.806,510,3.242,511,3.242,512,3.242,513,3.242,514,3.242,515,3.242,516,3.242,517,3.242,518,5.806]],["title/injectables/IllustratorState.html",[19,0.967,35,1.942]],["body/injectables/IllustratorState.html",[0,1.317,3,0.097,4,0.111,5,0.111,9,0.083,10,0.487,12,0.583,13,0.415,14,0.492,15,0.02,16,1.635,17,0.899,18,0.288,19,0.923,20,0.853,21,0.171,22,0.272,23,0.254,24,0.504,25,1.741,26,0.597,27,2.127,28,1.199,29,1.127,35,1.853,36,2.718,41,0.735,42,1.033,52,1.127,55,0.172,56,2.96,58,2.733,59,0.705,61,1.199,63,0.158,65,1.021,67,2.837,68,1.441,69,2.62,70,1.853,71,2.289,72,1.641,74,3.869,77,0.661,92,0.699,105,2.156,107,2.121,112,0.009,113,0.009,118,1.129,122,1.857,124,0.802,127,0.756,136,1.062,140,1.612,142,1.612,171,0.597,172,1.003,178,0.899,187,1.373,193,1.612,209,1.612,241,2.49,249,2.742,250,2.742,252,1.389,253,1.199,254,1.373,259,1.199,260,1.373,261,1.373,266,1.55,272,2.546,274,2.546,277,2.718,278,1.853,279,3.214,280,1.199,282,3.436,283,2.752,284,3.214,286,2.752,300,2.742,350,2.121,384,1.612,483,1.612,484,1.775,485,3.35,486,1.993,487,1.993,488,1.775,489,4.231,490,1.993,491,2.742,492,2.742,493,3.079,494,3.079,495,1.993,496,1.993,497,3.079,498,1.993,499,1.993,500,3.079,501,3.079,502,3.079,503,2.49,519,2.325,520,2.325,521,2.325,522,2.325,523,2.325,524,2.325,525,2.325,526,2.325]],["title/classes/Load.html",[41,0.47,63,0.255]],["body/classes/Load.html",[3,0.167,4,0.191,5,0.191,6,2.571,7,2.571,9,0.143,12,0.436,13,1.325,14,0.348,15,0.02,17,1.545,18,0.286,21,0.39,22,0.467,23,0.65,24,0.293,40,1.545,41,0.663,42,0.836,43,2.2,44,1.936,51,0.836,52,2.571,55,0.303,59,0.499,63,0.448,65,1.507,66,1.433,67,2.288,92,0.637,112,0.014,113,0.014,115,0.601,124,0.601,127,0.566,131,1.802,149,1.391,156,1.135,164,1.472,166,2.43,167,2.43,168,1.295,169,1.295,173,1.135,180,1.465,252,1.545,265,2.546,266,1.724,267,1.391,268,1.321,269,2.546,270,1.936,271,1.465,527,2.359,528,3.993]],["title/classes/Load-1.html",[41,0.395,63,0.215,97,1.869]],["body/classes/Load-1.html",[3,0.178,4,0.204,5,0.204,9,0.153,12,0.467,13,1.296,14,0.373,15,0.02,16,1.097,18,0.299,21,0.407,22,0.5,23,0.672,24,0.478,41,0.693,42,1.16,51,0.894,55,0.294,59,0.534,63,0.441,65,1.575,92,0.681,112,0.014,113,0.014,115,0.642,124,0.642,127,0.605,131,1.575,149,1.487,156,1.214,164,1.428,168,1.043,169,1.043,171,1.097,173,1.214,184,2.686,185,2.686,191,2.523,203,2.203,242,2.722,267,1.487,268,1.413,271,1.567,276,2.532,287,2.961,288,3.261,289,4.264,290,2.961,291,2.961,292,3.261,527,2.523,529,4.27]],["title/classes/Load-2.html",[41,0.395,63,0.215,530,2.712]],["body/classes/Load-2.html",[3,0.156,4,0.179,5,0.179,9,0.134,12,0.41,13,1.266,14,0.327,15,0.02,16,1.66,18,0.274,21,0.373,22,0.439,23,0.556,24,0.489,41,0.635,42,0.785,51,0.785,55,0.309,58,3.23,59,0.469,63,0.452,65,1.445,92,0.598,112,0.013,113,0.013,115,0.564,124,0.564,127,0.531,131,1.445,149,1.306,156,1.066,164,1.5,168,1.409,169,1.409,173,1.066,180,1.376,252,1.451,266,1.619,267,1.306,268,1.241,270,2.465,271,1.376,272,1.935,273,2.216,274,2.975,275,2.216,276,2.323,277,2.8,278,3.189,279,2.622,280,1.935,281,3.003,282,2.622,283,1.935,284,2.622,285,2.391,286,1.935,527,2.216,531,3.75]],["title/classes/Load-3.html",[41,0.395,63,0.215,532,2.712]],["body/classes/Load-3.html",[3,0.142,4,0.163,5,0.228,9,0.171,12,0.373,13,1.227,14,0.298,15,0.02,18,0.296,21,0.35,22,0.4,23,0.741,24,0.403,40,1.321,41,0.809,48,2.375,51,0.715,55,0.299,59,0.427,63,0.424,66,1.484,88,1.762,92,0.544,112,0.012,113,0.012,115,0.514,124,0.514,127,0.484,146,1.881,147,2.017,148,3.024,149,1.66,151,2.832,152,2.815,154,2.177,155,1.762,156,0.971,157,2.459,158,1.881,159,2.017,160,2.017,161,2.815,162,3.138,163,1.881,164,1.451,165,2.177,166,2.426,167,1.946,168,1.451,169,1.451,170,3.03,171,1.527,172,2.564,173,0.971,174,3.038,175,2.815,176,3.038,177,2.177,178,1.321,179,1.881,180,1.253,181,2.177,182,2.177,527,2.017,533,3.415]],["title/classes/Load-4.html",[41,0.395,63,0.215,534,3.163]],["body/classes/Load-4.html",[3,0.185,4,0.212,5,0.212,9,0.159,12,0.485,13,1.305,14,0.387,15,0.02,16,1.459,18,0.307,21,0.417,22,0.519,23,0.746,24,0.46,41,0.825,42,1.189,51,0.929,55,0.271,59,0.555,63,0.425,92,0.707,112,0.015,113,0.015,115,0.667,124,0.667,127,0.628,131,1.614,149,1.545,156,1.261,164,1.318,168,1.084,169,1.084,173,1.261,267,1.545,268,1.468,271,1.628,276,2.594,527,2.621,535,3.354,536,3.354,537,3.387,538,4.436,539,3.387]],["title/classes/Load-5.html",[41,0.395,63,0.215,540,2.712]],["body/classes/Load-5.html",[3,0.217,4,0.248,5,0.248,9,0.186,15,0.019,18,0.281,21,0.382,23,0.735,24,0.46,41,0.841,51,1.088,55,0.248,63,0.353,112,0.016,113,0.016,115,0.782,164,1.207,171,1.728,468,3.974,541,3.605,542,3.605,543,5.199,544,6.266,545,4.345,546,5.199]],["title/classes/RegisterFormat.html",[63,0.255,163,2.073]],["body/classes/RegisterFormat.html",[3,0.145,4,0.166,5,0.231,9,0.125,12,0.381,13,1.122,14,0.304,15,0.02,18,0.299,21,0.355,22,0.407,23,0.712,24,0.44,40,1.347,41,0.693,48,2.389,51,0.729,55,0.301,59,0.435,63,0.427,66,1.499,88,1.796,92,0.555,112,0.013,113,0.013,115,0.524,124,0.524,127,0.493,146,1.918,147,2.057,148,3.055,149,1.682,151,2.861,152,2.854,154,2.219,155,1.796,156,0.99,157,3.091,158,1.918,159,2.057,160,2.057,161,3.539,162,3.352,163,2.661,164,1.461,165,2.219,166,2.446,167,2.265,168,1.463,169,1.463,170,2.689,171,1.241,172,2.085,173,0.99,174,2.219,175,2.057,176,2.219,177,2.219,178,1.347,179,1.918,180,1.277,181,2.219,182,2.219,315,2.985,547,3.481]],["title/classes/Reset.html",[42,0.788,63,0.255]],["body/classes/Reset.html",[3,0.174,4,0.2,5,0.2,6,2.027,7,2.027,9,0.15,13,1.301,15,0.02,17,1.617,18,0.295,21,0.401,22,0.489,23,0.665,24,0.401,40,1.617,41,0.523,42,1.144,43,2.303,44,2.027,51,0.875,52,2.65,55,0.308,63,0.454,65,1.188,66,1.477,67,2.358,92,0.667,112,0.014,113,0.014,115,0.629,131,1.73,156,1.188,164,1.499,166,2.231,167,2.231,168,1.335,169,1.335,173,1.188,180,1.534,252,2.114,265,2.665,266,1.805,267,1.456,268,1.383,269,2.665,270,2.027,271,1.534]],["title/classes/Reset-1.html",[42,0.662,63,0.215,97,1.869]],["body/classes/Reset-1.html",[3,0.187,4,0.214,5,0.214,9,0.16,13,1.22,15,0.02,16,1.467,18,0.308,21,0.419,22,0.524,23,0.724,24,0.486,41,0.559,42,1.386,51,0.937,55,0.3,63,0.449,65,1.271,92,0.713,112,0.015,113,0.015,115,0.673,131,1.271,156,1.271,164,1.459,168,1.093,169,1.093,171,1.149,173,1.271,184,2.169,185,2.169,191,2.643,203,2.308,242,2.851,267,1.558,268,1.48,271,1.641,276,2.044,287,3.102,288,3.415,289,3.958,290,3.102,291,3.102,292,3.415]],["title/classes/Reset-2.html",[42,0.662,63,0.215,530,2.712]],["body/classes/Reset-2.html",[3,0.163,4,0.187,5,0.187,9,0.14,13,1.168,15,0.02,16,1.615,18,0.282,21,0.384,22,0.457,23,0.571,24,0.495,41,0.488,42,1.094,51,0.818,55,0.313,58,3.268,63,0.457,65,1.11,92,0.623,112,0.014,113,0.014,115,0.587,131,1.11,156,1.11,164,1.521,168,1.438,169,1.438,173,1.11,180,1.433,252,2.021,266,1.686,267,1.36,268,1.292,270,2.533,271,1.433,272,2.015,273,2.308,274,3.037,275,2.308,276,1.785,277,2.878,278,3.242,279,2.695,280,2.015,281,3.086,282,2.695,283,2.015,284,2.695,285,2.49,286,2.015]],["title/classes/Reset-3.html",[42,0.662,63,0.215,532,2.712]],["body/classes/Reset-3.html",[3,0.195,4,0.224,5,0.224,9,0.168,13,1.237,15,0.02,16,1.203,18,0.317,21,0.432,22,0.548,23,0.758,24,0.472,41,0.735,42,1.41,51,0.98,55,0.281,63,0.435,92,0.746,112,0.015,113,0.015,115,0.704,131,1.331,156,1.331,164,1.364,168,1.144,169,1.144,173,1.331,267,1.631,268,1.549,271,1.718,276,2.14,535,2.766,536,2.766,537,3.575,539,3.575]],["title/interfaces/ScreenModeModel.html",[0,1.381,548,2.609]],["body/interfaces/ScreenModeModel.html",[0,1.743,2,2.807,3,0.198,4,0.227,5,0.227,9,0.17,10,0.995,11,2.875,14,0.517,15,0.019,24,0.349,55,0.227,112,0.015,113,0.015,132,3.335,187,2.807,211,3.728,462,3.335,463,3.561,548,4.112,549,3.029,550,3.029,551,4.751,552,4.314,553,3.78,554,4.527,555,4.83,556,4.12,557,5.929,558,4.527,559,5.084,560,5.929]],["title/classes/ScreenModeSelectors.html",[63,0.255,561,3.227]],["body/classes/ScreenModeSelectors.html",[3,0.156,4,0.178,5,0.178,9,0.134,10,0.782,12,0.554,14,0.442,15,0.02,18,0.311,24,0.453,26,0.959,55,0.178,59,0.633,63,0.253,66,1.369,68,1.667,72,2.315,77,1.44,112,0.013,113,0.013,115,0.561,117,4.192,118,1.593,119,3.225,122,1.765,124,0.762,127,0.718,132,2.614,133,2.056,211,3.398,461,2.379,462,3.661,463,3.664,548,4.717,549,3.666,550,3.666,552,3.23,555,4.278,556,3.932,561,4.344,562,3.733,563,5.067,564,5.067,565,3.733,566,5.067,567,5.067,568,3.733,569,3.513,570,3.201,571,3.733,572,5.067,573,3.733,574,3.733]],["title/injectables/ScreenModeState.html",[19,0.967,461,2.399]],["body/injectables/ScreenModeState.html",[3,0.141,4,0.162,5,0.162,9,0.121,10,0.709,12,0.518,14,0.413,15,0.02,18,0.336,19,1.217,20,1.242,23,0.647,24,0.497,25,3.213,26,0.87,55,0.162,56,2.045,59,0.683,61,1.747,63,0.23,66,1.6,68,1.28,69,2.554,78,2,105,1.738,112,0.012,113,0.012,118,1.49,122,1.65,124,0.713,127,0.671,131,1.883,136,1.547,211,3.26,342,2.348,350,2.799,365,2.903,366,2.903,379,4.062,461,3.02,462,3.544,463,3.65,503,4.319,548,3.789,549,3.483,550,3.483,552,3.483,556,2.158,570,2.903,575,3.386,576,4.737,577,4.595,578,3.386,579,4.737,580,3.386,581,4.737,582,3.386,583,4.737,584,3.386,585,3.386,586,2.585,587,3.386,588,3.386,589,3.386,590,3.386]],["title/classes/SendMessage.html",[63,0.255,302,2.873]],["body/classes/SendMessage.html",[0,2.148,3,0.194,4,0.222,5,0.222,9,0.167,12,0.509,14,0.559,15,0.02,18,0.316,21,0.43,22,0.545,23,0.509,51,0.975,55,0.222,59,0.582,63,0.434,112,0.015,113,0.015,115,0.7,124,0.7,127,0.66,149,2.23,164,1.081,168,1.137,169,1.137,281,3.458,299,5.019,302,4.469,307,5.286,309,3.991,336,5.019,591,4.655,592,5.853,593,5.853,594,5.853,595,4.655,596,7.067,597,4.655,598,4.655]],["title/classes/Set.html",[63,0.255,131,1.07]],["body/classes/Set.html",[3,0.177,4,0.202,5,0.202,9,0.197,12,0.463,14,0.37,15,0.02,18,0.229,21,0.311,23,0.463,51,0.887,55,0.263,59,0.53,63,0.374,66,1.49,112,0.014,113,0.014,115,0.637,124,0.637,127,0.6,131,1.995,132,3.161,149,1.476,164,1.28,166,2.501,167,2.501,168,1.346,169,1.346,211,3.374,462,3.161,463,3.798,549,3.513,550,3.513,552,3.905,553,3.905,554,4.208,555,2.938,556,2.7,558,3.235,577,2.938,586,3.235,599,3.632,600,5.252,601,4.236,602,4.236,603,4.726,604,3.632,605,3.632,606,3.632]],["title/classes/SetClicked.html",[63,0.255,284,1.942]],["body/classes/SetClicked.html",[3,0.156,4,0.178,5,0.178,9,0.134,12,0.408,13,1.15,14,0.326,15,0.02,16,1.657,18,0.274,21,0.372,22,0.437,23,0.554,24,0.489,41,0.467,42,0.782,51,0.782,55,0.308,58,3.299,59,0.467,63,0.451,65,1.061,92,0.595,112,0.013,113,0.013,115,0.561,124,0.561,127,0.529,131,1.061,149,1.3,156,1.061,164,1.497,168,1.405,169,1.405,173,1.061,180,1.37,252,1.444,266,1.611,267,1.3,268,1.235,270,2.457,271,1.37,272,1.926,273,2.205,274,3.328,275,2.205,276,1.706,277,3.169,278,3.432,279,2.614,280,1.926,281,3.398,282,2.968,283,1.926,284,3.183,285,2.379,286,2.614,607,3.733,608,3.733]],["title/classes/SetHover.html",[63,0.255,279,1.942]],["body/classes/SetHover.html",[3,0.156,4,0.178,5,0.178,9,0.134,12,0.408,13,1.15,14,0.326,15,0.02,16,1.657,18,0.274,21,0.372,22,0.437,23,0.554,24,0.489,41,0.467,42,0.782,51,0.782,55,0.308,58,3.299,59,0.467,63,0.451,65,1.061,92,0.595,112,0.013,113,0.013,115,0.561,124,0.561,127,0.529,131,1.061,149,1.3,156,1.061,164,1.497,168,1.405,169,1.405,173,1.061,180,1.37,252,1.444,266,1.611,267,1.3,268,1.235,270,2.457,271,1.37,272,1.926,273,2.205,274,3.328,275,2.205,276,1.706,277,3.169,278,3.432,279,3.183,280,1.926,281,3.398,282,2.968,283,2.614,284,2.614,285,2.379,286,1.926,609,3.733,610,3.733]],["title/classes/SetIllustrationUrl.html",[43,2.073,63,0.255]],["body/classes/SetIllustrationUrl.html",[3,0.165,4,0.189,5,0.189,6,2.554,7,2.554,9,0.142,12,0.432,13,1.319,14,0.345,15,0.02,17,2.037,18,0.284,21,0.387,22,0.463,23,0.69,24,0.291,40,1.53,41,0.494,42,0.828,43,2.901,44,2.554,51,0.828,52,2.872,55,0.302,59,0.494,63,0.446,65,1.124,66,1.423,67,2.556,92,0.63,112,0.014,113,0.014,115,0.595,124,0.595,127,0.56,131,1.869,149,1.377,156,1.124,164,1.466,166,2.418,167,2.418,168,1.287,169,1.287,173,1.124,180,1.451,252,1.53,265,2.52,266,1.707,267,1.377,268,1.308,269,2.52,270,1.917,271,1.451,527,2.336,611,3.954]],["title/classes/SetSize.html",[63,0.255,577,2.609]],["body/classes/SetSize.html",[3,0.174,4,0.199,5,0.199,9,0.195,12,0.455,14,0.363,15,0.02,18,0.225,21,0.306,23,0.455,51,0.871,55,0.26,59,0.52,63,0.369,66,1.472,112,0.014,113,0.014,115,0.626,124,0.626,127,0.589,131,1.95,132,2.146,149,1.449,164,1.264,166,2.479,167,2.479,168,1.33,169,1.33,211,3.549,462,3.133,463,3.779,549,3.471,550,3.471,552,3.471,553,3.87,554,3.176,555,4.21,556,3.87,558,4.158,577,3.776,586,3.176,599,3.566,600,5.206,603,4.669,604,4.669,605,4.669,606,4.669,612,4.159,613,4.159]],["title/classes/SourceRefsSelectors.html",[63,0.255,614,3.227]],["body/classes/SourceRefsSelectors.html",[3,0.191,4,0.319,5,0.219,9,0.164,10,0.958,12,0.5,14,0.399,15,0.02,18,0.343,21,0.336,22,0.536,26,1.176,38,2.52,39,3.691,55,0.219,59,0.572,63,0.31,68,1.717,77,1.3,112,0.015,113,0.015,115,0.688,117,3.421,118,1.821,119,3.08,122,1.593,124,0.688,127,0.648,133,2.52,535,3.421,536,3.421,614,4.965,615,4.575,616,5.79,617,4.965,618,5.79,619,6.033,620,4.575,621,4.575,622,4.965,623,4.575,624,4.575]],["title/injectables/SourceRefsState.html",[19,0.967,38,2.073]],["body/injectables/SourceRefsState.html",[3,0.152,4,0.315,5,0.174,9,0.13,10,0.76,12,0.543,13,0.648,14,0.495,15,0.02,16,1.567,17,1.405,18,0.345,19,1.278,20,1.332,21,0.267,22,0.425,23,0.397,24,0.505,25,2.411,26,0.933,27,2.75,28,1.874,29,1.761,38,2.739,41,0.844,42,1.277,55,0.174,56,2.915,57,3.448,59,0.709,61,1.874,63,0.246,65,1.413,68,1.344,69,2.146,70,2.565,77,1.032,105,1.332,107,2.938,112,0.013,113,0.013,118,1.563,122,1.732,124,0.748,127,0.705,136,1.659,140,2.518,142,2.518,171,0.933,172,1.567,178,1.405,252,1.924,253,1.874,254,2.145,259,1.874,260,2.145,261,2.145,503,3.932,535,3.35,536,3.35,617,3.114,619,3.114,622,5.229,625,3.114,626,3.631,627,3.631,628,3.631,629,3.631]],["title/injectables/StateAnalyticsPluginService.html",[19,0.967,464,2.399]],["body/injectables/StateAnalyticsPluginService.html",[3,0.099,4,0.113,5,0.113,9,0.13,10,0.496,12,0.259,14,0.596,15,0.02,16,1.52,18,0.269,19,1.382,20,0.869,23,0.752,24,0.46,26,0.609,55,0.212,57,3.456,59,0.296,63,0.161,66,1.599,68,1.454,69,1.916,72,1.083,77,1.529,78,2.153,92,0.858,105,1.629,112,0.009,113,0.009,118,1.146,124,0.356,127,0.336,132,1.88,136,1.083,171,0.609,172,1.573,178,1.41,208,1.222,220,2.446,222,2.527,253,1.222,259,2.571,268,0.784,290,2.527,331,1.809,350,2.623,359,1.643,372,2.032,447,1.643,459,2.527,464,2.83,465,4.077,466,4.883,471,1.809,472,3.805,474,1.643,478,1.643,479,1.643,480,1.643,553,1.51,569,4.637,630,2.782,631,2.782,632,1.809,633,3.644,634,6.107,635,4.984,636,2.369,637,3.644,638,3.644,639,6.76,640,4.439,641,4.439,642,2.369,643,3.807,644,2.369,645,3.644,646,2.369,647,3.124,648,3.124,649,2.782,650,3.124,651,2.032,652,3.124,653,2.032,654,2.032,655,2.032,656,2.032,657,2.032,658,2.032,659,2.032,660,3.124,661,3.124,662,2.369,663,3.807,664,2.032,665,2.032,666,2.032,667,3.124,668,3.124,669,2.032,670,2.369,671,2.369,672,2.369,673,2.369,674,2.369,675,2.369,676,2.369,677,2.369,678,2.369,679,2.369,680,2.369,681,2.369,682,2.369,683,2.369,684,2.369,685,3.124,686,2.369,687,2.369,688,2.369,689,2.369,690,2.369,691,4.984,692,3.644,693,4.439,694,2.369,695,2.369,696,2.369,697,2.369,698,2.032,699,2.032]],["title/classes/TissueLibrarySelectors.html",[63,0.255,700,3.227]],["body/classes/TissueLibrarySelectors.html",[3,0.172,4,0.197,5,0.197,9,0.194,10,0.862,12,0.45,13,0.734,14,0.527,15,0.02,16,1.39,18,0.346,21,0.302,22,0.482,24,0.471,26,1.058,55,0.197,59,0.515,63,0.41,66,1.113,68,1.462,77,1.17,112,0.014,113,0.014,115,0.619,118,1.701,119,2.929,122,1.434,124,0.619,126,4.13,127,0.583,133,3.328,171,1.758,208,2.791,467,4.248,468,3.937,541,3.751,542,3.751,545,3.751,700,4.638,701,4.117,702,5.409,703,5.409,704,5.409,705,4.899,706,4.117,707,4.117,708,6.041,709,5.409,710,5.409,711,3.53,712,4.117,713,4.117,714,4.117]],["title/injectables/TissueLibraryState.html",[19,0.967,467,2.399]],["body/injectables/TissueLibraryState.html",[3,0.161,4,0.184,5,0.184,9,0.185,10,0.806,12,0.421,14,0.336,15,0.02,16,1.329,18,0.362,19,1.329,20,1.412,21,0.283,22,0.451,23,0.421,24,0.524,26,0.989,27,2.833,28,1.986,29,1.867,41,0.481,55,0.184,56,2.233,59,0.647,63,0.261,65,1.47,66,1.04,68,1.398,70,2.669,77,1.094,112,0.013,113,0.013,118,1.627,122,1.341,124,0.579,127,0.545,136,1.759,167,2.112,171,1.791,178,2.001,241,3.587,253,1.986,254,2.274,259,2.669,260,2.274,261,2.274,342,3.587,467,3.297,468,4.118,541,3.587,542,3.587,545,2.669,669,3.301,705,2.939,711,3.301,715,3.849,716,5.173,717,5.173,718,5.357,719,3.849,720,5.173,721,3.849,722,3.849,723,3.301,724,3.849,725,3.849]],["title/dependencies.html",[726,2.712,727,3.447]],["body/dependencies.html",[15,0.019,20,2.083,112,0.017,113,0.017,727,5.04,728,5.678,729,5.678,730,5.678,731,5.678,732,6.601]],["title/miscellaneous/functions.html",[733,1.869,734,3.871]],["body/miscellaneous/functions.html",[9,0.11,10,1.086,11,1.493,12,0.721,14,0.586,15,0.019,16,0.791,33,2.44,48,1.625,59,0.825,68,1.843,69,1.329,105,1.625,112,0.011,113,0.011,126,3.382,127,0.935,132,1.589,148,1.697,151,1.589,155,3.519,162,2.148,166,1.258,170,1.493,184,1.493,185,1.493,192,2.136,193,3.071,194,3.071,201,4.588,204,3.071,208,2.676,220,3.908,222,4.167,257,4.448,278,2.285,289,2.136,331,2.352,351,2.641,359,2.136,371,3.798,384,2.136,416,2.641,465,3.306,553,1.963,569,3.933,630,2.352,631,2.352,632,3.382,649,2.352,653,2.641,654,2.641,655,2.641,656,2.641,657,2.641,658,2.641,659,5.365,660,2.641,661,2.641,723,2.641,733,1.82,734,2.641,735,4.778,736,6.447,737,2.352,738,4.429,739,4.429,740,4.429,741,4.429,742,4.429,743,4.429,744,2.641,745,3.08,746,3.08,747,3.08,748,3.08,749,3.08,750,3.08,751,6.009,752,3.08,753,6.009,754,3.08,755,3.08,756,5.672,757,3.08,758,3.08,759,3.08,760,3.08,761,3.08,762,3.08,763,3.08,764,3.08,765,3.08,766,3.08,767,3.08,768,3.08,769,3.08,770,4.429,771,3.08,772,3.08,773,3.08,774,3.08,775,3.08,776,3.08,777,3.08,778,3.08,779,2.352,780,3.08]],["title/index.html",[10,0.662,781,3.163,782,3.163]],["body/index.html",[15,0.017,24,0.483,112,0.017,113,0.017,469,4.305,783,5.638,784,6.574,785,5.638,786,6.574,787,6.574,788,5.638,789,5.638,790,5.638]],["title/modules.html",[445,3.89]],["body/modules.html",[15,0.017,112,0.017,113,0.017,319,4.445,444,4.037,445,4.445,791,5.822,792,5.822]],["title/overview.html",[793,4.368]],["body/overview.html",[2,3.319,15,0.017,42,1.176,97,3.319,112,0.017,113,0.017,115,0.845,136,2.567,443,3.896,540,4.817,727,5.009,793,4.817,794,6.561,795,5.618,796,5.618,797,5.618]],["title/properties.html",[11,2.189,726,2.712]],["body/properties.html",[11,2.833,15,0.018,112,0.017,113,0.017,798,5.843,799,5.843]],["title/miscellaneous/typealiases.html",[733,1.869,800,4.515]],["body/miscellaneous/typealiases.html",[6,1.88,7,1.88,8,3.969,10,0.812,14,0.641,15,0.013,23,0.424,24,0.285,25,3.261,56,3.052,112,0.013,113,0.013,151,3.026,152,3.465,157,3.026,171,0.996,184,1.88,185,1.88,186,4.784,188,3.325,192,3.605,198,4.457,199,3.325,200,2.961,201,3.969,202,5.767,203,2.001,204,2.689,205,2.961,206,2.961,322,4.784,339,5.028,342,2.689,468,2.291,484,2.961,535,2.291,536,2.291,541,2.689,542,2.689,545,2.689,625,4.457,705,3.969,718,4.457,733,2.291,735,4.478,737,4.989,779,2.961,801,3.877,802,3.325,803,3.877,804,3.325,805,5.198,806,5.864,807,5.602,808,6.534,809,6.534,810,6.265,811,3.325,812,6.265,813,3.325,814,3.325,815,3.325,816,3.877,817,5.198,818,3.877,819,3.877]],["title/miscellaneous/variables.html",[733,1.869,820,3.871]],["body/miscellaneous/variables.html",[3,0.104,6,0.717,7,0.717,9,0.089,10,0.309,11,1.564,12,0.162,14,0.425,15,0.019,17,0.572,19,0.38,21,0.109,23,0.678,24,0.109,48,1.183,52,1.564,53,1.9,63,0.257,67,1.074,72,1.137,78,0.873,112,0.006,113,0.006,132,0.762,147,0.873,155,3.466,157,1.284,159,0.873,160,0.873,162,1.835,170,1.207,171,0.972,184,1.207,185,1.207,186,2.889,196,2.134,197,3.244,200,2.462,203,1.952,204,3.174,205,1.9,206,1.9,207,2.765,208,2.179,209,1.726,210,2.134,211,2.817,212,3.621,213,2.134,214,1.267,215,1.267,216,1.267,217,2.134,218,1.267,219,1.267,220,2.326,221,1.267,222,1.726,223,1.267,224,1.267,225,3.621,226,1.267,227,1.267,265,1.586,267,1.318,268,1.397,269,0.942,273,0.873,275,0.873,287,1.726,291,1.025,296,1.025,307,1.128,320,3.224,333,4.175,334,2.134,335,1.267,350,1.905,359,5.087,367,2.134,368,2.134,405,3.621,447,1.025,459,1.025,462,0.762,464,0.942,465,2.917,474,1.025,478,1.025,479,1.025,480,1.025,535,0.873,536,0.873,537,1.9,539,1.128,559,2.134,569,5.053,630,1.9,631,1.128,632,2.889,643,2.134,647,2.765,648,2.765,649,1.128,650,1.267,651,2.134,652,1.267,663,2.765,664,1.267,665,1.267,666,1.267,667,1.267,668,1.267,685,2.765,698,1.267,699,2.134,733,0.873,735,2.889,737,2.889,744,2.765,779,1.128,802,1.267,804,1.267,807,3.244,811,3.244,813,3.244,814,3.244,815,2.765,820,1.267,821,5.113,822,7.015,823,1.478,824,1.478,825,2.489,826,6.719,827,2.489,828,1.478,829,2.489,830,3.224,831,2.489,832,4.223,833,3.783,834,2.489,835,2.489,836,2.489,837,2.489,838,2.489,839,2.489,840,2.489,841,2.489,842,2.489,843,2.489,844,2.489,845,2.489,846,2.489,847,2.489,848,5.321,849,2.489,850,2.489,851,4.869,852,3.783,853,3.224,854,3.224,855,2.489,856,3.783,857,2.489,858,2.489,859,2.489,860,1.478,861,1.478,862,1.478,863,4.223,864,1.478,865,1.478,866,1.478,867,1.478,868,1.478,869,5.655,870,5.791,871,1.478,872,2.489,873,3.783,874,1.478,875,1.478,876,3.224,877,4.577,878,2.489,879,1.478,880,1.478,881,1.478,882,1.478,883,1.478,884,1.478,885,1.478,886,4.577,887,1.478,888,2.489,889,2.489,890,1.478,891,1.478,892,3.783,893,1.478,894,1.478,895,1.478,896,3.224,897,1.478,898,1.478,899,1.478,900,1.478,901,1.478,902,1.478,903,1.478,904,1.478,905,1.478,906,1.478,907,1.478,908,1.478,909,1.478,910,1.478,911,1.478,912,1.478,913,1.478,914,1.478,915,1.478,916,1.478,917,1.478,918,1.478,919,1.478,920,1.478,921,1.478,922,1.478,923,1.478,924,1.478,925,1.478,926,1.478,927,1.478,928,1.478,929,3.783,930,1.478,931,1.478,932,1.478,933,1.478,934,1.478,935,1.478,936,1.478,937,1.478,938,1.478,939,2.489,940,1.478,941,3.224,942,1.478,943,1.478,944,2.489,945,1.478,946,2.489,947,1.478]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":416,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":799,"title":{},"body":{"properties.html":{}}}],["1",{"_index":97,"title":{"classes/Load-1.html":{},"classes/Reset-1.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{},"overview.html":{}}}],["15.1.0",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":530,"title":{"classes/Load-2.html":{},"classes/Reset-2.html":{}},"body":{}}],["2.3.0",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":532,"title":{"classes/Load-3.html":{},"classes/Reset-3.html":{}},"body":{}}],["30",{"_index":797,"title":{},"body":{"overview.html":{}}}],["4",{"_index":534,"title":{"classes/Load-4.html":{}},"body":{}}],["5",{"_index":540,"title":{"classes/Load-5.html":{}},"body":{"overview.html":{}}}],["9",{"_index":796,"title":{},"body":{"overview.html":{}}}],["_ctx",{"_index":310,"title":{},"body":{"injectables/ContactState.html":{}}}],["absence",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["action",{"_index":23,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action('[contact",{"_index":598,"title":{},"body":{"classes/SendMessage.html":{}}}],["action('[screenmode",{"_index":603,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["action('[tissuelibrary",{"_index":546,"title":{},"body":{"classes/Load-5.html":{}}}],["action('add",{"_index":177,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["action('clear",{"_index":180,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('compute",{"_index":292,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["action('download",{"_index":181,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["action('load",{"_index":173,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('register",{"_index":165,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["action('reset",{"_index":271,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('set",{"_index":270,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action(['clear",{"_index":138,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["action([clear",{"_index":104,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["action(addentry",{"_index":340,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearentries",{"_index":344,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearselection",{"_index":502,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(computeaggregates",{"_index":244,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["action(download",{"_index":348,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(load",{"_index":70,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["action(registerformat",{"_index":361,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(reset",{"_index":107,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["action(sendmessage",{"_index":304,"title":{},"body":{"injectables/ContactState.html":{}}}],["action(set",{"_index":579,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["action(setclicked",{"_index":501,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(sethover",{"_index":500,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(setillustrationurl",{"_index":91,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["action(setsize",{"_index":583,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["action_log",{"_index":689,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["actiongroup",{"_index":156,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["actiongroup('activeftu",{"_index":269,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('cellsummary",{"_index":291,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('download",{"_index":160,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('illustrator",{"_index":275,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('sourcerefs",{"_index":539,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":350,"title":{},"body":{"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":44,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["activeftu",{"_index":60,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftuactions.load",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeftumodel",{"_index":1,"title":{"interfaces/ActiveFtuModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftuselectors",{"_index":114,"title":{"classes/ActiveFtuSelectors.html":{}},"body":{"classes/ActiveFtuSelectors.html":{}}}],["activeftustate",{"_index":64,"title":{"injectables/ActiveFtuState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["add",{"_index":88,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["addd",{"_index":154,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["added",{"_index":720,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["addentry",{"_index":146,"title":{"classes/AddEntry.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["addentry(ctx",{"_index":338,"title":{},"body":{"injectables/DownloadState.html":{}}}],["aggregate",{"_index":203,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_cell",{"_index":207,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row",{"_index":200,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row.array",{"_index":227,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregates",{"_index":191,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["aggregates(state",{"_index":230,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["aggregation",{"_index":748,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aggregrated",{"_index":248,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["aggregrates",{"_index":190,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["alias",{"_index":817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["analytics",{"_index":465,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["analyticsproviders",{"_index":481,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["anchor",{"_index":426,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.click",{"_index":431,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.download",{"_index":429,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.href",{"_index":430,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.remove",{"_index":432,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/common",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":364,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{}}}],["app",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptitle",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":819,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["array",{"_index":193,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["array.isarray(value",{"_index":696,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["available",{"_index":319,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules.html":{}}}],["base",{"_index":267,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["base_url",{"_index":93,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["base_url}2d",{"_index":98,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["based",{"_index":761,"title":{},"body":{"miscellaneous/functions.html":{}}}],["behaviour",{"_index":606,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["being",{"_index":640,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["bigint",{"_index":652,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":423,"title":{},"body":{"injectables/DownloadState.html":{}}}],["blob([entry.data",{"_index":398,"title":{},"body":{"injectables/DownloadState.html":{}}}],["boolean",{"_index":132,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["boolean/number/string/null/bigint/undefined",{"_index":658,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["brand('downloadformatid",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branded",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":399,"title":{},"body":{"injectables/DownloadState.html":{}}}],["browse",{"_index":792,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":422,"title":{},"body":{"injectables/DownloadState.html":{}}}],["builtin",{"_index":369,"title":{},"body":{"injectables/DownloadState.html":{}}}],["calculates",{"_index":768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":809,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["cancels",{"_index":249,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["canceluncompleted",{"_index":71,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["case",{"_index":391,"title":{},"body":{"injectables/DownloadState.html":{}}}],["cell",{"_index":32,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["cellsummary",{"_index":194,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["cellsummaryactions",{"_index":30,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.load(iri",{"_index":79,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.reset",{"_index":108,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryaggregate",{"_index":192,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummaryaggregaterow",{"_index":201,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummarymodel",{"_index":183,"title":{"interfaces/CellSummaryModel.html":{}},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["cellsummaryselectors",{"_index":228,"title":{"classes/CellSummarySelectors.html":{}},"body":{"classes/CellSummarySelectors.html":{}}}],["cellsummarystate",{"_index":31,"title":{"injectables/CellSummaryState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["check",{"_index":654,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["checks",{"_index":130,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["children",{"_index":62,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["class",{"_index":63,"title":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":115,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"overview.html":{}}}],["clear",{"_index":40,"title":{"classes/Clear.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["clear(undefined",{"_index":137,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["clearentries",{"_index":179,"title":{"classes/ClearEntries.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["clearentries(ctx",{"_index":343,"title":{},"body":{"injectables/DownloadState.html":{}}}],["clears",{"_index":266,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["clearselection",{"_index":272,"title":{"classes/ClearSelection.html":{}},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["clearselection(undefined",{"_index":519,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["click",{"_index":488,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["clicked",{"_index":285,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["color",{"_index":210,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":757,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":205,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compute",{"_index":288,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregate",{"_index":257,"title":{},"body":{"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["computeaggregate(summary",{"_index":745,"title":{},"body":{"miscellaneous/functions.html":{}}}],["computeaggregates",{"_index":242,"title":{"classes/ComputeAggregates.html":{}},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregates(undefined",{"_index":243,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["computes",{"_index":85,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["configuration",{"_index":453,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["configuring",{"_index":452,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["const",{"_index":92,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["constant",{"_index":812,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constructor",{"_index":149,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["constructor(format",{"_index":315,"title":{},"body":{"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["constructor(id",{"_index":150,"title":{},"body":{"classes/AddEntry.html":{}}}],["constructor(iri",{"_index":527,"title":{},"body":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/SetIllustrationUrl.html":{}}}],["constructor(isfullscreen",{"_index":601,"title":{},"body":{"classes/Set.html":{}}}],["constructor(message",{"_index":595,"title":{},"body":{"classes/SendMessage.html":{}}}],["constructor(readonly",{"_index":168,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["constructor(selectedonclick",{"_index":607,"title":{},"body":{"classes/SetClicked.html":{}}}],["constructor(selectedonhover",{"_index":609,"title":{},"body":{"classes/SetHover.html":{}}}],["constructor(size",{"_index":612,"title":{},"body":{"classes/SetSize.html":{}}}],["contact",{"_index":296,"title":{},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["contact.actions",{"_index":311,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactacknowledgement",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactions.sendmessage",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactmessage",{"_index":596,"title":{},"body":{"classes/SendMessage.html":{}}}],["contactservice",{"_index":301,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactstate",{"_index":293,"title":{"injectables/ContactState.html":{}},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["contains",{"_index":209,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":334,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":56,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["conversion",{"_index":438,"title":{},"body":{"injectables/DownloadState.html":{}}}],["convert",{"_index":332,"title":{},"body":{"injectables/DownloadState.html":{}}}],["converted",{"_index":420,"title":{},"body":{"injectables/DownloadState.html":{}}}],["count",{"_index":770,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('gradient",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('size",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid",{"_index":371,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["createdownloadformatid('png",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid('svg",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid(id",{"_index":780,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid('about",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('embed",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('exploreftu",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('illustration",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpage",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpagereadmore",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('portal",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('producttitle",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('apptitle",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('contactacknowledgement",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegend",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegendinfo",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthdescription",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthimg",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthmoretext",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthtitle",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrodescription",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroimg",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintromoretext",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintropartners",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroreadmore",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrotitle",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metrics",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricslogo",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricstitle",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('productlogourl",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('producttitle",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('screensizenoticecontent",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegend",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegendinfo",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":166,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"miscellaneous/functions.html":{}}}],["ctx",{"_index":342,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["ctx.dispatch([new",{"_index":375,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.getstate",{"_index":387,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate",{"_index":378,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate(data",{"_index":725,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["current",{"_index":16,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-4.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":171,"title":{},"body":{"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset-1.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dataservice",{"_index":260,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["decorators",{"_index":122,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["default",{"_index":359,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_loggable_actions",{"_index":647,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":61,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["define",{"_index":807,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":124,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["dependencies",{"_index":727,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":674,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["depth",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":653,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["different",{"_index":335,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":436,"title":{},"body":{"injectables/DownloadState.html":{}}}],["discriminated",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispatch",{"_index":75,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["dispatch(new",{"_index":100,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["dispatched",{"_index":641,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["dispatches",{"_index":86,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["display",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.appendchild(anchor",{"_index":428,"title":{},"body":{"injectables/DownloadState.html":{}}}],["document.createelement('a",{"_index":427,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download",{"_index":48,"title":{"classes/Download.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["download(ctx",{"_index":347,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.action",{"_index":370,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.model",{"_index":158,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["download.state",{"_index":325,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["download_entry",{"_index":811,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format",{"_index":813,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format_id",{"_index":814,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_model",{"_index":815,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadactions",{"_index":46,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["downloadactions.clearentries",{"_index":111,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["downloadactions.download",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadactions.load(iri",{"_index":81,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["downloadcontext",{"_index":339,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloaddata(blob",{"_index":424,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadentry",{"_index":152,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformat",{"_index":157,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadformatid",{"_index":151,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformatid:'${id",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadmodel",{"_index":322,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloadremotedata(url",{"_index":440,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloads",{"_index":434,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadselectors",{"_index":317,"title":{"classes/DownloadSelectors.html":{}},"body":{"classes/DownloadSelectors.html":{}}}],["downloadstate",{"_index":47,"title":{"injectables/DownloadState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["draft.entries",{"_index":383,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.entries[createdownloadformatid(format",{"_index":385,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.entries[id",{"_index":386,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.formats[format.id",{"_index":380,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.isfullscreen",{"_index":588,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["draft.size",{"_index":590,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["each",{"_index":775,"title":{},"body":{"miscellaneous/functions.html":{}}}],["elements",{"_index":218,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enteries",{"_index":174,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["entires",{"_index":346,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entries",{"_index":170,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["entries[format",{"_index":388,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry",{"_index":148,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{}}}],["entry.url",{"_index":394,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry?.type",{"_index":390,"title":{},"body":{"injectables/DownloadState.html":{}}}],["error('cannot",{"_index":401,"title":{},"body":{"injectables/DownloadState.html":{}}}],["event",{"_index":681,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["execute",{"_index":790,"title":{},"body":{"index.html":{}}}],["expandrow",{"_index":738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandrow(row",{"_index":750,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expands",{"_index":752,"title":{},"body":{"miscellaneous/functions.html":{}}}],["explore",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exploreftu",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":55,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["extends",{"_index":164,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["extension",{"_index":405,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":268,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["fakebase",{"_index":407,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fakebase).pathname",{"_index":411,"title":{},"body":{"injectables/DownloadState.html":{}}}],["false",{"_index":587,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["fetch",{"_index":437,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fields",{"_index":486,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["filename",{"_index":392,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fileurl",{"_index":439,"title":{},"body":{"injectables/DownloadState.html":{}}}],["followed",{"_index":221,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":558,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["forked",{"_index":493,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["forkjoin",{"_index":489,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["form",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":162,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["format.id",{"_index":328,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats",{"_index":320,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["formats(state",{"_index":321,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats.ts",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formats[id",{"_index":406,"title":{},"body":{"injectables/DownloadState.html":{}}}],["formatted",{"_index":421,"title":{},"body":{"injectables/DownloadState.html":{}}}],["forroot",{"_index":448,"title":{},"body":{"modules/HraStateModule.html":{}}}],["forroot(options",{"_index":449,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["found",{"_index":762,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ftu",{"_index":17,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions",{"_index":45,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["ftu.actions.ts",{"_index":265,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions.ts:19",{"_index":611,"title":{},"body":{"classes/SetIllustrationUrl.html":{}}}],["ftu.actions.ts:8",{"_index":528,"title":{},"body":{"classes/Load.html":{}}}],["ftu.selectors.ts",{"_index":116,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:15",{"_index":125,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:9",{"_index":129,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state",{"_index":134,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state.ts",{"_index":8,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"miscellaneous/typealiases.html":{}}}],["ftu.state.ts:39",{"_index":141,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:56",{"_index":145,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:67",{"_index":139,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:76",{"_index":143,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu/active",{"_index":7,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftudataschemas",{"_index":195,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["ftudataschemas.cell_summary_row",{"_index":214,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["ftudataservice",{"_index":254,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["full",{"_index":566,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["fullscreen",{"_index":554,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["function",{"_index":659,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":734,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funtion",{"_index":657,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["ga",{"_index":670,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["generated",{"_index":783,"title":{},"body":{"index.html":{}}}],["getactiontypefrominstance",{"_index":644,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getactiontypefrominstance(action",{"_index":683,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getcolumnindex",{"_index":739,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnindex(indexbyid",{"_index":755,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel",{"_index":740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel(items",{"_index":759,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow",{"_index":741,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow(rowbyid",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":126,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{}}}],["getstate",{"_index":73,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["getstate().iri",{"_index":76,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["getting",{"_index":781,"title":{"index.html":{}},"body":{}}],["gettotalcount",{"_index":742,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettotalcount(row",{"_index":767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["given",{"_index":289,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{}}}],["google",{"_index":472,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["googleanalyticsservice",{"_index":646,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["googleanalyticstoken",{"_index":475,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["gradient",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegend",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegendinfo",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":791,"title":{},"body":{"modules.html":{}}}],["group",{"_index":159,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["guess",{"_index":403,"title":{},"body":{"injectables/DownloadState.html":{}}}],["guessfilename(ctx",{"_index":404,"title":{},"body":{"injectables/DownloadState.html":{}}}],["handle",{"_index":57,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["handle(state",{"_index":633,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handler's",{"_index":818,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handles",{"_index":637,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handling",{"_index":241,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/TissueLibraryState.html":{}}}],["hasdata",{"_index":327,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["having",{"_index":188,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["helper",{"_index":816,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["hover",{"_index":280,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["hra",{"_index":21,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["hrastatemodule",{"_index":444,"title":{"modules/HraStateModule.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"modules.html":{}}}],["hrastatemoduleoptions",{"_index":450,"title":{"interfaces/HraStateModuleOptions.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["http",{"_index":373,"title":{},"body":{"injectables/DownloadState.html":{}}}],["httpclient",{"_index":363,"title":{},"body":{"injectables/DownloadState.html":{}}}],["https://base.com",{"_index":408,"title":{},"body":{"injectables/DownloadState.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":94,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["id",{"_index":155,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":54,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["ids.ts",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignoring",{"_index":776,"title":{},"body":{"miscellaneous/functions.html":{}}}],["illustrartor",{"_index":487,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustration",{"_index":52,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":274,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["illustrator",{"_index":36,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.actions",{"_index":490,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.state",{"_index":517,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratoractions",{"_index":34,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.load(iri",{"_index":80,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.reset",{"_index":109,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.setclicked",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustratoractions.sethover",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustratormodel",{"_index":483,"title":{"interfaces/IllustratorModel.html":{}},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrators",{"_index":492,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustratorselectors",{"_index":504,"title":{"classes/IllustratorSelectors.html":{}},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratorstate",{"_index":35,"title":{"injectables/IllustratorState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["image",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["immer",{"_index":366,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["implements",{"_index":372,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["importprovidersfrom",{"_index":458,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["importprovidersfrom(ngxgoogleanalyticsmodule.forroot(options.googleanalyticstoken",{"_index":482,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["imports",{"_index":476,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexbyid",{"_index":758,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicating",{"_index":763,"title":{},"body":{"miscellaneous/functions.html":{}}}],["individual",{"_index":593,"title":{},"body":{"classes/SendMessage.html":{}}}],["inferred",{"_index":810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":297,"title":{},"body":{"injectables/ContactState.html":{}}}],["init",{"_index":358,"title":{},"body":{"injectables/DownloadState.html":{}}}],["initial",{"_index":778,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializes",{"_index":281,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SendMessage.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["inject",{"_index":253,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["inject(contactservice",{"_index":313,"title":{},"body":{"injectables/ContactState.html":{}}}],["inject(ftudataservice",{"_index":261,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["inject(googleanalyticsservice",{"_index":671,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["inject(httpclient",{"_index":374,"title":{},"body":{"injectables/DownloadState.html":{}}}],["injectable",{"_index":19,"title":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":136,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"overview.html":{}}}],["injectiontoken",{"_index":642,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["injectiontoken('loggable",{"_index":666,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":669,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["input",{"_index":655,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":167,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/TissueLibraryState.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/SendMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{},"overview.html":{}}}],["intializes",{"_index":276,"title":{},"body":{"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-4.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["intro",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iri",{"_index":13,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{}}}],["iri(undefined",{"_index":121,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["iri.split('/').slice",{"_index":96,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["isactive",{"_index":120,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isactive(undefined",{"_index":128,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isfullscreen",{"_index":552,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["isfullscreen(state",{"_index":563,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["isprimitive",{"_index":743,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isprimitive(value",{"_index":660,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":278,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/functions.html":{}}}],["items",{"_index":384,"title":{},"body":{"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["iterating",{"_index":771,"title":{},"body":{"miscellaneous/functions.html":{}}}],["json.stringify(action",{"_index":686,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["key",{"_index":691,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["label",{"_index":204,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lanading",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landing",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpage",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthdescription",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthimg",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthmoretext",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthtitle",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedescription",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroimg",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintromoretext",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroreadmore",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagepartners",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagereadmore",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagetitle",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["large",{"_index":556,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["legend",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length",{"_index":751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["less",{"_index":754,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":469,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"index.html":{}}}],["library.actions",{"_index":721,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.actions.ts",{"_index":543,"title":{},"body":{"classes/Load-5.html":{}}}],["library.model",{"_index":711,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["library.model.ts",{"_index":806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["library.selectors.ts",{"_index":701,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.selectors.ts:14",{"_index":707,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state",{"_index":712,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state.ts",{"_index":715,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.state.ts:23",{"_index":719,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library/tissue",{"_index":542,"title":{},"body":{"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["link",{"_index":53,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"miscellaneous/variables.html":{}}}],["linkid",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkregistry",{"_index":87,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions",{"_index":49,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions.add(illustration",{"_index":101,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions.navigate",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linktype",{"_index":50,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linktype.external",{"_index":102,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["list",{"_index":664,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":41,"title":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["load(ctx",{"_index":352,"title":{},"body":{"injectables/DownloadState.html":{}}}],["load(undefined",{"_index":140,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["loaded",{"_index":176,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["loading",{"_index":544,"title":{},"body":{"classes/Load-5.html":{}}}],["loads",{"_index":65,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["logaction(action",{"_index":682,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["loggable",{"_index":648,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggable_actions",{"_index":663,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggabletypes",{"_index":675,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logged",{"_index":665,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":638,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logging",{"_index":672,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["login",{"_index":698,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":559,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":679,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["managing",{"_index":295,"title":{},"body":{"injectables/ContactState.html":{}}}],["map",{"_index":756,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapping",{"_index":282,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["mapping(undefined",{"_index":508,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["matching",{"_index":113,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medical",{"_index":491,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["message",{"_index":307,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":299,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["metadata",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":306,"title":{},"body":{"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["methods",{"_index":118,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["metrics",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricslogo",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricstitle",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":733,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":463,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["mode.actions",{"_index":585,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.actions.ts",{"_index":599,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["mode.actions.ts:15",{"_index":613,"title":{},"body":{"classes/SetSize.html":{}}}],["mode.actions.ts:4",{"_index":602,"title":{},"body":{"classes/Set.html":{}}}],["mode.model",{"_index":570,"title":{},"body":{"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["mode.model.ts",{"_index":551,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["mode.selectors.ts",{"_index":562,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.selectors.ts:15",{"_index":565,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.selectors.ts:24",{"_index":568,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state",{"_index":571,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state.ts",{"_index":575,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.state.ts:23",{"_index":580,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.state.ts:36",{"_index":584,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode/screen",{"_index":550,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["model",{"_index":187,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{}}}],["module",{"_index":443,"title":{"modules/HraStateModule.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"overview.html":{}}}],["modules",{"_index":445,"title":{"modules.html":{}},"body":{"modules/HraStateModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":456,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["more",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":480,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":59,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["name.includes",{"_index":418,"title":{},"body":{"injectables/DownloadState.html":{}}}],["name}${extension",{"_index":419,"title":{},"body":{"injectables/DownloadState.html":{}}}],["name}.html",{"_index":99,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["navigation",{"_index":90,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["needs",{"_index":692,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["new",{"_index":78,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":634,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["next(state",{"_index":678,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngmodule",{"_index":457,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngx",{"_index":471,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":470,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxs",{"_index":357,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxs/store",{"_index":26,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["ngxs_plugins",{"_index":459,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["ngxsmodule",{"_index":460,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxsmodule.forfeature",{"_index":477,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxsnextpluginfn",{"_index":635,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxsoninit",{"_index":337,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsoninit(ctx",{"_index":355,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsplugin",{"_index":645,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["node",{"_index":709,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["non",{"_index":777,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notice",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":661,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":222,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":784,"title":{},"body":{"index.html":{}}}],["object",{"_index":208,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.values(formats).filter(hasdata",{"_index":329,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["objects",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":27,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["operations",{"_index":749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":455,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["organ",{"_index":175,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["organs",{"_index":354,"title":{},"body":{"injectables/DownloadState.html":{}}}],["out",{"_index":795,"title":{},"body":{"overview.html":{}}}],["over",{"_index":772,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":793,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":726,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":66,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["parameters",{"_index":127,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partners",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchstate",{"_index":74,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["path",{"_index":409,"title":{},"body":{"injectables/DownloadState.html":{}}}],["path.split('/').filter((seg",{"_index":413,"title":{},"body":{"injectables/DownloadState.html":{}}}],["payload",{"_index":685,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["peer",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["performs",{"_index":747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe(tap",{"_index":84,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["plugin",{"_index":466,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["plugin.service.ts",{"_index":632,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["plugin.service.ts:51",{"_index":636,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["plugin/default",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin/state",{"_index":631,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png_format",{"_index":367,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["portal",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primitive",{"_index":649,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["primitive_types",{"_index":651,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["primitive_types.includes(typeof",{"_index":662,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["private",{"_index":259,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["produce",{"_index":365,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["produce((draft",{"_index":379,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["product",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productlogourl",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producttitle",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":723,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["provide",{"_index":478,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":667,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":643,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":454,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["provides",{"_index":447,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":473,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["read",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":178,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["record",{"_index":708,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["references",{"_index":622,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["refs",{"_index":39,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/SourceRefsSelectors.html":{}}}],["refs.actions",{"_index":628,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.actions.ts",{"_index":537,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["refs.actions.ts:10",{"_index":538,"title":{},"body":{"classes/Load-4.html":{}}}],["refs.selectors.ts",{"_index":615,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.selectors.ts:9",{"_index":621,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state",{"_index":623,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state.ts",{"_index":625,"title":{},"body":{"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["refs.state.ts:27",{"_index":626,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.state.ts:35",{"_index":627,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs/source",{"_index":536,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["regarding",{"_index":589,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["register",{"_index":161,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["registerformat",{"_index":163,"title":{"classes/RegisterFormat.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["registerformat(ctx",{"_index":360,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(png_format",{"_index":377,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(svg_format",{"_index":376,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registry",{"_index":89,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{}}}],["releases/v1.4/docs/2d",{"_index":95,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["representing",{"_index":198,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["required",{"_index":219,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":42,"title":{"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"overview.html":{}}}],["reset(undefined",{"_index":142,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["resets",{"_index":252,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{}}}],["resource",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetype",{"_index":442,"title":{},"body":{"injectables/DownloadState.html":{}}}],["result",{"_index":497,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["result$.pipe",{"_index":498,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["results",{"_index":112,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retreiving",{"_index":702,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["retrieves",{"_index":760,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":77,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["returns",{"_index":68,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":668,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rowbyid",{"_index":766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rows",{"_index":206,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":788,"title":{},"body":{"index.html":{}}}],["running",{"_index":785,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":29,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["save",{"_index":435,"title":{},"body":{"injectables/DownloadState.html":{}}}],["schema",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":462,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"miscellaneous/variables.html":{}}}],["screenmode",{"_index":586,"title":{},"body":{"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["screenmodeaction.set",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screenmodemodel",{"_index":548,"title":{"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screenmodeselectors",{"_index":561,"title":{"classes/ScreenModeSelectors.html":{}},"body":{"classes/ScreenModeSelectors.html":{}}}],["screenmodestate",{"_index":461,"title":{"injectables/ScreenModeState.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screensizenoticecontent",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seg",{"_index":414,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments",{"_index":412,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments.length",{"_index":415,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments[segments.length",{"_index":417,"title":{},"body":{"injectables/DownloadState.html":{}}}],["selected",{"_index":485,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["selectedformat",{"_index":182,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{}}}],["selectedonclick",{"_index":286,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selectedonclicked",{"_index":506,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonclicked(undefined",{"_index":511,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonhover",{"_index":283,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selectedonhovered",{"_index":507,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonhovered(undefined",{"_index":513,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selection",{"_index":58,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selections",{"_index":103,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["selector",{"_index":133,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["selector(['activeftustate",{"_index":123,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector(['cellsummarystate",{"_index":231,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector(['downloadstate",{"_index":323,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["selector(['illustratorstate",{"_index":509,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector(['screenmodestate",{"_index":564,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["selector(['sourcerefsstate",{"_index":620,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector(['tissuelibrarystate",{"_index":706,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selector([activeftustate",{"_index":135,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector([cellsummarystate",{"_index":237,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector([downloadstate",{"_index":326,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["selector([illustratorstate",{"_index":518,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector([screenmodestate",{"_index":572,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["selector([sourcerefsstate",{"_index":624,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector([tissuelibrarystate",{"_index":713,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selectors",{"_index":117,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{}}}],["send",{"_index":309,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sending",{"_index":298,"title":{},"body":{"injectables/ContactState.html":{}}}],["sendmessage",{"_index":302,"title":{"classes/SendMessage.html":{}},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sendmessage(_ctx",{"_index":303,"title":{},"body":{"injectables/ContactState.html":{}}}],["sends",{"_index":592,"title":{},"body":{"classes/SendMessage.html":{}}}],["serialize",{"_index":656,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["serialize(this",{"_index":694,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serialized",{"_index":693,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serializes",{"_index":690,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["service",{"_index":172,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["set",{"_index":131,"title":{"classes/Set.html":{}},"body":{"classes/ActiveFtuSelectors.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["set(inject(loggable_actions).map(getactiontypefrominstance",{"_index":676,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["set(undefined",{"_index":578,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["setactive",{"_index":716,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["setactive(ctx",{"_index":717,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["setclicked",{"_index":284,"title":{"classes/SetClicked.html":{}},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["setclicked(undefined",{"_index":523,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["sethover",{"_index":279,"title":{"classes/SetHover.html":{}},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["sethover(undefined",{"_index":525,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["setillustrationurl",{"_index":43,"title":{"classes/SetIllustrationUrl.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["setillustrationurl(iri",{"_index":83,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["setillustrationurl(undefined",{"_index":144,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["sets",{"_index":277,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["setsize",{"_index":577,"title":{"classes/SetSize.html":{}},"body":{"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["setsize(undefined",{"_index":582,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["setstate",{"_index":503,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["setting",{"_index":673,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["show",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["single",{"_index":199,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":211,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"miscellaneous/variables.html":{}}}],["size(state",{"_index":567,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["sizelegend",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sizelegendinfo",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["small",{"_index":555,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["small/large",{"_index":604,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["sourcereference",{"_index":619,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences",{"_index":617,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences(refs",{"_index":618,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsactions",{"_index":37,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.load(iri",{"_index":82,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.reset",{"_index":110,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsselectors",{"_index":614,"title":{"classes/SourceRefsSelectors.html":{}},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsstate",{"_index":38,"title":{"injectables/SourceRefsState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcerefstate",{"_index":616,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["specified",{"_index":351,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["src/.../active",{"_index":802,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../builtin",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cell",{"_index":735,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.action.ts",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.model.ts",{"_index":737,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../illustrator.actions.ts",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../illustrator.state.ts",{"_index":803,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../link",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../source",{"_index":804,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../state",{"_index":744,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":805,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/active",{"_index":6,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cell",{"_index":184,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.actions.ts",{"_index":591,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.actions.ts:5",{"_index":597,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.state.ts",{"_index":294,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/contact/contact.state.ts:16",{"_index":305,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/download/builtin",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts",{"_index":147,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts:11",{"_index":547,"title":{},"body":{"classes/RegisterFormat.html":{}}}],["src/lib/download/download.action.ts:24",{"_index":533,"title":{},"body":{"classes/Load-3.html":{}}}],["src/lib/download/download.action.ts:37",{"_index":153,"title":{},"body":{"classes/AddEntry.html":{}}}],["src/lib/download/download.action.ts:52",{"_index":316,"title":{},"body":{"classes/Download.html":{}}}],["src/lib/download/download.model.ts",{"_index":779,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.selectors.ts",{"_index":318,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.selectors.ts:15",{"_index":324,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.state.ts",{"_index":330,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:113",{"_index":349,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:40",{"_index":356,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:50",{"_index":362,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:65",{"_index":353,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:86",{"_index":341,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:99",{"_index":345,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/illustrator/illustrator.actions.ts",{"_index":273,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/variables.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:10",{"_index":531,"title":{},"body":{"classes/Load-2.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:20",{"_index":610,"title":{},"body":{"classes/SetHover.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:30",{"_index":608,"title":{},"body":{"classes/SetClicked.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts",{"_index":505,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:13",{"_index":516,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:21",{"_index":514,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:29",{"_index":512,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:37",{"_index":510,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.state.ts",{"_index":484,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/illustrator/illustrator.state.ts:46",{"_index":521,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:59",{"_index":526,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:67",{"_index":524,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:75",{"_index":520,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:83",{"_index":522,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/link",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/resource",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/screen",{"_index":549,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["src/lib/source",{"_index":535,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state",{"_index":630,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state.module.ts",{"_index":446,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["src/lib/state.module.ts:47",{"_index":451,"title":{},"body":{"modules/HraStateModule.html":{}}}],["src/lib/tissue",{"_index":541,"title":{},"body":{"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":782,"title":{"index.html":{}},"body":{}}],["state",{"_index":24,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.aggregates",{"_index":238,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state.isfullscreen",{"_index":573,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["state.nodes",{"_index":714,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["state.size",{"_index":574,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["state.summaries",{"_index":239,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state_logger_provider",{"_index":699,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["stateanalyticspluginservice",{"_index":464,"title":{"injectables/StateAnalyticsPluginService.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["statecontext",{"_index":25,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["states",{"_index":106,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["static",{"_index":119,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["store",{"_index":290,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["stores",{"_index":246,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["storing",{"_index":576,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["string",{"_index":220,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":216,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["submitted",{"_index":594,"title":{},"body":{"classes/SendMessage.html":{}}}],["submitting",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summaries",{"_index":189,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summaries(state",{"_index":233,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summaries.map(computeaggregate",{"_index":264,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary",{"_index":33,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"miscellaneous/functions.html":{}}}],["summary.actions",{"_index":256,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.actions.ts",{"_index":287,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["summary.actions.ts:8",{"_index":529,"title":{},"body":{"classes/Load-1.html":{}}}],["summary.helpers",{"_index":258,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.helpers.ts",{"_index":736,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary.model",{"_index":235,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summary.model.ts",{"_index":186,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summary.selectors.ts",{"_index":229,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:10",{"_index":232,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:16",{"_index":234,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state",{"_index":236,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state.ts",{"_index":240,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:27",{"_index":247,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:38",{"_index":245,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:48",{"_index":251,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary/cell",{"_index":185,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summing",{"_index":773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["super",{"_index":169,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["svg",{"_index":333,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["svg_format",{"_index":368,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":389,"title":{},"body":{"injectables/DownloadState.html":{}}}],["switchmap",{"_index":255,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["takes",{"_index":746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tap",{"_index":28,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["tap((items",{"_index":382,"title":{},"body":{"injectables/DownloadState.html":{}}}],["tap((result",{"_index":499,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["tap((summaries",{"_index":263,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["test",{"_index":789,"title":{},"body":{"index.html":{}}}],["tests",{"_index":787,"title":{},"body":{"index.html":{}}}],["text",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.contact.sendmessage(message",{"_index":314,"title":{},"body":{"injectables/ContactState.html":{}}}],["this.dataservice.getcellsummaries(iri).pipe",{"_index":262,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.dataservice.getdatafilereferences(iri).pipe",{"_index":381,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.dataservice.getillustrationmapping(iri",{"_index":496,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getillustrationurl(iri",{"_index":495,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getsourcereferences(iri).pipe(tap(setstate",{"_index":629,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["this.dataservice.gettissuelibrary().pipe(tap((data",{"_index":724,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["this.downloaddata(data",{"_index":396,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloaddata(new",{"_index":397,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloadremotedata(entry.url).pipe(tap((data",{"_index":395,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.ga.event(type",{"_index":688,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.guessfilename(ctx",{"_index":393,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.http.get(url",{"_index":441,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.logaction(action",{"_index":677,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.loggabletypes.has(type",{"_index":684,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.serialize",{"_index":687,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["throw",{"_index":400,"title":{},"body":{"injectables/DownloadState.html":{}}}],["tissedata",{"_index":710,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissue",{"_index":468,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrary",{"_index":545,"title":{},"body":{"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarycontext",{"_index":718,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarymodel",{"_index":705,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryselectors",{"_index":700,"title":{"classes/TissueLibrarySelectors.html":{}},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissuelibraryservice",{"_index":722,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["tissuelibrarystate",{"_index":467,"title":{"injectables/TissueLibraryState.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["tissues",{"_index":703,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissues(state",{"_index":704,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["title",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["together",{"_index":494,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["toggle",{"_index":605,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["token",{"_index":474,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tooltip",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transform((id",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformed",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigerred",{"_index":680,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["true",{"_index":72,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":215,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":217,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":800,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":695,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["types",{"_index":650,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["types.ts",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/cdk/state",{"_index":51,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["ui/services",{"_index":22,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["uncompleted",{"_index":250,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["undefined",{"_index":105,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["union",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":786,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":639,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["up",{"_index":774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update",{"_index":600,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["updates",{"_index":581,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["url",{"_index":67,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["url(undefined",{"_index":515,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["url(url",{"_index":410,"title":{},"body":{"injectables/DownloadState.html":{}}}],["used",{"_index":331,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":479,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":336,"title":{},"body":{"injectables/DownloadState.html":{},"classes/SendMessage.html":{}}}],["uses",{"_index":308,"title":{},"body":{"injectables/ContactState.html":{}}}],["using",{"_index":300,"title":{},"body":{"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["value",{"_index":569,"title":{},"body":{"classes/ScreenModeSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.every(isprimitive",{"_index":697,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["variable",{"_index":312,"title":{},"body":{"injectables/ContactState.html":{}}}],["variables",{"_index":820,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":798,"title":{},"body":{"properties.html":{}}}],["visibility",{"_index":560,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["void",{"_index":69,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["web",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wheather",{"_index":557,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["whether",{"_index":553,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["window.url.createobjecturl(blob",{"_index":425,"title":{},"body":{"injectables/DownloadState.html":{}}}],["window.url.revokeobjecturl(url",{"_index":433,"title":{},"body":{"injectables/DownloadState.html":{}}}],["without",{"_index":402,"title":{},"body":{"injectables/DownloadState.html":{}}}],["z",{"_index":196,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.discriminatedunion('type",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":202,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["z.literal('data",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal('url",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().nonnegative",{"_index":213,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.number().optional()]).rest(aggregate_cell.optional",{"_index":224,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":212,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.record(download_format_id",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":225,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":226,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.tuple([z.string",{"_index":223,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":197,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":794,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActiveFtuModel.html":{"url":"interfaces/ActiveFtuModel.html","title":"interface - ActiveFtuModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveFtuModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for ActiveFtuModel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            iri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iri:     Iri\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Iri\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Iri for the current Ftu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions, CellSummaryState } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset, SetIllustrationUrl } from './active-ftu.actions';\nimport { DownloadActions, DownloadState } from '../download';\nimport { LinkRegistryActions, LinkType } from '@hra-ui/cdk/state';\nimport { Illustration } from '../link-ids';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [CellSummaryState, DownloadState, IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new DownloadActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n        new SetIllustrationUrl(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * This Action computes the url and dispatches the LinkRegistry Action to add\n   * the link to the registry for navigation\n   */\n  @Action(SetIllustrationUrl)\n  setIllustrationUrl({ dispatch }: Context, { iri }: SetIllustrationUrl): Observable | void {\n    const BASE_URL = 'https://hubmapconsortium.github.io/ccf-releases/v1.4/docs/2d-ftu/';\n    const [name] = iri.split('/').slice(-1);\n    const url = `${BASE_URL}2d-ftu-${name}.html`;\n    return dispatch(new LinkRegistryActions.Add(Illustration, { type: LinkType.External, url }));\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to reset the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([\n      new CellSummaryActions.Reset(),\n      new IllustratorActions.Reset(),\n      new SourceRefsActions.Reset(),\n      new DownloadActions.ClearEntries(),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActiveFtuSelectors.html":{"url":"classes/ActiveFtuSelectors.html","title":"class - ActiveFtuSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActiveFtuSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for ActiveftuState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                iri\n                            \n                            \n                                    Static\n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        iri\n                        \n                    \n                \n            \n            \n                \n                    \n                    iri(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:15\n                \n            \n\n\n            \n                \n                    gets the iri from the ActiveFtuModel\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Iri | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:9\n                \n            \n\n\n            \n                \n                    checks if the Iri is set\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { ActiveFtuModel, ActiveFtuState } from './active-ftu.state';\n\n/** selectors for ActiveftuState */\nexport class ActiveFtuSelectors {\n  /** checks if the Iri is set */\n  @Selector([ActiveFtuState])\n  static isActive({ iri }: ActiveFtuModel): boolean {\n    return iri !== undefined;\n  }\n\n  /** gets the iri from the ActiveFtuModel */\n  @Selector([ActiveFtuState])\n  static iri({ iri }: ActiveFtuModel): Iri | undefined {\n    return iri;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActiveFtuState.html":{"url":"injectables/ActiveFtuState.html","title":"injectable - ActiveFtuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActiveFtuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle active FTU selection\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                            \n                                setIllustrationUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(['Clear', 'Reset'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:67\n                \n            \n\n\n            \n                \n                    Action to clear the iri selections\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:39\n                \n            \n\n\n            \n                \n                    loads the Cell summary, Illustrator and Source Refs\nwith the current iri\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        load An observable of void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:76\n                \n            \n\n\n            \n                \n                    Action to reset the states for\nCell summary, Illustrator and Source Refs\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIllustrationUrl\n                        \n                    \n                \n            \n            \n                \nsetIllustrationUrl(undefined: Context, undefined: SetIllustrationUrl)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetIllustrationUrl)\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:56\n                \n            \n\n\n            \n                \n                    This Action computes the url and dispatches the LinkRegistry Action to add\nthe link to the registry for navigation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetIllustrationUrl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions, CellSummaryState } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset, SetIllustrationUrl } from './active-ftu.actions';\nimport { DownloadActions, DownloadState } from '../download';\nimport { LinkRegistryActions, LinkType } from '@hra-ui/cdk/state';\nimport { Illustration } from '../link-ids';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [CellSummaryState, DownloadState, IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new DownloadActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n        new SetIllustrationUrl(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * This Action computes the url and dispatches the LinkRegistry Action to add\n   * the link to the registry for navigation\n   */\n  @Action(SetIllustrationUrl)\n  setIllustrationUrl({ dispatch }: Context, { iri }: SetIllustrationUrl): Observable | void {\n    const BASE_URL = 'https://hubmapconsortium.github.io/ccf-releases/v1.4/docs/2d-ftu/';\n    const [name] = iri.split('/').slice(-1);\n    const url = `${BASE_URL}2d-ftu-${name}.html`;\n    return dispatch(new LinkRegistryActions.Add(Illustration, { type: LinkType.External, url }));\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to reset the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([\n      new CellSummaryActions.Reset(),\n      new IllustratorActions.Reset(),\n      new SourceRefsActions.Reset(),\n      new DownloadActions.ClearEntries(),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddEntry.html":{"url":"classes/AddEntry.html","title":"class - AddEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Add entry into download state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: DownloadFormatId, entry: DownloadEntry)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor for Addd Entry\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        DownloadEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CellSummaryModel.html":{"url":"interfaces/CellSummaryModel.html","title":"interface - CellSummaryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CellSummaryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.model.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface of the Cell summary model\nhaving the summaries and aggregrates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aggregates\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aggregates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggregates:         CellSummaryAggregate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CellSummaryAggregate[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of aggregates of the Cell Summary\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:     CellSummary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CellSummary[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of summaries of the Cell Summary\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CellSummary, FtuDataSchemas } from '@hra-ui/services';\nimport { StateContext } from '@ngxs/store';\nimport { z } from 'zod';\n\n/** Type representing a single AGGREGATE_ROW */\nexport type CellSummaryAggregateRow = z.infer;\n\n/** Type representing AGGREGATE having label, columns and rows */\nexport type CellSummaryAggregate = z.infer;\n\n/**\n * An interface of the Cell summary model\n * having the summaries and aggregrates\n */\nexport interface CellSummaryModel {\n  /** Array of summaries of the Cell Summary */\n  summaries: CellSummary[];\n  /** Array of aggregates of the Cell Summary */\n  aggregates: CellSummaryAggregate[];\n}\n\nexport type Context = StateContext;\n\n/**\n * The AGGREGATE_CELL is an object that contains the color, size and\n * the data\n */\nconst AGGREGATE_CELL = z.object({\n  color: z.number().nonnegative(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n});\n\n/**\n * The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\n * a required string followed by an optional number\n */\nconst AGGREGATE_ROW = z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional());\n\n/**\n * The AGGREGATE is an object that contains the label, columns\n * and rows */\nconst AGGREGATE = z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellSummarySelectors.html":{"url":"classes/CellSummarySelectors.html","title":"class - CellSummarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellSummarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for the CellSummary state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                aggregates\n                            \n                            \n                                    Static\n                                summaries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        aggregates\n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregates(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:10\n                \n            \n\n\n            \n                \n                    get the aggregate data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        summaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    summaries(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:16\n                \n            \n\n\n            \n                \n                    get the summaries data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CellSummary[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { CellSummary } from '@hra-ui/services';\nimport { CellSummaryModel, CellSummaryAggregate } from './cell-summary.model';\nimport { CellSummaryState } from './cell-summary.state';\n\n/** selectors for the CellSummary state */\nexport class CellSummarySelectors {\n  /** get the aggregate data from the state */\n  @Selector([CellSummaryState])\n  static aggregates(state: CellSummaryModel): CellSummaryAggregate[] {\n    return state.aggregates;\n  }\n\n  /** get the summaries data from the state */\n  @Selector([CellSummaryState])\n  static summaries(state: CellSummaryModel): CellSummary[] {\n    return state.summaries;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CellSummaryState.html":{"url":"injectables/CellSummaryState.html","title":"injectable - CellSummaryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CellSummaryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling cell summary data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeAggregates\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        computeAggregates\n                        \n                    \n                \n            \n            \n                \ncomputeAggregates(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ComputeAggregates)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:38\n                \n            \n\n\n            \n                \n                    computes aggregate data and stores in the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the cell summary data and aggregrated of the current Iri into\nthe state and cancels uncompleted action if any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:48\n                \n            \n\n\n            \n                \n                    Resets the summaries and aggregates for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { ComputeAggregates, Load, Reset } from './cell-summary.actions';\nimport { computeAggregate } from './cell-summary.helpers';\nimport { CellSummaryModel, Context } from './cell-summary.model';\n\n/** State handling cell summary data */\n@State({\n  name: 'cellSummary',\n  defaults: {\n    summaries: [],\n    aggregates: [],\n  },\n})\n@Injectable()\nexport class CellSummaryState {\n  /** Data service to load the FTU data */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the cell summary data and aggregrated of the current Iri into\n   * the state and cancels uncompleted action if any\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState, dispatch }: Context, { iri }: Load): Observable {\n    return this.dataService.getCellSummaries(iri).pipe(\n      tap((summaries) => patchState({ summaries, aggregates: [] })),\n      switchMap(() => dispatch(new ComputeAggregates()))\n    );\n  }\n\n  /**\n   * computes aggregate data and stores in the current state\n   */\n  @Action(ComputeAggregates)\n  computeAggregates({ getState, patchState }: Context): void {\n    const { summaries } = getState();\n    const aggregates = summaries.map(computeAggregate);\n    patchState({ aggregates });\n  }\n\n  /**\n   * Resets the summaries and aggregates for the current state\n   */\n  @Action(Reset)\n  reset({ patchState }: Context): void {\n    patchState({ summaries: [], aggregates: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clear.html":{"url":"classes/Clear.html","title":"class - Clear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the Iri\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearEntries.html":{"url":"classes/ClearEntries.html","title":"class - ClearEntries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearEntries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Clear all entries from download state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelection.html":{"url":"classes/ClearSelection.html","title":"class - ClearSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the selection for the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComputeAggregates.html":{"url":"classes/ComputeAggregates.html","title":"class - ComputeAggregates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComputeAggregates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Compute aggregate of the given data and store to state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactState.html":{"url":"injectables/ContactState.html","title":"injectable - ContactState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact'\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(_ctx: StateContext, undefined: SendMessage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SendMessage)\n                \n            \n\n            \n                \n                    Defined in src/lib/contact/contact.state.ts:16\n                \n            \n\n\n            \n                \n                    An action method for sending a message. It uses SendMessage action class to send messages.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SendMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { ContactService } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SendMessage } from './contact.actions';\n\n/** A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact' */\n@State({ name: 'contact' })\n@Injectable()\nexport class ContactState {\n  /** A variable to inject the ContactService */\n  private readonly contact = inject(ContactService);\n\n  /** An action method for sending a message. It uses SendMessage action class to send messages. */\n  @Action(SendMessage)\n  sendMessage(_ctx: StateContext, { message }: SendMessage): Observable | void {\n    return this.contact.sendMessage(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Download.html":{"url":"classes/Download.html","title":"class - Download","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Download\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Download file Action\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormatId)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:52\n                            \n                        \n\n                \n                    \n                            Creates an instance of download.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DownloadSelectors.html":{"url":"classes/DownloadSelectors.html","title":"class - DownloadSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Available format selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                formats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        formats\n                        \n                    \n                \n            \n            \n                \n                    \n                    formats(state: DownloadModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['DownloadState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.selectors.ts:15\n                \n            \n\n\n            \n                \n                    Selectors available format for download selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                DownloadModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormat[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { DownloadFormat, DownloadModel } from './download.model';\nimport { DownloadState } from './download.state';\n\n/**\n * Available format selectors\n */\nexport class DownloadSelectors {\n  /**\n   * Selectors available format for download selectors\n   * @param state\n   * @returns\n   */\n  @Selector([DownloadState])\n  static formats(state: DownloadModel): DownloadFormat[] {\n    const { formats, entries } = state;\n    const hasData = (format: DownloadFormat | undefined): format is DownloadFormat =>\n      !!(format && format.id in entries);\n    return Object.values(formats).filter(hasData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DownloadState.html":{"url":"injectables/DownloadState.html","title":"injectable - DownloadState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DownloadState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Download State Model used to convert\nfile from SVG file content to different\nformat and download to user.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEntry\n                            \n                            \n                                clearEntries\n                            \n                            \n                                download\n                            \n                            \n                                load\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                registerFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEntry\n                        \n                    \n                \n            \n            \n                \naddEntry(ctx: DownloadContext, undefined: AddEntry)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddEntry)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:86\n                \n            \n\n\n            \n                \n                    Add entry into download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                AddEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearEntries\n                        \n                    \n                \n            \n            \n                \nclearEntries(ctx: DownloadContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearEntries)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:99\n                \n            \n\n\n            \n                \n                    Clear entires from download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        download\n                        \n                    \n                \n            \n            \n                \ndownload(ctx: DownloadContext, undefined: Download)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Download)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:113\n                \n            \n\n\n            \n                \n                    Actions download file in specified format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Download\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(ctx: DownloadContext, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:65\n                \n            \n\n\n            \n                \n                    Action to add the Organs IRI from the data service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Context\n\n                                    \n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: DownloadContext)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/download/download.state.ts:40\n                \n            \n\n\n            \n                \n                    Ngxs on init and registry default format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFormat\n                        \n                    \n                \n            \n            \n                \nregisterFormat(ctx: DownloadContext, undefined: RegisterFormat)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RegisterFormat)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:50\n                \n            \n\n\n            \n                \n                    Actions register format in Download State\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                RegisterFormat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, NgxsOnInit, State } from '@ngxs/store';\nimport produce from 'immer';\nimport { Observable, tap } from 'rxjs';\n\nimport { FtuDataService, Iri } from '@hra-ui/services';\nimport { PNG_FORMAT, SVG_FORMAT } from './builtin-formats';\nimport { AddEntry, ClearEntries, Download, Load, RegisterFormat } from './download.action';\nimport { createDownloadFormatId, DownloadContext, DownloadFormatId, DownloadModel } from './download.model';\n\n/**\n * Download State Model used to convert\n * file from SVG file content to different\n * format and download to user.\n */\n@State({\n  name: 'download',\n  defaults: {\n    formats: {},\n    entries: {},\n  },\n})\n@Injectable()\nexport class DownloadState implements NgxsOnInit {\n  /**\n   * Http object inject for download state\n   */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Data service of download state\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Ngxs on init and registry default format\n   * @param ctx\n   */\n  ngxsOnInit(ctx: DownloadContext): void {\n    ctx.dispatch([new RegisterFormat(SVG_FORMAT), new RegisterFormat(PNG_FORMAT)]);\n  }\n\n  /**\n   * Actions register format in Download State\n   * @param ctx\n   * @param { format }\n   */\n  @Action(RegisterFormat)\n  registerFormat(ctx: DownloadContext, { format }: RegisterFormat): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.formats[format.id] = format;\n      })\n    );\n  }\n\n  /**\n   * Action to add the Organs IRI from the data service\n   * @param ctx Context\n   * @param iri Organ Data\n   * @returns\n   */\n  @Action(Load)\n  load(ctx: DownloadContext, { iri }: Load): Observable {\n    return this.dataService.getDataFileReferences(iri).pipe(\n      tap((items) =>\n        ctx.setState(\n          produce((draft) => {\n            draft.entries = {};\n            for (const { format, url } of items) {\n              draft.entries[createDownloadFormatId(format)] = { type: 'url', url };\n            }\n          })\n        )\n      )\n    );\n  }\n\n  /**\n   * Add entry into download state\n   * @param ctx\n   * @param { id, entry }\n   */\n  @Action(AddEntry)\n  addEntry(ctx: DownloadContext, { id, entry }: AddEntry): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries[id] = entry;\n      })\n    );\n  }\n\n  /**\n   * Clear entires from download state\n   * @param ctx\n   */\n  @Action(ClearEntries)\n  clearEntries(ctx: DownloadContext): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries = {};\n      })\n    );\n  }\n\n  /**\n   * Actions download file in specified format\n   * @param ctx\n   * @param action\n   */\n  @Action(Download)\n  download(ctx: DownloadContext, { format }: Download): Observable | void {\n    const { entries } = ctx.getState();\n    const entry = entries[format];\n    switch (entry?.type) {\n      case 'url': {\n        const filename = this.guessFilename(ctx, format, entry.url);\n        return this.downloadRemoteData(entry.url).pipe(tap((data) => this.downloadData(data, filename)));\n      }\n\n      case 'data': {\n        const filename = this.guessFilename(ctx, format, '');\n        this.downloadData(new Blob([entry.data]), filename);\n        break;\n      }\n\n      default:\n        throw new Error('Cannot download file without data');\n    }\n  }\n\n  /**\n   * Guess filename\n   * @param ctx\n   * @param id\n   * @param url\n   * @returns filename\n   */\n  private guessFilename(ctx: DownloadContext, id: DownloadFormatId, url: string): string {\n    const { formats } = ctx.getState();\n    const { extension = '' } = formats[id] ?? {};\n    const fakeBase = 'https://base.com';\n    const path = new URL(url, fakeBase).pathname;\n    const segments = path.split('/').filter((seg) => seg !== '');\n    const name = segments.length > 0 ? segments[segments.length - 1] : 'download';\n    const guess = name.includes('.') ? name : `${name}${extension}`;\n\n    return guess;\n  }\n\n  /**\n   * Download converted formatted file to browser\n   * @param blob\n   * @param fileName\n   */\n  private downloadData(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n    anchor.download = filename;\n    anchor.href = url;\n    anchor.click();\n    anchor.remove();\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Downloads and save -  method is used to direct fetch file\n   * if available on url without conversion\n   * @param fileUrl\n   * @param fileName\n   */\n  private downloadRemoteData(url: string): Observable {\n    return this.http.get(url, { responseType: 'blob' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraStateModule.html":{"url":"modules/HraStateModule.html","title":"module - HraStateModule","body":"\n                   \n\n\n\n\n    Modules\n    HraStateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/state.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Provides all states\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: HraStateModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state.module.ts:47\n                \n            \n\n\n            \n                \n                    Static method for configuring the module\nReturns a configuration object with the module and the providers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HraStateModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, importProvidersFrom } from '@angular/core';\nimport { NGXS_PLUGINS, NgxsModule } from '@ngxs/store';\nimport { ActiveFtuState } from './active-ftu';\nimport { CellSummaryState } from './cell-summary';\nimport { ContactState } from './contact';\nimport { DownloadState } from './download';\nimport { IllustratorState } from './illustrator';\nimport { ScreenModeState } from './screen-mode';\nimport { SourceRefsState } from './source-refs';\nimport { StateAnalyticsPluginService } from './state-analytics-plugin';\nimport { TissueLibraryState } from './tissue-library';\nimport { NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\n/** Interface for providing options for the hra state module */\nexport interface HraStateModuleOptions {\n  /** token string for google analytics*/\n  googleAnalyticsToken: string;\n}\n\n/** Provides all states */\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([\n      ActiveFtuState,\n      CellSummaryState,\n      ContactState,\n      DownloadState,\n      IllustratorState,\n      ScreenModeState,\n      SourceRefsState,\n      TissueLibraryState,\n    ]),\n    NgxGoogleAnalyticsModule,\n  ],\n  providers: [\n    {\n      provide: NGXS_PLUGINS,\n      useExisting: StateAnalyticsPluginService,\n      multi: true,\n    },\n  ],\n})\nexport class HraStateModule {\n  /** Static method for configuring the module\n   * Returns a configuration object with the module and the providers\n   */\n  static forRoot(options: HraStateModuleOptions): ModuleWithProviders {\n    const analyticsProviders = importProvidersFrom(NgxGoogleAnalyticsModule.forRoot(options.googleAnalyticsToken));\n    return {\n      ngModule: HraStateModule,\n      providers: [analyticsProviders],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HraStateModuleOptions.html":{"url":"interfaces/HraStateModuleOptions.html","title":"interface - HraStateModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HraStateModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for providing options for the hra state module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            googleAnalyticsToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        googleAnalyticsToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        googleAnalyticsToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    token string for google analytics\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ModuleWithProviders, NgModule, importProvidersFrom } from '@angular/core';\nimport { NGXS_PLUGINS, NgxsModule } from '@ngxs/store';\nimport { ActiveFtuState } from './active-ftu';\nimport { CellSummaryState } from './cell-summary';\nimport { ContactState } from './contact';\nimport { DownloadState } from './download';\nimport { IllustratorState } from './illustrator';\nimport { ScreenModeState } from './screen-mode';\nimport { SourceRefsState } from './source-refs';\nimport { StateAnalyticsPluginService } from './state-analytics-plugin';\nimport { TissueLibraryState } from './tissue-library';\nimport { NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\n/** Interface for providing options for the hra state module */\nexport interface HraStateModuleOptions {\n  /** token string for google analytics*/\n  googleAnalyticsToken: string;\n}\n\n/** Provides all states */\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([\n      ActiveFtuState,\n      CellSummaryState,\n      ContactState,\n      DownloadState,\n      IllustratorState,\n      ScreenModeState,\n      SourceRefsState,\n      TissueLibraryState,\n    ]),\n    NgxGoogleAnalyticsModule,\n  ],\n  providers: [\n    {\n      provide: NGXS_PLUGINS,\n      useExisting: StateAnalyticsPluginService,\n      multi: true,\n    },\n  ],\n})\nexport class HraStateModule {\n  /** Static method for configuring the module\n   * Returns a configuration object with the module and the providers\n   */\n  static forRoot(options: HraStateModuleOptions): ModuleWithProviders {\n    const analyticsProviders = importProvidersFrom(NgxGoogleAnalyticsModule.forRoot(options.googleAnalyticsToken));\n    return {\n      ngModule: HraStateModule,\n      providers: [analyticsProviders],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IllustratorModel.html":{"url":"interfaces/IllustratorModel.html","title":"interface - IllustratorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IllustratorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the Illustrator Model that contains the url, selected\nand mapping fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mapping\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedOnClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedOnHover\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapping:         IllustrationMappingItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of Illustrartor Items\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOnClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOnClick:         IllustrationMappingItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected Illustrator Item on click\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOnHover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOnHover:         IllustrationMappingItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected Illustrator Item on hover\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Url\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Illustration URL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\nimport { ClearSelection, Load, Reset, SetClicked, SetHover } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url;\n  /** Selected Illustrator Item on hover */\n  selectedOnHover?: IllustrationMappingItem;\n  /** Selected Illustrator Item on click */\n  selectedOnClick?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(\n      tap((result) => patchState({ ...result, selectedOnHover: undefined, selectedOnClick: undefined }))\n    );\n  }\n\n  /**\n   * Sets the current selection to the state for SetHover\n   */\n  @Action(SetHover)\n  SetHover({ patchState }: Context, { selectedOnHover }: SetHover): void {\n    patchState({ selectedOnHover });\n  }\n\n  /**\n   * Sets the current selection to the state for SetClicked\n   */\n  @Action(SetClicked)\n  SetClicked({ patchState }: Context, { selectedOnClick }: SetClicked): void {\n    patchState({ selectedOnClick });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selectedOnHover: undefined, selectedOnClick: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IllustratorSelectors.html":{"url":"classes/IllustratorSelectors.html","title":"class - IllustratorSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IllustratorSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for Medical Illustrators\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapping\n                            \n                            \n                                    Static\n                                selectedOnClicked\n                            \n                            \n                                    Static\n                                selectedOnHovered\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapping(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:37\n                \n            \n\n\n            \n                \n                    Returns the current mapping of the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectedOnClicked\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedOnClicked(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:29\n                \n            \n\n\n            \n                \n                    Returns the selected model of the illustrator on click\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectedOnHovered\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedOnHovered(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:21\n                \n            \n\n\n            \n                \n                    Returns the selected model of the illustrator on hover\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:13\n                \n            \n\n\n            \n                \n                    Returns the url for the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Url | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { IllustratorModel, IllustratorState } from './illustrator.state';\n\n/**\n * Selectors for Medical Illustrators\n */\nexport class IllustratorSelectors {\n  /**\n   * Returns the url for the illustrator\n   */\n  @Selector([IllustratorState])\n  static url({ url }: IllustratorModel): Url | undefined {\n    return url;\n  }\n\n  /**\n   * Returns the selected model of the illustrator on hover\n   */\n  @Selector([IllustratorState])\n  static selectedOnHovered({ selectedOnHover }: IllustratorModel): IllustrationMappingItem | undefined {\n    return selectedOnHover;\n  }\n\n  /**\n   * Returns the selected model of the illustrator on click\n   */\n  @Selector([IllustratorState])\n  static selectedOnClicked({ selectedOnClick }: IllustratorModel): IllustrationMappingItem | undefined {\n    return selectedOnClick;\n  }\n\n  /**\n   * Returns the current mapping of the illustrator\n   */\n  @Selector([IllustratorState])\n  static mapping({ mapping }: IllustratorModel): IllustrationMappingItem[] {\n    return mapping;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IllustratorState.html":{"url":"injectables/IllustratorState.html","title":"injectable - IllustratorState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IllustratorState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling medical illustrators\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSelection\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                            \n                                SetClicked\n                            \n                            \n                                SetHover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearSelection)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:75\n                \n            \n\n\n            \n                \n                    Clears the current selection from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:46\n                \n            \n\n\n            \n                \n                    Loads the current state with the url and mapping.\nThe url and mapping are forked together using forkJoin.\nIt also cancels any uncompleted actions to the state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:83\n                \n            \n\n\n            \n                \n                    Resets the mapping for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetClicked\n                        \n                    \n                \n            \n            \n                \nSetClicked(undefined: Context, undefined: SetClicked)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetClicked)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:67\n                \n            \n\n\n            \n                \n                    Sets the current selection to the state for SetClicked\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetClicked\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetHover\n                        \n                    \n                \n            \n            \n                \nSetHover(undefined: Context, undefined: SetHover)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetHover)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:59\n                \n            \n\n\n            \n                \n                    Sets the current selection to the state for SetHover\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetHover\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\nimport { ClearSelection, Load, Reset, SetClicked, SetHover } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url;\n  /** Selected Illustrator Item on hover */\n  selectedOnHover?: IllustrationMappingItem;\n  /** Selected Illustrator Item on click */\n  selectedOnClick?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(\n      tap((result) => patchState({ ...result, selectedOnHover: undefined, selectedOnClick: undefined }))\n    );\n  }\n\n  /**\n   * Sets the current selection to the state for SetHover\n   */\n  @Action(SetHover)\n  SetHover({ patchState }: Context, { selectedOnHover }: SetHover): void {\n    patchState({ selectedOnHover });\n  }\n\n  /**\n   * Sets the current selection to the state for SetClicked\n   */\n  @Action(SetClicked)\n  SetClicked({ patchState }: Context, { selectedOnClick }: SetClicked): void {\n    patchState({ selectedOnClick });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selectedOnHover: undefined, selectedOnClick: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load.html":{"url":"classes/Load.html","title":"class - Load","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/active-ftu/active-ftu.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Creates an instance of set iri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-1.html":{"url":"classes/Load-1.html","title":"class - Load-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                loads the given Iri to the state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cell-summary/cell-summary.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-2.html":{"url":"classes/Load-2.html","title":"class - Load-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-3.html":{"url":"classes/Load-3.html","title":"class - Load-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to load entries from data service\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:24\n                            \n                        \n\n                \n                    \n                            Creates a action to load from the enteries from the data service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Organ Iri for which the entries are loaded\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-4.html":{"url":"classes/Load-4.html","title":"class - Load-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to load the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-refs/source-refs.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-5.html":{"url":"classes/Load-5.html","title":"class - Load-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                action of loading tissue data into the TissueLibrary state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** action of loading tissue data into the TissueLibrary state */\nexport class Load extends Action('[TissueLibrary] Load Tissue Data') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterFormat.html":{"url":"classes/RegisterFormat.html","title":"class - RegisterFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Register format into state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormat)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:11\n                            \n                        \n\n                \n                    \n                            Creates an instance of register format.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormat\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-1.html":{"url":"classes/Reset-1.html","title":"class - Reset-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-2.html":{"url":"classes/Reset-2.html","title":"class - Reset-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-3.html":{"url":"classes/Reset-3.html","title":"class - Reset-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScreenModeModel.html":{"url":"interfaces/ScreenModeModel.html","title":"interface - ScreenModeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScreenModeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isFullScreen\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isFullScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFullScreen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether in fullscreen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \"small\" | \"large\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"small\" | \"large\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wheather footer should be in small screen mode: Logo visibility\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ScreenModeModel {\n  /** Whether in fullscreen */\n  isFullScreen: boolean;\n\n  /** Wheather footer should be in small screen mode: Logo visibility */\n  size: 'small' | 'large';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScreenModeSelectors.html":{"url":"classes/ScreenModeSelectors.html","title":"class - ScreenModeSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScreenModeSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isFullScreen\n                            \n                            \n                                    Static\n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFullScreen\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFullScreen(state: ScreenModeModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ScreenModeState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.selectors.ts:15\n                \n            \n\n\n            \n                \n                    Selectors screen mode selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ScreenModeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if full screen\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        size\n                        \n                    \n                \n            \n            \n                \n                    \n                    size(state: ScreenModeModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ScreenModeState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.selectors.ts:24\n                \n            \n\n\n            \n                \n                    Selectors screen mode selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ScreenModeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"small\" | \"large\"\n\n                    \n                    \n                        size of value 'small' | 'large'\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { ScreenModeModel } from './screen-mode.model';\nimport { ScreenModeState } from './screen-mode.state';\n\n/**\n * Screen mode selectors\n */\nexport class ScreenModeSelectors {\n  /**\n   * Selectors screen mode selectors\n   * @param state\n   * @returns true if full screen\n   */\n  @Selector([ScreenModeState])\n  static isFullScreen(state: ScreenModeModel): boolean {\n    return state.isFullScreen;\n  }\n  /**\n   * Selectors screen mode selectors\n   * @param state\n   * @returns size of value 'small' | 'large'\n   */\n  @Selector([ScreenModeState])\n  static size(state: ScreenModeModel): 'small' | 'large' {\n    return state.size;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenModeState.html":{"url":"injectables/ScreenModeState.html","title":"injectable - ScreenModeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenModeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State storing the screen mode\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                SetSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(undefined: StateContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.state.ts:23\n                \n            \n\n\n            \n                \n                    Updates the screen mode\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetSize\n                        \n                    \n                \n            \n            \n                \nSetSize(undefined: StateContext, undefined: SetSize)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetSize)\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.state.ts:36\n                \n            \n\n\n            \n                \n                    Actions screen mode state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetSize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport produce from 'immer';\nimport { Set, SetSize } from './screen-mode.actions';\nimport { ScreenModeModel } from './screen-mode.model';\n\n/** State storing the screen mode */\n@State({\n  name: 'screenmode',\n  defaults: {\n    isFullScreen: false,\n    size: 'large',\n  },\n})\n@Injectable()\nexport class ScreenModeState {\n  /**\n   * Updates the screen mode\n   * @param ctx State context\n   * @param action Action with new mode\n   */\n  @Action(Set)\n  set({ setState }: StateContext, { isFullScreen }: Set): void {\n    setState(\n      produce((draft: ScreenModeModel) => {\n        draft.isFullScreen = isFullScreen;\n      })\n    );\n  }\n  /**\n   * Actions screen mode state\n   * @param { setState } State Context\n   * @param { size } Action regarding screen\n   */\n  @Action(SetSize)\n  SetSize({ setState }: StateContext, { size }: SetSize): void {\n    setState(\n      produce((draft: ScreenModeModel) => {\n        draft.size = size;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessage.html":{"url":"classes/SendMessage.html","title":"class - SendMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                A class which sends individual messages submitted by user.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: ContactMessage)\n                    \n                \n                        \n                            \n                                Defined in src/lib/contact/contact.actions.ts:5\n                            \n                        \n\n                \n                    \n                            A constructor which initializes the message of type ContactMessage interface.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    ContactMessage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { ContactMessage } from '@hra-ui/services';\n\n/** A class which sends individual messages submitted by user. */\nexport class SendMessage extends Action('[Contact] Send Message') {\n  /** A constructor which initializes the message of type ContactMessage interface. */\n  constructor(readonly message: ContactMessage) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Update the screen mode\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(isFullScreen: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/screen-mode/screen-mode.actions.ts:4\n                            \n                        \n\n                \n                    \n                            Creates an instance of Set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isFullScreen\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the mode is fullscreen\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** Update the screen mode */\nexport class Set extends Action('[Screenmode] Set Screenmode') {\n  /**\n   * Creates an instance of Set\n   * @param isFullScreen Whether the mode is fullscreen\n   */\n  constructor(readonly isFullScreen: boolean) {\n    super();\n  }\n}\n\n/** Update the screen mode */\nexport class SetSize extends Action('[Screenmode] Set Size') {\n  /**\n   * Creates an instance of Set\n   * @param size Whether the mode is small/large to toggle the footer behaviour\n   */\n  constructor(readonly size: 'small' | 'large') {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetClicked.html":{"url":"classes/SetClicked.html","title":"class - SetClicked","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetClicked\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the selection for the Item in the current state on SetClicked\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(selectedOnClick: IllustrationMappingItem)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:30\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedOnClick\n                                                  \n                                                        \n                                                                        IllustrationMappingItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetHover.html":{"url":"classes/SetHover.html","title":"class - SetHover","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetHover\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the selection for the Item in the current state on SetHover\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(selectedOnHover: IllustrationMappingItem)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedOnHover\n                                                  \n                                                        \n                                                                        IllustrationMappingItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetIllustrationUrl.html":{"url":"classes/SetIllustrationUrl.html","title":"class - SetIllustrationUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetIllustrationUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to set the illustration url of the active FTU\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/active-ftu/active-ftu.actions.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of set iri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSize.html":{"url":"classes/SetSize.html","title":"class - SetSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Update the screen mode\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(size: \"small\" | \"large\")\n                    \n                \n                        \n                            \n                                Defined in src/lib/screen-mode/screen-mode.actions.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of Set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                    \"small\" | \"large\"\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the mode is small/large to toggle the footer behaviour\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** Update the screen mode */\nexport class Set extends Action('[Screenmode] Set Screenmode') {\n  /**\n   * Creates an instance of Set\n   * @param isFullScreen Whether the mode is fullscreen\n   */\n  constructor(readonly isFullScreen: boolean) {\n    super();\n  }\n}\n\n/** Update the screen mode */\nexport class SetSize extends Action('[Screenmode] Set Size') {\n  /**\n   * Creates an instance of Set\n   * @param size Whether the mode is small/large to toggle the footer behaviour\n   */\n  constructor(readonly size: 'small' | 'large') {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceRefsSelectors.html":{"url":"classes/SourceRefsSelectors.html","title":"class - SourceRefsSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceRefsSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for SourceRefState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sourceReferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    sourceReferences(refs: SourceReference[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['SourceRefsState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.selectors.ts:9\n                \n            \n\n\n            \n                \n                    returns the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refs\n                                    \n                                            SourceReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SourceReference[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceReference } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { SourceRefsState } from './source-refs.state';\n\n/** Selectors for SourceRefState */\nexport class SourceRefsSelectors {\n  /** returns the source references */\n  @Selector([SourceRefsState])\n  static sourceReferences(refs: SourceReference[]): SourceReference[] {\n    return refs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SourceRefsState.html":{"url":"injectables/SourceRefsState.html","title":"injectable - SourceRefsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SourceRefsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle the source references\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the current state with the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:35\n                \n            \n\n\n            \n                \n                    Resets the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, SourceReference } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load, Reset } from './source-refs.actions';\n\ntype Context = StateContext;\n\n/**\n * State to handle the source references\n */\n@State({\n  name: 'sourceReferences',\n  defaults: [],\n})\n@Injectable()\nexport class SourceRefsState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the source references\n   */\n  @Action(Load)\n  load({ setState }: Context, { iri }: Load): Observable {\n    return this.dataService.getSourceReferences(iri).pipe(tap(setState));\n  }\n\n  /**\n   * Resets the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState([]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateAnalyticsPluginService.html":{"url":"injectables/StateAnalyticsPluginService.html","title":"injectable - StateAnalyticsPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateAnalyticsPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Google Analytics Plugin Injectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(state, action, next: NgxsNextPluginFn)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state-analytics-plugin/state-analytics-plugin.service.ts:51\n                \n            \n\n\n            \n                \n                    Handles logger plugin\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent state of the store with type unknown.\n\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent action being dispatched with type unknown type.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            NgxsNextPluginFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnext plugin to handle the action\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nnext plugin with the current state and action.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, InjectionToken, Provider } from '@angular/core';\nimport { getActionTypeFromInstance, NgxsNextPluginFn, NgxsPlugin, NGXS_PLUGINS } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { DEFAULT_LOGGABLE_ACTIONS } from './default-loggable-actions';\n\n/** Primitive types */\nconst PRIMITIVE_TYPES = ['bigint', 'boolean', 'number', 'string'];\n\n/**\n * Determines whether primitive is\n * @param value is string - used to check the input value from serialize funtion\n * @returns type of value - boolean/number/string/null/bigint/undefined\n */\nfunction isPrimitive(value: unknown): value is bigint | boolean | number | string | null | undefined {\n  return value == null || PRIMITIVE_TYPES.includes(typeof value);\n}\n\n/**\n * Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n */\nexport const LOGGABLE_ACTIONS = new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n});\n\n/**\n * Google Analytics Plugin Injectable\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateAnalyticsPluginService implements NgxsPlugin {\n  /**\n   * Injects the service for state analytics plugin.\n   */\n  private readonly ga = inject(GoogleAnalyticsService);\n\n  /**\n   * Plugin service for logging state analytics\n   * Setting loggable action types from LOGGABLE_ACTIONS dependency.\n   */\n  private readonly loggableTypes = new Set(inject(LOGGABLE_ACTIONS).map(getActionTypeFromInstance));\n\n  /**\n   * Handles logger plugin\n   * @param state -  Current state of the store with type unknown.\n   * @param action - Current action being dispatched with type unknown type.\n   * @param next - next plugin to handle the action\n   * @returns - next plugin with the current state and action.\n   */\n  handle(state: unknown, action: unknown, next: NgxsNextPluginFn) {\n    this.logAction(action);\n    return next(state, action);\n  }\n\n  /**\n   * Logs action trigerred to google analytics event\n   * @param action - Current action being dispatched with type unknown type.\n   * @returns void\n   */\n  private logAction(action: unknown): void {\n    const type = getActionTypeFromInstance(action);\n    if (type && this.loggableTypes.has(type)) {\n      const payload = JSON.stringify(action, this.serialize);\n      this.ga.event(type, 'action_log', payload);\n    }\n  }\n\n  /**\n   * Serializes action data\n   * @param key - key with type unknown that needs to be serialized\n   * @param value - value with type unknown that needs to be serialized\n   * @returns serialized value\n   */\n  private serialize(this: void, key: unknown, value: unknown): unknown {\n    if (key === '' && typeof value === 'object') {\n      return { ...value, type: undefined };\n    } else if (isPrimitive(value) || (Array.isArray(value) && value.every(isPrimitive))) {\n      return value;\n    }\n\n    return undefined;\n  }\n}\n\n/**\n * State Login Provider\n */\nexport const STATE_LOGGER_PROVIDER: Provider = {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TissueLibrarySelectors.html":{"url":"classes/TissueLibrarySelectors.html","title":"class - TissueLibrarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TissueLibrarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selector class for retreiving data from the TissueLibraryState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        tissues\n                        \n                    \n                \n            \n            \n                \n                    \n                    tissues(state: TissueLibraryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['TissueLibraryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Gets the tissue data from the TissueLibrary object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                TissueLibraryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current state of the TissueLibraryState.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        node data of the type of TisseData.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri, Tissue } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { TissueLibraryModel } from './tissue-library.model';\nimport { TissueLibraryState } from './tissue-library.state';\n\n/** Selector class for retreiving data from the TissueLibraryState */\nexport class TissueLibrarySelectors {\n  /**\n   * Gets the tissue data from the TissueLibrary object.\n   * @param state the current state of the TissueLibraryState.\n   * @returns node data of the type of TisseData.\n   */\n  @Selector([TissueLibraryState])\n  static tissues(state: TissueLibraryModel): Record {\n    return state.nodes as Record;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryState.html":{"url":"injectables/TissueLibraryState.html","title":"injectable - TissueLibraryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling tissue data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActive\n                        \n                    \n                \n            \n            \n                \nsetActive(ctx: TissueLibraryContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.state.ts:23\n                \n            \n\n\n            \n                \n                    Loads the tissue data into the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                TissueLibraryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The state context instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        data The tissue data to be added to the state\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load } from './tissue-library.actions';\nimport { TissueLibraryContext, TissueLibraryModel } from './tissue-library.model';\n\n/** State handling tissue data*/\n@State({\n  name: 'tissueLibrary',\n})\n@Injectable()\nexport class TissueLibraryState {\n  /** injects the TissueLibraryService into a private readonly property */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the tissue data into the current state\n   * @param ctx The state context instance\n   * @returns data The tissue data to be added to the state\n   */\n  @Action(Load)\n  setActive(ctx: TissueLibraryContext): Observable {\n    return this.dataService.getTissueLibrary().pipe(tap((data) => ctx.setState(data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            computeAggregate   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            createDownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            expandRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getColumnIndex   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getLabel   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getTotalCount   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            isPrimitive   (src/.../state-analytics-plugin.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        computeAggregate\n                        \n                    \n                \n            \n            \n                \ncomputeAggregate(summary: CellSummary)\n                \n            \n\n\n\n\n            \n                \n                    The computeAggregate function takes a summary object and performs aggregation operations on its properties\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    summary\n                                    \n                                            CellSummary\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandRow\n                        \n                    \n                \n            \n            \n                \nexpandRow(row: CellSummaryAggregateRow, length: number)\n                \n            \n\n\n\n\n            \n                \n                    This function expands the current row length with undefined if its length is\nless than the given length\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnIndex\n                        \n                    \n                \n            \n            \n                \ngetColumnIndex(indexById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the column if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    indexById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLabel\n                        \n                    \n                \n            \n            \n                \ngetLabel(items, id: string, what: string)\n                \n            \n\n\n\n\n            \n                \n                    This function retrieves the label of an item from an array based on its ID,\nand if not found, it returns a default string indicating the absence of a label for the specified item type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    what\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRow\n                        \n                    \n                \n            \n            \n                \ngetRow(rowById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the row if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregateRow\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalCount\n                        \n                    \n                \n            \n            \n                \ngetTotalCount(row: CellSummaryAggregateRow)\n                \n            \n\n\n\n\n            \n                \n                    This function calculates and returns the total count by iterating over a row array and summing\nup the count property of each object entry, while ignoring non-object entries, with an initial value of 0.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDownloadFormatId\n                        \n                    \n                \n            \n            \n                \ncreateDownloadFormatId(id: string)\n                \n            \n\n\n\n\n            \n                \n                    Creates download format id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormatId\n\n                    \n                    \n                        download format id\n\n                    \n                \n            \n        \n    \n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isPrimitive\n                        \n                    \n                \n            \n            \n                \nisPrimitive(value)\n                \n            \n\n\n\n\n            \n                \n                    Determines whether primitive is\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is string - used to check the input value from serialize funtion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :      | boolean | number | string | null | undefined\n\n                    \n                    \n                        type of value - boolean/number/string/null/bigint/undefined\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nstate\nThis library was generated with Nx.\nRunning unit tests\nRun nx test state to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraStateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    30 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellSummaryAggregate   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CellSummaryAggregateRow   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../active-ftu.state.ts)\n                        \n                        \n                            Context   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../illustrator.state.ts)\n                        \n                        \n                            Context   (src/.../source-refs.state.ts)\n                        \n                        \n                            DownloadContext   (src/.../download.model.ts)\n                        \n                        \n                            DownloadEntry   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormat   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            DownloadModel   (src/.../download.model.ts)\n                        \n                        \n                            TissueLibraryContext   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibraryModel   (src/.../tissue-library.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregate\n                \n            \n            \n                \n                    Type representing AGGREGATE having label, columns and rows\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregateRow\n                \n            \n            \n                \n                    Type representing a single AGGREGATE_ROW\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/active-ftu/active-ftu.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/illustrator/illustrator.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/source-refs/source-refs.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n    \n        \n            \n                \n                    \n                    DownloadContext\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadContext,\nwhich is a state context for the DownloadModel type\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadEntry\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadEntry,\nwhich is inferred from the type of the DOWNLOAD_ENTRY constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormat\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormat,\nwhich is inferred from the type of the DOWNLOAD_FORMAT constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormatId\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormatId,\nwhich is inferred from the type of the DOWNLOAD_FORMAT_ID constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadModel\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadModel,\nwhich is inferred from the type of the DOWNLOAD_MODEL constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    TissueLibraryContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibraryModel\n                \n            \n            \n                \n                    Type alias for the tissue data\n\n                \n            \n            \n                \n                        TissueLibrary\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            About   (src/.../link-ids.ts)\n                        \n                        \n                            Action   (src/.../active-ftu.actions.ts)\n                        \n                        \n                            Action   (src/.../cell-summary.actions.ts)\n                        \n                        \n                            Action   (src/.../illustrator.actions.ts)\n                        \n                        \n                            Action   (src/.../download.action.ts)\n                        \n                        \n                            Action   (src/.../source-refs.actions.ts)\n                        \n                        \n                            AGGREGATE   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_CELL   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_ROW   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AppTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            ContactAcknowledgement   (src/.../resource-ids.ts)\n                        \n                        \n                            DEFAULT_LOGGABLE_ACTIONS   (src/.../default-loggable-actions.ts)\n                        \n                        \n                            DOWNLOAD_ENTRY   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT_ID   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_MODEL   (src/.../download.model.ts)\n                        \n                        \n                            Embed   (src/.../link-ids.ts)\n                        \n                        \n                            ExploreFTU   (src/.../link-ids.ts)\n                        \n                        \n                            Gradient   (src/.../resource-types.ts)\n                        \n                        \n                            GradientLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            GradientLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            Illustration   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPage   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageDepthDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroReadMore   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPagePartners   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageReadMore   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LOGGABLE_ACTIONS   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Metrics   (src/.../resource-ids.ts)\n                        \n                        \n                            Metrics   (src/.../resource-types.ts)\n                        \n                        \n                            MetricsLogo   (src/.../resource-ids.ts)\n                        \n                        \n                            MetricsTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            Png   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            PNG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                        \n                            Portal   (src/.../link-ids.ts)\n                        \n                        \n                            PRIMITIVE_TYPES   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            ProductLogoUrl   (src/.../resource-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../link-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            ScreenSizeNoticeContent   (src/.../resource-ids.ts)\n                        \n                        \n                            Size   (src/.../resource-types.ts)\n                        \n                        \n                            SizeLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            SizeLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            STATE_LOGGER_PROVIDER   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Svg   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            SVG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/link-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        About\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('About')\n                    \n                \n\n            \n                \n                    About Link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Embed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Embed')\n                    \n                \n\n            \n                \n                    LinkId for Embed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExploreFTU\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ExploreFTU')\n                    \n                \n\n            \n                \n                    LinkId for Explore FTU\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Illustration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Illustration')\n                    \n                \n\n            \n                \n                    LinkId for Illustration metadata\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPage')\n                    \n                \n\n            \n                \n                    Landing page id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPageReadMore')\n                    \n                \n\n            \n                \n                    LinkId for read more in landing page content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Portal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Portal')\n                    \n                \n\n            \n                \n                    LinkId for HRA Portal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title link id\n\n                \n            \n\n        \n    \n\n    src/lib/active-ftu/active-ftu.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('ActiveFtu')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('CellSummary')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/illustrator/illustrator.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Illustrator')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Download')\n                    \n                \n\n            \n                \n                    Action Group for Download Action\n\n                \n            \n\n        \n    \n\n    src/lib/source-refs/source-refs.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('SourceRefs')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AGGREGATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE is an object that contains the label, columns\nand rows\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  color: z.number().nonnegative(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE_CELL is an object that contains the color, size and\nthe data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional())\n                    \n                \n\n            \n                \n                    The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\na required string followed by an optional number\n\n                \n            \n\n        \n    \n\n    src/lib/resource-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('AppTitle')\n                    \n                \n\n            \n                \n                    App title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ContactAcknowledgement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ContactAcknowledgement')\n                    \n                \n\n            \n                \n                    Message to display after submitting contact form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegend')\n                    \n                \n\n            \n                \n                    Gradient legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Gradient legend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthDescription')\n                    \n                \n\n            \n                \n                    Lanading Page Depth Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthImg')\n                    \n                \n\n            \n                \n                    Landing Page Depth Img id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthMoreText')\n                    \n                \n\n            \n                \n                    Landing Page Depth More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthTitle')\n                    \n                \n\n            \n                \n                    Landing Page Depth Title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroDescription')\n                    \n                \n\n            \n                \n                    Landing Page Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroImg')\n                    \n                \n\n            \n                \n                    Landing Page Intro Image id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroMoreText')\n                    \n                \n\n            \n                \n                    Landing Page More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroReadMore')\n                    \n                \n\n            \n                \n                    Landing Page Read More text (For web components)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPagePartners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroPartners')\n                    \n                \n\n            \n                \n                    Landing Page Partners id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroTitle')\n                    \n                \n\n            \n                \n                    Landing Page Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('Metrics')\n                    \n                \n\n            \n                \n                    metrics id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsLogo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsLogo')\n                    \n                \n\n            \n                \n                    Metrics Logo id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsTitle')\n                    \n                \n\n            \n                \n                    Metrics Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductLogoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductLogoUrl')\n                    \n                \n\n            \n                \n                    Product logo url id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ScreenSizeNoticeContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ScreenSizeNoticeContent')\n                    \n                \n\n            \n                \n                    Screen size notice content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegend')\n                    \n                \n\n            \n                \n                    Size legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Size legend\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/default-loggable-actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ContactActions.SendMessage,\n  DownloadActions.Download,\n  LinkRegistryActions.Navigate,\n  ActiveFtuActions.Load,\n  IllustratorActions.SetHover,\n  IllustratorActions.SetClicked,\n  ScreenModeAction.Set,\n]\n                    \n                \n\n            \n                \n                    Default loggable actions\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.discriminatedUnion('type', [\n  z.object({ type: z.literal('url'), url: z.string() }),\n  z.object({ type: z.literal('data'), data: z.string() }),\n])\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_ENTRY,\nwhich is a discriminated union of two objects with different properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    id: DOWNLOAD_FORMAT_ID,\n    label: z.string(),\n    extension: z.string(),\n  })\n  .partial({ extension: true })\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT,\nwhich is an object with id, label, and extension properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .transform((id) => `DownloadFormatId:'${id}'`)\n  .brand('DownloadFormatId')\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT_ID,\nwhich is a string that is transformed into a branded string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_MODEL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  formats: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_FORMAT),\n  entries: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_ENTRY),\n})\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_MODEL,\nwhich is an object with formats and entries properties\n\n                \n            \n\n        \n    \n\n    src/lib/resource-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Gradient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('gradient', payload())\n                    \n                \n\n            \n                \n                    Gradient legend resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType(\n  'metrics',\n  payload()\n)\n                    \n                \n\n            \n                \n                    Metrics resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Size\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('size', payload())\n                    \n                \n\n            \n                \n                    Size legend resource\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n})\n                    \n                \n\n            \n                \n                    Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRIMITIVE_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['bigint', 'boolean', 'number', 'string']\n                    \n                \n\n            \n                \n                    Primitive types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATE_LOGGER_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n}\n                    \n                \n\n            \n                \n                    State Login Provider\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Png\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('png')\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Svg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('svg')\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PNG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Png,\n  label: 'Download PNG',\n  extension: '.png',\n}\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Svg,\n  label: 'Download SVG',\n  extension: '.svg',\n}\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
