var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActiveFtuModel.html",[0,1.399,1,2.627]],["body/interfaces/ActiveFtuModel.html",[0,1.829,1,3.791,2,1.671,3,0.115,4,0.254,5,0.131,6,1.374,7,1.374,8,2.156,9,0.098,10,0.602,11,1.912,12,0.442,13,1.251,14,0.354,15,0.02,16,1.226,17,2.269,18,0.358,19,1.084,20,1.043,21,0.298,22,0.321,23,0.619,24,0.354,25,2.027,26,0.735,27,2.836,28,1.461,29,1.374,30,2.419,31,2.3,32,1.652,33,2.733,34,2.419,35,2.156,36,2.733,37,2.419,38,2.3,39,3.159,40,1.927,41,0.663,42,1.106,43,2.733,44,2.027,45,2.419,46,2.419,47,2.3,48,1.043,49,2.419,50,2.419,51,0.571,52,1.374,53,3.18,54,2.419,55,0.194,56,2.528,57,1.959,58,1.296,59,0.505,60,2.419,61,1.461,62,2.419,63,0.194,64,1.671,65,0.772,66,0.772,67,2.37,68,0.772,69,2.37,70,1.461,71,1.802,72,1.296,73,1.802,74,3.487,75,4.449,76,2.419,77,1.423,78,3.911,79,2.419,80,2.419,81,2.419,82,2.419,83,2.419,84,2.419,85,2.156,86,2.419,87,2.419,88,1.461,89,2.156,90,2.419,91,2.419,92,0.765,93,2.419,94,2.419,95,2.419,96,2.419,97,1.671,98,2.419,99,2.419,100,2.156,101,2.419,102,2.419,103,2.419,104,2.419,105,1.043,106,1.959,107,1.671,108,2.419,109,2.419,110,2.419,111,2.419,112,0.011,113,0.011]],["title/classes/ActiveFtuSelectors.html",[63,0.26,114,3.243]],["body/classes/ActiveFtuSelectors.html",[1,4.988,3,0.166,4,0.191,5,0.191,6,2.944,7,2.944,9,0.143,10,0.873,12,0.574,13,1.284,14,0.386,15,0.02,18,0.318,21,0.293,22,0.466,26,1.067,44,1.994,55,0.191,59,0.656,63,0.281,64,3.58,68,1.478,77,1.553,105,2.235,112,0.014,113,0.014,114,4.63,115,0.597,116,4.09,117,3.199,118,1.715,119,3.341,120,6.038,121,4.09,122,1.897,123,5.395,124,0.788,125,4.09,126,4.126,127,0.743,128,4.09,129,4.09,130,5.395,131,1.478,132,2.797,133,2.262,134,4.09,135,5.395]],["title/injectables/ActiveFtuState.html",[19,0.986,64,2.241]],["body/injectables/ActiveFtuState.html",[0,1.344,1,2.524,3,0.096,4,0.265,5,0.11,6,2.623,7,2.623,8,1.802,9,0.082,10,0.503,12,0.53,13,1.184,14,0.407,15,0.02,16,1.1,17,2.098,18,0.343,19,0.947,20,0.872,21,0.26,22,0.268,23,0.667,24,0.357,25,1.771,26,0.614,27,3.06,28,1.221,29,1.149,30,2.022,31,2.009,32,1.799,33,2.976,34,2.022,35,1.883,36,2.976,37,2.022,38,2.009,39,3.44,40,2.217,41,0.763,42,1.24,43,3.277,44,2.161,45,2.022,46,2.022,47,2.009,48,0.872,49,2.022,50,2.022,51,0.478,52,1.149,53,3.39,54,2.022,55,0.169,56,2.913,57,2.524,58,1.67,59,0.691,60,2.022,61,1.221,62,2.022,63,0.162,64,2.153,65,0.995,66,0.646,67,2.338,68,1.474,69,2.658,70,1.883,71,2.322,72,1.67,73,1.506,74,3.184,75,4.115,76,2.022,77,1.276,78,3.721,79,2.022,80,2.022,81,2.022,82,2.022,83,2.022,84,2.022,85,2.778,86,3.117,87,3.117,88,1.883,89,2.778,90,3.117,91,3.117,92,0.686,93,2.022,94,2.022,95,2.022,96,2.022,97,1.397,98,2.022,99,2.022,100,1.802,101,2.022,102,2.022,103,3.117,104,2.022,105,1.641,106,2.524,107,2.153,108,2.022,109,2.022,110,2.022,111,2.022,112,0.009,113,0.009,118,1.155,122,1.751,124,0.728,127,0.686,136,1.083,137,2.356,138,2.356,139,2.356,140,1.637,141,2.356,142,1.637,143,2.356,144,2.356,145,2.356]],["title/classes/AddEntry.html",[63,0.26,146,2.091]],["body/classes/AddEntry.html",[3,0.144,4,0.165,5,0.228,9,0.123,12,0.375,13,1.097,14,0.253,15,0.02,18,0.295,21,0.35,22,0.402,23,0.698,24,0.433,40,1.377,41,0.681,48,2.49,51,0.716,55,0.296,59,0.429,63,0.436,66,1.535,88,2.532,92,0.546,112,0.012,113,0.012,115,0.516,124,0.516,127,0.486,146,2.702,147,2.093,148,3.722,149,1.872,150,3.531,151,3.289,152,3.583,153,3.531,154,3.123,155,1.553,156,0.967,157,2.532,158,1.953,159,2.093,160,2.093,161,2.896,162,3.2,163,1.953,164,1.425,165,2.257,166,2.304,167,2.009,168,1.427,169,1.427,170,2.731,171,1.274,172,2.122,173,0.967,174,2.257,175,2.093,176,2.257,177,2.257,178,1.377,179,1.953,180,1.241,181,2.257,182,2.257]],["title/interfaces/CellSummaryModel.html",[0,1.399,183,2.627]],["body/interfaces/CellSummaryModel.html",[0,2.099,2,2.143,3,0.147,4,0.168,5,0.168,9,0.126,10,0.771,11,2.282,12,0.384,14,0.485,15,0.02,18,0.299,21,0.259,22,0.411,25,2.42,26,0.943,32,2.21,33,3.657,55,0.285,56,1.57,92,0.877,112,0.013,113,0.013,171,1.479,183,3.45,184,1.762,185,1.762,186,2.764,187,2.943,188,4.866,189,5.274,190,4.964,191,3.919,192,4.242,193,4.242,194,4.242,195,3.614,196,3.102,197,3.102,198,4.26,199,3.102,200,4.336,201,2.764,202,4.26,203,3.165,204,2.332,205,4.336,206,4.336,207,4.26,208,2.574,209,3.45,210,4.26,211,2.746,212,4.26,213,4.26,214,3.102,215,3.102,216,3.102,217,3.102,218,3.102,219,3.102,220,1.208,221,3.102,222,2.512,223,3.102,224,3.102,225,3.102,226,3.102,227,3.102]],["title/classes/CellSummarySelectors.html",[63,0.26,228,3.243]],["body/classes/CellSummarySelectors.html",[3,0.166,4,0.191,5,0.191,9,0.143,10,0.873,12,0.574,14,0.386,15,0.019,18,0.338,21,0.293,22,0.466,24,0.508,26,1.067,31,2.262,32,1.803,55,0.191,59,0.656,63,0.281,68,1.478,77,1.553,112,0.014,113,0.014,115,0.597,117,3.199,118,1.715,119,3.341,122,1.897,124,0.788,127,0.743,133,2.262,171,1.674,183,4.857,184,2.944,185,2.944,189,4.909,191,3.199,192,4.196,194,4.638,203,2.797,228,4.63,229,4.09,230,5.395,231,5.395,232,4.09,233,5.395,234,4.09,235,3.51,236,4.09,237,5.395,238,4.09,239,4.09]],["title/injectables/CellSummaryState.html",[19,0.986,31,2.091]],["body/injectables/CellSummaryState.html",[3,0.121,4,0.138,5,0.138,9,0.103,10,0.632,12,0.541,13,0.88,14,0.364,15,0.02,16,1.537,17,1.156,18,0.337,19,1.125,20,1.097,21,0.212,22,0.337,23,0.541,24,0.486,26,0.773,27,2.48,28,1.536,29,1.445,31,2.386,32,2.138,33,3.09,41,0.796,42,1.132,55,0.138,56,2.949,59,0.679,61,1.536,63,0.204,65,1.182,68,1.394,69,2.427,70,2.236,71,2.758,72,1.983,73,2.758,74,3.961,75,2.266,77,0.853,85,3.299,92,0.667,100,2.266,105,1.097,107,2.558,112,0.011,113,0.011,118,1.371,122,1.788,124,0.743,127,0.7,136,1.362,140,2.06,142,2.06,171,1.709,172,1.288,178,1.156,183,2.06,184,2.724,185,2.724,189,4.738,191,3.791,194,2.06,203,2.236,235,2.543,240,2.963,241,2.998,242,3.795,243,2.963,244,4.314,245,2.963,246,4.314,247,2.963,248,4.314,249,3.299,250,3.299,251,2.963,252,1.597,253,1.536,254,1.757,255,4.314,256,2.963,257,2.543,258,2.963,259,1.536,260,1.757,261,1.757,262,2.963,263,2.963,264,2.963]],["title/classes/Clear.html",[40,1.474,63,0.26]],["body/classes/Clear.html",[3,0.173,4,0.198,5,0.198,6,2.075,7,2.075,9,0.149,13,1.279,15,0.02,17,1.66,18,0.292,21,0.396,22,0.484,23,0.655,24,0.305,40,2.16,41,0.517,42,0.863,43,2.354,44,2.075,51,0.863,52,2.7,55,0.304,63,0.465,65,1.166,66,1.517,67,2.406,92,0.659,112,0.014,113,0.014,115,0.622,131,1.687,156,1.166,164,1.464,166,2.278,167,2.278,168,1.307,169,1.307,173,1.166,180,1.496,252,1.575,265,2.721,266,2.278,267,1.423,268,1.353,269,2.721,270,1.957,271,1.496]],["title/classes/ClearEntries.html",[63,0.26,179,2.091]],["body/classes/ClearEntries.html",[3,0.15,4,0.171,5,0.234,9,0.128,13,1.113,15,0.02,18,0.301,21,0.36,22,0.419,23,0.707,24,0.44,40,1.959,41,0.695,48,2.518,51,0.746,55,0.3,63,0.443,66,1.568,88,1.907,92,0.569,112,0.013,113,0.013,115,0.537,146,2.034,147,2.181,148,3.165,149,1.229,151,2.966,152,2.979,154,2.351,155,1.169,156,1.008,157,2.604,158,2.034,159,2.181,160,2.181,161,2.979,162,3.24,163,2.034,164,1.445,165,2.351,166,2.354,167,2.067,168,1.452,169,1.452,170,2.998,171,1.31,172,2.183,173,1.008,174,2.351,175,2.181,176,2.351,177,2.351,178,1.434,179,2.779,180,1.293,181,2.351,182,2.351]],["title/classes/ClearSelection.html",[63,0.26,272,1.843]],["body/classes/ClearSelection.html",[3,0.15,4,0.172,5,0.172,9,0.129,13,1.115,14,0.361,15,0.02,16,1.6,18,0.265,21,0.361,22,0.42,23,0.536,24,0.487,32,1.684,41,0.449,42,0.749,51,0.749,55,0.31,58,3.131,63,0.468,65,1.012,92,0.572,112,0.013,113,0.013,115,0.54,131,1.012,155,1.602,156,1.012,164,1.494,168,1.454,169,1.454,173,1.012,180,1.299,204,1.519,220,1.235,252,1.367,266,2.073,267,1.235,268,1.174,270,2.317,271,1.299,272,2.457,273,2.043,274,2.796,275,2.043,276,1.605,277,2.973,278,3.143,279,2.457,280,1.801,281,3.172,282,2.796,283,1.801,284,2.457,285,2.19,286,1.801,287,1.915,288,1.801,289,2.19,290,1.915]],["title/classes/ComputeAggregates.html",[63,0.26,242,2.416]],["body/classes/ComputeAggregates.html",[3,0.184,4,0.211,5,0.211,9,0.158,13,1.191,15,0.02,16,1.122,18,0.303,21,0.412,22,0.514,23,0.673,24,0.477,41,0.549,42,1.167,51,0.916,55,0.295,63,0.459,65,1.238,92,0.699,112,0.015,113,0.015,115,0.66,131,1.238,156,1.238,164,1.422,168,1.067,169,1.067,171,1.501,173,1.238,184,2.203,185,2.203,191,2.68,203,2.984,242,3.68,267,1.511,268,1.437,271,1.589,276,1.964,291,3.141,292,4.402,293,4.402,294,4,295,3.141,296,3.456]],["title/injectables/ContactState.html",[19,0.986,297,2.627]],["body/injectables/ContactState.html",[3,0.159,4,0.182,5,0.182,9,0.136,10,0.832,12,0.415,14,0.279,15,0.019,18,0.346,19,1.643,20,1.444,21,0.279,22,0.444,23,0.698,24,0.484,25,3.071,26,1.017,27,2.875,29,1.901,55,0.182,59,0.766,63,0.452,68,1.069,69,2.271,77,1.123,105,1.444,112,0.013,113,0.013,118,1.662,122,1.371,124,0.57,127,0.537,136,1.793,178,1.521,253,2.71,259,2.022,297,4.378,298,3.9,299,5.227,300,4.699,301,5.227,302,6.299,303,5.406,304,3.998,305,6.299,306,5.368,307,5.227,308,5.227,309,3.9,310,3.633,311,4.509,312,5.227,313,4.486,314,3.9,315,3.9,316,3.9,317,3.9,318,3.9]],["title/classes/Download.html",[48,1.399,63,0.26]],["body/classes/Download.html",[3,0.145,4,0.166,5,0.263,9,0.125,12,0.379,13,1.102,14,0.255,15,0.02,18,0.297,21,0.352,22,0.406,23,0.717,24,0.403,40,1.392,41,0.685,48,2.583,51,0.723,55,0.297,59,0.434,63,0.438,66,1.543,88,1.85,92,0.552,112,0.012,113,0.012,115,0.521,124,0.521,127,0.491,146,1.974,147,2.116,148,3.116,149,1.645,151,3.302,152,2.917,154,2.281,155,1.134,156,0.978,157,2.551,158,1.974,159,2.116,160,2.116,161,2.917,162,3.29,163,1.974,164,1.43,165,2.281,166,2.497,167,2.317,168,1.433,169,1.433,170,2.746,171,1.283,172,2.138,173,0.978,174,2.281,175,2.116,176,2.281,177,2.281,178,1.392,179,1.974,180,1.255,181,2.281,182,2.281,319,3.062,320,3.568]],["title/classes/DownloadSelectors.html",[63,0.26,321,3.243]],["body/classes/DownloadSelectors.html",[3,0.175,4,0.2,5,0.2,9,0.15,10,0.918,12,0.457,14,0.308,15,0.02,18,0.326,24,0.443,26,1.121,47,2.378,48,2.063,55,0.2,59,0.523,63,0.296,66,1.178,68,1.527,77,1.238,92,0.863,105,1.591,112,0.014,113,0.014,115,0.628,117,4.119,118,1.772,119,3.016,122,1.512,124,0.628,127,0.592,133,2.378,157,3.515,158,2.378,162,3.448,170,2.718,321,4.784,322,4.3,323,5.005,324,4.731,325,5.574,326,5.005,327,4.3,328,4.3,329,4.3,330,4.3,331,4.3,332,4.3,333,4.3]],["title/injectables/DownloadState.html",[19,0.986,47,2.091]],["body/injectables/DownloadState.html",[3,0.069,4,0.079,5,0.27,9,0.098,10,0.363,12,0.523,13,0.791,14,0.372,15,0.02,18,0.297,19,0.73,20,0.629,21,0.122,22,0.193,23,0.44,24,0.435,26,0.443,27,2.399,28,0.881,29,0.829,40,1.092,41,0.598,47,1.548,48,2.545,55,0.079,56,1.216,59,0.685,61,0.881,63,0.117,66,1.786,67,2.447,68,1.489,69,2.52,70,1.451,77,1.191,78,2.116,88,2.145,89,2.141,92,0.972,97,1.008,105,1.531,112,0.007,113,0.007,118,0.89,122,1.608,124,0.719,127,0.677,136,0.781,146,2.722,148,2.722,151,1.451,155,1.315,158,0.94,161,1.66,162,3.105,163,2.722,170,1.365,171,1.283,172,1.55,175,1.008,178,1.092,179,1.974,187,1.66,208,0.881,220,1.383,253,1.451,254,1.008,259,2.371,260,1.008,261,1.008,310,1.181,323,1.3,324,2.729,326,1.3,334,1.7,335,2.729,336,2.799,337,2.402,338,2.402,339,2.402,340,2.402,341,4.137,342,2.799,343,5.748,344,2.799,345,1.7,346,4.297,347,2.799,348,2.799,349,1.7,350,2.799,351,2.799,352,2.799,353,1.7,354,2.453,355,2.402,356,2.799,357,1.7,358,2.799,359,2.799,360,1.7,361,2.799,362,2.799,363,2.281,364,2.799,365,2.799,366,1.7,367,1.7,368,1.7,369,1.459,370,1.459,371,1.459,372,1.459,373,1.7,374,1.7,375,1.459,376,1.459,377,2.799,378,1.7,379,1.7,380,1.7,381,1.7,382,4.137,383,3.55,384,1.7,385,1.7,386,1.7,387,2.799,388,1.181,389,1.7,390,1.7,391,2.799,392,1.7,393,1.7,394,1.7,395,2.799,396,5.8,397,2.799,398,1.7,399,1.7,400,1.7,401,1.7,402,1.7,403,1.7,404,1.7,405,1.7,406,2.799,407,3.568,408,1.7,409,1.459,410,1.7,411,1.7,412,1.7,413,1.7,414,1.7,415,1.7,416,1.7,417,1.7,418,1.7,419,1.7,420,1.459,421,1.7,422,1.7,423,1.7,424,1.7,425,1.7,426,1.7,427,3.568,428,1.7,429,1.7,430,1.7,431,1.7,432,1.7,433,1.7,434,1.7,435,1.7,436,1.7,437,1.7,438,1.7,439,1.7,440,1.7,441,1.7,442,1.7,443,1.7,444,1.7,445,1.7,446,1.7]],["title/classes/HighlightCellType.html",[63,0.26,288,1.843]],["body/classes/HighlightCellType.html",[3,0.144,4,0.165,5,0.165,9,0.124,12,0.377,13,1.099,14,0.433,15,0.02,16,1.503,18,0.258,21,0.351,22,0.404,23,0.521,24,0.482,32,1.876,41,0.431,42,0.719,51,0.719,55,0.306,58,3.021,59,0.431,63,0.463,65,0.972,92,0.549,112,0.012,113,0.012,115,0.518,124,0.518,127,0.488,131,0.972,149,1.185,155,1.785,156,0.972,164,1.475,168,1.429,169,1.429,173,0.972,180,1.247,204,2.015,220,1.876,252,1.312,266,1.458,267,1.185,268,1.127,270,2.252,271,1.247,272,1.729,273,1.961,274,2.737,275,1.961,276,1.541,277,3.139,278,3.204,279,2.389,280,1.729,281,3.349,282,2.952,283,1.729,284,2.389,285,2.102,286,1.729,287,2.54,288,2.389,289,2.102,290,2.54,447,3.546,448,3.546,449,3.546]],["title/modules/HraStateModule.html",[450,2.627,451,2.627]],["body/modules/HraStateModule.html",[0,1.813,3,0.144,4,0.228,5,0.165,9,0.124,12,0.377,14,0.254,15,0.02,17,1.383,18,0.378,20,1.312,21,0.254,24,0.351,26,0.925,31,2.71,32,1.185,33,1.961,35,2.54,36,1.961,38,2.71,39,2.267,44,1.729,47,2.71,48,1.312,55,0.228,59,0.431,63,0.244,64,2.905,68,1.538,72,1.63,77,1.021,92,0.549,106,3.405,112,0.012,113,0.012,118,1.127,119,2.952,124,0.518,127,0.488,208,2.54,220,1.638,297,3.405,300,2.464,310,3.405,450,4.416,451,3.901,452,2.712,453,3.043,454,3.405,455,3.546,456,4.204,457,4.631,458,3.546,459,4.204,460,4.204,461,5.196,462,4.204,463,4.817,464,4.817,465,3.043,466,3.405,467,3.043,468,3.132,469,1.838,470,1.961,471,3.132,472,3.589,473,2.712,474,3.132,475,2.102,476,2.712,477,4.204,478,2.712,479,3.747,480,3.043,481,2.464,482,3.043,483,3.043,484,3.043,485,2.464,486,2.464,487,2.464,488,4.204,489,3.043]],["title/interfaces/HraStateModuleOptions.html",[0,1.399,457,2.89]],["body/interfaces/HraStateModuleOptions.html",[0,2.096,2,2.138,3,0.147,4,0.231,5,0.168,9,0.126,10,0.77,11,2.279,14,0.258,15,0.02,17,1.406,18,0.379,20,1.335,21,0.355,24,0.405,26,0.941,31,2.742,32,1.206,33,1.995,35,2.57,36,1.995,38,2.742,39,2.306,44,1.758,47,2.742,48,1.335,55,0.231,63,0.248,64,2.939,68,0.988,72,1.658,77,1.038,92,0.558,106,2.507,112,0.013,113,0.013,119,2.417,208,1.87,220,2.137,297,3.445,300,2.507,310,2.507,450,4.239,451,3.445,453,3.095,454,2.507,456,3.095,457,4.332,459,3.095,460,3.095,461,4.861,462,4.254,463,4.254,464,4.861,465,3.095,466,3.445,467,3.095,468,3.169,469,1.87,470,1.995,471,3.169,472,3.899,473,2.758,474,3.169,475,2.138,476,2.758,477,4.254,478,2.758,479,4.332,480,4.254,481,3.445,482,5.234,483,3.095,484,3.095,485,2.507,486,2.507,487,2.507,488,4.254,489,3.095]],["title/interfaces/IllustratorModel.html",[0,1.399,490,2.627]],["body/interfaces/IllustratorModel.html",[0,1.655,2,1.417,3,0.097,4,0.111,5,0.111,9,0.083,10,0.51,11,1.688,12,0.653,13,0.413,14,0.451,15,0.02,16,1.478,17,0.932,18,0.285,19,0.958,20,0.884,21,0.171,22,0.272,23,0.254,24,0.451,25,1.79,26,0.623,27,1.79,28,1.239,29,1.165,32,1.495,35,1.239,36,3.294,41,0.544,42,0.744,52,1.79,55,0.171,56,2.587,58,2.056,59,0.29,61,1.239,63,0.164,65,0.655,67,3.05,69,2.353,70,1.239,71,1.528,72,1.099,73,1.528,74,4.113,77,0.688,92,0.777,105,2.004,107,1.417,112,0.009,113,0.009,155,1.422,171,0.623,172,1.038,178,1.432,187,2.177,193,2.552,204,0.983,209,2.552,220,1.911,241,1.661,249,1.827,250,1.827,252,0.884,253,1.239,254,1.417,259,1.239,260,1.417,261,1.417,266,0.983,272,1.79,274,3.137,277,2.318,278,2.447,279,2.447,280,2.447,282,3.315,283,2.996,284,2.447,286,2.996,287,1.239,288,2.18,290,1.904,304,1.827,354,1.417,388,2.552,490,2.552,491,1.827,492,4.372,493,3.151,494,4.142,495,2.808,496,3.151,497,2.808,498,2.051,499,3.838,500,2.051,501,1.827,502,1.827,503,3.151,504,2.051,505,2.051,506,2.051,507,2.051,508,2.051,509,2.051,510,3.151,511,2.051,512,2.051,513,2.051,514,2.051,515,2.051,516,2.051,517,2.051,518,2.552,519,2.051,520,3.151,521,2.051,522,2.051,523,2.051]],["title/classes/IllustratorSelectors.html",[63,0.26,524,3.243]],["body/classes/IllustratorSelectors.html",[3,0.123,4,0.14,5,0.14,9,0.105,10,0.643,12,0.635,14,0.428,15,0.02,16,1.397,18,0.27,21,0.216,22,0.343,26,0.785,32,1.459,35,1.561,36,3.641,55,0.14,59,0.726,63,0.207,67,2.96,68,1.958,77,1.72,105,2.436,112,0.011,113,0.011,115,0.44,117,2.587,118,1.387,119,3.484,122,2.101,124,0.873,127,0.822,133,1.666,155,1.387,187,3.337,220,1.881,274,3.133,280,2.128,282,3.133,283,2.128,286,2.128,490,4.998,492,4.304,494,3.337,495,3.337,497,3.337,501,3.337,502,3.337,524,3.745,525,3.011,526,5.133,527,5.133,528,5.133,529,3.011,530,5.975,531,3.011,532,3.011,533,3.011,534,3.011,535,3.011,536,3.011,537,3.011,538,3.011,539,3.011,540,3.011,541,5.975]],["title/injectables/IllustratorState.html",[19,0.986,35,1.959]],["body/injectables/IllustratorState.html",[0,1.215,3,0.084,4,0.097,5,0.097,9,0.072,10,0.442,11,1.51,12,0.573,13,0.358,14,0.442,15,0.02,16,1.564,17,0.808,18,0.267,19,0.856,20,0.767,21,0.148,22,0.236,23,0.22,24,0.482,25,1.601,26,0.54,27,1.989,28,1.074,29,1.01,32,1.364,35,1.702,36,2.569,41,0.686,42,0.941,52,1.01,55,0.153,56,2.997,58,2.477,59,0.686,61,1.074,63,0.142,65,0.9,67,2.828,68,1.476,69,2.684,70,1.702,71,2.099,72,1.51,73,1.324,74,3.95,77,0.596,92,0.719,105,2.232,107,1.947,112,0.008,113,0.008,118,1.044,122,1.894,124,0.825,127,0.741,136,0.952,140,1.439,142,1.439,155,1.297,171,0.54,172,0.9,178,1.811,187,1.228,193,1.439,204,1.351,209,1.439,220,1.098,241,2.282,249,2.511,250,2.511,252,1.215,253,1.074,254,1.228,259,1.074,260,1.228,261,1.228,266,1.351,272,2.264,274,2.264,277,2.793,278,1.601,279,2.94,280,2.468,282,3.173,283,2.468,284,2.94,286,2.468,287,1.702,288,2.752,290,1.702,304,2.511,354,1.947,363,1.324,388,1.439,490,1.439,491,1.584,492,3.12,493,1.777,494,2.511,495,1.584,496,1.777,497,1.584,498,1.777,499,3.985,500,1.777,501,2.511,502,2.511,503,4.345,504,2.818,505,2.818,506,2.818,507,2.818,508,1.777,509,1.777,510,2.818,511,1.777,512,1.777,513,1.777,514,1.777,515,2.818,516,2.818,517,2.818,518,2.282,519,2.818,520,2.818,521,1.777,522,1.777,523,1.777,542,2.071,543,2.071,544,2.071,545,2.071,546,2.071,547,2.071,548,2.071,549,2.071,550,2.071,551,2.071,552,1.324,553,2.071]],["title/classes/Load.html",[41,0.459,63,0.26]],["body/classes/Load.html",[3,0.166,4,0.19,5,0.19,6,2.622,7,2.622,9,0.142,12,0.433,13,1.294,14,0.291,15,0.02,17,1.587,18,0.283,21,0.385,22,0.463,23,0.64,24,0.291,40,1.587,41,0.654,42,0.825,43,2.251,44,1.984,51,0.825,52,2.622,55,0.299,59,0.495,63,0.458,65,1.474,66,1.474,67,2.337,92,0.63,112,0.014,113,0.014,115,0.594,124,0.594,127,0.56,131,1.756,149,1.361,156,1.115,164,1.439,166,2.478,167,2.478,168,1.27,169,1.27,173,1.115,180,1.431,252,1.507,265,2.602,266,1.674,267,1.361,268,1.294,269,2.602,270,1.871,271,1.431,554,2.413,555,4.07]],["title/classes/Load-1.html",[41,0.386,63,0.218,97,1.883]],["body/classes/Load-1.html",[3,0.177,4,0.202,5,0.202,9,0.152,12,0.462,13,1.266,14,0.311,15,0.019,16,1.078,18,0.295,21,0.402,22,0.495,23,0.661,24,0.47,41,0.682,42,1.138,51,0.881,55,0.29,59,0.528,63,0.452,65,1.538,92,0.672,112,0.014,113,0.014,115,0.635,124,0.635,127,0.598,131,1.538,149,1.452,156,1.19,164,1.396,168,1.026,169,1.026,171,1.133,173,1.19,184,2.736,185,2.736,191,2.576,203,2.252,242,2.777,267,1.452,268,1.381,271,1.527,276,2.438,291,3.019,292,3.322,293,4.32,294,3.019,295,3.019,296,3.322,554,2.576,556,4.344]],["title/classes/Load-2.html",[41,0.386,63,0.218,557,2.725]],["body/classes/Load-2.html",[3,0.142,4,0.163,5,0.226,9,0.169,12,0.372,13,1.201,14,0.25,15,0.02,18,0.293,21,0.347,22,0.398,23,0.727,24,0.399,40,1.363,41,0.795,48,2.421,51,0.708,55,0.295,59,0.425,63,0.435,66,1.526,88,1.811,92,0.541,112,0.012,113,0.012,115,0.51,124,0.51,127,0.481,146,1.933,147,2.072,148,3.081,149,1.621,151,2.888,152,2.875,154,2.234,155,1.111,156,0.957,157,2.514,158,1.933,159,2.072,160,2.072,161,2.875,162,3.189,163,1.933,164,1.419,165,2.234,166,2.475,167,1.995,168,1.42,169,1.42,170,3.082,171,1.569,172,2.614,173,0.957,174,3.1,175,2.875,176,3.1,177,2.234,178,1.363,179,1.933,180,1.229,181,2.234,182,2.234,554,2.072,558,3.494]],["title/classes/Load-3.html",[41,0.386,63,0.218,559,2.725]],["body/classes/Load-3.html",[3,0.146,4,0.167,5,0.167,9,0.125,12,0.38,13,1.222,14,0.404,15,0.02,16,1.582,18,0.259,21,0.353,22,0.407,23,0.524,24,0.483,32,1.647,41,0.599,42,0.725,51,0.725,55,0.307,58,3.029,59,0.435,63,0.464,65,1.35,92,0.553,112,0.012,113,0.012,115,0.522,124,0.522,127,0.492,131,1.35,149,1.195,155,1.567,156,0.98,164,1.479,168,1.435,169,1.435,173,0.98,180,1.257,204,1.471,220,1.195,252,1.324,266,1.471,267,1.195,268,1.137,270,2.266,271,1.257,272,1.743,273,1.978,274,2.749,275,1.978,276,2.141,277,2.923,278,3.108,279,2.403,280,1.743,281,3.119,282,2.749,283,1.743,284,2.403,285,2.12,286,1.743,287,1.854,288,1.743,289,2.12,290,1.854,554,2.12,560,3.576]],["title/classes/Load-4.html",[41,0.386,63,0.218,561,3.176]],["body/classes/Load-4.html",[3,0.183,4,0.21,5,0.21,9,0.157,12,0.479,13,1.274,14,0.323,15,0.019,16,1.426,18,0.303,21,0.411,22,0.513,23,0.732,24,0.453,41,0.81,42,1.165,51,0.914,55,0.268,59,0.548,63,0.435,92,0.697,112,0.015,113,0.015,115,0.658,124,0.658,127,0.62,131,1.574,149,1.507,156,1.235,164,1.29,168,1.064,169,1.064,173,1.235,267,1.507,268,1.433,271,1.585,276,2.497,554,2.672,562,3.407,563,3.407,564,3.447,565,4.507,566,3.447]],["title/classes/Load-5.html",[41,0.386,63,0.218,567,2.725]],["body/classes/Load-5.html",[3,0.214,4,0.245,5,0.245,9,0.184,15,0.019,18,0.277,21,0.376,23,0.721,24,0.452,41,0.824,51,1.065,55,0.245,63,0.361,112,0.016,113,0.016,115,0.768,164,1.18,171,1.767,475,4.018,568,3.653,569,3.653,570,5.256,571,6.32,572,4.392,573,5.256]],["title/classes/RegisterFormat.html",[63,0.26,163,2.091]],["body/classes/RegisterFormat.html",[3,0.145,4,0.166,5,0.229,9,0.124,12,0.379,13,1.101,14,0.255,15,0.02,18,0.296,21,0.352,22,0.405,23,0.7,24,0.434,40,1.389,41,0.684,48,2.436,51,0.722,55,0.297,59,0.433,63,0.438,66,1.542,88,1.846,92,0.551,112,0.012,113,0.012,115,0.52,124,0.52,127,0.49,146,1.97,147,2.111,148,3.112,149,1.642,151,2.917,152,2.913,154,2.276,155,1.132,156,0.976,157,3.145,158,1.97,159,2.111,160,2.111,161,3.596,162,3.4,163,2.718,164,1.429,165,2.276,166,2.495,167,2.314,168,1.432,169,1.432,170,2.743,171,1.281,172,2.135,173,0.976,174,2.276,175,2.111,176,2.276,177,2.276,178,1.389,179,1.97,180,1.252,181,2.276,182,2.276,319,3.056,574,3.561]],["title/classes/Reset.html",[42,0.766,63,0.26]],["body/classes/Reset.html",[3,0.173,4,0.198,5,0.198,6,2.075,7,2.075,9,0.149,13,1.271,15,0.02,17,1.66,18,0.292,21,0.396,22,0.484,23,0.655,24,0.396,40,1.66,41,0.517,42,1.123,43,2.354,44,2.075,51,0.863,52,2.7,55,0.304,63,0.465,65,1.166,66,1.517,67,2.406,92,0.659,112,0.014,113,0.014,115,0.622,131,1.687,156,1.166,164,1.464,166,2.278,167,2.278,168,1.307,169,1.307,173,1.166,180,1.496,252,2.05,265,2.721,266,1.751,267,1.423,268,1.353,269,2.721,270,1.957,271,1.496]],["title/classes/Reset-1.html",[42,0.644,63,0.218,97,1.883]],["body/classes/Reset-1.html",[3,0.185,4,0.212,5,0.212,9,0.159,13,1.193,15,0.02,16,1.433,18,0.304,21,0.413,22,0.517,23,0.71,24,0.478,41,0.552,42,1.355,51,0.921,55,0.296,63,0.459,65,1.245,92,0.703,112,0.015,113,0.015,115,0.664,131,1.245,156,1.245,164,1.426,168,1.073,169,1.073,171,1.185,173,1.245,184,2.215,185,2.215,191,2.694,203,2.356,242,2.905,267,1.519,268,1.445,271,1.598,276,1.974,291,3.158,292,3.475,293,4.014,294,3.158,295,3.158,296,3.475]],["title/classes/Reset-2.html",[42,0.644,63,0.218,557,2.725]],["body/classes/Reset-2.html",[3,0.151,4,0.173,5,0.173,9,0.13,13,1.117,14,0.362,15,0.02,16,1.532,18,0.266,21,0.362,22,0.422,23,0.537,24,0.488,32,1.689,41,0.451,42,1.025,51,0.752,55,0.311,58,3.063,63,0.469,65,1.017,92,0.574,112,0.013,113,0.013,115,0.542,131,1.017,155,1.607,156,1.017,164,1.496,168,1.457,169,1.457,173,1.017,180,1.305,204,1.526,220,1.24,252,1.871,266,1.526,267,1.24,268,1.18,270,2.324,271,1.305,272,1.809,273,2.052,274,2.802,275,2.052,276,1.612,277,2.98,278,3.148,279,2.464,280,1.809,281,3.18,282,2.802,283,1.809,284,2.464,285,2.2,286,1.809,287,1.923,288,1.809,289,2.2,290,1.923]],["title/classes/Reset-3.html",[42,0.644,63,0.218,559,2.725]],["body/classes/Reset-3.html",[3,0.193,4,0.221,5,0.221,9,0.166,13,1.209,15,0.019,16,1.179,18,0.313,21,0.425,22,0.541,23,0.743,24,0.464,41,0.722,42,1.376,51,0.963,55,0.277,63,0.446,92,0.735,112,0.015,113,0.015,115,0.694,131,1.301,156,1.301,164,1.333,168,1.121,169,1.121,173,1.301,267,1.588,268,1.51,271,1.67,276,2.064,562,2.816,563,2.816,564,3.632,566,3.632]],["title/interfaces/ScreenModeModel.html",[0,1.399,575,2.627]],["body/interfaces/ScreenModeModel.html",[0,1.783,2,2.857,3,0.196,4,0.225,5,0.225,9,0.168,10,1.028,11,2.755,14,0.429,15,0.019,24,0.345,55,0.225,112,0.015,113,0.015,132,3.381,187,2.857,211,3.775,469,3.381,470,3.608,575,4.165,576,3.08,577,3.08,578,4.818,579,4.363,580,3.831,581,4.583,582,4.878,583,4.17,584,5.992,585,4.583,586,5.143,587,5.992]],["title/classes/ScreenModeSelectors.html",[63,0.26,588,3.243]],["body/classes/ScreenModeSelectors.html",[3,0.155,4,0.178,5,0.178,9,0.133,10,0.813,12,0.547,14,0.368,15,0.02,18,0.307,24,0.447,26,0.994,55,0.178,59,0.626,63,0.262,66,1.41,68,1.71,72,2.366,77,1.482,112,0.013,113,0.013,115,0.557,117,4.241,118,1.636,119,3.274,122,1.81,124,0.752,127,0.708,132,2.668,133,2.108,211,3.452,468,2.437,469,3.708,470,3.715,552,3.29,575,4.772,576,3.726,577,3.726,579,3.29,582,4.337,583,3.989,588,4.417,589,3.811,590,5.147,591,5.147,592,3.811,593,5.147,594,5.147,595,3.811,596,3.271,597,3.811,598,5.147,599,3.811,600,3.811]],["title/injectables/ScreenModeState.html",[19,0.986,468,2.416]],["body/injectables/ScreenModeState.html",[3,0.141,4,0.162,5,0.162,9,0.121,10,0.739,12,0.513,14,0.345,15,0.02,18,0.332,19,1.257,20,1.283,23,0.637,24,0.489,25,3.263,26,0.904,55,0.162,56,2.095,59,0.674,61,1.796,63,0.238,66,1.643,68,1.321,69,2.605,78,2.054,105,1.785,112,0.012,113,0.012,118,1.533,122,1.695,124,0.704,127,0.664,131,1.834,136,1.593,211,3.316,346,2.408,354,2.859,369,2.974,370,2.974,383,4.138,468,3.082,469,3.594,470,3.703,518,4.38,575,3.854,576,3.545,577,3.545,579,3.545,583,2.215,596,2.974,601,3.465,602,4.822,603,4.652,604,3.465,605,4.822,606,3.465,607,4.822,608,3.465,609,4.822,610,3.465,611,3.465,612,2.65,613,3.465,614,3.465,615,3.465,616,3.465]],["title/classes/SendMessage.html",[63,0.26,306,2.89]],["body/classes/SendMessage.html",[0,2.191,3,0.192,4,0.22,5,0.22,9,0.165,12,0.502,14,0.463,15,0.019,18,0.312,21,0.424,22,0.538,23,0.502,51,0.957,55,0.22,59,0.574,63,0.444,112,0.015,113,0.015,115,0.69,124,0.69,127,0.65,149,2.161,164,1.06,168,1.115,169,1.115,281,3.274,303,5.079,306,4.526,311,5.337,313,4.053,340,5.079,617,4.723,618,5.919,619,5.919,620,5.919,621,4.723,622,7.12,623,4.723,624,4.723]],["title/classes/Set.html",[63,0.26,131,1.036]],["body/classes/Set.html",[3,0.175,4,0.201,5,0.201,9,0.195,12,0.458,14,0.309,15,0.019,18,0.227,21,0.309,23,0.458,51,0.874,55,0.26,59,0.524,63,0.384,66,1.53,112,0.014,113,0.014,115,0.63,124,0.63,127,0.593,131,1.939,132,3.211,149,1.441,164,1.254,166,2.548,167,2.548,168,1.318,169,1.318,211,3.426,469,3.211,470,3.846,576,3.57,577,3.57,579,3.959,580,3.959,581,4.27,582,2.996,583,2.756,585,3.297,603,2.996,612,3.297,625,3.699,626,5.315,627,4.311,628,4.311,629,4.792,630,3.699,631,3.699,632,3.699]],["title/classes/SetClicked.html",[63,0.26,284,1.843]],["body/classes/SetClicked.html",[3,0.145,4,0.166,5,0.166,9,0.124,12,0.379,13,1.101,14,0.403,15,0.02,16,1.579,18,0.259,21,0.352,22,0.405,23,0.522,24,0.483,32,1.642,41,0.433,42,0.722,51,0.722,55,0.307,58,3.1,59,0.433,63,0.464,65,0.976,92,0.551,112,0.012,113,0.012,115,0.52,124,0.52,127,0.49,131,0.976,149,1.19,155,1.562,156,0.976,164,1.477,168,1.432,169,1.432,173,0.976,180,1.252,204,1.465,220,1.19,252,1.318,266,1.465,267,1.19,268,1.132,270,2.259,271,1.252,272,1.736,273,1.97,274,3.103,275,1.97,276,1.547,277,3.145,278,3.288,279,2.396,280,1.736,281,3.355,282,2.957,283,1.736,284,2.957,285,2.111,286,2.396,287,1.846,288,1.736,289,2.111,290,1.846,633,3.561,634,3.561]],["title/classes/SetHover.html",[63,0.26,279,1.843]],["body/classes/SetHover.html",[3,0.145,4,0.166,5,0.166,9,0.124,12,0.379,13,1.101,14,0.403,15,0.02,16,1.579,18,0.259,21,0.352,22,0.405,23,0.522,24,0.483,32,1.642,41,0.433,42,0.722,51,0.722,55,0.307,58,3.1,59,0.433,63,0.464,65,0.976,92,0.551,112,0.012,113,0.012,115,0.52,124,0.52,127,0.49,131,0.976,149,1.19,155,1.562,156,0.976,164,1.477,168,1.432,169,1.432,173,0.976,180,1.252,204,1.465,220,1.19,252,1.318,266,1.465,267,1.19,268,1.132,270,2.259,271,1.252,272,1.736,273,1.97,274,3.103,275,1.97,276,1.547,277,3.145,278,3.288,279,2.957,280,1.736,281,3.355,282,2.957,283,2.396,284,2.396,285,2.111,286,1.736,287,1.846,288,1.736,289,2.111,290,1.846,635,3.561,636,3.561]],["title/classes/SetIllustrationUrl.html",[43,2.091,63,0.26]],["body/classes/SetIllustrationUrl.html",[3,0.164,4,0.188,5,0.188,6,2.605,7,2.605,9,0.141,12,0.429,13,1.288,14,0.289,15,0.02,17,2.084,18,0.281,21,0.383,22,0.459,23,0.679,24,0.289,40,1.572,41,0.49,42,0.817,43,2.956,44,2.605,51,0.817,52,2.922,55,0.298,59,0.49,63,0.457,65,1.105,66,1.464,67,2.605,92,0.624,112,0.014,113,0.014,115,0.589,124,0.589,127,0.555,131,1.82,149,1.347,156,1.105,164,1.433,166,2.466,167,2.466,168,1.262,169,1.262,173,1.105,180,1.417,252,1.492,265,2.577,266,1.658,267,1.347,268,1.282,269,2.577,270,1.853,271,1.417,554,2.39,637,4.031]],["title/classes/SetSize.html",[63,0.26,603,2.627]],["body/classes/SetSize.html",[3,0.172,4,0.197,5,0.197,9,0.193,12,0.45,14,0.303,15,0.019,18,0.223,21,0.303,23,0.45,51,0.858,55,0.257,59,0.515,63,0.38,66,1.512,112,0.014,113,0.014,115,0.618,124,0.618,127,0.583,131,1.896,132,2.195,149,1.415,164,1.239,166,2.526,167,2.526,168,1.303,169,1.303,211,3.599,469,3.183,470,3.828,576,3.528,577,3.528,579,3.528,580,3.926,581,3.238,582,4.268,583,3.926,585,4.221,603,3.836,612,3.238,625,3.634,626,5.27,629,4.737,630,4.737,631,4.737,632,4.737,638,4.235,639,4.235]],["title/classes/SourceRefsSelectors.html",[63,0.26,640,3.243]],["body/classes/SourceRefsSelectors.html",[3,0.189,4,0.314,5,0.216,9,0.162,10,0.991,12,0.494,14,0.332,15,0.019,18,0.338,21,0.332,22,0.529,26,1.211,38,2.569,39,3.744,55,0.216,59,0.565,63,0.319,68,1.758,77,1.337,112,0.015,113,0.015,115,0.678,117,3.472,118,1.862,119,3.127,122,1.633,124,0.678,127,0.639,133,2.569,562,3.472,563,3.472,640,5.026,641,4.645,642,5.857,643,5.026,644,5.857,645,6.084,646,4.645,647,4.645,648,5.026,649,4.645,650,4.645]],["title/injectables/SourceRefsState.html",[19,0.986,38,2.091]],["body/injectables/SourceRefsState.html",[3,0.151,4,0.311,5,0.173,9,0.13,10,0.792,12,0.537,13,0.642,14,0.411,15,0.02,16,1.532,17,1.447,18,0.34,19,1.318,20,1.373,21,0.266,22,0.422,23,0.395,24,0.497,25,2.464,26,0.968,27,2.802,28,1.923,29,1.809,38,2.796,41,0.829,42,1.251,55,0.173,56,2.962,57,3.513,59,0.699,61,1.923,63,0.255,65,1.385,68,1.385,69,2.196,70,2.62,77,1.068,105,1.373,107,2.997,112,0.013,113,0.013,118,1.607,122,1.777,124,0.738,127,0.696,136,1.706,140,2.579,142,2.579,171,0.968,172,1.612,178,1.447,252,1.871,253,1.923,254,2.2,259,1.923,260,2.2,261,2.2,518,3.995,562,3.408,563,3.408,643,3.184,645,3.184,648,5.296,651,3.184,652,3.71,653,3.71,654,3.71,655,3.71]],["title/injectables/StateAnalyticsPluginService.html",[19,0.986,471,2.416]],["body/injectables/StateAnalyticsPluginService.html",[3,0.099,4,0.114,5,0.114,9,0.13,10,0.521,12,0.26,14,0.493,15,0.02,16,1.489,18,0.267,19,1.426,20,0.904,23,0.739,24,0.454,26,0.637,55,0.211,57,3.527,59,0.297,63,0.168,66,1.644,68,1.498,69,1.969,72,1.123,77,1.574,78,2.213,92,0.846,105,1.677,112,0.009,113,0.009,118,1.187,124,0.357,127,0.336,132,1.935,136,1.123,171,0.637,172,1.622,178,1.456,208,1.266,220,1.515,222,2.594,253,1.266,259,2.631,268,0.776,294,2.594,335,1.867,354,2.687,363,1.561,376,2.095,454,1.697,466,2.594,471,2.897,472,4.137,473,4.949,478,1.867,479,3.881,481,1.697,485,1.697,486,1.697,487,1.697,552,4.32,580,1.561,656,2.855,657,2.855,658,1.867,659,3.733,660,6.187,661,5.075,662,2.442,663,3.733,664,3.733,665,6.829,666,4.532,667,4.532,668,2.442,669,3.889,670,2.442,671,3.733,672,2.442,673,3.204,674,3.204,675,2.855,676,3.204,677,2.095,678,3.204,679,2.095,680,2.095,681,2.095,682,2.095,683,2.095,684,2.095,685,2.095,686,3.204,687,3.204,688,2.442,689,3.889,690,2.095,691,2.095,692,2.095,693,3.204,694,3.204,695,2.095,696,2.442,697,2.442,698,2.442,699,2.442,700,2.442,701,2.442,702,2.442,703,2.442,704,2.442,705,2.442,706,2.442,707,2.442,708,2.442,709,2.442,710,2.442,711,3.204,712,2.442,713,2.442,714,2.442,715,2.442,716,2.442,717,5.075,718,3.733,719,4.532,720,2.442,721,2.442,722,2.442,723,2.442,724,2.095,725,2.095]],["title/classes/TissueLibrarySelectors.html",[63,0.26,726,3.243]],["body/classes/TissueLibrarySelectors.html",[3,0.171,4,0.195,5,0.195,9,0.191,10,0.895,12,0.446,13,0.725,14,0.437,15,0.019,16,1.361,18,0.341,21,0.3,22,0.477,24,0.464,26,1.093,55,0.195,59,0.51,63,0.42,66,1.149,68,1.502,77,1.207,112,0.014,113,0.014,115,0.612,118,1.743,119,2.979,122,1.474,124,0.612,126,4.194,127,0.577,133,3.38,171,1.799,208,2.843,474,4.3,475,3.988,568,3.811,569,3.811,572,3.811,726,4.706,727,4.192,728,5.483,729,5.483,730,5.483,731,4.957,732,4.192,733,4.192,734,6.111,735,5.483,736,5.483,737,3.598,738,4.192,739,4.192,740,4.192]],["title/injectables/TissueLibraryState.html",[19,0.986,474,2.416]],["body/injectables/TissueLibraryState.html",[3,0.16,4,0.183,5,0.183,9,0.183,10,0.838,12,0.418,14,0.281,15,0.019,16,1.303,18,0.357,19,1.37,20,1.454,21,0.281,22,0.447,23,0.418,24,0.515,26,1.024,27,2.885,28,2.036,29,1.915,41,0.477,55,0.183,56,2.282,59,0.638,63,0.27,65,1.439,66,1.076,68,1.439,70,2.723,77,1.131,112,0.013,113,0.013,118,1.67,122,1.381,124,0.574,127,0.541,136,1.806,167,2.16,171,1.833,178,2.048,241,3.65,253,2.036,254,2.328,259,2.723,260,2.328,261,2.328,346,3.65,474,3.357,475,4.168,568,3.65,569,3.65,572,2.729,695,3.37,731,3.003,737,3.37,741,3.927,742,5.252,743,5.252,744,5.421,745,3.927,746,5.252,747,3.927,748,3.927,749,3.37,750,3.927,751,3.927]],["title/dependencies.html",[752,2.725,753,3.468]],["body/dependencies.html",[15,0.019,20,2.118,112,0.017,113,0.017,753,5.082,754,5.721,755,5.721,756,5.721,757,5.721,758,6.645]],["title/miscellaneous/functions.html",[759,1.883,760,3.891]],["body/miscellaneous/functions.html",[9,0.11,10,1.125,11,1.452,12,0.709,14,0.486,15,0.019,16,0.784,33,2.499,48,1.672,59,0.81,68,1.887,69,1.372,105,1.672,112,0.011,113,0.011,126,3.454,127,0.918,132,1.637,148,1.747,151,1.637,155,2.189,162,2.202,166,1.299,170,1.54,184,1.54,185,1.54,192,2.195,193,3.139,194,3.139,201,4.655,204,1.858,208,2.733,220,2.391,222,4.231,257,4.525,278,2.202,293,2.195,335,2.416,355,2.711,363,2.019,375,3.876,388,2.195,420,2.711,472,3.371,552,3.678,580,2.019,656,2.416,657,2.416,658,3.454,675,2.416,679,2.711,680,2.711,681,2.711,682,2.711,683,2.711,684,2.711,685,5.434,686,2.711,687,2.711,749,2.711,759,1.873,760,2.711,761,4.842,762,6.519,763,2.416,764,4.517,765,4.517,766,4.517,767,4.517,768,4.517,769,4.517,770,2.711,771,3.159,772,3.159,773,3.159,774,3.159,775,3.159,776,3.159,777,6.087,778,3.159,779,6.087,780,3.159,781,3.159,782,5.754,783,3.159,784,3.159,785,3.159,786,3.159,787,3.159,788,3.159,789,3.159,790,3.159,791,3.159,792,3.159,793,3.159,794,3.159,795,3.159,796,4.517,797,3.159,798,3.159,799,3.159,800,3.159,801,3.159,802,3.159,803,3.159,804,3.159,805,2.416,806,3.159]],["title/index.html",[10,0.678,807,3.176,808,3.176]],["body/index.html",[15,0.017,24,0.474,112,0.017,113,0.017,476,4.346,809,5.683,810,6.619,811,5.683,812,6.619,813,6.619,814,5.683,815,5.683,816,5.683]],["title/modules.html",[452,3.914]],["body/modules.html",[15,0.017,112,0.017,113,0.017,323,4.482,451,4.074,452,4.482,817,5.861,818,5.861]],["title/overview.html",[819,4.392]],["body/overview.html",[2,3.358,15,0.017,42,1.148,97,3.358,112,0.017,113,0.017,115,0.827,136,2.604,450,3.936,567,4.86,753,5.052,819,4.86,820,6.606,821,5.663,822,5.663,823,5.663]],["title/properties.html",[11,2.085,752,2.725]],["body/properties.html",[11,2.704,15,0.018,112,0.017,113,0.017,824,5.882,825,5.882]],["title/miscellaneous/typealiases.html",[759,1.883,826,4.534]],["body/miscellaneous/typealiases.html",[6,1.928,7,1.928,8,4.035,10,0.844,14,0.529,15,0.013,23,0.421,24,0.283,25,3.31,56,3.098,112,0.013,113,0.013,151,3.078,152,3.521,157,3.078,171,1.031,184,1.928,185,1.928,186,4.845,188,3.394,192,3.667,198,4.528,199,3.394,200,3.025,201,4.035,202,5.826,203,2.05,204,1.627,205,3.025,206,3.025,326,4.845,343,5.096,346,2.749,475,2.345,491,3.025,562,2.345,563,2.345,568,2.749,569,2.749,572,2.749,651,4.528,731,4.035,744,4.528,759,2.345,761,4.541,763,5.047,805,3.025,827,3.955,828,3.394,829,3.955,830,3.394,831,5.277,832,5.938,833,5.664,834,6.6,835,6.6,836,6.335,837,3.394,838,6.335,839,3.394,840,3.394,841,3.394,842,3.955,843,5.277,844,3.955,845,3.955]],["title/miscellaneous/variables.html",[759,1.883,846,3.891]],["body/miscellaneous/variables.html",[3,0.105,6,0.747,7,0.747,9,0.09,10,0.327,11,1.524,12,0.163,14,0.355,15,0.019,17,0.598,19,0.4,21,0.11,23,0.668,24,0.11,48,1.227,52,1.616,53,1.964,63,0.267,67,1.116,72,1.181,78,0.908,112,0.007,113,0.007,132,0.794,147,0.908,155,2.159,157,1.331,159,0.908,160,0.908,162,1.891,170,1.252,171,1.011,184,1.252,185,1.252,186,2.966,196,2.204,197,3.329,200,2.535,203,2.011,204,1.923,205,1.964,206,1.964,207,2.845,208,2.239,209,1.785,210,2.204,211,2.881,212,3.707,213,2.204,214,1.315,215,1.315,216,1.315,217,2.204,218,1.315,219,1.315,220,1.444,221,1.315,222,1.785,223,1.315,224,1.315,225,3.707,226,1.315,227,1.315,265,1.642,267,1.297,268,1.373,269,0.979,273,0.848,275,0.848,291,1.785,295,1.065,300,1.065,311,1.172,324,3.304,337,4.261,338,2.204,339,1.315,354,1.965,363,4.726,371,2.204,372,2.204,409,3.707,454,1.065,466,1.065,469,0.794,471,0.979,472,2.988,481,1.065,485,1.065,486,1.065,487,1.065,552,4.696,562,0.908,563,0.908,564,1.964,566,1.172,586,2.204,656,1.964,657,1.172,658,2.966,669,2.204,673,2.845,674,2.845,675,1.172,676,1.315,677,2.204,678,1.315,689,2.845,690,1.315,691,1.315,692,1.315,693,1.315,694,1.315,711,2.845,724,1.315,725,2.204,759,0.908,761,2.966,763,2.966,770,2.845,805,1.172,828,1.315,830,1.315,833,3.329,837,3.329,839,3.329,840,3.329,841,2.845,846,1.315,847,5.208,848,7.08,849,1.532,850,1.532,851,2.568,852,6.791,853,2.568,854,1.532,855,2.568,856,3.315,857,2.568,858,4.32,859,3.879,860,2.568,861,2.568,862,2.568,863,2.568,864,2.568,865,2.568,866,2.568,867,2.568,868,2.568,869,2.568,870,2.568,871,2.568,872,2.568,873,2.568,874,5.414,875,2.568,876,2.568,877,4.965,878,3.879,879,3.315,880,3.315,881,2.568,882,3.879,883,2.568,884,2.568,885,2.568,886,1.532,887,1.532,888,1.532,889,4.32,890,1.532,891,1.532,892,1.532,893,1.532,894,1.532,895,5.745,896,5.88,897,1.532,898,2.568,899,3.879,900,1.532,901,1.532,902,3.315,903,4.674,904,2.568,905,1.532,906,1.532,907,1.532,908,1.532,909,1.532,910,1.532,911,1.532,912,4.674,913,1.532,914,2.568,915,2.568,916,1.532,917,1.532,918,3.879,919,1.532,920,1.532,921,1.532,922,3.315,923,1.532,924,1.532,925,1.532,926,1.532,927,1.532,928,1.532,929,1.532,930,1.532,931,1.532,932,1.532,933,1.532,934,1.532,935,1.532,936,1.532,937,1.532,938,1.532,939,1.532,940,1.532,941,1.532,942,1.532,943,1.532,944,1.532,945,1.532,946,1.532,947,1.532,948,1.532,949,1.532,950,1.532,951,1.532,952,1.532,953,1.532,954,1.532,955,3.879,956,1.532,957,1.532,958,1.532,959,1.532,960,1.532,961,1.532,962,1.532,963,1.532,964,1.532,965,2.568,966,1.532,967,3.315,968,1.532,969,1.532,970,2.568,971,1.532,972,2.568,973,1.532]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":420,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":825,"title":{},"body":{"properties.html":{}}}],["1",{"_index":97,"title":{"classes/Load-1.html":{},"classes/Reset-1.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{},"overview.html":{}}}],["15.1.0",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":557,"title":{"classes/Load-2.html":{},"classes/Reset-2.html":{}},"body":{}}],["2.3.0",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":559,"title":{"classes/Load-3.html":{},"classes/Reset-3.html":{}},"body":{}}],["31",{"_index":823,"title":{},"body":{"overview.html":{}}}],["4",{"_index":561,"title":{"classes/Load-4.html":{}},"body":{}}],["5",{"_index":567,"title":{"classes/Load-5.html":{}},"body":{"overview.html":{}}}],["9",{"_index":822,"title":{},"body":{"overview.html":{}}}],["_ctx",{"_index":314,"title":{},"body":{"injectables/ContactState.html":{}}}],["absence",{"_index":790,"title":{},"body":{"miscellaneous/functions.html":{}}}],["action",{"_index":23,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action('[contact",{"_index":624,"title":{},"body":{"classes/SendMessage.html":{}}}],["action('[screenmode",{"_index":629,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["action('[tissuelibrary",{"_index":573,"title":{},"body":{"classes/Load-5.html":{}}}],["action('add",{"_index":177,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["action('clear",{"_index":180,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('compute",{"_index":296,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["action('download",{"_index":181,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["action('highlight",{"_index":289,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["action('load",{"_index":173,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('register",{"_index":165,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["action('reset",{"_index":271,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('set",{"_index":270,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action(['clear",{"_index":138,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["action([clear",{"_index":104,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["action(addentry",{"_index":344,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearentries",{"_index":348,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearselection",{"_index":517,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(computeaggregates",{"_index":244,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["action(download",{"_index":352,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(highlightcelltype",{"_index":519,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(load",{"_index":70,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["action(registerformat",{"_index":365,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(reset",{"_index":107,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["action(sendmessage",{"_index":308,"title":{},"body":{"injectables/ContactState.html":{}}}],["action(set",{"_index":605,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["action(setclicked",{"_index":516,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(sethover",{"_index":515,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(setillustrationurl",{"_index":91,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["action(setsize",{"_index":609,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["action_log",{"_index":715,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["actiongroup",{"_index":156,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["actiongroup('activeftu",{"_index":269,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('cellsummary",{"_index":295,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('download",{"_index":160,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('illustrator",{"_index":275,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('sourcerefs",{"_index":566,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":354,"title":{},"body":{"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":44,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["activeftu",{"_index":60,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftuactions.load",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeftumodel",{"_index":1,"title":{"interfaces/ActiveFtuModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftuselectors",{"_index":114,"title":{"classes/ActiveFtuSelectors.html":{}},"body":{"classes/ActiveFtuSelectors.html":{}}}],["activeftustate",{"_index":64,"title":{"injectables/ActiveFtuState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["add",{"_index":88,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["addd",{"_index":154,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["added",{"_index":746,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["addentry",{"_index":146,"title":{"classes/AddEntry.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["addentry(ctx",{"_index":342,"title":{},"body":{"injectables/DownloadState.html":{}}}],["aggregate",{"_index":203,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_cell",{"_index":207,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row",{"_index":200,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row.array",{"_index":227,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregates",{"_index":191,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["aggregates(state",{"_index":230,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["aggregation",{"_index":774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aggregrated",{"_index":248,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["aggregrates",{"_index":190,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["alias",{"_index":843,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":827,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["analytics",{"_index":472,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["analyticsproviders",{"_index":488,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["anchor",{"_index":430,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.click",{"_index":435,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.download",{"_index":433,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.href",{"_index":434,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.remove",{"_index":436,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/common",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":368,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{}}}],["app",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptitle",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":845,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["array",{"_index":193,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["array.isarray(value",{"_index":722,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["available",{"_index":323,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules.html":{}}}],["base",{"_index":267,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["base_url",{"_index":93,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["base_url}2d",{"_index":98,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["based",{"_index":787,"title":{},"body":{"miscellaneous/functions.html":{}}}],["behaviour",{"_index":632,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["being",{"_index":666,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["bigint",{"_index":678,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":427,"title":{},"body":{"injectables/DownloadState.html":{}}}],["blob([entry.data",{"_index":402,"title":{},"body":{"injectables/DownloadState.html":{}}}],["boolean",{"_index":132,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["boolean/number/string/null/bigint/undefined",{"_index":684,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["brand('downloadformatid",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branded",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":403,"title":{},"body":{"injectables/DownloadState.html":{}}}],["browse",{"_index":818,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":426,"title":{},"body":{"injectables/DownloadState.html":{}}}],["builtin",{"_index":373,"title":{},"body":{"injectables/DownloadState.html":{}}}],["calculates",{"_index":794,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":835,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["cancels",{"_index":249,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["canceluncompleted",{"_index":71,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["case",{"_index":395,"title":{},"body":{"injectables/DownloadState.html":{}}}],["cell",{"_index":32,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["cellsummary",{"_index":194,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["cellsummaryactions",{"_index":30,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.load(iri",{"_index":79,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.reset",{"_index":108,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryaggregate",{"_index":192,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummaryaggregaterow",{"_index":201,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummarymodel",{"_index":183,"title":{"interfaces/CellSummaryModel.html":{}},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["cellsummaryselectors",{"_index":228,"title":{"classes/CellSummarySelectors.html":{}},"body":{"classes/CellSummarySelectors.html":{}}}],["cellsummarystate",{"_index":31,"title":{"injectables/CellSummaryState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["check",{"_index":680,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["checks",{"_index":130,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["children",{"_index":62,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["class",{"_index":63,"title":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/HighlightCellType.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":115,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/HighlightCellType.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"overview.html":{}}}],["clear",{"_index":40,"title":{"classes/Clear.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["clear(undefined",{"_index":137,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["clearentries",{"_index":179,"title":{"classes/ClearEntries.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["clearentries(ctx",{"_index":347,"title":{},"body":{"injectables/DownloadState.html":{}}}],["clears",{"_index":266,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["clearselection",{"_index":272,"title":{"classes/ClearSelection.html":{}},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["clearselection(undefined",{"_index":542,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["click",{"_index":497,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["clicked",{"_index":285,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["color",{"_index":210,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":783,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":205,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compute",{"_index":292,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregate",{"_index":257,"title":{},"body":{"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["computeaggregate(summary",{"_index":771,"title":{},"body":{"miscellaneous/functions.html":{}}}],["computeaggregates",{"_index":242,"title":{"classes/ComputeAggregates.html":{}},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregates(undefined",{"_index":243,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["computes",{"_index":85,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["configuration",{"_index":460,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["configuring",{"_index":459,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["const",{"_index":92,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["constant",{"_index":838,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constructor",{"_index":149,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["constructor(format",{"_index":319,"title":{},"body":{"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["constructor(hoverlabel",{"_index":447,"title":{},"body":{"classes/HighlightCellType.html":{}}}],["constructor(id",{"_index":150,"title":{},"body":{"classes/AddEntry.html":{}}}],["constructor(iri",{"_index":554,"title":{},"body":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/SetIllustrationUrl.html":{}}}],["constructor(isfullscreen",{"_index":627,"title":{},"body":{"classes/Set.html":{}}}],["constructor(message",{"_index":621,"title":{},"body":{"classes/SendMessage.html":{}}}],["constructor(readonly",{"_index":168,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["constructor(selectedonclick",{"_index":633,"title":{},"body":{"classes/SetClicked.html":{}}}],["constructor(selectedonhover",{"_index":635,"title":{},"body":{"classes/SetHover.html":{}}}],["constructor(size",{"_index":638,"title":{},"body":{"classes/SetSize.html":{}}}],["contact",{"_index":300,"title":{},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["contact.actions",{"_index":315,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactacknowledgement",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactions.sendmessage",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactmessage",{"_index":622,"title":{},"body":{"classes/SendMessage.html":{}}}],["contactservice",{"_index":305,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactstate",{"_index":297,"title":{"injectables/ContactState.html":{}},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["contains",{"_index":209,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":338,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":56,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["conversion",{"_index":442,"title":{},"body":{"injectables/DownloadState.html":{}}}],["convert",{"_index":336,"title":{},"body":{"injectables/DownloadState.html":{}}}],["converted",{"_index":424,"title":{},"body":{"injectables/DownloadState.html":{}}}],["count",{"_index":796,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('gradient",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('size",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid",{"_index":375,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["createdownloadformatid('png",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid('svg",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid(id",{"_index":806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid('about",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('embed",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('exploreftu",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('illustration",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpage",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpagereadmore",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('portal",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('producttitle",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('apptitle",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('contactacknowledgement",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegend",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegendinfo",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthdescription",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthimg",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthmoretext",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthtitle",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrodescription",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroimg",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintromoretext",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintropartners",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroreadmore",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrotitle",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metrics",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricslogo",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricstitle",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('productlogourl",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('producttitle",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('screensizenoticecontent",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegend",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegendinfo",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":166,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"miscellaneous/functions.html":{}}}],["ctx",{"_index":346,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["ctx.dispatch([new",{"_index":379,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.getstate",{"_index":391,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate",{"_index":382,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate(data",{"_index":751,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["current",{"_index":16,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":171,"title":{},"body":{"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset-1.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dataservice",{"_index":260,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["decorators",{"_index":122,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["default",{"_index":363,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_loggable_actions",{"_index":673,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":61,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["define",{"_index":833,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":124,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["dependencies",{"_index":753,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":700,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["depth",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":679,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["different",{"_index":339,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":440,"title":{},"body":{"injectables/DownloadState.html":{}}}],["discriminated",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispatch",{"_index":75,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["dispatch(new",{"_index":100,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["dispatched",{"_index":667,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["dispatches",{"_index":86,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["display",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.appendchild(anchor",{"_index":432,"title":{},"body":{"injectables/DownloadState.html":{}}}],["document.createelement('a",{"_index":431,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download",{"_index":48,"title":{"classes/Download.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["download(ctx",{"_index":351,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.action",{"_index":374,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.model",{"_index":158,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["download.state",{"_index":329,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["download_entry",{"_index":837,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format",{"_index":839,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format_id",{"_index":840,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_model",{"_index":841,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadactions",{"_index":46,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["downloadactions.clearentries",{"_index":111,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["downloadactions.download",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadactions.load(iri",{"_index":81,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["downloadcontext",{"_index":343,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloaddata(blob",{"_index":428,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadentry",{"_index":152,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformat",{"_index":157,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadformatid",{"_index":151,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformatid:'${id",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadmodel",{"_index":326,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloadremotedata(url",{"_index":444,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloads",{"_index":438,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadselectors",{"_index":321,"title":{"classes/DownloadSelectors.html":{}},"body":{"classes/DownloadSelectors.html":{}}}],["downloadstate",{"_index":47,"title":{"injectables/DownloadState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["draft.entries",{"_index":387,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.entries[createdownloadformatid(format",{"_index":389,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.entries[id",{"_index":390,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.formats[format.id",{"_index":384,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.isfullscreen",{"_index":614,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["draft.size",{"_index":616,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["each",{"_index":801,"title":{},"body":{"miscellaneous/functions.html":{}}}],["elements",{"_index":218,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoints",{"_index":503,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["enteries",{"_index":174,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["entires",{"_index":350,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entries",{"_index":170,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["entries[format",{"_index":392,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry",{"_index":148,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{}}}],["entry.ontologyid",{"_index":522,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["entry.url",{"_index":398,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry?.type",{"_index":394,"title":{},"body":{"injectables/DownloadState.html":{}}}],["error('cannot",{"_index":405,"title":{},"body":{"injectables/DownloadState.html":{}}}],["event",{"_index":707,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["execute",{"_index":816,"title":{},"body":{"index.html":{}}}],["expandrow",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandrow(row",{"_index":776,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expands",{"_index":778,"title":{},"body":{"miscellaneous/functions.html":{}}}],["explore",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exploreftu",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":55,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["extends",{"_index":164,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["extension",{"_index":409,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":268,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["fakebase",{"_index":411,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fakebase).pathname",{"_index":415,"title":{},"body":{"injectables/DownloadState.html":{}}}],["false",{"_index":613,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["fetch",{"_index":441,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fields",{"_index":493,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["filename",{"_index":396,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fileurl",{"_index":443,"title":{},"body":{"injectables/DownloadState.html":{}}}],["followed",{"_index":221,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":585,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["forked",{"_index":506,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["forkjoin",{"_index":499,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["form",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":162,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["format.id",{"_index":332,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats",{"_index":324,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["formats(state",{"_index":325,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats.ts",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formats[id",{"_index":410,"title":{},"body":{"injectables/DownloadState.html":{}}}],["formatted",{"_index":425,"title":{},"body":{"injectables/DownloadState.html":{}}}],["forroot",{"_index":455,"title":{},"body":{"modules/HraStateModule.html":{}}}],["forroot(options",{"_index":456,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["found",{"_index":788,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ftu",{"_index":17,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions",{"_index":45,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["ftu.actions.ts",{"_index":265,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions.ts:19",{"_index":637,"title":{},"body":{"classes/SetIllustrationUrl.html":{}}}],["ftu.actions.ts:8",{"_index":555,"title":{},"body":{"classes/Load.html":{}}}],["ftu.selectors.ts",{"_index":116,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:15",{"_index":125,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:9",{"_index":129,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state",{"_index":134,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state.ts",{"_index":8,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"miscellaneous/typealiases.html":{}}}],["ftu.state.ts:39",{"_index":141,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:56",{"_index":145,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:67",{"_index":139,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:76",{"_index":143,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu/active",{"_index":7,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu_data_impl_endpoints",{"_index":498,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["ftudataschemas",{"_index":195,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["ftudataschemas.cell_summary_row",{"_index":214,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["ftudataservice",{"_index":254,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["full",{"_index":593,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["fullscreen",{"_index":581,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["function",{"_index":685,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":760,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funtion",{"_index":683,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["ga",{"_index":696,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["generated",{"_index":809,"title":{},"body":{"index.html":{}}}],["getactiontypefrominstance",{"_index":670,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getactiontypefrominstance(action",{"_index":709,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getcolumnindex",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnindex(indexbyid",{"_index":781,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel",{"_index":766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel(items",{"_index":785,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow",{"_index":767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow(rowbyid",{"_index":791,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":126,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{}}}],["getstate",{"_index":73,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["getstate().iri",{"_index":76,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["getstate().mapping.find((entry",{"_index":521,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["getting",{"_index":807,"title":{"index.html":{}},"body":{}}],["gettotalcount",{"_index":768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettotalcount(row",{"_index":793,"title":{},"body":{"miscellaneous/functions.html":{}}}],["given",{"_index":293,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{}}}],["google",{"_index":479,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["googleanalyticsservice",{"_index":672,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["googleanalyticstoken",{"_index":482,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["gradient",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegend",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegendinfo",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":817,"title":{},"body":{"modules.html":{}}}],["group",{"_index":159,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["guess",{"_index":407,"title":{},"body":{"injectables/DownloadState.html":{}}}],["guessfilename(ctx",{"_index":408,"title":{},"body":{"injectables/DownloadState.html":{}}}],["handle",{"_index":57,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["handle(state",{"_index":659,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handler's",{"_index":844,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handles",{"_index":663,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handling",{"_index":241,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/TissueLibraryState.html":{}}}],["hasdata",{"_index":331,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["having",{"_index":188,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["helper",{"_index":842,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["highlightcelltype",{"_index":288,"title":{"classes/HighlightCellType.html":{}},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["highlightcelltype(undefined",{"_index":544,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["highlighted",{"_index":287,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["highlightedcell",{"_index":526,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["highlightedcell(undefined",{"_index":529,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["hover",{"_index":280,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["hovered",{"_index":495,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["hoveredcelltypeid",{"_index":494,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["hoverlabel",{"_index":290,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["hra",{"_index":21,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["hrastatemodule",{"_index":451,"title":{"modules/HraStateModule.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"modules.html":{}}}],["hrastatemoduleoptions",{"_index":457,"title":{"interfaces/HraStateModuleOptions.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["http",{"_index":377,"title":{},"body":{"injectables/DownloadState.html":{}}}],["httpclient",{"_index":367,"title":{},"body":{"injectables/DownloadState.html":{}}}],["https://base.com",{"_index":412,"title":{},"body":{"injectables/DownloadState.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":94,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["id",{"_index":155,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":54,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["ids.ts",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignoring",{"_index":802,"title":{},"body":{"miscellaneous/functions.html":{}}}],["illustrartor",{"_index":496,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustration",{"_index":52,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":274,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["illustrator",{"_index":36,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.actions",{"_index":500,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.state",{"_index":540,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratoractions",{"_index":34,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.load(iri",{"_index":80,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.reset",{"_index":109,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.setclicked",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustratoractions.sethover",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustratormodel",{"_index":490,"title":{"interfaces/IllustratorModel.html":{}},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrators",{"_index":502,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustratorselectors",{"_index":524,"title":{"classes/IllustratorSelectors.html":{}},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratorstate",{"_index":35,"title":{"injectables/IllustratorState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["image",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["immer",{"_index":370,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["implements",{"_index":376,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["importprovidersfrom",{"_index":465,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["importprovidersfrom(ngxgoogleanalyticsmodule.forroot(options.googleanalyticstoken",{"_index":489,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["imports",{"_index":483,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexbyid",{"_index":784,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicating",{"_index":789,"title":{},"body":{"miscellaneous/functions.html":{}}}],["individual",{"_index":619,"title":{},"body":{"classes/SendMessage.html":{}}}],["inferred",{"_index":836,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":301,"title":{},"body":{"injectables/ContactState.html":{}}}],["init",{"_index":362,"title":{},"body":{"injectables/DownloadState.html":{}}}],["initial",{"_index":804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializes",{"_index":281,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SendMessage.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["inject",{"_index":253,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["inject(contactservice",{"_index":317,"title":{},"body":{"injectables/ContactState.html":{}}}],["inject(ftu_data_impl_endpoints",{"_index":505,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["inject(ftudataservice",{"_index":261,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["inject(googleanalyticsservice",{"_index":697,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["inject(httpclient",{"_index":378,"title":{},"body":{"injectables/DownloadState.html":{}}}],["injectable",{"_index":19,"title":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":136,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"overview.html":{}}}],["injectiontoken",{"_index":668,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["injectiontoken('loggable",{"_index":692,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":504,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["injects",{"_index":695,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["input",{"_index":681,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":167,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/TissueLibraryState.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/SendMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{},"overview.html":{}}}],["intializes",{"_index":276,"title":{},"body":{"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["intro",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iri",{"_index":13,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{}}}],["iri(undefined",{"_index":121,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["iri.split('/').slice",{"_index":96,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["isactive",{"_index":120,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isactive(undefined",{"_index":128,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isfullscreen",{"_index":579,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["isfullscreen(state",{"_index":590,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["isprimitive",{"_index":769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isprimitive(value",{"_index":686,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":278,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/functions.html":{}}}],["items",{"_index":388,"title":{},"body":{"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["iterating",{"_index":797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["json.stringify(action",{"_index":712,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["key",{"_index":717,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["label",{"_index":204,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lanading",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landing",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpage",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthdescription",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthimg",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthmoretext",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthtitle",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedescription",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroimg",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintromoretext",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroreadmore",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagepartners",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagereadmore",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagetitle",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["large",{"_index":583,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["legend",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length",{"_index":777,"title":{},"body":{"miscellaneous/functions.html":{}}}],["less",{"_index":780,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":476,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"index.html":{}}}],["library.actions",{"_index":747,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.actions.ts",{"_index":570,"title":{},"body":{"classes/Load-5.html":{}}}],["library.model",{"_index":737,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["library.model.ts",{"_index":832,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["library.selectors.ts",{"_index":727,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.selectors.ts:14",{"_index":733,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state",{"_index":738,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state.ts",{"_index":741,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.state.ts:23",{"_index":745,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library/tissue",{"_index":569,"title":{},"body":{"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["link",{"_index":53,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"miscellaneous/variables.html":{}}}],["linkid",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkregistry",{"_index":87,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions",{"_index":49,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions.add(illustration",{"_index":101,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions.navigate",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linktype",{"_index":50,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linktype.external",{"_index":102,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["list",{"_index":690,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":41,"title":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["load(ctx",{"_index":356,"title":{},"body":{"injectables/DownloadState.html":{}}}],["load(undefined",{"_index":140,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["loaded",{"_index":176,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["loading",{"_index":571,"title":{},"body":{"classes/Load-5.html":{}}}],["loads",{"_index":65,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["logaction(action",{"_index":708,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["loggable",{"_index":674,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggable_actions",{"_index":689,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggabletypes",{"_index":701,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logged",{"_index":691,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":664,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logging",{"_index":698,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["login",{"_index":724,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":586,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":705,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["managing",{"_index":299,"title":{},"body":{"injectables/ContactState.html":{}}}],["map",{"_index":782,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapping",{"_index":282,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["mapping(undefined",{"_index":532,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["match",{"_index":520,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["match.ontologyid",{"_index":523,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["matching",{"_index":113,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medical",{"_index":501,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["message",{"_index":311,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":303,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["metadata",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":310,"title":{},"body":{"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["methods",{"_index":118,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["metrics",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricslogo",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricstitle",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":759,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":470,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["mode.actions",{"_index":611,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.actions.ts",{"_index":625,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["mode.actions.ts:15",{"_index":639,"title":{},"body":{"classes/SetSize.html":{}}}],["mode.actions.ts:4",{"_index":628,"title":{},"body":{"classes/Set.html":{}}}],["mode.model",{"_index":596,"title":{},"body":{"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["mode.model.ts",{"_index":578,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["mode.selectors.ts",{"_index":589,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.selectors.ts:15",{"_index":592,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.selectors.ts:24",{"_index":595,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state",{"_index":597,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state.ts",{"_index":601,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.state.ts:23",{"_index":606,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.state.ts:36",{"_index":610,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode/screen",{"_index":577,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["model",{"_index":187,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{}}}],["module",{"_index":450,"title":{"modules/HraStateModule.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"overview.html":{}}}],["modules",{"_index":452,"title":{"modules.html":{}},"body":{"modules/HraStateModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":463,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["more",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":487,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":59,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["name.includes",{"_index":422,"title":{},"body":{"injectables/DownloadState.html":{}}}],["name}${extension",{"_index":423,"title":{},"body":{"injectables/DownloadState.html":{}}}],["name}.html",{"_index":99,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["navigation",{"_index":90,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["needs",{"_index":718,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["new",{"_index":78,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":660,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["next(state",{"_index":704,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngmodule",{"_index":464,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngx",{"_index":478,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":477,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxs",{"_index":361,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxs/store",{"_index":26,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["ngxs_plugins",{"_index":466,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["ngxsmodule",{"_index":467,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxsmodule.forfeature",{"_index":484,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxsnextpluginfn",{"_index":661,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxsoninit",{"_index":341,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsoninit(ctx",{"_index":359,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsplugin",{"_index":671,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["node",{"_index":735,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["non",{"_index":803,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notice",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":687,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":222,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":810,"title":{},"body":{"index.html":{}}}],["object",{"_index":208,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.values(formats).filter(hasdata",{"_index":333,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["objects",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":27,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["operations",{"_index":775,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":462,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["organ",{"_index":175,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["organs",{"_index":358,"title":{},"body":{"injectables/DownloadState.html":{}}}],["out",{"_index":821,"title":{},"body":{"overview.html":{}}}],["over",{"_index":798,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":819,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":752,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":66,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["parameters",{"_index":127,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partners",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchstate",{"_index":74,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["path",{"_index":413,"title":{},"body":{"injectables/DownloadState.html":{}}}],["path.split('/').filter((seg",{"_index":417,"title":{},"body":{"injectables/DownloadState.html":{}}}],["payload",{"_index":711,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["peer",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["performs",{"_index":773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe(tap",{"_index":84,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["plugin",{"_index":473,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["plugin.service.ts",{"_index":658,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["plugin.service.ts:51",{"_index":662,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["plugin/default",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin/state",{"_index":657,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png_format",{"_index":371,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["portal",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primitive",{"_index":675,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["primitive_types",{"_index":677,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["primitive_types.includes(typeof",{"_index":688,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["private",{"_index":259,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["produce",{"_index":369,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["produce((draft",{"_index":383,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["product",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productlogourl",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producttitle",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":749,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["provide",{"_index":485,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":693,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":669,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":461,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["provides",{"_index":454,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":480,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["read",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":178,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["record",{"_index":734,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["references",{"_index":648,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["refs",{"_index":39,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/SourceRefsSelectors.html":{}}}],["refs.actions",{"_index":654,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.actions.ts",{"_index":564,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["refs.actions.ts:10",{"_index":565,"title":{},"body":{"classes/Load-4.html":{}}}],["refs.selectors.ts",{"_index":641,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.selectors.ts:9",{"_index":647,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state",{"_index":649,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state.ts",{"_index":651,"title":{},"body":{"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["refs.state.ts:27",{"_index":652,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.state.ts:35",{"_index":653,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs/source",{"_index":563,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["regarding",{"_index":615,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["register",{"_index":161,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["registerformat",{"_index":163,"title":{"classes/RegisterFormat.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["registerformat(ctx",{"_index":364,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(png_format",{"_index":381,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(svg_format",{"_index":380,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registry",{"_index":89,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{}}}],["releases/v1.4/docs/2d",{"_index":95,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["representing",{"_index":198,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["required",{"_index":219,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":42,"title":{"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"overview.html":{}}}],["reset(undefined",{"_index":142,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["resets",{"_index":252,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{}}}],["resource",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetype",{"_index":446,"title":{},"body":{"injectables/DownloadState.html":{}}}],["result",{"_index":510,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["result$.pipe",{"_index":511,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["result.url",{"_index":514,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["results",{"_index":112,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retreiving",{"_index":728,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["retrieves",{"_index":786,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":77,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["returns",{"_index":68,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":694,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":779,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rowbyid",{"_index":792,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rows",{"_index":206,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":814,"title":{},"body":{"index.html":{}}}],["running",{"_index":811,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":29,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["save",{"_index":439,"title":{},"body":{"injectables/DownloadState.html":{}}}],["schema",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":469,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"miscellaneous/variables.html":{}}}],["screenmode",{"_index":612,"title":{},"body":{"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["screenmodeaction.set",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screenmodemodel",{"_index":575,"title":{"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screenmodeselectors",{"_index":588,"title":{"classes/ScreenModeSelectors.html":{}},"body":{"classes/ScreenModeSelectors.html":{}}}],["screenmodestate",{"_index":468,"title":{"injectables/ScreenModeState.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screensizenoticecontent",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seg",{"_index":418,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments",{"_index":416,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments.length",{"_index":419,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments[segments.length",{"_index":421,"title":{},"body":{"injectables/DownloadState.html":{}}}],["selected",{"_index":492,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["selectedformat",{"_index":182,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["selectedonclick",{"_index":286,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selectedonclicked",{"_index":527,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonclicked(undefined",{"_index":534,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonhover",{"_index":283,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selectedonhovered",{"_index":528,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonhovered(undefined",{"_index":536,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selection",{"_index":58,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selections",{"_index":103,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["selector",{"_index":133,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["selector(['activeftustate",{"_index":123,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector(['cellsummarystate",{"_index":231,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector(['downloadstate",{"_index":327,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["selector(['illustratorstate",{"_index":530,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector(['screenmodestate",{"_index":591,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["selector(['sourcerefsstate",{"_index":646,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector(['tissuelibrarystate",{"_index":732,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selector([activeftustate",{"_index":135,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector([cellsummarystate",{"_index":237,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector([downloadstate",{"_index":330,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["selector([illustratorstate",{"_index":541,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector([screenmodestate",{"_index":598,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["selector([sourcerefsstate",{"_index":650,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector([tissuelibrarystate",{"_index":739,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selectors",{"_index":117,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{}}}],["send",{"_index":313,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sending",{"_index":302,"title":{},"body":{"injectables/ContactState.html":{}}}],["sendmessage",{"_index":306,"title":{"classes/SendMessage.html":{}},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sendmessage(_ctx",{"_index":307,"title":{},"body":{"injectables/ContactState.html":{}}}],["sends",{"_index":618,"title":{},"body":{"classes/SendMessage.html":{}}}],["serialize",{"_index":682,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["serialize(this",{"_index":720,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serialized",{"_index":719,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serializes",{"_index":716,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["service",{"_index":172,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["set",{"_index":131,"title":{"classes/Set.html":{}},"body":{"classes/ActiveFtuSelectors.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["set(inject(loggable_actions).map(getactiontypefrominstance",{"_index":702,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["set(undefined",{"_index":604,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["setactive",{"_index":742,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["setactive(ctx",{"_index":743,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["setclicked",{"_index":284,"title":{"classes/SetClicked.html":{}},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["setclicked(undefined",{"_index":548,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["sethover",{"_index":279,"title":{"classes/SetHover.html":{}},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["sethover(undefined",{"_index":550,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["setillustrationurl",{"_index":43,"title":{"classes/SetIllustrationUrl.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["setillustrationurl(iri",{"_index":83,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["setillustrationurl(undefined",{"_index":144,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["sets",{"_index":277,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["setsize",{"_index":603,"title":{"classes/SetSize.html":{}},"body":{"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["setsize(undefined",{"_index":608,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["setstate",{"_index":518,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["setting",{"_index":699,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["show",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["single",{"_index":199,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":211,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"miscellaneous/variables.html":{}}}],["size(state",{"_index":594,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["sizelegend",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sizelegendinfo",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["small",{"_index":582,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["small/large",{"_index":630,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["sourcereference",{"_index":645,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences",{"_index":643,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences(refs",{"_index":644,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsactions",{"_index":37,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.load(iri",{"_index":82,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.reset",{"_index":110,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsselectors",{"_index":640,"title":{"classes/SourceRefsSelectors.html":{}},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsstate",{"_index":38,"title":{"injectables/SourceRefsState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcerefstate",{"_index":642,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["specified",{"_index":355,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["src/.../active",{"_index":828,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../builtin",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cell",{"_index":761,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.action.ts",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.model.ts",{"_index":763,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../illustrator.actions.ts",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../illustrator.state.ts",{"_index":829,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../link",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../source",{"_index":830,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../state",{"_index":770,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":831,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/active",{"_index":6,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cell",{"_index":184,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.actions.ts",{"_index":617,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.actions.ts:5",{"_index":623,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.state.ts",{"_index":298,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/contact/contact.state.ts:16",{"_index":309,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/download/builtin",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts",{"_index":147,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts:11",{"_index":574,"title":{},"body":{"classes/RegisterFormat.html":{}}}],["src/lib/download/download.action.ts:24",{"_index":558,"title":{},"body":{"classes/Load-2.html":{}}}],["src/lib/download/download.action.ts:37",{"_index":153,"title":{},"body":{"classes/AddEntry.html":{}}}],["src/lib/download/download.action.ts:52",{"_index":320,"title":{},"body":{"classes/Download.html":{}}}],["src/lib/download/download.model.ts",{"_index":805,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.selectors.ts",{"_index":322,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.selectors.ts:15",{"_index":328,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.state.ts",{"_index":334,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:113",{"_index":353,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:40",{"_index":360,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:50",{"_index":366,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:65",{"_index":357,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:86",{"_index":345,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:99",{"_index":349,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/illustrator/illustrator.actions.ts",{"_index":273,"title":{},"body":{"classes/ClearSelection.html":{},"classes/HighlightCellType.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/variables.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:10",{"_index":560,"title":{},"body":{"classes/Load-3.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:20",{"_index":636,"title":{},"body":{"classes/SetHover.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:30",{"_index":634,"title":{},"body":{"classes/SetClicked.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:40",{"_index":448,"title":{},"body":{"classes/HighlightCellType.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts",{"_index":525,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:14",{"_index":539,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:22",{"_index":537,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:30",{"_index":535,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:38",{"_index":533,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:46",{"_index":531,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.state.ts",{"_index":491,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/illustrator/illustrator.state.ts:106",{"_index":545,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:46",{"_index":553,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:54",{"_index":546,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:74",{"_index":551,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:82",{"_index":549,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:90",{"_index":543,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:98",{"_index":547,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/link",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/resource",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/screen",{"_index":576,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["src/lib/source",{"_index":562,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state",{"_index":656,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state.module.ts",{"_index":453,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["src/lib/state.module.ts:47",{"_index":458,"title":{},"body":{"modules/HraStateModule.html":{}}}],["src/lib/tissue",{"_index":568,"title":{},"body":{"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":808,"title":{"index.html":{}},"body":{}}],["state",{"_index":24,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.aggregates",{"_index":238,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state.isfullscreen",{"_index":599,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["state.nodes",{"_index":740,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["state.size",{"_index":600,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["state.summaries",{"_index":239,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state_logger_provider",{"_index":725,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["stateanalyticspluginservice",{"_index":471,"title":{"injectables/StateAnalyticsPluginService.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["statecontext",{"_index":25,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["states",{"_index":106,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["static",{"_index":119,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["store",{"_index":294,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["stores",{"_index":246,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["storing",{"_index":602,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["string",{"_index":220,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/ClearSelection.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":216,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["submitted",{"_index":620,"title":{},"body":{"classes/SendMessage.html":{}}}],["submitting",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summaries",{"_index":189,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summaries(state",{"_index":233,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summaries.map(computeaggregate",{"_index":264,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary",{"_index":33,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"miscellaneous/functions.html":{}}}],["summary.actions",{"_index":256,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.actions.ts",{"_index":291,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["summary.actions.ts:8",{"_index":556,"title":{},"body":{"classes/Load-1.html":{}}}],["summary.helpers",{"_index":258,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.helpers.ts",{"_index":762,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary.model",{"_index":235,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summary.model.ts",{"_index":186,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summary.selectors.ts",{"_index":229,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:10",{"_index":232,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:16",{"_index":234,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state",{"_index":236,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state.ts",{"_index":240,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:27",{"_index":247,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:38",{"_index":245,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:48",{"_index":251,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary/cell",{"_index":185,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summing",{"_index":799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["super",{"_index":169,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["svg",{"_index":337,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["svg_format",{"_index":372,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":393,"title":{},"body":{"injectables/DownloadState.html":{}}}],["switchmap",{"_index":255,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["takes",{"_index":772,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tap",{"_index":28,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["tap((items",{"_index":386,"title":{},"body":{"injectables/DownloadState.html":{}}}],["tap((result",{"_index":512,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["tap((summaries",{"_index":263,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["test",{"_index":815,"title":{},"body":{"index.html":{}}}],["tests",{"_index":813,"title":{},"body":{"index.html":{}}}],["text",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.contact.sendmessage(message",{"_index":318,"title":{},"body":{"injectables/ContactState.html":{}}}],["this.dataservice.getcellsummaries(iri).pipe",{"_index":262,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.dataservice.getdatafilereferences(iri).pipe",{"_index":385,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.dataservice.getillustrationmapping(iri",{"_index":509,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getillustrationurl(iri",{"_index":508,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getsourcereferences(iri).pipe(tap(setstate",{"_index":655,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["this.dataservice.gettissuelibrary().pipe(tap((data",{"_index":750,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["this.downloaddata(data",{"_index":400,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloaddata(new",{"_index":401,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloadremotedata(entry.url).pipe(tap((data",{"_index":399,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.endpoints.basehref",{"_index":513,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.ga.event(type",{"_index":714,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.guessfilename(ctx",{"_index":397,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.http.get(url",{"_index":445,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.logaction(action",{"_index":703,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.loggabletypes.has(type",{"_index":710,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.serialize",{"_index":713,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["throw",{"_index":404,"title":{},"body":{"injectables/DownloadState.html":{}}}],["tissedata",{"_index":736,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissue",{"_index":475,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrary",{"_index":572,"title":{},"body":{"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarycontext",{"_index":744,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarymodel",{"_index":731,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryselectors",{"_index":726,"title":{"classes/TissueLibrarySelectors.html":{}},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissuelibraryservice",{"_index":748,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["tissuelibrarystate",{"_index":474,"title":{"injectables/TissueLibraryState.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["tissues",{"_index":729,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissues(state",{"_index":730,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["title",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["together",{"_index":507,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["toggle",{"_index":631,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["token",{"_index":481,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tooltip",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":795,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transform((id",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformed",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigerred",{"_index":706,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["true",{"_index":72,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":215,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":217,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ClearSelection.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset-2.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":826,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":721,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["types",{"_index":676,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["types.ts",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":834,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/cdk/state",{"_index":51,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/HighlightCellType.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["ui/services",{"_index":22,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/HighlightCellType.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["uncompleted",{"_index":250,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["undefined",{"_index":105,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["union",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":812,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":665,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["up",{"_index":800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update",{"_index":626,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["updates",{"_index":607,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["url",{"_index":67,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["url(undefined",{"_index":538,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["url(url",{"_index":414,"title":{},"body":{"injectables/DownloadState.html":{}}}],["used",{"_index":335,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":486,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":340,"title":{},"body":{"injectables/DownloadState.html":{},"classes/SendMessage.html":{}}}],["uses",{"_index":312,"title":{},"body":{"injectables/ContactState.html":{}}}],["using",{"_index":304,"title":{},"body":{"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["value",{"_index":552,"title":{},"body":{"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.every(isprimitive",{"_index":723,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["variable",{"_index":316,"title":{},"body":{"injectables/ContactState.html":{}}}],["variables",{"_index":846,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":824,"title":{},"body":{"properties.html":{}}}],["visibility",{"_index":587,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["void",{"_index":69,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["web",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wheather",{"_index":584,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["whether",{"_index":580,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["window.url.createobjecturl(blob",{"_index":429,"title":{},"body":{"injectables/DownloadState.html":{}}}],["window.url.revokeobjecturl(url",{"_index":437,"title":{},"body":{"injectables/DownloadState.html":{}}}],["without",{"_index":406,"title":{},"body":{"injectables/DownloadState.html":{}}}],["yes",{"_index":449,"title":{},"body":{"classes/HighlightCellType.html":{}}}],["z",{"_index":196,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.discriminatedunion('type",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":202,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["z.literal('data",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal('url",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().nonnegative",{"_index":213,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.number().optional()]).rest(aggregate_cell.optional",{"_index":224,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":212,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.record(download_format_id",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":225,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":226,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.tuple([z.string",{"_index":223,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":197,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":820,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActiveFtuModel.html":{"url":"interfaces/ActiveFtuModel.html","title":"interface - ActiveFtuModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveFtuModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for ActiveFtuModel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            iri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iri:     Iri\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Iri\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Iri for the current Ftu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions, CellSummaryState } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset, SetIllustrationUrl } from './active-ftu.actions';\nimport { DownloadActions, DownloadState } from '../download';\nimport { LinkRegistryActions, LinkType } from '@hra-ui/cdk/state';\nimport { Illustration } from '../link-ids';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [CellSummaryState, DownloadState, IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new DownloadActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n        new SetIllustrationUrl(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * This Action computes the url and dispatches the LinkRegistry Action to add\n   * the link to the registry for navigation\n   */\n  @Action(SetIllustrationUrl)\n  setIllustrationUrl({ dispatch }: Context, { iri }: SetIllustrationUrl): Observable | void {\n    const BASE_URL = 'https://hubmapconsortium.github.io/ccf-releases/v1.4/docs/2d-ftu/';\n    const [name] = iri.split('/').slice(-1);\n    const url = `${BASE_URL}2d-ftu-${name}.html`;\n    return dispatch(new LinkRegistryActions.Add(Illustration, { type: LinkType.External, url }));\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to reset the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([\n      new CellSummaryActions.Reset(),\n      new IllustratorActions.Reset(),\n      new SourceRefsActions.Reset(),\n      new DownloadActions.ClearEntries(),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActiveFtuSelectors.html":{"url":"classes/ActiveFtuSelectors.html","title":"class - ActiveFtuSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActiveFtuSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for ActiveftuState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                iri\n                            \n                            \n                                    Static\n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        iri\n                        \n                    \n                \n            \n            \n                \n                    \n                    iri(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:15\n                \n            \n\n\n            \n                \n                    gets the iri from the ActiveFtuModel\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Iri | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:9\n                \n            \n\n\n            \n                \n                    checks if the Iri is set\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { ActiveFtuModel, ActiveFtuState } from './active-ftu.state';\n\n/** selectors for ActiveftuState */\nexport class ActiveFtuSelectors {\n  /** checks if the Iri is set */\n  @Selector([ActiveFtuState])\n  static isActive({ iri }: ActiveFtuModel): boolean {\n    return iri !== undefined;\n  }\n\n  /** gets the iri from the ActiveFtuModel */\n  @Selector([ActiveFtuState])\n  static iri({ iri }: ActiveFtuModel): Iri | undefined {\n    return iri;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActiveFtuState.html":{"url":"injectables/ActiveFtuState.html","title":"injectable - ActiveFtuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActiveFtuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle active FTU selection\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                            \n                                setIllustrationUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(['Clear', 'Reset'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:67\n                \n            \n\n\n            \n                \n                    Action to clear the iri selections\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:39\n                \n            \n\n\n            \n                \n                    loads the Cell summary, Illustrator and Source Refs\nwith the current iri\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        load An observable of void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:76\n                \n            \n\n\n            \n                \n                    Action to reset the states for\nCell summary, Illustrator and Source Refs\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIllustrationUrl\n                        \n                    \n                \n            \n            \n                \nsetIllustrationUrl(undefined: Context, undefined: SetIllustrationUrl)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetIllustrationUrl)\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:56\n                \n            \n\n\n            \n                \n                    This Action computes the url and dispatches the LinkRegistry Action to add\nthe link to the registry for navigation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetIllustrationUrl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions, CellSummaryState } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset, SetIllustrationUrl } from './active-ftu.actions';\nimport { DownloadActions, DownloadState } from '../download';\nimport { LinkRegistryActions, LinkType } from '@hra-ui/cdk/state';\nimport { Illustration } from '../link-ids';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [CellSummaryState, DownloadState, IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new DownloadActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n        new SetIllustrationUrl(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * This Action computes the url and dispatches the LinkRegistry Action to add\n   * the link to the registry for navigation\n   */\n  @Action(SetIllustrationUrl)\n  setIllustrationUrl({ dispatch }: Context, { iri }: SetIllustrationUrl): Observable | void {\n    const BASE_URL = 'https://hubmapconsortium.github.io/ccf-releases/v1.4/docs/2d-ftu/';\n    const [name] = iri.split('/').slice(-1);\n    const url = `${BASE_URL}2d-ftu-${name}.html`;\n    return dispatch(new LinkRegistryActions.Add(Illustration, { type: LinkType.External, url }));\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to reset the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([\n      new CellSummaryActions.Reset(),\n      new IllustratorActions.Reset(),\n      new SourceRefsActions.Reset(),\n      new DownloadActions.ClearEntries(),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddEntry.html":{"url":"classes/AddEntry.html","title":"class - AddEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Add entry into download state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: DownloadFormatId, entry: DownloadEntry)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor for Addd Entry\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        DownloadEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CellSummaryModel.html":{"url":"interfaces/CellSummaryModel.html","title":"interface - CellSummaryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CellSummaryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.model.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface of the Cell summary model\nhaving the summaries and aggregrates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aggregates\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aggregates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggregates:         CellSummaryAggregate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CellSummaryAggregate[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of aggregates of the Cell Summary\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:     CellSummary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CellSummary[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of summaries of the Cell Summary\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CellSummary, FtuDataSchemas } from '@hra-ui/services';\nimport { StateContext } from '@ngxs/store';\nimport { z } from 'zod';\n\n/** Type representing a single AGGREGATE_ROW */\nexport type CellSummaryAggregateRow = z.infer;\n\n/** Type representing AGGREGATE having label, columns and rows */\nexport type CellSummaryAggregate = z.infer;\n\n/**\n * An interface of the Cell summary model\n * having the summaries and aggregrates\n */\nexport interface CellSummaryModel {\n  /** Array of summaries of the Cell Summary */\n  summaries: CellSummary[];\n  /** Array of aggregates of the Cell Summary */\n  aggregates: CellSummaryAggregate[];\n}\n\nexport type Context = StateContext;\n\n/**\n * The AGGREGATE_CELL is an object that contains the color, size and\n * the data\n */\nconst AGGREGATE_CELL = z.object({\n  color: z.number().nonnegative(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n});\n\n/**\n * The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\n * a required string followed by an optional number\n */\nconst AGGREGATE_ROW = z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional());\n\n/**\n * The AGGREGATE is an object that contains the label, columns\n * and rows */\nconst AGGREGATE = z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellSummarySelectors.html":{"url":"classes/CellSummarySelectors.html","title":"class - CellSummarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellSummarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for the CellSummary state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                aggregates\n                            \n                            \n                                    Static\n                                summaries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        aggregates\n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregates(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:10\n                \n            \n\n\n            \n                \n                    get the aggregate data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        summaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    summaries(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:16\n                \n            \n\n\n            \n                \n                    get the summaries data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CellSummary[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { CellSummary } from '@hra-ui/services';\nimport { CellSummaryModel, CellSummaryAggregate } from './cell-summary.model';\nimport { CellSummaryState } from './cell-summary.state';\n\n/** selectors for the CellSummary state */\nexport class CellSummarySelectors {\n  /** get the aggregate data from the state */\n  @Selector([CellSummaryState])\n  static aggregates(state: CellSummaryModel): CellSummaryAggregate[] {\n    return state.aggregates;\n  }\n\n  /** get the summaries data from the state */\n  @Selector([CellSummaryState])\n  static summaries(state: CellSummaryModel): CellSummary[] {\n    return state.summaries;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CellSummaryState.html":{"url":"injectables/CellSummaryState.html","title":"injectable - CellSummaryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CellSummaryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling cell summary data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeAggregates\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        computeAggregates\n                        \n                    \n                \n            \n            \n                \ncomputeAggregates(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ComputeAggregates)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:38\n                \n            \n\n\n            \n                \n                    computes aggregate data and stores in the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the cell summary data and aggregrated of the current Iri into\nthe state and cancels uncompleted action if any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:48\n                \n            \n\n\n            \n                \n                    Resets the summaries and aggregates for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { ComputeAggregates, Load, Reset } from './cell-summary.actions';\nimport { computeAggregate } from './cell-summary.helpers';\nimport { CellSummaryModel, Context } from './cell-summary.model';\n\n/** State handling cell summary data */\n@State({\n  name: 'cellSummary',\n  defaults: {\n    summaries: [],\n    aggregates: [],\n  },\n})\n@Injectable()\nexport class CellSummaryState {\n  /** Data service to load the FTU data */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the cell summary data and aggregrated of the current Iri into\n   * the state and cancels uncompleted action if any\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState, dispatch }: Context, { iri }: Load): Observable {\n    return this.dataService.getCellSummaries(iri).pipe(\n      tap((summaries) => patchState({ summaries, aggregates: [] })),\n      switchMap(() => dispatch(new ComputeAggregates()))\n    );\n  }\n\n  /**\n   * computes aggregate data and stores in the current state\n   */\n  @Action(ComputeAggregates)\n  computeAggregates({ getState, patchState }: Context): void {\n    const { summaries } = getState();\n    const aggregates = summaries.map(computeAggregate);\n    patchState({ aggregates });\n  }\n\n  /**\n   * Resets the summaries and aggregates for the current state\n   */\n  @Action(Reset)\n  reset({ patchState }: Context): void {\n    patchState({ summaries: [], aggregates: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clear.html":{"url":"classes/Clear.html","title":"class - Clear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the Iri\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearEntries.html":{"url":"classes/ClearEntries.html","title":"class - ClearEntries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearEntries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Clear all entries from download state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelection.html":{"url":"classes/ClearSelection.html","title":"class - ClearSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the selection for the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComputeAggregates.html":{"url":"classes/ComputeAggregates.html","title":"class - ComputeAggregates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComputeAggregates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Compute aggregate of the given data and store to state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactState.html":{"url":"injectables/ContactState.html","title":"injectable - ContactState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact'\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(_ctx: StateContext, undefined: SendMessage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SendMessage)\n                \n            \n\n            \n                \n                    Defined in src/lib/contact/contact.state.ts:16\n                \n            \n\n\n            \n                \n                    An action method for sending a message. It uses SendMessage action class to send messages.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SendMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { ContactService } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SendMessage } from './contact.actions';\n\n/** A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact' */\n@State({ name: 'contact' })\n@Injectable()\nexport class ContactState {\n  /** A variable to inject the ContactService */\n  private readonly contact = inject(ContactService);\n\n  /** An action method for sending a message. It uses SendMessage action class to send messages. */\n  @Action(SendMessage)\n  sendMessage(_ctx: StateContext, { message }: SendMessage): Observable | void {\n    return this.contact.sendMessage(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Download.html":{"url":"classes/Download.html","title":"class - Download","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Download\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Download file Action\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormatId)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:52\n                            \n                        \n\n                \n                    \n                            Creates an instance of download.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DownloadSelectors.html":{"url":"classes/DownloadSelectors.html","title":"class - DownloadSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Available format selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                formats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        formats\n                        \n                    \n                \n            \n            \n                \n                    \n                    formats(state: DownloadModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['DownloadState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.selectors.ts:15\n                \n            \n\n\n            \n                \n                    Selectors available format for download selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                DownloadModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormat[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { DownloadFormat, DownloadModel } from './download.model';\nimport { DownloadState } from './download.state';\n\n/**\n * Available format selectors\n */\nexport class DownloadSelectors {\n  /**\n   * Selectors available format for download selectors\n   * @param state\n   * @returns\n   */\n  @Selector([DownloadState])\n  static formats(state: DownloadModel): DownloadFormat[] {\n    const { formats, entries } = state;\n    const hasData = (format: DownloadFormat | undefined): format is DownloadFormat =>\n      !!(format && format.id in entries);\n    return Object.values(formats).filter(hasData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DownloadState.html":{"url":"injectables/DownloadState.html","title":"injectable - DownloadState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DownloadState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Download State Model used to convert\nfile from SVG file content to different\nformat and download to user.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEntry\n                            \n                            \n                                clearEntries\n                            \n                            \n                                download\n                            \n                            \n                                load\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                registerFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEntry\n                        \n                    \n                \n            \n            \n                \naddEntry(ctx: DownloadContext, undefined: AddEntry)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddEntry)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:86\n                \n            \n\n\n            \n                \n                    Add entry into download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                AddEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearEntries\n                        \n                    \n                \n            \n            \n                \nclearEntries(ctx: DownloadContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearEntries)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:99\n                \n            \n\n\n            \n                \n                    Clear entires from download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        download\n                        \n                    \n                \n            \n            \n                \ndownload(ctx: DownloadContext, undefined: Download)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Download)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:113\n                \n            \n\n\n            \n                \n                    Actions download file in specified format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Download\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(ctx: DownloadContext, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:65\n                \n            \n\n\n            \n                \n                    Action to add the Organs IRI from the data service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Context\n\n                                    \n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: DownloadContext)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/download/download.state.ts:40\n                \n            \n\n\n            \n                \n                    Ngxs on init and registry default format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFormat\n                        \n                    \n                \n            \n            \n                \nregisterFormat(ctx: DownloadContext, undefined: RegisterFormat)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RegisterFormat)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:50\n                \n            \n\n\n            \n                \n                    Actions register format in Download State\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                RegisterFormat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, NgxsOnInit, State } from '@ngxs/store';\nimport produce from 'immer';\nimport { Observable, tap } from 'rxjs';\n\nimport { FtuDataService, Iri } from '@hra-ui/services';\nimport { PNG_FORMAT, SVG_FORMAT } from './builtin-formats';\nimport { AddEntry, ClearEntries, Download, Load, RegisterFormat } from './download.action';\nimport { createDownloadFormatId, DownloadContext, DownloadFormatId, DownloadModel } from './download.model';\n\n/**\n * Download State Model used to convert\n * file from SVG file content to different\n * format and download to user.\n */\n@State({\n  name: 'download',\n  defaults: {\n    formats: {},\n    entries: {},\n  },\n})\n@Injectable()\nexport class DownloadState implements NgxsOnInit {\n  /**\n   * Http object inject for download state\n   */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Data service of download state\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Ngxs on init and registry default format\n   * @param ctx\n   */\n  ngxsOnInit(ctx: DownloadContext): void {\n    ctx.dispatch([new RegisterFormat(SVG_FORMAT), new RegisterFormat(PNG_FORMAT)]);\n  }\n\n  /**\n   * Actions register format in Download State\n   * @param ctx\n   * @param { format }\n   */\n  @Action(RegisterFormat)\n  registerFormat(ctx: DownloadContext, { format }: RegisterFormat): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.formats[format.id] = format;\n      })\n    );\n  }\n\n  /**\n   * Action to add the Organs IRI from the data service\n   * @param ctx Context\n   * @param iri Organ Data\n   * @returns\n   */\n  @Action(Load)\n  load(ctx: DownloadContext, { iri }: Load): Observable {\n    return this.dataService.getDataFileReferences(iri).pipe(\n      tap((items) =>\n        ctx.setState(\n          produce((draft) => {\n            draft.entries = {};\n            for (const { format, url } of items) {\n              draft.entries[createDownloadFormatId(format)] = { type: 'url', url };\n            }\n          })\n        )\n      )\n    );\n  }\n\n  /**\n   * Add entry into download state\n   * @param ctx\n   * @param { id, entry }\n   */\n  @Action(AddEntry)\n  addEntry(ctx: DownloadContext, { id, entry }: AddEntry): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries[id] = entry;\n      })\n    );\n  }\n\n  /**\n   * Clear entires from download state\n   * @param ctx\n   */\n  @Action(ClearEntries)\n  clearEntries(ctx: DownloadContext): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries = {};\n      })\n    );\n  }\n\n  /**\n   * Actions download file in specified format\n   * @param ctx\n   * @param action\n   */\n  @Action(Download)\n  download(ctx: DownloadContext, { format }: Download): Observable | void {\n    const { entries } = ctx.getState();\n    const entry = entries[format];\n    switch (entry?.type) {\n      case 'url': {\n        const filename = this.guessFilename(ctx, format, entry.url);\n        return this.downloadRemoteData(entry.url).pipe(tap((data) => this.downloadData(data, filename)));\n      }\n\n      case 'data': {\n        const filename = this.guessFilename(ctx, format, '');\n        this.downloadData(new Blob([entry.data]), filename);\n        break;\n      }\n\n      default:\n        throw new Error('Cannot download file without data');\n    }\n  }\n\n  /**\n   * Guess filename\n   * @param ctx\n   * @param id\n   * @param url\n   * @returns filename\n   */\n  private guessFilename(ctx: DownloadContext, id: DownloadFormatId, url: string): string {\n    const { formats } = ctx.getState();\n    const { extension = '' } = formats[id] ?? {};\n    const fakeBase = 'https://base.com';\n    const path = new URL(url, fakeBase).pathname;\n    const segments = path.split('/').filter((seg) => seg !== '');\n    const name = segments.length > 0 ? segments[segments.length - 1] : 'download';\n    const guess = name.includes('.') ? name : `${name}${extension}`;\n\n    return guess;\n  }\n\n  /**\n   * Download converted formatted file to browser\n   * @param blob\n   * @param fileName\n   */\n  private downloadData(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n    anchor.download = filename;\n    anchor.href = url;\n    anchor.click();\n    anchor.remove();\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Downloads and save -  method is used to direct fetch file\n   * if available on url without conversion\n   * @param fileUrl\n   * @param fileName\n   */\n  private downloadRemoteData(url: string): Observable {\n    return this.http.get(url, { responseType: 'blob' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HighlightCellType.html":{"url":"classes/HighlightCellType.html","title":"class - HighlightCellType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HighlightCellType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets highlighted cell type id in the state from label\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hoverLabel?: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:40\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hoverLabel\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraStateModule.html":{"url":"modules/HraStateModule.html","title":"module - HraStateModule","body":"\n                   \n\n\n\n\n    Modules\n    HraStateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/state.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Provides all states\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: HraStateModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state.module.ts:47\n                \n            \n\n\n            \n                \n                    Static method for configuring the module\nReturns a configuration object with the module and the providers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HraStateModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, importProvidersFrom } from '@angular/core';\nimport { NGXS_PLUGINS, NgxsModule } from '@ngxs/store';\nimport { ActiveFtuState } from './active-ftu';\nimport { CellSummaryState } from './cell-summary';\nimport { ContactState } from './contact';\nimport { DownloadState } from './download';\nimport { IllustratorState } from './illustrator';\nimport { ScreenModeState } from './screen-mode';\nimport { SourceRefsState } from './source-refs';\nimport { StateAnalyticsPluginService } from './state-analytics-plugin';\nimport { TissueLibraryState } from './tissue-library';\nimport { NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\n/** Interface for providing options for the hra state module */\nexport interface HraStateModuleOptions {\n  /** token string for google analytics*/\n  googleAnalyticsToken: string;\n}\n\n/** Provides all states */\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([\n      ActiveFtuState,\n      CellSummaryState,\n      ContactState,\n      DownloadState,\n      IllustratorState,\n      ScreenModeState,\n      SourceRefsState,\n      TissueLibraryState,\n    ]),\n    NgxGoogleAnalyticsModule,\n  ],\n  providers: [\n    {\n      provide: NGXS_PLUGINS,\n      useExisting: StateAnalyticsPluginService,\n      multi: true,\n    },\n  ],\n})\nexport class HraStateModule {\n  /** Static method for configuring the module\n   * Returns a configuration object with the module and the providers\n   */\n  static forRoot(options: HraStateModuleOptions): ModuleWithProviders {\n    const analyticsProviders = importProvidersFrom(NgxGoogleAnalyticsModule.forRoot(options.googleAnalyticsToken));\n    return {\n      ngModule: HraStateModule,\n      providers: [analyticsProviders],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HraStateModuleOptions.html":{"url":"interfaces/HraStateModuleOptions.html","title":"interface - HraStateModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HraStateModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for providing options for the hra state module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            googleAnalyticsToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        googleAnalyticsToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        googleAnalyticsToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    token string for google analytics\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ModuleWithProviders, NgModule, importProvidersFrom } from '@angular/core';\nimport { NGXS_PLUGINS, NgxsModule } from '@ngxs/store';\nimport { ActiveFtuState } from './active-ftu';\nimport { CellSummaryState } from './cell-summary';\nimport { ContactState } from './contact';\nimport { DownloadState } from './download';\nimport { IllustratorState } from './illustrator';\nimport { ScreenModeState } from './screen-mode';\nimport { SourceRefsState } from './source-refs';\nimport { StateAnalyticsPluginService } from './state-analytics-plugin';\nimport { TissueLibraryState } from './tissue-library';\nimport { NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\n/** Interface for providing options for the hra state module */\nexport interface HraStateModuleOptions {\n  /** token string for google analytics*/\n  googleAnalyticsToken: string;\n}\n\n/** Provides all states */\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([\n      ActiveFtuState,\n      CellSummaryState,\n      ContactState,\n      DownloadState,\n      IllustratorState,\n      ScreenModeState,\n      SourceRefsState,\n      TissueLibraryState,\n    ]),\n    NgxGoogleAnalyticsModule,\n  ],\n  providers: [\n    {\n      provide: NGXS_PLUGINS,\n      useExisting: StateAnalyticsPluginService,\n      multi: true,\n    },\n  ],\n})\nexport class HraStateModule {\n  /** Static method for configuring the module\n   * Returns a configuration object with the module and the providers\n   */\n  static forRoot(options: HraStateModuleOptions): ModuleWithProviders {\n    const analyticsProviders = importProvidersFrom(NgxGoogleAnalyticsModule.forRoot(options.googleAnalyticsToken));\n    return {\n      ngModule: HraStateModule,\n      providers: [analyticsProviders],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IllustratorModel.html":{"url":"interfaces/IllustratorModel.html","title":"interface - IllustratorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IllustratorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the Illustrator Model that contains the url, selected\nand mapping fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hoveredCellTypeId\n                                        \n                                \n                                \n                                        \n                                            mapping\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedOnClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedOnHover\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hoveredCellTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hoveredCellTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Current hovered cell type id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapping:         IllustrationMappingItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of Illustrartor Items\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOnClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOnClick:         IllustrationMappingItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected Illustrator Item on click\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOnHover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOnHover:         IllustrationMappingItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected Illustrator Item on hover\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     Url | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Url | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Illustration URL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FTU_DATA_IMPL_ENDPOINTS, FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\n\nimport { ClearSelection, HighlightCellType, Load, Reset, SetClicked, SetHover } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url | string;\n  /** Selected Illustrator Item on hover */\n  selectedOnHover?: IllustrationMappingItem;\n  /** Selected Illustrator Item on click */\n  selectedOnClick?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n  /** Current hovered cell type id */\n  hoveredCellTypeId?: string;\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Endpoints injector\n   */\n  readonly endpoints = inject(FTU_DATA_IMPL_ENDPOINTS);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(\n      tap((result) =>\n        patchState({\n          ...result,\n          url: this.endpoints.baseHref + result.url,\n          selectedOnHover: undefined,\n          selectedOnClick: undefined,\n        })\n      )\n    );\n  }\n\n  /**\n   * Sets the current selection to the state for SetHover\n   */\n  @Action(SetHover)\n  SetHover({ patchState }: Context, { selectedOnHover }: SetHover): void {\n    patchState({ selectedOnHover });\n  }\n\n  /**\n   * Sets the current selection to the state for SetClicked\n   */\n  @Action(SetClicked)\n  SetClicked({ patchState }: Context, { selectedOnClick }: SetClicked): void {\n    patchState({ selectedOnClick });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selectedOnHover: undefined, selectedOnClick: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n\n  /**\n   * Sets hover id of highlighted cell type from hover label\n   */\n  @Action(HighlightCellType)\n  HighlightCellType({ patchState, getState }: Context, { hoverLabel }: HighlightCellType): void {\n    const match = getState().mapping.find((entry) => entry.ontologyId === hoverLabel);\n    patchState({ hoveredCellTypeId: match ? match.ontologyId : undefined });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IllustratorSelectors.html":{"url":"classes/IllustratorSelectors.html","title":"class - IllustratorSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IllustratorSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for Medical Illustrators\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                highlightedCell\n                            \n                            \n                                    Static\n                                mapping\n                            \n                            \n                                    Static\n                                selectedOnClicked\n                            \n                            \n                                    Static\n                                selectedOnHovered\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        highlightedCell\n                        \n                    \n                \n            \n            \n                \n                    \n                    highlightedCell(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:46\n                \n            \n\n\n            \n                \n                    Returns the current hovered cell id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapping(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:38\n                \n            \n\n\n            \n                \n                    Returns the current mapping of the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectedOnClicked\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedOnClicked(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:30\n                \n            \n\n\n            \n                \n                    Returns the selected model of the illustrator on click\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectedOnHovered\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedOnHovered(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:22\n                \n            \n\n\n            \n                \n                    Returns the selected model of the illustrator on hover\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Returns the url for the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Url | string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\n\nimport { IllustratorModel, IllustratorState } from './illustrator.state';\n\n/**\n * Selectors for Medical Illustrators\n */\nexport class IllustratorSelectors {\n  /**\n   * Returns the url for the illustrator\n   */\n  @Selector([IllustratorState])\n  static url({ url }: IllustratorModel): Url | string | undefined {\n    return url;\n  }\n\n  /**\n   * Returns the selected model of the illustrator on hover\n   */\n  @Selector([IllustratorState])\n  static selectedOnHovered({ selectedOnHover }: IllustratorModel): IllustrationMappingItem | undefined {\n    return selectedOnHover;\n  }\n\n  /**\n   * Returns the selected model of the illustrator on click\n   */\n  @Selector([IllustratorState])\n  static selectedOnClicked({ selectedOnClick }: IllustratorModel): IllustrationMappingItem | undefined {\n    return selectedOnClick;\n  }\n\n  /**\n   * Returns the current mapping of the illustrator\n   */\n  @Selector([IllustratorState])\n  static mapping({ mapping }: IllustratorModel): IllustrationMappingItem[] {\n    return mapping;\n  }\n\n  /**\n   * Returns the current hovered cell id\n   */\n  @Selector([IllustratorState])\n  static highlightedCell({ hoveredCellTypeId }: IllustratorModel): string | undefined {\n    return hoveredCellTypeId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IllustratorState.html":{"url":"injectables/IllustratorState.html","title":"injectable - IllustratorState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IllustratorState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling medical illustrators\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                endpoints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSelection\n                            \n                            \n                                HighlightCellType\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                            \n                                SetClicked\n                            \n                            \n                                SetHover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearSelection)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:90\n                \n            \n\n\n            \n                \n                    Clears the current selection from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HighlightCellType\n                        \n                    \n                \n            \n            \n                \nHighlightCellType(undefined: Context, undefined: HighlightCellType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(HighlightCellType)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:106\n                \n            \n\n\n            \n                \n                    Sets hover id of highlighted cell type from hover label\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                HighlightCellType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:54\n                \n            \n\n\n            \n                \n                    Loads the current state with the url and mapping.\nThe url and mapping are forked together using forkJoin.\nIt also cancels any uncompleted actions to the state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:98\n                \n            \n\n\n            \n                \n                    Resets the mapping for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetClicked\n                        \n                    \n                \n            \n            \n                \nSetClicked(undefined: Context, undefined: SetClicked)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetClicked)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:82\n                \n            \n\n\n            \n                \n                    Sets the current selection to the state for SetClicked\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetClicked\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetHover\n                        \n                    \n                \n            \n            \n                \nSetHover(undefined: Context, undefined: SetHover)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetHover)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:74\n                \n            \n\n\n            \n                \n                    Sets the current selection to the state for SetHover\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetHover\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        endpoints\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FTU_DATA_IMPL_ENDPOINTS)\n                    \n                \n                    \n                        \n                                Defined in src/lib/illustrator/illustrator.state.ts:46\n                        \n                    \n\n            \n                \n                    Endpoints injector\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FTU_DATA_IMPL_ENDPOINTS, FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\n\nimport { ClearSelection, HighlightCellType, Load, Reset, SetClicked, SetHover } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url | string;\n  /** Selected Illustrator Item on hover */\n  selectedOnHover?: IllustrationMappingItem;\n  /** Selected Illustrator Item on click */\n  selectedOnClick?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n  /** Current hovered cell type id */\n  hoveredCellTypeId?: string;\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Endpoints injector\n   */\n  readonly endpoints = inject(FTU_DATA_IMPL_ENDPOINTS);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(\n      tap((result) =>\n        patchState({\n          ...result,\n          url: this.endpoints.baseHref + result.url,\n          selectedOnHover: undefined,\n          selectedOnClick: undefined,\n        })\n      )\n    );\n  }\n\n  /**\n   * Sets the current selection to the state for SetHover\n   */\n  @Action(SetHover)\n  SetHover({ patchState }: Context, { selectedOnHover }: SetHover): void {\n    patchState({ selectedOnHover });\n  }\n\n  /**\n   * Sets the current selection to the state for SetClicked\n   */\n  @Action(SetClicked)\n  SetClicked({ patchState }: Context, { selectedOnClick }: SetClicked): void {\n    patchState({ selectedOnClick });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selectedOnHover: undefined, selectedOnClick: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n\n  /**\n   * Sets hover id of highlighted cell type from hover label\n   */\n  @Action(HighlightCellType)\n  HighlightCellType({ patchState, getState }: Context, { hoverLabel }: HighlightCellType): void {\n    const match = getState().mapping.find((entry) => entry.ontologyId === hoverLabel);\n    patchState({ hoveredCellTypeId: match ? match.ontologyId : undefined });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load.html":{"url":"classes/Load.html","title":"class - Load","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/active-ftu/active-ftu.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Creates an instance of set iri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-1.html":{"url":"classes/Load-1.html","title":"class - Load-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                loads the given Iri to the state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cell-summary/cell-summary.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-2.html":{"url":"classes/Load-2.html","title":"class - Load-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to load entries from data service\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:24\n                            \n                        \n\n                \n                    \n                            Creates a action to load from the enteries from the data service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Organ Iri for which the entries are loaded\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-3.html":{"url":"classes/Load-3.html","title":"class - Load-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-4.html":{"url":"classes/Load-4.html","title":"class - Load-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to load the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-refs/source-refs.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-5.html":{"url":"classes/Load-5.html","title":"class - Load-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                action of loading tissue data into the TissueLibrary state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** action of loading tissue data into the TissueLibrary state */\nexport class Load extends Action('[TissueLibrary] Load Tissue Data') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterFormat.html":{"url":"classes/RegisterFormat.html","title":"class - RegisterFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Register format into state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormat)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:11\n                            \n                        \n\n                \n                    \n                            Creates an instance of register format.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormat\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-1.html":{"url":"classes/Reset-1.html","title":"class - Reset-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-2.html":{"url":"classes/Reset-2.html","title":"class - Reset-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-3.html":{"url":"classes/Reset-3.html","title":"class - Reset-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScreenModeModel.html":{"url":"interfaces/ScreenModeModel.html","title":"interface - ScreenModeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScreenModeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isFullScreen\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isFullScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFullScreen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether in fullscreen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \"small\" | \"large\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"small\" | \"large\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wheather footer should be in small screen mode: Logo visibility\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ScreenModeModel {\n  /** Whether in fullscreen */\n  isFullScreen: boolean;\n\n  /** Wheather footer should be in small screen mode: Logo visibility */\n  size: 'small' | 'large';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScreenModeSelectors.html":{"url":"classes/ScreenModeSelectors.html","title":"class - ScreenModeSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScreenModeSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isFullScreen\n                            \n                            \n                                    Static\n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFullScreen\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFullScreen(state: ScreenModeModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ScreenModeState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.selectors.ts:15\n                \n            \n\n\n            \n                \n                    Selectors screen mode selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ScreenModeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if full screen\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        size\n                        \n                    \n                \n            \n            \n                \n                    \n                    size(state: ScreenModeModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ScreenModeState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.selectors.ts:24\n                \n            \n\n\n            \n                \n                    Selectors screen mode selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ScreenModeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"small\" | \"large\"\n\n                    \n                    \n                        size of value 'small' | 'large'\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { ScreenModeModel } from './screen-mode.model';\nimport { ScreenModeState } from './screen-mode.state';\n\n/**\n * Screen mode selectors\n */\nexport class ScreenModeSelectors {\n  /**\n   * Selectors screen mode selectors\n   * @param state\n   * @returns true if full screen\n   */\n  @Selector([ScreenModeState])\n  static isFullScreen(state: ScreenModeModel): boolean {\n    return state.isFullScreen;\n  }\n  /**\n   * Selectors screen mode selectors\n   * @param state\n   * @returns size of value 'small' | 'large'\n   */\n  @Selector([ScreenModeState])\n  static size(state: ScreenModeModel): 'small' | 'large' {\n    return state.size;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenModeState.html":{"url":"injectables/ScreenModeState.html","title":"injectable - ScreenModeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenModeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State storing the screen mode\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                SetSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(undefined: StateContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.state.ts:23\n                \n            \n\n\n            \n                \n                    Updates the screen mode\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetSize\n                        \n                    \n                \n            \n            \n                \nSetSize(undefined: StateContext, undefined: SetSize)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetSize)\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.state.ts:36\n                \n            \n\n\n            \n                \n                    Actions screen mode state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetSize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport produce from 'immer';\nimport { Set, SetSize } from './screen-mode.actions';\nimport { ScreenModeModel } from './screen-mode.model';\n\n/** State storing the screen mode */\n@State({\n  name: 'screenmode',\n  defaults: {\n    isFullScreen: false,\n    size: 'large',\n  },\n})\n@Injectable()\nexport class ScreenModeState {\n  /**\n   * Updates the screen mode\n   * @param ctx State context\n   * @param action Action with new mode\n   */\n  @Action(Set)\n  set({ setState }: StateContext, { isFullScreen }: Set): void {\n    setState(\n      produce((draft: ScreenModeModel) => {\n        draft.isFullScreen = isFullScreen;\n      })\n    );\n  }\n  /**\n   * Actions screen mode state\n   * @param { setState } State Context\n   * @param { size } Action regarding screen\n   */\n  @Action(SetSize)\n  SetSize({ setState }: StateContext, { size }: SetSize): void {\n    setState(\n      produce((draft: ScreenModeModel) => {\n        draft.size = size;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessage.html":{"url":"classes/SendMessage.html","title":"class - SendMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                A class which sends individual messages submitted by user.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: ContactMessage)\n                    \n                \n                        \n                            \n                                Defined in src/lib/contact/contact.actions.ts:5\n                            \n                        \n\n                \n                    \n                            A constructor which initializes the message of type ContactMessage interface.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    ContactMessage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { ContactMessage } from '@hra-ui/services';\n\n/** A class which sends individual messages submitted by user. */\nexport class SendMessage extends Action('[Contact] Send Message') {\n  /** A constructor which initializes the message of type ContactMessage interface. */\n  constructor(readonly message: ContactMessage) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Update the screen mode\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(isFullScreen: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/screen-mode/screen-mode.actions.ts:4\n                            \n                        \n\n                \n                    \n                            Creates an instance of Set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isFullScreen\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the mode is fullscreen\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** Update the screen mode */\nexport class Set extends Action('[Screenmode] Set Screenmode') {\n  /**\n   * Creates an instance of Set\n   * @param isFullScreen Whether the mode is fullscreen\n   */\n  constructor(readonly isFullScreen: boolean) {\n    super();\n  }\n}\n\n/** Update the screen mode */\nexport class SetSize extends Action('[Screenmode] Set Size') {\n  /**\n   * Creates an instance of Set\n   * @param size Whether the mode is small/large to toggle the footer behaviour\n   */\n  constructor(readonly size: 'small' | 'large') {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetClicked.html":{"url":"classes/SetClicked.html","title":"class - SetClicked","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetClicked\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the selection for the Item in the current state on SetClicked\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(selectedOnClick: IllustrationMappingItem)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:30\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedOnClick\n                                                  \n                                                        \n                                                                        IllustrationMappingItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetHover.html":{"url":"classes/SetHover.html","title":"class - SetHover","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetHover\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the selection for the Item in the current state on SetHover\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(selectedOnHover: IllustrationMappingItem)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedOnHover\n                                                  \n                                                        \n                                                                        IllustrationMappingItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets highlighted cell type id in the state from label\n */\nexport class HighlightCellType extends Action('Highlight Cell Type Id') {\n  /** Initializes the Mapping Item */\n  constructor(readonly hoverLabel?: string) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetIllustrationUrl.html":{"url":"classes/SetIllustrationUrl.html","title":"class - SetIllustrationUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetIllustrationUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to set the illustration url of the active FTU\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/active-ftu/active-ftu.actions.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of set iri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSize.html":{"url":"classes/SetSize.html","title":"class - SetSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Update the screen mode\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(size: \"small\" | \"large\")\n                    \n                \n                        \n                            \n                                Defined in src/lib/screen-mode/screen-mode.actions.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of Set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                    \"small\" | \"large\"\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the mode is small/large to toggle the footer behaviour\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** Update the screen mode */\nexport class Set extends Action('[Screenmode] Set Screenmode') {\n  /**\n   * Creates an instance of Set\n   * @param isFullScreen Whether the mode is fullscreen\n   */\n  constructor(readonly isFullScreen: boolean) {\n    super();\n  }\n}\n\n/** Update the screen mode */\nexport class SetSize extends Action('[Screenmode] Set Size') {\n  /**\n   * Creates an instance of Set\n   * @param size Whether the mode is small/large to toggle the footer behaviour\n   */\n  constructor(readonly size: 'small' | 'large') {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceRefsSelectors.html":{"url":"classes/SourceRefsSelectors.html","title":"class - SourceRefsSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceRefsSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for SourceRefState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sourceReferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    sourceReferences(refs: SourceReference[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['SourceRefsState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.selectors.ts:9\n                \n            \n\n\n            \n                \n                    returns the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refs\n                                    \n                                            SourceReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SourceReference[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceReference } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { SourceRefsState } from './source-refs.state';\n\n/** Selectors for SourceRefState */\nexport class SourceRefsSelectors {\n  /** returns the source references */\n  @Selector([SourceRefsState])\n  static sourceReferences(refs: SourceReference[]): SourceReference[] {\n    return refs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SourceRefsState.html":{"url":"injectables/SourceRefsState.html","title":"injectable - SourceRefsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SourceRefsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle the source references\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the current state with the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:35\n                \n            \n\n\n            \n                \n                    Resets the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, SourceReference } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load, Reset } from './source-refs.actions';\n\ntype Context = StateContext;\n\n/**\n * State to handle the source references\n */\n@State({\n  name: 'sourceReferences',\n  defaults: [],\n})\n@Injectable()\nexport class SourceRefsState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the source references\n   */\n  @Action(Load)\n  load({ setState }: Context, { iri }: Load): Observable {\n    return this.dataService.getSourceReferences(iri).pipe(tap(setState));\n  }\n\n  /**\n   * Resets the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState([]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateAnalyticsPluginService.html":{"url":"injectables/StateAnalyticsPluginService.html","title":"injectable - StateAnalyticsPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateAnalyticsPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Google Analytics Plugin Injectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(state, action, next: NgxsNextPluginFn)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state-analytics-plugin/state-analytics-plugin.service.ts:51\n                \n            \n\n\n            \n                \n                    Handles logger plugin\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent state of the store with type unknown.\n\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent action being dispatched with type unknown type.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            NgxsNextPluginFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnext plugin to handle the action\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nnext plugin with the current state and action.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, InjectionToken, Provider } from '@angular/core';\nimport { getActionTypeFromInstance, NgxsNextPluginFn, NgxsPlugin, NGXS_PLUGINS } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { DEFAULT_LOGGABLE_ACTIONS } from './default-loggable-actions';\n\n/** Primitive types */\nconst PRIMITIVE_TYPES = ['bigint', 'boolean', 'number', 'string'];\n\n/**\n * Determines whether primitive is\n * @param value is string - used to check the input value from serialize funtion\n * @returns type of value - boolean/number/string/null/bigint/undefined\n */\nfunction isPrimitive(value: unknown): value is bigint | boolean | number | string | null | undefined {\n  return value == null || PRIMITIVE_TYPES.includes(typeof value);\n}\n\n/**\n * Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n */\nexport const LOGGABLE_ACTIONS = new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n});\n\n/**\n * Google Analytics Plugin Injectable\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateAnalyticsPluginService implements NgxsPlugin {\n  /**\n   * Injects the service for state analytics plugin.\n   */\n  private readonly ga = inject(GoogleAnalyticsService);\n\n  /**\n   * Plugin service for logging state analytics\n   * Setting loggable action types from LOGGABLE_ACTIONS dependency.\n   */\n  private readonly loggableTypes = new Set(inject(LOGGABLE_ACTIONS).map(getActionTypeFromInstance));\n\n  /**\n   * Handles logger plugin\n   * @param state -  Current state of the store with type unknown.\n   * @param action - Current action being dispatched with type unknown type.\n   * @param next - next plugin to handle the action\n   * @returns - next plugin with the current state and action.\n   */\n  handle(state: unknown, action: unknown, next: NgxsNextPluginFn) {\n    this.logAction(action);\n    return next(state, action);\n  }\n\n  /**\n   * Logs action trigerred to google analytics event\n   * @param action - Current action being dispatched with type unknown type.\n   * @returns void\n   */\n  private logAction(action: unknown): void {\n    const type = getActionTypeFromInstance(action);\n    if (type && this.loggableTypes.has(type)) {\n      const payload = JSON.stringify(action, this.serialize);\n      this.ga.event(type, 'action_log', payload);\n    }\n  }\n\n  /**\n   * Serializes action data\n   * @param key - key with type unknown that needs to be serialized\n   * @param value - value with type unknown that needs to be serialized\n   * @returns serialized value\n   */\n  private serialize(this: void, key: unknown, value: unknown): unknown {\n    if (key === '' && typeof value === 'object') {\n      return { ...value, type: undefined };\n    } else if (isPrimitive(value) || (Array.isArray(value) && value.every(isPrimitive))) {\n      return value;\n    }\n\n    return undefined;\n  }\n}\n\n/**\n * State Login Provider\n */\nexport const STATE_LOGGER_PROVIDER: Provider = {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TissueLibrarySelectors.html":{"url":"classes/TissueLibrarySelectors.html","title":"class - TissueLibrarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TissueLibrarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selector class for retreiving data from the TissueLibraryState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        tissues\n                        \n                    \n                \n            \n            \n                \n                    \n                    tissues(state: TissueLibraryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['TissueLibraryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Gets the tissue data from the TissueLibrary object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                TissueLibraryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current state of the TissueLibraryState.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        node data of the type of TisseData.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri, Tissue } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { TissueLibraryModel } from './tissue-library.model';\nimport { TissueLibraryState } from './tissue-library.state';\n\n/** Selector class for retreiving data from the TissueLibraryState */\nexport class TissueLibrarySelectors {\n  /**\n   * Gets the tissue data from the TissueLibrary object.\n   * @param state the current state of the TissueLibraryState.\n   * @returns node data of the type of TisseData.\n   */\n  @Selector([TissueLibraryState])\n  static tissues(state: TissueLibraryModel): Record {\n    return state.nodes as Record;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryState.html":{"url":"injectables/TissueLibraryState.html","title":"injectable - TissueLibraryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling tissue data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActive\n                        \n                    \n                \n            \n            \n                \nsetActive(ctx: TissueLibraryContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.state.ts:23\n                \n            \n\n\n            \n                \n                    Loads the tissue data into the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                TissueLibraryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The state context instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        data The tissue data to be added to the state\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load } from './tissue-library.actions';\nimport { TissueLibraryContext, TissueLibraryModel } from './tissue-library.model';\n\n/** State handling tissue data*/\n@State({\n  name: 'tissueLibrary',\n})\n@Injectable()\nexport class TissueLibraryState {\n  /** injects the TissueLibraryService into a private readonly property */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the tissue data into the current state\n   * @param ctx The state context instance\n   * @returns data The tissue data to be added to the state\n   */\n  @Action(Load)\n  setActive(ctx: TissueLibraryContext): Observable {\n    return this.dataService.getTissueLibrary().pipe(tap((data) => ctx.setState(data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            computeAggregate   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            createDownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            expandRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getColumnIndex   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getLabel   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getTotalCount   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            isPrimitive   (src/.../state-analytics-plugin.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        computeAggregate\n                        \n                    \n                \n            \n            \n                \ncomputeAggregate(summary: CellSummary)\n                \n            \n\n\n\n\n            \n                \n                    The computeAggregate function takes a summary object and performs aggregation operations on its properties\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    summary\n                                    \n                                            CellSummary\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandRow\n                        \n                    \n                \n            \n            \n                \nexpandRow(row: CellSummaryAggregateRow, length: number)\n                \n            \n\n\n\n\n            \n                \n                    This function expands the current row length with undefined if its length is\nless than the given length\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnIndex\n                        \n                    \n                \n            \n            \n                \ngetColumnIndex(indexById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the column if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    indexById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLabel\n                        \n                    \n                \n            \n            \n                \ngetLabel(items, id: string, what: string)\n                \n            \n\n\n\n\n            \n                \n                    This function retrieves the label of an item from an array based on its ID,\nand if not found, it returns a default string indicating the absence of a label for the specified item type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    what\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRow\n                        \n                    \n                \n            \n            \n                \ngetRow(rowById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the row if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregateRow\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalCount\n                        \n                    \n                \n            \n            \n                \ngetTotalCount(row: CellSummaryAggregateRow)\n                \n            \n\n\n\n\n            \n                \n                    This function calculates and returns the total count by iterating over a row array and summing\nup the count property of each object entry, while ignoring non-object entries, with an initial value of 0.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDownloadFormatId\n                        \n                    \n                \n            \n            \n                \ncreateDownloadFormatId(id: string)\n                \n            \n\n\n\n\n            \n                \n                    Creates download format id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormatId\n\n                    \n                    \n                        download format id\n\n                    \n                \n            \n        \n    \n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isPrimitive\n                        \n                    \n                \n            \n            \n                \nisPrimitive(value)\n                \n            \n\n\n\n\n            \n                \n                    Determines whether primitive is\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is string - used to check the input value from serialize funtion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :      | boolean | number | string | null | undefined\n\n                    \n                    \n                        type of value - boolean/number/string/null/bigint/undefined\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nstate\nThis library was generated with Nx.\nRunning unit tests\nRun nx test state to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraStateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    31 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellSummaryAggregate   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CellSummaryAggregateRow   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../active-ftu.state.ts)\n                        \n                        \n                            Context   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../illustrator.state.ts)\n                        \n                        \n                            Context   (src/.../source-refs.state.ts)\n                        \n                        \n                            DownloadContext   (src/.../download.model.ts)\n                        \n                        \n                            DownloadEntry   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormat   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            DownloadModel   (src/.../download.model.ts)\n                        \n                        \n                            TissueLibraryContext   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibraryModel   (src/.../tissue-library.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregate\n                \n            \n            \n                \n                    Type representing AGGREGATE having label, columns and rows\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregateRow\n                \n            \n            \n                \n                    Type representing a single AGGREGATE_ROW\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/active-ftu/active-ftu.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/illustrator/illustrator.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/source-refs/source-refs.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n    \n        \n            \n                \n                    \n                    DownloadContext\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadContext,\nwhich is a state context for the DownloadModel type\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadEntry\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadEntry,\nwhich is inferred from the type of the DOWNLOAD_ENTRY constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormat\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormat,\nwhich is inferred from the type of the DOWNLOAD_FORMAT constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormatId\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormatId,\nwhich is inferred from the type of the DOWNLOAD_FORMAT_ID constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadModel\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadModel,\nwhich is inferred from the type of the DOWNLOAD_MODEL constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    TissueLibraryContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibraryModel\n                \n            \n            \n                \n                    Type alias for the tissue data\n\n                \n            \n            \n                \n                        TissueLibrary\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            About   (src/.../link-ids.ts)\n                        \n                        \n                            Action   (src/.../active-ftu.actions.ts)\n                        \n                        \n                            Action   (src/.../cell-summary.actions.ts)\n                        \n                        \n                            Action   (src/.../download.action.ts)\n                        \n                        \n                            Action   (src/.../illustrator.actions.ts)\n                        \n                        \n                            Action   (src/.../source-refs.actions.ts)\n                        \n                        \n                            AGGREGATE   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_CELL   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_ROW   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AppTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            ContactAcknowledgement   (src/.../resource-ids.ts)\n                        \n                        \n                            DEFAULT_LOGGABLE_ACTIONS   (src/.../default-loggable-actions.ts)\n                        \n                        \n                            DOWNLOAD_ENTRY   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT_ID   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_MODEL   (src/.../download.model.ts)\n                        \n                        \n                            Embed   (src/.../link-ids.ts)\n                        \n                        \n                            ExploreFTU   (src/.../link-ids.ts)\n                        \n                        \n                            Gradient   (src/.../resource-types.ts)\n                        \n                        \n                            GradientLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            GradientLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            Illustration   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPage   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageDepthDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroReadMore   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPagePartners   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageReadMore   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LOGGABLE_ACTIONS   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Metrics   (src/.../resource-ids.ts)\n                        \n                        \n                            Metrics   (src/.../resource-types.ts)\n                        \n                        \n                            MetricsLogo   (src/.../resource-ids.ts)\n                        \n                        \n                            MetricsTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            Png   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            PNG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                        \n                            Portal   (src/.../link-ids.ts)\n                        \n                        \n                            PRIMITIVE_TYPES   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            ProductLogoUrl   (src/.../resource-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../link-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            ScreenSizeNoticeContent   (src/.../resource-ids.ts)\n                        \n                        \n                            Size   (src/.../resource-types.ts)\n                        \n                        \n                            SizeLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            SizeLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            STATE_LOGGER_PROVIDER   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Svg   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            SVG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/link-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        About\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('About')\n                    \n                \n\n            \n                \n                    About Link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Embed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Embed')\n                    \n                \n\n            \n                \n                    LinkId for Embed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExploreFTU\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ExploreFTU')\n                    \n                \n\n            \n                \n                    LinkId for Explore FTU\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Illustration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Illustration')\n                    \n                \n\n            \n                \n                    LinkId for Illustration metadata\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPage')\n                    \n                \n\n            \n                \n                    Landing page id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPageReadMore')\n                    \n                \n\n            \n                \n                    LinkId for read more in landing page content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Portal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Portal')\n                    \n                \n\n            \n                \n                    LinkId for HRA Portal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title link id\n\n                \n            \n\n        \n    \n\n    src/lib/active-ftu/active-ftu.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('ActiveFtu')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('CellSummary')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Download')\n                    \n                \n\n            \n                \n                    Action Group for Download Action\n\n                \n            \n\n        \n    \n\n    src/lib/illustrator/illustrator.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Illustrator')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/source-refs/source-refs.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('SourceRefs')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AGGREGATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE is an object that contains the label, columns\nand rows\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  color: z.number().nonnegative(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE_CELL is an object that contains the color, size and\nthe data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional())\n                    \n                \n\n            \n                \n                    The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\na required string followed by an optional number\n\n                \n            \n\n        \n    \n\n    src/lib/resource-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('AppTitle')\n                    \n                \n\n            \n                \n                    App title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ContactAcknowledgement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ContactAcknowledgement')\n                    \n                \n\n            \n                \n                    Message to display after submitting contact form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegend')\n                    \n                \n\n            \n                \n                    Gradient legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Gradient legend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthDescription')\n                    \n                \n\n            \n                \n                    Lanading Page Depth Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthImg')\n                    \n                \n\n            \n                \n                    Landing Page Depth Img id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthMoreText')\n                    \n                \n\n            \n                \n                    Landing Page Depth More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthTitle')\n                    \n                \n\n            \n                \n                    Landing Page Depth Title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroDescription')\n                    \n                \n\n            \n                \n                    Landing Page Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroImg')\n                    \n                \n\n            \n                \n                    Landing Page Intro Image id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroMoreText')\n                    \n                \n\n            \n                \n                    Landing Page More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroReadMore')\n                    \n                \n\n            \n                \n                    Landing Page Read More text (For web components)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPagePartners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroPartners')\n                    \n                \n\n            \n                \n                    Landing Page Partners id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroTitle')\n                    \n                \n\n            \n                \n                    Landing Page Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('Metrics')\n                    \n                \n\n            \n                \n                    metrics id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsLogo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsLogo')\n                    \n                \n\n            \n                \n                    Metrics Logo id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsTitle')\n                    \n                \n\n            \n                \n                    Metrics Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductLogoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductLogoUrl')\n                    \n                \n\n            \n                \n                    Product logo url id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ScreenSizeNoticeContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ScreenSizeNoticeContent')\n                    \n                \n\n            \n                \n                    Screen size notice content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegend')\n                    \n                \n\n            \n                \n                    Size legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Size legend\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/default-loggable-actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ContactActions.SendMessage,\n  DownloadActions.Download,\n  LinkRegistryActions.Navigate,\n  ActiveFtuActions.Load,\n  IllustratorActions.SetHover,\n  IllustratorActions.SetClicked,\n  ScreenModeAction.Set,\n]\n                    \n                \n\n            \n                \n                    Default loggable actions\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.discriminatedUnion('type', [\n  z.object({ type: z.literal('url'), url: z.string() }),\n  z.object({ type: z.literal('data'), data: z.string() }),\n])\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_ENTRY,\nwhich is a discriminated union of two objects with different properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    id: DOWNLOAD_FORMAT_ID,\n    label: z.string(),\n    extension: z.string(),\n  })\n  .partial({ extension: true })\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT,\nwhich is an object with id, label, and extension properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .transform((id) => `DownloadFormatId:'${id}'`)\n  .brand('DownloadFormatId')\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT_ID,\nwhich is a string that is transformed into a branded string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_MODEL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  formats: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_FORMAT),\n  entries: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_ENTRY),\n})\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_MODEL,\nwhich is an object with formats and entries properties\n\n                \n            \n\n        \n    \n\n    src/lib/resource-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Gradient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('gradient', payload())\n                    \n                \n\n            \n                \n                    Gradient legend resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType(\n  'metrics',\n  payload()\n)\n                    \n                \n\n            \n                \n                    Metrics resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Size\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('size', payload())\n                    \n                \n\n            \n                \n                    Size legend resource\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n})\n                    \n                \n\n            \n                \n                    Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRIMITIVE_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['bigint', 'boolean', 'number', 'string']\n                    \n                \n\n            \n                \n                    Primitive types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATE_LOGGER_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n}\n                    \n                \n\n            \n                \n                    State Login Provider\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Png\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('png')\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Svg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('svg')\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PNG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Png,\n  label: 'Download PNG',\n  extension: '.png',\n}\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Svg,\n  label: 'Download SVG',\n  extension: '.svg',\n}\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
