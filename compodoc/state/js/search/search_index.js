var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActiveFtuModel.html",[0,1.381,1,2.609]],["body/interfaces/ActiveFtuModel.html",[0,1.794,1,3.746,2,1.641,3,0.116,4,0.258,5,0.133,6,1.347,7,1.347,8,2.121,9,0.099,10,0.582,11,1.992,12,0.449,13,1.282,14,0.427,15,0.02,16,1.256,17,2.23,18,0.365,19,1.056,20,1.019,21,0.302,22,0.325,23,0.63,24,0.359,25,1.992,26,0.714,27,2.795,28,1.433,29,1.347,30,2.382,31,2.693,32,2.693,33,2.382,34,2.12,35,2.693,36,2.382,37,2.263,38,3.116,39,1.891,40,0.675,41,1.131,42,2.693,43,1.992,44,2.382,45,2.382,46,1.019,47,2.382,48,2.382,49,0.582,50,1.347,51,3.137,52,2.382,53,0.196,54,2.488,55,1.926,56,1.347,57,0.514,58,2.382,59,1.433,60,2.382,61,0.188,62,1.641,63,0.79,64,0.751,65,2.331,66,0.751,67,2.331,68,1.433,69,1.771,70,1.27,71,2.121,72,3.443,73,4.125,74,2.382,75,1.39,76,3.689,77,2.382,78,2.382,79,2.382,80,2.382,81,2.382,82,2.382,83,2.121,84,2.382,85,2.382,86,1.433,87,2.121,88,2.382,89,2.382,90,0.779,91,2.382,92,2.382,93,2.382,94,2.382,95,1.641,96,2.382,97,2.382,98,2.121,99,2.382,100,2.382,101,2.382,102,2.382,103,1.019,104,1.926,105,1.641,106,2.382,107,2.382,108,2.382,109,2.382,110,0.011,111,0.011]],["title/classes/ActiveFtuSelectors.html",[61,0.255,112,3.227]],["body/classes/ActiveFtuSelectors.html",[1,4.937,3,0.167,4,0.192,5,0.192,6,2.892,7,2.892,9,0.144,10,0.84,12,0.581,13,1.315,14,0.464,15,0.02,18,0.322,21,0.295,22,0.47,26,1.031,43,1.945,53,0.192,57,0.665,61,0.272,62,3.524,66,1.437,75,1.511,103,2.188,110,0.014,111,0.014,112,4.559,113,0.603,114,4.011,115,3.141,116,1.672,117,3.293,118,5.964,119,4.011,120,1.852,121,5.317,122,0.8,123,4.011,124,4.06,125,0.753,126,4.011,127,4.011,128,5.317,129,1.511,130,2.743,131,2.21,132,4.011,133,5.317]],["title/injectables/ActiveFtuState.html",[19,0.967,62,2.223]],["body/injectables/ActiveFtuState.html",[0,1.31,1,2.477,3,0.096,4,0.269,5,0.11,6,2.578,7,2.578,8,1.763,9,0.083,10,0.483,12,0.537,13,1.211,14,0.491,15,0.02,16,1.123,17,2.057,18,0.349,19,0.918,20,0.847,21,0.262,22,0.27,23,0.679,24,0.361,25,1.732,26,0.593,27,3.014,28,1.191,29,1.12,30,1.98,31,2.929,32,2.929,33,1.98,34,1.843,35,2.929,36,1.98,37,1.968,38,3.389,39,2.175,40,0.777,41,1.268,42,3.229,43,2.118,44,1.98,45,1.98,46,0.847,47,1.98,48,1.98,49,0.483,50,1.12,51,3.335,52,1.98,53,0.171,54,2.87,55,2.477,56,1.732,57,0.703,58,1.98,59,1.191,60,1.98,61,0.157,62,2.11,63,1.015,64,0.624,65,2.295,66,1.437,67,2.614,68,1.843,69,2.277,70,1.632,71,1.763,72,3.134,73,3.754,74,1.98,75,1.242,76,3.463,77,1.98,78,1.98,79,1.98,80,1.98,81,1.98,82,1.98,83,2.727,84,3.063,85,3.063,86,1.843,87,2.727,88,3.063,89,3.063,90,0.696,91,1.98,92,1.98,93,1.98,94,1.98,95,1.364,96,1.98,97,1.98,98,1.763,99,1.98,100,1.98,101,3.063,102,1.98,103,1.603,104,2.477,105,2.11,106,1.98,107,1.98,108,1.98,109,1.98,110,0.009,111,0.009,116,1.123,120,1.712,122,0.739,125,0.697,134,1.055,135,2.309,136,2.309,137,2.309,138,1.601,139,2.309,140,1.601,141,2.309,142,2.309,143,2.309]],["title/classes/AddEntry.html",[61,0.255,144,2.073]],["body/classes/AddEntry.html",[3,0.144,4,0.165,5,0.229,9,0.123,12,0.377,13,1.118,14,0.301,15,0.02,18,0.298,21,0.353,22,0.404,23,0.71,24,0.438,39,1.334,40,0.69,46,2.444,49,0.722,53,0.3,57,0.431,61,0.425,64,1.492,86,2.476,90,0.55,110,0.012,111,0.012,113,0.519,122,0.519,125,0.489,144,2.643,145,2.038,146,3.669,147,1.922,148,3.449,149,3.236,150,3.525,151,3.449,152,3.059,153,2.476,154,0.98,155,2.476,156,1.9,157,2.038,158,2.038,159,2.835,160,3.148,161,1.9,162,1.456,163,2.198,164,2.253,165,1.959,166,1.458,167,1.458,168,2.676,169,1.233,170,2.071,171,0.98,172,2.198,173,2.038,174,2.198,175,2.198,176,1.334,177,1.9,178,1.265,179,2.198,180,2.198]],["title/interfaces/CellSummaryModel.html",[0,1.381,181,2.609]],["body/interfaces/CellSummaryModel.html",[0,2.051,2,2.087,3,0.147,4,0.169,5,0.169,9,0.126,10,0.74,11,2.366,12,0.386,14,0.585,15,0.02,18,0.302,21,0.26,22,0.414,25,2.366,26,0.908,31,3.603,32,3.603,53,0.288,54,1.525,90,0.891,110,0.013,111,0.013,169,1.436,181,3.383,182,1.713,183,1.713,184,2.697,185,2.883,186,4.792,187,5.217,188,4.879,189,3.865,190,4.18,191,4.18,192,4.18,193,3.533,194,3.029,195,3.029,196,4.184,197,3.029,198,4.268,199,2.697,200,4.184,201,3.11,202,3.876,203,4.268,204,4.268,205,4.184,206,2.517,207,3.383,208,4.184,209,2.688,210,4.184,211,4.184,212,3.029,213,3.029,214,3.029,215,3.029,216,3.029,217,3.029,218,1.946,219,3.029,220,2.45,221,3.029,222,3.029,223,3.029,224,3.029,225,3.029]],["title/classes/CellSummarySelectors.html",[61,0.255,226,3.227]],["body/classes/CellSummarySelectors.html",[3,0.167,4,0.192,5,0.192,9,0.144,10,0.84,12,0.581,14,0.464,15,0.02,18,0.343,21,0.295,22,0.47,24,0.517,26,1.031,31,2.929,53,0.192,57,0.665,61,0.272,66,1.437,75,1.511,110,0.014,111,0.014,113,0.603,115,3.141,116,1.672,117,3.293,120,1.852,122,0.8,125,0.753,131,2.21,169,1.632,181,4.804,182,2.892,183,2.892,187,4.849,189,3.141,190,4.136,192,4.582,201,2.743,226,4.559,227,4.011,228,5.317,229,5.317,230,4.011,231,5.317,232,4.011,233,3.439,234,2.557,235,4.011,236,5.317,237,4.011,238,4.011]],["title/injectables/CellSummaryState.html",[19,0.967,234,2.399]],["body/injectables/CellSummaryState.html",[3,0.12,4,0.138,5,0.138,9,0.103,10,0.604,12,0.546,13,0.891,14,0.436,15,0.02,16,1.572,17,1.115,18,0.341,19,1.085,20,1.058,21,0.212,22,0.337,23,0.546,24,0.494,26,0.741,27,2.422,28,1.488,29,1.398,31,3.481,32,3.029,40,0.81,41,1.151,53,0.138,54,2.9,57,0.688,59,1.488,61,0.196,63,1.2,66,1.35,67,2.373,68,2.178,69,2.691,70,1.929,71,3.224,72,3.898,73,2.201,75,0.82,83,3.224,90,0.673,98,2.201,103,1.058,105,2.495,110,0.011,111,0.011,116,1.328,120,1.74,122,0.751,125,0.708,134,1.318,138,1.999,140,1.999,169,1.665,170,1.244,176,1.115,181,1.999,182,2.667,183,2.667,187,4.67,189,3.733,192,1.999,201,2.178,233,2.472,234,2.691,239,2.883,240,2.928,241,3.731,242,2.883,243,4.222,244,2.883,245,4.222,246,2.883,247,4.222,248,3.224,249,3.224,250,2.883,251,1.633,252,1.488,253,1.703,254,4.222,255,2.883,256,2.472,257,2.883,258,1.488,259,1.703,260,1.703,261,2.883,262,2.883,263,2.883]],["title/classes/Clear.html",[39,1.456,61,0.255]],["body/classes/Clear.html",[3,0.174,4,0.2,5,0.2,6,2.026,7,2.026,9,0.15,13,1.309,15,0.02,17,1.617,18,0.295,21,0.401,22,0.489,23,0.665,24,0.307,39,2.113,40,0.522,41,0.875,42,2.302,43,2.026,49,0.875,50,2.649,53,0.308,61,0.454,63,1.188,64,1.476,65,2.358,90,0.666,110,0.014,111,0.014,113,0.629,129,1.73,154,1.188,162,1.498,164,2.23,165,2.23,166,1.334,167,1.334,171,1.188,178,1.533,251,1.617,264,2.664,265,2.358,266,1.456,267,1.383,268,2.664,269,2.026,270,1.533]],["title/classes/ClearEntries.html",[61,0.255,177,2.073]],["body/classes/ClearEntries.html",[3,0.15,4,0.172,5,0.236,9,0.129,13,1.135,15,0.02,18,0.305,21,0.363,22,0.421,23,0.719,24,0.446,39,1.911,40,0.705,46,2.472,49,0.753,53,0.304,61,0.432,64,1.525,86,1.856,90,0.573,110,0.013,111,0.013,113,0.541,144,1.981,145,2.125,146,3.108,147,1.253,149,2.911,150,2.918,152,2.292,153,1.856,154,1.022,155,2.548,156,1.981,157,2.125,158,2.125,159,2.918,160,3.189,161,1.981,162,1.478,163,2.292,164,2.304,165,2.017,166,1.484,167,1.484,168,2.945,169,1.269,170,2.132,171,1.022,172,2.292,173,2.125,174,2.292,175,2.292,176,1.391,177,2.721,178,1.32,179,2.292,180,2.292]],["title/classes/ClearSelection.html",[61,0.255,271,1.942]],["body/classes/ClearSelection.html",[3,0.162,4,0.186,5,0.186,9,0.139,13,1.166,15,0.02,16,1.68,18,0.281,21,0.382,22,0.455,23,0.569,24,0.494,40,0.486,41,0.813,49,0.813,53,0.312,56,3.333,61,0.456,63,1.104,90,0.619,110,0.014,111,0.014,113,0.584,129,1.104,154,1.104,162,1.518,166,1.434,167,1.434,171,1.104,178,1.425,251,1.503,265,2.246,266,1.353,267,1.285,269,2.524,270,1.425,271,2.685,272,2.295,273,3.028,274,2.295,275,1.775,276,2.867,277,3.235,278,2.685,279,2.004,280,3.075,281,2.685,282,2.004,283,2.685,284,2.476,285,2.004]],["title/classes/ComputeAggregates.html",[61,0.255,241,2.399]],["body/classes/ComputeAggregates.html",[3,0.186,4,0.212,5,0.212,9,0.159,13,1.218,15,0.02,16,1.143,18,0.307,21,0.418,22,0.52,23,0.685,24,0.485,40,0.556,41,1.19,49,0.931,53,0.3,61,0.448,63,1.264,90,0.709,110,0.015,111,0.015,113,0.669,129,1.264,154,1.264,162,1.455,166,1.086,167,1.086,169,1.461,171,1.264,182,2.156,183,2.156,189,2.627,201,2.934,241,3.624,266,1.549,267,1.471,270,1.631,275,2.032,286,3.083,287,4.341,288,4.347,289,3.943,290,3.083,291,3.395]],["title/injectables/ContactState.html",[19,0.967,292,2.609]],["body/injectables/ContactState.html",[3,0.159,4,0.183,5,0.183,9,0.137,10,0.8,12,0.417,14,0.333,15,0.02,18,0.351,19,1.6,20,1.401,21,0.281,22,0.447,23,0.71,24,0.492,25,3.02,26,0.982,27,2.822,29,1.852,53,0.183,57,0.779,61,0.441,66,1.032,67,2.221,75,1.086,103,1.401,110,0.013,111,0.013,116,1.618,120,1.33,122,0.575,125,0.541,134,1.745,176,1.478,252,2.655,258,1.971,292,4.318,293,3.82,294,5.146,295,4.643,296,5.146,297,6.227,298,5.34,299,3.929,300,6.227,301,5.313,302,5.146,303,5.146,304,3.82,305,3.568,306,4.444,307,5.146,308,4.412,309,3.82,310,3.82,311,3.82,312,3.82,313,3.82]],["title/classes/Download.html",[46,1.381,61,0.255]],["body/classes/Download.html",[3,0.145,4,0.167,5,0.265,9,0.125,12,0.381,13,1.123,14,0.304,15,0.02,18,0.3,21,0.355,22,0.408,23,0.73,24,0.408,39,1.349,40,0.694,46,2.537,49,0.73,53,0.301,57,0.436,61,0.427,64,1.5,86,1.799,90,0.556,110,0.013,111,0.013,113,0.524,122,0.524,125,0.494,144,1.921,145,2.06,146,3.058,147,1.684,149,3.248,150,2.856,152,2.222,153,1.799,154,0.991,155,2.495,156,1.921,157,2.06,158,2.06,159,2.856,160,3.239,161,1.921,162,1.462,163,2.222,164,2.447,165,2.266,166,1.464,167,1.464,168,2.691,169,1.243,170,2.087,171,0.991,172,2.222,173,2.06,174,2.222,175,2.222,176,1.349,177,1.921,178,1.279,179,2.222,180,2.222,314,2.99,315,3.487]],["title/classes/DownloadSelectors.html",[61,0.255,316,3.227]],["body/classes/DownloadSelectors.html",[3,0.176,4,0.202,5,0.202,9,0.151,10,0.884,12,0.462,14,0.368,15,0.02,18,0.33,24,0.449,26,1.085,46,2.018,53,0.202,57,0.528,61,0.286,64,1.141,66,1.487,75,1.2,90,0.877,103,1.549,110,0.014,111,0.014,113,0.635,115,4.07,116,1.729,117,2.966,120,1.471,122,0.635,125,0.598,131,2.326,155,3.467,156,2.326,160,3.402,168,2.667,316,4.716,317,4.223,318,4.947,319,4.67,320,5.5,321,4.947,322,4.223,323,4.223,324,2.692,325,4.223,326,4.223,327,4.223,328,4.223,329,4.223]],["title/injectables/DownloadState.html",[19,0.967,324,2.399]],["body/injectables/DownloadState.html",[3,0.068,4,0.078,5,0.273,9,0.097,10,0.343,12,0.527,13,0.798,14,0.445,15,0.02,18,0.299,19,0.697,20,0.601,21,0.12,22,0.192,23,0.441,24,0.44,26,0.421,27,2.338,28,0.846,29,0.795,39,1.05,40,0.603,46,2.496,53,0.078,54,1.171,57,0.693,59,0.846,61,0.111,64,1.741,65,2.391,66,1.443,67,2.464,68,1.4,75,1.148,76,2.052,86,2.083,87,2.072,90,0.988,95,0.968,103,1.482,110,0.007,111,0.007,116,0.853,120,1.558,122,0.725,125,0.683,134,0.749,144,2.656,146,2.656,149,1.4,153,2.083,156,0.903,159,1.603,160,3.049,161,2.656,168,1.316,169,1.239,170,1.499,173,0.968,176,1.05,177,1.913,185,1.603,206,0.846,218,2.224,252,1.4,253,0.968,258,2.309,259,0.968,260,0.968,305,1.137,318,1.252,319,2.652,321,1.252,324,1.73,330,1.639,331,2.652,332,2.714,333,2.327,334,2.327,335,2.327,336,2.327,337,4.038,338,2.714,339,5.678,340,2.714,341,1.639,342,4.228,343,2.714,344,2.714,345,1.639,346,2.714,347,2.714,348,2.714,349,1.639,350,2.386,351,2.327,352,2.714,353,1.639,354,2.714,355,2.714,356,1.639,357,2.714,358,2.714,359,2.408,360,2.714,361,2.714,362,1.639,363,1.639,364,1.639,365,1.406,366,1.406,367,1.406,368,1.406,369,1.639,370,1.639,371,1.406,372,1.406,373,2.714,374,1.639,375,1.639,376,1.639,377,1.639,378,4.038,379,3.462,380,1.639,381,1.639,382,1.639,383,2.714,384,1.137,385,1.639,386,1.639,387,2.714,388,1.639,389,1.639,390,1.639,391,2.714,392,5.709,393,2.714,394,1.639,395,1.639,396,1.639,397,1.639,398,1.639,399,1.639,400,1.639,401,1.639,402,2.714,403,3.473,404,1.639,405,1.406,406,1.639,407,1.639,408,1.639,409,1.639,410,1.639,411,1.639,412,1.639,413,1.639,414,1.639,415,1.639,416,1.406,417,1.639,418,1.639,419,1.639,420,1.639,421,1.639,422,1.639,423,3.473,424,1.639,425,1.639,426,1.639,427,1.639,428,1.639,429,1.639,430,1.639,431,1.639,432,1.639,433,1.639,434,1.639,435,1.639,436,1.639,437,1.639,438,1.639,439,1.639,440,1.639,441,1.639,442,1.639]],["title/modules/HraStateModule.html",[443,2.609,444,2.609]],["body/modules/HraStateModule.html",[0,1.766,3,0.145,4,0.23,5,0.166,9,0.124,12,0.379,14,0.302,15,0.02,17,1.34,18,0.385,20,1.271,21,0.255,24,0.354,26,0.89,31,1.908,32,1.908,34,2.483,35,1.908,37,2.651,38,2.208,43,1.68,46,1.271,53,0.23,57,0.433,61,0.235,62,2.844,66,1.495,70,1.583,75,0.985,90,0.552,104,3.337,110,0.012,111,0.012,116,1.089,117,2.898,122,0.521,125,0.491,206,2.483,218,2.651,234,3.068,292,3.337,295,2.402,305,3.337,324,3.068,443,4.355,444,3.835,445,2.645,446,2.97,447,3.337,448,3.464,449,4.127,450,4.564,451,3.464,452,4.127,453,4.127,454,5.125,455,4.127,456,4.743,457,4.743,458,2.97,459,3.337,460,2.97,461,3.068,462,1.787,463,1.908,464,3.068,465,3.526,466,2.645,467,3.068,468,2.046,469,2.645,470,4.127,471,2.645,472,3.675,473,2.97,474,2.402,475,2.97,476,2.97,477,2.97,478,2.402,479,2.402,480,2.402,481,4.127,482,2.97]],["title/interfaces/HraStateModuleOptions.html",[0,1.381,450,2.873]],["body/interfaces/HraStateModuleOptions.html",[0,2.048,2,2.083,3,0.147,4,0.233,5,0.168,9,0.126,10,0.738,11,2.362,14,0.308,15,0.02,17,1.364,18,0.386,20,1.293,21,0.358,24,0.41,26,0.906,31,1.942,32,1.942,34,2.514,35,1.942,37,2.684,38,2.247,43,1.709,46,1.293,53,0.233,61,0.239,62,2.878,66,0.953,70,1.611,75,1.002,90,0.562,104,2.444,110,0.013,111,0.013,117,2.362,206,1.819,218,3.482,234,3.105,292,3.378,295,2.444,305,2.444,324,3.105,443,4.176,444,3.378,446,3.022,447,2.444,449,3.022,450,4.263,452,3.022,453,3.022,454,4.787,455,4.177,456,4.177,457,4.787,458,3.022,459,3.378,460,3.022,461,3.105,462,1.819,463,1.942,464,3.105,465,3.839,466,2.692,467,3.105,468,2.083,469,2.692,470,4.177,471,2.692,472,4.263,473,4.177,474,3.378,475,5.164,476,3.022,477,3.022,478,2.444,479,2.444,480,2.444,481,4.177,482,3.022]],["title/interfaces/IllustratorModel.html",[0,1.381,483,2.609]],["body/interfaces/IllustratorModel.html",[0,1.741,2,1.56,3,0.11,4,0.126,5,0.126,9,0.095,10,0.553,11,1.918,12,0.647,13,0.471,14,0.492,15,0.02,16,1.45,17,1.021,18,0.305,19,1.017,20,0.969,21,0.194,22,0.309,23,0.289,24,0.475,25,1.918,26,0.679,27,1.918,28,1.362,29,1.28,34,1.362,35,3.383,40,0.593,41,0.828,50,1.918,53,0.189,54,2.556,56,2.3,57,0.33,59,1.362,61,0.179,63,0.751,65,3.047,67,2.274,68,1.362,69,1.683,70,1.207,72,4.026,75,0.751,90,0.756,103,1.933,105,1.56,110,0.01,111,0.01,169,0.679,170,1.14,176,1.021,185,2.337,191,2.743,207,2.743,240,1.831,248,2.016,249,2.016,251,1.021,252,1.362,253,1.56,258,1.362,259,1.56,260,1.56,265,1.14,271,2.041,273,3.394,276,2.179,277,2.718,278,2.718,279,2.041,281,3.562,282,3.259,283,2.718,285,3.259,299,2.016,350,1.56,384,2.743,483,2.743,484,2.016,485,4.523,486,3.392,487,3.392,488,3.021,489,4.068,490,2.264,491,2.016,492,2.016,493,2.264,494,2.264,495,2.264,496,2.264,497,3.392,498,2.264,499,2.264,500,2.264,501,2.264,502,2.264,503,2.743]],["title/classes/IllustratorSelectors.html",[61,0.255,504,3.227]],["body/classes/IllustratorSelectors.html",[3,0.135,4,0.155,5,0.155,9,0.116,10,0.678,12,0.634,14,0.506,15,0.02,16,1.18,18,0.288,21,0.238,22,0.379,26,0.832,34,1.671,35,3.683,53,0.155,57,0.726,61,0.22,65,2.976,66,1.903,75,1.65,103,2.335,110,0.012,111,0.012,113,0.487,115,2.713,116,1.444,117,3.415,120,2.021,122,0.873,125,0.822,131,1.785,185,3.429,273,3.376,279,2.369,281,3.376,282,2.369,285,2.369,483,4.924,485,4.431,488,3.506,491,3.506,492,3.506,504,3.937,505,3.239,506,5.334,507,5.334,508,3.239,509,5.804,510,3.239,511,3.239,512,3.239,513,3.239,514,3.239,515,3.239,516,3.239,517,3.239,518,5.804]],["title/injectables/IllustratorState.html",[19,0.967,34,1.942]],["body/injectables/IllustratorState.html",[0,1.316,3,0.097,4,0.111,5,0.111,9,0.083,10,0.486,12,0.583,13,0.414,14,0.492,15,0.02,16,1.635,17,0.898,18,0.288,19,0.922,20,0.852,21,0.171,22,0.272,23,0.254,24,0.504,25,1.74,26,0.597,27,2.126,28,1.198,29,1.126,34,1.851,35,2.717,40,0.734,41,1.032,50,1.126,53,0.171,54,2.96,56,2.732,57,0.704,59,1.198,61,0.158,63,1.02,65,2.837,66,1.441,67,2.619,68,1.851,69,2.287,70,1.64,72,3.868,75,0.66,90,0.699,103,2.155,105,2.12,110,0.009,111,0.009,116,1.128,120,1.857,122,0.802,125,0.755,134,1.061,138,1.61,140,1.61,169,0.597,170,1.002,176,0.898,185,1.372,191,1.61,207,1.61,240,2.488,248,2.739,249,2.739,251,1.388,252,1.198,253,1.372,258,1.198,259,1.372,260,1.372,265,1.548,271,2.544,273,2.544,276,2.717,277,1.851,278,3.213,279,1.198,281,3.435,282,2.75,283,3.213,285,2.75,299,2.739,350,2.12,384,1.61,483,1.61,484,1.773,485,3.347,486,1.991,487,1.991,488,1.773,489,4.228,490,1.991,491,2.739,492,2.739,493,3.076,494,3.076,495,1.991,496,1.991,497,3.076,498,1.991,499,1.991,500,3.076,501,3.076,502,3.076,503,2.488,519,2.322,520,2.322,521,2.322,522,2.322,523,2.322,524,2.322,525,2.322,526,2.322]],["title/classes/Load.html",[40,0.47,61,0.255]],["body/classes/Load.html",[3,0.167,4,0.191,5,0.191,6,2.57,7,2.57,9,0.143,12,0.436,13,1.325,14,0.348,15,0.02,17,1.544,18,0.286,21,0.389,22,0.467,23,0.65,24,0.293,39,1.544,40,0.663,41,0.836,42,2.199,43,1.935,49,0.836,50,2.57,53,0.303,57,0.499,61,0.447,63,1.506,64,1.432,65,2.287,90,0.636,110,0.014,111,0.014,113,0.6,122,0.6,125,0.566,129,1.802,147,1.39,154,1.134,162,1.472,164,2.429,165,2.429,166,1.295,167,1.295,171,1.134,178,1.464,251,1.544,264,2.544,265,1.723,266,1.39,267,1.32,268,2.544,269,1.935,270,1.464,527,2.358,528,3.991]],["title/classes/Load-1.html",[40,0.395,61,0.215,95,1.869]],["body/classes/Load-1.html",[3,0.178,4,0.204,5,0.204,9,0.153,12,0.466,13,1.296,14,0.372,15,0.02,16,1.097,18,0.299,21,0.407,22,0.5,23,0.672,24,0.478,40,0.692,41,1.16,49,0.894,53,0.294,57,0.534,61,0.441,63,1.574,90,0.68,110,0.014,111,0.014,113,0.642,122,0.642,125,0.605,129,1.574,147,1.487,154,1.213,162,1.427,166,1.043,167,1.043,169,1.097,171,1.213,182,2.685,183,2.685,189,2.522,201,2.202,241,2.721,266,1.487,267,1.412,270,1.566,275,2.531,286,2.96,287,3.259,288,4.263,289,2.96,290,2.96,291,3.259,527,2.522,529,4.268]],["title/classes/Load-2.html",[40,0.395,61,0.215,530,2.712]],["body/classes/Load-2.html",[3,0.142,4,0.163,5,0.228,9,0.17,12,0.373,13,1.227,14,0.298,15,0.02,18,0.296,21,0.35,22,0.399,23,0.74,24,0.403,39,1.32,40,0.809,46,2.374,49,0.714,53,0.299,57,0.427,61,0.424,64,1.483,86,1.761,90,0.544,110,0.012,111,0.012,113,0.513,122,0.513,125,0.483,144,1.88,145,2.016,146,3.023,147,1.659,149,2.831,150,2.814,152,2.175,153,1.761,154,0.97,155,2.457,156,1.88,157,2.016,158,2.016,159,2.814,160,3.138,161,1.88,162,1.45,163,2.175,164,2.425,165,1.945,166,1.451,167,1.451,168,3.029,169,1.526,170,2.563,171,0.97,172,3.036,173,2.814,174,3.036,175,2.175,176,1.32,177,1.88,178,1.252,179,2.175,180,2.175,527,2.016,531,3.412]],["title/classes/Load-3.html",[40,0.395,61,0.215,532,2.712]],["body/classes/Load-3.html",[3,0.156,4,0.179,5,0.179,9,0.134,12,0.41,13,1.266,14,0.327,15,0.02,16,1.66,18,0.274,21,0.373,22,0.439,23,0.555,24,0.489,40,0.635,41,0.785,49,0.785,53,0.309,56,3.229,57,0.469,61,0.452,63,1.444,90,0.597,110,0.013,111,0.013,113,0.564,122,0.564,125,0.531,129,1.444,147,1.305,154,1.065,162,1.499,166,1.408,167,1.408,171,1.065,178,1.375,251,1.45,265,1.618,266,1.305,267,1.24,269,2.464,270,1.375,271,1.934,272,2.214,273,2.974,274,2.214,275,2.322,276,2.799,277,3.188,278,2.621,279,1.934,280,3.002,281,2.621,282,1.934,283,2.621,284,2.389,285,1.934,527,2.214,533,3.748]],["title/classes/Load-4.html",[40,0.395,61,0.215,534,3.163]],["body/classes/Load-4.html",[3,0.185,4,0.212,5,0.212,9,0.159,12,0.485,13,1.304,14,0.387,15,0.02,16,1.459,18,0.306,21,0.417,22,0.519,23,0.746,24,0.46,40,0.825,41,1.188,49,0.928,53,0.271,57,0.554,61,0.425,90,0.707,110,0.015,111,0.015,113,0.667,122,0.667,125,0.628,129,1.613,147,1.544,154,1.26,162,1.318,166,1.083,167,1.083,171,1.26,266,1.544,267,1.467,270,1.627,275,2.594,527,2.619,535,3.353,536,3.353,537,3.385,538,4.434,539,3.385]],["title/classes/Load-5.html",[40,0.395,61,0.215,540,2.712]],["body/classes/Load-5.html",[3,0.217,4,0.248,5,0.248,9,0.186,15,0.019,18,0.281,21,0.382,23,0.735,24,0.46,40,0.841,49,1.088,53,0.248,61,0.353,110,0.016,111,0.016,113,0.782,162,1.207,169,1.728,468,3.973,541,3.604,542,3.604,543,5.197,544,6.265,545,4.344,546,5.197]],["title/classes/RegisterFormat.html",[61,0.255,161,2.073]],["body/classes/RegisterFormat.html",[3,0.145,4,0.166,5,0.231,9,0.125,12,0.38,13,1.122,14,0.304,15,0.02,18,0.299,21,0.355,22,0.407,23,0.712,24,0.44,39,1.346,40,0.693,46,2.389,49,0.728,53,0.301,57,0.435,61,0.427,64,1.498,86,1.795,90,0.555,110,0.013,111,0.013,113,0.523,122,0.523,125,0.493,144,1.916,145,2.055,146,3.054,147,1.681,149,2.86,150,2.852,152,2.218,153,1.795,154,0.989,155,3.09,156,1.916,157,2.055,158,2.055,159,3.538,160,3.351,161,2.659,162,1.461,163,2.218,164,2.445,165,2.264,166,1.463,167,1.463,168,2.688,169,1.241,170,2.084,171,0.989,172,2.218,173,2.055,174,2.218,175,2.218,176,1.346,177,1.916,178,1.276,179,2.218,180,2.218,314,2.983,547,3.479]],["title/classes/Reset.html",[41,0.788,61,0.255]],["body/classes/Reset.html",[3,0.174,4,0.2,5,0.2,6,2.026,7,2.026,9,0.15,13,1.301,15,0.02,17,1.617,18,0.295,21,0.401,22,0.489,23,0.665,24,0.401,39,1.617,40,0.522,41,1.144,42,2.302,43,2.026,49,0.875,50,2.649,53,0.308,61,0.454,63,1.188,64,1.476,65,2.358,90,0.666,110,0.014,111,0.014,113,0.629,129,1.73,154,1.188,162,1.498,164,2.23,165,2.23,166,1.334,167,1.334,171,1.188,178,1.533,251,2.113,264,2.664,265,1.804,266,1.456,267,1.383,268,2.664,269,2.026,270,1.533]],["title/classes/Reset-1.html",[41,0.662,61,0.215,95,1.869]],["body/classes/Reset-1.html",[3,0.187,4,0.214,5,0.214,9,0.16,13,1.22,15,0.02,16,1.466,18,0.308,21,0.419,22,0.523,23,0.724,24,0.486,40,0.559,41,1.386,49,0.936,53,0.3,61,0.449,63,1.271,90,0.713,110,0.015,111,0.015,113,0.672,129,1.271,154,1.271,162,1.459,166,1.092,167,1.092,169,1.149,171,1.271,182,2.168,183,2.168,189,2.641,201,2.307,241,2.85,266,1.557,267,1.479,270,1.64,275,2.043,286,3.1,287,3.414,288,3.957,289,3.1,290,3.1,291,3.414]],["title/classes/Reset-2.html",[41,0.662,61,0.215,530,2.712]],["body/classes/Reset-2.html",[3,0.163,4,0.187,5,0.187,9,0.14,13,1.168,15,0.02,16,1.614,18,0.282,21,0.384,22,0.457,23,0.571,24,0.495,40,0.488,41,1.093,49,0.817,53,0.313,56,3.268,61,0.457,63,1.11,90,0.622,110,0.014,111,0.014,113,0.587,129,1.11,154,1.11,162,1.52,166,1.437,167,1.437,171,1.11,178,1.432,251,2.02,265,1.685,266,1.36,267,1.291,269,2.532,270,1.432,271,2.014,272,2.306,273,3.036,274,2.306,275,1.784,276,2.876,277,3.241,278,2.694,279,2.014,280,3.085,281,2.694,282,2.014,283,2.694,284,2.488,285,2.014]],["title/classes/Reset-3.html",[41,0.662,61,0.215,532,2.712]],["body/classes/Reset-3.html",[3,0.195,4,0.224,5,0.224,9,0.168,13,1.237,15,0.02,16,1.203,18,0.317,21,0.432,22,0.548,23,0.758,24,0.472,40,0.734,41,1.409,49,0.98,53,0.281,61,0.435,90,0.746,110,0.015,111,0.015,113,0.704,129,1.33,154,1.33,162,1.364,166,1.143,167,1.143,171,1.33,266,1.63,267,1.548,270,1.717,275,2.139,535,2.765,536,2.765,537,3.574,539,3.574]],["title/interfaces/ScreenModeModel.html",[0,1.381,548,2.609]],["body/interfaces/ScreenModeModel.html",[0,1.743,2,2.806,3,0.198,4,0.227,5,0.227,9,0.17,10,0.994,11,2.875,14,0.517,15,0.019,24,0.349,53,0.227,110,0.015,111,0.015,130,3.334,185,2.806,209,3.728,462,3.334,463,3.56,548,4.111,549,3.028,550,3.028,551,4.75,552,4.314,553,3.779,554,4.526,555,4.829,556,4.119,557,5.928,558,4.526,559,5.083,560,5.928]],["title/classes/ScreenModeSelectors.html",[61,0.255,561,3.227]],["body/classes/ScreenModeSelectors.html",[3,0.156,4,0.178,5,0.178,9,0.134,10,0.781,12,0.554,14,0.442,15,0.02,18,0.31,24,0.453,26,0.959,53,0.178,57,0.633,61,0.253,64,1.369,66,1.667,70,2.314,75,1.44,110,0.013,111,0.013,113,0.561,115,4.191,116,1.592,117,3.225,120,1.764,122,0.762,125,0.718,130,2.613,131,2.055,209,3.397,461,2.378,462,3.66,463,3.663,548,4.717,549,3.665,550,3.665,552,3.228,555,4.277,556,3.931,561,4.343,562,3.731,563,5.065,564,5.065,565,3.731,566,5.065,567,5.065,568,3.731,569,3.512,570,3.199,571,3.731,572,5.065,573,3.731,574,3.731]],["title/injectables/ScreenModeState.html",[19,0.967,461,2.399]],["body/injectables/ScreenModeState.html",[3,0.141,4,0.162,5,0.162,9,0.121,10,0.708,12,0.517,14,0.413,15,0.02,18,0.336,19,1.217,20,1.241,23,0.647,24,0.497,25,3.212,26,0.869,53,0.162,54,2.043,57,0.683,59,1.746,61,0.229,64,1.599,66,1.28,67,2.553,76,1.999,103,1.737,110,0.012,111,0.012,116,1.489,120,1.649,122,0.712,125,0.671,129,1.883,134,1.546,209,3.259,342,2.346,350,2.797,365,2.901,366,2.901,379,4.06,461,3.018,462,3.544,463,3.649,503,4.318,548,3.787,549,3.482,550,3.482,552,3.482,556,2.157,570,2.901,575,3.383,576,4.735,577,4.594,578,3.383,579,4.735,580,3.383,581,4.735,582,3.383,583,4.735,584,3.383,585,3.383,586,2.583,587,3.383,588,3.383,589,3.383,590,3.383]],["title/classes/SendMessage.html",[61,0.255,301,2.873]],["body/classes/SendMessage.html",[0,2.147,3,0.194,4,0.222,5,0.222,9,0.167,12,0.509,14,0.559,15,0.02,18,0.316,21,0.43,22,0.545,23,0.509,49,0.974,53,0.222,57,0.582,61,0.434,110,0.015,111,0.015,113,0.7,122,0.7,125,0.659,147,2.23,162,1.08,166,1.137,167,1.137,280,3.457,298,5.018,301,4.468,306,5.286,308,3.99,336,5.018,591,4.653,592,5.852,593,5.852,594,5.852,595,4.653,596,7.066,597,4.653,598,4.653]],["title/classes/Set.html",[61,0.255,129,1.07]],["body/classes/Set.html",[3,0.177,4,0.202,5,0.202,9,0.197,12,0.463,14,0.369,15,0.02,18,0.229,21,0.311,23,0.463,49,0.887,53,0.263,57,0.529,61,0.374,64,1.489,110,0.014,111,0.014,113,0.637,122,0.637,125,0.6,129,1.995,130,3.16,147,1.475,162,1.279,164,2.501,165,2.501,166,1.346,167,1.346,209,3.374,462,3.16,463,3.797,549,3.512,550,3.512,552,3.904,553,3.904,554,4.207,555,2.936,556,2.699,558,3.233,577,2.936,586,3.233,599,3.631,600,5.251,601,4.234,602,4.234,603,4.724,604,3.631,605,3.631,606,3.631]],["title/classes/SetClicked.html",[61,0.255,283,1.942]],["body/classes/SetClicked.html",[3,0.156,4,0.178,5,0.178,9,0.134,12,0.408,13,1.15,14,0.326,15,0.02,16,1.657,18,0.273,21,0.372,22,0.437,23,0.554,24,0.489,40,0.466,41,0.781,49,0.781,53,0.308,56,3.298,57,0.466,61,0.451,63,1.06,90,0.595,110,0.013,111,0.013,113,0.561,122,0.561,125,0.529,129,1.06,147,1.299,154,1.06,162,1.497,166,1.405,167,1.405,171,1.06,178,1.369,251,1.443,265,1.61,266,1.299,267,1.234,269,2.456,270,1.369,271,1.925,272,2.204,273,3.327,274,2.204,275,1.705,276,3.167,277,3.431,278,2.613,279,1.925,280,3.397,281,2.967,282,1.925,283,3.182,284,2.378,285,2.613,607,3.731,608,3.731]],["title/classes/SetHover.html",[61,0.255,278,1.942]],["body/classes/SetHover.html",[3,0.156,4,0.178,5,0.178,9,0.134,12,0.408,13,1.15,14,0.326,15,0.02,16,1.657,18,0.273,21,0.372,22,0.437,23,0.554,24,0.489,40,0.466,41,0.781,49,0.781,53,0.308,56,3.298,57,0.466,61,0.451,63,1.06,90,0.595,110,0.013,111,0.013,113,0.561,122,0.561,125,0.529,129,1.06,147,1.299,154,1.06,162,1.497,166,1.405,167,1.405,171,1.06,178,1.369,251,1.443,265,1.61,266,1.299,267,1.234,269,2.456,270,1.369,271,1.925,272,2.204,273,3.327,274,2.204,275,1.705,276,3.167,277,3.431,278,3.182,279,1.925,280,3.397,281,2.967,282,2.613,283,2.613,284,2.378,285,1.925,609,3.731,610,3.731]],["title/classes/SetIllustrationUrl.html",[42,2.073,61,0.255]],["body/classes/SetIllustrationUrl.html",[3,0.165,4,0.189,5,0.189,6,2.553,7,2.553,9,0.141,12,0.432,13,1.319,14,0.345,15,0.02,17,2.037,18,0.284,21,0.387,22,0.463,23,0.69,24,0.29,39,1.529,40,0.494,41,0.827,42,2.9,43,2.553,49,0.827,50,2.871,53,0.302,57,0.494,61,0.446,63,1.123,64,1.423,65,2.555,90,0.63,110,0.014,111,0.014,113,0.594,122,0.594,125,0.56,129,1.869,147,1.376,154,1.123,162,1.466,164,2.417,165,2.417,166,1.286,167,1.286,171,1.123,178,1.45,251,1.529,264,2.519,265,1.706,266,1.376,267,1.307,268,2.519,269,1.916,270,1.45,527,2.335,611,3.952]],["title/classes/SetSize.html",[61,0.255,577,2.609]],["body/classes/SetSize.html",[3,0.173,4,0.199,5,0.199,9,0.195,12,0.454,14,0.363,15,0.02,18,0.224,21,0.305,23,0.454,49,0.87,53,0.26,57,0.52,61,0.369,64,1.471,110,0.014,111,0.014,113,0.625,122,0.625,125,0.589,129,1.95,130,2.145,147,1.448,162,1.264,164,2.479,165,2.479,166,1.33,167,1.33,209,3.548,462,3.132,463,3.778,549,3.47,550,3.47,552,3.47,553,3.869,554,3.174,555,4.209,556,3.869,558,4.157,577,3.775,586,3.174,599,3.565,600,5.205,603,4.668,604,4.668,605,4.668,606,4.668,612,4.157,613,4.157]],["title/classes/SourceRefsSelectors.html",[61,0.255,614,3.227]],["body/classes/SourceRefsSelectors.html",[3,0.191,4,0.319,5,0.219,9,0.164,10,0.958,12,0.5,14,0.399,15,0.02,18,0.343,21,0.336,22,0.535,26,1.175,37,2.519,38,3.69,53,0.219,57,0.572,61,0.31,66,1.717,75,1.3,110,0.015,111,0.015,113,0.688,115,3.42,116,1.82,117,3.08,120,1.593,122,0.688,125,0.648,131,2.519,535,3.42,536,3.42,614,4.963,615,4.573,616,5.789,617,4.963,618,5.789,619,6.032,620,4.573,621,4.573,622,4.963,623,4.573,624,4.573]],["title/injectables/SourceRefsState.html",[19,0.967,37,2.073]],["body/injectables/SourceRefsState.html",[3,0.151,4,0.315,5,0.173,9,0.13,10,0.76,12,0.543,13,0.647,14,0.495,15,0.02,16,1.567,17,1.404,18,0.345,19,1.277,20,1.331,21,0.267,22,0.425,23,0.397,24,0.505,25,2.41,26,0.933,27,2.749,28,1.872,29,1.76,37,2.738,40,0.844,41,1.277,53,0.173,54,2.914,55,3.446,57,0.709,59,1.872,61,0.246,63,1.413,66,1.343,67,2.145,68,2.564,75,1.031,103,1.331,105,2.936,110,0.013,111,0.013,116,1.563,120,1.731,122,0.748,125,0.704,134,1.658,138,2.516,140,2.516,169,0.933,170,1.566,176,1.404,251,1.923,252,1.872,253,2.144,258,1.872,259,2.144,260,2.144,503,3.931,535,3.349,536,3.349,617,3.112,619,3.112,622,5.228,625,3.112,626,3.629,627,3.629,628,3.629,629,3.629]],["title/injectables/StateAnalyticsPluginService.html",[19,0.967,464,2.399]],["body/injectables/StateAnalyticsPluginService.html",[3,0.099,4,0.113,5,0.113,9,0.13,10,0.496,12,0.259,14,0.595,15,0.02,16,1.52,18,0.269,19,1.382,20,0.868,23,0.752,24,0.46,26,0.608,53,0.212,55,3.454,57,0.296,61,0.161,64,1.599,66,1.453,67,1.915,70,1.082,75,1.528,76,2.151,90,0.857,103,1.628,110,0.009,111,0.009,116,1.145,122,0.356,125,0.335,130,1.878,134,1.082,169,0.608,170,1.571,176,1.408,206,1.221,218,2.444,220,2.525,252,1.221,258,2.57,267,0.783,289,2.525,331,1.807,350,2.621,359,1.641,372,2.029,447,1.641,459,2.525,464,2.828,465,4.075,466,4.882,471,1.807,472,3.803,474,1.641,478,1.641,479,1.641,480,1.641,553,1.509,569,4.636,630,2.78,631,2.78,632,1.807,633,3.641,634,6.105,635,4.981,636,2.367,637,3.641,638,3.641,639,6.759,640,4.437,641,4.437,642,2.367,643,3.804,644,2.367,645,3.641,646,2.367,647,3.122,648,3.122,649,2.78,650,3.122,651,2.029,652,3.122,653,2.029,654,2.029,655,2.029,656,2.029,657,2.029,658,2.029,659,2.029,660,3.122,661,3.122,662,2.367,663,3.804,664,2.029,665,2.029,666,2.029,667,3.122,668,3.122,669,2.029,670,2.367,671,2.367,672,2.367,673,2.367,674,2.367,675,2.367,676,2.367,677,2.367,678,2.367,679,2.367,680,2.367,681,2.367,682,2.367,683,2.367,684,2.367,685,3.122,686,2.367,687,2.367,688,2.367,689,2.367,690,2.367,691,4.981,692,3.641,693,4.437,694,2.367,695,2.367,696,2.367,697,2.367,698,2.029,699,2.029]],["title/classes/TissueLibrarySelectors.html",[61,0.255,700,3.227]],["body/classes/TissueLibrarySelectors.html",[3,0.172,4,0.197,5,0.197,9,0.194,10,0.861,12,0.45,13,0.734,14,0.527,15,0.02,16,1.39,18,0.346,21,0.302,22,0.482,24,0.471,26,1.057,53,0.197,57,0.514,61,0.41,64,1.112,66,1.461,75,1.169,110,0.014,111,0.014,113,0.619,116,1.7,117,2.929,120,1.433,122,0.619,124,4.129,125,0.583,131,3.327,169,1.758,206,2.79,467,4.247,468,3.937,541,3.749,542,3.749,545,3.749,700,4.636,701,4.114,702,5.407,703,5.407,704,5.407,705,4.898,706,4.114,707,4.114,708,6.039,709,5.407,710,5.407,711,3.528,712,4.114,713,4.114,714,4.114]],["title/injectables/TissueLibraryState.html",[19,0.967,467,2.399]],["body/injectables/TissueLibraryState.html",[3,0.161,4,0.184,5,0.184,9,0.185,10,0.806,12,0.42,14,0.336,15,0.02,16,1.329,18,0.362,19,1.329,20,1.412,21,0.283,22,0.45,23,0.42,24,0.524,26,0.989,27,2.832,28,1.985,29,1.866,40,0.481,53,0.184,54,2.232,57,0.646,61,0.261,63,1.47,64,1.04,66,1.398,68,2.668,75,1.094,110,0.013,111,0.013,116,1.626,120,1.34,122,0.579,125,0.545,134,1.758,165,2.111,169,1.791,176,2,240,3.586,252,1.985,253,2.273,258,2.668,259,2.273,260,2.273,342,3.586,467,3.296,468,4.118,541,3.586,542,3.586,545,2.668,669,3.299,705,2.938,711,3.299,715,3.847,716,5.171,717,5.171,718,5.355,719,3.847,720,5.171,721,3.847,722,3.847,723,3.299,724,3.847,725,3.847]],["title/dependencies.html",[726,2.712,727,3.447]],["body/dependencies.html",[15,0.019,20,2.083,110,0.017,111,0.017,727,5.04,728,5.677,729,5.677,730,5.677,731,5.677,732,6.601]],["title/miscellaneous/functions.html",[733,1.869,734,3.871]],["body/miscellaneous/functions.html",[9,0.11,10,1.086,11,1.492,12,0.721,14,0.586,15,0.019,16,0.791,32,2.439,46,1.624,57,0.825,66,1.843,67,1.328,103,1.624,110,0.011,111,0.011,124,3.38,125,0.935,130,1.588,146,1.695,149,1.588,153,3.518,160,2.147,164,1.257,168,1.492,182,1.492,183,1.492,190,2.134,191,3.07,192,3.07,199,4.587,202,3.07,206,2.675,218,3.907,220,4.166,256,4.445,277,2.284,288,2.134,331,2.35,351,2.639,359,2.134,371,3.796,384,2.134,416,2.639,465,3.305,553,1.962,569,3.932,630,2.35,631,2.35,632,3.38,649,2.35,653,2.639,654,2.639,655,2.639,656,2.639,657,2.639,658,2.639,659,5.364,660,2.639,661,2.639,723,2.639,733,1.818,734,2.639,735,4.776,736,6.446,737,2.35,738,4.427,739,4.427,740,4.427,741,4.427,742,4.427,743,4.427,744,2.639,745,3.077,746,3.077,747,3.077,748,3.077,749,3.077,750,3.077,751,6.007,752,3.077,753,6.007,754,3.077,755,3.077,756,5.67,757,3.077,758,3.077,759,3.077,760,3.077,761,3.077,762,3.077,763,3.077,764,3.077,765,3.077,766,3.077,767,3.077,768,3.077,769,3.077,770,4.427,771,3.077,772,3.077,773,3.077,774,3.077,775,3.077,776,3.077,777,3.077,778,3.077,779,2.35,780,3.077]],["title/index.html",[10,0.662,781,3.163,782,3.163]],["body/index.html",[15,0.017,24,0.483,110,0.017,111,0.017,469,4.304,783,5.637,784,6.574,785,5.637,786,6.574,787,6.574,788,5.637,789,5.637,790,5.637]],["title/modules.html",[445,3.89]],["body/modules.html",[15,0.017,110,0.017,111,0.017,318,4.445,444,4.037,445,4.445,791,5.822,792,5.822]],["title/overview.html",[793,4.368]],["body/overview.html",[2,3.319,15,0.017,41,1.176,95,3.319,110,0.017,111,0.017,113,0.845,134,2.567,443,3.895,540,4.816,727,5.009,793,4.816,794,6.56,795,5.617,796,5.617,797,5.617]],["title/properties.html",[11,2.189,726,2.712]],["body/properties.html",[11,2.833,15,0.018,110,0.017,111,0.017,798,5.843,799,5.843]],["title/miscellaneous/typealiases.html",[733,1.869,800,4.515]],["body/miscellaneous/typealiases.html",[6,1.879,7,1.879,8,3.968,10,0.811,14,0.641,15,0.013,23,0.424,24,0.285,25,3.261,54,3.052,110,0.013,111,0.013,149,3.025,150,3.464,155,3.025,169,0.996,182,1.879,183,1.879,184,4.783,186,3.323,190,3.603,196,4.455,197,3.323,198,2.959,199,3.968,200,5.766,201,1.999,202,2.687,203,2.959,204,2.959,321,4.783,339,5.027,342,2.687,468,2.289,484,2.959,535,2.289,536,2.289,541,2.687,542,2.687,545,2.687,625,4.455,705,3.968,718,4.455,733,2.289,735,4.476,737,4.988,779,2.959,801,3.875,802,3.323,803,3.875,804,3.323,805,5.196,806,5.862,807,5.601,808,6.532,809,6.532,810,6.264,811,3.323,812,6.264,813,3.323,814,3.323,815,3.323,816,3.875,817,5.196,818,3.875,819,3.875]],["title/miscellaneous/variables.html",[733,1.869,820,3.871]],["body/miscellaneous/variables.html",[3,0.104,6,0.716,7,0.716,9,0.089,10,0.309,11,1.562,12,0.161,14,0.425,15,0.019,17,0.571,19,0.379,21,0.108,23,0.678,24,0.108,46,1.182,50,1.562,51,1.898,61,0.256,65,1.073,70,1.136,76,0.872,110,0.006,111,0.006,130,0.761,145,0.872,153,3.466,155,1.283,157,0.872,158,0.872,160,1.833,168,1.206,169,0.971,182,1.206,183,1.206,184,2.886,194,2.132,195,3.241,198,2.46,201,1.95,202,3.172,203,1.898,204,1.898,205,2.762,206,2.177,207,1.724,208,2.132,209,2.815,210,3.618,211,2.132,212,1.265,213,1.265,214,1.265,215,2.132,216,1.265,217,1.265,218,2.324,219,1.265,220,1.724,221,1.265,222,1.265,223,3.618,224,1.265,225,1.265,264,1.585,266,1.317,267,1.396,268,0.941,272,0.872,274,0.872,286,1.724,290,1.023,295,1.023,306,1.127,319,3.222,333,4.172,334,2.132,335,1.265,350,1.903,359,5.086,367,2.132,368,2.132,405,3.618,447,1.023,459,1.023,462,0.761,464,0.941,465,2.915,474,1.023,478,1.023,479,1.023,480,1.023,535,0.872,536,0.872,537,1.898,539,1.127,559,2.132,569,5.053,630,1.898,631,1.127,632,2.886,643,2.132,647,2.762,648,2.762,649,1.127,650,1.265,651,2.132,652,1.265,663,2.762,664,1.265,665,1.265,666,1.265,667,1.265,668,1.265,685,2.762,698,1.265,699,2.132,733,0.872,735,2.886,737,2.886,744,2.762,779,1.127,802,1.265,804,1.265,807,3.241,811,3.241,813,3.241,814,3.241,815,2.762,820,1.265,821,5.11,822,7.014,823,1.476,824,1.476,825,2.486,826,6.717,827,2.486,828,1.476,829,2.486,830,3.221,831,2.486,832,4.22,833,3.78,834,2.486,835,2.486,836,2.486,837,2.486,838,2.486,839,2.486,840,2.486,841,2.486,842,2.486,843,2.486,844,2.486,845,2.486,846,2.486,847,2.486,848,5.318,849,2.486,850,2.486,851,4.866,852,3.78,853,3.221,854,3.221,855,2.486,856,3.78,857,2.486,858,2.486,859,2.486,860,1.476,861,1.476,862,1.476,863,4.22,864,1.476,865,1.476,866,1.476,867,1.476,868,1.476,869,5.653,870,5.789,871,1.476,872,2.486,873,3.78,874,1.476,875,1.476,876,3.221,877,4.574,878,2.486,879,1.476,880,1.476,881,1.476,882,1.476,883,1.476,884,1.476,885,1.476,886,4.574,887,1.476,888,2.486,889,2.486,890,1.476,891,1.476,892,3.78,893,1.476,894,1.476,895,1.476,896,3.221,897,1.476,898,1.476,899,1.476,900,1.476,901,1.476,902,1.476,903,1.476,904,1.476,905,1.476,906,1.476,907,1.476,908,1.476,909,1.476,910,1.476,911,1.476,912,1.476,913,1.476,914,1.476,915,1.476,916,1.476,917,1.476,918,1.476,919,1.476,920,1.476,921,1.476,922,1.476,923,1.476,924,1.476,925,1.476,926,1.476,927,1.476,928,1.476,929,3.78,930,1.476,931,1.476,932,1.476,933,1.476,934,1.476,935,1.476,936,1.476,937,1.476,938,1.476,939,2.486,940,1.476,941,3.221,942,1.476,943,1.476,944,2.486,945,1.476,946,2.486,947,1.476]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":416,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":799,"title":{},"body":{"properties.html":{}}}],["1",{"_index":95,"title":{"classes/Load-1.html":{},"classes/Reset-1.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{},"overview.html":{}}}],["15.1.0",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":530,"title":{"classes/Load-2.html":{},"classes/Reset-2.html":{}},"body":{}}],["2.3.0",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":532,"title":{"classes/Load-3.html":{},"classes/Reset-3.html":{}},"body":{}}],["30",{"_index":797,"title":{},"body":{"overview.html":{}}}],["4",{"_index":534,"title":{"classes/Load-4.html":{}},"body":{}}],["5",{"_index":540,"title":{"classes/Load-5.html":{}},"body":{"overview.html":{}}}],["9",{"_index":796,"title":{},"body":{"overview.html":{}}}],["_ctx",{"_index":309,"title":{},"body":{"injectables/ContactState.html":{}}}],["absence",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["action",{"_index":23,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action('[contact",{"_index":598,"title":{},"body":{"classes/SendMessage.html":{}}}],["action('[screenmode",{"_index":603,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["action('[tissuelibrary",{"_index":546,"title":{},"body":{"classes/Load-5.html":{}}}],["action('add",{"_index":175,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["action('clear",{"_index":178,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('compute",{"_index":291,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["action('download",{"_index":179,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["action('load",{"_index":171,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('register",{"_index":163,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["action('reset",{"_index":270,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action('set",{"_index":269,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["action(['clear",{"_index":136,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["action([clear",{"_index":102,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["action(addentry",{"_index":340,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearentries",{"_index":344,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearselection",{"_index":502,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(computeaggregates",{"_index":243,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["action(download",{"_index":348,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(load",{"_index":68,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["action(registerformat",{"_index":361,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(reset",{"_index":105,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["action(sendmessage",{"_index":303,"title":{},"body":{"injectables/ContactState.html":{}}}],["action(set",{"_index":579,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["action(setclicked",{"_index":501,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(sethover",{"_index":500,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(setillustrationurl",{"_index":89,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["action(setsize",{"_index":583,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["action_log",{"_index":689,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["actiongroup",{"_index":154,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["actiongroup('activeftu",{"_index":268,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('cellsummary",{"_index":290,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('download",{"_index":158,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('illustrator",{"_index":274,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('sourcerefs",{"_index":539,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":350,"title":{},"body":{"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":43,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["activeftu",{"_index":58,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftuactions.load",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeftumodel",{"_index":1,"title":{"interfaces/ActiveFtuModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftuselectors",{"_index":112,"title":{"classes/ActiveFtuSelectors.html":{}},"body":{"classes/ActiveFtuSelectors.html":{}}}],["activeftustate",{"_index":62,"title":{"injectables/ActiveFtuState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["add",{"_index":86,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["addd",{"_index":152,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["added",{"_index":720,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["addentry",{"_index":144,"title":{"classes/AddEntry.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["addentry(ctx",{"_index":338,"title":{},"body":{"injectables/DownloadState.html":{}}}],["aggregate",{"_index":201,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_cell",{"_index":205,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row",{"_index":198,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row.array",{"_index":225,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregates",{"_index":189,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["aggregates(state",{"_index":228,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["aggregation",{"_index":748,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aggregrated",{"_index":247,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["aggregrates",{"_index":188,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["alias",{"_index":817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["analytics",{"_index":465,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["analyticsproviders",{"_index":481,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["anchor",{"_index":426,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.click",{"_index":431,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.download",{"_index":429,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.href",{"_index":430,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.remove",{"_index":432,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/common",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":364,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{}}}],["app",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptitle",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":819,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["array",{"_index":191,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["array.isarray(value",{"_index":696,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["available",{"_index":318,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules.html":{}}}],["base",{"_index":266,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["base_url",{"_index":91,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["base_url}2d",{"_index":96,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["based",{"_index":761,"title":{},"body":{"miscellaneous/functions.html":{}}}],["behaviour",{"_index":606,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["being",{"_index":640,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["bigint",{"_index":652,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":423,"title":{},"body":{"injectables/DownloadState.html":{}}}],["blob([entry.data",{"_index":398,"title":{},"body":{"injectables/DownloadState.html":{}}}],["boolean",{"_index":130,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["boolean/number/string/null/bigint/undefined",{"_index":658,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["brand('downloadformatid",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branded",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":399,"title":{},"body":{"injectables/DownloadState.html":{}}}],["browse",{"_index":792,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":422,"title":{},"body":{"injectables/DownloadState.html":{}}}],["builtin",{"_index":369,"title":{},"body":{"injectables/DownloadState.html":{}}}],["calculates",{"_index":768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":809,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["cancels",{"_index":248,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["canceluncompleted",{"_index":69,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["case",{"_index":391,"title":{},"body":{"injectables/DownloadState.html":{}}}],["cell",{"_index":31,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["cellsummary",{"_index":192,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["cellsummaryactions",{"_index":30,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.load(iri",{"_index":77,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.reset",{"_index":107,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryaggregate",{"_index":190,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummaryaggregaterow",{"_index":199,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummarymodel",{"_index":181,"title":{"interfaces/CellSummaryModel.html":{}},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["cellsummaryselectors",{"_index":226,"title":{"classes/CellSummarySelectors.html":{}},"body":{"classes/CellSummarySelectors.html":{}}}],["cellsummarystate",{"_index":234,"title":{"injectables/CellSummaryState.html":{}},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["check",{"_index":654,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["checks",{"_index":128,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["children",{"_index":60,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["class",{"_index":61,"title":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":113,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"overview.html":{}}}],["clear",{"_index":39,"title":{"classes/Clear.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["clear(undefined",{"_index":135,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["clearentries",{"_index":177,"title":{"classes/ClearEntries.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["clearentries(ctx",{"_index":343,"title":{},"body":{"injectables/DownloadState.html":{}}}],["clears",{"_index":265,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{}}}],["clearselection",{"_index":271,"title":{"classes/ClearSelection.html":{}},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["clearselection(undefined",{"_index":519,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["click",{"_index":488,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["clicked",{"_index":284,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["color",{"_index":208,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":757,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":203,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compute",{"_index":287,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregate",{"_index":256,"title":{},"body":{"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["computeaggregate(summary",{"_index":745,"title":{},"body":{"miscellaneous/functions.html":{}}}],["computeaggregates",{"_index":241,"title":{"classes/ComputeAggregates.html":{}},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregates(undefined",{"_index":242,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["computes",{"_index":83,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["configuration",{"_index":453,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["configuring",{"_index":452,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["const",{"_index":90,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["constant",{"_index":812,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constructor",{"_index":147,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["constructor(format",{"_index":314,"title":{},"body":{"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["constructor(id",{"_index":148,"title":{},"body":{"classes/AddEntry.html":{}}}],["constructor(iri",{"_index":527,"title":{},"body":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/SetIllustrationUrl.html":{}}}],["constructor(isfullscreen",{"_index":601,"title":{},"body":{"classes/Set.html":{}}}],["constructor(message",{"_index":595,"title":{},"body":{"classes/SendMessage.html":{}}}],["constructor(readonly",{"_index":166,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["constructor(selectedonclick",{"_index":607,"title":{},"body":{"classes/SetClicked.html":{}}}],["constructor(selectedonhover",{"_index":609,"title":{},"body":{"classes/SetHover.html":{}}}],["constructor(size",{"_index":612,"title":{},"body":{"classes/SetSize.html":{}}}],["contact",{"_index":295,"title":{},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["contact.actions",{"_index":310,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactacknowledgement",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactions.sendmessage",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactmessage",{"_index":596,"title":{},"body":{"classes/SendMessage.html":{}}}],["contactservice",{"_index":300,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactstate",{"_index":292,"title":{"injectables/ContactState.html":{}},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["contains",{"_index":207,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":334,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":54,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["conversion",{"_index":438,"title":{},"body":{"injectables/DownloadState.html":{}}}],["convert",{"_index":332,"title":{},"body":{"injectables/DownloadState.html":{}}}],["converted",{"_index":420,"title":{},"body":{"injectables/DownloadState.html":{}}}],["count",{"_index":770,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('gradient",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('size",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid",{"_index":371,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["createdownloadformatid('png",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid('svg",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid(id",{"_index":780,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid('about",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('embed",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('exploreftu",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('illustration",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpage",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpagereadmore",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('portal",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('producttitle",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('apptitle",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('contactacknowledgement",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegend",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegendinfo",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthdescription",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthimg",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthmoretext",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthtitle",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrodescription",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroimg",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintromoretext",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintropartners",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroreadmore",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrotitle",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metrics",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricslogo",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricstitle",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('productlogourl",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('producttitle",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('screensizenoticecontent",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegend",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegendinfo",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":164,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"miscellaneous/functions.html":{}}}],["ctx",{"_index":342,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["ctx.dispatch([new",{"_index":375,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.getstate",{"_index":387,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate",{"_index":378,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate(data",{"_index":725,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["current",{"_index":16,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":169,"title":{},"body":{"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset-1.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dataservice",{"_index":259,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["decorators",{"_index":120,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["default",{"_index":359,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_loggable_actions",{"_index":647,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":59,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["define",{"_index":807,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":122,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["dependencies",{"_index":727,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":674,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["depth",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":653,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["different",{"_index":335,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":436,"title":{},"body":{"injectables/DownloadState.html":{}}}],["discriminated",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispatch",{"_index":73,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["dispatch([new",{"_index":106,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["dispatch(new",{"_index":98,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["dispatched",{"_index":641,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["dispatches",{"_index":84,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["display",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.appendchild(anchor",{"_index":428,"title":{},"body":{"injectables/DownloadState.html":{}}}],["document.createelement('a",{"_index":427,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download",{"_index":46,"title":{"classes/Download.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["download(ctx",{"_index":347,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.action",{"_index":370,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.model",{"_index":156,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["download.state",{"_index":325,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["download_entry",{"_index":811,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format",{"_index":813,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format_id",{"_index":814,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_model",{"_index":815,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadactions",{"_index":45,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["downloadactions.download",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadactions.load(iri",{"_index":79,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["downloadcontext",{"_index":339,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloaddata(blob",{"_index":424,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadentry",{"_index":150,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformat",{"_index":155,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadformatid",{"_index":149,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformatid:'${id",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadmodel",{"_index":321,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloadremotedata(url",{"_index":440,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloads",{"_index":434,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadselectors",{"_index":316,"title":{"classes/DownloadSelectors.html":{}},"body":{"classes/DownloadSelectors.html":{}}}],["downloadstate",{"_index":324,"title":{"injectables/DownloadState.html":{}},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["draft.entries",{"_index":383,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.entries[createdownloadformatid(format",{"_index":385,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.entries[id",{"_index":386,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.formats[format.id",{"_index":380,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.isfullscreen",{"_index":588,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["draft.size",{"_index":590,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["each",{"_index":775,"title":{},"body":{"miscellaneous/functions.html":{}}}],["elements",{"_index":216,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enteries",{"_index":172,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["entires",{"_index":346,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entries",{"_index":168,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["entries[format",{"_index":388,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry",{"_index":146,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{}}}],["entry.url",{"_index":394,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry?.type",{"_index":390,"title":{},"body":{"injectables/DownloadState.html":{}}}],["error('cannot",{"_index":401,"title":{},"body":{"injectables/DownloadState.html":{}}}],["event",{"_index":681,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["execute",{"_index":790,"title":{},"body":{"index.html":{}}}],["expandrow",{"_index":738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandrow(row",{"_index":750,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expands",{"_index":752,"title":{},"body":{"miscellaneous/functions.html":{}}}],["explore",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exploreftu",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":53,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["extends",{"_index":162,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["extension",{"_index":405,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":267,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["fakebase",{"_index":407,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fakebase).pathname",{"_index":411,"title":{},"body":{"injectables/DownloadState.html":{}}}],["false",{"_index":587,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["fetch",{"_index":437,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fields",{"_index":486,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["filename",{"_index":392,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fileurl",{"_index":439,"title":{},"body":{"injectables/DownloadState.html":{}}}],["followed",{"_index":219,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":558,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["forked",{"_index":493,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["forkjoin",{"_index":489,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["form",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":160,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["format.id",{"_index":328,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats",{"_index":319,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["formats(state",{"_index":320,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats.ts",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formats[id",{"_index":406,"title":{},"body":{"injectables/DownloadState.html":{}}}],["formatted",{"_index":421,"title":{},"body":{"injectables/DownloadState.html":{}}}],["forroot",{"_index":448,"title":{},"body":{"modules/HraStateModule.html":{}}}],["forroot(options",{"_index":449,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["found",{"_index":762,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ftu",{"_index":17,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions",{"_index":44,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["ftu.actions.ts",{"_index":264,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions.ts:19",{"_index":611,"title":{},"body":{"classes/SetIllustrationUrl.html":{}}}],["ftu.actions.ts:8",{"_index":528,"title":{},"body":{"classes/Load.html":{}}}],["ftu.selectors.ts",{"_index":114,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:15",{"_index":123,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:9",{"_index":127,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state",{"_index":132,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state.ts",{"_index":8,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"miscellaneous/typealiases.html":{}}}],["ftu.state.ts:39",{"_index":139,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:56",{"_index":143,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:67",{"_index":137,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:76",{"_index":141,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu/active",{"_index":7,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftudataschemas",{"_index":193,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["ftudataschemas.cell_summary_row",{"_index":212,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["ftudataservice",{"_index":253,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["full",{"_index":566,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["fullscreen",{"_index":554,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["function",{"_index":659,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":734,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funtion",{"_index":657,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["ga",{"_index":670,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["generated",{"_index":783,"title":{},"body":{"index.html":{}}}],["getactiontypefrominstance",{"_index":644,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getactiontypefrominstance(action",{"_index":683,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getcolumnindex",{"_index":739,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnindex(indexbyid",{"_index":755,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel",{"_index":740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel(items",{"_index":759,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow",{"_index":741,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow(rowbyid",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":124,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{}}}],["getstate",{"_index":71,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["getstate().iri",{"_index":74,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["getting",{"_index":781,"title":{"index.html":{}},"body":{}}],["gettotalcount",{"_index":742,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettotalcount(row",{"_index":767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["given",{"_index":288,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{}}}],["google",{"_index":472,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["googleanalyticsservice",{"_index":646,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["googleanalyticstoken",{"_index":475,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["gradient",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegend",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegendinfo",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":791,"title":{},"body":{"modules.html":{}}}],["group",{"_index":157,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["guess",{"_index":403,"title":{},"body":{"injectables/DownloadState.html":{}}}],["guessfilename(ctx",{"_index":404,"title":{},"body":{"injectables/DownloadState.html":{}}}],["handle",{"_index":55,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["handle(state",{"_index":633,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handler's",{"_index":818,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handles",{"_index":637,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handling",{"_index":240,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/TissueLibraryState.html":{}}}],["hasdata",{"_index":327,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["having",{"_index":186,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["helper",{"_index":816,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["hover",{"_index":279,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["hra",{"_index":21,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["hrastatemodule",{"_index":444,"title":{"modules/HraStateModule.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"modules.html":{}}}],["hrastatemoduleoptions",{"_index":450,"title":{"interfaces/HraStateModuleOptions.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["http",{"_index":373,"title":{},"body":{"injectables/DownloadState.html":{}}}],["httpclient",{"_index":363,"title":{},"body":{"injectables/DownloadState.html":{}}}],["https://base.com",{"_index":408,"title":{},"body":{"injectables/DownloadState.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":92,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["id",{"_index":153,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":52,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["ids.ts",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignoring",{"_index":776,"title":{},"body":{"miscellaneous/functions.html":{}}}],["illustrartor",{"_index":487,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustration",{"_index":50,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":273,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["illustrator",{"_index":35,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.actions",{"_index":490,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.state",{"_index":517,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratoractions",{"_index":33,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.load(iri",{"_index":78,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.reset",{"_index":108,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.setclicked",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustratoractions.sethover",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustratormodel",{"_index":483,"title":{"interfaces/IllustratorModel.html":{}},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrators",{"_index":492,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustratorselectors",{"_index":504,"title":{"classes/IllustratorSelectors.html":{}},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratorstate",{"_index":34,"title":{"injectables/IllustratorState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["image",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["immer",{"_index":366,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["implements",{"_index":372,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["importprovidersfrom",{"_index":458,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["importprovidersfrom(ngxgoogleanalyticsmodule.forroot(options.googleanalyticstoken",{"_index":482,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["imports",{"_index":476,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexbyid",{"_index":758,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicating",{"_index":763,"title":{},"body":{"miscellaneous/functions.html":{}}}],["individual",{"_index":593,"title":{},"body":{"classes/SendMessage.html":{}}}],["inferred",{"_index":810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":296,"title":{},"body":{"injectables/ContactState.html":{}}}],["init",{"_index":358,"title":{},"body":{"injectables/DownloadState.html":{}}}],["initial",{"_index":778,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializes",{"_index":280,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SendMessage.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["inject",{"_index":252,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["inject(contactservice",{"_index":312,"title":{},"body":{"injectables/ContactState.html":{}}}],["inject(ftudataservice",{"_index":260,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["inject(googleanalyticsservice",{"_index":671,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["inject(httpclient",{"_index":374,"title":{},"body":{"injectables/DownloadState.html":{}}}],["injectable",{"_index":19,"title":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":134,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"overview.html":{}}}],["injectiontoken",{"_index":642,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["injectiontoken('loggable",{"_index":666,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":669,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["input",{"_index":655,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":165,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/TissueLibraryState.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/SendMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{},"overview.html":{}}}],["intializes",{"_index":275,"title":{},"body":{"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["intro",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iri",{"_index":13,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{}}}],["iri(undefined",{"_index":119,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["iri.split('/').slice",{"_index":94,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["isactive",{"_index":118,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isactive(undefined",{"_index":126,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isfullscreen",{"_index":552,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["isfullscreen(state",{"_index":563,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["isprimitive",{"_index":743,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isprimitive(value",{"_index":660,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":277,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/functions.html":{}}}],["items",{"_index":384,"title":{},"body":{"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["iterating",{"_index":771,"title":{},"body":{"miscellaneous/functions.html":{}}}],["json.stringify(action",{"_index":686,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["key",{"_index":691,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["label",{"_index":202,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lanading",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landing",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpage",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthdescription",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthimg",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthmoretext",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthtitle",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedescription",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroimg",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintromoretext",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroreadmore",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagepartners",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagereadmore",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagetitle",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["large",{"_index":556,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["legend",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length",{"_index":751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["less",{"_index":754,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":469,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"index.html":{}}}],["library.actions",{"_index":721,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.actions.ts",{"_index":543,"title":{},"body":{"classes/Load-5.html":{}}}],["library.model",{"_index":711,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["library.model.ts",{"_index":806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["library.selectors.ts",{"_index":701,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.selectors.ts:14",{"_index":707,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state",{"_index":712,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state.ts",{"_index":715,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.state.ts:23",{"_index":719,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library/tissue",{"_index":542,"title":{},"body":{"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["link",{"_index":51,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"miscellaneous/variables.html":{}}}],["linkid",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkregistry",{"_index":85,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions",{"_index":47,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions.add(illustration",{"_index":99,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linkregistryactions.navigate",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linktype",{"_index":48,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["linktype.external",{"_index":100,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["list",{"_index":664,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":40,"title":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["load(ctx",{"_index":352,"title":{},"body":{"injectables/DownloadState.html":{}}}],["load(undefined",{"_index":138,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["loaded",{"_index":174,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["loading",{"_index":544,"title":{},"body":{"classes/Load-5.html":{}}}],["loads",{"_index":63,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["logaction(action",{"_index":682,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["loggable",{"_index":648,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggable_actions",{"_index":663,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggabletypes",{"_index":675,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logged",{"_index":665,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":638,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logging",{"_index":672,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["login",{"_index":698,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":559,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":679,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["managing",{"_index":294,"title":{},"body":{"injectables/ContactState.html":{}}}],["map",{"_index":756,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapping",{"_index":281,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["mapping(undefined",{"_index":508,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["matching",{"_index":111,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medical",{"_index":491,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["message",{"_index":306,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":298,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["metadata",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":305,"title":{},"body":{"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["methods",{"_index":116,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["metrics",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricslogo",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricstitle",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":733,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":463,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["mode.actions",{"_index":585,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.actions.ts",{"_index":599,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["mode.actions.ts:15",{"_index":613,"title":{},"body":{"classes/SetSize.html":{}}}],["mode.actions.ts:4",{"_index":602,"title":{},"body":{"classes/Set.html":{}}}],["mode.model",{"_index":570,"title":{},"body":{"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["mode.model.ts",{"_index":551,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["mode.selectors.ts",{"_index":562,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.selectors.ts:15",{"_index":565,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.selectors.ts:24",{"_index":568,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state",{"_index":571,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state.ts",{"_index":575,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.state.ts:23",{"_index":580,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.state.ts:36",{"_index":584,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode/screen",{"_index":550,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["model",{"_index":185,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{}}}],["module",{"_index":443,"title":{"modules/HraStateModule.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"overview.html":{}}}],["modules",{"_index":445,"title":{"modules.html":{}},"body":{"modules/HraStateModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":456,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["more",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":480,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":57,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["name.includes",{"_index":418,"title":{},"body":{"injectables/DownloadState.html":{}}}],["name}${extension",{"_index":419,"title":{},"body":{"injectables/DownloadState.html":{}}}],["name}.html",{"_index":97,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["navigation",{"_index":88,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["needs",{"_index":692,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["new",{"_index":76,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":634,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["next(state",{"_index":678,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngmodule",{"_index":457,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngx",{"_index":471,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":470,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxs",{"_index":357,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxs/store",{"_index":26,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["ngxs_plugins",{"_index":459,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["ngxsmodule",{"_index":460,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxsmodule.forfeature",{"_index":477,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["ngxsnextpluginfn",{"_index":635,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxsoninit",{"_index":337,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsoninit(ctx",{"_index":355,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsplugin",{"_index":645,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["node",{"_index":709,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["non",{"_index":777,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notice",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":661,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":220,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":784,"title":{},"body":{"index.html":{}}}],["object",{"_index":206,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.values(formats).filter(hasdata",{"_index":329,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["objects",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":27,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["operations",{"_index":749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":455,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["organ",{"_index":173,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["organs",{"_index":354,"title":{},"body":{"injectables/DownloadState.html":{}}}],["out",{"_index":795,"title":{},"body":{"overview.html":{}}}],["over",{"_index":772,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":793,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":726,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":64,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["parameters",{"_index":125,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partners",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchstate",{"_index":72,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["path",{"_index":409,"title":{},"body":{"injectables/DownloadState.html":{}}}],["path.split('/').filter((seg",{"_index":413,"title":{},"body":{"injectables/DownloadState.html":{}}}],["payload",{"_index":685,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["peer",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["performs",{"_index":747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe(tap",{"_index":82,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["plugin",{"_index":466,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["plugin.service.ts",{"_index":632,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["plugin.service.ts:51",{"_index":636,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["plugin/default",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin/state",{"_index":631,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png_format",{"_index":367,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["portal",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primitive",{"_index":649,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["primitive_types",{"_index":651,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["primitive_types.includes(typeof",{"_index":662,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["private",{"_index":258,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["produce",{"_index":365,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["produce((draft",{"_index":379,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["product",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productlogourl",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producttitle",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":723,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["provide",{"_index":478,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":667,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":643,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":454,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["provides",{"_index":447,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":473,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["read",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":176,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["record",{"_index":708,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["references",{"_index":622,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["refs",{"_index":38,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/SourceRefsSelectors.html":{}}}],["refs.actions",{"_index":628,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.actions.ts",{"_index":537,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["refs.actions.ts:10",{"_index":538,"title":{},"body":{"classes/Load-4.html":{}}}],["refs.selectors.ts",{"_index":615,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.selectors.ts:9",{"_index":621,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state",{"_index":623,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state.ts",{"_index":625,"title":{},"body":{"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["refs.state.ts:27",{"_index":626,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.state.ts:35",{"_index":627,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs/source",{"_index":536,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["regarding",{"_index":589,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["register",{"_index":159,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["registerformat",{"_index":161,"title":{"classes/RegisterFormat.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["registerformat(ctx",{"_index":360,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(png_format",{"_index":377,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(svg_format",{"_index":376,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registry",{"_index":87,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{}}}],["releases/v1.4/docs/2d",{"_index":93,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["representing",{"_index":196,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["required",{"_index":217,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":41,"title":{"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"overview.html":{}}}],["reset(undefined",{"_index":140,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["resets",{"_index":251,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{}}}],["resource",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetype",{"_index":442,"title":{},"body":{"injectables/DownloadState.html":{}}}],["result",{"_index":497,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["result$.pipe",{"_index":498,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["results",{"_index":110,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retreiving",{"_index":702,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["retrieves",{"_index":760,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":75,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["returns",{"_index":66,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":668,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rowbyid",{"_index":766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rows",{"_index":204,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":788,"title":{},"body":{"index.html":{}}}],["running",{"_index":785,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":29,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["save",{"_index":435,"title":{},"body":{"injectables/DownloadState.html":{}}}],["schema",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":462,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"miscellaneous/variables.html":{}}}],["screenmode",{"_index":586,"title":{},"body":{"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["screenmodeaction.set",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screenmodemodel",{"_index":548,"title":{"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screenmodeselectors",{"_index":561,"title":{"classes/ScreenModeSelectors.html":{}},"body":{"classes/ScreenModeSelectors.html":{}}}],["screenmodestate",{"_index":461,"title":{"injectables/ScreenModeState.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screensizenoticecontent",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seg",{"_index":414,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments",{"_index":412,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments.length",{"_index":415,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments[segments.length",{"_index":417,"title":{},"body":{"injectables/DownloadState.html":{}}}],["selected",{"_index":485,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["selectedformat",{"_index":180,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{}}}],["selectedonclick",{"_index":285,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selectedonclicked",{"_index":506,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonclicked(undefined",{"_index":511,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonhover",{"_index":282,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selectedonhovered",{"_index":507,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedonhovered(undefined",{"_index":513,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selection",{"_index":56,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["selections",{"_index":101,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["selector",{"_index":131,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["selector(['activeftustate",{"_index":121,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector(['cellsummarystate",{"_index":229,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector(['downloadstate",{"_index":322,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["selector(['illustratorstate",{"_index":509,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector(['screenmodestate",{"_index":564,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["selector(['sourcerefsstate",{"_index":620,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector(['tissuelibrarystate",{"_index":706,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selector([activeftustate",{"_index":133,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector([cellsummarystate",{"_index":236,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector([downloadstate",{"_index":326,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["selector([illustratorstate",{"_index":518,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector([screenmodestate",{"_index":572,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["selector([sourcerefsstate",{"_index":624,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector([tissuelibrarystate",{"_index":713,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selectors",{"_index":115,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{}}}],["send",{"_index":308,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sending",{"_index":297,"title":{},"body":{"injectables/ContactState.html":{}}}],["sendmessage",{"_index":301,"title":{"classes/SendMessage.html":{}},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sendmessage(_ctx",{"_index":302,"title":{},"body":{"injectables/ContactState.html":{}}}],["sends",{"_index":592,"title":{},"body":{"classes/SendMessage.html":{}}}],["serialize",{"_index":656,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["serialize(this",{"_index":694,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serialized",{"_index":693,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serializes",{"_index":690,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["service",{"_index":170,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["set",{"_index":129,"title":{"classes/Set.html":{}},"body":{"classes/ActiveFtuSelectors.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["set(inject(loggable_actions).map(getactiontypefrominstance",{"_index":676,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["set(undefined",{"_index":578,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["setactive",{"_index":716,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["setactive(ctx",{"_index":717,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["setclicked",{"_index":283,"title":{"classes/SetClicked.html":{}},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["setclicked(undefined",{"_index":523,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["sethover",{"_index":278,"title":{"classes/SetHover.html":{}},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["sethover(undefined",{"_index":525,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["setillustrationurl",{"_index":42,"title":{"classes/SetIllustrationUrl.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{}}}],["setillustrationurl(iri",{"_index":81,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["setillustrationurl(undefined",{"_index":142,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["sets",{"_index":276,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{}}}],["setsize",{"_index":577,"title":{"classes/SetSize.html":{}},"body":{"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["setsize(undefined",{"_index":582,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["setstate",{"_index":503,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["setting",{"_index":673,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["show",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["single",{"_index":197,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":209,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"miscellaneous/variables.html":{}}}],["size(state",{"_index":567,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["sizelegend",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sizelegendinfo",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["small",{"_index":555,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["small/large",{"_index":604,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["sourcereference",{"_index":619,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences",{"_index":617,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences(refs",{"_index":618,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsactions",{"_index":36,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.load(iri",{"_index":80,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.reset",{"_index":109,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsselectors",{"_index":614,"title":{"classes/SourceRefsSelectors.html":{}},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsstate",{"_index":37,"title":{"injectables/SourceRefsState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcerefstate",{"_index":616,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["specified",{"_index":351,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["src/.../active",{"_index":802,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../builtin",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cell",{"_index":735,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.action.ts",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.model.ts",{"_index":737,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../illustrator.actions.ts",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../illustrator.state.ts",{"_index":803,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../link",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../source",{"_index":804,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../state",{"_index":744,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":805,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/active",{"_index":6,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cell",{"_index":182,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.actions.ts",{"_index":591,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.actions.ts:5",{"_index":597,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.state.ts",{"_index":293,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/contact/contact.state.ts:16",{"_index":304,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/download/builtin",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts",{"_index":145,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts:11",{"_index":547,"title":{},"body":{"classes/RegisterFormat.html":{}}}],["src/lib/download/download.action.ts:24",{"_index":531,"title":{},"body":{"classes/Load-2.html":{}}}],["src/lib/download/download.action.ts:37",{"_index":151,"title":{},"body":{"classes/AddEntry.html":{}}}],["src/lib/download/download.action.ts:52",{"_index":315,"title":{},"body":{"classes/Download.html":{}}}],["src/lib/download/download.model.ts",{"_index":779,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.selectors.ts",{"_index":317,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.selectors.ts:15",{"_index":323,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.state.ts",{"_index":330,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:113",{"_index":349,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:40",{"_index":356,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:50",{"_index":362,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:65",{"_index":353,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:86",{"_index":341,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:99",{"_index":345,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/illustrator/illustrator.actions.ts",{"_index":272,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-3.html":{},"classes/Reset-2.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"miscellaneous/variables.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:10",{"_index":533,"title":{},"body":{"classes/Load-3.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:20",{"_index":610,"title":{},"body":{"classes/SetHover.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:30",{"_index":608,"title":{},"body":{"classes/SetClicked.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts",{"_index":505,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:13",{"_index":516,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:21",{"_index":514,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:29",{"_index":512,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:37",{"_index":510,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.state.ts",{"_index":484,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/illustrator/illustrator.state.ts:46",{"_index":521,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:59",{"_index":526,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:67",{"_index":524,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:75",{"_index":520,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:83",{"_index":522,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/link",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/resource",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/screen",{"_index":549,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSize.html":{}}}],["src/lib/source",{"_index":535,"title":{},"body":{"classes/Load-4.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state",{"_index":630,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state.module.ts",{"_index":446,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["src/lib/state.module.ts:47",{"_index":451,"title":{},"body":{"modules/HraStateModule.html":{}}}],["src/lib/tissue",{"_index":541,"title":{},"body":{"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":782,"title":{"index.html":{}},"body":{}}],["state",{"_index":24,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.aggregates",{"_index":237,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state.isfullscreen",{"_index":573,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["state.nodes",{"_index":714,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["state.size",{"_index":574,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["state.summaries",{"_index":238,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state_logger_provider",{"_index":699,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["stateanalyticspluginservice",{"_index":464,"title":{"injectables/StateAnalyticsPluginService.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["statecontext",{"_index":25,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["states",{"_index":104,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{}}}],["static",{"_index":117,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["store",{"_index":289,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["stores",{"_index":245,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["storing",{"_index":576,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["string",{"_index":218,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":214,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["submitted",{"_index":594,"title":{},"body":{"classes/SendMessage.html":{}}}],["submitting",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summaries",{"_index":187,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summaries(state",{"_index":231,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summaries.map(computeaggregate",{"_index":263,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary",{"_index":32,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"miscellaneous/functions.html":{}}}],["summary.actions",{"_index":255,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.actions.ts",{"_index":286,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["summary.actions.ts:8",{"_index":529,"title":{},"body":{"classes/Load-1.html":{}}}],["summary.helpers",{"_index":257,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.helpers.ts",{"_index":736,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary.model",{"_index":233,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summary.model.ts",{"_index":184,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summary.selectors.ts",{"_index":227,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:10",{"_index":230,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:16",{"_index":232,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state",{"_index":235,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state.ts",{"_index":239,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:27",{"_index":246,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:38",{"_index":244,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:48",{"_index":250,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary/cell",{"_index":183,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summing",{"_index":773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["super",{"_index":167,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["svg",{"_index":333,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["svg_format",{"_index":368,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":389,"title":{},"body":{"injectables/DownloadState.html":{}}}],["switchmap",{"_index":254,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["takes",{"_index":746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tap",{"_index":28,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["tap((items",{"_index":382,"title":{},"body":{"injectables/DownloadState.html":{}}}],["tap((result",{"_index":499,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["tap((summaries",{"_index":262,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["test",{"_index":789,"title":{},"body":{"index.html":{}}}],["tests",{"_index":787,"title":{},"body":{"index.html":{}}}],["text",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.contact.sendmessage(message",{"_index":313,"title":{},"body":{"injectables/ContactState.html":{}}}],["this.dataservice.getcellsummaries(iri).pipe",{"_index":261,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.dataservice.getdatafilereferences(iri).pipe",{"_index":381,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.dataservice.getillustrationmapping(iri",{"_index":496,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getillustrationurl(iri",{"_index":495,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getsourcereferences(iri).pipe(tap(setstate",{"_index":629,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["this.dataservice.gettissuelibrary().pipe(tap((data",{"_index":724,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["this.downloaddata(data",{"_index":396,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloaddata(new",{"_index":397,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloadremotedata(entry.url).pipe(tap((data",{"_index":395,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.ga.event(type",{"_index":688,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.guessfilename(ctx",{"_index":393,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.http.get(url",{"_index":441,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.logaction(action",{"_index":677,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.loggabletypes.has(type",{"_index":684,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.serialize",{"_index":687,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["throw",{"_index":400,"title":{},"body":{"injectables/DownloadState.html":{}}}],["tissedata",{"_index":710,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissue",{"_index":468,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrary",{"_index":545,"title":{},"body":{"classes/Load-5.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarycontext",{"_index":718,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarymodel",{"_index":705,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryselectors",{"_index":700,"title":{"classes/TissueLibrarySelectors.html":{}},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissuelibraryservice",{"_index":722,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["tissuelibrarystate",{"_index":467,"title":{"injectables/TissueLibraryState.html":{}},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["tissues",{"_index":703,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissues(state",{"_index":704,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["title",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["together",{"_index":494,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["toggle",{"_index":605,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["token",{"_index":474,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tooltip",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transform((id",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformed",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigerred",{"_index":680,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["true",{"_index":70,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":213,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":215,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":800,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":695,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["types",{"_index":650,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["types.ts",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/cdk/state",{"_index":49,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Load-5.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SetSize.html":{}}}],["ui/services",{"_index":22,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/SetClicked.html":{},"classes/SetHover.html":{},"classes/SetIllustrationUrl.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["uncompleted",{"_index":249,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["undefined",{"_index":103,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["union",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":786,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":639,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["up",{"_index":774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update",{"_index":600,"title":{},"body":{"classes/Set.html":{},"classes/SetSize.html":{}}}],["updates",{"_index":581,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["url",{"_index":65,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Reset.html":{},"classes/SetIllustrationUrl.html":{},"miscellaneous/variables.html":{}}}],["url(undefined",{"_index":515,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["url(url",{"_index":410,"title":{},"body":{"injectables/DownloadState.html":{}}}],["used",{"_index":331,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":479,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/HraStateModuleOptions.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":336,"title":{},"body":{"injectables/DownloadState.html":{},"classes/SendMessage.html":{}}}],["uses",{"_index":307,"title":{},"body":{"injectables/ContactState.html":{}}}],["using",{"_index":299,"title":{},"body":{"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["value",{"_index":569,"title":{},"body":{"classes/ScreenModeSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.every(isprimitive",{"_index":697,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["variable",{"_index":311,"title":{},"body":{"injectables/ContactState.html":{}}}],["variables",{"_index":820,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":798,"title":{},"body":{"properties.html":{}}}],["visibility",{"_index":560,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["void",{"_index":67,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["web",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wheather",{"_index":557,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["whether",{"_index":553,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"classes/SetSize.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["window.url.createobjecturl(blob",{"_index":425,"title":{},"body":{"injectables/DownloadState.html":{}}}],["window.url.revokeobjecturl(url",{"_index":433,"title":{},"body":{"injectables/DownloadState.html":{}}}],["without",{"_index":402,"title":{},"body":{"injectables/DownloadState.html":{}}}],["z",{"_index":194,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.discriminatedunion('type",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":200,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["z.literal('data",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal('url",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().nonnegative",{"_index":211,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.number().optional()]).rest(aggregate_cell.optional",{"_index":222,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":210,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.record(download_format_id",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":223,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":224,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.tuple([z.string",{"_index":221,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":195,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":794,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActiveFtuModel.html":{"url":"interfaces/ActiveFtuModel.html","title":"interface - ActiveFtuModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveFtuModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for ActiveFtuModel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            iri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iri:     Iri\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Iri\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Iri for the current Ftu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset, SetIllustrationUrl } from './active-ftu.actions';\nimport { DownloadActions } from '../download';\nimport { LinkRegistryActions, LinkType } from '@hra-ui/cdk/state';\nimport { Illustration } from '../link-ids';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new DownloadActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n        new SetIllustrationUrl(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * This Action computes the url and dispatches the LinkRegistry Action to add\n   * the link to the registry for navigation\n   */\n  @Action(SetIllustrationUrl)\n  setIllustrationUrl({ dispatch }: Context, { iri }: SetIllustrationUrl): Observable | void {\n    const BASE_URL = 'https://hubmapconsortium.github.io/ccf-releases/v1.4/docs/2d-ftu/';\n    const [name] = iri.split('/').slice(-1);\n    const url = `${BASE_URL}2d-ftu-${name}.html`;\n    return dispatch(new LinkRegistryActions.Add(Illustration, { type: LinkType.External, url }));\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to reset the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([new CellSummaryActions.Reset(), new IllustratorActions.Reset(), new SourceRefsActions.Reset()]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActiveFtuSelectors.html":{"url":"classes/ActiveFtuSelectors.html","title":"class - ActiveFtuSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActiveFtuSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for ActiveftuState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                iri\n                            \n                            \n                                    Static\n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        iri\n                        \n                    \n                \n            \n            \n                \n                    \n                    iri(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:15\n                \n            \n\n\n            \n                \n                    gets the iri from the ActiveFtuModel\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Iri | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:9\n                \n            \n\n\n            \n                \n                    checks if the Iri is set\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { ActiveFtuModel, ActiveFtuState } from './active-ftu.state';\n\n/** selectors for ActiveftuState */\nexport class ActiveFtuSelectors {\n  /** checks if the Iri is set */\n  @Selector([ActiveFtuState])\n  static isActive({ iri }: ActiveFtuModel): boolean {\n    return iri !== undefined;\n  }\n\n  /** gets the iri from the ActiveFtuModel */\n  @Selector([ActiveFtuState])\n  static iri({ iri }: ActiveFtuModel): Iri | undefined {\n    return iri;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActiveFtuState.html":{"url":"injectables/ActiveFtuState.html","title":"injectable - ActiveFtuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActiveFtuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle active FTU selection\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                            \n                                setIllustrationUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(['Clear', 'Reset'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:67\n                \n            \n\n\n            \n                \n                    Action to clear the iri selections\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:39\n                \n            \n\n\n            \n                \n                    loads the Cell summary, Illustrator and Source Refs\nwith the current iri\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        load An observable of void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:76\n                \n            \n\n\n            \n                \n                    Action to reset the states for\nCell summary, Illustrator and Source Refs\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIllustrationUrl\n                        \n                    \n                \n            \n            \n                \nsetIllustrationUrl(undefined: Context, undefined: SetIllustrationUrl)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetIllustrationUrl)\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:56\n                \n            \n\n\n            \n                \n                    This Action computes the url and dispatches the LinkRegistry Action to add\nthe link to the registry for navigation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetIllustrationUrl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset, SetIllustrationUrl } from './active-ftu.actions';\nimport { DownloadActions } from '../download';\nimport { LinkRegistryActions, LinkType } from '@hra-ui/cdk/state';\nimport { Illustration } from '../link-ids';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new DownloadActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n        new SetIllustrationUrl(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * This Action computes the url and dispatches the LinkRegistry Action to add\n   * the link to the registry for navigation\n   */\n  @Action(SetIllustrationUrl)\n  setIllustrationUrl({ dispatch }: Context, { iri }: SetIllustrationUrl): Observable | void {\n    const BASE_URL = 'https://hubmapconsortium.github.io/ccf-releases/v1.4/docs/2d-ftu/';\n    const [name] = iri.split('/').slice(-1);\n    const url = `${BASE_URL}2d-ftu-${name}.html`;\n    return dispatch(new LinkRegistryActions.Add(Illustration, { type: LinkType.External, url }));\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to reset the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([new CellSummaryActions.Reset(), new IllustratorActions.Reset(), new SourceRefsActions.Reset()]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddEntry.html":{"url":"classes/AddEntry.html","title":"class - AddEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Add entry into download state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: DownloadFormatId, entry: DownloadEntry)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor for Addd Entry\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        DownloadEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CellSummaryModel.html":{"url":"interfaces/CellSummaryModel.html","title":"interface - CellSummaryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CellSummaryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.model.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface of the Cell summary model\nhaving the summaries and aggregrates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aggregates\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aggregates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggregates:         CellSummaryAggregate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CellSummaryAggregate[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of aggregates of the Cell Summary\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:     CellSummary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CellSummary[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of summaries of the Cell Summary\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CellSummary, FtuDataSchemas } from '@hra-ui/services';\nimport { StateContext } from '@ngxs/store';\nimport { z } from 'zod';\n\n/** Type representing a single AGGREGATE_ROW */\nexport type CellSummaryAggregateRow = z.infer;\n\n/** Type representing AGGREGATE having label, columns and rows */\nexport type CellSummaryAggregate = z.infer;\n\n/**\n * An interface of the Cell summary model\n * having the summaries and aggregrates\n */\nexport interface CellSummaryModel {\n  /** Array of summaries of the Cell Summary */\n  summaries: CellSummary[];\n  /** Array of aggregates of the Cell Summary */\n  aggregates: CellSummaryAggregate[];\n}\n\nexport type Context = StateContext;\n\n/**\n * The AGGREGATE_CELL is an object that contains the color, size and\n * the data\n */\nconst AGGREGATE_CELL = z.object({\n  color: z.number().nonnegative(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n});\n\n/**\n * The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\n * a required string followed by an optional number\n */\nconst AGGREGATE_ROW = z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional());\n\n/**\n * The AGGREGATE is an object that contains the label, columns\n * and rows */\nconst AGGREGATE = z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellSummarySelectors.html":{"url":"classes/CellSummarySelectors.html","title":"class - CellSummarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellSummarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for the CellSummary state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                aggregates\n                            \n                            \n                                    Static\n                                summaries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        aggregates\n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregates(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:10\n                \n            \n\n\n            \n                \n                    get the aggregate data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        summaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    summaries(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:16\n                \n            \n\n\n            \n                \n                    get the summaries data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CellSummary[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { CellSummary } from '@hra-ui/services';\nimport { CellSummaryModel, CellSummaryAggregate } from './cell-summary.model';\nimport { CellSummaryState } from './cell-summary.state';\n\n/** selectors for the CellSummary state */\nexport class CellSummarySelectors {\n  /** get the aggregate data from the state */\n  @Selector([CellSummaryState])\n  static aggregates(state: CellSummaryModel): CellSummaryAggregate[] {\n    return state.aggregates;\n  }\n\n  /** get the summaries data from the state */\n  @Selector([CellSummaryState])\n  static summaries(state: CellSummaryModel): CellSummary[] {\n    return state.summaries;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CellSummaryState.html":{"url":"injectables/CellSummaryState.html","title":"injectable - CellSummaryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CellSummaryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling cell summary data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeAggregates\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        computeAggregates\n                        \n                    \n                \n            \n            \n                \ncomputeAggregates(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ComputeAggregates)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:38\n                \n            \n\n\n            \n                \n                    computes aggregate data and stores in the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the cell summary data and aggregrated of the current Iri into\nthe state and cancels uncompleted action if any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:48\n                \n            \n\n\n            \n                \n                    Resets the summaries and aggregates for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { ComputeAggregates, Load, Reset } from './cell-summary.actions';\nimport { computeAggregate } from './cell-summary.helpers';\nimport { CellSummaryModel, Context } from './cell-summary.model';\n\n/** State handling cell summary data */\n@State({\n  name: 'cellSummary',\n  defaults: {\n    summaries: [],\n    aggregates: [],\n  },\n})\n@Injectable()\nexport class CellSummaryState {\n  /** Data service to load the FTU data */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the cell summary data and aggregrated of the current Iri into\n   * the state and cancels uncompleted action if any\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState, dispatch }: Context, { iri }: Load): Observable {\n    return this.dataService.getCellSummaries(iri).pipe(\n      tap((summaries) => patchState({ summaries, aggregates: [] })),\n      switchMap(() => dispatch(new ComputeAggregates()))\n    );\n  }\n\n  /**\n   * computes aggregate data and stores in the current state\n   */\n  @Action(ComputeAggregates)\n  computeAggregates({ getState, patchState }: Context): void {\n    const { summaries } = getState();\n    const aggregates = summaries.map(computeAggregate);\n    patchState({ aggregates });\n  }\n\n  /**\n   * Resets the summaries and aggregates for the current state\n   */\n  @Action(Reset)\n  reset({ patchState }: Context): void {\n    patchState({ summaries: [], aggregates: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clear.html":{"url":"classes/Clear.html","title":"class - Clear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the Iri\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearEntries.html":{"url":"classes/ClearEntries.html","title":"class - ClearEntries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearEntries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Clear all entries from download state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelection.html":{"url":"classes/ClearSelection.html","title":"class - ClearSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the selection for the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComputeAggregates.html":{"url":"classes/ComputeAggregates.html","title":"class - ComputeAggregates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComputeAggregates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Compute aggregate of the given data and store to state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactState.html":{"url":"injectables/ContactState.html","title":"injectable - ContactState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact'\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(_ctx: StateContext, undefined: SendMessage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SendMessage)\n                \n            \n\n            \n                \n                    Defined in src/lib/contact/contact.state.ts:16\n                \n            \n\n\n            \n                \n                    An action method for sending a message. It uses SendMessage action class to send messages.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SendMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { ContactService } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SendMessage } from './contact.actions';\n\n/** A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact' */\n@State({ name: 'contact' })\n@Injectable()\nexport class ContactState {\n  /** A variable to inject the ContactService */\n  private readonly contact = inject(ContactService);\n\n  /** An action method for sending a message. It uses SendMessage action class to send messages. */\n  @Action(SendMessage)\n  sendMessage(_ctx: StateContext, { message }: SendMessage): Observable | void {\n    return this.contact.sendMessage(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Download.html":{"url":"classes/Download.html","title":"class - Download","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Download\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Download file Action\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormatId)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:52\n                            \n                        \n\n                \n                    \n                            Creates an instance of download.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DownloadSelectors.html":{"url":"classes/DownloadSelectors.html","title":"class - DownloadSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Available format selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                formats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        formats\n                        \n                    \n                \n            \n            \n                \n                    \n                    formats(state: DownloadModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['DownloadState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.selectors.ts:15\n                \n            \n\n\n            \n                \n                    Selectors available format for download selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                DownloadModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormat[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { DownloadFormat, DownloadModel } from './download.model';\nimport { DownloadState } from './download.state';\n\n/**\n * Available format selectors\n */\nexport class DownloadSelectors {\n  /**\n   * Selectors available format for download selectors\n   * @param state\n   * @returns\n   */\n  @Selector([DownloadState])\n  static formats(state: DownloadModel): DownloadFormat[] {\n    const { formats, entries } = state;\n    const hasData = (format: DownloadFormat | undefined): format is DownloadFormat =>\n      !!(format && format.id in entries);\n    return Object.values(formats).filter(hasData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DownloadState.html":{"url":"injectables/DownloadState.html","title":"injectable - DownloadState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DownloadState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Download State Model used to convert\nfile from SVG file content to different\nformat and download to user.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEntry\n                            \n                            \n                                clearEntries\n                            \n                            \n                                download\n                            \n                            \n                                load\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                registerFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEntry\n                        \n                    \n                \n            \n            \n                \naddEntry(ctx: DownloadContext, undefined: AddEntry)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddEntry)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:86\n                \n            \n\n\n            \n                \n                    Add entry into download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                AddEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearEntries\n                        \n                    \n                \n            \n            \n                \nclearEntries(ctx: DownloadContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearEntries)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:99\n                \n            \n\n\n            \n                \n                    Clear entires from download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        download\n                        \n                    \n                \n            \n            \n                \ndownload(ctx: DownloadContext, undefined: Download)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Download)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:113\n                \n            \n\n\n            \n                \n                    Actions download file in specified format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Download\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(ctx: DownloadContext, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:65\n                \n            \n\n\n            \n                \n                    Action to add the Organs IRI from the data service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Context\n\n                                    \n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: DownloadContext)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/download/download.state.ts:40\n                \n            \n\n\n            \n                \n                    Ngxs on init and registry default format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFormat\n                        \n                    \n                \n            \n            \n                \nregisterFormat(ctx: DownloadContext, undefined: RegisterFormat)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RegisterFormat)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:50\n                \n            \n\n\n            \n                \n                    Actions register format in Download State\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                RegisterFormat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, NgxsOnInit, State } from '@ngxs/store';\nimport produce from 'immer';\nimport { Observable, tap } from 'rxjs';\n\nimport { FtuDataService, Iri } from '@hra-ui/services';\nimport { PNG_FORMAT, SVG_FORMAT } from './builtin-formats';\nimport { AddEntry, ClearEntries, Download, Load, RegisterFormat } from './download.action';\nimport { createDownloadFormatId, DownloadContext, DownloadFormatId, DownloadModel } from './download.model';\n\n/**\n * Download State Model used to convert\n * file from SVG file content to different\n * format and download to user.\n */\n@State({\n  name: 'download',\n  defaults: {\n    formats: {},\n    entries: {},\n  },\n})\n@Injectable()\nexport class DownloadState implements NgxsOnInit {\n  /**\n   * Http object inject for download state\n   */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Data service of download state\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Ngxs on init and registry default format\n   * @param ctx\n   */\n  ngxsOnInit(ctx: DownloadContext): void {\n    ctx.dispatch([new RegisterFormat(SVG_FORMAT), new RegisterFormat(PNG_FORMAT)]);\n  }\n\n  /**\n   * Actions register format in Download State\n   * @param ctx\n   * @param { format }\n   */\n  @Action(RegisterFormat)\n  registerFormat(ctx: DownloadContext, { format }: RegisterFormat): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.formats[format.id] = format;\n      })\n    );\n  }\n\n  /**\n   * Action to add the Organs IRI from the data service\n   * @param ctx Context\n   * @param iri Organ Data\n   * @returns\n   */\n  @Action(Load)\n  load(ctx: DownloadContext, { iri }: Load): Observable {\n    return this.dataService.getDataFileReferences(iri).pipe(\n      tap((items) =>\n        ctx.setState(\n          produce((draft) => {\n            draft.entries = {};\n            for (const { format, url } of items) {\n              draft.entries[createDownloadFormatId(format)] = { type: 'url', url };\n            }\n          })\n        )\n      )\n    );\n  }\n\n  /**\n   * Add entry into download state\n   * @param ctx\n   * @param { id, entry }\n   */\n  @Action(AddEntry)\n  addEntry(ctx: DownloadContext, { id, entry }: AddEntry): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries[id] = entry;\n      })\n    );\n  }\n\n  /**\n   * Clear entires from download state\n   * @param ctx\n   */\n  @Action(ClearEntries)\n  clearEntries(ctx: DownloadContext): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries = {};\n      })\n    );\n  }\n\n  /**\n   * Actions download file in specified format\n   * @param ctx\n   * @param action\n   */\n  @Action(Download)\n  download(ctx: DownloadContext, { format }: Download): Observable | void {\n    const { entries } = ctx.getState();\n    const entry = entries[format];\n    switch (entry?.type) {\n      case 'url': {\n        const filename = this.guessFilename(ctx, format, entry.url);\n        return this.downloadRemoteData(entry.url).pipe(tap((data) => this.downloadData(data, filename)));\n      }\n\n      case 'data': {\n        const filename = this.guessFilename(ctx, format, '');\n        this.downloadData(new Blob([entry.data]), filename);\n        break;\n      }\n\n      default:\n        throw new Error('Cannot download file without data');\n    }\n  }\n\n  /**\n   * Guess filename\n   * @param ctx\n   * @param id\n   * @param url\n   * @returns filename\n   */\n  private guessFilename(ctx: DownloadContext, id: DownloadFormatId, url: string): string {\n    const { formats } = ctx.getState();\n    const { extension = '' } = formats[id] ?? {};\n    const fakeBase = 'https://base.com';\n    const path = new URL(url, fakeBase).pathname;\n    const segments = path.split('/').filter((seg) => seg !== '');\n    const name = segments.length > 0 ? segments[segments.length - 1] : 'download';\n    const guess = name.includes('.') ? name : `${name}${extension}`;\n\n    return guess;\n  }\n\n  /**\n   * Download converted formatted file to browser\n   * @param blob\n   * @param fileName\n   */\n  private downloadData(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n    anchor.download = filename;\n    anchor.href = url;\n    anchor.click();\n    anchor.remove();\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Downloads and save -  method is used to direct fetch file\n   * if available on url without conversion\n   * @param fileUrl\n   * @param fileName\n   */\n  private downloadRemoteData(url: string): Observable {\n    return this.http.get(url, { responseType: 'blob' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraStateModule.html":{"url":"modules/HraStateModule.html","title":"module - HraStateModule","body":"\n                   \n\n\n\n\n    Modules\n    HraStateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/state.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Provides all states\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: HraStateModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state.module.ts:47\n                \n            \n\n\n            \n                \n                    Static method for configuring the module\nReturns a configuration object with the module and the providers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HraStateModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, importProvidersFrom } from '@angular/core';\nimport { NGXS_PLUGINS, NgxsModule } from '@ngxs/store';\nimport { ActiveFtuState } from './active-ftu';\nimport { CellSummaryState } from './cell-summary';\nimport { ContactState } from './contact';\nimport { DownloadState } from './download';\nimport { IllustratorState } from './illustrator';\nimport { ScreenModeState } from './screen-mode';\nimport { SourceRefsState } from './source-refs';\nimport { StateAnalyticsPluginService } from './state-analytics-plugin';\nimport { TissueLibraryState } from './tissue-library';\nimport { NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\n/** Interface for providing options for the hra state module */\nexport interface HraStateModuleOptions {\n  /** token string for google analytics*/\n  googleAnalyticsToken: string;\n}\n\n/** Provides all states */\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([\n      ActiveFtuState,\n      CellSummaryState,\n      ContactState,\n      DownloadState,\n      IllustratorState,\n      ScreenModeState,\n      SourceRefsState,\n      TissueLibraryState,\n    ]),\n    NgxGoogleAnalyticsModule,\n  ],\n  providers: [\n    {\n      provide: NGXS_PLUGINS,\n      useExisting: StateAnalyticsPluginService,\n      multi: true,\n    },\n  ],\n})\nexport class HraStateModule {\n  /** Static method for configuring the module\n   * Returns a configuration object with the module and the providers\n   */\n  static forRoot(options: HraStateModuleOptions): ModuleWithProviders {\n    const analyticsProviders = importProvidersFrom(NgxGoogleAnalyticsModule.forRoot(options.googleAnalyticsToken));\n    return {\n      ngModule: HraStateModule,\n      providers: [analyticsProviders],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HraStateModuleOptions.html":{"url":"interfaces/HraStateModuleOptions.html","title":"interface - HraStateModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HraStateModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for providing options for the hra state module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            googleAnalyticsToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        googleAnalyticsToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        googleAnalyticsToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    token string for google analytics\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ModuleWithProviders, NgModule, importProvidersFrom } from '@angular/core';\nimport { NGXS_PLUGINS, NgxsModule } from '@ngxs/store';\nimport { ActiveFtuState } from './active-ftu';\nimport { CellSummaryState } from './cell-summary';\nimport { ContactState } from './contact';\nimport { DownloadState } from './download';\nimport { IllustratorState } from './illustrator';\nimport { ScreenModeState } from './screen-mode';\nimport { SourceRefsState } from './source-refs';\nimport { StateAnalyticsPluginService } from './state-analytics-plugin';\nimport { TissueLibraryState } from './tissue-library';\nimport { NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\n/** Interface for providing options for the hra state module */\nexport interface HraStateModuleOptions {\n  /** token string for google analytics*/\n  googleAnalyticsToken: string;\n}\n\n/** Provides all states */\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([\n      ActiveFtuState,\n      CellSummaryState,\n      ContactState,\n      DownloadState,\n      IllustratorState,\n      ScreenModeState,\n      SourceRefsState,\n      TissueLibraryState,\n    ]),\n    NgxGoogleAnalyticsModule,\n  ],\n  providers: [\n    {\n      provide: NGXS_PLUGINS,\n      useExisting: StateAnalyticsPluginService,\n      multi: true,\n    },\n  ],\n})\nexport class HraStateModule {\n  /** Static method for configuring the module\n   * Returns a configuration object with the module and the providers\n   */\n  static forRoot(options: HraStateModuleOptions): ModuleWithProviders {\n    const analyticsProviders = importProvidersFrom(NgxGoogleAnalyticsModule.forRoot(options.googleAnalyticsToken));\n    return {\n      ngModule: HraStateModule,\n      providers: [analyticsProviders],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IllustratorModel.html":{"url":"interfaces/IllustratorModel.html","title":"interface - IllustratorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IllustratorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the Illustrator Model that contains the url, selected\nand mapping fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mapping\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedOnClick\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectedOnHover\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapping:         IllustrationMappingItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of Illustrartor Items\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOnClick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOnClick:         IllustrationMappingItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected Illustrator Item on click\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOnHover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOnHover:         IllustrationMappingItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected Illustrator Item on hover\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Url\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Illustration URL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\nimport { ClearSelection, Load, Reset, SetClicked, SetHover } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url;\n  /** Selected Illustrator Item on hover */\n  selectedOnHover?: IllustrationMappingItem;\n  /** Selected Illustrator Item on click */\n  selectedOnClick?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(\n      tap((result) => patchState({ ...result, selectedOnHover: undefined, selectedOnClick: undefined }))\n    );\n  }\n\n  /**\n   * Sets the current selection to the state for SetHover\n   */\n  @Action(SetHover)\n  SetHover({ patchState }: Context, { selectedOnHover }: SetHover): void {\n    patchState({ selectedOnHover });\n  }\n\n  /**\n   * Sets the current selection to the state for SetClicked\n   */\n  @Action(SetClicked)\n  SetClicked({ patchState }: Context, { selectedOnClick }: SetClicked): void {\n    patchState({ selectedOnClick });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selectedOnHover: undefined, selectedOnClick: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IllustratorSelectors.html":{"url":"classes/IllustratorSelectors.html","title":"class - IllustratorSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IllustratorSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for Medical Illustrators\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapping\n                            \n                            \n                                    Static\n                                selectedOnClicked\n                            \n                            \n                                    Static\n                                selectedOnHovered\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapping(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:37\n                \n            \n\n\n            \n                \n                    Returns the current mapping of the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectedOnClicked\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedOnClicked(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:29\n                \n            \n\n\n            \n                \n                    Returns the selected model of the illustrator on click\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selectedOnHovered\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedOnHovered(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:21\n                \n            \n\n\n            \n                \n                    Returns the selected model of the illustrator on hover\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:13\n                \n            \n\n\n            \n                \n                    Returns the url for the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Url | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { IllustratorModel, IllustratorState } from './illustrator.state';\n\n/**\n * Selectors for Medical Illustrators\n */\nexport class IllustratorSelectors {\n  /**\n   * Returns the url for the illustrator\n   */\n  @Selector([IllustratorState])\n  static url({ url }: IllustratorModel): Url | undefined {\n    return url;\n  }\n\n  /**\n   * Returns the selected model of the illustrator on hover\n   */\n  @Selector([IllustratorState])\n  static selectedOnHovered({ selectedOnHover }: IllustratorModel): IllustrationMappingItem | undefined {\n    return selectedOnHover;\n  }\n\n  /**\n   * Returns the selected model of the illustrator on click\n   */\n  @Selector([IllustratorState])\n  static selectedOnClicked({ selectedOnClick }: IllustratorModel): IllustrationMappingItem | undefined {\n    return selectedOnClick;\n  }\n\n  /**\n   * Returns the current mapping of the illustrator\n   */\n  @Selector([IllustratorState])\n  static mapping({ mapping }: IllustratorModel): IllustrationMappingItem[] {\n    return mapping;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IllustratorState.html":{"url":"injectables/IllustratorState.html","title":"injectable - IllustratorState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IllustratorState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling medical illustrators\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSelection\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                            \n                                SetClicked\n                            \n                            \n                                SetHover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearSelection)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:75\n                \n            \n\n\n            \n                \n                    Clears the current selection from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:46\n                \n            \n\n\n            \n                \n                    Loads the current state with the url and mapping.\nThe url and mapping are forked together using forkJoin.\nIt also cancels any uncompleted actions to the state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:83\n                \n            \n\n\n            \n                \n                    Resets the mapping for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetClicked\n                        \n                    \n                \n            \n            \n                \nSetClicked(undefined: Context, undefined: SetClicked)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetClicked)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:67\n                \n            \n\n\n            \n                \n                    Sets the current selection to the state for SetClicked\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetClicked\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetHover\n                        \n                    \n                \n            \n            \n                \nSetHover(undefined: Context, undefined: SetHover)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetHover)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:59\n                \n            \n\n\n            \n                \n                    Sets the current selection to the state for SetHover\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetHover\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\nimport { ClearSelection, Load, Reset, SetClicked, SetHover } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url;\n  /** Selected Illustrator Item on hover */\n  selectedOnHover?: IllustrationMappingItem;\n  /** Selected Illustrator Item on click */\n  selectedOnClick?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(\n      tap((result) => patchState({ ...result, selectedOnHover: undefined, selectedOnClick: undefined }))\n    );\n  }\n\n  /**\n   * Sets the current selection to the state for SetHover\n   */\n  @Action(SetHover)\n  SetHover({ patchState }: Context, { selectedOnHover }: SetHover): void {\n    patchState({ selectedOnHover });\n  }\n\n  /**\n   * Sets the current selection to the state for SetClicked\n   */\n  @Action(SetClicked)\n  SetClicked({ patchState }: Context, { selectedOnClick }: SetClicked): void {\n    patchState({ selectedOnClick });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selectedOnHover: undefined, selectedOnClick: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load.html":{"url":"classes/Load.html","title":"class - Load","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/active-ftu/active-ftu.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Creates an instance of set iri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-1.html":{"url":"classes/Load-1.html","title":"class - Load-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                loads the given Iri to the state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cell-summary/cell-summary.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-2.html":{"url":"classes/Load-2.html","title":"class - Load-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to load entries from data service\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:24\n                            \n                        \n\n                \n                    \n                            Creates a action to load from the enteries from the data service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Organ Iri for which the entries are loaded\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-3.html":{"url":"classes/Load-3.html","title":"class - Load-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-4.html":{"url":"classes/Load-4.html","title":"class - Load-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to load the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-refs/source-refs.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-5.html":{"url":"classes/Load-5.html","title":"class - Load-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                action of loading tissue data into the TissueLibrary state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** action of loading tissue data into the TissueLibrary state */\nexport class Load extends Action('[TissueLibrary] Load Tissue Data') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterFormat.html":{"url":"classes/RegisterFormat.html","title":"class - RegisterFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Register format into state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormat)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:11\n                            \n                        \n\n                \n                    \n                            Creates an instance of register format.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormat\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\nimport { Iri } from '@hra-ui/services';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Action to load entries from data service\n */\nexport class Load extends Action('Load') {\n  /**\n   * Creates a action to load from the enteries from the data service\n   * @param iri Organ Iri for which the entries are loaded\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-1.html":{"url":"classes/Reset-1.html","title":"class - Reset-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-2.html":{"url":"classes/Reset-2.html","title":"class - Reset-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-3.html":{"url":"classes/Reset-3.html","title":"class - Reset-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScreenModeModel.html":{"url":"interfaces/ScreenModeModel.html","title":"interface - ScreenModeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScreenModeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isFullScreen\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isFullScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFullScreen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether in fullscreen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     \"small\" | \"large\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"small\" | \"large\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wheather footer should be in small screen mode: Logo visibility\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ScreenModeModel {\n  /** Whether in fullscreen */\n  isFullScreen: boolean;\n\n  /** Wheather footer should be in small screen mode: Logo visibility */\n  size: 'small' | 'large';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScreenModeSelectors.html":{"url":"classes/ScreenModeSelectors.html","title":"class - ScreenModeSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScreenModeSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isFullScreen\n                            \n                            \n                                    Static\n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFullScreen\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFullScreen(state: ScreenModeModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ScreenModeState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.selectors.ts:15\n                \n            \n\n\n            \n                \n                    Selectors screen mode selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ScreenModeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if full screen\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        size\n                        \n                    \n                \n            \n            \n                \n                    \n                    size(state: ScreenModeModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ScreenModeState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.selectors.ts:24\n                \n            \n\n\n            \n                \n                    Selectors screen mode selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ScreenModeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"small\" | \"large\"\n\n                    \n                    \n                        size of value 'small' | 'large'\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { ScreenModeModel } from './screen-mode.model';\nimport { ScreenModeState } from './screen-mode.state';\n\n/**\n * Screen mode selectors\n */\nexport class ScreenModeSelectors {\n  /**\n   * Selectors screen mode selectors\n   * @param state\n   * @returns true if full screen\n   */\n  @Selector([ScreenModeState])\n  static isFullScreen(state: ScreenModeModel): boolean {\n    return state.isFullScreen;\n  }\n  /**\n   * Selectors screen mode selectors\n   * @param state\n   * @returns size of value 'small' | 'large'\n   */\n  @Selector([ScreenModeState])\n  static size(state: ScreenModeModel): 'small' | 'large' {\n    return state.size;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenModeState.html":{"url":"injectables/ScreenModeState.html","title":"injectable - ScreenModeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenModeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State storing the screen mode\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                SetSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(undefined: StateContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.state.ts:23\n                \n            \n\n\n            \n                \n                    Updates the screen mode\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SetSize\n                        \n                    \n                \n            \n            \n                \nSetSize(undefined: StateContext, undefined: SetSize)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetSize)\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.state.ts:36\n                \n            \n\n\n            \n                \n                    Actions screen mode state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetSize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport produce from 'immer';\nimport { Set, SetSize } from './screen-mode.actions';\nimport { ScreenModeModel } from './screen-mode.model';\n\n/** State storing the screen mode */\n@State({\n  name: 'screenmode',\n  defaults: {\n    isFullScreen: false,\n    size: 'large',\n  },\n})\n@Injectable()\nexport class ScreenModeState {\n  /**\n   * Updates the screen mode\n   * @param ctx State context\n   * @param action Action with new mode\n   */\n  @Action(Set)\n  set({ setState }: StateContext, { isFullScreen }: Set): void {\n    setState(\n      produce((draft: ScreenModeModel) => {\n        draft.isFullScreen = isFullScreen;\n      })\n    );\n  }\n  /**\n   * Actions screen mode state\n   * @param { setState } State Context\n   * @param { size } Action regarding screen\n   */\n  @Action(SetSize)\n  SetSize({ setState }: StateContext, { size }: SetSize): void {\n    setState(\n      produce((draft: ScreenModeModel) => {\n        draft.size = size;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessage.html":{"url":"classes/SendMessage.html","title":"class - SendMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                A class which sends individual messages submitted by user.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: ContactMessage)\n                    \n                \n                        \n                            \n                                Defined in src/lib/contact/contact.actions.ts:5\n                            \n                        \n\n                \n                    \n                            A constructor which initializes the message of type ContactMessage interface.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    ContactMessage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { ContactMessage } from '@hra-ui/services';\n\n/** A class which sends individual messages submitted by user. */\nexport class SendMessage extends Action('[Contact] Send Message') {\n  /** A constructor which initializes the message of type ContactMessage interface. */\n  constructor(readonly message: ContactMessage) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Update the screen mode\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(isFullScreen: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/screen-mode/screen-mode.actions.ts:4\n                            \n                        \n\n                \n                    \n                            Creates an instance of Set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isFullScreen\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the mode is fullscreen\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** Update the screen mode */\nexport class Set extends Action('[Screenmode] Set Screenmode') {\n  /**\n   * Creates an instance of Set\n   * @param isFullScreen Whether the mode is fullscreen\n   */\n  constructor(readonly isFullScreen: boolean) {\n    super();\n  }\n}\n\n/** Update the screen mode */\nexport class SetSize extends Action('[Screenmode] Set Size') {\n  /**\n   * Creates an instance of Set\n   * @param size Whether the mode is small/large to toggle the footer behaviour\n   */\n  constructor(readonly size: 'small' | 'large') {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetClicked.html":{"url":"classes/SetClicked.html","title":"class - SetClicked","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetClicked\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the selection for the Item in the current state on SetClicked\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(selectedOnClick: IllustrationMappingItem)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:30\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedOnClick\n                                                  \n                                                        \n                                                                        IllustrationMappingItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetHover.html":{"url":"classes/SetHover.html","title":"class - SetHover","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetHover\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the selection for the Item in the current state on SetHover\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(selectedOnHover: IllustrationMappingItem)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedOnHover\n                                                  \n                                                        \n                                                                        IllustrationMappingItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetHover\n */\nexport class SetHover extends Action('Set Selection on Hover') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnHover: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state on SetClicked\n */\nexport class SetClicked extends Action('Set Selection on Clicked') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selectedOnClick: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetIllustrationUrl.html":{"url":"classes/SetIllustrationUrl.html","title":"class - SetIllustrationUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetIllustrationUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to set the illustration url of the active FTU\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/active-ftu/active-ftu.actions.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of set iri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Action to set the illustration url of the active FTU */\nexport class SetIllustrationUrl extends Action('Set Illustration Url') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSize.html":{"url":"classes/SetSize.html","title":"class - SetSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Update the screen mode\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(size: \"small\" | \"large\")\n                    \n                \n                        \n                            \n                                Defined in src/lib/screen-mode/screen-mode.actions.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of Set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                    \"small\" | \"large\"\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the mode is small/large to toggle the footer behaviour\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** Update the screen mode */\nexport class Set extends Action('[Screenmode] Set Screenmode') {\n  /**\n   * Creates an instance of Set\n   * @param isFullScreen Whether the mode is fullscreen\n   */\n  constructor(readonly isFullScreen: boolean) {\n    super();\n  }\n}\n\n/** Update the screen mode */\nexport class SetSize extends Action('[Screenmode] Set Size') {\n  /**\n   * Creates an instance of Set\n   * @param size Whether the mode is small/large to toggle the footer behaviour\n   */\n  constructor(readonly size: 'small' | 'large') {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceRefsSelectors.html":{"url":"classes/SourceRefsSelectors.html","title":"class - SourceRefsSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceRefsSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for SourceRefState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sourceReferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    sourceReferences(refs: SourceReference[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['SourceRefsState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.selectors.ts:9\n                \n            \n\n\n            \n                \n                    returns the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refs\n                                    \n                                            SourceReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SourceReference[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceReference } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { SourceRefsState } from './source-refs.state';\n\n/** Selectors for SourceRefState */\nexport class SourceRefsSelectors {\n  /** returns the source references */\n  @Selector([SourceRefsState])\n  static sourceReferences(refs: SourceReference[]): SourceReference[] {\n    return refs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SourceRefsState.html":{"url":"injectables/SourceRefsState.html","title":"injectable - SourceRefsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SourceRefsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle the source references\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the current state with the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:35\n                \n            \n\n\n            \n                \n                    Resets the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, SourceReference } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load, Reset } from './source-refs.actions';\n\ntype Context = StateContext;\n\n/**\n * State to handle the source references\n */\n@State({\n  name: 'sourceReferences',\n  defaults: [],\n})\n@Injectable()\nexport class SourceRefsState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the source references\n   */\n  @Action(Load)\n  load({ setState }: Context, { iri }: Load): Observable {\n    return this.dataService.getSourceReferences(iri).pipe(tap(setState));\n  }\n\n  /**\n   * Resets the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState([]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateAnalyticsPluginService.html":{"url":"injectables/StateAnalyticsPluginService.html","title":"injectable - StateAnalyticsPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateAnalyticsPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Google Analytics Plugin Injectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(state, action, next: NgxsNextPluginFn)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state-analytics-plugin/state-analytics-plugin.service.ts:51\n                \n            \n\n\n            \n                \n                    Handles logger plugin\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent state of the store with type unknown.\n\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent action being dispatched with type unknown type.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            NgxsNextPluginFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnext plugin to handle the action\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nnext plugin with the current state and action.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, InjectionToken, Provider } from '@angular/core';\nimport { getActionTypeFromInstance, NgxsNextPluginFn, NgxsPlugin, NGXS_PLUGINS } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { DEFAULT_LOGGABLE_ACTIONS } from './default-loggable-actions';\n\n/** Primitive types */\nconst PRIMITIVE_TYPES = ['bigint', 'boolean', 'number', 'string'];\n\n/**\n * Determines whether primitive is\n * @param value is string - used to check the input value from serialize funtion\n * @returns type of value - boolean/number/string/null/bigint/undefined\n */\nfunction isPrimitive(value: unknown): value is bigint | boolean | number | string | null | undefined {\n  return value == null || PRIMITIVE_TYPES.includes(typeof value);\n}\n\n/**\n * Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n */\nexport const LOGGABLE_ACTIONS = new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n});\n\n/**\n * Google Analytics Plugin Injectable\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateAnalyticsPluginService implements NgxsPlugin {\n  /**\n   * Injects the service for state analytics plugin.\n   */\n  private readonly ga = inject(GoogleAnalyticsService);\n\n  /**\n   * Plugin service for logging state analytics\n   * Setting loggable action types from LOGGABLE_ACTIONS dependency.\n   */\n  private readonly loggableTypes = new Set(inject(LOGGABLE_ACTIONS).map(getActionTypeFromInstance));\n\n  /**\n   * Handles logger plugin\n   * @param state -  Current state of the store with type unknown.\n   * @param action - Current action being dispatched with type unknown type.\n   * @param next - next plugin to handle the action\n   * @returns - next plugin with the current state and action.\n   */\n  handle(state: unknown, action: unknown, next: NgxsNextPluginFn) {\n    this.logAction(action);\n    return next(state, action);\n  }\n\n  /**\n   * Logs action trigerred to google analytics event\n   * @param action - Current action being dispatched with type unknown type.\n   * @returns void\n   */\n  private logAction(action: unknown): void {\n    const type = getActionTypeFromInstance(action);\n    if (type && this.loggableTypes.has(type)) {\n      const payload = JSON.stringify(action, this.serialize);\n      this.ga.event(type, 'action_log', payload);\n    }\n  }\n\n  /**\n   * Serializes action data\n   * @param key - key with type unknown that needs to be serialized\n   * @param value - value with type unknown that needs to be serialized\n   * @returns serialized value\n   */\n  private serialize(this: void, key: unknown, value: unknown): unknown {\n    if (key === '' && typeof value === 'object') {\n      return { ...value, type: undefined };\n    } else if (isPrimitive(value) || (Array.isArray(value) && value.every(isPrimitive))) {\n      return value;\n    }\n\n    return undefined;\n  }\n}\n\n/**\n * State Login Provider\n */\nexport const STATE_LOGGER_PROVIDER: Provider = {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TissueLibrarySelectors.html":{"url":"classes/TissueLibrarySelectors.html","title":"class - TissueLibrarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TissueLibrarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selector class for retreiving data from the TissueLibraryState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        tissues\n                        \n                    \n                \n            \n            \n                \n                    \n                    tissues(state: TissueLibraryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['TissueLibraryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Gets the tissue data from the TissueLibrary object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                TissueLibraryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current state of the TissueLibraryState.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        node data of the type of TisseData.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri, Tissue } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { TissueLibraryModel } from './tissue-library.model';\nimport { TissueLibraryState } from './tissue-library.state';\n\n/** Selector class for retreiving data from the TissueLibraryState */\nexport class TissueLibrarySelectors {\n  /**\n   * Gets the tissue data from the TissueLibrary object.\n   * @param state the current state of the TissueLibraryState.\n   * @returns node data of the type of TisseData.\n   */\n  @Selector([TissueLibraryState])\n  static tissues(state: TissueLibraryModel): Record {\n    return state.nodes as Record;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryState.html":{"url":"injectables/TissueLibraryState.html","title":"injectable - TissueLibraryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling tissue data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActive\n                        \n                    \n                \n            \n            \n                \nsetActive(ctx: TissueLibraryContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.state.ts:23\n                \n            \n\n\n            \n                \n                    Loads the tissue data into the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                TissueLibraryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The state context instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        data The tissue data to be added to the state\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load } from './tissue-library.actions';\nimport { TissueLibraryContext, TissueLibraryModel } from './tissue-library.model';\n\n/** State handling tissue data*/\n@State({\n  name: 'tissueLibrary',\n})\n@Injectable()\nexport class TissueLibraryState {\n  /** injects the TissueLibraryService into a private readonly property */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the tissue data into the current state\n   * @param ctx The state context instance\n   * @returns data The tissue data to be added to the state\n   */\n  @Action(Load)\n  setActive(ctx: TissueLibraryContext): Observable {\n    return this.dataService.getTissueLibrary().pipe(tap((data) => ctx.setState(data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            computeAggregate   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            createDownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            expandRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getColumnIndex   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getLabel   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getTotalCount   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            isPrimitive   (src/.../state-analytics-plugin.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        computeAggregate\n                        \n                    \n                \n            \n            \n                \ncomputeAggregate(summary: CellSummary)\n                \n            \n\n\n\n\n            \n                \n                    The computeAggregate function takes a summary object and performs aggregation operations on its properties\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    summary\n                                    \n                                            CellSummary\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandRow\n                        \n                    \n                \n            \n            \n                \nexpandRow(row: CellSummaryAggregateRow, length: number)\n                \n            \n\n\n\n\n            \n                \n                    This function expands the current row length with undefined if its length is\nless than the given length\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnIndex\n                        \n                    \n                \n            \n            \n                \ngetColumnIndex(indexById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the column if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    indexById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLabel\n                        \n                    \n                \n            \n            \n                \ngetLabel(items, id: string, what: string)\n                \n            \n\n\n\n\n            \n                \n                    This function retrieves the label of an item from an array based on its ID,\nand if not found, it returns a default string indicating the absence of a label for the specified item type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    what\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRow\n                        \n                    \n                \n            \n            \n                \ngetRow(rowById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the row if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregateRow\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalCount\n                        \n                    \n                \n            \n            \n                \ngetTotalCount(row: CellSummaryAggregateRow)\n                \n            \n\n\n\n\n            \n                \n                    This function calculates and returns the total count by iterating over a row array and summing\nup the count property of each object entry, while ignoring non-object entries, with an initial value of 0.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDownloadFormatId\n                        \n                    \n                \n            \n            \n                \ncreateDownloadFormatId(id: string)\n                \n            \n\n\n\n\n            \n                \n                    Creates download format id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormatId\n\n                    \n                    \n                        download format id\n\n                    \n                \n            \n        \n    \n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isPrimitive\n                        \n                    \n                \n            \n            \n                \nisPrimitive(value)\n                \n            \n\n\n\n\n            \n                \n                    Determines whether primitive is\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is string - used to check the input value from serialize funtion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :      | boolean | number | string | null | undefined\n\n                    \n                    \n                        type of value - boolean/number/string/null/bigint/undefined\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nstate\nThis library was generated with Nx.\nRunning unit tests\nRun nx test state to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraStateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    30 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellSummaryAggregate   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CellSummaryAggregateRow   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../active-ftu.state.ts)\n                        \n                        \n                            Context   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../illustrator.state.ts)\n                        \n                        \n                            Context   (src/.../source-refs.state.ts)\n                        \n                        \n                            DownloadContext   (src/.../download.model.ts)\n                        \n                        \n                            DownloadEntry   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormat   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            DownloadModel   (src/.../download.model.ts)\n                        \n                        \n                            TissueLibraryContext   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibraryModel   (src/.../tissue-library.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregate\n                \n            \n            \n                \n                    Type representing AGGREGATE having label, columns and rows\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregateRow\n                \n            \n            \n                \n                    Type representing a single AGGREGATE_ROW\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/active-ftu/active-ftu.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/illustrator/illustrator.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/source-refs/source-refs.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n    \n        \n            \n                \n                    \n                    DownloadContext\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadContext,\nwhich is a state context for the DownloadModel type\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadEntry\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadEntry,\nwhich is inferred from the type of the DOWNLOAD_ENTRY constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormat\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormat,\nwhich is inferred from the type of the DOWNLOAD_FORMAT constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormatId\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormatId,\nwhich is inferred from the type of the DOWNLOAD_FORMAT_ID constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadModel\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadModel,\nwhich is inferred from the type of the DOWNLOAD_MODEL constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    TissueLibraryContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibraryModel\n                \n            \n            \n                \n                    Type alias for the tissue data\n\n                \n            \n            \n                \n                        TissueLibrary\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            About   (src/.../link-ids.ts)\n                        \n                        \n                            Action   (src/.../active-ftu.actions.ts)\n                        \n                        \n                            Action   (src/.../cell-summary.actions.ts)\n                        \n                        \n                            Action   (src/.../download.action.ts)\n                        \n                        \n                            Action   (src/.../illustrator.actions.ts)\n                        \n                        \n                            Action   (src/.../source-refs.actions.ts)\n                        \n                        \n                            AGGREGATE   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_CELL   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_ROW   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AppTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            ContactAcknowledgement   (src/.../resource-ids.ts)\n                        \n                        \n                            DEFAULT_LOGGABLE_ACTIONS   (src/.../default-loggable-actions.ts)\n                        \n                        \n                            DOWNLOAD_ENTRY   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT_ID   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_MODEL   (src/.../download.model.ts)\n                        \n                        \n                            Embed   (src/.../link-ids.ts)\n                        \n                        \n                            ExploreFTU   (src/.../link-ids.ts)\n                        \n                        \n                            Gradient   (src/.../resource-types.ts)\n                        \n                        \n                            GradientLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            GradientLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            Illustration   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPage   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageDepthDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroReadMore   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPagePartners   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageReadMore   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LOGGABLE_ACTIONS   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Metrics   (src/.../resource-ids.ts)\n                        \n                        \n                            Metrics   (src/.../resource-types.ts)\n                        \n                        \n                            MetricsLogo   (src/.../resource-ids.ts)\n                        \n                        \n                            MetricsTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            Png   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            PNG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                        \n                            Portal   (src/.../link-ids.ts)\n                        \n                        \n                            PRIMITIVE_TYPES   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            ProductLogoUrl   (src/.../resource-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../link-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            ScreenSizeNoticeContent   (src/.../resource-ids.ts)\n                        \n                        \n                            Size   (src/.../resource-types.ts)\n                        \n                        \n                            SizeLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            SizeLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            STATE_LOGGER_PROVIDER   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Svg   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            SVG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/link-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        About\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('About')\n                    \n                \n\n            \n                \n                    About Link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Embed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Embed')\n                    \n                \n\n            \n                \n                    LinkId for Embed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExploreFTU\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ExploreFTU')\n                    \n                \n\n            \n                \n                    LinkId for Explore FTU\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Illustration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Illustration')\n                    \n                \n\n            \n                \n                    LinkId for Illustration metadata\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPage')\n                    \n                \n\n            \n                \n                    Landing page id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPageReadMore')\n                    \n                \n\n            \n                \n                    LinkId for read more in landing page content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Portal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Portal')\n                    \n                \n\n            \n                \n                    LinkId for HRA Portal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title link id\n\n                \n            \n\n        \n    \n\n    src/lib/active-ftu/active-ftu.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('ActiveFtu')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('CellSummary')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Download')\n                    \n                \n\n            \n                \n                    Action Group for Download Action\n\n                \n            \n\n        \n    \n\n    src/lib/illustrator/illustrator.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Illustrator')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/source-refs/source-refs.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('SourceRefs')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AGGREGATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE is an object that contains the label, columns\nand rows\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  color: z.number().nonnegative(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE_CELL is an object that contains the color, size and\nthe data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional())\n                    \n                \n\n            \n                \n                    The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\na required string followed by an optional number\n\n                \n            \n\n        \n    \n\n    src/lib/resource-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('AppTitle')\n                    \n                \n\n            \n                \n                    App title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ContactAcknowledgement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ContactAcknowledgement')\n                    \n                \n\n            \n                \n                    Message to display after submitting contact form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegend')\n                    \n                \n\n            \n                \n                    Gradient legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Gradient legend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthDescription')\n                    \n                \n\n            \n                \n                    Lanading Page Depth Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthImg')\n                    \n                \n\n            \n                \n                    Landing Page Depth Img id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthMoreText')\n                    \n                \n\n            \n                \n                    Landing Page Depth More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthTitle')\n                    \n                \n\n            \n                \n                    Landing Page Depth Title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroDescription')\n                    \n                \n\n            \n                \n                    Landing Page Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroImg')\n                    \n                \n\n            \n                \n                    Landing Page Intro Image id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroMoreText')\n                    \n                \n\n            \n                \n                    Landing Page More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroReadMore')\n                    \n                \n\n            \n                \n                    Landing Page Read More text (For web components)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPagePartners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroPartners')\n                    \n                \n\n            \n                \n                    Landing Page Partners id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroTitle')\n                    \n                \n\n            \n                \n                    Landing Page Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('Metrics')\n                    \n                \n\n            \n                \n                    metrics id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsLogo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsLogo')\n                    \n                \n\n            \n                \n                    Metrics Logo id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsTitle')\n                    \n                \n\n            \n                \n                    Metrics Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductLogoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductLogoUrl')\n                    \n                \n\n            \n                \n                    Product logo url id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ScreenSizeNoticeContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ScreenSizeNoticeContent')\n                    \n                \n\n            \n                \n                    Screen size notice content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegend')\n                    \n                \n\n            \n                \n                    Size legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Size legend\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/default-loggable-actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ContactActions.SendMessage,\n  DownloadActions.Download,\n  LinkRegistryActions.Navigate,\n  ActiveFtuActions.Load,\n  IllustratorActions.SetHover,\n  IllustratorActions.SetClicked,\n  ScreenModeAction.Set,\n]\n                    \n                \n\n            \n                \n                    Default loggable actions\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.discriminatedUnion('type', [\n  z.object({ type: z.literal('url'), url: z.string() }),\n  z.object({ type: z.literal('data'), data: z.string() }),\n])\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_ENTRY,\nwhich is a discriminated union of two objects with different properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    id: DOWNLOAD_FORMAT_ID,\n    label: z.string(),\n    extension: z.string(),\n  })\n  .partial({ extension: true })\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT,\nwhich is an object with id, label, and extension properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .transform((id) => `DownloadFormatId:'${id}'`)\n  .brand('DownloadFormatId')\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT_ID,\nwhich is a string that is transformed into a branded string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_MODEL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  formats: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_FORMAT),\n  entries: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_ENTRY),\n})\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_MODEL,\nwhich is an object with formats and entries properties\n\n                \n            \n\n        \n    \n\n    src/lib/resource-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Gradient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('gradient', payload())\n                    \n                \n\n            \n                \n                    Gradient legend resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType(\n  'metrics',\n  payload()\n)\n                    \n                \n\n            \n                \n                    Metrics resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Size\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('size', payload())\n                    \n                \n\n            \n                \n                    Size legend resource\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n})\n                    \n                \n\n            \n                \n                    Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRIMITIVE_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['bigint', 'boolean', 'number', 'string']\n                    \n                \n\n            \n                \n                    Primitive types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATE_LOGGER_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n}\n                    \n                \n\n            \n                \n                    State Login Provider\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Png\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('png')\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Svg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('svg')\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PNG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Png,\n  label: 'Download PNG',\n  extension: '.png',\n}\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Svg,\n  label: 'Download SVG',\n  extension: '.svg',\n}\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
