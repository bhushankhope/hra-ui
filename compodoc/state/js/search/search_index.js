var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Add.html",[0,0.121,1,1.463]],["body/classes/Add.html",[0,0.165,1,2.431,2,0.67,3,0.222,4,0.361,5,0.222,6,2.876,7,2.876,8,2.862,9,0.258,10,0.992,11,3.885,12,2.77,13,3.466,14,4.276,15,0.717,16,0.528,17,1.855,18,2.838,19,2.259,20,0.357,21,1.105,22,2.862,23,0.657,24,4.607,25,3.87,26,3.144,27,0.443,28,0.027,29,0.443,30,0.291,31,2.106,32,2.267,33,3.409,34,0.961,35,2.041,36,1.471,37,0.291,38,2.25,39,0.348,40,0.98,41,1.105,42,2.512,43,1.272,44,2.512,45,2.331,46,2.512,47,2.512,48,2.512,49,1.826,50,2.862,51,0.018,52,0.018]],["title/classes/AddEntry.html",[0,0.121,53,1.856]],["body/classes/AddEntry.html",[0,0.201,1,2.007,2,0.675,3,0.224,4,0.191,5,0.303,9,0.191,10,0.875,15,0.667,19,1.377,20,0.191,21,1.709,23,0.488,27,0.446,28,0.028,29,0.446,30,0.293,37,0.397,39,0.424,40,0.985,41,1.709,51,0.018,52,0.018,53,2.546,54,2.055,55,2.323,56,2.686,57,3.419,58,2.975,59,3.382,60,3.419,61,3.069,62,1.865,63,1.88,64,1.113,65,1.281,66,2.343,67,1.88,68,1.599,69,1.038,70,2.055,71,2.783,72,2.834,73,1.88,74,2.109,75,2.266,76,2.007,77,2.007,78,1.968,79,2.266,80,2.055,81,1.281,82,1.88,83,2.266,84,2.266,85,2.266]],["title/classes/CellSummarySelectors.html",[0,0.121,86,2.845]],["body/classes/CellSummarySelectors.html",[0,0.131,2,0.722,3,0.24,4,0.205,5,0.24,9,0.205,15,0.759,16,0.569,18,3.127,20,0.271,23,0.691,27,0.632,28,0.027,29,0.632,30,0.415,37,0.465,39,0.276,51,0.019,52,0.019,86,4.084,87,2.539,88,2.539,89,3.658,90,3.211,91,3.307,92,1.692,93,4.844,94,3.179,95,4.844,96,3.79,97,1.816,98,4.844,99,3.658,100,2.812,101,2.019,102,1.577,103,4.844,104,3.658,105,2.199,106,1.191,107,2.265,108,2.424,109,2.707,110,3.658,111,4.844,112,1.951,113,3.658,114,3.658]],["title/injectables/CellSummaryState.html",[109,2.497,115,1.099]],["body/injectables/CellSummaryState.html",[0,0.076,3,0.139,4,0.119,5,0.139,9,0.119,10,0.699,15,0.609,16,0.33,20,0.183,23,0.468,27,0.427,28,0.028,29,0.522,30,0.281,31,1.611,34,1.376,36,0.921,37,0.385,39,0.16,43,1.228,51,0.013,52,0.013,55,1.228,62,1.611,69,1.973,81,1.821,87,1.871,88,1.871,91,1.802,92,1.144,94,2.2,96,1.277,97,0.796,100,2.401,101,1.571,102,1.464,106,0.692,107,2.401,108,1.408,109,2.425,112,1.611,115,1.067,116,1.075,117,2.124,118,2.425,119,1.802,120,3.404,121,3.277,122,3.277,123,2.473,124,3.277,125,2.124,126,2.425,127,3.277,128,1.168,129,1.802,130,2.124,131,2.652,132,2.922,133,2.672,134,2.124,135,2.124,136,2.124,137,2.172,138,1.571,139,2.124,140,1.408,141,3.277,142,1.408,143,0.993,144,2.124,145,1.97,146,1.277,147,2.124,148,3.277,149,3.373,150,2.922,151,2.124,152,2.124,153,4.001,154,2.124,155,3.547,156,3.404,157,2.124,158,2.124,159,2.124,160,1.791,161,2.922,162,2.124,163,2.172,164,2.124,165,3.277,166,0.855,167,1.075,168,1.571,169,1.97,170,2.124,171,3.277,172,2.124,173,4.001,174,2.124,175,2.124,176,2.124,177,3.277,178,2.172,179,3.277,180,3.277,181,1.277,182,3.277,183,2.124,184,3.277,185,2.124,186,2.124,187,2.124,188,2.124,189,3.277,190,2.124,191,1.408,192,2.124,193,2.124,194,2.124,195,3.277,196,1.571,197,2.124,198,3.277,199,2.124,200,3.277,201,4.497,202,2.124,203,2.124,204,2.124,205,2.124,206,2.124,207,2.124,208,2.124,209,2.124,210,3.277,211,2.124,212,2.124,213,2.124,214,3.277,215,2.124,216,2.124,217,2.124,218,2.124]],["title/interfaces/CellSummaryStateModel.html",[96,2.029,219,1.265]],["body/interfaces/CellSummaryStateModel.html",[3,0.156,4,0.133,5,0.156,9,0.133,15,0.424,16,0.37,17,1.921,20,0.344,28,0.028,30,0.204,31,1.921,32,2.068,34,0.674,36,1.032,37,0.204,39,0.45,51,0.014,52,0.014,55,1.916,62,1.921,68,1.114,69,1.303,81,1.34,87,1.114,88,1.114,91,2.953,94,2.953,96,2.868,100,2.931,101,1.499,107,2.679,119,1.966,131,1.578,132,3.228,133,1.31,137,2.845,140,2.37,142,3.162,145,2.149,150,3.588,155,2.37,156,2.37,161,2.581,163,3.559,166,2.441,168,3.53,178,2.37,181,3.074,191,2.37,219,1.916,220,1.31,221,1.578,222,3.015,223,3.015,224,3.015,225,3.015,226,3.176,227,2.37,228,3.973,229,3.015,230,3.015,231,3.015,232,2.645,233,2.868,234,2.361,235,1.31,236,3.783,237,2.361,238,2.361,239,1.762,240,1.762,241,2.008,242,1.762,243,2.008,244,3.53,245,1.762,246,1.762,247,3.389,248,3.691,249,3.176,250,1.578,251,2.645,252,1.762,253,2.645,254,1.762,255,1.762,256,1.762,257,1.762,258,1.762,259,1.762,260,2.008,261,3.015,262,2.008,263,3.015,264,2.008,265,2.008]],["title/classes/ClearEntries.html",[0,0.121,82,1.856]],["body/classes/ClearEntries.html",[0,0.205,1,1.553,2,0.707,3,0.235,4,0.201,5,0.313,9,0.201,10,0.892,15,0.68,19,1.443,21,1.167,28,0.028,37,0.409,39,0.433,40,1.017,41,1.75,51,0.019,52,0.019,53,1.971,54,2.155,55,2.015,56,2.719,58,2.72,59,2.873,61,2.375,62,1.443,63,1.971,64,1.167,65,1.343,66,2.418,67,1.971,68,1.676,69,1.088,70,2.155,71,2.873,72,2.873,73,1.971,74,2.149,75,2.375,76,2.071,77,2.071,78,2.015,79,2.375,80,2.873,81,1.791,82,2.628,83,2.375,84,2.375,85,2.375]],["title/classes/ComputeAggregate.html",[0,0.121,120,2.237]],["body/classes/ComputeAggregate.html",[0,0.168,2,0.69,3,0.229,4,0.196,5,0.229,9,0.263,10,0.921,15,0.557,20,0.196,21,1.138,23,0.499,27,0.456,28,0.027,29,0.456,30,0.299,37,0.455,39,0.355,40,1,41,1.53,49,1.641,51,0.019,52,0.019,63,1.922,64,1.138,65,1.31,69,1.061,74,1.761,78,1.761,87,2.197,88,2.197,94,3.257,100,2.852,101,2.285,107,2.482,108,2.317,119,2.584,120,3.762,126,3.477,138,4.2,166,1.408,234,1.922,235,1.922,237,2.919,238,1.922,266,2.586,267,4.787,268,4.383,269,3.495,270,3.495,271,4.476,272,2.586,273,2.317,274,2.586,275,3.477,276,2.947,277,2.586,278,2.947]],["title/injectables/ContactState.html",[115,1.099,279,2.845]],["body/injectables/ContactState.html",[0,0.211,3,0.227,4,0.194,5,0.227,9,0.194,10,0.919,15,0.722,16,0.539,19,1.397,20,0.194,23,0.495,27,0.452,28,0.027,29,0.738,30,0.297,37,0.506,39,0.262,51,0.019,52,0.019,64,1.13,92,1.633,97,1.3,102,1.13,106,1.13,112,1.397,115,1.843,116,1.756,123,3.112,143,1.622,169,2.086,232,3.46,279,4.772,280,3.469,281,4.676,282,5.132,283,5.659,284,4.772,285,4.676,286,5.659,287,4.68,288,4.676,289,1.504,290,4.676,291,3.469,292,3.942,293,3.913,294,4.676,295,3.942,296,3.469,297,3.913,298,3.099,299,2.925,300,2.567,301,3.469,302,3.469,303,3.469,304,3.469]],["title/classes/Download.html",[0,0.121,56,1.463]],["body/classes/Download.html",[0,0.202,1,1.5,2,0.683,3,0.227,4,0.194,5,0.346,9,0.194,10,0.918,15,0.626,19,1.394,20,0.194,21,1.52,23,0.494,27,0.451,28,0.028,29,0.451,30,0.297,37,0.4,39,0.427,40,0.993,41,1.72,51,0.018,52,0.018,53,1.903,54,2.081,55,1.98,56,2.777,58,2.987,59,2.806,61,2.294,62,1.394,63,1.903,64,1.127,65,1.297,66,2.362,67,1.903,68,1.618,69,1.051,70,2.081,71,2.806,72,2.907,73,1.903,74,2.119,75,2.294,76,2.29,77,2.29,78,1.98,79,2.294,80,2.081,81,1.297,82,1.903,83,2.294,84,2.294,85,2.294,305,2.918,306,3.461]],["title/classes/DownloadSelectors.html",[0,0.121,307,2.845]],["body/classes/DownloadSelectors.html",[0,0.138,2,0.761,3,0.253,4,0.216,5,0.253,9,0.216,15,0.661,16,0.6,18,2.82,20,0.216,23,0.55,27,0.503,28,0.028,29,0.503,30,0.331,37,0.43,39,0.291,40,0.821,51,0.02,52,0.02,56,2.174,66,3.096,67,2.121,69,1.523,72,2.986,81,1.88,90,4.156,92,1.752,97,1.446,102,1.633,105,3.351,106,1.256,112,1.554,289,1.672,307,4.229,308,3.858,309,4.976,310,4.124,311,5.016,312,4.367,313,3.858,314,3.858,315,3.858,316,3.858]],["title/classes/DownloadState.html",[0,0.121,317,2.845]],["body/classes/DownloadState.html",[0,0.059,1,1.162,2,0.325,3,0.108,4,0.092,5,0.352,9,0.092,10,0.417,15,0.652,16,0.256,19,0.664,20,0.24,23,0.612,27,0.56,28,0.028,29,0.659,30,0.368,34,1.105,35,2.036,37,0.433,39,0.124,40,1.247,45,1.714,51,0.011,52,0.011,53,2.53,55,1.724,56,2.712,58,1.356,62,1.571,67,0.906,69,1.731,71,1.611,72,2.705,73,2.53,80,1.611,81,1.005,82,1.863,92,0.936,97,1.462,101,0.936,102,1.498,106,0.537,112,1.364,128,3.022,129,2.953,143,0.771,146,0.991,166,0.664,169,2.346,196,1.219,289,1.468,292,1.39,297,2.887,298,1.776,300,1.219,309,1.39,310,2.506,312,1.219,317,2.26,318,1.648,319,1.983,320,2.506,321,2.68,322,1.983,323,2.26,324,2.26,325,2.26,326,2.26,327,4.293,328,2.68,329,5.049,330,2.68,331,1.648,332,2.68,333,2.68,334,1.648,335,2.68,336,2.68,337,2.68,338,1.648,339,2.887,340,2.68,341,2.68,342,1.648,343,2.68,344,2.68,345,2.68,346,2.68,347,2.68,348,1.648,349,1.39,350,1.39,351,1.219,352,1.219,353,1.648,354,1.39,355,1.39,356,1.648,357,1.648,358,2.26,359,1.39,360,1.648,361,1.648,362,1.648,363,3.387,364,2.506,365,1.648,366,1.648,367,1.648,368,2.68,369,1.648,370,1.648,371,1.648,372,2.68,373,2.151,374,5.369,375,2.68,376,1.648,377,1.648,378,1.648,379,1.648,380,1.648,381,1.648,382,1.648,383,1.648,384,2.68,385,3.387,386,1.648,387,1.39,388,1.648,389,1.648,390,1.648,391,1.648,392,1.648,393,1.648,394,1.648,395,1.648,396,1.648,397,1.648,398,1.648,399,1.648,400,1.648,401,1.648,402,1.648,403,1.648,404,1.648,405,3.387,406,1.648,407,1.648,408,1.648,409,1.648,410,1.648,411,1.648,412,1.648,413,1.648,414,1.648,415,1.648,416,1.648,417,1.648,418,1.648,419,1.648,420,1.648,421,1.648,422,1.648,423,1.39,424,1.39]],["title/interfaces/GradientPoint.html",[131,2.237,219,1.265]],["body/interfaces/GradientPoint.html",[3,0.16,4,0.137,5,0.16,9,0.137,15,0.29,16,0.381,17,1.757,20,0.346,28,0.028,30,0.21,31,1.948,32,2.096,34,1.236,36,1.061,37,0.21,39,0.453,51,0.014,52,0.014,55,1.635,62,1.948,68,1.144,69,1.325,81,1.368,87,1.144,88,1.144,91,2.66,94,2.007,96,2.194,100,2.701,101,1.274,107,2.628,119,2.007,131,2.419,132,3.667,133,2.399,137,3.725,140,1.622,142,3.828,145,2.194,150,3.549,155,2.419,156,2.419,161,2.623,163,3.205,166,2.326,168,2.7,178,2.419,181,2.908,191,2.419,219,1.939,220,1.346,221,1.622,222,2.064,223,2.064,224,2.064,225,2.064,226,2.7,227,1.622,228,3.827,229,2.064,230,2.064,231,2.064,232,1.811,233,2.623,234,2.399,235,1.346,236,3.827,237,2.399,238,2.399,239,1.811,240,1.811,241,2.064,242,1.811,243,2.064,244,3.578,245,1.811,246,1.811,247,3.428,248,3.725,249,3.228,250,1.622,251,2.7,252,1.811,253,2.7,254,1.811,255,1.811,256,1.811,257,1.811,258,1.811,259,1.811,260,3.077,261,4.078,262,3.077,263,4.078,264,3.077,265,3.077]],["title/interfaces/MedicalIllustrationModel.html",[219,1.265,425,2.237]],["body/interfaces/MedicalIllustrationModel.html",[3,0.351,4,0.2,5,0.312,9,0.2,16,0.554,17,1.918,20,0.334,28,0.027,30,0.526,34,1.519,37,0.306,39,0.359,43,1.785,51,0.019,52,0.019,55,1.336,69,1.083,150,2.144,167,3.104,219,2.01,220,1.961,233,2.144,234,1.961,235,1.961,237,1.961,247,2.363,248,4.451,319,3.524,322,2.638,373,2.869,425,3.156,426,1.667,427,1.667,428,2.638,429,2.619,430,2.896,431,3.688,432,2.976,433,4.762,434,2.638,435,3.007,436,3.007,437,3.007,438,3.007,439,3.007,440,3.007,441,3.007,442,3.007,443,3.007,444,3.007,445,3.007,446,3.007,447,3.007,448,3.007]],["title/classes/MedicalIllustrationSelectors.html",[0,0.121,449,2.845]],["body/classes/MedicalIllustrationSelectors.html",[0,0.128,2,0.704,3,0.234,4,0.2,5,0.351,9,0.2,15,0.565,16,0.554,18,3.104,20,0.266,23,0.68,27,0.621,28,0.028,29,0.621,30,0.408,34,1.349,37,0.459,39,0.269,43,1.785,51,0.019,52,0.019,90,3.156,92,1.663,97,1.785,102,1.998,105,2.144,106,1.161,112,1.918,167,2.896,289,2.064,373,2.676,425,4.152,426,2.507,427,2.507,429,3.147,430,2.896,432,2.507,449,4.016,450,3.566,451,4.762,452,4.762,453,3.566,454,4.762,455,3.566,456,2.144,457,2.638,458,3.566,459,4.762,460,3.566,461,3.566]],["title/injectables/MedicalIllustrationState.html",[115,1.099,457,2.497]],["body/injectables/MedicalIllustrationState.html",[0,0.096,3,0.302,4,0.15,5,0.176,9,0.15,10,0.417,15,0.599,16,0.417,19,1.079,20,0.283,23,0.656,27,0.6,28,0.028,29,0.659,30,0.394,37,0.496,39,0.294,51,0.015,52,0.015,69,0.814,92,1.362,97,1.724,101,0.936,102,1.498,106,0.873,112,1.079,115,1.27,116,1.356,118,2.886,123,2.145,129,2.145,143,1.253,146,1.611,167,2.328,169,1.611,277,4.146,289,2.19,297,3.404,298,1.776,300,1.983,349,2.26,350,2.26,358,3.289,359,2.26,373,2.362,423,2.26,424,2.26,425,1.776,426,2.362,427,2.362,429,2.778,430,1.974,431,3.228,432,1.824,434,1.983,456,1.611,457,2.886,462,2.26,463,3.901,464,3.477,465,3.477,466,3.477,467,2.68,468,5.177,469,3.901,470,2.68,471,2.586,472,2.68,473,3.901,474,3.901,475,3.049,476,2.68,477,3.901,478,2.68,479,3.901,480,2.68,481,2.586,482,2.68,483,2.68,484,2.68,485,2.68,486,2.68,487,2.886,488,5.052,489,2.26,490,2.68,491,2.68,492,3.901,493,2.68,494,2.68]],["title/classes/RegisterFormat.html",[0,0.121,73,1.856]],["body/classes/RegisterFormat.html",[0,0.202,1,1.496,2,0.681,3,0.226,4,0.193,5,0.305,9,0.193,10,0.878,15,0.67,19,1.39,20,0.193,21,1.517,23,0.493,27,0.45,28,0.028,29,0.45,30,0.296,37,0.399,39,0.426,40,0.991,41,1.718,51,0.018,52,0.018,53,1.899,54,2.076,55,1.977,56,2.634,58,2.669,59,2.802,61,2.288,62,1.39,63,1.899,64,1.124,65,1.294,66,2.858,67,1.899,68,1.614,69,1.048,70,2.076,71,3.396,72,2.994,73,2.563,74,2.117,75,2.288,76,2.287,77,2.287,78,1.977,79,2.288,80,2.076,81,1.294,82,1.899,83,2.288,84,2.288,85,2.288,305,2.911,495,3.452]],["title/interfaces/ScreenModeModel.html",[219,1.265,496,2.237]],["body/interfaces/ScreenModeModel.html",[3,0.311,4,0.265,5,0.311,9,0.265,15,0.562,16,0.737,17,2.297,20,0.265,28,0.026,39,0.357,51,0.023,52,0.023,219,1.776,220,2.605,319,3.505,496,3.781,497,3.14,498,3.14,499,4.737,500,3.14,501,3.14,502,4.211,503,3.366,504,3.781,505,4.81]],["title/classes/ScreenModeSelectors.html",[0,0.121,506,2.845]],["body/classes/ScreenModeSelectors.html",[0,0.143,2,0.79,3,0.262,4,0.224,5,0.262,9,0.224,15,0.609,16,0.622,18,2.869,20,0.224,23,0.571,27,0.522,28,0.027,29,0.522,30,0.343,37,0.44,39,0.302,40,0.851,51,0.02,52,0.02,90,4.197,92,1.793,97,1.499,102,1.672,105,3.409,106,1.302,112,1.611,475,3.403,496,3.966,497,3.403,498,3.403,500,4.268,501,3.966,502,3.403,503,2.824,506,4.329,507,4,508,5.134,509,4,510,5.134,511,3.373,512,4]],["title/injectables/ScreenModeState.html",[115,1.099,513,2.845]],["body/injectables/ScreenModeState.html",[0,0.129,3,0.237,4,0.202,5,0.237,9,0.202,10,0.839,15,0.71,16,0.561,20,0.202,23,0.515,27,0.471,28,0.028,29,0.626,30,0.309,37,0.513,39,0.272,40,1.022,45,1.827,49,2.194,51,0.019,52,0.019,92,1.677,97,1.354,102,1.176,106,1.176,115,1.564,116,1.827,123,3.163,128,1.986,129,2.641,143,1.689,146,2.171,289,1.565,351,2.672,352,2.672,364,2.672,487,3.554,496,3.183,497,3.183,498,3.183,500,4.081,501,3.969,502,3.577,511,3.045,513,4.05,514,3.611,515,4.803,516,3.045,517,4.05,518,3.611,519,4.803,520,3.611,521,3.045,522,3.611,523,2.672,524,3.611]],["title/classes/SendMessage.html",[0,0.121,287,2.497]],["body/classes/SendMessage.html",[0,0.208,2,0.829,3,0.275,4,0.235,5,0.275,9,0.235,10,0.653,20,0.325,21,1.889,23,0.6,25,3.92,27,0.548,28,0.027,29,0.548,30,0.36,37,0.454,39,0.317,41,1.368,51,0.021,52,0.021,64,1.725,65,1.575,74,1.575,78,1.575,219,1.986,284,4.467,287,3.92,293,4.648,295,3.543,299,3.543,325,4.467,525,4.202,526,5.298,527,5.298,528,5.298,529,4.202,530,6.413,531,4.202,532,4.202]],["title/classes/Set.html",[0,0.121,49,1.178]],["body/classes/Set.html",[0,0.152,2,0.837,3,0.278,4,0.237,5,0.278,9,0.298,10,0.659,20,0.237,21,1.38,23,0.605,27,0.553,28,0.027,29,0.553,30,0.363,37,0.363,39,0.32,40,0.902,41,1.38,49,2.199,51,0.021,52,0.021,64,1.38,65,1.589,74,1.589,76,2.309,77,2.309,78,1.589,497,3.531,498,3.531,500,3.531,501,4.051,502,3.862,503,3.204,504,3.531,505,4.493,521,3.575,533,4.24,534,5.328,535,4.24,536,4.24,537,4.24]],["title/classes/Set-1.html",[0,0.101,49,0.987,196,2.091]],["body/classes/Set-1.html",[0,0.159,1,1.928,2,0.636,3,0.211,4,0.364,5,0.211,6,3.019,7,3.019,8,2.718,9,0.249,10,0.981,11,2.718,12,1.938,13,3.375,14,4.275,15,0.724,16,0.501,17,1.791,18,2.778,19,2.211,20,0.357,21,1.05,22,2.718,23,0.726,25,3.767,26,3.061,27,0.42,28,0.027,29,0.42,30,0.276,31,2.211,32,2.379,33,2.385,34,0.913,35,1.938,36,1.397,37,0.276,38,2.137,39,0.336,40,0.946,41,1.05,42,3.291,43,1.667,44,3.291,45,2.914,46,3.291,47,3.291,48,3.291,49,2.131,50,2.718,51,0.018,52,0.018,538,4.447,539,4.447,540,3.224]],["title/classes/SetActiveNode.html",[0,0.121,464,2.029]],["body/classes/SetActiveNode.html",[0,0.188,2,0.678,3,0.225,4,0.192,5,0.304,9,0.192,10,0.916,20,0.192,21,1.119,23,0.49,27,0.448,28,0.028,29,0.448,30,0.294,34,1.315,37,0.398,39,0.397,40,1.12,41,1.713,43,1.972,49,2.167,51,0.018,52,0.018,64,1.119,65,1.288,74,1.972,76,2.443,77,2.443,78,1.972,167,2.663,373,2.636,426,2.172,427,2.172,429,1.889,430,2.852,431,3.794,432,2.636,456,2.065,464,2.793,465,2.065,466,2.065,471,3.903,481,3.488,541,2.542,542,3.736,543,3.436,544,3.436,545,2.897,546,3.894]],["title/classes/SetData.html",[0,0.121,275,2.497]],["body/classes/SetData.html",[0,0.17,2,0.702,3,0.233,4,0.199,5,0.233,9,0.266,10,0.926,15,0.422,20,0.199,21,1.158,23,0.507,27,0.464,28,0.028,29,0.464,30,0.305,37,0.459,39,0.359,40,1.011,41,1.548,49,1.996,51,0.019,52,0.019,63,1.956,64,1.158,65,1.333,69,1.08,74,1.782,78,1.782,87,2.223,88,2.223,94,2.945,100,2.504,101,2.308,107,2.223,108,2.357,119,1.956,120,3.151,126,2.632,138,3.518,166,2.157,234,1.956,235,1.956,237,1.956,238,1.956,266,2.632,267,4.009,268,4.632,271,4.516,272,2.632,273,2.357,274,2.632,275,4.23,276,2.999,277,3.518,278,2.999,547,3.557,548,3.557]],["title/classes/SetMapping.html",[0,0.121,465,2.029]],["body/classes/SetMapping.html",[0,0.189,2,0.683,3,0.227,4,0.194,5,0.346,9,0.194,10,0.918,20,0.194,21,1.127,23,0.494,27,0.451,28,0.028,29,0.451,30,0.297,34,1.601,37,0.4,39,0.399,40,1.124,41,1.72,43,1.75,49,2.171,51,0.018,52,0.018,64,1.127,65,1.297,74,1.98,76,2.451,77,2.451,78,1.98,167,2.987,373,2.76,426,2.183,427,2.183,429,1.903,430,2.861,431,3.549,432,2.183,456,2.081,464,2.081,465,2.806,466,2.081,471,3.501,481,3.501,541,2.561,542,3.747,546,3.908,549,2.918,550,3.461]],["title/classes/SetUri.html",[0,0.121,466,2.029]],["body/classes/SetUri.html",[0,0.188,2,0.68,3,0.226,4,0.193,5,0.305,9,0.193,10,0.916,20,0.193,21,1.121,23,0.491,27,0.449,28,0.028,29,0.449,30,0.295,34,1.598,37,0.399,39,0.398,40,1.121,41,1.716,43,1.975,49,2.168,51,0.018,52,0.018,64,1.121,65,1.291,74,1.975,76,2.446,77,2.446,78,1.975,167,2.666,373,2.756,426,2.175,427,2.175,429,1.894,430,2.982,431,3.543,432,2.175,456,2.071,464,2.071,465,2.071,466,2.797,471,3.492,481,3.906,541,2.548,542,3.74,545,2.904,546,3.899,549,2.904,551,3.444]],["title/interfaces/Source.html",[4,0.189,219,1.265]],["body/interfaces/Source.html",[3,0.261,4,0.374,5,0.261,6,2.187,7,2.187,9,0.223,10,0.618,16,0.618,17,2.06,20,0.346,28,0.027,31,1.602,32,1.724,34,1.791,37,0.341,39,0.427,51,0.02,52,0.02,106,1.295,123,2.813,128,2.187,166,2.546,219,1.491,220,2.187,552,3.354,553,5.116,554,5.331,555,5.331,556,5.97,557,4.314,558,2.636,559,3.354,560,3.354,561,3.354,562,2.943]],["title/classes/SourceListSelectors.html",[0,0.121,563,2.845]],["body/classes/SourceListSelectors.html",[0,0.197,2,0.745,3,0.247,4,0.361,5,0.247,6,2.72,7,2.72,9,0.277,13,3.278,14,3.278,15,0.721,16,0.587,18,2.791,20,0.211,23,0.539,27,0.492,28,0.027,29,0.492,30,0.323,31,2.357,32,2.144,37,0.473,38,2.502,39,0.285,40,0.803,43,1.854,51,0.02,52,0.02,92,1.727,97,1.415,101,2.044,102,1.61,105,3.316,106,1.229,112,1.52,160,4.17,166,1.992,558,3.879,563,4.17,564,3.775,565,4.946,566,4.496,567,4.946,568,4.946,569,3.775,570,3.775,571,3.775,572,3.775]],["title/injectables/SourceListState.html",[115,1.099,566,2.497]],["body/injectables/SourceListState.html",[0,0.108,1,2.595,3,0.197,4,0.335,5,0.197,6,2.7,7,2.7,9,0.168,10,0.468,12,3.204,13,3.532,14,3.723,15,0.762,16,0.468,20,0.237,23,0.605,26,2.549,27,0.553,28,0.028,29,0.64,30,0.363,31,1.708,32,1.838,33,2.228,37,0.481,38,1.996,39,0.227,40,1.134,42,3.138,43,1.997,44,3.943,45,2.484,46,3.138,47,3.138,48,3.138,49,2.135,51,0.017,52,0.017,77,1.838,92,1.481,97,1.589,101,1.481,102,1.381,106,0.98,115,1.381,116,1.524,118,3.138,128,2.332,129,2.332,143,1.408,146,1.81,289,1.838,351,2.228,352,2.228,364,2.228,487,3.632,516,2.539,517,3.576,523,3.138,558,1.996,562,4.43,566,3.138,573,3.011,574,3.011,575,4.241,576,3.011,577,3.011,578,3.011,579,3.011,580,3.011]],["title/injectables/StateAnalyticsPluginService.html",[115,1.099,581,2.497]],["body/injectables/StateAnalyticsPluginService.html",[0,0.076,3,0.139,4,0.118,5,0.139,9,0.183,10,0.97,12,1.271,15,0.672,16,0.329,19,1.315,20,0.346,23,0.302,26,1.963,27,0.276,28,0.028,29,0.276,30,0.181,34,1.13,35,1.271,36,2.624,37,0.384,39,0.301,40,1.137,43,2.003,45,1.652,51,0.013,52,0.013,69,1.473,92,1.14,101,0.738,102,1.579,106,0.688,112,1.953,115,1.579,116,1.07,129,2.194,133,1.796,143,0.989,149,3.783,166,0.852,169,2.697,227,2.164,268,2.416,273,1.401,289,1.729,298,1.401,320,1.564,326,1.783,339,2.952,475,1.401,503,1.796,504,1.401,542,1.401,581,2.952,582,2.416,583,4.281,584,2.416,585,1.564,586,4.487,587,5.785,588,4.487,589,3.265,590,5.519,591,4.487,592,2.114,593,3.265,594,3.265,595,6.123,596,3.989,597,3.989,598,2.114,599,3.364,600,2.114,601,3.265,602,2.753,603,2.114,604,2.114,605,2.753,606,2.753,607,2.416,608,1.783,609,2.753,610,1.783,611,1.783,612,1.783,613,1.783,614,1.783,615,1.783,616,2.114,617,2.753,618,2.753,619,2.114,620,1.783,621,3.364,622,1.783,623,1.783,624,1.783,625,2.753,626,2.753,627,2.114,628,3.265,629,2.114,630,2.114,631,2.114,632,2.114,633,2.114,634,2.114,635,2.114,636,2.114,637,2.114,638,2.114,639,2.114,640,2.114,641,2.114,642,2.114,643,2.114,644,2.114,645,2.114,646,2.114,647,2.114,648,3.265,649,3.989,650,2.114,651,2.114,652,2.114,653,2.114,654,1.783,655,1.783,656,1.783,657,1.783,658,1.783]],["title/dependencies.html",[659,2.383,660,3.418]],["body/dependencies.html",[28,0.026,51,0.024,52,0.024,143,2.409,660,5.055,661,5.152,662,5.152,663,5.152,664,5.152,665,5.995]],["title/miscellaneous/functions.html",[666,1.554,667,3.418]],["body/miscellaneous/functions.html",[9,0.239,16,0.665,20,0.3,27,0.699,28,0.027,29,0.699,30,0.459,34,1.737,36,2.536,51,0.021,52,0.021,56,2.323,58,2.165,62,2.356,72,2.506,76,1.854,102,1.745,133,2.353,289,1.854,320,3.166,503,2.353,504,2.836,582,3.166,583,4.329,584,3.166,585,3.965,607,3.166,610,3.607,611,3.607,612,3.607,613,3.607,614,3.607,615,3.607,617,3.607,618,3.607,666,2.353,667,3.607,668,5.358,669,3.166,670,5.358,671,3.607,672,3.166,673,4.278]],["title/index.html",[16,0.439,674,2.826,675,2.826]],["body/index.html",[15,0.708,28,0.024,51,0.024,52,0.024,676,5.115,677,5.115,678,5.97,679,5.115,680,5.97,681,5.97,682,5.115,683,5.115,684,5.115]],["title/modules.html",[685,3.869]],["body/modules.html",[28,0.024,51,0.024,52,0.024,685,4.526]],["title/overview.html",[686,3.869]],["body/overview.html",[2,1.036,28,0.024,51,0.024,52,0.024,116,2.655,220,2.886,686,4.425,687,5.247,688,5.247,689,5.247]],["title/properties.html",[17,1.633,659,2.383]],["body/properties.html",[17,2.137,28,0.025,51,0.024,52,0.024,690,5.307,691,5.307]],["title/miscellaneous/typealiases.html",[666,1.554,692,4.054]],["body/miscellaneous/typealiases.html",[4,0.252,6,1.81,7,1.81,10,0.512,15,0.39,16,0.512,20,0.375,28,0.018,31,1.326,32,1.427,36,1.427,51,0.018,52,0.018,55,1.234,58,2.605,59,3.095,66,2.605,68,1.539,81,1.234,87,1.539,88,1.539,91,2.481,100,2.589,107,2.713,119,2.481,123,2.831,128,1.81,132,1.979,145,2.712,161,1.979,181,1.979,191,2.99,221,3.971,233,2.712,236,4.293,237,3.436,238,1.81,239,2.435,240,2.435,242,3.338,250,3.67,312,4.097,329,4.34,426,2.11,427,2.11,428,3.338,432,2.11,462,3.804,468,3.804,523,2.435,552,4.34,557,3.804,558,2.99,559,2.775,560,2.775,561,2.775,562,3.338,666,1.81,669,4.293,672,2.435,693,3.291,694,4.892,695,3.804,696,4.511,697,4.892,698,5.801,699,5.801,700,5.537,701,2.775,702,2.775,703,2.775,704,2.775]],["title/miscellaneous/variables.html",[666,1.554,705,3.418]],["body/miscellaneous/variables.html",[3,0.142,5,0.084,9,0.121,10,0.671,12,0.767,15,0.151,16,0.198,17,1.137,20,0.254,26,1.697,28,0.027,30,0.109,31,1.34,32,1.615,34,0.942,35,3.97,36,2.839,45,0.646,51,0.009,52,0.009,54,0.767,55,0.478,56,1.224,62,2.49,64,0.415,66,1.096,68,0.597,70,0.767,72,1.556,81,1.058,87,1.013,88,1.013,91,1.191,100,1.013,101,0.757,107,1.013,115,0.415,132,1.302,133,0.702,137,0.846,140,0.846,142,2.47,145,0.767,150,3.18,155,1.436,156,1.436,161,1.302,163,1.436,166,1.83,178,1.436,181,1.302,221,2.205,226,0.944,227,0.846,228,2.462,233,0.767,234,1.83,235,1.83,238,1.552,244,2.757,245,0.944,246,0.944,247,3.14,248,4.034,249,2.089,250,0.846,251,1.603,252,0.944,253,2.089,254,0.944,255,0.944,256,0.944,257,0.944,258,0.944,259,2.997,266,1.603,272,0.944,273,1.436,274,0.944,282,1.076,293,0.944,310,2.757,322,3.363,323,1.076,324,1.076,339,2.089,354,1.827,355,1.827,373,1.013,387,3.142,426,0.597,427,0.597,428,1.603,430,1.428,432,1.013,434,0.944,435,1.076,436,1.076,437,1.076,438,1.076,439,1.076,440,1.076,441,1.076,442,1.076,443,1.076,444,1.076,445,1.076,446,1.076,447,1.076,448,1.076,475,1.436,489,1.827,503,0.702,554,1.827,555,3.415,581,0.944,582,1.603,583,2.997,584,0.944,585,2.462,599,1.827,602,1.076,605,2.38,606,2.38,607,0.944,608,1.827,609,1.076,620,1.076,621,2.38,622,1.076,623,1.076,624,1.076,625,1.076,626,1.076,654,1.076,655,1.827,656,1.076,657,1.076,658,1.076,666,0.702,669,2.462,671,2.38,672,0.944,694,2.805,695,1.076,697,2.805,701,2.805,702,2.805,703,2.805,704,2.38,705,1.076,706,4.545,707,6.288,708,1.276,709,2.166,710,5.969,711,2.166,712,1.276,713,2.166,714,2.823,715,2.166,716,3.327,717,2.166,718,2.166,719,2.166,720,2.166,721,2.166,722,2.166,723,2.166,724,2.166,725,2.166,726,2.166,727,2.166,728,2.166,729,2.166,730,4.737,731,2.166,732,2.166,733,4.319,734,3.327,735,2.823,736,2.823,737,2.166,738,3.327,739,2.166,740,2.166,741,1.276,742,1.276,743,1.276,744,3.726,745,1.276,746,1.276,747,1.276,748,1.276,749,1.276,750,1.276,751,4.904,752,5.049,753,1.276,754,1.276,755,2.823,756,1.276,757,1.276,758,2.823,759,2.166,760,1.276,761,1.276,762,1.276,763,1.276,764,1.276,765,1.276,766,1.276,767,4.051,768,1.276,769,2.166,770,2.166,771,1.276,772,1.276,773,3.327,774,1.276,775,1.276,776,1.276,777,1.276,778,1.276,779,1.276,780,1.276,781,1.276,782,1.276,783,1.276,784,1.276,785,1.276,786,1.276,787,1.276,788,2.166,789,1.276,790,1.276,791,1.276,792,1.276,793,1.276,794,1.276,795,1.276,796,1.276,797,1.276,798,1.276,799,1.276,800,1.276,801,3.327,802,1.276,803,1.276,804,1.276,805,1.276,806,1.276,807,1.276,808,1.276,809,1.276,810,2.166,811,1.276,812,2.823,813,1.276,814,1.276,815,2.166,816,1.276,817,2.166,818,1.276]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":398,"title":{},"body":{"classes/DownloadState.html":{}}}],["0.0.1",{"_index":691,"title":{},"body":{"properties.html":{}}}],["1",{"_index":196,"title":{"classes/Set-1.html":{}},"body":{"injectables/CellSummaryState.html":{},"classes/DownloadState.html":{}}}],["15.1.0",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":688,"title":{},"body":{"overview.html":{}}}],["2",{"_index":186,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["2.3.0",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["2dftu",{"_index":443,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":689,"title":{},"body":{"overview.html":{}}}],["6",{"_index":687,"title":{},"body":{"overview.html":{}}}],["_ctx",{"_index":296,"title":{},"body":{"injectables/ContactState.html":{}}}],["action",{"_index":10,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action('[contact",{"_index":532,"title":{},"body":{"classes/SendMessage.html":{}}}],["action('[medical",{"_index":546,"title":{},"body":{"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["action('[screenmode",{"_index":537,"title":{},"body":{"classes/Set.html":{}}}],["action('add",{"_index":79,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('clear",{"_index":83,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('computeaggregate",{"_index":278,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["action('download",{"_index":84,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('register",{"_index":75,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('setdata",{"_index":276,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["action(add",{"_index":575,"title":{},"body":{"injectables/SourceListState.html":{}}}],["action(addentry",{"_index":330,"title":{},"body":{"classes/DownloadState.html":{}}}],["action(clearentries",{"_index":333,"title":{},"body":{"classes/DownloadState.html":{}}}],["action(computeaggregate",{"_index":124,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["action(download",{"_index":337,"title":{},"body":{"classes/DownloadState.html":{}}}],["action(registerformat",{"_index":347,"title":{},"body":{"classes/DownloadState.html":{}}}],["action(sendmessage",{"_index":290,"title":{},"body":{"injectables/ContactState.html":{}}}],["action(set",{"_index":517,"title":{},"body":{"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{}}}],["action(setactivenode",{"_index":469,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["action(setmapping",{"_index":473,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["action(seturi",{"_index":479,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["action.summaries",{"_index":147,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["action_log",{"_index":646,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["actiongroup",{"_index":63,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SetData.html":{}}}],["actiongroup('download",{"_index":70,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('resourceregistry",{"_index":274,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":339,"title":{},"body":{"classes/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":471,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["add",{"_index":1,"title":{"classes/Add.html":{}},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{},"classes/Set-1.html":{},"injectables/SourceListState.html":{}}}],["add(undefined",{"_index":574,"title":{},"body":{"injectables/SourceListState.html":{}}}],["addd",{"_index":61,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["added",{"_index":33,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"injectables/SourceListState.html":{}}}],["addentry",{"_index":53,"title":{"classes/AddEntry.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["addentry(ctx",{"_index":328,"title":{},"body":{"classes/DownloadState.html":{}}}],["adding",{"_index":11,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{}}}],["adds",{"_index":44,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"injectables/SourceListState.html":{}}}],["aggregate",{"_index":100,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate[string]['rows'][number",{"_index":241,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["aggregated",{"_index":230,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["aggregatedata",{"_index":148,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["aggregatedata[key",{"_index":158,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["aggregaterow",{"_index":145,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregaterow[2",{"_index":243,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["aggregaterowentry",{"_index":242,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{}}}],["aggregates",{"_index":93,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["aggregates(state",{"_index":95,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["alias",{"_index":557,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":693,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["along",{"_index":261,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["analytics",{"_index":583,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["anatomical_structure_of",{"_index":438,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["anchor",{"_index":408,"title":{},"body":{"classes/DownloadState.html":{}}}],["anchor.click",{"_index":413,"title":{},"body":{"classes/DownloadState.html":{}}}],["anchor.download",{"_index":411,"title":{},"body":{"classes/DownloadState.html":{}}}],["anchor.href",{"_index":412,"title":{},"body":{"classes/DownloadState.html":{}}}],["anchor.remove",{"_index":414,"title":{},"body":{"classes/DownloadState.html":{}}}],["angular/common",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":350,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["angular/core",{"_index":143,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"dependencies.html":{}}}],["another",{"_index":245,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptitle",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":561,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["array",{"_index":31,"title":{},"body":{"classes/Add.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"classes/Set-1.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(value",{"_index":652,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["available",{"_index":309,"title":{},"body":{"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{}}}],["b",{"_index":214,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["bar",{"_index":263,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["base",{"_index":272,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":175,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["being",{"_index":596,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["between",{"_index":139,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["bigint",{"_index":609,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["biomarker",{"_index":181,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":405,"title":{},"body":{"classes/DownloadState.html":{}}}],["blob([entry.data",{"_index":380,"title":{},"body":{"classes/DownloadState.html":{}}}],["boolean",{"_index":503,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["boolean/number/string/null/bigint/undefined",{"_index":615,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":226,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["brand('downloadformatid",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branded",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":381,"title":{},"body":{"classes/DownloadState.html":{}}}],["browser",{"_index":404,"title":{},"body":{"classes/DownloadState.html":{}}}],["builtin",{"_index":356,"title":{},"body":{"classes/DownloadState.html":{}}}],["calculates",{"_index":135,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["called",{"_index":699,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["canceluncompleted",{"_index":474,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["case",{"_index":372,"title":{},"body":{"classes/DownloadState.html":{}}}],["cell",{"_index":107,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell_schema",{"_index":244,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["cell_schema.array",{"_index":252,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["cell_summary_aggregate_schema",{"_index":253,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["cell_summary_schema",{"_index":238,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cellid",{"_index":165,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["cellsummary",{"_index":91,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cellsummary[string]['entries",{"_index":171,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["cellsummaryselectors",{"_index":86,"title":{"classes/CellSummarySelectors.html":{}},"body":{"classes/CellSummarySelectors.html":{}}}],["cellsummarystate",{"_index":109,"title":{"injectables/CellSummaryState.html":{}},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["cellsummarystatemodel",{"_index":96,"title":{"interfaces/CellSummaryStateModel.html":{}},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["check",{"_index":611,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["class",{"_index":0,"title":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{}},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"overview.html":{}}}],["clear",{"_index":80,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["clearentries",{"_index":82,"title":{"classes/ClearEntries.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["clearentries(ctx",{"_index":332,"title":{},"body":{"classes/DownloadState.html":{}}}],["client",{"_index":486,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["color",{"_index":137,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":260,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["columnid",{"_index":182,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columnindex",{"_index":188,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columnindices",{"_index":177,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columnindices[columnid",{"_index":184,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columnlabel",{"_index":183,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columns",{"_index":156,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["columns.length",{"_index":185,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["columns.push(columnlabel",{"_index":187,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["compute",{"_index":267,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["computeaggregate",{"_index":120,"title":{"classes/ComputeAggregate.html":{}},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["computeaggregate(ctx",{"_index":122,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["computes",{"_index":126,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["const",{"_index":69,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/SetData.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["constant",{"_index":250,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["constructor(data",{"_index":547,"title":{},"body":{"classes/SetData.html":{}}}],["constructor(format",{"_index":305,"title":{},"body":{"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["constructor(id",{"_index":57,"title":{},"body":{"classes/AddEntry.html":{}}}],["constructor(isfullscreen",{"_index":535,"title":{},"body":{"classes/Set.html":{}}}],["constructor(message",{"_index":529,"title":{},"body":{"classes/SendMessage.html":{}}}],["constructor(node",{"_index":543,"title":{},"body":{"classes/SetActiveNode.html":{}}}],["constructor(public",{"_index":50,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{}}}],["constructor(readonly",{"_index":41,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["constructor(sourcelist",{"_index":22,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{}}}],["constructor(summaries",{"_index":269,"title":{},"body":{"classes/ComputeAggregate.html":{}}}],["constructor(url",{"_index":549,"title":{},"body":{"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["contact",{"_index":282,"title":{},"body":{"injectables/ContactState.html":{},"miscellaneous/variables.html":{}}}],["contact.actions",{"_index":301,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactacknowledgement",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactions.sendmessage",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactmessage",{"_index":530,"title":{},"body":{"classes/SendMessage.html":{}}}],["contactservice",{"_index":286,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactstate",{"_index":279,"title":{"injectables/ContactState.html":{}},"body":{"injectables/ContactState.html":{}}}],["containing",{"_index":231,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["contains",{"_index":228,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":323,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":523,"title":{},"body":{"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["conversion",{"_index":420,"title":{},"body":{"classes/DownloadState.html":{}}}],["convert",{"_index":321,"title":{},"body":{"classes/DownloadState.html":{}}}],["converted",{"_index":402,"title":{},"body":{"classes/DownloadState.html":{}}}],["corresponding",{"_index":168,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["count",{"_index":161,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["counts",{"_index":153,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["counts[rowid",{"_index":190,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["create",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('gradient",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('size",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid",{"_index":668,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdownloadformatid('png",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid('svg",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid(id",{"_index":673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid('about",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('embed",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('exploreftu",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('illustration",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpage",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpagereadmore",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('portal",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('producttitle",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('apptitle",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('contactacknowledgement",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegend",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegendinfo",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthdescription",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthimg",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthmoretext",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthtitle",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrodescription",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroimg",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintromoretext",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintropartners",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrotitle",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metrics",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricslogo",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricstitle",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('productlogourl",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('producttitle",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegend",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegendinfo",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":76,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/functions.html":{}}}],["ctx",{"_index":128,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/DownloadState.html":{},"injectables/ScreenModeState.html":{},"interfaces/Source.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["ctx.dispatch([new",{"_index":360,"title":{},"body":{"classes/DownloadState.html":{}}}],["ctx.getstate",{"_index":368,"title":{},"body":{"classes/DownloadState.html":{}}}],["ctx.patchstate",{"_index":159,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["ctx.setstate",{"_index":363,"title":{},"body":{"classes/DownloadState.html":{}}}],["current",{"_index":43,"title":{},"body":{"classes/Add.html":{},"injectables/CellSummaryState.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["data",{"_index":101,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetData.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":97,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["default",{"_index":35,"title":{},"body":{"classes/Add.html":{},"classes/DownloadState.html":{},"classes/Set-1.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["default_loggable_actions",{"_index":605,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":146,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{}}}],["define",{"_index":697,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["defines",{"_index":271,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["dependencies",{"_index":660,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":632,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["depth",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describes",{"_index":222,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":610,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["diff",{"_index":198,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["different",{"_index":324,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":418,"title":{},"body":{"classes/DownloadState.html":{}}}],["discriminated",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispatched",{"_index":597,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["display",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.appendchild(anchor",{"_index":410,"title":{},"body":{"classes/DownloadState.html":{}}}],["document.createelement('a",{"_index":409,"title":{},"body":{"classes/DownloadState.html":{}}}],["download",{"_index":56,"title":{"classes/Download.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["download(ctx",{"_index":336,"title":{},"body":{"classes/DownloadState.html":{}}}],["download.action",{"_index":357,"title":{},"body":{"classes/DownloadState.html":{}}}],["download.model",{"_index":67,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["download_entry",{"_index":701,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format",{"_index":702,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format_id",{"_index":703,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_model",{"_index":704,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadactions.download",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadcontext",{"_index":329,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloaddata(blob",{"_index":406,"title":{},"body":{"classes/DownloadState.html":{}}}],["downloadentry",{"_index":59,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformat",{"_index":66,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadformatid",{"_index":58,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformatid:'${id",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadmodel",{"_index":312,"title":{},"body":{"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloadremotedata(url",{"_index":422,"title":{},"body":{"classes/DownloadState.html":{}}}],["downloads",{"_index":416,"title":{},"body":{"classes/DownloadState.html":{}}}],["downloadselectors",{"_index":307,"title":{"classes/DownloadSelectors.html":{}},"body":{"classes/DownloadSelectors.html":{}}}],["downloadstate",{"_index":317,"title":{"classes/DownloadState.html":{}},"body":{"classes/DownloadState.html":{}}}],["draft.entries",{"_index":367,"title":{},"body":{"classes/DownloadState.html":{}}}],["draft.entries[id",{"_index":366,"title":{},"body":{"classes/DownloadState.html":{}}}],["draft.formats[format.id",{"_index":365,"title":{},"body":{"classes/DownloadState.html":{}}}],["draft.isfullscreen",{"_index":524,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["draft.push(...sourcelist",{"_index":579,"title":{},"body":{"injectables/SourceListState.html":{}}}],["each",{"_index":163,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["effectively",{"_index":47,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"injectables/SourceListState.html":{}}}],["embed",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entires",{"_index":335,"title":{},"body":{"classes/DownloadState.html":{}}}],["entries",{"_index":81,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entries.reduce>((res",{"_index":172,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["entries[format",{"_index":369,"title":{},"body":{"classes/DownloadState.html":{}}}],["entry",{"_index":55,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entry.url",{"_index":376,"title":{},"body":{"classes/DownloadState.html":{}}}],["entry?.type",{"_index":371,"title":{},"body":{"classes/DownloadState.html":{}}}],["error('cannot",{"_index":383,"title":{},"body":{"classes/DownloadState.html":{}}}],["event",{"_index":639,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["execute",{"_index":684,"title":{},"body":{"index.html":{}}}],["exist_asctb",{"_index":444,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["explore",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exploreftu",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":39,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["extends",{"_index":74,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["extension",{"_index":387,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":273,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["fakebase",{"_index":389,"title":{},"body":{"classes/DownloadState.html":{}}}],["fakebase).pathname",{"_index":393,"title":{},"body":{"classes/DownloadState.html":{}}}],["false",{"_index":522,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["feature",{"_index":225,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["fetch",{"_index":419,"title":{},"body":{"classes/DownloadState.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":374,"title":{},"body":{"classes/DownloadState.html":{}}}],["fileurl",{"_index":421,"title":{},"body":{"classes/DownloadState.html":{}}}],["finalpercentage",{"_index":201,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["form",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":72,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["format.id",{"_index":315,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats",{"_index":310,"title":{},"body":{"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["formats(state",{"_index":311,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats.ts",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formats[id",{"_index":388,"title":{},"body":{"classes/DownloadState.html":{}}}],["formatted",{"_index":403,"title":{},"body":{"classes/DownloadState.html":{}}}],["ftu",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":510,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["fullscreen",{"_index":505,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{}}}],["function",{"_index":616,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["functions",{"_index":667,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funtion",{"_index":614,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":210,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["ga",{"_index":629,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["generated",{"_index":677,"title":{},"body":{"index.html":{}}}],["getactiontypefrominstance",{"_index":600,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getactiontypefrominstance(action",{"_index":641,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getcellcountmap(entries",{"_index":170,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["getrowsandcolumns",{"_index":176,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["gets",{"_index":160,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/SourceListSelectors.html":{}}}],["getsourcelist",{"_index":567,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["getsourcelist(state",{"_index":568,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["getting",{"_index":674,"title":{"index.html":{}},"body":{}}],["given",{"_index":138,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["google",{"_index":586,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["googleanalyticsservice",{"_index":603,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["gradient",{"_index":142,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["gradientlegend",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegendinfo",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientpoint",{"_index":131,"title":{"interfaces/GradientPoint.html":{}},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["group",{"_index":68,"title":{},"body":{"classes/AddEntry.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"interfaces/GradientPoint.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["guess",{"_index":385,"title":{},"body":{"classes/DownloadState.html":{}}}],["guessfilename(ctx",{"_index":386,"title":{},"body":{"classes/DownloadState.html":{}}}],["handle",{"_index":588,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handle(state",{"_index":589,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handler's",{"_index":560,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["handles",{"_index":593,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handling",{"_index":118,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/SourceListState.html":{}}}],["hasdata",{"_index":314,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["header",{"_index":494,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["helper",{"_index":559,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["highpoint",{"_index":197,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["highpoint.percentage",{"_index":199,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["hra",{"_index":64,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":358,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["httpclient",{"_index":349,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["https://base.com",{"_index":390,"title":{},"body":{"classes/DownloadState.html":{}}}],["id",{"_index":62,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ids.ts",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustration",{"_index":430,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/variables.html":{}}}],["illustration.actions",{"_index":484,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["illustration.actions.ts",{"_index":541,"title":{},"body":{"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["illustration.actions.ts:20",{"_index":544,"title":{},"body":{"classes/SetActiveNode.html":{}}}],["illustration.actions.ts:33",{"_index":550,"title":{},"body":{"classes/SetMapping.html":{}}}],["illustration.actions.ts:7",{"_index":551,"title":{},"body":{"classes/SetUri.html":{}}}],["illustration.model",{"_index":456,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["illustration.model.ts",{"_index":428,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["illustration.selectors.ts",{"_index":450,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["illustration.selectors.ts:14",{"_index":455,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["illustration.selectors.ts:22",{"_index":453,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["illustration.state",{"_index":458,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["illustration.state.ts",{"_index":462,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"miscellaneous/typealiases.html":{}}}],["illustration.state.ts:30",{"_index":480,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["illustration.state.ts:38",{"_index":470,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["illustration.state.ts:46",{"_index":476,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["illustration/medical",{"_index":427,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["illustrations",{"_index":463,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["image",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["immer",{"_index":352,"title":{},"body":{"classes/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{}}}],["implements",{"_index":326,"title":{},"body":{"classes/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"classes/Add.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set-1.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":527,"title":{},"body":{"classes/SendMessage.html":{}}}],["inferred",{"_index":700,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":232,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"injectables/ContactState.html":{},"interfaces/GradientPoint.html":{}}}],["init",{"_index":344,"title":{},"body":{"classes/DownloadState.html":{}}}],["initializes",{"_index":25,"title":{},"body":{"classes/Add.html":{},"classes/SendMessage.html":{},"classes/Set-1.html":{}}}],["inject",{"_index":298,"title":{},"body":{"injectables/ContactState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["inject(contactservice",{"_index":303,"title":{},"body":{"injectables/ContactState.html":{}}}],["inject(googleanalyticsservice",{"_index":630,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["inject(httpclient",{"_index":359,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["injectable",{"_index":115,"title":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":116,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":598,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["injectiontoken('loggable",{"_index":624,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":627,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["input",{"_index":612,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["inset",{"_index":448,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["instance",{"_index":77,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"injectables/SourceListState.html":{}}}],["interface",{"_index":219,"title":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"interfaces/ScreenModeModel.html":{},"interfaces/Source.html":{}},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"interfaces/ScreenModeModel.html":{},"classes/SendMessage.html":{},"interfaces/Source.html":{}}}],["interfaces",{"_index":220,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"interfaces/ScreenModeModel.html":{},"interfaces/Source.html":{},"overview.html":{}}}],["interpolatecolor",{"_index":121,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["interpolatecolor(points",{"_index":130,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["interpolated",{"_index":136,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["intro",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isfullscreen",{"_index":502,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["isfullscreen(state",{"_index":508,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["isprimitive",{"_index":670,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isprimitive(value",{"_index":617,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["json.stringify(action",{"_index":643,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["key",{"_index":149,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["label",{"_index":150,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":239,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{}}}],["lanading",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landing",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpage",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthdescription",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthimg",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthmoretext",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthtitle",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedescription",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroimg",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintromoretext",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagepartners",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagereadmore",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagetitle",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library",{"_index":676,"title":{},"body":{"index.html":{}}}],["link",{"_index":554,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/variables.html":{}}}],["linkid",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkregistryactions.navigate",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":12,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["list.actions",{"_index":578,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list.actions.ts",{"_index":8,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{}}}],["list.actions.ts:17",{"_index":539,"title":{},"body":{"classes/Set-1.html":{}}}],["list.actions.ts:22",{"_index":540,"title":{},"body":{"classes/Set-1.html":{}}}],["list.actions.ts:6",{"_index":24,"title":{},"body":{"classes/Add.html":{}}}],["list.model",{"_index":38,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["list.model.ts",{"_index":552,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["list.selectors.ts",{"_index":564,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["list.selectors.ts:13",{"_index":570,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["list.state",{"_index":571,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["list.state.ts",{"_index":573,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list.state.ts:20",{"_index":576,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list.state.ts:34",{"_index":577,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list/source",{"_index":7,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["logaction(action",{"_index":640,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["loggable",{"_index":606,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggable_actions",{"_index":621,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggabletypes",{"_index":633,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logged",{"_index":623,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":594,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logging",{"_index":631,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["login",{"_index":654,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs",{"_index":637,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["lowpoint",{"_index":194,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["lowpoint.percentage",{"_index":200,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["managing",{"_index":281,"title":{},"body":{"injectables/ContactState.html":{}}}],["map",{"_index":434,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"injectables/MedicalIllustrationState.html":{},"miscellaneous/variables.html":{}}}],["map((result",{"_index":491,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["mapentry",{"_index":432,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mapping",{"_index":167,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["mapping(state",{"_index":451,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["matching",{"_index":52,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.round(rgb1[0",{"_index":207,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["math.round(rgb1[1",{"_index":211,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["math.round(rgb1[2",{"_index":215,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["medical",{"_index":429,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["medicalillustration",{"_index":485,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["medicalillustrationcontext",{"_index":468,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"miscellaneous/typealiases.html":{}}}],["medicalillustrationmodel",{"_index":425,"title":{"interfaces/MedicalIllustrationModel.html":{}},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{}}}],["medicalillustrationselectors",{"_index":449,"title":{"classes/MedicalIllustrationSelectors.html":{}},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["medicalillustrationstate",{"_index":457,"title":{"injectables/MedicalIllustrationState.html":{}},"body":{"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{}}}],["message",{"_index":293,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":284,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["metadata",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":292,"title":{},"body":{"injectables/ContactState.html":{},"classes/DownloadState.html":{}}}],["methods",{"_index":92,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["metrics",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricslogo",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricstitle",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":666,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":501,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["mode.actions",{"_index":520,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.actions.ts",{"_index":533,"title":{},"body":{"classes/Set.html":{}}}],["mode.actions.ts:4",{"_index":536,"title":{},"body":{"classes/Set.html":{}}}],["mode.model",{"_index":511,"title":{},"body":{"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["mode.model.ts",{"_index":499,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["mode.selectors.ts",{"_index":507,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.selectors.ts:14",{"_index":509,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state.ts",{"_index":514,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.state.ts:22",{"_index":518,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode/screen",{"_index":498,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["model",{"_index":319,"title":{},"body":{"classes/DownloadState.html":{},"interfaces/MedicalIllustrationModel.html":{},"interfaces/ScreenModeModel.html":{}}}],["modules",{"_index":685,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":658,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":29,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["name.includes",{"_index":400,"title":{},"body":{"classes/DownloadState.html":{}}}],["name}${extension",{"_index":401,"title":{},"body":{"classes/DownloadState.html":{}}}],["needs",{"_index":648,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["new",{"_index":45,"title":{},"body":{"classes/Add.html":{},"classes/DownloadState.html":{},"injectables/ScreenModeState.html":{},"classes/Set-1.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":590,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["next(state",{"_index":636,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngx",{"_index":604,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxs",{"_index":343,"title":{},"body":{"classes/DownloadState.html":{}}}],["ngxs/store",{"_index":106,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["ngxs_plugins",{"_index":602,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["ngxsnextpluginfn",{"_index":591,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxsoninit",{"_index":327,"title":{},"body":{"classes/DownloadState.html":{}}}],["ngxsoninit(ctx",{"_index":341,"title":{},"body":{"classes/DownloadState.html":{}}}],["ngxsplugin",{"_index":601,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["node",{"_index":431,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["node_name",{"_index":440,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":618,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":133,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numbers",{"_index":246,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":678,"title":{},"body":{"index.html":{}}}],["object",{"_index":166,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["object.values(formats).filter(hasdata",{"_index":316,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["objects",{"_index":32,"title":{},"body":{"classes/Add.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"classes/Set-1.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":297,"title":{},"body":{"injectables/ContactState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["occurrences",{"_index":162,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["ones",{"_index":46,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"injectables/SourceListState.html":{}}}],["ontologyid",{"_index":441,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["organ_id",{"_index":437,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["organ_label",{"_index":436,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["overall",{"_index":223,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["overview",{"_index":686,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":659,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["papaparse",{"_index":483,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["param",{"_index":40,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":482,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["parse(result",{"_index":493,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["parsedresult",{"_index":492,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["parses",{"_index":477,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["partial",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partners",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchstate",{"_index":488,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["path",{"_index":391,"title":{},"body":{"classes/DownloadState.html":{}}}],["path.split('/').filter((seg",{"_index":395,"title":{},"body":{"classes/DownloadState.html":{}}}],["payload",{"_index":26,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["peer",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":132,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["percentages",{"_index":262,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["pipe",{"_index":490,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["plugin",{"_index":587,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["plugin.service.ts",{"_index":585,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["plugin.service.ts:51",{"_index":592,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["plugin/default",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin/state",{"_index":584,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png_format",{"_index":354,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["point",{"_index":265,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["point.percentage",{"_index":193,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["points",{"_index":141,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["points[index",{"_index":195,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["portal",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primitive",{"_index":607,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["primitive_types",{"_index":608,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["primitive_types.includes(typeof",{"_index":619,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["private",{"_index":169,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["produce",{"_index":351,"title":{},"body":{"classes/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{}}}],["produce((draft",{"_index":364,"title":{},"body":{"classes/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{}}}],["product",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productlogourl",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producttitle",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":17,"title":{"properties.html":{}},"body":{"classes/Add.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"interfaces/ScreenModeModel.html":{},"classes/Set-1.html":{},"interfaces/Source.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":556,"title":{},"body":{"interfaces/Source.html":{}}}],["provide",{"_index":656,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":625,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":599,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":622,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":538,"title":{},"body":{"classes/Set-1.html":{}}}],["r",{"_index":206,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["read",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":19,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"classes/Set-1.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["record",{"_index":178,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["ref/1",{"_index":445,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["ref/1/doi",{"_index":446,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["ref/1/notes",{"_index":447,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":71,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["registerformat",{"_index":73,"title":{"classes/RegisterFormat.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["registerformat(ctx",{"_index":346,"title":{},"body":{"classes/DownloadState.html":{}}}],["registerformat(png_format",{"_index":362,"title":{},"body":{"classes/DownloadState.html":{}}}],["registerformat(svg_format",{"_index":361,"title":{},"body":{"classes/DownloadState.html":{}}}],["registry",{"_index":345,"title":{},"body":{"classes/DownloadState.html":{}}}],["removes",{"_index":42,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"injectables/SourceListState.html":{}}}],["representation_of",{"_index":442,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["representing",{"_index":236,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{}}}],["res",{"_index":174,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["res[id",{"_index":173,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["resetting",{"_index":48,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"injectables/SourceListState.html":{}}}],["resource",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetype",{"_index":424,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["rest",{"_index":258,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":51,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":565,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["return",{"_index":112,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceListSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["returns",{"_index":102,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["rgb1",{"_index":202,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb1[0",{"_index":209,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb1[1",{"_index":213,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb1[2",{"_index":217,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb2",{"_index":204,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb2[0",{"_index":208,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb2[1",{"_index":212,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rgb2[2",{"_index":216,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["root",{"_index":626,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":191,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{}}}],["row.length",{"_index":192,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rowid",{"_index":179,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rowlabel",{"_index":180,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["rows",{"_index":155,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["rows[rowid",{"_index":189,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["run",{"_index":682,"title":{},"body":{"index.html":{}}}],["running",{"_index":679,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":300,"title":{},"body":{"injectables/ContactState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["save",{"_index":417,"title":{},"body":{"classes/DownloadState.html":{}}}],["schema",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":500,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["screenmode",{"_index":521,"title":{},"body":{"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["screenmodemodel",{"_index":496,"title":{"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screenmodeselectors",{"_index":506,"title":{"classes/ScreenModeSelectors.html":{}},"body":{"classes/ScreenModeSelectors.html":{}}}],["screenmodestate",{"_index":513,"title":{"injectables/ScreenModeState.html":{}},"body":{"injectables/ScreenModeState.html":{}}}],["seg",{"_index":396,"title":{},"body":{"classes/DownloadState.html":{}}}],["segments",{"_index":394,"title":{},"body":{"classes/DownloadState.html":{}}}],["segments.length",{"_index":397,"title":{},"body":{"classes/DownloadState.html":{}}}],["segments[segments.length",{"_index":399,"title":{},"body":{"classes/DownloadState.html":{}}}],["selected",{"_index":433,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{}}}],["selectedformat",{"_index":85,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["selector",{"_index":105,"title":{},"body":{"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceListSelectors.html":{}}}],["selector(['cellsummarystate",{"_index":98,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector(['medicalillustrationstate",{"_index":452,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["selector(['sourceliststate",{"_index":569,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["selector([cellsummarystate",{"_index":111,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector([medicalillustrationstate",{"_index":459,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["selector([sourceliststate",{"_index":572,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["selectors",{"_index":90,"title":{},"body":{"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/ScreenModeSelectors.html":{}}}],["send",{"_index":295,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sending",{"_index":283,"title":{},"body":{"injectables/ContactState.html":{}}}],["sendmessage",{"_index":287,"title":{"classes/SendMessage.html":{}},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sendmessage(_ctx",{"_index":288,"title":{},"body":{"injectables/ContactState.html":{}}}],["sends",{"_index":526,"title":{},"body":{"classes/SendMessage.html":{}}}],["serialize",{"_index":613,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["serialize(this",{"_index":650,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serialized",{"_index":649,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serializes",{"_index":647,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["service",{"_index":628,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["set",{"_index":49,"title":{"classes/Set.html":{},"classes/Set-1.html":{}},"body":{"classes/Add.html":{},"classes/ComputeAggregate.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"injectables/SourceListState.html":{}}}],["set(inject(loggable_actions).map(getactiontypefrominstance",{"_index":634,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["set(undefined",{"_index":516,"title":{},"body":{"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{}}}],["setactivenode",{"_index":464,"title":{"classes/SetActiveNode.html":{}},"body":{"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["setactivenode(undefined",{"_index":467,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["setdata",{"_index":275,"title":{"classes/SetData.html":{}},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["setmapping",{"_index":465,"title":{"classes/SetMapping.html":{}},"body":{"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["setmapping(undefined",{"_index":472,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["sets",{"_index":277,"title":{},"body":{"classes/ComputeAggregate.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetData.html":{}}}],["setstate",{"_index":487,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{}}}],["setstate(sourcelist",{"_index":580,"title":{},"body":{"injectables/SourceListState.html":{}}}],["setting",{"_index":542,"title":{},"body":{"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["seturi",{"_index":466,"title":{"classes/SetUri.html":{}},"body":{"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["seturi(undefined",{"_index":478,"title":{},"body":{"injectables/MedicalIllustrationState.html":{}}}],["shape",{"_index":224,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["show",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["single",{"_index":233,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":259,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["sizelegend",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sizelegendinfo",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{"interfaces/Source.html":{}},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["source_spatial_entity",{"_index":439,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["sourcelist",{"_index":14,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["sourcelistcontext",{"_index":562,"title":{},"body":{"interfaces/Source.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["sourcelistmodel",{"_index":558,"title":{},"body":{"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["sourcelistselectors",{"_index":563,"title":{"classes/SourceListSelectors.html":{}},"body":{"classes/SourceListSelectors.html":{}}}],["sourceliststate",{"_index":566,"title":{"injectables/SourceListState.html":{}},"body":{"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["sources",{"_index":13,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["specific",{"_index":264,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["specified",{"_index":340,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/.../builtin",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cell",{"_index":694,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.action.ts",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.model.ts",{"_index":669,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../link",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../medical",{"_index":695,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../source",{"_index":696,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../state",{"_index":671,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cell",{"_index":87,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.actions.ts",{"_index":525,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.actions.ts:5",{"_index":531,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.state.ts",{"_index":280,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/contact/contact.state.ts:16",{"_index":291,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/download/builtin",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts",{"_index":54,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts:10",{"_index":495,"title":{},"body":{"classes/RegisterFormat.html":{}}}],["src/lib/download/download.action.ts:23",{"_index":60,"title":{},"body":{"classes/AddEntry.html":{}}}],["src/lib/download/download.action.ts:38",{"_index":306,"title":{},"body":{"classes/Download.html":{}}}],["src/lib/download/download.model.ts",{"_index":672,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.selectors.ts",{"_index":308,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.selectors.ts:14",{"_index":313,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.state.ts",{"_index":318,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/download/download.state.ts:33",{"_index":342,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/download/download.state.ts:43",{"_index":348,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/download/download.state.ts:57",{"_index":331,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/download/download.state.ts:70",{"_index":334,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/download/download.state.ts:84",{"_index":338,"title":{},"body":{"classes/DownloadState.html":{}}}],["src/lib/link",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/medical",{"_index":426,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/resource",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/screen",{"_index":497,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["src/lib/source",{"_index":6,"title":{},"body":{"classes/Add.html":{},"classes/Set-1.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/state",{"_index":582,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":675,"title":{"index.html":{}},"body":{}}],["state",{"_index":15,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set-1.html":{},"classes/SetData.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.aggregate",{"_index":113,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state.isfullscreen",{"_index":512,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["state.mapping",{"_index":461,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["state.summaries",{"_index":114,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state.url",{"_index":460,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["state_logger_provider",{"_index":655,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["stateanalyticspluginservice",{"_index":581,"title":{"injectables/StateAnalyticsPluginService.html":{}},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["statecontext",{"_index":123,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/ScreenModeState.html":{},"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["static",{"_index":18,"title":{},"body":{"classes/Add.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set-1.html":{},"classes/SourceListSelectors.html":{}}}],["store",{"_index":268,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["stores",{"_index":127,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["storing",{"_index":515,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["string",{"_index":34,"title":{},"body":{"classes/Add.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":254,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":553,"title":{},"body":{"interfaces/Source.html":{}}}],["submitted",{"_index":528,"title":{},"body":{"classes/SendMessage.html":{}}}],["submitting",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summaries",{"_index":94,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{}}}],["summaries(state",{"_index":103,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summaries[key].entries",{"_index":152,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summaries[key].label",{"_index":151,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary",{"_index":119,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{}}}],["summary.actions",{"_index":144,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.actions.ts",{"_index":266,"title":{},"body":{"classes/ComputeAggregate.html":{},"classes/SetData.html":{},"miscellaneous/variables.html":{}}}],["summary.actions.ts:20",{"_index":270,"title":{},"body":{"classes/ComputeAggregate.html":{}}}],["summary.actions.ts:9",{"_index":548,"title":{},"body":{"classes/SetData.html":{}}}],["summary.model",{"_index":108,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregate.html":{},"classes/SetData.html":{}}}],["summary.model.ts",{"_index":221,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summary.selectors.ts",{"_index":89,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:15",{"_index":104,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:9",{"_index":99,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state",{"_index":110,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state.ts",{"_index":117,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:114",{"_index":134,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:20",{"_index":125,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary/cell",{"_index":88,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":78,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["svg",{"_index":322,"title":{},"body":{"classes/DownloadState.html":{},"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["svg_format",{"_index":355,"title":{},"body":{"classes/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":370,"title":{},"body":{"classes/DownloadState.html":{}}}],["table",{"_index":229,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{}}}],["tap",{"_index":353,"title":{},"body":{"classes/DownloadState.html":{}}}],["test",{"_index":683,"title":{},"body":{"index.html":{}}}],["tests",{"_index":681,"title":{},"body":{"index.html":{}}}],["text",{"_index":489,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"miscellaneous/variables.html":{}}}],["this.contact.sendmessage(message",{"_index":304,"title":{},"body":{"injectables/ContactState.html":{}}}],["this.downloaddata(data",{"_index":378,"title":{},"body":{"classes/DownloadState.html":{}}}],["this.downloaddata(new",{"_index":379,"title":{},"body":{"classes/DownloadState.html":{}}}],["this.downloadremotedata(entry.url).pipe(tap((data",{"_index":377,"title":{},"body":{"classes/DownloadState.html":{}}}],["this.ga.event(type",{"_index":645,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.getcellcountmap(entries",{"_index":154,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.getrowsandcolumns(entries",{"_index":157,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.guessfilename(ctx",{"_index":375,"title":{},"body":{"classes/DownloadState.html":{}}}],["this.hextorgb(highpoint.color",{"_index":205,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.hextorgb(lowpoint.color",{"_index":203,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.http.get(url",{"_index":423,"title":{},"body":{"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{}}}],["this.logaction(action",{"_index":635,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.loggabletypes.has(type",{"_index":642,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.rgbtohex([r",{"_index":218,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.serialize",{"_index":644,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["throw",{"_index":382,"title":{},"body":{"classes/DownloadState.html":{}}}],["title",{"_index":555,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":620,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tooltip",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform((id",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformed",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigerred",{"_index":638,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["true",{"_index":475,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["tuple([z.string",{"_index":256,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":140,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/Add.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/Set-1.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":692,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":651,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["types",{"_index":227,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["types.ts",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":698,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typings",{"_index":435,"title":{},"body":{"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["ui/cdk/state",{"_index":65,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/ComputeAggregate.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetActiveNode.html":{},"classes/SetData.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["ui/services",{"_index":299,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["undefined",{"_index":289,"title":{},"body":{"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"classes/DownloadState.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["union",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unique",{"_index":164,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["unit",{"_index":680,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":595,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["update",{"_index":534,"title":{},"body":{"classes/Set.html":{}}}],["updates",{"_index":519,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["uri",{"_index":481,"title":{},"body":{"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{}}}],["url",{"_index":373,"title":{},"body":{"classes/DownloadState.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/MedicalIllustrationSelectors.html":{},"injectables/MedicalIllustrationState.html":{},"classes/SetActiveNode.html":{},"classes/SetMapping.html":{},"classes/SetUri.html":{},"miscellaneous/variables.html":{}}}],["url(state",{"_index":454,"title":{},"body":{"classes/MedicalIllustrationSelectors.html":{}}}],["url(url",{"_index":392,"title":{},"body":{"classes/DownloadState.html":{}}}],["used",{"_index":320,"title":{},"body":{"classes/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":657,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":325,"title":{},"body":{"classes/DownloadState.html":{},"classes/SendMessage.html":{}}}],["uses",{"_index":294,"title":{},"body":{"injectables/ContactState.html":{}}}],["using",{"_index":285,"title":{},"body":{"injectables/ContactState.html":{}}}],["value",{"_index":36,"title":{},"body":{"classes/Add.html":{},"injectables/CellSummaryState.html":{},"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"classes/Set-1.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.every(isprimitive",{"_index":653,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["values",{"_index":240,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/typealiases.html":{}}}],["variable",{"_index":302,"title":{},"body":{"injectables/ContactState.html":{}}}],["variables",{"_index":705,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":690,"title":{},"body":{"properties.html":{}}}],["void",{"_index":129,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/DownloadState.html":{},"injectables/MedicalIllustrationState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceListState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["whether",{"_index":504,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["window.url.createobjecturl(blob",{"_index":407,"title":{},"body":{"classes/DownloadState.html":{}}}],["window.url.revokeobjecturl(url",{"_index":415,"title":{},"body":{"classes/DownloadState.html":{}}}],["without",{"_index":384,"title":{},"body":{"classes/DownloadState.html":{}}}],["yes",{"_index":545,"title":{},"body":{"classes/SetActiveNode.html":{},"classes/SetUri.html":{}}}],["z",{"_index":234,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/SetData.html":{},"miscellaneous/variables.html":{}}}],["z.discriminatedunion('type",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":237,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/SetData.html":{},"miscellaneous/typealiases.html":{}}}],["z.literal('data",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal('url",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number",{"_index":249,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["z.number().optional",{"_index":257,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":247,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["z.record",{"_index":251,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["z.record(download_format_id",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":248,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":255,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"interfaces/GradientPoint.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":235,"title":{},"body":{"interfaces/CellSummaryStateModel.html":{},"classes/ComputeAggregate.html":{},"interfaces/GradientPoint.html":{},"interfaces/MedicalIllustrationModel.html":{},"classes/SetData.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Add.html":{"url":"classes/Add.html","title":"class - Add","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Add\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                action of adding a list of sources to the SourceList state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: Source[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-list/source-list.actions.ts:6\n                            \n                        \n\n                \n                    \n                            Initializes the payload for the action\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        Source[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                array of Source objects to be added to the state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SourceList] Add'\n                    \n                \n                    \n                        \n                                Defined in src/lib/source-list/source-list.actions.ts:6\n                        \n                    \n\n            \n                \n                    Action Type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Source } from './source-list.model';\n\n/** action of adding a list of sources to the SourceList state */\nexport class Add {\n  /** Action Type  */\n  static readonly type = '[SourceList] Add';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of Source objects to be added to the state\n   */\n  constructor(readonly sourceList: Source[]) {}\n}\n\n/** An action that removes all current sources and adds new ones, effectively resetting the state */\nexport class Set {\n  /** Action Type  */\n  static readonly type = '[SourceList] Set';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of source objects to be set as the new state\n   */\n  constructor(public sourceList: Source[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddEntry.html":{"url":"classes/AddEntry.html","title":"class - AddEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Add entry into download state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: DownloadFormatId, entry: DownloadEntry)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor for Addd Entry\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        DownloadEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellSummarySelectors.html":{"url":"classes/CellSummarySelectors.html","title":"class - CellSummarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellSummarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for the CellSummary state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                aggregates\n                            \n                            \n                                    Static\n                                summaries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        aggregates\n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregates(state: CellSummaryStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:9\n                \n            \n\n\n            \n                \n                    get the aggregate data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Aggregate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        summaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    summaries(state: CellSummaryStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:15\n                \n            \n\n\n            \n                \n                    get the summaries data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummary\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { Aggregate, CellSummaryStateModel, CellSummary } from './cell-summary.model';\nimport { CellSummaryState } from './cell-summary.state';\n\n/** selectors for the CellSummary state */\nexport class CellSummarySelectors {\n  /** get the aggregate data from the state */\n  @Selector([CellSummaryState])\n  static aggregates(state: CellSummaryStateModel): Aggregate {\n    return state.aggregate;\n  }\n\n  /** get the summaries data from the state */\n  @Selector([CellSummaryState])\n  static summaries(state: CellSummaryStateModel): CellSummary {\n    return state.summaries;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CellSummaryState.html":{"url":"injectables/CellSummaryState.html","title":"injectable - CellSummaryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CellSummaryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling cell summary data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeAggregate\n                            \n                            \n                                interpolateColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        computeAggregate\n                        \n                    \n                \n            \n            \n                \ncomputeAggregate(ctx: StateContext, action: ComputeAggregate)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ComputeAggregate)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:20\n                \n            \n\n\n            \n                \n                    computes aggregate data and stores in the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ComputeAggregate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interpolateColor\n                        \n                    \n                \n            \n            \n                \ninterpolateColor(points: GradientPoint[], percentage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:114\n                \n            \n\n\n            \n                \n                    Calculates the interpolated color value at the given percentage between two points in a color gradient.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n                                    \n                                                GradientPoint[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { ComputeAggregate } from './cell-summary.actions';\nimport { Aggregate, AggregateRow, CellSummary, CellSummaryStateModel, GradientPoint } from './cell-summary.model';\n\n/** State handling cell summary data */\n@State({\n  name: 'cellsummary',\n  defaults: {\n    summaries: {},\n    aggregate: {},\n  },\n})\n@Injectable()\nexport class CellSummaryState {\n  /**\n   * computes aggregate data and stores in the current state\n   */\n  @Action(ComputeAggregate)\n  computeAggregate(ctx: StateContext, action: ComputeAggregate): void {\n    const summaries = action.summaries;\n    const aggregateData: Aggregate = {};\n\n    for (const key in summaries) {\n      const label = summaries[key].label;\n      const entries = summaries[key].entries;\n\n      const counts = this.getCellCountMap(entries);\n\n      const [rows, columns] = this.getRowsAndColumns(entries, counts);\n\n      aggregateData[key] = {\n        label: label,\n        columns: columns,\n        rows: rows,\n      };\n    }\n\n    ctx.patchState({\n      aggregate: aggregateData,\n    });\n  }\n\n  /** Gets a count of the number of occurrences of each unique cellId in an array of entries,\n   * and returns an object mapping each cellId to its corresponding count. */\n  private getCellCountMap(entries: CellSummary[string]['entries']): { [key: string]: number } {\n    return entries.reduce>((res, { cell: { id }, count }) => {\n      res[id] = res[id] ? res[id] + count : count;\n      return res;\n    }, {});\n  }\n\n  /** Returns an array of rows and columns based on an array of entries */\n  private getRowsAndColumns(\n    entries: CellSummary[string]['entries'],\n    counts: { [key: string]: number }\n  ): [rows: AggregateRow[], columns: string[]] {\n    const columns: string[] = [];\n    const columnIndices: Record = {};\n    const rows: Record = {};\n\n    for (const entry of entries) {\n      const {\n        cell: { id: rowId, label: rowLabel },\n        biomarker: { id: columnId, label: columnLabel },\n      } = entry;\n\n      if (!(columnId in columnIndices)) {\n        columnIndices[columnId] = columns.length + 2;\n        columns.push(columnLabel);\n      }\n      const columnIndex = columnIndices[columnId];\n\n      if (!(rowId in rows)) {\n        rows[rowId] = [rowLabel, counts[rowId]];\n      }\n      const row = rows[rowId];\n\n      if (row.length  point.percentage >= percentage);\n    const lowPoint = points[index - 1];\n    const highPoint = points[index];\n    const diff = highPoint.percentage - lowPoint.percentage;\n    const finalPercentage = (percentage - lowPoint.percentage) / diff;\n\n    const rgb1 = this.hexToRgb(lowPoint.color);\n    const rgb2 = this.hexToRgb(highPoint.color);\n\n    const r = Math.round(rgb1[0] + (rgb2[0] - rgb1[0]) * finalPercentage);\n    const g = Math.round(rgb1[1] + (rgb2[1] - rgb1[1]) * finalPercentage);\n    const b = Math.round(rgb1[2] + (rgb2[2] - rgb1[2]) * finalPercentage);\n\n    return this.rgbToHex([r, g, b]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CellSummaryStateModel.html":{"url":"interfaces/CellSummaryStateModel.html","title":"interface - CellSummaryStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CellSummaryStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.model.ts\n        \n\n\n            \n                Description\n            \n            \n                The CellSummaryStateModel interface describes the overall shape of the state for this feature.\nIt has two properties, summaries and aggregate, both of which are of their corresponding types.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aggregate\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aggregate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggregate:         Aggregate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Aggregate\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object where each entry contains a label and a table of aggregated data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:         CellSummary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CellSummary\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object where each entry is an object containing information about a single cell and its corresponding biomarker.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { z } from 'zod';\n\n/** Type representing a single cell value */\nexport type Cell = z.infer;\n/** Type representing CELL_SUMMARY_SCHEMA which has labels and entries */\nexport type CellSummary = z.infer;\n/** Type representing an aggregate summary of cell values in a group */\nexport type Aggregate = z.infer;\n/** Type representing a row in an aggregate summary */\nexport type AggregateRow = Aggregate[string]['rows'][number];\n/** Type representing a single entry in a row with cell, biomarker, count and percentage */\nexport type AggregateRowEntry = AggregateRow[2];\n\n/**\n * The CellSummaryStateModel interface describes the overall shape of the state for this feature.\n * It has two properties, summaries and aggregate, both of which are of their corresponding types.\n */\nexport interface CellSummaryStateModel {\n  /** An object where each entry is an object containing information about a single cell and its corresponding biomarker. */\n  summaries: CellSummary;\n  /** An object where each entry contains a label and a table of aggregated data */\n  aggregate: Aggregate;\n}\n\n/**\n * The CELL_SCHEMA has an object that contains an id and a label for the cell,\n * another object that contains an id and a label for the biomarker, and a count and a percentage that are both numbers.\n */\nexport const CELL_SCHEMA = z.object({\n  cell: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  biomarker: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  count: z.number(),\n  percentage: z.number(),\n});\n\n/**\n * The CELL_SUMMARY_SCHEMA constant is a record of CellSummary objects,\n * where each CellSummary object contains a label and an array of CELL_SCHEMA objects.\n */\nexport const CELL_SUMMARY_SCHEMA = z.record(\n  z.object({\n    label: z.string(),\n    entries: CELL_SCHEMA.array(),\n  })\n);\n\n/**\n * The CELL_SUMMARY_AGGREGATE_SCHEMA is a record of Aggregate objects, where each Aggregate object contains a label,\n * an array of columns that are strings, and an array of rows that are AggregateRow objects.\n */\nexport const CELL_SUMMARY_AGGREGATE_SCHEMA = z.record(\n  z.object({\n    label: z.string(),\n    columns: z.string().array(),\n    rows: z\n      .tuple([z.string(), z.number().optional()])\n      .rest(\n        z\n          .object({\n            color: z.string(),\n            size: z.number(),\n            data: CELL_SCHEMA,\n          })\n          .optional()\n      )\n      .array(),\n  })\n);\n\n/** An interface of gradient colors along with their percentages for the gradient bar. */\nexport interface GradientPoint {\n  /** Gradient color at a specific percentage */\n  color: string;\n  /** Percentage point along the gradient bar */\n  percentage: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearEntries.html":{"url":"classes/ClearEntries.html","title":"class - ClearEntries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearEntries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Clear all entries from download state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComputeAggregate.html":{"url":"classes/ComputeAggregate.html","title":"class - ComputeAggregate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComputeAggregate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Compute aggregate of the given data and store to state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(summaries: z.infer<>)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cell-summary/cell-summary.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Defines the ComputeAggregate action, which computes aggregate data for the given summaries.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        summaries\n                                                  \n                                                        \n                                                                    z.infer<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe cell summary data to compute aggregate for.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { z } from 'zod';\nimport { CELL_SUMMARY_SCHEMA } from './cell-summary.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Set data to store */\nexport class SetData extends Action('SetData') {\n  /**\n   * Defines the SetData action, which sets data to the store.\n   * @param data - The data to set to the store.\n   */\n  constructor(readonly data: object) {\n    super();\n  }\n}\n\n/** Compute aggregate of the given data and store to state */\nexport class ComputeAggregate extends Action('ComputeAggregate') {\n  /**\n   * Defines the ComputeAggregate action, which computes aggregate data for the given summaries.\n   * @param summaries - The cell summary data to compute aggregate for.\n   */\n  constructor(readonly summaries: z.infer) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactState.html":{"url":"injectables/ContactState.html","title":"injectable - ContactState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact'\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(_ctx: StateContext, undefined: SendMessage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SendMessage)\n                \n            \n\n            \n                \n                    Defined in src/lib/contact/contact.state.ts:16\n                \n            \n\n\n            \n                \n                    An action method for sending a message. It uses SendMessage action class to send messages.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SendMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { ContactService } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SendMessage } from './contact.actions';\n\n/** A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact' */\n@State({ name: 'contact' })\n@Injectable()\nexport class ContactState {\n  /** A variable to inject the ContactService */\n  private readonly contact = inject(ContactService);\n\n  /** An action method for sending a message. It uses SendMessage action class to send messages. */\n  @Action(SendMessage)\n  sendMessage(_ctx: StateContext, { message }: SendMessage): Observable {\n    return this.contact.sendMessage(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Download.html":{"url":"classes/Download.html","title":"class - Download","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Download\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Download file Action\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormatId)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of download.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DownloadSelectors.html":{"url":"classes/DownloadSelectors.html","title":"class - DownloadSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Available format selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                formats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        formats\n                        \n                    \n                \n            \n            \n                \n                    \n                    formats(state: DownloadModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Selectors available format for download selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                DownloadModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormat[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { DownloadFormat, DownloadModel } from './download.model';\n\n/**\n * Available format selectors\n */\nexport class DownloadSelectors {\n  /**\n   * Selectors available format for download selectors\n   * @param state\n   * @returns\n   */\n  @Selector()\n  static formats(state: DownloadModel): DownloadFormat[] {\n    const { formats, entries } = state;\n    const hasData = (format: DownloadFormat | undefined): format is DownloadFormat =>\n      !!(format && format.id in entries);\n    return Object.values(formats).filter(hasData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DownloadState.html":{"url":"classes/DownloadState.html","title":"class - DownloadState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Download State Model used to convert\nfile from SVG file content to different\nformat and download to user.\n\n            \n\n\n            \n                Implements\n            \n            \n                        NgxsOnInit\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEntry\n                            \n                            \n                                clearEntries\n                            \n                            \n                                download\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                registerFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEntry\n                        \n                    \n                \n            \n            \n                \naddEntry(ctx: DownloadContext, undefined: AddEntry)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddEntry)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:57\n                \n            \n\n\n            \n                \n                    Add entry into download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                AddEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearEntries\n                        \n                    \n                \n            \n            \n                \nclearEntries(ctx: DownloadContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearEntries)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:70\n                \n            \n\n\n            \n                \n                    Clear entires from download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        download\n                        \n                    \n                \n            \n            \n                \ndownload(ctx: DownloadContext, undefined: Download)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Download)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:84\n                \n            \n\n\n            \n                \n                    Actions download file in specified format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Download\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: DownloadContext)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/download/download.state.ts:33\n                \n            \n\n\n            \n                \n                    Ngxs on init and registry default format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFormat\n                        \n                    \n                \n            \n            \n                \nregisterFormat(ctx: DownloadContext, undefined: RegisterFormat)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RegisterFormat)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:43\n                \n            \n\n\n            \n                \n                    Actions register format in Download State\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                RegisterFormat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { Action, NgxsOnInit, State } from '@ngxs/store';\nimport produce from 'immer';\nimport { Observable, tap } from 'rxjs';\n\nimport { PNG_FORMAT, SVG_FORMAT } from './builtin-formats';\nimport { AddEntry, ClearEntries, Download, RegisterFormat } from './download.action';\nimport { DownloadContext, DownloadFormatId, DownloadModel } from './download.model';\n\n/**\n * Download State Model used to convert\n * file from SVG file content to different\n * format and download to user.\n */\n@State({\n  name: 'download',\n  defaults: {\n    formats: {},\n    entries: {},\n  },\n})\nexport class DownloadState implements NgxsOnInit {\n  /**\n   * Http object inject for download state\n   */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Ngxs on init and registry default format\n   * @param ctx\n   */\n  ngxsOnInit(ctx: DownloadContext): void {\n    ctx.dispatch([new RegisterFormat(SVG_FORMAT), new RegisterFormat(PNG_FORMAT)]);\n  }\n\n  /**\n   * Actions register format in Download State\n   * @param ctx\n   * @param { format }\n   */\n  @Action(RegisterFormat)\n  registerFormat(ctx: DownloadContext, { format }: RegisterFormat): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.formats[format.id] = format;\n      })\n    );\n  }\n\n  /**\n   * Add entry into download state\n   * @param ctx\n   * @param { id, entry }\n   */\n  @Action(AddEntry)\n  addEntry(ctx: DownloadContext, { id, entry }: AddEntry): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries[id] = entry;\n      })\n    );\n  }\n\n  /**\n   * Clear entires from download state\n   * @param ctx\n   */\n  @Action(ClearEntries)\n  clearEntries(ctx: DownloadContext): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries = {};\n      })\n    );\n  }\n\n  /**\n   * Actions download file in specified format\n   * @param ctx\n   * @param action\n   */\n  @Action(Download)\n  download(ctx: DownloadContext, { format }: Download): Observable | void {\n    const { entries } = ctx.getState();\n    const entry = entries[format];\n    switch (entry?.type) {\n      case 'url': {\n        const filename = this.guessFilename(ctx, format, entry.url);\n        return this.downloadRemoteData(entry.url).pipe(tap((data) => this.downloadData(data, filename)));\n      }\n\n      case 'data': {\n        const filename = this.guessFilename(ctx, format, '');\n        this.downloadData(new Blob([entry.data]), filename);\n        break;\n      }\n\n      default:\n        throw new Error('Cannot download file without data');\n    }\n  }\n\n  /**\n   * Guess filename\n   * @param ctx\n   * @param id\n   * @param url\n   * @returns filename\n   */\n  private guessFilename(ctx: DownloadContext, id: DownloadFormatId, url: string): string {\n    const { formats } = ctx.getState();\n    const { extension = '' } = formats[id] ?? {};\n    const fakeBase = 'https://base.com';\n    const path = new URL(url, fakeBase).pathname;\n    const segments = path.split('/').filter((seg) => seg !== '');\n    const name = segments.length > 0 ? segments[segments.length - 1] : 'download';\n    const guess = name.includes('.') ? name : `${name}${extension}`;\n\n    return guess;\n  }\n\n  /**\n   * Download converted formatted file to browser\n   * @param blob\n   * @param fileName\n   */\n  private downloadData(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n    anchor.download = filename;\n    anchor.href = url;\n    anchor.click();\n    anchor.remove();\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Downloads and save -  method is used to direct fetch file\n   * if available on url without conversion\n   * @param fileUrl\n   * @param fileName\n   */\n  private downloadRemoteData(url: string): Observable {\n    return this.http.get(url, { responseType: 'blob' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GradientPoint.html":{"url":"interfaces/GradientPoint.html","title":"interface - GradientPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GradientPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.model.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface of gradient colors along with their percentages for the gradient bar.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            percentage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gradient color at a specific percentage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Percentage point along the gradient bar\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { z } from 'zod';\n\n/** Type representing a single cell value */\nexport type Cell = z.infer;\n/** Type representing CELL_SUMMARY_SCHEMA which has labels and entries */\nexport type CellSummary = z.infer;\n/** Type representing an aggregate summary of cell values in a group */\nexport type Aggregate = z.infer;\n/** Type representing a row in an aggregate summary */\nexport type AggregateRow = Aggregate[string]['rows'][number];\n/** Type representing a single entry in a row with cell, biomarker, count and percentage */\nexport type AggregateRowEntry = AggregateRow[2];\n\n/**\n * The CellSummaryStateModel interface describes the overall shape of the state for this feature.\n * It has two properties, summaries and aggregate, both of which are of their corresponding types.\n */\nexport interface CellSummaryStateModel {\n  /** An object where each entry is an object containing information about a single cell and its corresponding biomarker. */\n  summaries: CellSummary;\n  /** An object where each entry contains a label and a table of aggregated data */\n  aggregate: Aggregate;\n}\n\n/**\n * The CELL_SCHEMA has an object that contains an id and a label for the cell,\n * another object that contains an id and a label for the biomarker, and a count and a percentage that are both numbers.\n */\nexport const CELL_SCHEMA = z.object({\n  cell: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  biomarker: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  count: z.number(),\n  percentage: z.number(),\n});\n\n/**\n * The CELL_SUMMARY_SCHEMA constant is a record of CellSummary objects,\n * where each CellSummary object contains a label and an array of CELL_SCHEMA objects.\n */\nexport const CELL_SUMMARY_SCHEMA = z.record(\n  z.object({\n    label: z.string(),\n    entries: CELL_SCHEMA.array(),\n  })\n);\n\n/**\n * The CELL_SUMMARY_AGGREGATE_SCHEMA is a record of Aggregate objects, where each Aggregate object contains a label,\n * an array of columns that are strings, and an array of rows that are AggregateRow objects.\n */\nexport const CELL_SUMMARY_AGGREGATE_SCHEMA = z.record(\n  z.object({\n    label: z.string(),\n    columns: z.string().array(),\n    rows: z\n      .tuple([z.string(), z.number().optional()])\n      .rest(\n        z\n          .object({\n            color: z.string(),\n            size: z.number(),\n            data: CELL_SCHEMA,\n          })\n          .optional()\n      )\n      .array(),\n  })\n);\n\n/** An interface of gradient colors along with their percentages for the gradient bar. */\nexport interface GradientPoint {\n  /** Gradient color at a specific percentage */\n  color: string;\n  /** Percentage point along the gradient bar */\n  percentage: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MedicalIllustrationModel.html":{"url":"interfaces/MedicalIllustrationModel.html","title":"interface - MedicalIllustrationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MedicalIllustrationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for medical illustration model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mapping\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            node\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapping:         MapEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapEntry[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Mapping info\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:         MapEntry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapEntry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Current selected node\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Illustration URL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { z } from 'zod';\n\n/** Map Entry typings */\nconst mapEntry = z.object({\n  organ_label: z.string(),\n  organ_id: z.string(),\n  anatomical_structure_of: z.string(),\n  source_spatial_entity: z.string(),\n  node_name: z.string(),\n  label: z.string(),\n  OntologyID: z.string(),\n  representation_of: z.string(),\n  'svg file of single 2DFTU': z.string(),\n  exist_asctb: z.string(),\n  type: z.string(),\n  'REF/1': z.string(),\n  'REF/1/DOI': z.string(),\n  'REF/1/NOTES': z.string(),\n  'Inset #': z.string(),\n});\n\nexport type MapEntry = z.infer;\n\n/** Interface for medical illustration model */\nexport interface MedicalIllustrationModel {\n  /** Illustration URL */\n  url?: string;\n  /** Current selected node */\n  node?: MapEntry;\n  /** Mapping info */\n  mapping?: MapEntry[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MedicalIllustrationSelectors.html":{"url":"classes/MedicalIllustrationSelectors.html","title":"class - MedicalIllustrationSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MedicalIllustrationSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for medical illustration\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapping\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapping(state: MedicalIllustrationModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['MedicalIllustrationState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/medical-illustration/medical-illustration.selectors.ts:22\n                \n            \n\n\n            \n                \n                    Returns current mapping file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                MedicalIllustrationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MapEntry[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(state: MedicalIllustrationModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['MedicalIllustrationState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/medical-illustration/medical-illustration.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Returns illustration url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                MedicalIllustrationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\n\nimport { MapEntry, MedicalIllustrationModel } from './medical-illustration.model';\nimport { MedicalIllustrationState } from './medical-illustration.state';\n\n/**\n * Selectors for medical illustration\n */\nexport class MedicalIllustrationSelectors {\n  /**\n   * Returns illustration url\n   */\n  @Selector([MedicalIllustrationState])\n  static url(state: MedicalIllustrationModel): string | undefined {\n    return state.url;\n  }\n\n  /**\n   * Returns current mapping file\n   */\n  @Selector([MedicalIllustrationState])\n  static mapping(state: MedicalIllustrationModel): MapEntry[] {\n    return state.mapping ?? [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MedicalIllustrationState.html":{"url":"injectables/MedicalIllustrationState.html","title":"injectable - MedicalIllustrationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MedicalIllustrationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling medical illustrations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActiveNode\n                            \n                            \n                                setMapping\n                            \n                            \n                                setUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActiveNode\n                        \n                    \n                \n            \n            \n                \nsetActiveNode(undefined: MedicalIllustrationContext, undefined: SetActiveNode)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetActiveNode)\n                \n            \n\n            \n                \n                    Defined in src/lib/medical-illustration/medical-illustration.state.ts:38\n                \n            \n\n\n            \n                \n                    Sets active node\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                MedicalIllustrationContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetActiveNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMapping\n                        \n                    \n                \n            \n            \n                \nsetMapping(undefined: MedicalIllustrationContext, undefined: SetMapping)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetMapping, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/medical-illustration/medical-illustration.state.ts:46\n                \n            \n\n\n            \n                \n                    Parses and sets mapping info\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                MedicalIllustrationContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetMapping\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUri\n                        \n                    \n                \n            \n            \n                \nsetUri(undefined: MedicalIllustrationContext, undefined: SetUri)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetUri)\n                \n            \n\n            \n                \n                    Defined in src/lib/medical-illustration/medical-illustration.state.ts:30\n                \n            \n\n\n            \n                \n                    Sets illustration URI\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                MedicalIllustrationContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetUri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { parse } from 'papaparse';\nimport { map, Observable } from 'rxjs';\n\nimport { SetActiveNode, SetMapping, SetUri } from './medical-illustration.actions';\nimport { MedicalIllustrationModel, MapEntry } from './medical-illustration.model';\n\nexport type MedicalIllustrationContext = StateContext;\n\n/**\n * State handling medical illustrations\n */\n@State({\n  name: 'medicalIllustration',\n  defaults: {},\n})\n@Injectable()\nexport class MedicalIllustrationState {\n  /**\n   * Http client\n   */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Sets illustration URI\n   */\n  @Action(SetUri)\n  setUri({ setState }: MedicalIllustrationContext, { url }: SetUri) {\n    setState({ url: url, node: undefined });\n  }\n\n  /**\n   * Sets active node\n   */\n  @Action(SetActiveNode)\n  setActiveNode({ patchState }: MedicalIllustrationContext, { node }: SetActiveNode) {\n    patchState({ node });\n  }\n\n  /**\n   * Parses and sets mapping info\n   */\n  @Action(SetMapping, { cancelUncompleted: true })\n  setMapping({ patchState }: MedicalIllustrationContext, { url }: SetMapping): Observable {\n    return this.http.get(url, { responseType: 'text' }).pipe(\n      map((result) => {\n        const parsedResult = parse(result, { header: true }).data as MapEntry[];\n        patchState({ mapping: parsedResult });\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterFormat.html":{"url":"classes/RegisterFormat.html","title":"class - RegisterFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Register format into state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormat)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:10\n                            \n                        \n\n                \n                    \n                            Creates an instance of register format.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormat\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScreenModeModel.html":{"url":"interfaces/ScreenModeModel.html","title":"interface - ScreenModeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScreenModeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isFullScreen\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isFullScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFullScreen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether in fullscreen\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ScreenModeModel {\n  /** Whether in fullscreen */\n  isFullScreen: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScreenModeSelectors.html":{"url":"classes/ScreenModeSelectors.html","title":"class - ScreenModeSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScreenModeSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isFullScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFullScreen\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFullScreen(state: ScreenModeModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Selectors screen mode selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ScreenModeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if full screen\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { ScreenModeModel } from './screen-mode.model';\n\n/**\n * Screen mode selectors\n */\nexport class ScreenModeSelectors {\n  /**\n   * Selectors screen mode selectors\n   * @param state\n   * @returns true if full screen\n   */\n  @Selector()\n  static isFullScreen(state: ScreenModeModel): boolean {\n    return state.isFullScreen;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenModeState.html":{"url":"injectables/ScreenModeState.html","title":"injectable - ScreenModeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenModeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State storing the screen mode\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(undefined: StateContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.state.ts:22\n                \n            \n\n\n            \n                \n                    Updates the screen mode\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport produce from 'immer';\nimport { Set } from './screen-mode.actions';\nimport { ScreenModeModel } from './screen-mode.model';\n\n/** State storing the screen mode */\n@State({\n  name: 'screenmode',\n  defaults: {\n    isFullScreen: false,\n  },\n})\n@Injectable()\nexport class ScreenModeState {\n  /**\n   * Updates the screen mode\n   * @param ctx State context\n   * @param action Action with new mode\n   */\n  @Action(Set)\n  set({ setState }: StateContext, { isFullScreen }: Set): void {\n    setState(\n      produce((draft: ScreenModeModel) => {\n        draft.isFullScreen = isFullScreen;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessage.html":{"url":"classes/SendMessage.html","title":"class - SendMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                A class which sends individual messages submitted by user.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: ContactMessage)\n                    \n                \n                        \n                            \n                                Defined in src/lib/contact/contact.actions.ts:5\n                            \n                        \n\n                \n                    \n                            A constructor which initializes the message of type ContactMessage interface.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    ContactMessage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { ContactMessage } from '@hra-ui/services';\n\n/** A class which sends individual messages submitted by user. */\nexport class SendMessage extends Action('[Contact] Send Message') {\n  /** A constructor which initializes the message of type ContactMessage interface. */\n  constructor(readonly message: ContactMessage) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Update the screen mode\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(isFullScreen: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/screen-mode/screen-mode.actions.ts:4\n                            \n                        \n\n                \n                    \n                            Creates an instance of Set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isFullScreen\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the mode is fullscreen\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** Update the screen mode */\nexport class Set extends Action('[Screenmode] Set Screenmode') {\n  /**\n   * Creates an instance of Set\n   * @param isFullScreen Whether the mode is fullscreen\n   */\n  constructor(readonly isFullScreen: boolean) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set-1.html":{"url":"classes/Set-1.html","title":"class - Set-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                An action that removes all current sources and adds new ones, effectively resetting the state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sourceList\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: Source[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-list/source-list.actions.ts:17\n                            \n                        \n\n                \n                    \n                            Initializes the payload for the action\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        Source[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                array of source objects to be set as the new state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sourceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Source[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/source-list/source-list.actions.ts:22\n                        \n                    \n\n            \n                \n                    array of source objects to be set as the new state\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SourceList] Set'\n                    \n                \n                    \n                        \n                                Defined in src/lib/source-list/source-list.actions.ts:17\n                        \n                    \n\n            \n                \n                    Action Type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Source } from './source-list.model';\n\n/** action of adding a list of sources to the SourceList state */\nexport class Add {\n  /** Action Type  */\n  static readonly type = '[SourceList] Add';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of Source objects to be added to the state\n   */\n  constructor(readonly sourceList: Source[]) {}\n}\n\n/** An action that removes all current sources and adds new ones, effectively resetting the state */\nexport class Set {\n  /** Action Type  */\n  static readonly type = '[SourceList] Set';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of source objects to be set as the new state\n   */\n  constructor(public sourceList: Source[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetActiveNode.html":{"url":"classes/SetActiveNode.html","title":"class - SetActiveNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetActiveNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action for setting the current active node\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(node?: MapEntry)\n                    \n                \n                        \n                            \n                                Defined in src/lib/medical-illustration/medical-illustration.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Creates an instance of set active node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                  \n                                                        \n                                                                        MapEntry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { MapEntry } from './medical-illustration.model';\n\n/**\n * Action for setting the current illustration URI\n */\nexport class SetUri extends Action('[Medical Illustration] Set URI') {\n  /**\n   * Creates an instance of set uri.\n   * @param [url]\n   */\n  constructor(readonly url?: string) {\n    super();\n  }\n}\n\n/**\n * Action for setting the current active node\n */\nexport class SetActiveNode extends Action('[Medical Illustration] Set Active Node') {\n  /**\n   * Creates an instance of set active node.\n   * @param [node]\n   */\n  constructor(readonly node?: MapEntry) {\n    super();\n  }\n}\n\n/**\n * Action for setting the mapping file\n */\nexport class SetMapping extends Action('[Medical Illustration] Set Mapping') {\n  /**\n   * Creates an instance of set mapping.\n   * @param url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetData.html":{"url":"classes/SetData.html","title":"class - SetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Set data to store\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: object)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cell-summary/cell-summary.actions.ts:9\n                            \n                        \n\n                \n                    \n                            Defines the SetData action, which sets data to the store.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe data to set to the store.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { z } from 'zod';\nimport { CELL_SUMMARY_SCHEMA } from './cell-summary.model';\n\n/** Base action factory */\nconst Action = ActionGroup('ResourceRegistry');\n\n/** Set data to store */\nexport class SetData extends Action('SetData') {\n  /**\n   * Defines the SetData action, which sets data to the store.\n   * @param data - The data to set to the store.\n   */\n  constructor(readonly data: object) {\n    super();\n  }\n}\n\n/** Compute aggregate of the given data and store to state */\nexport class ComputeAggregate extends Action('ComputeAggregate') {\n  /**\n   * Defines the ComputeAggregate action, which computes aggregate data for the given summaries.\n   * @param summaries - The cell summary data to compute aggregate for.\n   */\n  constructor(readonly summaries: z.infer) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetMapping.html":{"url":"classes/SetMapping.html","title":"class - SetMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action for setting the mapping file\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/medical-illustration/medical-illustration.actions.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of set mapping.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { MapEntry } from './medical-illustration.model';\n\n/**\n * Action for setting the current illustration URI\n */\nexport class SetUri extends Action('[Medical Illustration] Set URI') {\n  /**\n   * Creates an instance of set uri.\n   * @param [url]\n   */\n  constructor(readonly url?: string) {\n    super();\n  }\n}\n\n/**\n * Action for setting the current active node\n */\nexport class SetActiveNode extends Action('[Medical Illustration] Set Active Node') {\n  /**\n   * Creates an instance of set active node.\n   * @param [node]\n   */\n  constructor(readonly node?: MapEntry) {\n    super();\n  }\n}\n\n/**\n * Action for setting the mapping file\n */\nexport class SetMapping extends Action('[Medical Illustration] Set Mapping') {\n  /**\n   * Creates an instance of set mapping.\n   * @param url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetUri.html":{"url":"classes/SetUri.html","title":"class - SetUri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetUri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/medical-illustration/medical-illustration.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action for setting the current illustration URI\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url?: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/medical-illustration/medical-illustration.actions.ts:7\n                            \n                        \n\n                \n                    \n                            Creates an instance of set uri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { MapEntry } from './medical-illustration.model';\n\n/**\n * Action for setting the current illustration URI\n */\nexport class SetUri extends Action('[Medical Illustration] Set URI') {\n  /**\n   * Creates an instance of set uri.\n   * @param [url]\n   */\n  constructor(readonly url?: string) {\n    super();\n  }\n}\n\n/**\n * Action for setting the current active node\n */\nexport class SetActiveNode extends Action('[Medical Illustration] Set Active Node') {\n  /**\n   * Creates an instance of set active node.\n   * @param [node]\n   */\n  constructor(readonly node?: MapEntry) {\n    super();\n  }\n}\n\n/**\n * Action for setting the mapping file\n */\nexport class SetMapping extends Action('[Medical Illustration] Set Mapping') {\n  /**\n   * Creates an instance of set mapping.\n   * @param url\n   */\n  constructor(readonly url: string) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Source.html":{"url":"interfaces/Source.html","title":"interface - Source","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Source\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.model.ts\n        \n\n\n            \n                Description\n            \n            \n                structure of a source object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link property of the source object\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title property of the source object\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StateContext } from '@ngxs/store';\n\n/** structure of a source object */\nexport interface Source {\n  /** Title property of the source object  */\n  title: string;\n  /** Link property of the source object */\n  link: string;\n}\n\n/** Type alias for the array of source objects */\nexport type SourceListModel = Source[];\n\n/** Helper alias for action handler's ctx argument */\nexport type SourceListContext = StateContext;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceListSelectors.html":{"url":"classes/SourceListSelectors.html","title":"class - SourceListSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceListSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selector class for retrieving data from the SourceListState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSourceList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSourceList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceList(state: SourceListModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['SourceListState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/source-list/source-list.selectors.ts:13\n                \n            \n\n\n            \n                \n                    Gets the array of data sources from the SourceList object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SourceListModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current state of the SourceListState\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Source[]\n\n                    \n                    \n                        array of source objects\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { Source, SourceListModel } from './source-list.model';\nimport { SourceListState } from './source-list.state';\n\n/** Selector class for retrieving data from the SourceListState */\nexport class SourceListSelectors {\n  /**\n   * Gets the array of data sources from the SourceList object.\n   * @param state The current state of the SourceListState\n   * @returns array of source objects\n   */\n  @Selector([SourceListState])\n  static getSourceList(state: SourceListModel): Source[] {\n    return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SourceListState.html":{"url":"injectables/SourceListState.html","title":"injectable - SourceListState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SourceListState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling source list data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(undefined: SourceListContext, undefined: Add)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Add)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-list/source-list.state.ts:20\n                \n            \n\n\n            \n                \n                    adds a list of sources to the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                SourceListContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Add\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(undefined: SourceListContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-list/source-list.state.ts:34\n                \n            \n\n\n            \n                \n                    Removes all current sources and adds new ones, effectively resetting the state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                SourceListContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State } from '@ngxs/store';\nimport { produce } from 'immer';\nimport { Add, Set } from './source-list.actions';\nimport { SourceListContext, SourceListModel } from './source-list.model';\n\n/** State handling source list data */\n@State({\n  name: 'sourceList',\n  defaults: [],\n})\n@Injectable()\nexport class SourceListState {\n  /**\n   * adds a list of sources to the current state\n   * @param ctx The state context instance\n   * @param sourceList The payload which is an array of source objects to be added to the state\n   */\n  @Action(Add)\n  add({ setState }: SourceListContext, { sourceList }: Add) {\n    setState(\n      produce((draft) => {\n        draft.push(...sourceList);\n      })\n    );\n  }\n\n  /**\n   * Removes all current sources and adds new ones, effectively resetting the state.\n   * @param ctx The state context instance\n   * @param sourceList The payload which is an array of source objects to be set as the new state\n   */\n  @Action(Set)\n  set({ setState }: SourceListContext, { sourceList }: Set) {\n    setState(sourceList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateAnalyticsPluginService.html":{"url":"injectables/StateAnalyticsPluginService.html","title":"injectable - StateAnalyticsPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateAnalyticsPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Google Analytics Plugin Injectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(state, action, next: NgxsNextPluginFn)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state-analytics-plugin/state-analytics-plugin.service.ts:51\n                \n            \n\n\n            \n                \n                    Handles logger plugin\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent state of the store with type unknown.\n\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent action being dispatched with type unknown type.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            NgxsNextPluginFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnext plugin to handle the action\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nnext plugin with the current state and action.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, InjectionToken, Provider } from '@angular/core';\nimport { getActionTypeFromInstance, NgxsNextPluginFn, NgxsPlugin, NGXS_PLUGINS } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { DEFAULT_LOGGABLE_ACTIONS } from './default-loggable-actions';\n\n/** Primitive types */\nconst PRIMITIVE_TYPES = ['bigint', 'boolean', 'number', 'string'];\n\n/**\n * Determines whether primitive is\n * @param value is string - used to check the input value from serialize funtion\n * @returns type of value - boolean/number/string/null/bigint/undefined\n */\nfunction isPrimitive(value: unknown): value is bigint | boolean | number | string | null | undefined {\n  return value == null || PRIMITIVE_TYPES.includes(typeof value);\n}\n\n/**\n * Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n */\nexport const LOGGABLE_ACTIONS = new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n});\n\n/**\n * Google Analytics Plugin Injectable\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateAnalyticsPluginService implements NgxsPlugin {\n  /**\n   * Injects the service for state analytics plugin.\n   */\n  private readonly ga = inject(GoogleAnalyticsService);\n\n  /**\n   * Plugin service for logging state analytics\n   * Setting loggable action types from LOGGABLE_ACTIONS dependency.\n   */\n  private readonly loggableTypes = new Set(inject(LOGGABLE_ACTIONS).map(getActionTypeFromInstance));\n\n  /**\n   * Handles logger plugin\n   * @param state -  Current state of the store with type unknown.\n   * @param action - Current action being dispatched with type unknown type.\n   * @param next - next plugin to handle the action\n   * @returns - next plugin with the current state and action.\n   */\n  handle(state: unknown, action: unknown, next: NgxsNextPluginFn) {\n    this.logAction(action);\n    return next(state, action);\n  }\n\n  /**\n   * Logs action trigerred to google analytics event\n   * @param action - Current action being dispatched with type unknown type.\n   * @returns void\n   */\n  private logAction(action: unknown): void {\n    const type = getActionTypeFromInstance(action);\n    if (type && this.loggableTypes.has(type)) {\n      const payload = JSON.stringify(action, this.serialize);\n      this.ga.event(type, 'action_log', payload);\n    }\n  }\n\n  /**\n   * Serializes action data\n   * @param key - key with type unknown that needs to be serialized\n   * @param value - value with type unknown that needs to be serialized\n   * @returns serialized value\n   */\n  private serialize(this: void, key: unknown, value: unknown): unknown {\n    if (key === '' && typeof value === 'object') {\n      return { ...value, type: undefined };\n    } else if (isPrimitive(value) || (Array.isArray(value) && value.every(isPrimitive))) {\n      return value;\n    }\n\n    return undefined;\n  }\n}\n\n/**\n * State Login Provider\n */\nexport const STATE_LOGGER_PROVIDER: Provider = {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createDownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            isPrimitive   (src/.../state-analytics-plugin.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDownloadFormatId\n                        \n                    \n                \n            \n            \n                \ncreateDownloadFormatId(id: string)\n                \n            \n\n\n\n\n            \n                \n                    Creates download format id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormatId\n\n                    \n                    \n                        download format id\n\n                    \n                \n            \n        \n    \n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isPrimitive\n                        \n                    \n                \n            \n            \n                \nisPrimitive(value)\n                \n            \n\n\n\n\n            \n                \n                    Determines whether primitive is\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is string - used to check the input value from serialize funtion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :      | boolean | number | string | null | undefined\n\n                    \n                    \n                        type of value - boolean/number/string/null/bigint/undefined\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nstate\nThis library was generated with Nx.\nRunning unit tests\nRun nx test state to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Aggregate   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AggregateRow   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AggregateRowEntry   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Cell   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CellSummary   (src/.../cell-summary.model.ts)\n                        \n                        \n                            DownloadContext   (src/.../download.model.ts)\n                        \n                        \n                            DownloadEntry   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormat   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            DownloadModel   (src/.../download.model.ts)\n                        \n                        \n                            MapEntry   (src/.../medical-illustration.model.ts)\n                        \n                        \n                            MedicalIllustrationContext   (src/.../medical-illustration.state.ts)\n                        \n                        \n                            SourceListContext   (src/.../source-list.model.ts)\n                        \n                        \n                            SourceListModel   (src/.../source-list.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n    \n        \n            \n                \n                    \n                    Aggregate\n                \n            \n            \n                \n                    Type representing an aggregate summary of cell values in a group\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AggregateRow\n                \n            \n            \n                \n                    Type representing a row in an aggregate summary\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AggregateRowEntry\n                \n            \n            \n                \n                    Type representing a single entry in a row with cell, biomarker, count and percentage\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Cell\n                \n            \n            \n                \n                    Type representing a single cell value\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummary\n                \n            \n            \n                \n                    Type representing CELL_SUMMARY_SCHEMA which has labels and entries\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n    \n        \n            \n                \n                    \n                    DownloadContext\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadContext,\nwhich is a state context for the DownloadModel type\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadEntry\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadEntry,\nwhich is inferred from the type of the DOWNLOAD_ENTRY constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormat\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormat,\nwhich is inferred from the type of the DOWNLOAD_FORMAT constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormatId\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormatId,\nwhich is inferred from the type of the DOWNLOAD_FORMAT_ID constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadModel\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadModel,\nwhich is inferred from the type of the DOWNLOAD_MODEL constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/medical-illustration/medical-illustration.model.ts\n    \n    \n        \n            \n                \n                    \n                    MapEntry\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/medical-illustration/medical-illustration.state.ts\n    \n    \n        \n            \n                \n                    \n                    MedicalIllustrationContext\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/source-list/source-list.model.ts\n    \n    \n        \n            \n                \n                    \n                    SourceListContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceListModel\n                \n            \n            \n                \n                    Type alias for the array of source objects\n\n                \n            \n            \n                \n                            Source[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            About   (src/.../link-ids.ts)\n                        \n                        \n                            Action   (src/.../cell-summary.actions.ts)\n                        \n                        \n                            Action   (src/.../download.action.ts)\n                        \n                        \n                            AppTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            CELL_SCHEMA   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CELL_SUMMARY_AGGREGATE_SCHEMA   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CELL_SUMMARY_SCHEMA   (src/.../cell-summary.model.ts)\n                        \n                        \n                            ContactAcknowledgement   (src/.../resource-ids.ts)\n                        \n                        \n                            DEFAULT_LOGGABLE_ACTIONS   (src/.../default-loggable-actions.ts)\n                        \n                        \n                            DOWNLOAD_ENTRY   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT_ID   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_MODEL   (src/.../download.model.ts)\n                        \n                        \n                            Embed   (src/.../link-ids.ts)\n                        \n                        \n                            ExploreFTU   (src/.../link-ids.ts)\n                        \n                        \n                            Gradient   (src/.../resource-types.ts)\n                        \n                        \n                            GradientLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            GradientLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            Illustration   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPage   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageDepthDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPagePartners   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageReadMore   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LOGGABLE_ACTIONS   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            mapEntry   (src/.../medical-illustration.model.ts)\n                        \n                        \n                            Metrics   (src/.../resource-ids.ts)\n                        \n                        \n                            Metrics   (src/.../resource-types.ts)\n                        \n                        \n                            MetricsLogo   (src/.../resource-ids.ts)\n                        \n                        \n                            MetricsTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            Png   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            PNG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                        \n                            Portal   (src/.../link-ids.ts)\n                        \n                        \n                            PRIMITIVE_TYPES   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            ProductLogoUrl   (src/.../resource-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../link-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            Size   (src/.../resource-types.ts)\n                        \n                        \n                            SizeLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            SizeLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            STATE_LOGGER_PROVIDER   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Svg   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            SVG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/link-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        About\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('About')\n                    \n                \n\n            \n                \n                    About Link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Embed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Embed')\n                    \n                \n\n            \n                \n                    LinkId for Embed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExploreFTU\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ExploreFTU')\n                    \n                \n\n            \n                \n                    LinkId for Explore FTU\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Illustration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Illustration')\n                    \n                \n\n            \n                \n                    LinkId for Illustration metadata\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPage')\n                    \n                \n\n            \n                \n                    Landing page id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPageReadMore')\n                    \n                \n\n            \n                \n                    LinkId for read more in landing page content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Portal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Portal')\n                    \n                \n\n            \n                \n                    LinkId for HRA Portal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title link id\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('ResourceRegistry')\n                    \n                \n\n            \n                \n                    Base action factory\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Download')\n                    \n                \n\n            \n                \n                    Action Group for Download Action\n\n                \n            \n\n        \n    \n\n    src/lib/resource-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('AppTitle')\n                    \n                \n\n            \n                \n                    App title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ContactAcknowledgement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ContactAcknowledgement')\n                    \n                \n\n            \n                \n                    Message to display after submitting contact form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegend')\n                    \n                \n\n            \n                \n                    Gradient legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Gradient legend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthDescription')\n                    \n                \n\n            \n                \n                    Lanading Page Depth Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthImg')\n                    \n                \n\n            \n                \n                    Landing Page Depth Img id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthMoreText')\n                    \n                \n\n            \n                \n                    Landing Page Depth More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthTitle')\n                    \n                \n\n            \n                \n                    Landing Page Depth Title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroDescription')\n                    \n                \n\n            \n                \n                    Landing Page Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroImg')\n                    \n                \n\n            \n                \n                    Landing Page Intro Image id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroMoreText')\n                    \n                \n\n            \n                \n                    Landing Page More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPagePartners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroPartners')\n                    \n                \n\n            \n                \n                    Landing Page Partners id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroTitle')\n                    \n                \n\n            \n                \n                    Landing Page Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('Metrics')\n                    \n                \n\n            \n                \n                    metrics id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsLogo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsLogo')\n                    \n                \n\n            \n                \n                    Metrics Logo id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsTitle')\n                    \n                \n\n            \n                \n                    Metrics Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductLogoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductLogoUrl')\n                    \n                \n\n            \n                \n                    Product logo url id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegend')\n                    \n                \n\n            \n                \n                    Size legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Size legend\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CELL_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  biomarker: z.object({\n    id: z.string(),\n    label: z.string(),\n  }),\n  count: z.number(),\n  percentage: z.number(),\n})\n                    \n                \n\n            \n                \n                    The CELL_SCHEMA has an object that contains an id and a label for the cell,\nanother object that contains an id and a label for the biomarker, and a count and a percentage that are both numbers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_AGGREGATE_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.record(\n  z.object({\n    label: z.string(),\n    columns: z.string().array(),\n    rows: z\n      .tuple([z.string(), z.number().optional()])\n      .rest(\n        z\n          .object({\n            color: z.string(),\n            size: z.number(),\n            data: CELL_SCHEMA,\n          })\n          .optional()\n      )\n      .array(),\n  })\n)\n                    \n                \n\n            \n                \n                    The CELL_SUMMARY_AGGREGATE_SCHEMA is a record of Aggregate objects, where each Aggregate object contains a label,\nan array of columns that are strings, and an array of rows that are AggregateRow objects.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.record(\n  z.object({\n    label: z.string(),\n    entries: CELL_SCHEMA.array(),\n  })\n)\n                    \n                \n\n            \n                \n                    The CELL_SUMMARY_SCHEMA constant is a record of CellSummary objects,\nwhere each CellSummary object contains a label and an array of CELL_SCHEMA objects.\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/default-loggable-actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ContactActions.SendMessage,\n  DownloadActions.Download,\n  LinkRegistryActions.Navigate,\n]\n                    \n                \n\n            \n                \n                    Default loggable actions\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.discriminatedUnion('type', [\n  z.object({ type: z.literal('url'), url: z.string() }),\n  z.object({ type: z.literal('data'), data: z.string() }),\n])\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_ENTRY,\nwhich is a discriminated union of two objects with different properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    id: DOWNLOAD_FORMAT_ID,\n    label: z.string(),\n    extension: z.string(),\n  })\n  .partial({ extension: true })\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT,\nwhich is an object with id, label, and extension properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .transform((id) => `DownloadFormatId:'${id}'`)\n  .brand('DownloadFormatId')\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT_ID,\nwhich is a string that is transformed into a branded string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_MODEL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  formats: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_FORMAT),\n  entries: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_ENTRY),\n})\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_MODEL,\nwhich is an object with formats and entries properties\n\n                \n            \n\n        \n    \n\n    src/lib/resource-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Gradient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('gradient', payload())\n                    \n                \n\n            \n                \n                    Gradient legend resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType(\n  'metrics',\n  payload()\n)\n                    \n                \n\n            \n                \n                    Metrics resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Size\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('size', payload())\n                    \n                \n\n            \n                \n                    Size legend resource\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n})\n                    \n                \n\n            \n                \n                    Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRIMITIVE_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['bigint', 'boolean', 'number', 'string']\n                    \n                \n\n            \n                \n                    Primitive types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATE_LOGGER_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n}\n                    \n                \n\n            \n                \n                    State Login Provider\n\n                \n            \n\n        \n    \n\n    src/lib/medical-illustration/medical-illustration.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapEntry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  organ_label: z.string(),\n  organ_id: z.string(),\n  anatomical_structure_of: z.string(),\n  source_spatial_entity: z.string(),\n  node_name: z.string(),\n  label: z.string(),\n  OntologyID: z.string(),\n  representation_of: z.string(),\n  'svg file of single 2DFTU': z.string(),\n  exist_asctb: z.string(),\n  type: z.string(),\n  'REF/1': z.string(),\n  'REF/1/DOI': z.string(),\n  'REF/1/NOTES': z.string(),\n  'Inset #': z.string(),\n})\n                    \n                \n\n            \n                \n                    Map Entry typings\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Png\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('png')\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Svg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('svg')\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PNG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Png,\n  label: 'Download Png',\n  extension: '.png',\n}\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Svg,\n  label: 'Download Svg',\n  extension: '.svg',\n}\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
