var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActiveFtuModel.html",[0,1.524,1,2.51]],["body/interfaces/ActiveFtuModel.html",[0,2.066,1,3.731,2,1.828,3,0.139,4,0.298,5,0.159,6,1.465,7,1.465,8,2.206,9,0.119,10,0.579,11,2.122,12,0.535,13,1.758,14,0.461,15,0.022,16,1.242,17,2.496,18,0.394,19,0.998,20,1.078,21,0.293,22,0.483,23,0.585,24,0.381,25,1.988,26,0.729,27,2.564,28,1.465,29,1.372,30,2.488,31,2.879,32,2.879,33,2.488,34,2.274,35,2.879,36,2.488,37,2.448,38,3.403,39,2.066,40,1.021,41,1.047,42,2.893,43,2.488,44,0.231,45,2.407,46,1.996,47,1.465,48,0.424,49,2.488,50,1.465,51,2.488,52,0.188,53,1.828,54,0.861,55,0.861,56,1.569,57,0.814,58,2.195,59,1.569,60,1.828,61,1.372,62,2.206,63,3.418,64,3.761,65,2.488,66,1.248,67,3.351,68,2.488,69,2.488,70,2.488,71,2.488,72,2.488,73,2.488,74,1.018,75,2.488,76,2.206,77,1.689,78,2.488,79,2.488,80,2.488,81,2.488,82,0.012,83,0.012]],["title/classes/ActiveFtuSelectors.html",[52,0.236,84,3.128]],["body/classes/ActiveFtuSelectors.html",[1,4.699,3,0.177,4,0.203,5,0.203,6,2.847,7,2.847,9,0.152,10,0.74,12,0.635,13,1.782,14,0.547,15,0.022,18,0.35,21,0.374,22,0.616,26,0.93,42,2.548,44,0.203,48,0.729,52,0.24,53,3.554,57,1.4,66,1.48,74,1.979,82,0.015,83,0.015,84,4.276,85,0.616,86,3.72,87,2.903,88,1.564,89,3.508,90,5.665,91,3.72,92,1.654,93,5.01,94,0.883,95,3.72,96,3.793,97,0.83,98,3.72,99,3.72,100,5.01,101,1.564,102,2.697,103,2.003,104,3.72,105,5.01]],["title/injectables/ActiveFtuState.html",[19,0.866,53,2.299]],["body/injectables/ActiveFtuState.html",[0,1.558,1,2.566,3,0.118,4,0.311,5,0.135,6,2.53,7,2.53,8,1.876,9,0.101,10,0.493,12,0.572,13,1.668,14,0.549,15,0.022,16,1.129,17,2.27,18,0.376,19,0.885,20,0.917,21,0.249,22,0.411,23,0.637,24,0.386,25,1.763,26,0.62,27,2.778,28,1.246,29,1.166,30,2.116,31,3.132,32,3.132,33,2.116,34,2.017,35,3.132,36,2.116,37,2.171,38,3.702,39,2.364,40,1.166,41,1.198,42,3.094,43,2.116,44,0.205,45,2.802,46,2.566,47,1.883,48,0.733,49,2.116,50,1.246,51,2.116,52,0.16,53,2.35,54,1.107,55,0.732,56,1.335,57,1.407,58,2.512,59,2.017,60,2.35,61,1.763,62,1.876,63,3.158,64,3.419,65,2.116,66,1.107,67,3.132,68,2.116,69,2.116,70,2.116,71,2.116,72,3.198,73,2.116,74,1.309,75,3.198,76,2.836,77,2.171,78,2.116,79,2.116,80,2.116,81,2.116,82,0.011,83,0.011,88,1.17,92,1.491,94,0.796,97,0.748,106,1.095,107,2.479,108,2.479,109,2.479,110,1.698,111,2.479,112,1.698,113,2.479]],["title/classes/AddEntry.html",[52,0.236,114,2.124]],["body/classes/AddEntry.html",[3,0.167,4,0.192,5,0.263,9,0.143,12,0.445,14,0.383,15,0.022,18,0.298,21,0.353,23,0.697,24,0.454,39,1.459,44,0.323,48,0.511,52,0.381,55,1.422,82,0.014,83,0.014,85,0.581,94,0.619,97,0.581,114,2.79,115,2.201,116,3.021,117,3.8,118,2.898,119,2.285,120,3.509,121,3.338,122,3.711,123,3.509,124,3.298,125,2.592,126,1.096,127,0.927,128,2.592,129,2.033,130,2.201,131,0.74,132,2.201,133,3.021,134,3.218,135,2.033,136,1.564,137,2.403,138,2.266,139,2.266,140,1.536,141,1.536,142,2.403,143,1.375,144,1.763,145,2.033,146,1.459,147,2.403,148,2.403]],["title/interfaces/CellSummaryModel.html",[0,1.524,149,2.51]],["body/interfaces/CellSummaryModel.html",[0,2.191,2,2.033,3,0.154,4,0.177,5,0.177,9,0.132,10,0.644,11,2.29,12,0.411,14,0.7,15,0.022,18,0.326,21,0.326,22,0.537,25,2.144,26,0.81,31,3.62,32,3.62,44,0.312,45,1.432,82,0.013,83,0.013,131,1.111,149,3.121,150,1.525,151,1.525,152,2.454,153,2.64,154,4.498,155,4.959,156,4.557,157,3.62,158,3.916,159,3.916,160,3.916,161,3.241,162,2.766,163,2.766,164,3.889,165,2.766,166,3.989,167,2.454,168,3.889,169,2.873,170,3.609,171,3.989,172,3.989,173,3.889,174,2.64,175,3.121,176,3.889,177,3.889,178,1.645,179,3.889,180,3.889,181,2.766,182,2.766,183,2.766,184,2.766,185,2.766,186,2.766,187,2.766,188,2.033,189,2.766,190,2.22,191,2.766,192,2.766,193,2.766,194,2.766]],["title/classes/CellSummarySelectors.html",[52,0.236,195,3.128]],["body/classes/CellSummarySelectors.html",[3,0.177,4,0.203,5,0.203,9,0.152,10,0.74,12,0.635,14,0.547,15,0.022,18,0.375,21,0.374,22,0.616,24,0.52,26,0.93,31,2.903,44,0.203,48,0.729,52,0.24,57,1.4,66,1.48,82,0.015,83,0.015,85,0.616,87,2.903,88,1.564,89,3.508,92,1.654,94,0.883,97,0.83,103,2.003,149,4.561,150,2.666,151,2.666,155,4.588,157,2.903,158,3.88,160,4.333,169,2.517,178,1.892,195,4.276,196,3.72,197,5.01,198,5.01,199,3.72,200,5.01,201,3.72,202,3.175,203,2.548,204,3.72,205,5.01,206,3.72,207,3.72]],["title/injectables/CellSummaryState.html",[19,0.866,203,2.51]],["body/injectables/CellSummaryState.html",[3,0.123,4,0.141,5,0.141,9,0.106,10,0.514,12,0.587,13,1.158,14,0.506,15,0.022,16,1.444,17,1.3,18,0.37,19,0.914,20,0.957,21,0.26,22,0.429,23,0.546,24,0.492,26,0.647,27,2.181,28,1.3,29,1.218,31,3.47,32,2.98,40,1.154,41,1.084,44,0.141,45,2.833,48,0.749,50,1.3,52,0.167,54,1.143,57,1.295,58,2.553,59,2.083,60,2.427,61,1.821,62,2.929,63,3.625,64,1.959,66,0.764,74,0.904,77,2.242,82,0.011,83,0.011,88,1.208,92,1.53,94,0.817,97,0.768,106,1.143,110,1.772,112,1.772,131,0.816,143,1.014,149,1.772,150,2.42,151,2.42,155,4.374,157,3.47,160,1.772,169,1.944,178,1.923,202,2.208,203,2.65,208,2.587,209,2.65,210,3.454,211,2.587,212,3.869,213,2.587,214,3.869,215,3.869,216,2.587,217,3.869,218,2.929,219,2.929,220,2.587,221,1.609,222,1.3,223,1.772,224,3.869,225,2.587,226,2.208,227,2.587,228,1.623,229,1.3,230,1.623,231,1.772,232,2.587,233,2.587,234,2.587,235,2.587]],["title/classes/Clear.html",[39,1.524,52,0.236]],["body/classes/Clear.html",[3,0.205,4,0.235,5,0.235,6,2.159,7,2.159,9,0.175,13,1.746,15,0.022,18,0.34,21,0.554,22,0.712,23,0.649,24,0.33,39,2.29,40,0.805,41,0.906,44,0.332,52,0.413,54,1.269,55,1.269,82,0.016,83,0.016,85,0.712,101,1.341,126,1.341,127,1.135,131,0.906,136,1.607,138,2.022,139,2.022,140,1.2,141,1.2,146,1.786,221,1.786,236,2.943,237,2.592,238,1.589,239,1.501,240,2.943,241,1.684,242,1.684]],["title/classes/ClearEntries.html",[52,0.236,145,2.124]],["body/classes/ClearEntries.html",[3,0.176,4,0.202,5,0.272,9,0.151,15,0.022,18,0.308,21,0.371,23,0.711,24,0.463,39,2.072,44,0.33,52,0.389,55,1.472,82,0.015,83,0.015,85,0.611,114,2.138,115,2.315,116,2.315,117,3.269,118,2.937,119,1.534,121,3.037,122,3.126,124,2.527,125,1.987,126,1.152,127,0.975,128,2.683,129,2.138,130,2.315,131,0.778,132,2.315,133,3.126,134,3.267,135,2.138,136,1.597,137,2.527,138,2.345,139,2.345,140,1.576,141,1.576,142,2.527,143,1.446,144,2.504,145,2.887,146,1.534,147,2.527,148,2.527]],["title/classes/ClearSelection.html",[52,0.236,243,1.973]],["body/classes/ClearSelection.html",[3,0.186,4,0.214,5,0.214,9,0.16,13,1.608,15,0.022,16,1.546,18,0.32,21,0.522,22,0.648,23,0.61,24,0.494,40,0.733,41,0.825,44,0.338,47,3.233,52,0.415,54,1.156,82,0.015,83,0.015,85,0.648,101,1.222,126,1.222,127,1.034,131,0.825,136,1.635,140,1.448,141,1.448,146,1.627,221,1.627,237,2.439,238,1.447,239,1.367,241,1.533,242,1.533,243,2.79,244,2.455,245,2.79,246,2.455,247,1.841,248,2.267,249,2.79,250,2.107,251,2.68,252,2.455,253,2.107,254,2.107]],["title/classes/ComputeAggregates.html",[52,0.236,210,2.299]],["body/classes/ComputeAggregates.html",[3,0.198,4,0.228,5,0.228,9,0.17,13,1.641,15,0.022,16,1.041,18,0.334,21,0.543,22,0.69,23,0.705,24,0.486,40,0.78,41,1.138,44,0.327,52,0.408,54,1.23,82,0.016,83,0.016,85,0.69,101,1.3,126,1.3,127,1.101,131,0.878,136,1.583,140,1.164,141,1.164,150,1.96,151,1.96,157,2.413,169,2.712,178,1.685,210,3.386,238,1.54,239,1.455,241,1.632,242,1.632,247,1.96,255,2.852,256,4.086,257,4.102,258,3.697,259,2.852,260,3.153]],["title/injectables/ContactState.html",[19,0.866,261,2.774]],["body/injectables/ContactState.html",[3,0.17,4,0.195,5,0.195,9,0.145,10,0.709,12,0.452,14,0.389,15,0.022,18,0.385,19,1.407,20,1.318,21,0.359,22,0.591,23,0.734,24,0.494,25,2.802,26,0.891,27,2.608,29,1.677,44,0.195,48,0.867,52,0.402,57,0.996,66,1.053,74,1.245,82,0.014,83,0.014,88,1.519,92,1.177,94,0.628,97,0.591,106,1.575,143,1.397,222,2.445,229,1.791,261,4.508,262,3.564,263,4.867,264,4.871,265,4.867,266,5.955,267,5.082,268,3.684,269,5.955,270,5.075,271,4.867,272,4.867,273,3.564,274,4.154,275,4.195,276,4.867,277,4.154,278,3.564,279,3.564,280,3.564,281,3.564,282,3.564]],["title/classes/Download.html",[52,0.236,118,1.619]],["body/classes/Download.html",[3,0.169,4,0.194,5,0.302,9,0.145,12,0.451,14,0.388,15,0.022,18,0.3,21,0.358,23,0.733,24,0.425,39,1.478,44,0.325,48,0.517,52,0.383,55,1.435,82,0.014,83,0.014,85,0.589,94,0.627,97,0.589,114,2.06,115,2.23,116,2.23,117,3.207,118,3.003,119,2.02,121,3.353,122,3.048,124,2.435,125,1.914,126,1.11,127,0.94,128,2.615,129,2.06,130,2.23,131,0.749,132,2.23,133,3.048,134,3.307,135,2.06,136,1.572,137,2.435,138,2.604,139,2.604,140,1.546,141,1.546,142,2.435,143,1.393,144,1.786,145,2.06,146,1.478,147,2.435,148,2.435,283,3.034,284,3.555]],["title/classes/DownloadSelectors.html",[52,0.236,285,3.128]],["body/classes/DownloadSelectors.html",[3,0.19,4,0.218,5,0.218,9,0.163,10,0.794,12,0.506,14,0.436,15,0.022,18,0.325,24,0.45,26,0.998,44,0.218,48,0.581,52,0.257,55,1.179,57,1.467,66,1.179,74,1.395,82,0.015,83,0.015,85,0.662,87,3.853,88,1.64,89,3.16,92,1.318,94,0.704,97,0.662,103,3.16,118,2.321,128,3.487,129,2.314,131,1.107,134,3.406,144,2.639,285,4.483,286,3.994,287,4.72,288,4.443,289,5.252,290,4.72,291,3.994,292,3.994,293,3.994,294,3.994]],["title/injectables/DownloadState.html",[19,0.866,295,2.774]],["body/injectables/DownloadState.html",[3,0.078,4,0.089,5,0.306,9,0.067,10,0.325,12,0.559,14,0.481,15,0.022,18,0.324,19,0.637,20,0.605,23,0.317,24,0.441,26,0.409,27,1.877,28,0.822,29,0.769,39,1.121,44,0.089,48,0.764,50,0.822,52,0.105,55,1.818,56,2.557,57,1.327,58,2.475,66,1.016,67,1.993,74,1.201,82,0.008,83,0.008,88,0.842,92,1.317,94,0.778,97,0.731,106,0.722,114,2.752,116,1.691,117,2.752,118,2.92,121,1.451,125,2.148,129,0.947,131,1.259,133,1.691,134,3.05,135,2.752,143,0.641,144,1.354,145,1.993,153,1.562,174,0.947,178,0.842,188,2.503,222,1.354,229,2.004,274,1.396,287,1.238,288,2.603,290,1.238,295,2.04,296,1.635,297,2.603,298,2.696,299,2.301,300,2.301,301,2.301,302,2.301,303,3.989,304,2.696,305,5.378,306,2.696,307,1.635,308,3.933,309,2.696,310,2.696,311,1.635,312,2.696,313,2.696,314,2.696,315,1.635,316,2.503,317,2.301,318,2.696,319,1.635,320,2.696,321,2.696,322,2.696,323,2.355,324,2.696,325,2.696,326,1.635,327,1.635,328,1.635,329,1.396,330,1.396,331,1.396,332,1.396,333,1.635,334,1.635,335,1.396,336,2.696,337,1.635,338,1.635,339,1.635,340,1.635,341,3.439,342,2.935,343,1.635,344,1.635,345,1.635,346,2.696,347,1.635,348,1.635,349,1.635,350,2.696,351,5.602,352,2.696,353,1.635,354,1.635,355,1.635,356,1.635,357,1.635,358,1.635,359,1.635,360,1.635,361,2.696,362,3.439,363,1.635,364,1.396,365,1.635,366,1.635,367,1.635,368,1.635,369,1.635,370,1.635,371,1.635,372,1.635,373,1.635,374,1.635,375,1.396,376,1.635,377,1.12,378,1.635,379,1.635,380,1.635,381,1.635,382,1.635,383,3.439,384,1.635,385,1.635,386,1.635,387,1.635,388,1.635,389,1.635,390,1.635,391,1.635,392,1.635,393,1.635,394,1.635,395,1.635,396,1.635,397,1.635,398,1.635,399,1.635,400,1.635,401,1.635,402,1.635]],["title/modules/HraStateModule.html",[403,3.128,404,2.774]],["body/modules/HraStateModule.html",[3,0.189,4,0.286,5,0.217,9,0.162,15,0.022,17,1.995,18,0.437,20,1.468,24,0.305,26,0.992,31,2.3,32,2.3,34,2.817,35,2.3,37,3.032,38,2.719,42,2.719,44,0.217,52,0.256,53,3.282,61,1.868,76,3.961,82,0.015,83,0.015,118,1.754,203,3.583,261,3.961,264,3.005,295,3.961,404,3.961,405,3.005,406,3.97,407,3.961,408,5.232,409,3.961,410,3.97,411,3.961,412,2.491,413,2.491,414,3.583,415,2.719,416,3.388,417,3.583,418,2.491,419,3.388,420,3.97,421,3.97,422,3.97,423,3.005,424,3.005,425,3.005]],["title/interfaces/IllustratorModel.html",[0,1.524,426,2.51]],["body/interfaces/IllustratorModel.html",[0,1.942,2,1.645,3,0.125,4,0.143,5,0.143,9,0.107,10,0.521,11,1.964,12,0.656,13,0.655,14,0.565,15,0.022,16,1.294,17,1.318,18,0.342,19,0.923,20,0.97,21,0.264,22,0.434,23,0.309,24,0.474,25,1.839,26,0.655,27,1.839,28,1.318,29,1.234,34,1.412,35,3.209,40,0.875,41,0.824,44,0.214,45,2.447,47,1.964,48,0.382,50,1.318,52,0.169,54,0.774,56,3.709,58,2.064,59,1.412,60,1.645,61,1.234,63,3.643,66,0.774,74,1.365,77,1.519,82,0.011,83,0.011,131,0.985,143,1.028,153,2.265,159,2.677,175,2.677,178,0.819,209,1.796,218,1.985,219,1.985,221,1.09,222,1.318,223,1.796,228,1.645,229,1.318,230,1.645,231,1.796,237,1.234,243,2.104,245,3.239,248,1.519,249,2.104,250,2.515,253,3.63,254,3.558,268,1.985,316,1.645,426,2.677,427,1.985,428,3.336,429,3.336,430,2.959,431,2.959,432,3.988,433,2.238,434,1.985,435,1.985,436,2.238,437,2.238,438,2.238,439,2.238,440,3.336,441,2.238,442,2.238,443,2.238,444,2.677]],["title/classes/IllustratorSelectors.html",[52,0.236,445,3.128]],["body/classes/IllustratorSelectors.html",[3,0.158,4,0.181,5,0.181,9,0.136,10,0.66,12,0.677,14,0.582,15,0.022,16,1.158,18,0.33,21,0.334,22,0.55,26,0.83,34,1.788,35,3.648,44,0.181,48,0.777,52,0.214,56,3.651,57,1.871,66,1.577,74,2.018,82,0.014,83,0.014,85,0.55,87,2.685,88,1.447,89,3.605,92,1.763,94,0.941,97,0.885,103,1.788,153,2.685,245,2.874,253,3.478,254,3.478,426,4.645,434,3.508,435,3.508,445,3.956,446,3.32,447,3.32,448,5.339,449,3.32,450,3.32,451,3.32,452,3.32,453,3.32,454,3.32,455,5.339,456,2.834]],["title/injectables/IllustratorState.html",[19,0.866,34,1.973]],["body/injectables/IllustratorState.html",[0,1.476,3,0.11,4,0.126,5,0.126,9,0.094,10,0.459,12,0.615,13,0.577,14,0.571,15,0.022,16,1.486,17,1.161,18,0.324,19,0.839,20,0.854,21,0.233,22,0.383,23,0.272,24,0.505,25,1.671,26,0.577,27,2.035,28,1.161,29,1.087,34,1.912,35,2.506,40,1.079,41,1.023,44,0.194,45,2.876,47,2.439,48,0.763,50,1.161,52,0.149,54,1.049,56,3.46,57,1.356,58,2.444,59,1.912,60,2.228,61,1.671,63,3.47,66,0.682,74,1.696,77,2.058,82,0.01,83,0.01,88,1.109,92,1.603,94,0.856,97,0.804,106,1.021,110,1.582,112,1.582,131,0.912,143,0.905,153,1.339,159,1.582,175,1.582,178,0.721,209,2.432,218,2.688,219,2.688,221,1.476,222,1.161,223,1.582,228,1.449,229,1.161,230,1.449,231,1.582,237,1.671,243,2.614,245,2.329,248,2.058,249,1.244,250,3.101,253,3.504,254,3.101,268,2.688,316,2.228,426,1.582,427,1.749,428,1.972,429,1.972,430,1.749,431,1.749,432,4.143,433,1.972,434,2.688,435,2.688,436,3.031,437,3.031,438,1.972,439,1.972,440,3.031,441,1.972,442,3.031,443,3.031,444,2.432,457,2.31,458,2.31,459,2.31,460,2.31,461,2.31,462,2.31]],["title/classes/Load.html",[40,0.687,52,0.236]],["body/classes/Load.html",[3,0.194,4,0.222,5,0.222,6,2.67,7,2.67,9,0.166,12,0.515,13,1.785,14,0.443,15,0.022,18,0.328,21,0.535,22,0.674,23,0.626,24,0.312,39,1.69,40,0.996,41,0.857,44,0.324,48,0.592,52,0.405,54,1.569,55,1.201,82,0.016,83,0.016,85,0.674,94,0.717,97,0.674,101,1.659,119,1.69,126,1.269,127,1.074,131,0.857,136,1.565,138,2.5,139,2.5,140,1.136,141,1.136,146,1.69,221,1.69,236,2.784,237,1.913,238,1.503,239,1.42,240,2.784,241,1.593,242,1.593,463,2.784,464,4.065]],["title/classes/Load-1.html",[40,0.577,52,0.199,377,2.111]],["body/classes/Load-1.html",[3,0.19,4,0.218,5,0.218,9,0.163,12,0.505,13,1.755,14,0.434,15,0.022,16,0.995,18,0.324,21,0.528,22,0.66,23,0.69,24,0.478,40,0.982,41,1.105,44,0.32,48,0.58,52,0.401,54,1.548,82,0.015,83,0.015,85,0.66,94,0.702,97,0.66,101,1.637,119,1.655,126,1.243,127,1.052,131,0.839,136,1.549,140,1.112,141,1.112,150,2.467,151,2.467,157,2.307,169,2.001,178,1.243,210,2.498,238,1.472,239,1.391,241,1.56,242,1.56,247,2.467,255,2.727,256,3.014,257,4.014,258,2.727,259,2.727,260,3.014,463,2.727,465,3.982]],["title/classes/Load-2.html",[40,0.577,52,0.199,466,2.63]],["body/classes/Load-2.html",[3,0.179,4,0.205,5,0.205,9,0.153,12,0.475,13,1.736,14,0.409,15,0.022,16,1.52,18,0.311,21,0.507,22,0.621,23,0.593,24,0.487,40,0.944,41,0.791,44,0.332,47,3.056,48,0.546,52,0.409,54,1.488,82,0.015,83,0.015,85,0.621,94,0.661,97,0.621,101,1.573,119,1.56,126,1.171,127,0.991,131,0.791,136,1.607,140,1.408,141,1.408,146,1.56,221,1.56,237,1.765,238,1.387,239,1.31,241,1.47,242,1.47,243,2.019,244,2.353,245,2.712,246,2.353,247,2.371,248,2.173,249,2.712,250,2.019,251,2.569,252,2.353,253,2.019,254,2.019,463,2.569,467,3.751]],["title/classes/Load-3.html",[40,0.577,52,0.199,468,2.63]],["body/classes/Load-3.html",[3,0.198,4,0.227,5,0.227,9,0.169,12,0.526,13,1.767,14,0.453,15,0.022,16,1.347,18,0.333,21,0.542,22,0.688,23,0.772,24,0.459,40,1.186,41,1.136,44,0.294,48,0.604,52,0.385,82,0.016,83,0.016,85,0.688,94,0.732,97,0.688,101,1.682,119,1.726,126,1.296,127,1.097,131,0.875,136,1.424,140,1.16,141,1.16,238,1.535,239,1.45,241,1.627,242,1.627,247,2.535,463,2.844,469,3.122,470,3.122,471,3.143,472,4.152,473,3.143]],["title/classes/Load-4.html",[40,0.577,52,0.199,474,2.63]],["body/classes/Load-4.html",[3,0.236,4,0.271,5,0.271,9,0.202,15,0.021,18,0.306,21,0.499,23,0.764,24,0.462,40,1.215,44,0.271,52,0.319,82,0.018,83,0.018,85,0.821,127,1.309,136,1.309,178,2.025,418,4.068,475,3.393,476,3.393,477,4.954,478,6.02,479,4.123,480,4.954]],["title/classes/RegisterFormat.html",[52,0.236,135,2.124]],["body/classes/RegisterFormat.html",[3,0.169,4,0.194,5,0.265,9,0.145,12,0.449,14,0.387,15,0.022,18,0.3,21,0.357,23,0.7,24,0.456,39,1.474,44,0.325,48,0.516,52,0.383,55,1.432,82,0.014,83,0.014,85,0.587,94,0.625,97,0.587,114,2.054,115,2.224,116,2.224,117,3.202,118,2.839,119,2.016,121,2.976,122,3.042,124,2.428,125,1.909,126,1.107,127,0.937,128,3.199,129,2.054,130,2.224,131,0.747,132,2.224,133,3.728,134,3.413,135,2.81,136,1.57,137,2.428,138,2.601,139,2.601,140,1.544,141,1.544,142,2.428,143,1.389,144,1.782,145,2.054,146,1.474,147,2.428,148,2.428,283,3.026,481,3.546]],["title/classes/Reset.html",[41,0.773,52,0.236]],["body/classes/Reset.html",[3,0.205,4,0.235,5,0.235,6,2.159,7,2.159,9,0.175,13,1.724,15,0.022,18,0.34,21,0.554,22,0.712,23,0.649,24,0.423,39,1.786,40,0.805,41,1.161,44,0.332,52,0.413,54,1.269,55,1.269,82,0.016,83,0.016,85,0.712,101,1.341,126,1.341,127,1.135,131,0.906,136,1.607,138,2.022,139,2.022,140,1.2,141,1.2,146,1.786,221,2.29,236,2.943,237,2.022,238,1.589,239,1.501,240,2.943,241,1.684,242,1.684]],["title/classes/Reset-1.html",[41,0.65,52,0.199,377,2.111]],["body/classes/Reset-1.html",[3,0.2,4,0.229,5,0.229,9,0.171,13,1.644,15,0.022,16,1.355,18,0.335,21,0.545,22,0.694,23,0.748,24,0.487,40,0.785,41,1.339,44,0.328,52,0.409,54,1.238,82,0.016,83,0.016,85,0.694,101,1.308,126,1.308,127,1.107,131,0.883,136,1.588,140,1.171,141,1.171,150,1.972,151,1.972,157,2.428,169,2.106,178,1.308,210,2.629,238,1.549,239,1.464,241,1.642,242,1.642,247,1.972,255,2.87,256,3.172,257,3.712,258,2.87,259,2.87,260,3.172]],["title/classes/Reset-2.html",[41,0.65,52,0.199,466,2.63]],["body/classes/Reset-2.html",[3,0.188,4,0.215,5,0.215,9,0.161,13,1.611,15,0.022,16,1.456,18,0.322,21,0.524,22,0.652,23,0.613,24,0.495,40,0.737,41,1.096,44,0.339,47,3.115,52,0.415,54,1.162,82,0.015,83,0.015,85,0.652,101,1.229,126,1.229,127,1.04,131,0.83,136,1.638,140,1.453,141,1.453,146,1.636,221,2.163,237,1.852,238,1.455,239,1.375,241,1.542,242,1.542,243,2.119,244,2.469,245,2.801,246,2.469,247,1.852,248,2.28,249,2.801,250,2.119,251,2.695,252,2.469,253,2.119,254,2.119]],["title/classes/Reset-3.html",[41,0.65,52,0.199,468,2.63]],["body/classes/Reset-3.html",[3,0.21,4,0.241,5,0.241,9,0.18,13,1.67,15,0.022,16,1.102,18,0.346,21,0.563,22,0.73,23,0.787,24,0.472,40,1.049,41,1.364,44,0.306,52,0.396,82,0.016,83,0.016,85,0.73,101,1.376,126,1.376,127,1.165,131,0.929,136,1.48,140,1.232,141,1.232,238,1.63,239,1.54,241,1.727,242,1.727,247,2.074,469,2.554,470,2.554,471,3.337,473,3.337]],["title/interfaces/ScreenModeModel.html",[0,1.524,482,2.51]],["body/interfaces/ScreenModeModel.html",[0,2.075,2,3.131,3,0.238,4,0.273,5,0.273,9,0.204,10,0.992,11,3.038,14,0.544,15,0.021,24,0.383,44,0.273,82,0.018,83,0.018,102,3.502,153,2.891,412,3.131,413,3.131,482,4.141,483,3.418,484,3.418,485,4.99,486,4.631,487,4.141,488,5.161]],["title/classes/ScreenModeSelectors.html",[52,0.236,489,3.128]],["body/classes/ScreenModeSelectors.html",[3,0.198,4,0.227,5,0.227,9,0.169,10,0.826,12,0.526,14,0.453,15,0.022,18,0.333,24,0.413,26,1.038,44,0.227,48,0.604,52,0.268,55,1.226,57,1.505,61,2.535,66,1.226,82,0.016,83,0.016,85,0.688,87,3.894,88,1.682,89,3.22,92,1.371,94,0.732,97,0.688,102,2.9,103,3.22,412,4.292,413,3.971,482,4.335,483,3.69,484,3.69,486,3.69,489,4.598,490,4.152,491,5.388,492,4.152,493,5.388,494,3.544,495,4.152]],["title/injectables/ScreenModeState.html",[19,0.866,411,2.774]],["body/injectables/ScreenModeState.html",[3,0.177,4,0.203,5,0.203,9,0.152,10,0.74,12,0.471,14,0.406,15,0.022,18,0.391,19,1.184,20,1.376,23,0.667,24,0.485,25,2.852,26,0.93,44,0.203,45,1.644,48,0.729,50,1.869,52,0.24,55,1.48,57,1.039,58,2.214,67,2.156,74,1.299,82,0.015,83,0.015,88,1.564,92,1.228,94,0.656,97,0.616,101,2.079,106,1.644,308,2.548,329,3.175,330,3.175,342,3.175,411,3.793,412,4.088,413,3.969,444,3.431,482,3.431,483,3.431,484,3.431,486,3.88,494,3.175,496,3.72,497,5.01,498,3.72,499,5.01,500,3.72,501,5.01,502,3.72,503,3.175,504,3.72,505,3.72]],["title/classes/SendMessage.html",[52,0.236,270,2.774]],["body/classes/SendMessage.html",[0,2.318,3,0.209,4,0.239,5,0.239,9,0.179,12,0.555,14,0.669,15,0.021,18,0.345,21,0.561,22,0.726,23,0.516,44,0.239,48,0.637,52,0.395,82,0.016,83,0.016,85,0.726,94,0.772,97,0.726,119,2.55,127,1.157,136,1.157,140,1.224,141,1.224,252,3.498,267,4.759,270,4.22,275,5.047,277,3.738,302,4.759,506,4.379,507,5.575,508,5.575,509,5.575,510,4.379,511,6.816,512,4.379,513,4.379]],["title/classes/Set.html",[52,0.236,101,1.144]],["body/classes/Set.html",[3,0.211,4,0.242,5,0.242,9,0.229,12,0.56,14,0.482,15,0.022,18,0.273,21,0.445,23,0.521,44,0.242,48,0.644,52,0.285,55,1.306,82,0.017,83,0.017,85,0.733,94,0.78,97,0.733,101,2.088,102,3.317,119,1.839,127,1.169,136,1.169,138,2.64,139,2.64,140,1.236,141,1.236,412,3.519,413,4.065,483,3.842,484,3.842,486,4.22,487,3.842,488,4.788,503,3.774,514,4.422,515,5.61,516,4.422,517,4.422,518,4.422]],["title/classes/SetSelection.html",[52,0.236,250,1.973]],["body/classes/SetSelection.html",[3,0.178,4,0.204,5,0.204,9,0.153,12,0.474,13,1.584,14,0.408,15,0.022,16,1.518,18,0.311,21,0.506,22,0.62,23,0.592,24,0.486,40,0.701,41,0.788,44,0.332,47,3.185,48,0.544,52,0.408,54,1.105,82,0.015,83,0.015,85,0.62,94,0.66,97,0.62,101,1.168,119,1.555,126,1.168,127,0.989,131,0.788,136,1.605,140,1.405,141,1.405,146,1.555,221,1.555,237,1.76,238,1.383,239,1.307,241,1.466,242,1.466,243,2.014,244,2.347,245,3.27,246,2.347,247,1.76,248,2.914,249,3.27,250,2.707,251,2.562,252,3.155,253,2.707,254,2.707,519,3.741,520,3.741]],["title/classes/SourceRefsSelectors.html",[52,0.236,521,3.128]],["body/classes/SourceRefsSelectors.html",[3,0.205,4,0.35,5,0.235,9,0.175,10,0.854,12,0.544,14,0.469,15,0.022,18,0.376,21,0.432,22,0.712,26,1.074,37,2.489,38,3.772,44,0.235,48,0.625,52,0.277,57,1.698,66,1.269,82,0.016,83,0.016,85,0.712,87,3.191,88,1.72,89,3.273,92,1.418,94,0.757,97,0.712,103,2.313,469,3.191,470,3.191,521,4.701,522,4.296,523,5.508,524,4.701,525,5.508,526,5.789,527,4.296,528,4.296,529,4.701,530,4.296,531,4.296]],["title/injectables/SourceRefsState.html",[19,0.866,37,2.124]],["body/injectables/SourceRefsState.html",[3,0.159,4,0.345,5,0.182,9,0.136,10,0.663,12,0.589,13,0.834,14,0.584,15,0.022,16,1.447,17,1.677,18,0.376,19,1.099,20,1.234,21,0.336,22,0.553,23,0.393,24,0.506,25,2.188,26,0.834,27,2.519,28,1.677,29,1.57,37,2.694,40,1.212,41,1.22,44,0.182,45,2.859,46,3.185,48,0.779,50,1.677,52,0.215,54,1.373,57,1.299,58,2.055,59,2.504,66,0.985,74,1.165,77,2.694,82,0.014,83,0.014,88,1.452,92,1.535,94,0.82,97,0.771,106,1.474,110,2.285,112,2.285,143,1.307,178,1.042,221,1.933,222,1.677,223,2.285,228,2.093,229,1.677,230,2.093,231,2.285,444,3.666,469,3.101,470,3.101,524,2.848,526,2.848,529,4.942,532,2.848,533,3.337,534,3.337,535,3.337,536,3.337]],["title/injectables/StateAnalyticsPluginService.html",[19,0.866,414,2.51]],["body/injectables/StateAnalyticsPluginService.html",[3,0.101,4,0.116,5,0.116,9,0.135,10,0.421,12,0.268,14,0.712,15,0.022,16,1.394,18,0.286,19,1.188,20,0.782,23,0.776,24,0.456,26,0.529,44,0.224,46,3.172,48,0.308,52,0.136,55,1.647,57,1.405,58,1.808,61,0.996,66,1.485,67,1.922,74,1.429,82,0.01,83,0.01,88,1.036,94,0.373,97,0.351,102,1.786,106,0.935,131,1.06,143,1.3,174,1.226,178,0.661,188,2.566,190,2.272,222,1.063,228,2.081,229,2.327,239,0.739,258,2.272,297,1.602,316,2.566,323,1.449,335,1.806,407,1.602,409,2.511,414,2.802,415,4.161,416,5.185,423,1.602,424,1.602,425,1.602,456,5.513,487,1.449,537,2.511,538,2.511,539,1.602,540,4.631,541,3.317,542,5.775,543,4.631,544,2.116,545,3.317,546,3.317,547,4.091,548,4.091,549,2.116,550,3.492,551,2.116,552,3.317,553,2.116,554,2.116,555,2.831,556,2.831,557,2.511,558,2.831,559,1.806,560,2.831,561,1.806,562,4.831,563,1.806,564,1.806,565,1.806,566,1.806,567,1.806,568,1.806,569,2.831,570,2.831,571,2.116,572,1.806,573,3.492,574,1.806,575,1.806,576,1.806,577,2.831,578,2.831,579,1.806,580,2.116,581,2.116,582,2.116,583,2.116,584,2.116,585,2.116,586,2.116,587,2.116,588,2.116,589,2.116,590,2.116,591,2.116,592,2.116,593,2.116,594,2.116,595,2.831,596,2.116,597,2.116,598,2.116,599,2.116,600,2.116,601,4.631,602,3.317,603,4.091,604,2.116,605,2.116,606,2.116,607,2.116,608,1.806,609,1.806]],["title/classes/TissueLibrarySelectors.html",[52,0.236,610,3.128]],["body/classes/TissueLibrarySelectors.html",[3,0.182,4,0.209,5,0.209,9,0.208,10,0.76,12,0.485,13,0.956,14,0.627,15,0.022,16,1.276,18,0.379,21,0.385,22,0.634,24,0.47,26,0.956,44,0.209,48,0.557,52,0.37,55,1.13,57,1.426,66,1.13,82,0.015,83,0.015,85,0.634,88,1.594,89,3.093,92,1.263,94,0.674,96,3.864,97,0.634,103,3.093,174,2.958,178,2.051,417,4.374,418,4.006,475,3.496,476,3.496,479,3.496,610,4.357,611,3.825,612,5.104,613,5.104,614,5.104,615,4.64,616,3.825,617,3.825,618,5.745,619,5.104,620,5.104,621,3.265,622,3.825,623,3.825,624,3.825]],["title/injectables/TissueLibraryState.html",[19,0.866,417,2.51]],["body/injectables/TissueLibraryState.html",[3,0.169,4,0.194,5,0.194,9,0.198,10,0.707,12,0.451,14,0.388,15,0.022,16,1.214,18,0.397,19,1.148,20,1.314,21,0.358,22,0.589,23,0.419,24,0.527,26,0.889,27,2.604,28,1.786,29,1.673,40,0.666,44,0.194,45,2.147,48,0.707,52,0.229,54,1.435,55,1.05,57,1.357,59,2.615,66,1.05,82,0.014,83,0.014,88,1.517,92,1.174,94,0.627,97,0.589,106,1.571,139,2.286,143,1.904,178,2.092,209,3.327,222,1.786,229,2.441,230,2.23,308,3.327,417,3.327,418,4.203,475,3.327,476,3.327,479,2.435,579,3.034,615,2.691,621,3.034,625,3.555,626,4.858,627,4.858,628,5.077,629,3.555,630,4.858,631,4.858,632,3.555,633,3.034,634,3.555,635,3.555,636,3.555]],["title/dependencies.html",[637,2.63,638,3.328]],["body/dependencies.html",[15,0.021,20,2.024,82,0.019,83,0.019,638,4.835,639,5.472,640,5.472,641,5.472,642,5.472,643,6.388]],["title/miscellaneous/functions.html",[644,1.785,645,3.752]],["body/miscellaneous/functions.html",[9,0.114,10,0.964,11,1.404,12,0.798,14,0.701,15,0.021,16,0.699,32,2.374,48,0.917,57,1.825,58,1.235,74,1.431,82,0.012,83,0.012,96,3.101,97,1.043,102,1.505,117,1.619,118,1.81,121,1.505,125,3.516,134,2.059,138,1.315,144,1.404,150,1.315,151,1.315,158,1.914,159,2.806,160,2.806,167,4.304,170,2.806,174,2.81,188,4.278,190,3.894,226,4.139,249,2.206,257,1.914,297,2.116,317,2.385,323,1.914,375,2.385,415,3.322,430,2.116,487,1.914,537,2.116,538,2.116,539,3.101,557,2.116,561,2.385,562,4.043,563,2.385,564,2.385,565,2.385,566,2.385,567,2.385,568,5.072,569,2.385,570,2.385,633,2.385,644,1.619,645,2.385,646,4.498,647,6.14,648,4.097,649,2.116,650,4.097,651,4.097,652,4.097,653,4.097,654,4.097,655,4.097,656,2.385,657,2.795,658,2.795,659,2.795,660,2.795,661,2.795,662,2.795,663,5.686,664,2.795,665,5.686,666,2.795,667,2.795,668,5.341,669,2.795,670,2.795,671,2.795,672,2.795,673,2.795,674,2.795,675,2.795,676,2.795,677,2.795,678,2.795,679,2.795,680,2.795,681,2.795,682,4.097,683,2.795,684,2.795,685,2.795,686,2.795,687,2.795,688,2.795,689,2.795,690,2.795,691,2.116,692,2.795]],["title/index.html",[10,0.613,693,3.082,694,3.082]],["body/index.html",[15,0.019,24,0.488,82,0.019,83,0.019,419,4.633,695,5.429,696,6.358,697,5.429,698,6.358,699,6.358,700,5.429,701,5.429,702,5.429]],["title/modules.html",[405,3.755]],["body/modules.html",[15,0.019,82,0.019,83,0.019,287,4.263,404,4.263,405,4.263,703,5.631,704,5.631]],["title/overview.html",[705,4.233]],["body/overview.html",[2,3.392,15,0.019,41,1.14,82,0.019,83,0.019,85,0.896,106,2.389,377,3.703,403,4.615,474,4.615,638,4.801,705,4.615,706,6.343,707,5.407,708,5.407,709,5.407]],["title/properties.html",[11,2.209,637,2.63]],["body/properties.html",[11,2.841,15,0.02,82,0.019,83,0.019,710,5.655,711,5.655]],["title/miscellaneous/typealiases.html",[644,1.785,712,4.397]],["body/miscellaneous/typealiases.html",[6,1.8,7,1.8,8,3.697,10,0.712,14,0.774,15,0.014,23,0.422,24,0.275,25,3.033,45,3.008,82,0.014,83,0.014,121,2.992,122,3.486,128,2.992,150,1.686,151,1.686,152,4.518,154,3.058,158,3.345,164,4.169,165,3.058,166,2.712,167,3.697,168,5.5,169,1.8,170,2.454,171,2.712,172,2.712,178,1.119,290,4.518,305,4.743,308,2.454,418,2.248,427,2.712,469,2.076,470,2.076,475,2.454,476,2.454,479,2.454,532,4.169,615,3.697,628,4.169,644,2.076,646,4.207,649,4.727,691,2.712,713,3.583,714,3.058,715,3.583,716,3.058,717,4.884,718,5.557,719,5.33,720,6.245,721,6.245,722,5.968,723,3.058,724,5.968,725,3.058,726,3.058,727,3.058,728,3.583,729,4.884,730,3.583,731,3.583]],["title/miscellaneous/variables.html",[644,1.785,732,3.752]],["body/miscellaneous/variables.html",[3,0.108,6,0.67,7,0.67,9,0.093,10,0.265,11,1.492,12,0.169,14,0.498,15,0.021,17,0.67,19,0.315,21,0.134,23,0.696,24,0.102,52,0.226,56,1.223,61,1.069,67,0.773,82,0.007,83,0.007,102,0.718,115,0.837,118,1.312,125,3.47,128,1.223,130,0.837,132,0.837,134,1.761,144,1.142,150,1.069,151,1.069,152,2.654,162,1.939,163,2.992,166,2.247,169,1.761,170,2.932,171,1.72,172,1.72,173,2.534,174,2.279,175,1.556,176,1.939,177,3.899,178,1.094,179,3.357,180,3.653,181,1.138,182,1.138,183,1.138,184,1.138,185,1.939,186,1.138,187,1.138,188,2.467,189,1.138,190,1.556,191,1.138,192,1.138,193,1.138,194,1.138,236,1.556,238,1.296,239,1.374,240,0.913,244,0.837,246,0.837,255,1.556,259,0.913,264,1.009,275,1.009,288,2.977,299,3.899,300,1.138,301,1.138,316,1.862,323,4.842,331,1.939,332,1.939,364,3.357,407,1.009,409,1.009,414,0.913,415,2.932,423,1.009,424,1.009,425,1.009,431,2.247,469,0.773,470,0.773,471,1.72,473,1.009,537,1.72,538,1.009,539,2.654,550,1.939,555,2.534,556,2.534,557,1.009,558,1.138,559,1.939,560,1.138,562,5.311,572,1.138,573,2.534,574,1.138,575,1.138,576,1.138,577,1.138,578,1.138,595,2.534,608,1.138,609,1.939,644,0.773,646,2.654,649,2.654,656,2.534,691,1.009,714,1.138,716,1.138,719,2.992,723,2.992,725,2.992,726,2.992,727,2.534,732,1.138,733,4.812,734,6.705,735,1.334,736,1.334,737,2.272,738,6.357,739,2.272,740,1.334,741,2.272,742,2.968,743,2.272,744,3.933,745,3.506,746,2.272,747,2.272,748,2.272,749,2.272,750,2.272,751,2.272,752,2.272,753,2.272,754,2.272,755,2.272,756,2.272,757,2.272,758,2.272,759,5.02,760,2.272,761,2.272,762,4.569,763,3.506,764,2.968,765,2.968,766,2.272,767,3.506,768,2.272,769,2.272,770,1.334,771,1.334,772,2.272,773,1.334,774,3.933,775,1.334,776,1.334,777,1.334,778,1.334,779,1.334,780,5.199,781,5.356,782,1.334,783,1.334,784,2.968,785,1.334,786,1.334,787,2.968,788,4.28,789,2.272,790,1.334,791,1.334,792,1.334,793,1.334,794,1.334,795,1.334,796,1.334,797,4.28,798,1.334,799,2.272,800,2.272,801,1.334,802,1.334,803,3.506,804,1.334,805,1.334,806,1.334,807,2.272,808,1.334,809,1.334,810,1.334,811,1.334,812,1.334,813,1.334,814,1.334,815,1.334,816,1.334,817,1.334,818,1.334,819,2.272,820,1.334,821,1.334,822,1.334,823,1.334,824,1.334,825,1.334,826,1.334,827,1.334,828,1.334,829,1.334,830,1.334,831,1.334,832,3.506,833,1.334,834,1.334,835,1.334,836,1.334,837,1.334,838,1.334,839,1.334,840,1.334,841,1.334,842,2.272,843,1.334,844,2.968,845,1.334,846,1.334,847,2.272,848,1.334,849,2.272,850,1.334]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":375,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":711,"title":{},"body":{"properties.html":{}}}],["1",{"_index":377,"title":{"classes/Load-1.html":{},"classes/Reset-1.html":{}},"body":{"injectables/DownloadState.html":{},"overview.html":{}}}],["15.1.0",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":466,"title":{"classes/Load-2.html":{},"classes/Reset-2.html":{}},"body":{}}],["2.3.0",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["26",{"_index":709,"title":{},"body":{"overview.html":{}}}],["3",{"_index":468,"title":{"classes/Load-3.html":{},"classes/Reset-3.html":{}},"body":{}}],["4",{"_index":474,"title":{"classes/Load-4.html":{}},"body":{"overview.html":{}}}],["9",{"_index":708,"title":{},"body":{"overview.html":{}}}],["_ctx",{"_index":278,"title":{},"body":{"injectables/ContactState.html":{}}}],["absence",{"_index":676,"title":{},"body":{"miscellaneous/functions.html":{}}}],["action",{"_index":23,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action('[contact",{"_index":513,"title":{},"body":{"classes/SendMessage.html":{}}}],["action('[screenmode",{"_index":518,"title":{},"body":{"classes/Set.html":{}}}],["action('[tissuelibrary",{"_index":480,"title":{},"body":{"classes/Load-4.html":{}}}],["action('add",{"_index":142,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('clear",{"_index":146,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["action('compute",{"_index":260,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["action('download",{"_index":147,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('load",{"_index":241,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{}}}],["action('register",{"_index":137,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["action('reset",{"_index":242,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{}}}],["action('set",{"_index":251,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["action(['clear",{"_index":108,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["action([clear",{"_index":73,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["action(addentry",{"_index":306,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearentries",{"_index":310,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(clearselection",{"_index":443,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action(computeaggregates",{"_index":212,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["action(download",{"_index":314,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(load",{"_index":59,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["action(registerformat",{"_index":325,"title":{},"body":{"injectables/DownloadState.html":{}}}],["action(reset",{"_index":77,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["action(sendmessage",{"_index":272,"title":{},"body":{"injectables/ContactState.html":{}}}],["action(set",{"_index":499,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["action(setselection",{"_index":442,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["action_log",{"_index":599,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["actiongroup",{"_index":126,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{}}}],["actiongroup('activeftu",{"_index":240,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('cellsummary",{"_index":259,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('download",{"_index":132,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('illustrator",{"_index":246,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{},"miscellaneous/variables.html":{}}}],["actiongroup('sourcerefs",{"_index":473,"title":{},"body":{"classes/Load-3.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":316,"title":{},"body":{"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":42,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{}}}],["activeftu",{"_index":49,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftumodel",{"_index":1,"title":{"interfaces/ActiveFtuModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{}}}],["activeftuselectors",{"_index":84,"title":{"classes/ActiveFtuSelectors.html":{}},"body":{"classes/ActiveFtuSelectors.html":{}}}],["activeftustate",{"_index":53,"title":{"injectables/ActiveFtuState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{}}}],["add",{"_index":116,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["addd",{"_index":124,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["added",{"_index":630,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["addentry",{"_index":114,"title":{"classes/AddEntry.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["addentry(ctx",{"_index":304,"title":{},"body":{"injectables/DownloadState.html":{}}}],["aggregate",{"_index":169,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_cell",{"_index":173,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row",{"_index":166,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aggregate_row.array",{"_index":194,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["aggregates",{"_index":157,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["aggregates(state",{"_index":197,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["aggregation",{"_index":660,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aggregrated",{"_index":217,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["aggregrates",{"_index":156,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["alias",{"_index":729,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":713,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["analytics",{"_index":415,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["anchor",{"_index":386,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.click",{"_index":391,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.download",{"_index":389,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.href",{"_index":390,"title":{},"body":{"injectables/DownloadState.html":{}}}],["anchor.remove",{"_index":392,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/common",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":328,"title":{},"body":{"injectables/DownloadState.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{}}}],["app",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptitle",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":731,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["array",{"_index":159,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["array.isarray(value",{"_index":606,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["available",{"_index":287,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules.html":{}}}],["base",{"_index":238,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["being",{"_index":547,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["bigint",{"_index":560,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":383,"title":{},"body":{"injectables/DownloadState.html":{}}}],["blob([entry.data",{"_index":357,"title":{},"body":{"injectables/DownloadState.html":{}}}],["boolean",{"_index":102,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"classes/Set.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["boolean/number/string/null/bigint/undefined",{"_index":567,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["brand('downloadformatid",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branded",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":358,"title":{},"body":{"injectables/DownloadState.html":{}}}],["browse",{"_index":704,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":382,"title":{},"body":{"injectables/DownloadState.html":{}}}],["builtin",{"_index":333,"title":{},"body":{"injectables/DownloadState.html":{}}}],["calculates",{"_index":680,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":721,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["cancels",{"_index":218,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["canceluncompleted",{"_index":60,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["case",{"_index":350,"title":{},"body":{"injectables/DownloadState.html":{}}}],["cell",{"_index":31,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{}}}],["cellsummary",{"_index":160,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["cellsummaryactions",{"_index":30,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.load(iri",{"_index":68,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryactions.reset",{"_index":79,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["cellsummaryaggregate",{"_index":158,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummaryaggregaterow",{"_index":167,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummarymodel",{"_index":149,"title":{"interfaces/CellSummaryModel.html":{}},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["cellsummaryselectors",{"_index":195,"title":{"classes/CellSummarySelectors.html":{}},"body":{"classes/CellSummarySelectors.html":{}}}],["cellsummarystate",{"_index":203,"title":{"injectables/CellSummaryState.html":{}},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{}}}],["check",{"_index":563,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["checks",{"_index":100,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["children",{"_index":51,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["class",{"_index":52,"title":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":85,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"overview.html":{}}}],["clear",{"_index":39,"title":{"classes/Clear.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{}}}],["clear(undefined",{"_index":107,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["clearentries",{"_index":145,"title":{"classes/ClearEntries.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["clearentries(ctx",{"_index":309,"title":{},"body":{"injectables/DownloadState.html":{}}}],["clears",{"_index":237,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["clearselection",{"_index":243,"title":{"classes/ClearSelection.html":{}},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["clearselection(undefined",{"_index":457,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["color",{"_index":176,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":669,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":171,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["compute",{"_index":256,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregate",{"_index":226,"title":{},"body":{"injectables/CellSummaryState.html":{},"miscellaneous/functions.html":{}}}],["computeaggregate(summary",{"_index":657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["computeaggregates",{"_index":210,"title":{"classes/ComputeAggregates.html":{}},"body":{"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{}}}],["computeaggregates(undefined",{"_index":211,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["computes",{"_index":214,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["const",{"_index":131,"title":{},"body":{"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["constant",{"_index":724,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constructor",{"_index":119,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["constructor(format",{"_index":283,"title":{},"body":{"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["constructor(id",{"_index":120,"title":{},"body":{"classes/AddEntry.html":{}}}],["constructor(iri",{"_index":463,"title":{},"body":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{}}}],["constructor(isfullscreen",{"_index":516,"title":{},"body":{"classes/Set.html":{}}}],["constructor(message",{"_index":510,"title":{},"body":{"classes/SendMessage.html":{}}}],["constructor(readonly",{"_index":140,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["constructor(selected",{"_index":519,"title":{},"body":{"classes/SetSelection.html":{}}}],["contact",{"_index":264,"title":{},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{},"miscellaneous/variables.html":{}}}],["contact.actions",{"_index":279,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactacknowledgement",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactions.sendmessage",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactmessage",{"_index":511,"title":{},"body":{"classes/SendMessage.html":{}}}],["contactservice",{"_index":269,"title":{},"body":{"injectables/ContactState.html":{}}}],["contactstate",{"_index":261,"title":{"injectables/ContactState.html":{}},"body":{"injectables/ContactState.html":{},"modules/HraStateModule.html":{}}}],["contains",{"_index":175,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":300,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":45,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["conversion",{"_index":398,"title":{},"body":{"injectables/DownloadState.html":{}}}],["convert",{"_index":298,"title":{},"body":{"injectables/DownloadState.html":{}}}],["converted",{"_index":380,"title":{},"body":{"injectables/DownloadState.html":{}}}],["count",{"_index":682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["create",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('gradient",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcustomtype('size",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid",{"_index":648,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdownloadformatid('png",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid('svg",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdownloadformatid(id",{"_index":692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid('about",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('embed",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('exploreftu",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('illustration",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpage",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('landingpagereadmore",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('portal",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createlinkid('producttitle",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('apptitle",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('contactacknowledgement",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegend",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('gradientlegendinfo",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthdescription",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthimg",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthmoretext",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpagedepthtitle",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrodescription",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintroimg",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintromoretext",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintropartners",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('landingpageintrotitle",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metrics",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricslogo",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('metricstitle",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('productlogourl",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('producttitle",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegend",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('sizelegendinfo",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":138,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"miscellaneous/functions.html":{}}}],["ctx",{"_index":308,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["ctx.dispatch([new",{"_index":338,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.getstate",{"_index":346,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate",{"_index":341,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ctx.setstate(data",{"_index":636,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["current",{"_index":16,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":178,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-1.html":{},"classes/Load-4.html":{},"classes/Reset-1.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dataservice",{"_index":230,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["decorators",{"_index":92,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["default",{"_index":323,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_loggable_actions",{"_index":555,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":50,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["define",{"_index":719,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":94,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["dependencies",{"_index":638,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":584,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["depth",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":561,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["different",{"_index":301,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":396,"title":{},"body":{"injectables/DownloadState.html":{}}}],["discriminated",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispatch",{"_index":64,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["dispatch([new",{"_index":78,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["dispatch(new",{"_index":234,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["dispatched",{"_index":548,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["display",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.appendchild(anchor",{"_index":388,"title":{},"body":{"injectables/DownloadState.html":{}}}],["document.createelement('a",{"_index":387,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download",{"_index":118,"title":{"classes/Download.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["download(ctx",{"_index":313,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.action",{"_index":334,"title":{},"body":{"injectables/DownloadState.html":{}}}],["download.model",{"_index":129,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["download_entry",{"_index":723,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format",{"_index":725,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_format_id",{"_index":726,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["download_model",{"_index":727,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadactions.download",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadcontext",{"_index":305,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloaddata(blob",{"_index":384,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadentry",{"_index":122,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformat",{"_index":128,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"classes/RegisterFormat.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["downloadformatid",{"_index":121,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["downloadformatid:'${id",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadmodel",{"_index":290,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/typealiases.html":{}}}],["downloadremotedata(url",{"_index":400,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloads",{"_index":394,"title":{},"body":{"injectables/DownloadState.html":{}}}],["downloadselectors",{"_index":285,"title":{"classes/DownloadSelectors.html":{}},"body":{"classes/DownloadSelectors.html":{}}}],["downloadstate",{"_index":295,"title":{"injectables/DownloadState.html":{}},"body":{"injectables/DownloadState.html":{},"modules/HraStateModule.html":{}}}],["draft.entries",{"_index":345,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.entries[id",{"_index":344,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.formats[format.id",{"_index":343,"title":{},"body":{"injectables/DownloadState.html":{}}}],["draft.isfullscreen",{"_index":505,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["each",{"_index":687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["elements",{"_index":186,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entires",{"_index":312,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entries",{"_index":144,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["entries[format",{"_index":347,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry",{"_index":117,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{}}}],["entry.url",{"_index":353,"title":{},"body":{"injectables/DownloadState.html":{}}}],["entry?.type",{"_index":349,"title":{},"body":{"injectables/DownloadState.html":{}}}],["error('cannot",{"_index":360,"title":{},"body":{"injectables/DownloadState.html":{}}}],["event",{"_index":591,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["execute",{"_index":702,"title":{},"body":{"index.html":{}}}],["expandrow",{"_index":650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandrow(row",{"_index":662,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expands",{"_index":664,"title":{},"body":{"miscellaneous/functions.html":{}}}],["explore",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exploreftu",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["extends",{"_index":136,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["extension",{"_index":364,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":239,"title":{},"body":{"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["fakebase",{"_index":366,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fakebase).pathname",{"_index":370,"title":{},"body":{"injectables/DownloadState.html":{}}}],["false",{"_index":504,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["fetch",{"_index":397,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fields",{"_index":428,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["filename",{"_index":351,"title":{},"body":{"injectables/DownloadState.html":{}}}],["fileurl",{"_index":399,"title":{},"body":{"injectables/DownloadState.html":{}}}],["followed",{"_index":189,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["forked",{"_index":436,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["forkjoin",{"_index":432,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["form",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":134,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["format.id",{"_index":293,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats",{"_index":288,"title":{},"body":{"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["formats(state",{"_index":289,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["formats.ts",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formats[id",{"_index":365,"title":{},"body":{"injectables/DownloadState.html":{}}}],["formatted",{"_index":381,"title":{},"body":{"injectables/DownloadState.html":{}}}],["found",{"_index":674,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ftu",{"_index":17,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions",{"_index":43,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["ftu.actions.ts",{"_index":236,"title":{},"body":{"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"miscellaneous/variables.html":{}}}],["ftu.actions.ts:8",{"_index":464,"title":{},"body":{"classes/Load.html":{}}}],["ftu.selectors.ts",{"_index":86,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:15",{"_index":95,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.selectors.ts:9",{"_index":99,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state",{"_index":104,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["ftu.state.ts",{"_index":8,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"miscellaneous/typealiases.html":{}}}],["ftu.state.ts:36",{"_index":111,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:50",{"_index":109,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu.state.ts:59",{"_index":113,"title":{},"body":{"injectables/ActiveFtuState.html":{}}}],["ftu/active",{"_index":7,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftudataschemas",{"_index":161,"title":{},"body":{"interfaces/CellSummaryModel.html":{}}}],["ftudataschemas.cell_summary_row",{"_index":182,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["ftudataservice",{"_index":223,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["full",{"_index":493,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["fullscreen",{"_index":488,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{}}}],["function",{"_index":568,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":645,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funtion",{"_index":566,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["ga",{"_index":580,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["generated",{"_index":695,"title":{},"body":{"index.html":{}}}],["getactiontypefrominstance",{"_index":551,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getactiontypefrominstance(action",{"_index":593,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["getcolumnindex",{"_index":651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnindex(indexbyid",{"_index":667,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel",{"_index":652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlabel(items",{"_index":671,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow",{"_index":653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrow(rowbyid",{"_index":677,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":96,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{}}}],["getstate",{"_index":62,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{}}}],["getstate().iri",{"_index":65,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["getting",{"_index":693,"title":{"index.html":{}},"body":{}}],["gettotalcount",{"_index":654,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettotalcount(row",{"_index":679,"title":{},"body":{"miscellaneous/functions.html":{}}}],["given",{"_index":257,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{}}}],["google",{"_index":540,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["googleanalyticsservice",{"_index":553,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["gradient",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegend",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradientlegendinfo",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":703,"title":{},"body":{"modules.html":{}}}],["group",{"_index":130,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["guess",{"_index":362,"title":{},"body":{"injectables/DownloadState.html":{}}}],["guessfilename(ctx",{"_index":363,"title":{},"body":{"injectables/DownloadState.html":{}}}],["handle",{"_index":46,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["handle(state",{"_index":541,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handler's",{"_index":730,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handles",{"_index":545,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["handling",{"_index":209,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/TissueLibraryState.html":{}}}],["hasdata",{"_index":292,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["having",{"_index":154,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["helper",{"_index":728,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["hra",{"_index":21,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["hrastatemodule",{"_index":404,"title":{"modules/HraStateModule.html":{}},"body":{"modules/HraStateModule.html":{},"modules.html":{}}}],["http",{"_index":336,"title":{},"body":{"injectables/DownloadState.html":{}}}],["httpclient",{"_index":327,"title":{},"body":{"injectables/DownloadState.html":{}}}],["https://base.com",{"_index":367,"title":{},"body":{"injectables/DownloadState.html":{}}}],["id",{"_index":125,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ids.ts",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignoring",{"_index":688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["illustrartor",{"_index":429,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustration",{"_index":431,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":245,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["illustrator",{"_index":35,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.actions",{"_index":433,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["illustrator.state",{"_index":454,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratoractions",{"_index":33,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.load(iri",{"_index":69,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratoractions.reset",{"_index":80,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["illustratormodel",{"_index":426,"title":{"interfaces/IllustratorModel.html":{}},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustrators",{"_index":435,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["illustratorselectors",{"_index":445,"title":{"classes/IllustratorSelectors.html":{}},"body":{"classes/IllustratorSelectors.html":{}}}],["illustratorstate",{"_index":34,"title":{"injectables/IllustratorState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["image",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["immer",{"_index":330,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["implements",{"_index":335,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["imports",{"_index":420,"title":{},"body":{"modules/HraStateModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexbyid",{"_index":670,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicating",{"_index":675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["individual",{"_index":508,"title":{},"body":{"classes/SendMessage.html":{}}}],["inferred",{"_index":722,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":265,"title":{},"body":{"injectables/ContactState.html":{}}}],["init",{"_index":321,"title":{},"body":{"injectables/DownloadState.html":{}}}],["initial",{"_index":690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializes",{"_index":252,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SendMessage.html":{},"classes/SetSelection.html":{}}}],["inject",{"_index":222,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["inject(contactservice",{"_index":281,"title":{},"body":{"injectables/ContactState.html":{}}}],["inject(ftudataservice",{"_index":231,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["inject(googleanalyticsservice",{"_index":581,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["inject(httpclient",{"_index":337,"title":{},"body":{"injectables/DownloadState.html":{}}}],["inject(tissuelibraryservice",{"_index":634,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["injectable",{"_index":19,"title":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":106,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{},"overview.html":{}}}],["injectiontoken",{"_index":549,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["injectiontoken('loggable",{"_index":576,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["injects",{"_index":579,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["input",{"_index":564,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":139,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Set.html":{},"injectables/TissueLibraryState.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{},"classes/SendMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{},"overview.html":{}}}],["intializes",{"_index":247,"title":{},"body":{"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{}}}],["intro",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iri",{"_index":13,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{}}}],["iri(undefined",{"_index":91,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isactive",{"_index":90,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isactive(undefined",{"_index":98,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["isfullscreen",{"_index":486,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["isfullscreen(state",{"_index":491,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["isprimitive",{"_index":655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isprimitive(value",{"_index":569,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":249,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{},"miscellaneous/functions.html":{}}}],["items",{"_index":430,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/functions.html":{}}}],["iterating",{"_index":683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["json.stringify(action",{"_index":596,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["key",{"_index":601,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["label",{"_index":170,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lanading",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landing",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpage",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthdescription",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthimg",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthmoretext",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedepthtitle",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagedescription",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintroimg",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpageintromoretext",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagepartners",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagereadmore",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["landingpagetitle",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length",{"_index":663,"title":{},"body":{"miscellaneous/functions.html":{}}}],["less",{"_index":666,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library",{"_index":419,"title":{},"body":{"modules/HraStateModule.html":{},"index.html":{}}}],["library.actions",{"_index":632,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.actions.ts",{"_index":477,"title":{},"body":{"classes/Load-4.html":{}}}],["library.model",{"_index":621,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["library.model.ts",{"_index":718,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["library.selectors.ts",{"_index":611,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.selectors.ts:14",{"_index":617,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state",{"_index":622,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["library.state.ts",{"_index":625,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library.state.ts:22",{"_index":629,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["library/tissue",{"_index":476,"title":{},"body":{"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["link",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkid",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkregistryactions.navigate",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":574,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":40,"title":{"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["load(undefined",{"_index":110,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["loading",{"_index":478,"title":{},"body":{"classes/Load-4.html":{}}}],["loads",{"_index":54,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["logaction(action",{"_index":592,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["loggable",{"_index":556,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggable_actions",{"_index":573,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["loggabletypes",{"_index":585,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logged",{"_index":575,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":546,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["logging",{"_index":582,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["login",{"_index":608,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs",{"_index":589,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["managing",{"_index":263,"title":{},"body":{"injectables/ContactState.html":{}}}],["map",{"_index":668,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapping",{"_index":253,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["mapping(undefined",{"_index":447,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["matching",{"_index":83,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medical",{"_index":434,"title":{},"body":{"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{}}}],["message",{"_index":275,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":267,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["metadata",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":274,"title":{},"body":{"injectables/ContactState.html":{},"injectables/DownloadState.html":{}}}],["methods",{"_index":88,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["metrics",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricslogo",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricstitle",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":644,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":413,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["mode.actions",{"_index":502,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.actions.ts",{"_index":514,"title":{},"body":{"classes/Set.html":{}}}],["mode.actions.ts:4",{"_index":517,"title":{},"body":{"classes/Set.html":{}}}],["mode.model",{"_index":494,"title":{},"body":{"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["mode.model.ts",{"_index":485,"title":{},"body":{"interfaces/ScreenModeModel.html":{}}}],["mode.selectors.ts",{"_index":490,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.selectors.ts:14",{"_index":492,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["mode.state.ts",{"_index":496,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode.state.ts:22",{"_index":500,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["mode/screen",{"_index":484,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["model",{"_index":153,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"interfaces/ScreenModeModel.html":{}}}],["module",{"_index":403,"title":{"modules/HraStateModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":405,"title":{"modules.html":{}},"body":{"modules/HraStateModule.html":{},"modules.html":{}}}],["more",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":425,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":48,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["name.includes",{"_index":378,"title":{},"body":{"injectables/DownloadState.html":{}}}],["name}${extension",{"_index":379,"title":{},"body":{"injectables/DownloadState.html":{}}}],["needs",{"_index":602,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["new",{"_index":67,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":542,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["next(state",{"_index":588,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngmodule",{"_index":408,"title":{},"body":{"modules/HraStateModule.html":{}}}],["ngx",{"_index":554,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxs",{"_index":320,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxs/store",{"_index":26,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["ngxs_plugins",{"_index":409,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["ngxsmodule",{"_index":410,"title":{},"body":{"modules/HraStateModule.html":{}}}],["ngxsmodule.forfeature",{"_index":421,"title":{},"body":{"modules/HraStateModule.html":{}}}],["ngxsnextpluginfn",{"_index":543,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["ngxsoninit",{"_index":303,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsoninit(ctx",{"_index":318,"title":{},"body":{"injectables/DownloadState.html":{}}}],["ngxsplugin",{"_index":552,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["node",{"_index":619,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["non",{"_index":689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["null",{"_index":570,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":190,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":696,"title":{},"body":{"index.html":{}}}],["object",{"_index":174,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.values(formats).filter(hasdata",{"_index":294,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["objects",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":27,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["operations",{"_index":661,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":707,"title":{},"body":{"overview.html":{}}}],["over",{"_index":684,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":705,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":637,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":55,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/Load.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["parameters",{"_index":97,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partners",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchstate",{"_index":63,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["path",{"_index":368,"title":{},"body":{"injectables/DownloadState.html":{}}}],["path.split('/').filter((seg",{"_index":372,"title":{},"body":{"injectables/DownloadState.html":{}}}],["payload",{"_index":595,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["peer",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["performs",{"_index":659,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe(tap",{"_index":71,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["plugin",{"_index":416,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["plugin.service.ts",{"_index":539,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["plugin.service.ts:51",{"_index":544,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["plugin/default",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin/state",{"_index":538,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["png",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png_format",{"_index":331,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["portal",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primitive",{"_index":557,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["primitive_types",{"_index":559,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["primitive_types.includes(typeof",{"_index":571,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["private",{"_index":229,"title":{},"body":{"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["produce",{"_index":329,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["produce((draft",{"_index":342,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/ScreenModeState.html":{}}}],["product",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productlogourl",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producttitle",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"interfaces/CellSummaryModel.html":{},"interfaces/IllustratorModel.html":{},"interfaces/ScreenModeModel.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":633,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["provide",{"_index":423,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":577,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":550,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":422,"title":{},"body":{"modules/HraStateModule.html":{}}}],["provides",{"_index":407,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":143,"title":{},"body":{"classes/AddEntry.html":{},"injectables/CellSummaryState.html":{},"classes/ClearEntries.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/RegisterFormat.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"injectables/TissueLibraryState.html":{}}}],["record",{"_index":618,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["references",{"_index":529,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["refs",{"_index":38,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"classes/SourceRefsSelectors.html":{}}}],["refs.actions",{"_index":535,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.actions.ts",{"_index":471,"title":{},"body":{"classes/Load-3.html":{},"classes/Reset-3.html":{},"miscellaneous/variables.html":{}}}],["refs.actions.ts:10",{"_index":472,"title":{},"body":{"classes/Load-3.html":{}}}],["refs.selectors.ts",{"_index":522,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.selectors.ts:9",{"_index":528,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state",{"_index":530,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["refs.state.ts",{"_index":532,"title":{},"body":{"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["refs.state.ts:27",{"_index":533,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs.state.ts:35",{"_index":534,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["refs/source",{"_index":470,"title":{},"body":{"classes/Load-3.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":133,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["registerformat",{"_index":135,"title":{"classes/RegisterFormat.html":{}},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"injectables/DownloadState.html":{},"classes/RegisterFormat.html":{}}}],["registerformat(ctx",{"_index":324,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(png_format",{"_index":340,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registerformat(svg_format",{"_index":339,"title":{},"body":{"injectables/DownloadState.html":{}}}],["registry",{"_index":322,"title":{},"body":{"injectables/DownloadState.html":{}}}],["representing",{"_index":164,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["required",{"_index":187,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["rese",{"_index":75,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["reset",{"_index":41,"title":{"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"overview.html":{}}}],["reset(undefined",{"_index":112,"title":{},"body":{"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{}}}],["resets",{"_index":221,"title":{},"body":{"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-2.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{}}}],["resource",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetype",{"_index":402,"title":{},"body":{"injectables/DownloadState.html":{}}}],["result",{"_index":440,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["result$.pipe(tap((result",{"_index":441,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["results",{"_index":82,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retreiving",{"_index":612,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["retrieves",{"_index":672,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":66,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["returns",{"_index":57,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":578,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":665,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rowbyid",{"_index":678,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rows",{"_index":172,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":700,"title":{},"body":{"index.html":{}}}],["running",{"_index":697,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":29,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["save",{"_index":395,"title":{},"body":{"injectables/DownloadState.html":{}}}],["schema",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":412,"title":{},"body":{"modules/HraStateModule.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["screenmode",{"_index":503,"title":{},"body":{"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["screenmodemodel",{"_index":482,"title":{"interfaces/ScreenModeModel.html":{}},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{}}}],["screenmodeselectors",{"_index":489,"title":{"classes/ScreenModeSelectors.html":{}},"body":{"classes/ScreenModeSelectors.html":{}}}],["screenmodestate",{"_index":411,"title":{"injectables/ScreenModeState.html":{}},"body":{"modules/HraStateModule.html":{},"injectables/ScreenModeState.html":{}}}],["seg",{"_index":373,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments",{"_index":371,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments.length",{"_index":374,"title":{},"body":{"injectables/DownloadState.html":{}}}],["segments[segments.length",{"_index":376,"title":{},"body":{"injectables/DownloadState.html":{}}}],["selected",{"_index":254,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["selected(undefined",{"_index":450,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selectedformat",{"_index":148,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{}}}],["selection",{"_index":47,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["selections",{"_index":72,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["selector",{"_index":103,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["selector(['activeftustate",{"_index":93,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector(['cellsummarystate",{"_index":198,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector(['illustratorstate",{"_index":448,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector(['sourcerefsstate",{"_index":527,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector(['tissuelibrarystate",{"_index":616,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selector([activeftustate",{"_index":105,"title":{},"body":{"classes/ActiveFtuSelectors.html":{}}}],["selector([cellsummarystate",{"_index":205,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["selector([illustratorstate",{"_index":455,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["selector([sourcerefsstate",{"_index":531,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["selector([tissuelibrarystate",{"_index":623,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["selectors",{"_index":87,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{}}}],["send",{"_index":277,"title":{},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sending",{"_index":266,"title":{},"body":{"injectables/ContactState.html":{}}}],["sendmessage",{"_index":270,"title":{"classes/SendMessage.html":{}},"body":{"injectables/ContactState.html":{},"classes/SendMessage.html":{}}}],["sendmessage(_ctx",{"_index":271,"title":{},"body":{"injectables/ContactState.html":{}}}],["sends",{"_index":507,"title":{},"body":{"classes/SendMessage.html":{}}}],["serialize",{"_index":565,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["serialize(this",{"_index":604,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serialized",{"_index":603,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["serializes",{"_index":600,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["service",{"_index":228,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["set",{"_index":101,"title":{"classes/Set.html":{}},"body":{"classes/ActiveFtuSelectors.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["set(inject(loggable_actions).map(getactiontypefrominstance",{"_index":586,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["set(undefined",{"_index":498,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["setactive",{"_index":626,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["setactive(ctx",{"_index":627,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["sets",{"_index":248,"title":{},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["setselection",{"_index":250,"title":{"classes/SetSelection.html":{}},"body":{"classes/ClearSelection.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{}}}],["setselection(undefined",{"_index":461,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["setstate",{"_index":444,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{}}}],["setting",{"_index":583,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["show",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["single",{"_index":165,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":177,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["sizelegend",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sizelegendinfo",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["sourcereference",{"_index":526,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences",{"_index":524,"title":{},"body":{"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcereferences(refs",{"_index":525,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsactions",{"_index":36,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.load(iri",{"_index":70,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsactions.reset",{"_index":81,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{}}}],["sourcerefsselectors",{"_index":521,"title":{"classes/SourceRefsSelectors.html":{}},"body":{"classes/SourceRefsSelectors.html":{}}}],["sourcerefsstate",{"_index":37,"title":{"injectables/SourceRefsState.html":{}},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{}}}],["sourcerefstate",{"_index":523,"title":{},"body":{"classes/SourceRefsSelectors.html":{}}}],["specified",{"_index":317,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/functions.html":{}}}],["src/.../active",{"_index":714,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../builtin",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cell",{"_index":646,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.action.ts",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../download.model.ts",{"_index":649,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../illustrator.actions.ts",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../illustrator.state.ts",{"_index":715,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../link",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../source",{"_index":716,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../state",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":717,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/active",{"_index":6,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/Clear.html":{},"classes/Load.html":{},"classes/Reset.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/cell",{"_index":150,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.actions.ts",{"_index":506,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.actions.ts:5",{"_index":512,"title":{},"body":{"classes/SendMessage.html":{}}}],["src/lib/contact/contact.state.ts",{"_index":262,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/contact/contact.state.ts:16",{"_index":273,"title":{},"body":{"injectables/ContactState.html":{}}}],["src/lib/download/builtin",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts",{"_index":115,"title":{},"body":{"classes/AddEntry.html":{},"classes/ClearEntries.html":{},"classes/Download.html":{},"classes/RegisterFormat.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.action.ts:10",{"_index":481,"title":{},"body":{"classes/RegisterFormat.html":{}}}],["src/lib/download/download.action.ts:23",{"_index":123,"title":{},"body":{"classes/AddEntry.html":{}}}],["src/lib/download/download.action.ts:38",{"_index":284,"title":{},"body":{"classes/Download.html":{}}}],["src/lib/download/download.model.ts",{"_index":691,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/download/download.selectors.ts",{"_index":286,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.selectors.ts:14",{"_index":291,"title":{},"body":{"classes/DownloadSelectors.html":{}}}],["src/lib/download/download.state.ts",{"_index":296,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:34",{"_index":319,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:44",{"_index":326,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:58",{"_index":307,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:71",{"_index":311,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/download/download.state.ts:85",{"_index":315,"title":{},"body":{"injectables/DownloadState.html":{}}}],["src/lib/illustrator/illustrator.actions.ts",{"_index":244,"title":{},"body":{"classes/ClearSelection.html":{},"classes/Load-2.html":{},"classes/Reset-2.html":{},"classes/SetSelection.html":{},"miscellaneous/variables.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:10",{"_index":467,"title":{},"body":{"classes/Load-2.html":{}}}],["src/lib/illustrator/illustrator.actions.ts:20",{"_index":520,"title":{},"body":{"classes/SetSelection.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts",{"_index":446,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:13",{"_index":453,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:21",{"_index":451,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.selectors.ts:29",{"_index":449,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["src/lib/illustrator/illustrator.state.ts",{"_index":427,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/illustrator/illustrator.state.ts:44",{"_index":459,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:55",{"_index":462,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:63",{"_index":458,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/illustrator/illustrator.state.ts:71",{"_index":460,"title":{},"body":{"injectables/IllustratorState.html":{}}}],["src/lib/link",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/resource",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/screen",{"_index":483,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/Set.html":{}}}],["src/lib/source",{"_index":469,"title":{},"body":{"classes/Load-3.html":{},"classes/Reset-3.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state",{"_index":537,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/state.module.ts",{"_index":406,"title":{},"body":{"modules/HraStateModule.html":{}}}],["src/lib/tissue",{"_index":475,"title":{},"body":{"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":694,"title":{"index.html":{}},"body":{}}],["state",{"_index":24,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SetSelection.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.aggregates",{"_index":206,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state.isfullscreen",{"_index":495,"title":{},"body":{"classes/ScreenModeSelectors.html":{}}}],["state.nodes",{"_index":624,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["state.summaries",{"_index":207,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["state_logger_provider",{"_index":609,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["stateanalyticspluginservice",{"_index":414,"title":{"injectables/StateAnalyticsPluginService.html":{}},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["statecontext",{"_index":25,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"miscellaneous/typealiases.html":{}}}],["states",{"_index":76,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"modules/HraStateModule.html":{}}}],["static",{"_index":89,"title":{},"body":{"classes/ActiveFtuSelectors.html":{},"classes/CellSummarySelectors.html":{},"classes/DownloadSelectors.html":{},"classes/IllustratorSelectors.html":{},"classes/ScreenModeSelectors.html":{},"classes/SourceRefsSelectors.html":{},"classes/TissueLibrarySelectors.html":{}}}],["store",{"_index":258,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["stores",{"_index":215,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["storing",{"_index":497,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["string",{"_index":188,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":184,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["submitted",{"_index":509,"title":{},"body":{"classes/SendMessage.html":{}}}],["submitting",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summaries",{"_index":155,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summaries(state",{"_index":200,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summaries.map(computeaggregate",{"_index":235,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary",{"_index":32,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"miscellaneous/functions.html":{}}}],["summary.actions",{"_index":225,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.actions.ts",{"_index":255,"title":{},"body":{"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/variables.html":{}}}],["summary.actions.ts:8",{"_index":465,"title":{},"body":{"classes/Load-1.html":{}}}],["summary.helpers",{"_index":227,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.helpers.ts",{"_index":647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["summary.model",{"_index":202,"title":{},"body":{"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{}}}],["summary.model.ts",{"_index":152,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summary.selectors.ts",{"_index":196,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:10",{"_index":199,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.selectors.ts:16",{"_index":201,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state",{"_index":204,"title":{},"body":{"classes/CellSummarySelectors.html":{}}}],["summary.state.ts",{"_index":208,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:27",{"_index":216,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:38",{"_index":213,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary.state.ts:48",{"_index":220,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["summary/cell",{"_index":151,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/ComputeAggregates.html":{},"classes/Load-1.html":{},"classes/Reset-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["summing",{"_index":685,"title":{},"body":{"miscellaneous/functions.html":{}}}],["super",{"_index":141,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["svg",{"_index":299,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["svg_format",{"_index":332,"title":{},"body":{"injectables/DownloadState.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":348,"title":{},"body":{"injectables/DownloadState.html":{}}}],["switchmap",{"_index":224,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["takes",{"_index":658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tap",{"_index":28,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/SourceRefsState.html":{},"injectables/TissueLibraryState.html":{}}}],["tap((summaries",{"_index":233,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["test",{"_index":701,"title":{},"body":{"index.html":{}}}],["tests",{"_index":699,"title":{},"body":{"index.html":{}}}],["text",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.contact.sendmessage(message",{"_index":282,"title":{},"body":{"injectables/ContactState.html":{}}}],["this.dataservice.getcellsummaries(iri).pipe",{"_index":232,"title":{},"body":{"injectables/CellSummaryState.html":{}}}],["this.dataservice.getillustrationmapping(iri",{"_index":439,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getillustrationurl(iri",{"_index":438,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["this.dataservice.getsourcereferences(iri).pipe(tap(setstate",{"_index":536,"title":{},"body":{"injectables/SourceRefsState.html":{}}}],["this.dataservice.gettissuelibrary().pipe(tap((data",{"_index":635,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["this.downloaddata(data",{"_index":355,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloaddata(new",{"_index":356,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.downloadremotedata(entry.url).pipe(tap((data",{"_index":354,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.ga.event(type",{"_index":598,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.guessfilename(ctx",{"_index":352,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.http.get(url",{"_index":401,"title":{},"body":{"injectables/DownloadState.html":{}}}],["this.logaction(action",{"_index":587,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.loggabletypes.has(type",{"_index":594,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["this.serialize",{"_index":597,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["throw",{"_index":359,"title":{},"body":{"injectables/DownloadState.html":{}}}],["tissedata",{"_index":620,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissue",{"_index":418,"title":{},"body":{"modules/HraStateModule.html":{},"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrary",{"_index":479,"title":{},"body":{"classes/Load-4.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarycontext",{"_index":628,"title":{},"body":{"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrarymodel",{"_index":615,"title":{},"body":{"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryselectors",{"_index":610,"title":{"classes/TissueLibrarySelectors.html":{}},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissuelibraryservice",{"_index":631,"title":{},"body":{"injectables/TissueLibraryState.html":{}}}],["tissuelibrarystate",{"_index":417,"title":{"injectables/TissueLibraryState.html":{}},"body":{"modules/HraStateModule.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["tissues",{"_index":613,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["tissues(state",{"_index":614,"title":{},"body":{"classes/TissueLibrarySelectors.html":{}}}],["title",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["together",{"_index":437,"title":{},"body":{"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["token",{"_index":572,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tooltip",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":681,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transform((id",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformed",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigerred",{"_index":590,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["true",{"_index":61,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"modules/HraStateModule.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"classes/ScreenModeSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":183,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":185,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"classes/AddEntry.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/Download.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/RegisterFormat.html":{},"interfaces/ScreenModeModel.html":{},"classes/ScreenModeSelectors.html":{},"injectables/ScreenModeState.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":712,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":605,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["types",{"_index":558,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["types.ts",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":720,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/cdk/state",{"_index":127,"title":{},"body":{"classes/AddEntry.html":{},"classes/Clear.html":{},"classes/ClearEntries.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"classes/Download.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Load-4.html":{},"classes/RegisterFormat.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/Set.html":{},"classes/SetSelection.html":{}}}],["ui/services",{"_index":22,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"interfaces/CellSummaryModel.html":{},"classes/CellSummarySelectors.html":{},"injectables/CellSummaryState.html":{},"classes/Clear.html":{},"classes/ClearSelection.html":{},"classes/ComputeAggregates.html":{},"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"classes/Load.html":{},"classes/Load-1.html":{},"classes/Load-2.html":{},"classes/Load-3.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/Reset-3.html":{},"classes/SendMessage.html":{},"classes/SetSelection.html":{},"classes/SourceRefsSelectors.html":{},"injectables/SourceRefsState.html":{},"classes/TissueLibrarySelectors.html":{},"injectables/TissueLibraryState.html":{}}}],["uncompleted",{"_index":219,"title":{},"body":{"injectables/CellSummaryState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["undefined",{"_index":74,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"classes/ActiveFtuSelectors.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/ContactState.html":{},"classes/DownloadSelectors.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["union",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":698,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":456,"title":{},"body":{"classes/IllustratorSelectors.html":{},"injectables/StateAnalyticsPluginService.html":{}}}],["up",{"_index":686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update",{"_index":515,"title":{},"body":{"classes/Set.html":{}}}],["updates",{"_index":501,"title":{},"body":{"injectables/ScreenModeState.html":{}}}],["url",{"_index":56,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"classes/IllustratorSelectors.html":{},"injectables/IllustratorState.html":{},"miscellaneous/variables.html":{}}}],["url(undefined",{"_index":452,"title":{},"body":{"classes/IllustratorSelectors.html":{}}}],["url(url",{"_index":369,"title":{},"body":{"injectables/DownloadState.html":{}}}],["used",{"_index":297,"title":{},"body":{"injectables/DownloadState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":424,"title":{},"body":{"modules/HraStateModule.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":302,"title":{},"body":{"injectables/DownloadState.html":{},"classes/SendMessage.html":{}}}],["uses",{"_index":276,"title":{},"body":{"injectables/ContactState.html":{}}}],["using",{"_index":268,"title":{},"body":{"injectables/ContactState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{}}}],["value",{"_index":562,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.every(isprimitive",{"_index":607,"title":{},"body":{"injectables/StateAnalyticsPluginService.html":{}}}],["variable",{"_index":280,"title":{},"body":{"injectables/ContactState.html":{}}}],["variables",{"_index":732,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":710,"title":{},"body":{"properties.html":{}}}],["void",{"_index":58,"title":{},"body":{"interfaces/ActiveFtuModel.html":{},"injectables/ActiveFtuState.html":{},"injectables/CellSummaryState.html":{},"injectables/DownloadState.html":{},"interfaces/IllustratorModel.html":{},"injectables/IllustratorState.html":{},"injectables/ScreenModeState.html":{},"injectables/SourceRefsState.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":487,"title":{},"body":{"interfaces/ScreenModeModel.html":{},"classes/Set.html":{},"injectables/StateAnalyticsPluginService.html":{},"miscellaneous/functions.html":{}}}],["window.url.createobjecturl(blob",{"_index":385,"title":{},"body":{"injectables/DownloadState.html":{}}}],["window.url.revokeobjecturl(url",{"_index":393,"title":{},"body":{"injectables/DownloadState.html":{}}}],["without",{"_index":361,"title":{},"body":{"injectables/DownloadState.html":{}}}],["z",{"_index":162,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.discriminatedunion('type",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.infer",{"_index":168,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/typealiases.html":{}}}],["z.literal('data",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal('url",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().nonnegative",{"_index":181,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.number().optional()]).rest(aggregate_cell.optional",{"_index":192,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":179,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.record(download_format_id",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":180,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":193,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["z.tuple([z.string",{"_index":191,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":163,"title":{},"body":{"interfaces/CellSummaryModel.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":706,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActiveFtuModel.html":{"url":"interfaces/ActiveFtuModel.html","title":"interface - ActiveFtuModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActiveFtuModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for ActiveFtuModel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            iri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iri:     Iri\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Iri\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Iri for the current Ftu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset } from './active-ftu.actions';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to rese the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([new CellSummaryActions.Reset(), new IllustratorActions.Reset(), new SourceRefsActions.Reset()]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActiveFtuSelectors.html":{"url":"classes/ActiveFtuSelectors.html","title":"class - ActiveFtuSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActiveFtuSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for ActiveftuState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                iri\n                            \n                            \n                                    Static\n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        iri\n                        \n                    \n                \n            \n            \n                \n                    \n                    iri(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:15\n                \n            \n\n\n            \n                \n                    gets the iri from the ActiveFtuModel\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Iri | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive(undefined: ActiveFtuModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['ActiveFtuState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.selectors.ts:9\n                \n            \n\n\n            \n                \n                    checks if the Iri is set\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ActiveFtuModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { ActiveFtuModel, ActiveFtuState } from './active-ftu.state';\n\n/** selectors for ActiveftuState */\nexport class ActiveFtuSelectors {\n  /** checks if the Iri is set */\n  @Selector([ActiveFtuState])\n  static isActive({ iri }: ActiveFtuModel): boolean {\n    return iri !== undefined;\n  }\n\n  /** gets the iri from the ActiveFtuModel */\n  @Selector([ActiveFtuState])\n  static iri({ iri }: ActiveFtuModel): Iri | undefined {\n    return iri;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActiveFtuState.html":{"url":"injectables/ActiveFtuState.html","title":"injectable - ActiveFtuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActiveFtuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle active FTU selection\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(['Clear', 'Reset'])\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:50\n                \n            \n\n\n            \n                \n                    Action to clear the iri selections\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:36\n                \n            \n\n\n            \n                \n                    loads the Cell summary, Illustrator and Source Refs\nwith the current iri\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        load An observable of void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/active-ftu/active-ftu.state.ts:59\n                \n            \n\n\n            \n                \n                    Action to rese the states for\nCell summary, Illustrator and Source Refs\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Iri } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { CellSummaryActions } from '../cell-summary';\nimport { IllustratorActions, IllustratorState } from '../illustrator';\nimport { SourceRefsActions, SourceRefsState } from '../source-refs';\nimport { Clear, Load, Reset } from './active-ftu.actions';\n\n/**\n * Interface for ActiveFtuModel */\nexport interface ActiveFtuModel {\n  /** Iri for the current Ftu  */\n  iri?: Iri;\n}\n\ntype Context = StateContext;\n\n/**\n * State to handle active FTU selection\n */\n@State({\n  name: 'activeFtu',\n  defaults: {},\n  children: [IllustratorState, SourceRefsState],\n})\n@Injectable()\nexport class ActiveFtuState {\n  /**\n   * loads the Cell summary, Illustrator and Source Refs\n   * with the current iri\n   * @param { iri } The iri which is in the url\n   * @returns load An observable of void\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ getState, patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    if (getState().iri !== iri) {\n      return dispatch([\n        new CellSummaryActions.Load(iri),\n        new IllustratorActions.Load(iri),\n        new SourceRefsActions.Load(iri),\n      ]).pipe(tap(() => patchState({ iri })));\n    }\n  }\n\n  /**\n   * Action to clear the iri selections\n   */\n  @Action([Clear, Reset])\n  clear({ patchState }: Context): void {\n    patchState({ iri: undefined });\n  }\n\n  /**\n   * Action to rese the states for\n   * Cell summary, Illustrator and Source Refs\n   */\n  @Action(Reset)\n  reset({ dispatch }: Context): Observable {\n    return dispatch([new CellSummaryActions.Reset(), new IllustratorActions.Reset(), new SourceRefsActions.Reset()]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddEntry.html":{"url":"classes/AddEntry.html","title":"class - AddEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Add entry into download state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: DownloadFormatId, entry: DownloadEntry)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor for Addd Entry\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        DownloadEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CellSummaryModel.html":{"url":"interfaces/CellSummaryModel.html","title":"interface - CellSummaryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CellSummaryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.model.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface of the Cell summary model\nhaving the summaries and aggregrates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aggregates\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aggregates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggregates:         CellSummaryAggregate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CellSummaryAggregate[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of aggregates of the Cell Summary\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:     CellSummary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CellSummary[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of summaries of the Cell Summary\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CellSummary, FtuDataSchemas } from '@hra-ui/services';\nimport { StateContext } from '@ngxs/store';\nimport { z } from 'zod';\n\n/** Type representing a single AGGREGATE_ROW */\nexport type CellSummaryAggregateRow = z.infer;\n\n/** Type representing AGGREGATE having label, columns and rows */\nexport type CellSummaryAggregate = z.infer;\n\n/**\n * An interface of the Cell summary model\n * having the summaries and aggregrates\n */\nexport interface CellSummaryModel {\n  /** Array of summaries of the Cell Summary */\n  summaries: CellSummary[];\n  /** Array of aggregates of the Cell Summary */\n  aggregates: CellSummaryAggregate[];\n}\n\nexport type Context = StateContext;\n\n/**\n * The AGGREGATE_CELL is an object that contains the color, size and\n * the data\n */\nconst AGGREGATE_CELL = z.object({\n  color: z.string(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n});\n\n/**\n * The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\n * a required string followed by an optional number\n */\nconst AGGREGATE_ROW = z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional());\n\n/**\n * The AGGREGATE is an object that contains the label, columns\n * and rows */\nconst AGGREGATE = z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellSummarySelectors.html":{"url":"classes/CellSummarySelectors.html","title":"class - CellSummarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellSummarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                selectors for the CellSummary state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                aggregates\n                            \n                            \n                                    Static\n                                summaries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        aggregates\n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregates(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:10\n                \n            \n\n\n            \n                \n                    get the aggregate data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        summaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    summaries(state: CellSummaryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CellSummaryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.selectors.ts:16\n                \n            \n\n\n            \n                \n                    get the summaries data from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CellSummaryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CellSummary[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { CellSummary } from '@hra-ui/services';\nimport { CellSummaryModel, CellSummaryAggregate } from './cell-summary.model';\nimport { CellSummaryState } from './cell-summary.state';\n\n/** selectors for the CellSummary state */\nexport class CellSummarySelectors {\n  /** get the aggregate data from the state */\n  @Selector([CellSummaryState])\n  static aggregates(state: CellSummaryModel): CellSummaryAggregate[] {\n    return state.aggregates;\n  }\n\n  /** get the summaries data from the state */\n  @Selector([CellSummaryState])\n  static summaries(state: CellSummaryModel): CellSummary[] {\n    return state.summaries;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CellSummaryState.html":{"url":"injectables/CellSummaryState.html","title":"injectable - CellSummaryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CellSummaryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling cell summary data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeAggregates\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        computeAggregates\n                        \n                    \n                \n            \n            \n                \ncomputeAggregates(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ComputeAggregates)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:38\n                \n            \n\n\n            \n                \n                    computes aggregate data and stores in the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the cell summary data and aggregrated of the current Iri into\nthe state and cancels uncompleted action if any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/cell-summary/cell-summary.state.ts:48\n                \n            \n\n\n            \n                \n                    Resets the summaries and aggregates for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { ComputeAggregates, Load, Reset } from './cell-summary.actions';\nimport { computeAggregate } from './cell-summary.helpers';\nimport { CellSummaryModel, Context } from './cell-summary.model';\n\n/** State handling cell summary data */\n@State({\n  name: 'cellSummary',\n  defaults: {\n    summaries: [],\n    aggregates: [],\n  },\n})\n@Injectable()\nexport class CellSummaryState {\n  /** Data service to load the FTU data */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the cell summary data and aggregrated of the current Iri into\n   * the state and cancels uncompleted action if any\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState, dispatch }: Context, { iri }: Load): Observable | void {\n    return this.dataService.getCellSummaries(iri).pipe(\n      tap((summaries) => patchState({ summaries, aggregates: [] })),\n      switchMap(() => dispatch(new ComputeAggregates()))\n    );\n  }\n\n  /**\n   * computes aggregate data and stores in the current state\n   */\n  @Action(ComputeAggregates)\n  computeAggregates({ getState, patchState }: Context): void {\n    const { summaries } = getState();\n    const aggregates = summaries.map(computeAggregate);\n    patchState({ aggregates });\n  }\n\n  /**\n   * Resets the summaries and aggregates for the current state\n   */\n  @Action(Reset)\n  reset({ patchState }: Context): void {\n    patchState({ summaries: [], aggregates: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clear.html":{"url":"classes/Clear.html","title":"class - Clear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the Iri\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearEntries.html":{"url":"classes/ClearEntries.html","title":"class - ClearEntries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearEntries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Clear all entries from download state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSelection.html":{"url":"classes/ClearSelection.html","title":"class - ClearSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Clears the selection for the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state\n */\nexport class SetSelection extends Action('Set Selection') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selected: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComputeAggregates.html":{"url":"classes/ComputeAggregates.html","title":"class - ComputeAggregates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComputeAggregates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Compute aggregate of the given data and store to state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactState.html":{"url":"injectables/ContactState.html","title":"injectable - ContactState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact'\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(_ctx: StateContext, undefined: SendMessage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SendMessage)\n                \n            \n\n            \n                \n                    Defined in src/lib/contact/contact.state.ts:16\n                \n            \n\n\n            \n                \n                    An action method for sending a message. It uses SendMessage action class to send messages.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SendMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { ContactService } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SendMessage } from './contact.actions';\n\n/** A state, and injectable class ContactState for managing the contact information and sending messages using the ContactService. State name: 'contact' */\n@State({ name: 'contact' })\n@Injectable()\nexport class ContactState {\n  /** A variable to inject the ContactService */\n  private readonly contact = inject(ContactService);\n\n  /** An action method for sending a message. It uses SendMessage action class to send messages. */\n  @Action(SendMessage)\n  sendMessage(_ctx: StateContext, { message }: SendMessage): Observable {\n    return this.contact.sendMessage(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Download.html":{"url":"classes/Download.html","title":"class - Download","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Download\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Download file Action\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormatId)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of download.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormatId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DownloadSelectors.html":{"url":"classes/DownloadSelectors.html","title":"class - DownloadSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Available format selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                formats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        formats\n                        \n                    \n                \n            \n            \n                \n                    \n                    formats(state: DownloadModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Selectors available format for download selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                DownloadModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormat[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { DownloadFormat, DownloadModel } from './download.model';\n\n/**\n * Available format selectors\n */\nexport class DownloadSelectors {\n  /**\n   * Selectors available format for download selectors\n   * @param state\n   * @returns\n   */\n  @Selector()\n  static formats(state: DownloadModel): DownloadFormat[] {\n    const { formats, entries } = state;\n    const hasData = (format: DownloadFormat | undefined): format is DownloadFormat =>\n      !!(format && format.id in entries);\n    return Object.values(formats).filter(hasData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DownloadState.html":{"url":"injectables/DownloadState.html","title":"injectable - DownloadState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DownloadState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Download State Model used to convert\nfile from SVG file content to different\nformat and download to user.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEntry\n                            \n                            \n                                clearEntries\n                            \n                            \n                                download\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                registerFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEntry\n                        \n                    \n                \n            \n            \n                \naddEntry(ctx: DownloadContext, undefined: AddEntry)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddEntry)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:58\n                \n            \n\n\n            \n                \n                    Add entry into download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                AddEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearEntries\n                        \n                    \n                \n            \n            \n                \nclearEntries(ctx: DownloadContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearEntries)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:71\n                \n            \n\n\n            \n                \n                    Clear entires from download state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        download\n                        \n                    \n                \n            \n            \n                \ndownload(ctx: DownloadContext, undefined: Download)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Download)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:85\n                \n            \n\n\n            \n                \n                    Actions download file in specified format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Download\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: DownloadContext)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/download/download.state.ts:34\n                \n            \n\n\n            \n                \n                    Ngxs on init and registry default format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFormat\n                        \n                    \n                \n            \n            \n                \nregisterFormat(ctx: DownloadContext, undefined: RegisterFormat)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RegisterFormat)\n                \n            \n\n            \n                \n                    Defined in src/lib/download/download.state.ts:44\n                \n            \n\n\n            \n                \n                    Actions register format in Download State\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                DownloadContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                RegisterFormat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Action, NgxsOnInit, State } from '@ngxs/store';\nimport produce from 'immer';\nimport { Observable, tap } from 'rxjs';\n\nimport { PNG_FORMAT, SVG_FORMAT } from './builtin-formats';\nimport { AddEntry, ClearEntries, Download, RegisterFormat } from './download.action';\nimport { DownloadContext, DownloadFormatId, DownloadModel } from './download.model';\n\n/**\n * Download State Model used to convert\n * file from SVG file content to different\n * format and download to user.\n */\n@State({\n  name: 'download',\n  defaults: {\n    formats: {},\n    entries: {},\n  },\n})\n@Injectable()\nexport class DownloadState implements NgxsOnInit {\n  /**\n   * Http object inject for download state\n   */\n  private readonly http = inject(HttpClient);\n\n  /**\n   * Ngxs on init and registry default format\n   * @param ctx\n   */\n  ngxsOnInit(ctx: DownloadContext): void {\n    ctx.dispatch([new RegisterFormat(SVG_FORMAT), new RegisterFormat(PNG_FORMAT)]);\n  }\n\n  /**\n   * Actions register format in Download State\n   * @param ctx\n   * @param { format }\n   */\n  @Action(RegisterFormat)\n  registerFormat(ctx: DownloadContext, { format }: RegisterFormat): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.formats[format.id] = format;\n      })\n    );\n  }\n\n  /**\n   * Add entry into download state\n   * @param ctx\n   * @param { id, entry }\n   */\n  @Action(AddEntry)\n  addEntry(ctx: DownloadContext, { id, entry }: AddEntry): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries[id] = entry;\n      })\n    );\n  }\n\n  /**\n   * Clear entires from download state\n   * @param ctx\n   */\n  @Action(ClearEntries)\n  clearEntries(ctx: DownloadContext): void {\n    ctx.setState(\n      produce((draft) => {\n        draft.entries = {};\n      })\n    );\n  }\n\n  /**\n   * Actions download file in specified format\n   * @param ctx\n   * @param action\n   */\n  @Action(Download)\n  download(ctx: DownloadContext, { format }: Download): Observable | void {\n    const { entries } = ctx.getState();\n    const entry = entries[format];\n    switch (entry?.type) {\n      case 'url': {\n        const filename = this.guessFilename(ctx, format, entry.url);\n        return this.downloadRemoteData(entry.url).pipe(tap((data) => this.downloadData(data, filename)));\n      }\n\n      case 'data': {\n        const filename = this.guessFilename(ctx, format, '');\n        this.downloadData(new Blob([entry.data]), filename);\n        break;\n      }\n\n      default:\n        throw new Error('Cannot download file without data');\n    }\n  }\n\n  /**\n   * Guess filename\n   * @param ctx\n   * @param id\n   * @param url\n   * @returns filename\n   */\n  private guessFilename(ctx: DownloadContext, id: DownloadFormatId, url: string): string {\n    const { formats } = ctx.getState();\n    const { extension = '' } = formats[id] ?? {};\n    const fakeBase = 'https://base.com';\n    const path = new URL(url, fakeBase).pathname;\n    const segments = path.split('/').filter((seg) => seg !== '');\n    const name = segments.length > 0 ? segments[segments.length - 1] : 'download';\n    const guess = name.includes('.') ? name : `${name}${extension}`;\n\n    return guess;\n  }\n\n  /**\n   * Download converted formatted file to browser\n   * @param blob\n   * @param fileName\n   */\n  private downloadData(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n    anchor.download = filename;\n    anchor.href = url;\n    anchor.click();\n    anchor.remove();\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Downloads and save -  method is used to direct fetch file\n   * if available on url without conversion\n   * @param fileUrl\n   * @param fileName\n   */\n  private downloadRemoteData(url: string): Observable {\n    return this.http.get(url, { responseType: 'blob' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraStateModule.html":{"url":"modules/HraStateModule.html","title":"module - HraStateModule","body":"\n                   \n\n\n\n\n    Modules\n    HraStateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/state.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Provides all states\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NGXS_PLUGINS, NgxsModule } from '@ngxs/store';\nimport { ActiveFtuState } from './active-ftu';\nimport { CellSummaryState } from './cell-summary';\nimport { ContactState } from './contact';\nimport { DownloadState } from './download';\nimport { IllustratorState } from './illustrator';\nimport { ScreenModeState } from './screen-mode';\nimport { SourceRefsState } from './source-refs';\nimport { StateAnalyticsPluginService } from './state-analytics-plugin';\nimport { TissueLibraryState } from './tissue-library';\n\n/** Provides all states */\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([\n      ActiveFtuState,\n      CellSummaryState,\n      ContactState,\n      DownloadState,\n      IllustratorState,\n      ScreenModeState,\n      SourceRefsState,\n      TissueLibraryState,\n    ]),\n  ],\n  providers: [\n    {\n      provide: NGXS_PLUGINS,\n      useExisting: StateAnalyticsPluginService,\n      multi: true,\n    },\n  ],\n})\nexport class HraStateModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IllustratorModel.html":{"url":"interfaces/IllustratorModel.html","title":"interface - IllustratorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IllustratorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for the Illustrator Model that contains the url, selected\nand mapping fields\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mapping\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapping:         IllustrationMappingItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of Illustrartor Items\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         IllustrationMappingItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IllustrationMappingItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected Illustrator Item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Url\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Illustration URL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\nimport { ClearSelection, Load, Reset, SetSelection } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url;\n  /** Selected Illustrator Item */\n  selected?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(tap((result) => patchState({ ...result, selected: undefined })));\n  }\n\n  /**\n   * Sets the current selection to the state\n   */\n  @Action(SetSelection)\n  setSelection({ patchState }: Context, { selected }: SetSelection): void {\n    patchState({ selected });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selected: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IllustratorSelectors.html":{"url":"classes/IllustratorSelectors.html","title":"class - IllustratorSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IllustratorSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for Medical Illustrators\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapping\n                            \n                            \n                                    Static\n                                selected\n                            \n                            \n                                    Static\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapping(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:29\n                \n            \n\n\n            \n                \n                    Returns the current mapping of the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IllustrationMappingItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        selected\n                        \n                    \n                \n            \n            \n                \n                    \n                    selected(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:21\n                \n            \n\n\n            \n                \n                    Returns the selected model of the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :      | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        url\n                        \n                    \n                \n            \n            \n                \n                    \n                    url(undefined: IllustratorModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['IllustratorState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.selectors.ts:13\n                \n            \n\n\n            \n                \n                    Returns the url for the illustrator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IllustratorModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Url | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { IllustratorModel, IllustratorState } from './illustrator.state';\n\n/**\n * Selectors for Medical Illustrators\n */\nexport class IllustratorSelectors {\n  /**\n   * Returns the url for the illustrator\n   */\n  @Selector([IllustratorState])\n  static url({ url }: IllustratorModel): Url | undefined {\n    return url;\n  }\n\n  /**\n   * Returns the selected model of the illustrator\n   */\n  @Selector([IllustratorState])\n  static selected({ selected }: IllustratorModel): unknown | undefined {\n    return selected;\n  }\n\n  /**\n   * Returns the current mapping of the illustrator\n   */\n  @Selector([IllustratorState])\n  static mapping({ mapping }: IllustratorModel): IllustrationMappingItem[] {\n    return mapping;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IllustratorState.html":{"url":"injectables/IllustratorState.html","title":"injectable - IllustratorState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IllustratorState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling medical illustrators\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSelection\n                            \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                            \n                                setSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearSelection)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:63\n                \n            \n\n\n            \n                \n                    Clears the current selection from the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load, {cancelUncompleted: true})\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:44\n                \n            \n\n\n            \n                \n                    Loads the current state with the url and mapping.\nThe url and mapping are forked together using forkJoin.\nIt also cancels any uncompleted actions to the state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:71\n                \n            \n\n\n            \n                \n                    Resets the mapping for the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelection\n                        \n                    \n                \n            \n            \n                \nsetSelection(undefined: Context, undefined: SetSelection)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetSelection)\n                \n            \n\n            \n                \n                    Defined in src/lib/illustrator/illustrator.state.ts:55\n                \n            \n\n\n            \n                \n                    Sets the current selection to the state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetSelection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, IllustrationMappingItem, Url } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { forkJoin, Observable, tap } from 'rxjs';\nimport { ClearSelection, Load, Reset, SetSelection } from './illustrator.actions';\n\n/**\n * interface for the Illustrator Model that contains the url, selected\n * and mapping fields\n */\nexport interface IllustratorModel {\n  /** Illustration URL */\n  url?: Url;\n  /** Selected Illustrator Item */\n  selected?: IllustrationMappingItem;\n  /** Array of Illustrartor Items */\n  mapping: IllustrationMappingItem[];\n}\n\ntype Context = StateContext;\n\n/**\n * State handling medical illustrators\n */\n@State({\n  name: 'illustrator',\n  defaults: {\n    mapping: [],\n  },\n})\n@Injectable()\nexport class IllustratorState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the url and mapping.\n   * The url and mapping are forked together using forkJoin.\n   * It also cancels any uncompleted actions to the state.\n   */\n  @Action(Load, { cancelUncompleted: true })\n  load({ patchState }: Context, { iri }: Load): Observable {\n    const url$ = this.dataService.getIllustrationUrl(iri);\n    const mapping$ = this.dataService.getIllustrationMapping(iri);\n    const result$ = forkJoin({ url: url$, mapping: mapping$ });\n    return result$.pipe(tap((result) => patchState({ ...result, selected: undefined })));\n  }\n\n  /**\n   * Sets the current selection to the state\n   */\n  @Action(SetSelection)\n  setSelection({ patchState }: Context, { selected }: SetSelection): void {\n    patchState({ selected });\n  }\n\n  /**\n   * Clears the current selection from the state\n   */\n  @Action(ClearSelection)\n  clearSelection({ patchState }: Context): void {\n    patchState({ selected: undefined });\n  }\n\n  /**\n   * Resets the mapping for the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState({ mapping: [] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load.html":{"url":"classes/Load.html","title":"class - Load","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/active-ftu/active-ftu.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Creates an instance of set iri.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-1.html":{"url":"classes/Load-1.html","title":"class - Load-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                loads the given Iri to the state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cell-summary/cell-summary.actions.ts:8\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-2.html":{"url":"classes/Load-2.html","title":"class - Load-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Loads the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state\n */\nexport class SetSelection extends Action('Set Selection') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selected: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-3.html":{"url":"classes/Load-3.html","title":"class - Load-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to load the state with the current Iri\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iri: Iri)\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-refs/source-refs.actions.ts:10\n                            \n                        \n\n                \n                    \n                            Intializes the set iri\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iri\n                                                  \n                                                        \n                                                                    Iri\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load-4.html":{"url":"classes/Load-4.html","title":"class - Load-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                action of loading tissue data into the TissueLibrary state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** action of loading tissue data into the TissueLibrary state */\nexport class Load extends Action('[TissueLibrary] Load Tissue Data') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterFormat.html":{"url":"classes/RegisterFormat.html","title":"class - RegisterFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/download/download.action.ts\n        \n\n\n            \n                Description\n            \n            \n                Register format into state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(format: DownloadFormat)\n                    \n                \n                        \n                            \n                                Defined in src/lib/download/download.action.ts:10\n                            \n                        \n\n                \n                    \n                            Creates an instance of register format.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                  \n                                                        \n                                                                        DownloadFormat\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { DownloadEntry, DownloadFormat, DownloadFormatId } from './download.model';\n\n/**Action Group for Download Action */\nconst Action = ActionGroup('Download');\n\n/**\n * Register format into state\n */\nexport class RegisterFormat extends Action('Register Format') {\n  /**\n   * Creates an instance of register format.\n   * @param format\n   */\n  constructor(readonly format: DownloadFormat) {\n    super();\n  }\n}\n\n/**\n * Add entry into download state\n */\nexport class AddEntry extends Action('Add') {\n  /** Constructor for Addd Entry */\n  constructor(readonly id: DownloadFormatId, readonly entry: DownloadEntry) {\n    super();\n  }\n}\n\n/**\n * Clear all entries from download state\n */\nexport class ClearEntries extends Action('Clear') {}\n\n/**\n * Download file Action\n */\nexport class Download extends Action('Download') {\n  /**\n   * Creates an instance of download.\n   * @param selectedFormat\n   */\n  constructor(readonly format: DownloadFormatId) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/active-ftu/active-ftu.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('ActiveFtu');\n\n/** Loads the Iri */\nexport class Load extends Action('Load') {\n  /**\n   * Creates an instance of set iri.\n   * @param iri\n   */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/** Clears the Iri */\nexport class Clear extends Action('Clear') {}\n\n/** Resets state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-1.html":{"url":"classes/Reset-1.html","title":"class - Reset-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cell-summary/cell-summary.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the current state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('CellSummary');\n\n/** loads the given Iri to the state */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Compute aggregate of the given data and store to state */\nexport class ComputeAggregates extends Action('Compute Aggregates') {}\n\n/**\n * Action to reset the current state */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-2.html":{"url":"classes/Reset-2.html","title":"class - Reset-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Resets the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state\n */\nexport class SetSelection extends Action('Set Selection') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selected: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-3.html":{"url":"classes/Reset-3.html","title":"class - Reset-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Action to reset the state\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('SourceRefs');\n\n/**\n * Action to load the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Action to reset the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScreenModeModel.html":{"url":"interfaces/ScreenModeModel.html","title":"interface - ScreenModeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScreenModeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isFullScreen\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isFullScreen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFullScreen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether in fullscreen\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ScreenModeModel {\n  /** Whether in fullscreen */\n  isFullScreen: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScreenModeSelectors.html":{"url":"classes/ScreenModeSelectors.html","title":"class - ScreenModeSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScreenModeSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Screen mode selectors\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isFullScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFullScreen\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFullScreen(state: ScreenModeModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Selectors screen mode selectors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ScreenModeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if full screen\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { ScreenModeModel } from './screen-mode.model';\n\n/**\n * Screen mode selectors\n */\nexport class ScreenModeSelectors {\n  /**\n   * Selectors screen mode selectors\n   * @param state\n   * @returns true if full screen\n   */\n  @Selector()\n  static isFullScreen(state: ScreenModeModel): boolean {\n    return state.isFullScreen;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenModeState.html":{"url":"injectables/ScreenModeState.html","title":"injectable - ScreenModeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenModeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State storing the screen mode\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(undefined: StateContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in src/lib/screen-mode/screen-mode.state.ts:22\n                \n            \n\n\n            \n                \n                    Updates the screen mode\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport produce from 'immer';\nimport { Set } from './screen-mode.actions';\nimport { ScreenModeModel } from './screen-mode.model';\n\n/** State storing the screen mode */\n@State({\n  name: 'screenmode',\n  defaults: {\n    isFullScreen: false,\n  },\n})\n@Injectable()\nexport class ScreenModeState {\n  /**\n   * Updates the screen mode\n   * @param ctx State context\n   * @param action Action with new mode\n   */\n  @Action(Set)\n  set({ setState }: StateContext, { isFullScreen }: Set): void {\n    setState(\n      produce((draft: ScreenModeModel) => {\n        draft.isFullScreen = isFullScreen;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMessage.html":{"url":"classes/SendMessage.html","title":"class - SendMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                A class which sends individual messages submitted by user.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: ContactMessage)\n                    \n                \n                        \n                            \n                                Defined in src/lib/contact/contact.actions.ts:5\n                            \n                        \n\n                \n                    \n                            A constructor which initializes the message of type ContactMessage interface.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    ContactMessage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\nimport { ContactMessage } from '@hra-ui/services';\n\n/** A class which sends individual messages submitted by user. */\nexport class SendMessage extends Action('[Contact] Send Message') {\n  /** A constructor which initializes the message of type ContactMessage interface. */\n  constructor(readonly message: ContactMessage) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/screen-mode/screen-mode.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Update the screen mode\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(isFullScreen: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/screen-mode/screen-mode.actions.ts:4\n                            \n                        \n\n                \n                    \n                            Creates an instance of Set\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isFullScreen\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the mode is fullscreen\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@hra-ui/cdk/state';\n\n/** Update the screen mode */\nexport class Set extends Action('[Screenmode] Set Screenmode') {\n  /**\n   * Creates an instance of Set\n   * @param isFullScreen Whether the mode is fullscreen\n   */\n  constructor(readonly isFullScreen: boolean) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSelection.html":{"url":"classes/SetSelection.html","title":"class - SetSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/illustrator/illustrator.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the selection for the Item in the current state\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(selected: IllustrationMappingItem)\n                    \n                \n                        \n                            \n                                Defined in src/lib/illustrator/illustrator.actions.ts:20\n                            \n                        \n\n                \n                    \n                            Initializes the Mapping Item\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selected\n                                                  \n                                                        \n                                                                        IllustrationMappingItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActionGroup } from '@hra-ui/cdk/state';\nimport { IllustrationMappingItem, Iri } from '@hra-ui/services';\n\n/** Action base class factory */\nconst Action = ActionGroup('Illustrator');\n\n/**\n * Loads the state with the current Iri\n */\nexport class Load extends Action('Load') {\n  /** Intializes the set iri */\n  constructor(readonly iri: Iri) {\n    super();\n  }\n}\n\n/**\n * Sets the selection for the Item in the current state\n */\nexport class SetSelection extends Action('Set Selection') {\n  /** Initializes the Mapping Item */\n  constructor(readonly selected: IllustrationMappingItem) {\n    super();\n  }\n}\n\n/**\n * Clears the selection for the current state\n */\nexport class ClearSelection extends Action('Clear Selection') {}\n\n/**\n * Resets the state\n */\nexport class Reset extends Action('Reset') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceRefsSelectors.html":{"url":"classes/SourceRefsSelectors.html","title":"class - SourceRefsSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceRefsSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selectors for SourceRefState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sourceReferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    sourceReferences(refs: SourceReference[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['SourceRefsState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.selectors.ts:9\n                \n            \n\n\n            \n                \n                    returns the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refs\n                                    \n                                            SourceReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SourceReference[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SourceReference } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { SourceRefsState } from './source-refs.state';\n\n/** Selectors for SourceRefState */\nexport class SourceRefsSelectors {\n  /** returns the source references */\n  @Selector([SourceRefsState])\n  static sourceReferences(refs: SourceReference[]): SourceReference[] {\n    return refs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SourceRefsState.html":{"url":"injectables/SourceRefsState.html","title":"injectable - SourceRefsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SourceRefsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-refs/source-refs.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State to handle the source references\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(undefined: Context, undefined: Load)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:27\n                \n            \n\n\n            \n                \n                    Loads the current state with the source references\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Load\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(undefined: Context)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Reset)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-refs/source-refs.state.ts:35\n                \n            \n\n\n            \n                \n                    Resets the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { FtuDataService, SourceReference } from '@hra-ui/services';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load, Reset } from './source-refs.actions';\n\ntype Context = StateContext;\n\n/**\n * State to handle the source references\n */\n@State({\n  name: 'sourceReferences',\n  defaults: [],\n})\n@Injectable()\nexport class SourceRefsState {\n  /**\n   * Data service of Ftu\n   */\n  private readonly dataService = inject(FtuDataService);\n\n  /**\n   * Loads the current state with the source references\n   */\n  @Action(Load)\n  load({ setState }: Context, { iri }: Load): Observable {\n    return this.dataService.getSourceReferences(iri).pipe(tap(setState));\n  }\n\n  /**\n   * Resets the current state\n   */\n  @Action(Reset)\n  reset({ setState }: Context): void {\n    setState([]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateAnalyticsPluginService.html":{"url":"injectables/StateAnalyticsPluginService.html","title":"injectable - StateAnalyticsPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateAnalyticsPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Google Analytics Plugin Injectable\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(state, action, next: NgxsNextPluginFn)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/state-analytics-plugin/state-analytics-plugin.service.ts:51\n                \n            \n\n\n            \n                \n                    Handles logger plugin\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent state of the store with type unknown.\n\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent action being dispatched with type unknown type.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            NgxsNextPluginFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnext plugin to handle the action\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nnext plugin with the current state and action.\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, InjectionToken, Provider } from '@angular/core';\nimport { getActionTypeFromInstance, NgxsNextPluginFn, NgxsPlugin, NGXS_PLUGINS } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { DEFAULT_LOGGABLE_ACTIONS } from './default-loggable-actions';\n\n/** Primitive types */\nconst PRIMITIVE_TYPES = ['bigint', 'boolean', 'number', 'string'];\n\n/**\n * Determines whether primitive is\n * @param value is string - used to check the input value from serialize funtion\n * @returns type of value - boolean/number/string/null/bigint/undefined\n */\nfunction isPrimitive(value: unknown): value is bigint | boolean | number | string | null | undefined {\n  return value == null || PRIMITIVE_TYPES.includes(typeof value);\n}\n\n/**\n * Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n */\nexport const LOGGABLE_ACTIONS = new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n});\n\n/**\n * Google Analytics Plugin Injectable\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateAnalyticsPluginService implements NgxsPlugin {\n  /**\n   * Injects the service for state analytics plugin.\n   */\n  private readonly ga = inject(GoogleAnalyticsService);\n\n  /**\n   * Plugin service for logging state analytics\n   * Setting loggable action types from LOGGABLE_ACTIONS dependency.\n   */\n  private readonly loggableTypes = new Set(inject(LOGGABLE_ACTIONS).map(getActionTypeFromInstance));\n\n  /**\n   * Handles logger plugin\n   * @param state -  Current state of the store with type unknown.\n   * @param action - Current action being dispatched with type unknown type.\n   * @param next - next plugin to handle the action\n   * @returns - next plugin with the current state and action.\n   */\n  handle(state: unknown, action: unknown, next: NgxsNextPluginFn) {\n    this.logAction(action);\n    return next(state, action);\n  }\n\n  /**\n   * Logs action trigerred to google analytics event\n   * @param action - Current action being dispatched with type unknown type.\n   * @returns void\n   */\n  private logAction(action: unknown): void {\n    const type = getActionTypeFromInstance(action);\n    if (type && this.loggableTypes.has(type)) {\n      const payload = JSON.stringify(action, this.serialize);\n      this.ga.event(type, 'action_log', payload);\n    }\n  }\n\n  /**\n   * Serializes action data\n   * @param key - key with type unknown that needs to be serialized\n   * @param value - value with type unknown that needs to be serialized\n   * @returns serialized value\n   */\n  private serialize(this: void, key: unknown, value: unknown): unknown {\n    if (key === '' && typeof value === 'object') {\n      return { ...value, type: undefined };\n    } else if (isPrimitive(value) || (Array.isArray(value) && value.every(isPrimitive))) {\n      return value;\n    }\n\n    return undefined;\n  }\n}\n\n/**\n * State Login Provider\n */\nexport const STATE_LOGGER_PROVIDER: Provider = {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TissueLibrarySelectors.html":{"url":"classes/TissueLibrarySelectors.html","title":"class - TissueLibrarySelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TissueLibrarySelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selector class for retreiving data from the TissueLibraryState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        tissues\n                        \n                    \n                \n            \n            \n                \n                    \n                    tissues(state: TissueLibraryModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['TissueLibraryState'])\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.selectors.ts:14\n                \n            \n\n\n            \n                \n                    Gets the tissue data from the TissueLibrary object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                TissueLibraryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current state of the TissueLibraryState.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        node data of the type of TisseData.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri, Tissue } from '@hra-ui/services';\nimport { Selector } from '@ngxs/store';\nimport { TissueLibraryModel } from './tissue-library.model';\nimport { TissueLibraryState } from './tissue-library.state';\n\n/** Selector class for retreiving data from the TissueLibraryState */\nexport class TissueLibrarySelectors {\n  /**\n   * Gets the tissue data from the TissueLibrary object.\n   * @param state the current state of the TissueLibraryState.\n   * @returns node data of the type of TisseData.\n   */\n  @Selector([TissueLibraryState])\n  static tissues(state: TissueLibraryModel): Record {\n    return state.nodes as Record;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryState.html":{"url":"injectables/TissueLibraryState.html","title":"injectable - TissueLibraryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling tissue data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActive\n                        \n                    \n                \n            \n            \n                \nsetActive(ctx: TissueLibraryContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Load)\n                \n            \n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.state.ts:22\n                \n            \n\n\n            \n                \n                    Loads the tissue data into the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                TissueLibraryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The state context instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        data The tissue data to be added to the state\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { TissueLibraryService } from '@hra-ui/services';\nimport { Action, State } from '@ngxs/store';\nimport { Observable, tap } from 'rxjs';\nimport { Load } from './tissue-library.actions';\nimport { TissueLibraryContext, TissueLibraryModel } from './tissue-library.model';\n\n/** State handling tissue data*/\n@State({\n  name: 'tissueLibrary',\n})\n@Injectable()\nexport class TissueLibraryState {\n  /** injects the TissueLibraryService into a private readonly property */\n  private readonly dataService = inject(TissueLibraryService);\n  /**\n   * Loads the tissue data into the current state\n   * @param ctx The state context instance\n   * @returns data The tissue data to be added to the state\n   */\n  @Action(Load)\n  setActive(ctx: TissueLibraryContext): Observable {\n    return this.dataService.getTissueLibrary().pipe(tap((data) => ctx.setState(data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            computeAggregate   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            createDownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            expandRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getColumnIndex   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getLabel   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getRow   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            getTotalCount   (src/.../cell-summary.helpers.ts)\n                        \n                        \n                            isPrimitive   (src/.../state-analytics-plugin.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        computeAggregate\n                        \n                    \n                \n            \n            \n                \ncomputeAggregate(summary: CellSummary)\n                \n            \n\n\n\n\n            \n                \n                    The computeAggregate function takes a summary object and performs aggregation operations on its properties\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    summary\n                                    \n                                            CellSummary\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandRow\n                        \n                    \n                \n            \n            \n                \nexpandRow(row: CellSummaryAggregateRow, length: number)\n                \n            \n\n\n\n\n            \n                \n                    This function expands the current row length with undefined if its length is\nless than the given length\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnIndex\n                        \n                    \n                \n            \n            \n                \ngetColumnIndex(indexById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the column if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    indexById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLabel\n                        \n                    \n                \n            \n            \n                \ngetLabel(items, id: string, what: string)\n                \n            \n\n\n\n\n            \n                \n                    This function retrieves the label of an item from an array based on its ID,\nand if not found, it returns a default string indicating the absence of a label for the specified item type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    what\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRow\n                        \n                    \n                \n            \n            \n                \ngetRow(rowById: Map, id: string)\n                \n            \n\n\n\n\n            \n                \n                    This function gets the index of the row if it does not have any\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowById\n                                    \n                                            Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CellSummaryAggregateRow\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalCount\n                        \n                    \n                \n            \n            \n                \ngetTotalCount(row: CellSummaryAggregateRow)\n                \n            \n\n\n\n\n            \n                \n                    This function calculates and returns the total count by iterating over a row array and summing\nup the count property of each object entry, while ignoring non-object entries, with an initial value of 0.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                CellSummaryAggregateRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDownloadFormatId\n                        \n                    \n                \n            \n            \n                \ncreateDownloadFormatId(id: string)\n                \n            \n\n\n\n\n            \n                \n                    Creates download format id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DownloadFormatId\n\n                    \n                    \n                        download format id\n\n                    \n                \n            \n        \n    \n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isPrimitive\n                        \n                    \n                \n            \n            \n                \nisPrimitive(value)\n                \n            \n\n\n\n\n            \n                \n                    Determines whether primitive is\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is string - used to check the input value from serialize funtion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :      | boolean | number | string | null | undefined\n\n                    \n                    \n                        type of value - boolean/number/string/null/bigint/undefined\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nstate\nThis library was generated with Nx.\nRunning unit tests\nRun nx test state to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraStateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellSummaryAggregate   (src/.../cell-summary.model.ts)\n                        \n                        \n                            CellSummaryAggregateRow   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../active-ftu.state.ts)\n                        \n                        \n                            Context   (src/.../cell-summary.model.ts)\n                        \n                        \n                            Context   (src/.../illustrator.state.ts)\n                        \n                        \n                            Context   (src/.../source-refs.state.ts)\n                        \n                        \n                            DownloadContext   (src/.../download.model.ts)\n                        \n                        \n                            DownloadEntry   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormat   (src/.../download.model.ts)\n                        \n                        \n                            DownloadFormatId   (src/.../download.model.ts)\n                        \n                        \n                            DownloadModel   (src/.../download.model.ts)\n                        \n                        \n                            TissueLibraryContext   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibraryModel   (src/.../tissue-library.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregate\n                \n            \n            \n                \n                    Type representing AGGREGATE having label, columns and rows\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryAggregateRow\n                \n            \n            \n                \n                    Type representing a single AGGREGATE_ROW\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/active-ftu/active-ftu.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/illustrator/illustrator.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    src/lib/source-refs/source-refs.state.ts\n    \n    \n        \n            \n                \n                    \n                    Context\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    src/lib/download/download.model.ts\n    \n    \n        \n            \n                \n                    \n                    DownloadContext\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadContext,\nwhich is a state context for the DownloadModel type\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadEntry\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadEntry,\nwhich is inferred from the type of the DOWNLOAD_ENTRY constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormat\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormat,\nwhich is inferred from the type of the DOWNLOAD_FORMAT constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadFormatId\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadFormatId,\nwhich is inferred from the type of the DOWNLOAD_FORMAT_ID constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DownloadModel\n                \n            \n            \n                \n                    Define a TypeScript type called DownloadModel,\nwhich is inferred from the type of the DOWNLOAD_MODEL constant\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    TissueLibraryContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                        StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibraryModel\n                \n            \n            \n                \n                    Type alias for the tissue data\n\n                \n            \n            \n                \n                        TissueLibrary\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            About   (src/.../link-ids.ts)\n                        \n                        \n                            Action   (src/.../active-ftu.actions.ts)\n                        \n                        \n                            Action   (src/.../cell-summary.actions.ts)\n                        \n                        \n                            Action   (src/.../download.action.ts)\n                        \n                        \n                            Action   (src/.../illustrator.actions.ts)\n                        \n                        \n                            Action   (src/.../source-refs.actions.ts)\n                        \n                        \n                            AGGREGATE   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_CELL   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AGGREGATE_ROW   (src/.../cell-summary.model.ts)\n                        \n                        \n                            AppTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            ContactAcknowledgement   (src/.../resource-ids.ts)\n                        \n                        \n                            DEFAULT_LOGGABLE_ACTIONS   (src/.../default-loggable-actions.ts)\n                        \n                        \n                            DOWNLOAD_ENTRY   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_FORMAT_ID   (src/.../download.model.ts)\n                        \n                        \n                            DOWNLOAD_MODEL   (src/.../download.model.ts)\n                        \n                        \n                            Embed   (src/.../link-ids.ts)\n                        \n                        \n                            ExploreFTU   (src/.../link-ids.ts)\n                        \n                        \n                            Gradient   (src/.../resource-types.ts)\n                        \n                        \n                            GradientLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            GradientLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            Illustration   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPage   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageDepthDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDepthTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageDescription   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroImg   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageIntroMoreText   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPagePartners   (src/.../resource-ids.ts)\n                        \n                        \n                            LandingPageReadMore   (src/.../link-ids.ts)\n                        \n                        \n                            LandingPageTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            LOGGABLE_ACTIONS   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Metrics   (src/.../resource-ids.ts)\n                        \n                        \n                            Metrics   (src/.../resource-types.ts)\n                        \n                        \n                            MetricsLogo   (src/.../resource-ids.ts)\n                        \n                        \n                            MetricsTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            Png   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            PNG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                        \n                            Portal   (src/.../link-ids.ts)\n                        \n                        \n                            PRIMITIVE_TYPES   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            ProductLogoUrl   (src/.../resource-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../link-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../resource-ids.ts)\n                        \n                        \n                            Size   (src/.../resource-types.ts)\n                        \n                        \n                            SizeLegend   (src/.../resource-ids.ts)\n                        \n                        \n                            SizeLegendInfo   (src/.../resource-ids.ts)\n                        \n                        \n                            STATE_LOGGER_PROVIDER   (src/.../state-analytics-plugin.service.ts)\n                        \n                        \n                            Svg   (src/.../builtin-formats-ids.ts)\n                        \n                        \n                            SVG_FORMAT   (src/.../builtin-formats.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/link-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        About\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('About')\n                    \n                \n\n            \n                \n                    About Link id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Embed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Embed')\n                    \n                \n\n            \n                \n                    LinkId for Embed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExploreFTU\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ExploreFTU')\n                    \n                \n\n            \n                \n                    LinkId for Explore FTU\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Illustration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Illustration')\n                    \n                \n\n            \n                \n                    LinkId for Illustration metadata\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPage')\n                    \n                \n\n            \n                \n                    Landing page id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageReadMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('LandingPageReadMore')\n                    \n                \n\n            \n                \n                    LinkId for read more in landing page content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Portal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('Portal')\n                    \n                \n\n            \n                \n                    LinkId for HRA Portal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title link id\n\n                \n            \n\n        \n    \n\n    src/lib/active-ftu/active-ftu.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('ActiveFtu')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('CellSummary')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Download')\n                    \n                \n\n            \n                \n                    Action Group for Download Action\n\n                \n            \n\n        \n    \n\n    src/lib/illustrator/illustrator.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('Illustrator')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/source-refs/source-refs.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ActionGroup('SourceRefs')\n                    \n                \n\n            \n                \n                    Action base class factory\n\n                \n            \n\n        \n    \n\n    src/lib/cell-summary/cell-summary.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AGGREGATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  columns: z.string().array(),\n  rows: AGGREGATE_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE is an object that contains the label, columns\nand rows\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  color: z.string(),\n  size: z.number().nonnegative(),\n  data: FtuDataSchemas.CELL_SUMMARY_ROW,\n})\n                    \n                \n\n            \n                \n                    The AGGREGATE_CELL is an object that contains the color, size and\nthe data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AGGREGATE_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.tuple([z.string(), z.number().optional()]).rest(AGGREGATE_CELL.optional())\n                    \n                \n\n            \n                \n                    The AGGREGATE_ROW is a tuple of aggregate data structure with two elements:\na required string followed by an optional number\n\n                \n            \n\n        \n    \n\n    src/lib/resource-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('AppTitle')\n                    \n                \n\n            \n                \n                    App title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ContactAcknowledgement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ContactAcknowledgement')\n                    \n                \n\n            \n                \n                    Message to display after submitting contact form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegend')\n                    \n                \n\n            \n                \n                    Gradient legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GradientLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('GradientLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Gradient legend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthDescription')\n                    \n                \n\n            \n                \n                    Lanading Page Depth Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthImg')\n                    \n                \n\n            \n                \n                    Landing Page Depth Img id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthMoreText')\n                    \n                \n\n            \n                \n                    Landing Page Depth More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDepthTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageDepthTitle')\n                    \n                \n\n            \n                \n                    Landing Page Depth Title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroDescription')\n                    \n                \n\n            \n                \n                    Landing Page Description id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroImg')\n                    \n                \n\n            \n                \n                    Landing Page Intro Image id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageIntroMoreText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroMoreText')\n                    \n                \n\n            \n                \n                    Landing Page More Text id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPagePartners\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroPartners')\n                    \n                \n\n            \n                \n                    Landing Page Partners id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LandingPageTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('LandingPageIntroTitle')\n                    \n                \n\n            \n                \n                    Landing Page Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('Metrics')\n                    \n                \n\n            \n                \n                    metrics id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsLogo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsLogo')\n                    \n                \n\n            \n                \n                    Metrics Logo id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricsTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('MetricsTitle')\n                    \n                \n\n            \n                \n                    Metrics Title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductLogoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductLogoUrl')\n                    \n                \n\n            \n                \n                    Product logo url id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegend')\n                    \n                \n\n            \n                \n                    Size legend id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SizeLegendInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('SizeLegendInfo')\n                    \n                \n\n            \n                \n                    Info to show on the tooltip for Size legend\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/default-loggable-actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ContactActions.SendMessage,\n  DownloadActions.Download,\n  LinkRegistryActions.Navigate,\n]\n                    \n                \n\n            \n                \n                    Default loggable actions\n\n                \n            \n\n        \n    \n\n    src/lib/download/download.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_ENTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.discriminatedUnion('type', [\n  z.object({ type: z.literal('url'), url: z.string() }),\n  z.object({ type: z.literal('data'), data: z.string() }),\n])\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_ENTRY,\nwhich is a discriminated union of two objects with different properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .object({\n    id: DOWNLOAD_FORMAT_ID,\n    label: z.string(),\n    extension: z.string(),\n  })\n  .partial({ extension: true })\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT,\nwhich is an object with id, label, and extension properties\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_FORMAT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z\n  .string()\n  .transform((id) => `DownloadFormatId:'${id}'`)\n  .brand('DownloadFormatId')\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_FORMAT_ID,\nwhich is a string that is transformed into a branded string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DOWNLOAD_MODEL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  formats: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_FORMAT),\n  entries: z.record(DOWNLOAD_FORMAT_ID, DOWNLOAD_ENTRY),\n})\n                    \n                \n\n            \n                \n                    Define a Zod schema for DOWNLOAD_MODEL,\nwhich is an object with formats and entries properties\n\n                \n            \n\n        \n    \n\n    src/lib/resource-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Gradient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('gradient', payload())\n                    \n                \n\n            \n                \n                    Gradient legend resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Metrics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType(\n  'metrics',\n  payload()\n)\n                    \n                \n\n            \n                \n                    Metrics resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Size\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCustomType('size', payload())\n                    \n                \n\n            \n                \n                    Size legend resource\n\n                \n            \n\n        \n    \n\n    src/lib/state-analytics-plugin/state-analytics-plugin.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGABLE_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Loggable actions', {\n  providedIn: 'root',\n  factory: () => DEFAULT_LOGGABLE_ACTIONS,\n})\n                    \n                \n\n            \n                \n                    Injectable token LOGGABLE_ACTIONS provides list of actions that can be logged\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRIMITIVE_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['bigint', 'boolean', 'number', 'string']\n                    \n                \n\n            \n                \n                    Primitive types\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATE_LOGGER_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NGXS_PLUGINS,\n  useExisting: StateAnalyticsPluginService,\n  multi: true,\n}\n                    \n                \n\n            \n                \n                    State Login Provider\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Png\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('png')\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Svg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createDownloadFormatId('svg')\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT CREATE ID\n\n                \n            \n\n        \n    \n\n    src/lib/download/builtin-formats.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PNG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Png,\n  label: 'Download Png',\n  extension: '.png',\n}\n                    \n                \n\n            \n                \n                    PNG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_FORMAT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DownloadFormat\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: Svg,\n  label: 'Download Svg',\n  extension: '.svg',\n}\n                    \n                \n\n            \n                \n                    SVG DEFAULT FORMAT\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
