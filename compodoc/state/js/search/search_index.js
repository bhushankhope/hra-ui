var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Add.html",[0,0.592,1,1.141]],["body/classes/Add.html",[0,0.574,1,1.501,2,0.725,3,0.588,4,0.99,5,0.588,6,0.876,7,0.876,8,1.126,9,0.897,10,1.518,11,1.719,12,1.368,13,1.341,14,1.91,15,1.381,16,0.29,17,0.897,18,1.856,19,2.333,20,1.223,21,1.126,22,1.126,23,1.106,24,2.252,25,2.085,26,1.659,27,0.725,28,0.081,29,0.725,30,0.725,31,0.876,32,0.876,33,1.368,34,0.897,35,0.897,36,0.897,37,0.588,38,0.725,39,0.897,40,1.106,41,1.126,42,0.897,43,0.725,44,0.897,45,1.368,46,0.897,47,0.897,48,0.897,49,1.341,50,1.126,51,0.041,52,0.041]],["title/classes/Set.html",[0,0.592,49,1.141]],["body/classes/Set.html",[0,0.54,1,1.041,2,0.67,3,0.543,4,1.003,5,0.543,6,0.941,7,0.941,8,1.041,9,0.844,10,1.483,11,1.041,12,0.829,13,1.277,14,1.904,15,1.397,16,0.268,17,0.844,18,1.781,19,2.238,20,1.222,21,1.041,22,1.041,23,1.277,25,1.984,26,1.579,27,0.67,28,0.08,29,0.67,30,0.67,31,0.941,32,0.941,33,0.829,34,0.829,35,0.829,36,0.829,37,0.543,38,0.67,39,0.844,40,1.041,41,1.041,42,1.288,43,1.041,44,1.288,45,1.929,46,1.288,47,1.288,48,1.288,49,1.723,50,1.041,51,0.038,52,0.038,53,2.119,54,2.119,55,1.364]],["title/interfaces/Source.html",[4,0.592,56,1.412]],["body/interfaces/Source.html",[3,0.761,4,1.066,5,0.761,6,0.613,7,0.613,9,0.761,10,0.761,16,0.376,17,1.085,20,1.175,28,0.08,31,0.613,32,0.613,34,2.313,37,0.761,39,1.265,51,0.049,52,0.049,56,1.16,57,1.91,58,1.458,59,2.724,60,2.906,61,3.807,62,2.906,63,3.463,64,2.08,65,1.16,66,2.08,67,0.938,68,1.458,69,1.458,70,1.16,71,1.458,72,1.16]],["title/classes/SourceListSelectors.html",[0,0.592,73,1.774]],["body/classes/SourceListSelectors.html",[0,0.786,2,0.891,3,0.722,4,0.861,5,0.722,6,0.842,7,0.842,9,1.046,13,1.289,14,1.289,15,1.429,16,0.357,18,1.875,20,0.582,23,0.891,27,0.891,28,0.08,29,0.891,30,0.891,31,1.085,32,0.842,37,1.046,38,0.891,39,0.722,40,0.891,43,1.289,51,0.048,52,0.048,60,2.004,65,1.102,67,1.763,73,2.004,74,1.813,75,3.588,76,2.625,77,2.582,78,2.055,79,2.004,80,2.625,81,2.625,82,1.384,83,1.813,84,2.625,85,2.004,86,1.813]],["title/injectables/SourceListState.html",[78,1.412,87,1.412]],["body/injectables/SourceListState.html",[0,0.314,1,1.658,3,0.491,4,0.859,5,0.491,6,0.781,7,0.781,9,0.491,10,0.491,12,1.684,13,1.362,14,1.485,15,1.529,16,0.242,20,0.628,23,0.961,26,1.189,27,0.961,28,0.081,29,1.196,30,0.961,31,0.628,32,0.628,33,0.749,37,1.204,38,0.605,39,0.491,40,1.362,42,1.189,43,1.362,44,1.684,45,1.479,46,1.189,47,1.189,48,1.189,49,1.72,51,0.036,52,0.036,65,0.749,67,0.605,70,1.189,72,2.05,77,1.494,78,1.189,79,1.494,82,1.494,85,1.494,87,1.189,88,1.232,89,1.232,90,1.957,91,1.232,92,1.957,93,1.957,94,1.232,95,1.957,96,1.232,97,1.957,98,1.232,99,0.941,100,1.232,101,1.232,102,1.232,103,1.232,104,1.957,105,1.957,106,2.434,107,1.232,108,1.232,109,1.232]],["title/dependencies.html",[110,1.5,111,2.123]],["body/dependencies.html",[28,0.078,51,0.069,52,0.069,99,2.393,111,2.883,112,3.134,113,3.134,114,3.134,115,3.134,116,3.777]],["title/index.html",[16,0.387,117,1.965,118,1.965]],["body/index.html",[15,1.49,28,0.068,51,0.068,52,0.068,119,3.085,120,3.085,121,3.741,122,3.085,123,3.741,124,3.741,125,3.085,126,3.085,127,3.085]],["title/modules.html",[128,2.382]],["body/modules.html",[28,0.072,51,0.072,52,0.072,128,2.621]],["title/overview.html",[129,2.382]],["body/overview.html",[2,1.603,28,0.07,51,0.07,52,0.07,56,1.983,87,1.983,129,2.491,130,3.869,131,3.263]],["title/properties.html",[17,1.108,110,1.5]],["body/properties.html",[17,1.333,28,0.076,51,0.071,52,0.071,132,3.346,133,3.346]],["title/miscellaneous/typealiases.html",[134,0.966,135,2.781]],["body/miscellaneous/typealiases.html",[4,0.894,6,0.893,7,0.893,10,1.108,16,0.547,20,1.126,28,0.064,31,0.893,32,0.893,51,0.064,52,0.064,58,2.935,64,2.124,66,2.679,67,1.724,68,2.124,69,2.124,70,1.69,71,2.124,72,2.132,134,1.366,136,2.782,137,3.509]],["title/miscellaneous/variables.html",[134,0.966,138,2.123]],["body/miscellaneous/variables.html",[16,0.547,28,0.073,35,2.132,36,2.132,51,0.064,52,0.064,62,2.124,134,1.366,138,2.124,139,3.509,140,3.509,141,3.844,142,3.509,143,2.782,144,2.782,145,3.509,146,2.782,147,2.782,148,3.509,149,2.782]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":133,"title":{},"body":{"properties.html":{}}}],["1",{"_index":130,"title":{},"body":{"overview.html":{}}}],["15.1.0",{"_index":116,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":113,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":131,"title":{},"body":{"overview.html":{}}}],["action",{"_index":10,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["action(add",{"_index":93,"title":{},"body":{"injectables/SourceListState.html":{}}}],["action(set",{"_index":97,"title":{},"body":{"injectables/SourceListState.html":{}}}],["add",{"_index":1,"title":{"classes/Add.html":{}},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["add(undefined",{"_index":91,"title":{},"body":{"injectables/SourceListState.html":{}}}],["added",{"_index":33,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["adding",{"_index":11,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["adds",{"_index":44,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["alias",{"_index":66,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":136,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular/common",{"_index":115,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":99,"title":{},"body":{"injectables/SourceListState.html":{},"dependencies.html":{}}}],["argument",{"_index":71,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["array",{"_index":31,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["class",{"_index":0,"title":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{}},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"overview.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["constructor(public",{"_index":50,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["constructor(readonly",{"_index":41,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["constructor(sourcelist",{"_index":22,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["context",{"_index":104,"title":{},"body":{"injectables/SourceListState.html":{}}}],["createresourceid('productlogourl",{"_index":144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresourceid('producttitle",{"_index":149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":70,"title":{},"body":{"interfaces/Source.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["current",{"_index":43,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["data",{"_index":77,"title":{},"body":{"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["decorators",{"_index":82,"title":{},"body":{"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["default",{"_index":35,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":103,"title":{},"body":{"injectables/SourceListState.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["dependencies",{"_index":111,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["draft.push(...sourcelist",{"_index":108,"title":{},"body":{"injectables/SourceListState.html":{}}}],["effectively",{"_index":47,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["execute",{"_index":127,"title":{},"body":{"index.html":{}}}],["export",{"_index":39,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["generated",{"_index":120,"title":{},"body":{"index.html":{}}}],["gets",{"_index":84,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["getsourcelist",{"_index":80,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["getsourcelist(state",{"_index":81,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["getting",{"_index":117,"title":{"index.html":{}},"body":{}}],["handler's",{"_index":69,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["handling",{"_index":90,"title":{},"body":{"injectables/SourceListState.html":{}}}],["helper",{"_index":68,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ids.ts",{"_index":141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["immer",{"_index":101,"title":{},"body":{"injectables/SourceListState.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["initializes",{"_index":25,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["injectable",{"_index":87,"title":{"injectables/SourceListState.html":{}},"body":{"injectables/SourceListState.html":{},"overview.html":{}}}],["injectables",{"_index":88,"title":{},"body":{"injectables/SourceListState.html":{}}}],["instance",{"_index":105,"title":{},"body":{"injectables/SourceListState.html":{}}}],["interface",{"_index":56,"title":{"interfaces/Source.html":{}},"body":{"interfaces/Source.html":{},"overview.html":{}}}],["interfaces",{"_index":57,"title":{},"body":{"interfaces/Source.html":{}}}],["library",{"_index":119,"title":{},"body":{"index.html":{}}}],["link",{"_index":61,"title":{},"body":{"interfaces/Source.html":{}}}],["list",{"_index":12,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["list.actions",{"_index":102,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list.actions.ts",{"_index":8,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["list.actions.ts:17",{"_index":54,"title":{},"body":{"classes/Set.html":{}}}],["list.actions.ts:22",{"_index":55,"title":{},"body":{"classes/Set.html":{}}}],["list.actions.ts:6",{"_index":24,"title":{},"body":{"classes/Add.html":{}}}],["list.model",{"_index":38,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["list.model.ts",{"_index":58,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["list.selectors.ts",{"_index":74,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["list.selectors.ts:12",{"_index":83,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["list.state.ts",{"_index":89,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list.state.ts:20",{"_index":94,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list.state.ts:34",{"_index":98,"title":{},"body":{"injectables/SourceListState.html":{}}}],["list/source",{"_index":7,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["logo",{"_index":146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":52,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":79,"title":{},"body":{"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["miscellaneous",{"_index":134,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":128,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":29,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["new",{"_index":45,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["ngxs/store",{"_index":65,"title":{},"body":{"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["nx",{"_index":121,"title":{},"body":{"index.html":{}}}],["object",{"_index":60,"title":{},"body":{"interfaces/Source.html":{},"classes/SourceListSelectors.html":{}}}],["objects",{"_index":32,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["ones",{"_index":46,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["overview",{"_index":129,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":110,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":40,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["payload",{"_index":26,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["peer",{"_index":114,"title":{},"body":{"dependencies.html":{}}}],["produce",{"_index":100,"title":{},"body":{"injectables/SourceListState.html":{}}}],["produce((draft",{"_index":107,"title":{},"body":{"injectables/SourceListState.html":{}}}],["product",{"_index":145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productlogourl",{"_index":139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producttitle",{"_index":142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":17,"title":{"properties.html":{}},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"properties.html":{}}}],["property",{"_index":63,"title":{},"body":{"interfaces/Source.html":{}}}],["public",{"_index":53,"title":{},"body":{"classes/Set.html":{}}}],["readonly",{"_index":19,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{}}}],["removes",{"_index":42,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["resetting",{"_index":48,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["results",{"_index":51,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":76,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["return",{"_index":86,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["returns",{"_index":85,"title":{},"body":{"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["run",{"_index":125,"title":{},"body":{"index.html":{}}}],["running",{"_index":122,"title":{},"body":{"index.html":{}}}],["selector",{"_index":75,"title":{},"body":{"classes/SourceListSelectors.html":{}}}],["set",{"_index":49,"title":{"classes/Set.html":{}},"body":{"classes/Add.html":{},"classes/Set.html":{},"injectables/SourceListState.html":{}}}],["set(undefined",{"_index":96,"title":{},"body":{"injectables/SourceListState.html":{}}}],["setstate",{"_index":106,"title":{},"body":{"injectables/SourceListState.html":{}}}],["setstate(sourcelist",{"_index":109,"title":{},"body":{"injectables/SourceListState.html":{}}}],["source",{"_index":4,"title":{"interfaces/Source.html":{}},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["sourcelist",{"_index":14,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["sourcelistcontext",{"_index":72,"title":{},"body":{"interfaces/Source.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["sourcelistmodel",{"_index":67,"title":{},"body":{"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["sourcelistselectors",{"_index":73,"title":{"classes/SourceListSelectors.html":{}},"body":{"classes/SourceListSelectors.html":{}}}],["sourceliststate",{"_index":78,"title":{"injectables/SourceListState.html":{}},"body":{"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["sources",{"_index":13,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{}}}],["src/.../resource",{"_index":140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../source",{"_index":137,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/resource",{"_index":143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/source",{"_index":6,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":118,"title":{"index.html":{}},"body":{}}],["state",{"_index":15,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"index.html":{}}}],["statecontext",{"_index":64,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/typealiases.html":{}}}],["static",{"_index":18,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"classes/SourceListSelectors.html":{}}}],["string",{"_index":34,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{}}}],["structure",{"_index":59,"title":{},"body":{"interfaces/Source.html":{}}}],["test",{"_index":126,"title":{},"body":{"index.html":{}}}],["tests",{"_index":124,"title":{},"body":{"index.html":{}}}],["title",{"_index":62,"title":{},"body":{"interfaces/Source.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":112,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"interfaces/Source.html":{},"classes/SourceListSelectors.html":{},"injectables/SourceListState.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":135,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":92,"title":{},"body":{"injectables/SourceListState.html":{}}}],["unit",{"_index":123,"title":{},"body":{"index.html":{}}}],["url",{"_index":147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":36,"title":{},"body":{"classes/Add.html":{},"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":138,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":132,"title":{},"body":{"properties.html":{}}}],["void",{"_index":95,"title":{},"body":{"injectables/SourceListState.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Add.html":{"url":"classes/Add.html","title":"class - Add","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Add\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                action of adding a list of sources to the SourceList state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: Source[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-list/source-list.actions.ts:6\n                            \n                        \n\n                \n                    \n                            Initializes the payload for the action\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        Source[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                array of Source objects to be added to the state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SourceList] Add'\n                    \n                \n                    \n                        \n                                Defined in src/lib/source-list/source-list.actions.ts:6\n                        \n                    \n\n            \n                \n                    Action Type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Source } from './source-list.model';\n\n/** action of adding a list of sources to the SourceList state */\nexport class Add {\n  /** Action Type  */\n  static readonly type = '[SourceList] Add';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of Source objects to be added to the state\n   */\n  constructor(readonly sourceList: Source[]) {}\n}\n\n/** An action that removes all current sources and adds new ones, effectively resetting the state */\nexport class Set {\n  /** Action Type  */\n  static readonly type = '[SourceList] Set';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of source objects to be set as the new state\n   */\n  constructor(public sourceList: Source[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.actions.ts\n        \n\n\n            \n                Description\n            \n            \n                An action that removes all current sources and adds new ones, effectively resetting the state\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sourceList\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: Source[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/source-list/source-list.actions.ts:17\n                            \n                        \n\n                \n                    \n                            Initializes the payload for the action\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        Source[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                array of source objects to be set as the new state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sourceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Source[]\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/source-list/source-list.actions.ts:22\n                        \n                    \n\n            \n                \n                    array of source objects to be set as the new state\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SourceList] Set'\n                    \n                \n                    \n                        \n                                Defined in src/lib/source-list/source-list.actions.ts:17\n                        \n                    \n\n            \n                \n                    Action Type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Source } from './source-list.model';\n\n/** action of adding a list of sources to the SourceList state */\nexport class Add {\n  /** Action Type  */\n  static readonly type = '[SourceList] Add';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of Source objects to be added to the state\n   */\n  constructor(readonly sourceList: Source[]) {}\n}\n\n/** An action that removes all current sources and adds new ones, effectively resetting the state */\nexport class Set {\n  /** Action Type  */\n  static readonly type = '[SourceList] Set';\n  /**\n   * Initializes the payload for the action\n   * @param sourceList array of source objects to be set as the new state\n   */\n  constructor(public sourceList: Source[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Source.html":{"url":"interfaces/Source.html","title":"interface - Source","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Source\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.model.ts\n        \n\n\n            \n                Description\n            \n            \n                structure of a source object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link property of the source object\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title property of the source object\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StateContext } from '@ngxs/store';\n\n/** structure of a source object */\nexport interface Source {\n  /** Title property of the source object  */\n  title: string;\n  /** Link property of the source object */\n  link: string;\n}\n\n/** Type alias for the array of source objects */\nexport type SourceListModel = Source[];\n\n/** Helper alias for action handler's ctx argument */\nexport type SourceListContext = StateContext;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceListSelectors.html":{"url":"classes/SourceListSelectors.html","title":"class - SourceListSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceListSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.selectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Selector class for retrieving data from the SourceListState\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSourceList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSourceList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceList(state: SourceListModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/lib/source-list/source-list.selectors.ts:12\n                \n            \n\n\n            \n                \n                    Gets the array of data sources from the SourceList object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SourceListModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current state of the SourceListState\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SourceListModel\n\n                    \n                    \n                        array of source objects\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { SourceListModel } from './source-list.model';\n\n/** Selector class for retrieving data from the SourceListState */\nexport class SourceListSelectors {\n  /**\n   * Gets the array of data sources from the SourceList object.\n   * @param state The current state of the SourceListState\n   * @returns array of source objects\n   */\n  @Selector()\n  static getSourceList(state: SourceListModel) {\n    return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SourceListState.html":{"url":"injectables/SourceListState.html","title":"injectable - SourceListState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SourceListState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/source-list/source-list.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling source list data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(undefined: SourceListContext, undefined: Add)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Add)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-list/source-list.state.ts:20\n                \n            \n\n\n            \n                \n                    adds a list of sources to the current state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                SourceListContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Add\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(undefined: SourceListContext, undefined: Set)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Set)\n                \n            \n\n            \n                \n                    Defined in src/lib/source-list/source-list.state.ts:34\n                \n            \n\n\n            \n                \n                    Removes all current sources and adds new ones, effectively resetting the state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                SourceListContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State } from '@ngxs/store';\nimport { produce } from 'immer';\nimport { Add, Set } from './source-list.actions';\nimport { SourceListContext, SourceListModel } from './source-list.model';\n\n/** State handling source list data */\n@State({\n  name: 'sourceList',\n  defaults: [],\n})\n@Injectable()\nexport class SourceListState {\n  /**\n   * adds a list of sources to the current state\n   * @param ctx The state context instance\n   * @param sourceList The payload which is an array of source objects to be added to the state\n   */\n  @Action(Add)\n  add({ setState }: SourceListContext, { sourceList }: Add) {\n    setState(\n      produce((draft) => {\n        draft.push(...sourceList);\n      })\n    );\n  }\n\n  /**\n   * Removes all current sources and adds new ones, effectively resetting the state.\n   * @param ctx The state context instance\n   * @param sourceList The payload which is an array of source objects to be set as the new state\n   */\n  @Action(Set)\n  set({ setState }: SourceListContext, { sourceList }: Set) {\n    setState(sourceList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nstate\nThis library was generated with Nx.\nRunning unit tests\nRun nx test state to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SourceListContext   (src/.../source-list.model.ts)\n                        \n                        \n                            SourceListModel   (src/.../source-list.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/source-list/source-list.model.ts\n    \n    \n        \n            \n                \n                    \n                    SourceListContext\n                \n            \n            \n                \n                    Helper alias for action handler's ctx argument\n\n                \n            \n            \n                \n                            StateContext\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceListModel\n                \n            \n            \n                \n                    Type alias for the array of source objects\n\n                \n            \n            \n                \n                            Source[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProductLogoUrl   (src/.../resource-ids.ts)\n                        \n                        \n                            ProductTitle   (src/.../resource-ids.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/resource-ids.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductLogoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductLogoUrl')\n                    \n                \n\n            \n                \n                    Product logo url id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProductTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createResourceId('ProductTitle')\n                    \n                \n\n            \n                \n                    Product title id\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
