var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/BiomarkerTableComponent.html",[0,0.646,1,0.863]],["body/components/BiomarkerTableComponent.html",[0,0.545,1,0.853,2,0.978,3,0.441,4,1.122,5,0.797,6,0.797,7,0.797,8,0.797,9,0.441,10,1.473,11,1.473,12,0.336,13,1.122,14,2.06,15,1.122,16,1.519,17,0.741,18,0.741,19,1.25,20,0.741,21,0.741,22,0.741,23,0.958,24,0.797,25,0.741,26,0.741,27,0.958,28,1.03,29,1.801,30,0.741,31,1.122,32,0.741,33,0.958,34,0.958,35,0.958,36,0.958,37,0.958,38,0.741,39,0.958,40,0.741,41,0.741,42,0.639,43,0.422,44,1.122,45,1.25,46,1.339,47,1.339,48,1.339,49,1.339,50,1.339,51,1.339,52,1.339,53,1.339,54,1.339,55,1.122,56,1.339,57,1.122,58,1.339,59,1.439,60,1.849,61,1.354,62,0.958,63,1.122,64,0.958,65,1.195,66,1.339,67,0.958,68,1.339,69,0.958,70,1.599,71,0.112,72,1.473,73,2.729,74,2.072,75,3.473,76,0.797,77,1.298,78,0.797,79,0.741,80,0.958,81,0.797,82,0.741,83,0.741,84,0.741,85,0.741,86,0.797,87,1.95,88,1.122,89,0.741,90,0.741,91,0.797,92,0.741,93,0.741,94,1.122,95,0.958,96,0.797,97,0.741,98,1.742,99,1.122,100,0.741,101,1.87,102,0.741,103,0.797,104,0.741,105,0.958,106,1.439,107,0.741,108,0.958,109,0.797,110,1.122,111,1.437,112,0.797,113,1.576,114,0.797,115,0.797,116,1.268,117,2.932,118,1.849,119,2.932,120,1.906,121,0.797,122,0.797,123,0.741,124,0.958,125,1.354,126,0.741,127,0.797,128,1.439,129,0.741,130,0.797,131,1.773,132,1.773,133,0.958,134,1.439,135,1.51,136,0.978,137,0.797,138,0.797,139,1.25,140,1.354,141,0.741,142,0.797,143,0.741,144,0.797,145,0.741,146,0.741,147,0.853,148,0.741,149,0.951,150,0.741,151,0.797,152,0.741,153,0.741,154,0.741,155,0.741,156,0.797,157,0.741,158,0.741,159,0.741,160,0.741,161,0.741,162,0.797,163,0.958,164,0.958,165,0.797,166,1.25,167,0.797,168,0.958,169,0.741,170,0.741,171,0.958,172,0.958,173,0.958,174,0.797,175,0.797,176,0.797,177,0.741,178,0.741,179,0.741,180,0.741,181,1.354,182,0.441,183,0.741,184,0.741,185,0.336,186,0.336,187,0.441,188,0.741,189,0.441,190,0.441,191,0.441,192,0.336,193,0.336,194,0.545,195,0.441,196,0.564,197,1.122,198,0.336,199,0.958,200,1.25,201,0.441,202,0.741,203,0.958,204,0.336,205,0.336,206,1.25,207,0.958,208,0.441,209,1.773,210,1.122,211,0.441,212,0.958,213,0.441,214,1.707,215,0.958,216,0.441,217,0.441,218,0.741,219,0.441,220,0.441,221,0.441,222,0.441,223,0.441,224,0.441,225,0.958,226,0.441,227,1.622,228,0.741,229,0.441,230,0.741,231,0.441,232,0.728,233,0.441,234,0.741,235,0.741,236,0.441,237,0.441,238,0.741,239,0.441,240,0.441,241,0.958,242,0.741,243,0.441,244,0.441,245,0.441,246,0.441,247,0.441,248,0.441,249,0.441,250,0.441,251,0.441,252,0.441,253,0.441,254,0.741,255,0.441,256,0.441,257,0.441,258,0.441,259,0.741,260,0.741,261,0.441,262,0.441,263,0.741,264,0.441,265,0.336,266,0.441,267,1.439,268,0.441,269,0.441,270,0.441,271,0.441,272,0.441,273,0.336,274,0.441,275,0.441,276,0.441,277,0.441,278,0.441,279,2.027,280,2.027,281,1.731,282,1.339,283,1.339,284,0.797,285,0.797,286,0.797,287,0.797,288,1.339,289,0.797,290,0.797,291,0.797,292,0.797,293,1.731,294,2.6,295,2.027,296,1.339,297,2.027,298,1.339,299,0.797,300,2.447,301,0.797,302,0.797,303,0.797,304,0.797,305,0.797,306,2.027,307,2.027,308,1.731,309,1.731,310,0.797,311,1.339,312,2.838,313,0.797,314,2.26,315,2.6,316,2.6,317,2.26,318,2.26,319,2.027,320,0.797,321,2.027,322,1.339,323,0.797,324,1.731,325,1.339,326,0.797,327,0.797,328,0.797,329,2.447,330,0.797,331,0.797,332,1.339,333,1.339,334,1.339,335,0.797,336,1.339,337,0.797,338,0.797,339,0.797,340,1.339,341,1.339,342,1.731,343,0.797,344,0.797,345,1.339,346,1.339,347,1.339,348,1.731,349,1.731,350,0.797,351,0.797,352,0.797,353,0.797,354,0.797,355,1.339,356,0.797,357,0.797,358,0.797,359,0.797,360,1.339,361,0.797,362,0.797,363,0.797,364,0.797,365,0.797,366,0.797,367,0.797,368,1.339,369,1.339,370,0.797,371,2.027,372,0.797,373,0.797,374,0.797,375,0.036,376,0.036]],["title/interfaces/DataCell.html",[194,0.646,198,0.863]],["body/interfaces/DataCell.html",[0,0.615,1,0.536,3,0.705,4,1.313,9,0.705,10,0.536,11,0.536,12,0.536,13,0.705,14,2.037,15,1.08,16,1.477,17,0.705,18,0.705,19,1.313,20,0.705,21,0.705,22,0.705,23,1.08,25,0.705,26,0.705,27,0.705,28,1.12,29,1.743,30,0.705,31,1.08,32,0.705,33,1.08,34,1.08,35,1.08,36,1.08,37,1.08,38,0.705,39,0.705,40,0.705,41,0.705,42,0.838,43,0.615,44,1.08,45,1.313,55,0.705,57,0.705,59,1.313,60,2.005,61,1.08,62,0.705,63,1.08,64,0.705,65,1.207,67,0.705,69,0.705,70,1.525,71,0.112,72,1.511,74,2.063,77,1.207,79,0.705,80,1.08,82,0.705,83,0.705,84,0.705,85,0.705,87,2.005,88,1.08,89,0.705,90,0.705,92,0.705,93,0.705,94,1.08,95,1.08,97,0.705,98,1.914,99,0.705,100,0.705,101,2.005,102,0.705,104,0.705,105,1.08,106,1.675,107,0.705,108,1.08,110,1.08,111,1.477,113,1.569,116,1.368,118,1.472,120,1.743,123,0.705,124,1.08,125,1.313,126,0.705,128,1.313,129,0.705,131,1.675,132,1.587,133,0.705,134,1.313,135,1.675,136,1.427,139,1.743,140,1.313,141,0.705,143,0.705,145,0.705,146,0.705,147,0.822,148,0.705,149,1.12,150,0.705,152,0.705,153,0.705,154,0.705,155,0.705,157,0.705,158,0.705,159,0.705,160,0.705,161,0.705,163,1.08,164,1.08,166,1.313,168,1.08,169,0.705,170,0.705,171,0.705,172,1.08,173,1.08,177,0.705,178,0.705,179,0.705,180,0.705,181,1.675,182,0.705,183,1.08,184,1.08,185,0.536,186,0.536,187,0.705,188,1.08,189,0.705,190,0.705,191,0.705,192,0.536,193,0.536,194,0.838,195,1.08,196,0.999,197,1.472,198,0.822,199,1.675,200,1.472,201,1.08,202,1.08,203,1.313,204,0.536,205,0.536,206,1.313,207,1.313,208,0.705,209,1.987,210,0.705,211,0.705,212,1.313,213,0.705,214,1.941,215,1.313,216,0.705,217,0.705,218,1.08,219,0.705,220,0.705,221,0.705,222,0.705,223,0.705,224,0.705,225,1.313,226,0.705,227,1.881,228,1.08,229,0.705,230,1.08,231,0.705,232,0.999,233,0.705,234,1.08,235,1.08,236,0.705,237,0.705,238,1.08,239,0.705,240,0.705,241,1.313,242,1.08,243,0.705,244,0.705,245,0.705,246,0.705,247,0.705,248,0.705,249,0.705,250,0.705,251,0.705,252,0.705,253,0.705,254,1.08,255,0.705,256,0.705,257,0.705,258,0.705,259,1.08,260,1.08,261,0.705,262,0.705,263,1.08,264,0.705,265,0.536,266,0.705,267,0.705,268,0.705,269,0.705,270,0.705,271,0.705,272,0.705,273,0.536,274,0.705,275,0.705,276,0.705,277,0.705,278,0.705,375,0.053,376,0.053,377,0.705]],["title/interfaces/TissueInfo.html",[65,0.863,194,0.646]],["body/interfaces/TissueInfo.html",[0,0.621,1,0.543,3,0.714,4,1.324,9,0.714,10,0.543,11,0.543,12,0.543,13,0.714,14,2.027,15,1.091,16,1.46,17,0.714,18,0.714,19,1.324,20,0.714,21,0.714,22,0.714,23,1.091,25,0.714,26,0.714,27,0.714,28,1.127,29,1.751,30,0.714,31,1.091,32,0.714,33,1.091,34,1.091,35,1.091,36,1.091,37,1.091,38,0.714,39,0.714,40,0.714,41,0.714,42,0.844,43,0.621,44,1.091,45,1.324,55,0.714,57,0.714,59,1.324,60,1.888,61,1.091,62,0.714,63,1.091,64,0.714,65,1.28,67,0.714,69,0.714,70,1.481,71,0.112,72,1.542,74,2.067,77,1.214,79,0.714,80,1.091,82,0.714,83,0.714,84,0.714,85,0.714,87,2.067,88,1.091,89,0.714,90,0.714,92,0.714,93,0.714,94,1.091,95,1.091,97,0.714,98,1.92,99,0.714,100,0.714,101,2.055,102,0.714,104,0.714,105,1.324,106,1.85,107,0.714,108,1.091,110,1.091,111,1.481,113,1.553,116,1.127,118,1.596,120,1.751,123,0.714,124,1.091,125,1.324,126,0.714,128,1.324,129,0.714,131,1.683,132,1.596,133,0.714,134,1.324,135,1.683,139,1.324,140,1.324,141,0.714,143,0.714,145,0.714,146,0.714,147,0.83,148,0.714,149,1.127,150,0.714,152,0.714,153,0.714,154,0.714,155,0.714,157,0.714,158,0.714,159,0.714,160,0.714,161,0.714,163,1.091,164,1.091,166,1.324,168,1.091,169,0.714,170,0.714,171,0.714,172,1.091,173,1.091,177,0.714,178,0.714,179,0.714,180,0.714,181,1.683,182,0.714,183,1.091,184,1.091,185,0.543,186,0.543,187,0.714,188,1.091,189,0.714,190,0.714,191,0.714,192,0.543,193,0.543,194,0.754,195,0.714,196,0.83,197,1.482,198,0.543,199,1.324,200,1.091,201,0.714,202,1.091,203,1.324,204,0.543,205,0.543,206,1.324,207,1.324,208,0.714,209,1.992,210,0.714,211,0.714,212,1.324,213,0.714,214,1.947,215,1.324,216,0.714,217,0.714,218,1.091,219,0.714,220,0.714,221,0.714,222,0.714,223,0.714,224,0.714,225,1.324,226,0.714,227,1.888,228,1.091,229,0.714,230,1.091,231,0.714,232,1.007,233,0.714,234,1.091,235,1.091,236,0.714,237,0.714,238,1.091,239,0.714,240,0.714,241,1.324,242,1.091,243,0.714,244,0.714,245,0.714,246,0.714,247,0.714,248,0.714,249,0.714,250,0.714,251,0.714,252,0.714,253,0.714,254,1.091,255,0.714,256,0.714,257,0.714,258,0.714,259,1.091,260,1.091,261,0.714,262,0.714,263,1.091,264,0.714,265,0.543,266,0.714,267,0.714,268,0.714,269,0.714,270,0.714,271,0.714,272,0.714,273,0.543,274,0.714,275,0.714,276,0.714,277,0.714,278,0.714,375,0.053,376,0.053,377,0.714]],["title/dependencies.html",[378,1.268,379,1.792]],["body/dependencies.html",[28,1.3,71,0.107,185,1.3,186,1.3,375,0.096,376,0.096,379,2.594,380,3.088,381,3.088,382,3.088,383,3.55,384,3.088]],["title/index.html",[42,0.547,385,1.736,386,1.736]],["body/index.html",[2,2.594,71,0.096,265,1.494,375,0.096,376,0.096,387,3.55,388,3.088,389,3.088,390,3.55,391,3.088,392,3.55,393,3.088,394,3.088,395,3.088]],["title/modules.html",[396,2.009]],["body/modules.html",[71,0.097,375,0.097,376,0.097,396,2.317]],["title/overview.html",[397,2.009]],["body/overview.html",[0,0.992,71,0.097,232,1.325,273,1.325,375,0.097,376,0.097,377,1.742,397,2.3]],["title/properties.html",[43,0.773,378,1.268]],["body/properties.html",[43,0.994,71,0.102,375,0.097,376,0.097,398,3.154,399,3.154]],["title/miscellaneous/typealiases.html",[400,1.268,401,2.452]],["body/miscellaneous/typealiases.html",[10,1.267,11,1.267,12,1.556,16,1.267,42,0.948,70,1.472,71,0.103,72,1.267,77,1.472,111,1.267,113,1.556,116,1.267,147,1.267,149,1.472,192,1.267,193,1.267,196,1.267,204,1.267,205,1.267,375,0.095,376,0.095,400,2.199,402,3.009,403,3.497]]],"invertedIndex":[["",{"_index":71,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":267,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["0.0.1",{"_index":399,"title":{},"body":{"properties.html":{}}}],["0.063rem",{"_index":314,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.125rem",{"_index":360,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.16",{"_index":362,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.5rem",{"_index":357,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0rem",{"_index":322,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1",{"_index":232,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["1.5rem",{"_index":356,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["100",{"_index":253,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["15.1.0",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":241,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["17rem",{"_index":331,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1px",{"_index":295,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1rem",{"_index":355,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["2",{"_index":273,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["2.3.0",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["26rem",{"_index":330,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["2rem",{"_index":325,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["3",{"_index":240,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["3rem",{"_index":319,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["400",{"_index":310,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["5",{"_index":244,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["59264d",{"_index":305,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["5rem",{"_index":341,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["6.5rem",{"_index":338,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["7",{"_index":246,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["a[0].tolowercase",{"_index":226,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["accessors",{"_index":68,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["actual_component",{"_index":374,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["aliases",{"_index":402,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":306,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["along",{"_index":83,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["alphabetically",{"_index":169,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["angular/common",{"_index":186,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/core",{"_index":185,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/material/table",{"_index":187,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["arr",{"_index":250,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["auto",{"_index":345,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["b",{"_index":225,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["background",{"_index":297,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["based",{"_index":134,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["beween",{"_index":159,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarker",{"_index":29,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertablecomponent",{"_index":1,"title":{"components/BiomarkerTableComponent.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledatacardcomponent",{"_index":37,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledataiconcomponent",{"_index":35,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["block",{"_index":289,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["bold",{"_index":336,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["boolean",{"_index":154,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["border",{"_index":312,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["bottom",{"_index":313,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["box",{"_index":358,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["calculates",{"_index":115,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["card",{"_index":201,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["carrying",{"_index":104,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cell",{"_index":14,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cells",{"_index":19,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["change",{"_index":212,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetection",{"_index":25,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy",{"_index":182,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy.onpush",{"_index":26,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes",{"_index":215,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes['illustrationids'].currentvalue.tostring",{"_index":221,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes['illustrationids'].previousvalue",{"_index":220,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes['illustrationids'].previousvalue.tostring",{"_index":222,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["child",{"_index":321,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["circle",{"_index":100,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cl",{"_index":269,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["class",{"_index":208,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["color",{"_index":116,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["colors",{"_index":82,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["column",{"_index":281,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["columnname",{"_index":282,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["columns",{"_index":59,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["columnswithtypeandcount",{"_index":69,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["commonmodule",{"_index":33,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["component",{"_index":0,"title":{"components/BiomarkerTableComponent.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["component_template",{"_index":372,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"index.html":{}}}],["composition",{"_index":205,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["consisting",{"_index":216,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["const",{"_index":227,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["content",{"_index":366,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["contrast",{"_index":364,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["converts",{"_index":145,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["count",{"_index":210,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["d3d3d3",{"_index":316,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["data",{"_index":60,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["data.slice(2).find((entry",{"_index":236,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datacell",{"_index":198,"title":{"interfaces/DataCell.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dataitem",{"_index":188,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datarow",{"_index":77,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["dataset_count",{"_index":203,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasets",{"_index":202,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasource",{"_index":45,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["deep",{"_index":347,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["default",{"_index":73,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["definations",{"_index":180,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["defined",{"_index":75,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["dependencies",{"_index":379,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describes",{"_index":204,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["describing",{"_index":17,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["details",{"_index":105,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["directive",{"_index":370,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["directives",{"_index":373,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["display",{"_index":288,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["displayed",{"_index":102,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element",{"_index":369,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element[0",{"_index":279,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element[1",{"_index":280,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ellipsis",{"_index":344,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["emits",{"_index":110,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["entry",{"_index":235,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["entry?.data.cell",{"_index":237,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["eventemitter",{"_index":108,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["execute",{"_index":395,"title":{},"body":{"index.html":{}}}],["export",{"_index":197,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["expression",{"_index":276,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["f8f9fa",{"_index":298,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["fff7f8",{"_index":304,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["fit",{"_index":365,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["flex",{"_index":354,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["font",{"_index":308,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["function",{"_index":157,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["functional",{"_index":264,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["g",{"_index":242,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gene",{"_index":271,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["generated",{"_index":389,"title":{},"body":{"index.html":{}}}],["getcolor",{"_index":47,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getcolor(value",{"_index":112,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getcolumnswithtypeandcount",{"_index":175,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverdata",{"_index":48,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverdata([index",{"_index":262,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gethoverdata(undefined",{"_index":121,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverid",{"_index":49,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverid(data",{"_index":126,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getminmaxcolor",{"_index":50,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxcolor(meanexpression",{"_index":129,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getminmaxsize",{"_index":51,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxsize(percentage",{"_index":137,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gets",{"_index":128,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getsize",{"_index":52,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getsize(value",{"_index":141,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getter",{"_index":177,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getting",{"_index":385,"title":{"index.html":{}},"body":{}}],["give",{"_index":158,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["given",{"_index":160,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["grade",{"_index":133,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradient",{"_index":61,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradientpoint",{"_index":80,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["header",{"_index":340,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["height",{"_index":318,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hex",{"_index":148,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hex2rgb",{"_index":53,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hex2rgb(hex",{"_index":143,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hexcode",{"_index":146,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hgnc",{"_index":274,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hidden",{"_index":343,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["highlight",{"_index":296,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["highlighted",{"_index":153,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["highlightedcellid",{"_index":62,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["highlighting",{"_index":90,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["host",{"_index":287,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hover",{"_index":125,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hover.full",{"_index":353,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hoverdirective",{"_index":36,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hovered",{"_index":88,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hoverid",{"_index":164,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hra",{"_index":28,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["html",{"_index":368,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["icon",{"_index":200,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id",{"_index":87,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id1",{"_index":228,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id2",{"_index":230,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ids",{"_index":93,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustration",{"_index":94,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustrationids",{"_index":63,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustrationlabels",{"_index":213,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["implements",{"_index":22,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["import",{"_index":181,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["important",{"_index":351,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["include",{"_index":291,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["index",{"_index":42,"title":{"index.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["input",{"_index":98,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["inputs",{"_index":58,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["interface",{"_index":194,"title":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["interfaces",{"_index":377,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["ishighlighted",{"_index":54,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ishighlighted(row",{"_index":150,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["item.percentage",{"_index":251,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["join",{"_index":258,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["label",{"_index":101,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["left",{"_index":294,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["legend",{"_index":367,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["lerp",{"_index":55,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["lerp(value",{"_index":155,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["library",{"_index":388,"title":{},"body":{"index.html":{}}}],["list",{"_index":92,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["literal",{"_index":136,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{}}}],["lowercase",{"_index":302,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["map((component",{"_index":256,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["margin",{"_index":293,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["mat",{"_index":348,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["matches",{"_index":152,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["matching",{"_index":376,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.round(component).tostring(16",{"_index":257,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mattabledatasource",{"_index":173,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mattablemodule",{"_index":34,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["max",{"_index":132,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor",{"_index":248,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor[index",{"_index":255,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxsize",{"_index":260,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mdc",{"_index":349,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["mean",{"_index":275,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression",{"_index":135,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression.tofixed(6",{"_index":277,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["method",{"_index":178,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["methods",{"_index":46,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["min",{"_index":131,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mincolor",{"_index":247,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["minsize",{"_index":259,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["miscellaneous",{"_index":400,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["modules",{"_index":396,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":118,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["new",{"_index":172,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ng",{"_index":346,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ngonchanges(changes",{"_index":217,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["nowrap",{"_index":334,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["number",{"_index":113,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nx",{"_index":390,"title":{},"body":{"index.html":{}}}],["object",{"_index":124,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["onchanges",{"_index":23,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["opacity",{"_index":337,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["open",{"_index":107,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["optional",{"_index":119,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["organ",{"_index":21,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["organisms",{"_index":387,"title":{},"body":{"index.html":{}}}],["output",{"_index":183,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["outputs",{"_index":66,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["overflow",{"_index":342,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["overview",{"_index":397,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":378,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":324,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["param",{"_index":214,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parameters",{"_index":117,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["parsefloat(item.label",{"_index":252,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(1",{"_index":239,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(3",{"_index":243,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(5",{"_index":245,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["peer",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":140,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["points",{"_index":85,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["processes",{"_index":123,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["properties",{"_index":43,"title":{"properties.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"properties.html":{}}}],["provide",{"_index":179,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["pseudo",{"_index":335,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["puts",{"_index":170,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["quanitites",{"_index":18,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["r",{"_index":238,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["radius",{"_index":99,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["readonly",{"_index":44,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["representing",{"_index":195,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["represents",{"_index":199,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["results",{"_index":375,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":209,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["returns",{"_index":120,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rgb",{"_index":147,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgba(0",{"_index":361,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["rgbtriblet",{"_index":192,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgbtriplet",{"_index":149,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["right",{"_index":307,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["row",{"_index":111,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["row:hover",{"_index":352,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["row[0",{"_index":268,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[1",{"_index":270,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[index",{"_index":263,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rowhover",{"_index":67,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rows",{"_index":79,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["run",{"_index":393,"title":{},"body":{"index.html":{}}}],["running",{"_index":391,"title":{},"body":{"index.html":{}}}],["selector",{"_index":27,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sethoverid",{"_index":56,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["sethoverid(hoverid",{"_index":161,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sets",{"_index":163,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["shadow",{"_index":359,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["simplechanges",{"_index":184,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["single",{"_index":196,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":139,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizelegend",{"_index":95,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizes",{"_index":64,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["solid",{"_index":315,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["sorts",{"_index":168,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sorttable",{"_index":57,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["space",{"_index":333,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["specific",{"_index":20,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sr",{"_index":290,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["src/.../biomarker",{"_index":403,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/biomarker",{"_index":10,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["started",{"_index":386,"title":{"index.html":{}},"body":{}}],["stop",{"_index":84,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["store",{"_index":193,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":72,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["styleurls",{"_index":38,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["t",{"_index":207,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tab",{"_index":350,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table",{"_index":16,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.html",{"_index":41,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.scss",{"_index":39,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.ts",{"_index":12,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.ts:102",{"_index":176,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:107",{"_index":174,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:133",{"_index":167,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:149",{"_index":151,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:158",{"_index":127,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:170",{"_index":156,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:179",{"_index":144,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:191",{"_index":130,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:207",{"_index":138,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:221",{"_index":114,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:237",{"_index":142,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:248",{"_index":122,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:283",{"_index":162,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:75",{"_index":103,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:81",{"_index":76,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:84",{"_index":78,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:87",{"_index":81,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:90",{"_index":96,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:93",{"_index":86,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:96",{"_index":91,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:99",{"_index":109,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table/biomarker",{"_index":11,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["taking",{"_index":97,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["td",{"_index":311,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td.type",{"_index":299,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td:first",{"_index":323,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td:last",{"_index":327,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["templateurl",{"_index":40,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["test",{"_index":394,"title":{},"body":{"index.html":{}}}],["tests",{"_index":392,"title":{},"body":{"index.html":{}}}],["text",{"_index":300,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th",{"_index":303,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:first",{"_index":326,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:last",{"_index":328,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:not(:first",{"_index":339,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["this.columns",{"_index":211,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.columns[index",{"_index":272,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.data",{"_index":219,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.data.sort((a",{"_index":224,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.datasource.data",{"_index":218,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.gethoverid(row",{"_index":233,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.getminmaxsize(value",{"_index":261,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.gradient.findindex((item",{"_index":249,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.highlightedcellid",{"_index":234,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.illustrationids.includes(this.gethoverid(a",{"_index":229,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.illustrationids.includes(this.gethoverid(b",{"_index":231,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.lerp(value",{"_index":254,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.rowhover.emit(hoverid",{"_index":278,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.sorttable",{"_index":223,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissue",{"_index":106,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissueinfo",{"_index":65,"title":{"interfaces/TissueInfo.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["top",{"_index":171,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tr",{"_index":317,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tr:first",{"_index":320,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["transform",{"_index":301,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tslib",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":70,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":401,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":15,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["uberon",{"_index":266,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/cdk",{"_index":190,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/atoms",{"_index":191,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/molecules",{"_index":189,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/theming",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":206,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["unit",{"_index":265,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"index.html":{}}}],["use",{"_index":283,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["used",{"_index":89,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["utils",{"_index":284,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["utils.sr",{"_index":292,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["value",{"_index":74,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["var",{"_index":371,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["variables",{"_index":285,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["vars",{"_index":286,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["vars.$primary",{"_index":363,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["version",{"_index":398,"title":{},"body":{"properties.html":{}}}],["void",{"_index":166,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["weight",{"_index":309,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["white",{"_index":332,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["width",{"_index":329,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["yes",{"_index":165,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/BiomarkerTableComponent.html":{"url":"components/BiomarkerTableComponent.html","title":"component - BiomarkerTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BiomarkerTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/biomarker-table/biomarker-table.component.ts\n\n\n\n    \n        Description\n    \n    \n        Cell types table, describing the types and quanitites of cells for a specific organ\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hra-biomarker-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatTableModule\n                            BiomarkerTableDataIconComponent\n                            HoverDirective\n                            BiomarkerTableDataCardComponent\n                \n            \n\n            \n                styleUrls\n                ./biomarker-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./biomarker-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                dataSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColor\n                            \n                            \n                                getHoverData\n                            \n                            \n                                getHoverId\n                            \n                            \n                                getMinMaxColor\n                            \n                            \n                                getMinMaxSize\n                            \n                            \n                                getSize\n                            \n                            \n                                hex2rgb\n                            \n                            \n                                isHighlighted\n                            \n                            \n                                lerp\n                            \n                            \n                                setHoverId\n                            \n                            \n                                sortTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                data\n                            \n                            \n                                gradient\n                            \n                            \n                                highlightedCellId\n                            \n                            \n                                illustrationIds\n                            \n                            \n                                sizes\n                            \n                            \n                                tissueInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rowHover\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    columnsWithTypeAndCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:81\n                            \n                        \n                \n                    \n                        Columns for the table\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         DataRow[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:84\n                            \n                        \n                \n                    \n                        Rows of the table\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        gradient\n                    \n                \n                \n                    \n                        Type :     GradientPoint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:87\n                            \n                        \n                \n                    \n                        Gradient colors along with their stop points\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedCellId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:93\n                            \n                        \n                \n                    \n                        Cell id which is hovered, used for highlighting\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        illustrationIds\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:96\n                            \n                        \n                \n                    \n                        List of cell ids in the illustration\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sizes\n                    \n                \n                \n                    \n                        Type :     SizeLegend[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:90\n                            \n                        \n                \n                    \n                        Taking input for the radius of the circle and the label to be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tissueInfo\n                    \n                \n                \n                    \n                        Type :         TissueInfo\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    label: '',\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:75\n                            \n                        \n                \n                    \n                        Input: TissueInfo carrying the details of the tissue open\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rowHover\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:99\n                            \n                        \n                \n                    \n                        Emits cell type label when row is hovered\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/biomarker-table/biomarker-table.component.ts:221\n                        \n                    \n\n\n            \n                \n                        Calculates the color of this value on this gradient\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHoverData\n                        \n                    \n                \n            \n            \n                \ngetHoverData(undefined: [number, DataRow])\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/biomarker-table/biomarker-table.component.ts:248\n                        \n                    \n\n\n            \n                \n                        Processes the object for hover data for Table Cell\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            [number, DataRow]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHoverId\n                        \n                    \n                \n            \n            \n                \ngetHoverId(data: DataRow)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/biomarker-table/biomarker-table.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Gets hover id from row\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            DataRow\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    row data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                cell type id\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinMaxColor\n                        \n                    \n                \n            \n            \n                \ngetMinMaxColor(meanExpression: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/biomarker-table/biomarker-table.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Gets Min and Max color grade based on the meanExpression value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meanExpression\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinMaxSize\n                        \n                    \n                \n            \n            \n                \ngetMinMaxSize(percentage: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/biomarker-table/biomarker-table.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Gets Min and Max size grade based on the Percentage value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                percentage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSize\n                        \n                    \n                \n            \n            \n                \ngetSize(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/biomarker-table/biomarker-table.component.ts:237\n                        \n                    \n\n\n            \n                \n                        gets Size of the Cell based on the percentage value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hex2rgb\n                        \n                    \n                \n            \n            \n                \nhex2rgb(hex: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/biomarker-table/biomarker-table.component.ts:179\n                        \n                    \n\n\n            \n                \n                        Converts HexCode to RGB\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hex\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         RGBTriplet\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHighlighted\n                        \n                    \n                \n            \n            \n                \nisHighlighted(row: DataRow)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/biomarker-table/biomarker-table.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Returns true if id matches the cell id of the row\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            DataRow\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Highlighted row\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lerp\n                        \n                    \n                \n            \n            \n                \nlerp(value: number, min: number, max: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/biomarker-table/biomarker-table.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Lerp function to give value beween min and max value based on the given value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHoverId\n                        \n                    \n                \n            \n            \n                \nsetHoverId(hoverId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/biomarker-table/biomarker-table.component.ts:283\n                        \n                    \n\n\n            \n                \n                        Sets and emits cell type id on row hover\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hoverId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    cell type id\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortTable\n                        \n                    \n                \n            \n            \n                \nsortTable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/biomarker-table/biomarker-table.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource>([])\n                    \n                \n                    \n                        \n                                Defined in src/lib/biomarker-table/biomarker-table.component.ts:107\n                        \n                    \n\n            \n                \n                    Source for the table\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        columnsWithTypeAndCount\n                    \n                \n\n                \n                    \n                        getcolumnsWithTypeAndCount()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:102\n                                \n                            \n                    \n                        \n                                Getter method to provide the definations of the columns\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Cell id which is hovered, used for highlighting */\n  @Input() highlightedCellId = '';\n\n  /** List of cell ids in the illustration */\n  @Input() illustrationIds: string[] = [];\n\n  /** Emits cell type label when row is hovered */\n  @Output() readonly rowHover = new EventEmitter();\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * Sets the data source for the table on every change\n   * Sorts the biomarker table on illustrationLabels change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n\n    if ('illustrationIds' in changes) {\n      if (!changes['illustrationIds'].previousValue) {\n        return;\n      }\n      if (changes['illustrationIds'].currentValue.toString() === changes['illustrationIds'].previousValue.toString()) {\n        return;\n      }\n      this.sortTable();\n    }\n  }\n\n  /**\n   * Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n   */\n  sortTable(): void {\n    this.dataSource.data = this.data.sort((a, b) => {\n      return a[0].toLowerCase()  {\n      const id1 = this.illustrationIds.includes(this.getHoverId(a));\n      const id2 = this.illustrationIds.includes(this.getHoverId(b));\n      return id1 && !id2 ? -1 : 1;\n    });\n  }\n\n  /**\n   * Returns true if id matches the cell id of the row\n   * @param row Highlighted row\n   */\n  isHighlighted(row: DataRow): boolean {\n    return this.getHoverId(row) === this.highlightedCellId;\n  }\n\n  /**\n   * Gets hover id from row\n   * @param data row data\n   * @returns cell type id\n   */\n  getHoverId(data: DataRow): string {\n    const entry = data.slice(2).find((entry) => entry) as T;\n    return entry?.data.cell;\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * Processes the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n\n  /**\n   * Sets and emits cell type id on row hover\n   * @param hoverId cell type id\n   */\n  setHoverId(hoverId?: string): void {\n    this.highlightedCellId = hoverId ?? '';\n    this.rowHover.emit(hoverId);\n  }\n}\n\n    \n\n    \n        \n  \n    Cell type table by Biomarker\n  \n\n  \n    Cell Type\n\n    \n      {{ element[0] }}\n      {{ element[0] }}\n    \n  \n\n  \n    Cell Count\n\n    \n      {{ element[1] !== undefined ? (element[1] | number) : 'no data' }}\n    \n  \n\n  \n    \n      {{ column }}\n    \n\n    \n      \n      \n\n      \n        \n      \n    \n  \n\n  \n  \n\n\n\n  \n    {{ columnName }}\n  \n\n\n\n   \n\n\n    \n\n    \n                \n                    ./biomarker-table.component.scss\n                \n                @use 'utils';\n@use 'variables' as vars;\n\n:host {\n  display: block;\n\n  .sr-only {\n    @include utils.sr-only();\n  }\n\n  .table {\n    margin-left: -1px;\n\n    .highlight {\n      background-color: #f8f9fa;\n    }\n    td.type {\n      text-transform: lowercase;\n    }\n  }\n\n  .table th {\n    background-color: #fff7f8;\n    color: #59264d;\n    text-align: right;\n    font-weight: 400;\n  }\n\n  .table td {\n    border-bottom: 0.063rem solid #d3d3d3;\n    border-left: 0.063rem solid #d3d3d3;\n  }\n\n  .table tr {\n    height: 3rem;\n  }\n\n  .table tr:first-child td {\n    border-top: 0rem solid #d3d3d3;\n  }\n\n  tr > td:first-child {\n    text-align: left;\n    padding: 0 2rem;\n  }\n\n  tr > th:first-child {\n    text-align: left;\n    padding: 0 2rem;\n  }\n\n  tr > td:last-of-type {\n    border-right: 0.063rem solid #d3d3d3;\n  }\n\n  tr > th:last-of-type {\n    border-right: 0.063rem solid #d3d3d3;\n    border-left: solid #d3d3d3 1px;\n  }\n\n  .type {\n    height: 3rem;\n    max-width: 26rem;\n    min-width: 17rem;\n    border-radius: 0rem;\n    white-space: nowrap;\n\n    .pseudo-type {\n      font-weight: bold;\n      opacity: 0;\n      height: 0;\n    }\n\n    &.highlight {\n      font-weight: bold;\n    }\n  }\n\n  .count {\n    text-align: right;\n    height: 3rem;\n    min-width: 6.5rem;\n  }\n\n  th:not(:first-child) {\n    border-left: solid #d3d3d3 1px;\n  }\n\n  .icon-header {\n    max-width: 5rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .icon-cell {\n    max-width: 5rem;\n    min-height: 3rem;\n\n    .icon {\n      margin: auto;\n    }\n  }\n}\n\n::ng-deep .mat-mdc-tab-header {\n  margin-left: -1px !important;\n}\n\n.mat-mdc-row:hover .mat-mdc-cell {\n  background-color: #f8f9fa;\n}\n\n::ng-deep .biomarker-table-hover.full-column-name {\n  display: flex;\n  padding: 1rem 1.5rem;\n  border-radius: 0.5rem;\n  box-shadow: 0.063rem 0.125rem 1rem 0.125rem rgba(0, 0, 0, 0.16);\n  background-color: vars.$primary-contrast-rgb;\n  overflow: auto;\n  max-width: fit-content;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Cell type table by Biomarker        Cell Type          {{ element[0] }}      {{ element[0] }}            Cell Count          {{ element[1] !== undefined ? (element[1] | number) : \\'no data\\' }}                  {{ column }}                                                        {{ columnName }}     '\n    var COMPONENTS = [{'name': 'BiomarkerTableComponent', 'selector': 'hra-biomarker-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BiomarkerTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataCell.html":{"url":"interfaces/DataCell.html","title":"interface - DataCell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataCell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a single cell of the table.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the color of the icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the data for the data card\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the size of the icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Cell id which is hovered, used for highlighting */\n  @Input() highlightedCellId = '';\n\n  /** List of cell ids in the illustration */\n  @Input() illustrationIds: string[] = [];\n\n  /** Emits cell type label when row is hovered */\n  @Output() readonly rowHover = new EventEmitter();\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * Sets the data source for the table on every change\n   * Sorts the biomarker table on illustrationLabels change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n\n    if ('illustrationIds' in changes) {\n      if (!changes['illustrationIds'].previousValue) {\n        return;\n      }\n      if (changes['illustrationIds'].currentValue.toString() === changes['illustrationIds'].previousValue.toString()) {\n        return;\n      }\n      this.sortTable();\n    }\n  }\n\n  /**\n   * Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n   */\n  sortTable(): void {\n    this.dataSource.data = this.data.sort((a, b) => {\n      return a[0].toLowerCase()  {\n      const id1 = this.illustrationIds.includes(this.getHoverId(a));\n      const id2 = this.illustrationIds.includes(this.getHoverId(b));\n      return id1 && !id2 ? -1 : 1;\n    });\n  }\n\n  /**\n   * Returns true if id matches the cell id of the row\n   * @param row Highlighted row\n   */\n  isHighlighted(row: DataRow): boolean {\n    return this.getHoverId(row) === this.highlightedCellId;\n  }\n\n  /**\n   * Gets hover id from row\n   * @param data row data\n   * @returns cell type id\n   */\n  getHoverId(data: DataRow): string {\n    const entry = data.slice(2).find((entry) => entry) as T;\n    return entry?.data.cell;\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * Processes the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n\n  /**\n   * Sets and emits cell type id on row hover\n   * @param hoverId cell type id\n   */\n  setHoverId(hoverId?: string): void {\n    this.highlightedCellId = hoverId ?? '';\n    this.rowHover.emit(hoverId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueInfo.html":{"url":"interfaces/TissueInfo.html","title":"interface - TissueInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TissueInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Details of the Tissue\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID of the Tissue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the Tissue\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Cell id which is hovered, used for highlighting */\n  @Input() highlightedCellId = '';\n\n  /** List of cell ids in the illustration */\n  @Input() illustrationIds: string[] = [];\n\n  /** Emits cell type label when row is hovered */\n  @Output() readonly rowHover = new EventEmitter();\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * Sets the data source for the table on every change\n   * Sorts the biomarker table on illustrationLabels change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n\n    if ('illustrationIds' in changes) {\n      if (!changes['illustrationIds'].previousValue) {\n        return;\n      }\n      if (changes['illustrationIds'].currentValue.toString() === changes['illustrationIds'].previousValue.toString()) {\n        return;\n      }\n      this.sortTable();\n    }\n  }\n\n  /**\n   * Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n   */\n  sortTable(): void {\n    this.dataSource.data = this.data.sort((a, b) => {\n      return a[0].toLowerCase()  {\n      const id1 = this.illustrationIds.includes(this.getHoverId(a));\n      const id2 = this.illustrationIds.includes(this.getHoverId(b));\n      return id1 && !id2 ? -1 : 1;\n    });\n  }\n\n  /**\n   * Returns true if id matches the cell id of the row\n   * @param row Highlighted row\n   */\n  isHighlighted(row: DataRow): boolean {\n    return this.getHoverId(row) === this.highlightedCellId;\n  }\n\n  /**\n   * Gets hover id from row\n   * @param data row data\n   * @returns cell type id\n   */\n  getHoverId(data: DataRow): string {\n    const entry = data.slice(2).find((entry) => entry) as T;\n    return entry?.data.cell;\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * Processes the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n\n  /**\n   * Sets and emits cell type id on row hover\n   * @param hoverId cell type id\n   */\n  setHoverId(hoverId?: string): void {\n    this.highlightedCellId = hoverId ?? '';\n    this.rowHover.emit(hoverId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @hra-ui/theming : *\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncomponents-organisms\nThis library was generated with Nx.\nRunning unit tests\nRun nx test components-organisms to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataRow   (src/.../biomarker-table.component.ts)\n                        \n                        \n                            RGBTriplet   (src/.../biomarker-table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/biomarker-table/biomarker-table.component.ts\n    \n    \n        \n            \n                \n                    \n                    DataRow\n                \n            \n            \n                \n                    Describes the composition of a single row in the table\n\n                \n            \n            \n                \n                        [string, , ...[]]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RGBTriplet\n                \n            \n            \n                \n                    RGBTriblet of type RGB to store color\n\n                \n            \n            \n                \n                        [number, number, number]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
