var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/BiomarkerTableComponent.html",[0,0.646,1,0.863]],["body/components/BiomarkerTableComponent.html",[0,0.553,1,0.864,2,0.995,3,0.45,4,1.136,5,0.814,6,0.814,7,0.814,8,0.814,9,0.45,10,1.377,11,1.377,12,0.342,13,0.45,14,1.879,15,1.136,16,1.489,17,0.754,18,0.754,19,0.972,20,0.754,21,0.754,22,0.754,23,0.972,24,0.814,25,0.754,26,0.754,27,0.972,28,1.041,29,1.783,30,0.754,31,0.972,32,0.754,33,0.754,34,0.647,35,0.429,36,0.972,37,1.265,38,1.362,39,1.362,40,1.362,41,1.362,42,1.362,43,1.362,44,1.362,45,1.136,46,1.362,47,1.453,48,1.753,49,1.368,50,0.972,51,1.204,52,1.362,53,0.972,54,1.516,55,0.111,56,1.357,57,2.472,58,2.066,59,3.223,60,0.814,61,1.041,62,0.814,63,0.754,64,0.972,65,0.814,66,0.754,67,0.754,68,0.754,69,0.754,70,0.972,71,0.814,72,0.754,73,1.679,74,1.136,75,0.754,76,1.836,77,0.754,78,1.583,79,1.265,80,1.368,81,0.814,82,0.754,83,0.972,84,1.453,85,0.754,86,0.814,87,1.58,88,0.814,89,0.814,90,1.204,91,2.625,92,1.783,93,2.625,94,1.753,95,0.814,96,0.814,97,0.754,98,0.972,99,0.754,100,0.754,101,0.814,102,1.265,103,1.783,104,1.836,105,0.972,106,1.453,107,1.523,108,0.995,109,0.814,110,0.814,111,1.265,112,1.368,113,0.754,114,0.814,115,0.754,116,0.814,117,0.754,118,0.754,119,0.864,120,0.754,121,0.962,122,0.754,123,0.814,124,0.754,125,0.754,126,0.754,127,0.754,128,0.754,129,0.972,130,0.814,131,0.814,132,0.814,133,0.754,134,0.754,135,0.754,136,0.754,137,1.368,138,0.45,139,0.754,140,0.342,141,0.754,142,0.342,143,0.754,144,0.45,145,0.754,146,0.754,147,0.754,148,0.45,149,0.754,150,0.45,151,0.45,152,0.342,153,0.342,154,0.553,155,0.45,156,0.573,157,1.136,158,0.342,159,0.972,160,1.265,161,0.45,162,0.754,163,0.342,164,0.342,165,0.962,166,1.265,167,0.754,168,0.45,169,0.45,170,0.45,171,0.45,172,1.523,173,1.136,174,0.45,175,0.45,176,0.754,177,1.583,178,0.754,179,0.45,180,0.45,181,0.45,182,0.45,183,0.45,184,0.342,185,1.453,186,0.754,187,0.45,188,0.45,189,0.972,190,0.754,191,0.45,192,0.45,193,0.754,194,0.45,195,0.45,196,0.45,197,0.45,198,0.45,199,0.45,200,0.45,201,0.45,202,0.45,203,0.754,204,0.45,205,0.45,206,0.45,207,0.45,208,0.754,209,0.754,210,0.45,211,0.45,212,0.754,213,0.45,214,0.342,215,0.45,216,0.45,217,0.45,218,0.45,219,0.45,220,0.45,221,0.342,222,0.45,223,0.45,224,0.45,225,0.45,226,1.362,227,2.053,228,1.756,229,1.362,230,1.362,231,0.814,232,0.814,233,0.814,234,0.814,235,1.362,236,0.814,237,2.053,238,0.814,239,2.625,240,0.814,241,0.814,242,0.814,243,0.814,244,1.756,245,2.286,246,1.362,247,0.814,248,2.053,249,0.814,250,0.814,251,1.362,252,0.814,253,0.814,254,2.286,255,2.053,256,2.053,257,1.362,258,2.625,259,0.814,260,2.286,261,2.286,262,2.286,263,0.814,264,1.756,265,0.814,266,1.362,267,2.053,268,0.814,269,1.362,270,0.814,271,0.814,272,0.814,273,1.756,274,0.814,275,0.814,276,1.362,277,1.362,278,1.362,279,0.814,280,1.362,281,1.362,282,1.756,283,0.814,284,0.814,285,1.362,286,1.362,287,1.362,288,0.814,289,0.814,290,0.814,291,0.814,292,0.814,293,0.814,294,1.362,295,0.814,296,0.814,297,0.814,298,0.814,299,1.362,300,0.814,301,0.814,302,0.814,303,0.814,304,0.814,305,0.814,306,0.814,307,1.362,308,1.362,309,0.814,310,2.053,311,0.814,312,0.814,313,0.814,314,0.037,315,0.037]],["title/interfaces/DataCell.html",[154,0.646,158,0.863]],["body/interfaces/DataCell.html",[0,0.614,1,0.535,3,0.704,4,1.312,9,0.704,10,0.535,11,0.535,12,0.535,13,0.704,14,1.842,15,1.079,16,1.43,17,0.704,18,0.704,19,1.079,20,0.704,21,0.704,22,0.704,23,1.079,25,0.704,26,0.704,27,0.704,28,1.118,29,1.673,30,0.704,31,0.704,32,0.704,33,0.704,34,0.837,35,0.614,36,0.704,37,1.312,45,0.704,47,1.312,48,1.965,49,1.079,50,0.704,51,1.206,53,0.704,54,1.43,55,0.112,56,1.455,58,2.062,61,0.998,63,0.704,64,1.079,66,0.704,67,0.704,68,0.704,69,0.704,70,1.079,72,0.704,73,1.842,74,0.704,75,0.704,76,1.986,77,0.704,78,1.797,79,1.47,80,0.704,82,0.704,83,1.079,84,1.673,85,0.704,87,1.568,90,1.367,92,1.47,94,1.586,97,0.704,98,1.079,99,0.704,100,0.704,102,1.079,103,1.673,104,1.586,105,0.704,106,1.312,107,1.673,108,1.424,111,1.742,112,1.312,113,0.704,115,0.704,117,0.704,118,0.704,119,0.82,120,0.704,121,1.118,122,0.704,124,0.704,125,0.704,126,0.704,127,0.704,128,0.704,129,1.079,133,0.704,134,0.704,135,0.704,136,0.704,137,1.673,138,0.704,139,1.079,140,0.535,141,1.079,142,0.535,143,1.079,144,0.704,145,1.079,146,1.079,147,1.079,148,0.704,149,1.079,150,0.704,151,0.704,152,0.535,153,0.535,154,0.837,155,1.079,156,0.998,157,1.47,158,0.82,159,1.673,160,1.47,161,1.079,162,1.079,163,0.535,164,0.535,165,1.206,166,1.312,167,1.079,168,0.704,169,0.704,170,0.704,171,0.704,172,1.797,173,0.704,174,0.704,175,0.704,176,1.079,177,1.842,178,1.079,179,0.704,180,0.704,181,0.704,182,0.704,183,0.704,184,0.535,185,1.742,186,1.079,187,0.704,188,0.704,189,1.312,190,1.079,191,0.704,192,0.704,193,1.079,194,0.704,195,0.704,196,0.704,197,0.704,198,0.704,199,0.704,200,0.704,201,0.704,202,0.704,203,1.079,204,0.704,205,0.704,206,0.704,207,0.704,208,1.079,209,1.079,210,0.704,211,0.704,212,1.079,213,0.704,214,0.535,215,0.704,216,0.704,217,0.704,218,0.704,219,0.704,220,0.704,221,0.535,222,0.704,223,0.704,224,0.704,225,0.704,314,0.053,315,0.053,316,0.704]],["title/interfaces/TissueInfo.html",[51,0.863,154,0.646]],["body/interfaces/TissueInfo.html",[0,0.618,1,0.539,3,0.709,4,1.318,9,0.709,10,0.539,11,0.539,12,0.539,13,0.709,14,1.801,15,1.085,16,1.404,17,0.709,18,0.709,19,1.085,20,0.709,21,0.709,22,0.709,23,1.085,25,0.709,26,0.709,27,0.709,28,1.123,29,1.678,30,0.709,31,0.709,32,0.709,33,0.709,34,0.841,35,0.618,36,0.709,37,1.318,45,0.709,47,1.318,48,1.801,49,1.085,50,0.709,51,1.276,53,0.709,54,1.37,55,0.112,56,1.497,58,2.064,61,1.002,63,0.709,64,1.085,66,0.709,67,0.709,68,0.709,69,0.709,70,1.085,72,0.709,73,1.846,74,0.709,75,0.709,76,2.039,77,0.709,78,1.944,79,1.746,80,0.709,82,0.709,83,1.318,84,1.884,85,0.709,87,1.578,90,1.123,92,1.591,94,1.591,97,0.709,98,1.085,99,0.709,100,0.709,102,1.085,103,1.678,104,1.591,105,0.709,106,1.318,107,1.678,111,1.318,112,1.318,113,0.709,115,0.709,117,0.709,118,0.709,119,0.825,120,0.709,121,1.123,122,0.709,124,0.709,125,0.709,126,0.709,127,0.709,128,0.709,129,1.085,133,0.709,134,0.709,135,0.709,136,0.709,137,1.678,138,0.709,139,1.085,140,0.539,141,1.085,142,0.539,143,1.085,144,0.709,145,1.085,146,1.085,147,1.085,148,0.709,149,1.085,150,0.709,151,0.709,152,0.539,153,0.539,154,0.75,155,0.709,156,0.825,157,1.476,158,0.539,159,1.318,160,1.085,161,0.709,162,1.318,163,0.539,164,0.539,165,1.21,166,1.318,167,1.085,168,0.709,169,0.709,170,0.709,171,0.709,172,1.801,173,0.709,174,0.709,175,0.709,176,1.085,177,1.846,178,1.085,179,0.709,180,0.709,181,0.709,182,0.709,183,0.709,184,0.539,185,1.746,186,1.085,187,0.709,188,0.709,189,1.318,190,1.085,191,0.709,192,0.709,193,1.085,194,0.709,195,0.709,196,0.709,197,0.709,198,0.709,199,0.709,200,0.709,201,0.709,202,0.709,203,1.085,204,0.709,205,0.709,206,0.709,207,0.709,208,1.085,209,1.085,210,0.709,211,0.709,212,1.085,213,0.709,214,0.539,215,0.709,216,0.709,217,0.709,218,0.709,219,0.709,220,0.709,221,0.539,222,0.709,223,0.709,224,0.709,225,0.709,314,0.053,315,0.053,316,0.709]],["title/dependencies.html",[317,1.268,318,1.792]],["body/dependencies.html",[28,1.286,55,0.107,140,1.286,142,1.286,314,0.095,315,0.095,318,2.578,319,3.055,320,3.055,321,3.055,322,3.528,323,3.055]],["title/index.html",[34,0.547,324,1.736,325,1.736]],["body/index.html",[2,2.578,55,0.095,214,1.485,314,0.095,315,0.095,326,3.528,327,3.055,328,3.055,329,3.528,330,3.055,331,3.528,332,3.055,333,3.055,334,3.055]],["title/modules.html",[335,2.009]],["body/modules.html",[55,0.097,314,0.097,315,0.097,335,2.309]],["title/overview.html",[336,2.009]],["body/overview.html",[0,0.987,55,0.097,184,1.318,221,1.318,314,0.097,315,0.097,316,1.732,336,2.288]],["title/properties.html",[35,0.773,317,1.268]],["body/properties.html",[35,0.989,55,0.102,314,0.097,315,0.097,337,3.138,338,3.138]],["title/miscellaneous/typealiases.html",[339,1.268,340,2.452]],["body/miscellaneous/typealiases.html",[10,1.245,11,1.245,12,1.545,16,1.245,34,0.932,54,1.457,55,0.102,56,1.245,61,1.457,87,1.545,90,1.245,119,1.245,121,1.457,152,1.245,153,1.245,156,1.245,163,1.245,164,1.245,165,1.245,314,0.094,315,0.094,339,2.161,341,2.957,342,3.461]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":80,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["0.0.1",{"_index":338,"title":{},"body":{"properties.html":{}}}],["0.063rem",{"_index":260,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.125rem",{"_index":299,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.16",{"_index":301,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.5rem",{"_index":296,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0rem",{"_index":266,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1",{"_index":184,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["1.3rem",{"_index":249,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1.5rem",{"_index":295,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["100",{"_index":202,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["15.1.0",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":189,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["16.5rem",{"_index":238,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["17rem",{"_index":275,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1px",{"_index":246,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1rem",{"_index":294,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["2",{"_index":221,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["2.3.0",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["26rem",{"_index":274,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["2rem",{"_index":269,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["3",{"_index":188,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["3rem",{"_index":273,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["43rem",{"_index":240,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["5",{"_index":192,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["59264d",{"_index":253,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["5rem",{"_index":281,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["6.5rem",{"_index":279,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["7",{"_index":195,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["accessors",{"_index":52,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["actual_component",{"_index":313,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["aliases",{"_index":341,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":255,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["along",{"_index":67,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["angular/common",{"_index":142,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/core",{"_index":140,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/material/table",{"_index":144,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["arr",{"_index":199,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["auto",{"_index":285,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["b",{"_index":193,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["background",{"_index":251,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["based",{"_index":106,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["beween",{"_index":126,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarker",{"_index":29,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertablecomponent",{"_index":1,"title":{"components/BiomarkerTableComponent.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledatacardcomponent",{"_index":145,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledataiconcomponent",{"_index":146,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["block",{"_index":236,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["border",{"_index":258,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["bottom",{"_index":259,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["box",{"_index":297,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["calculates",{"_index":89,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["card",{"_index":161,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["carrying",{"_index":82,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cell",{"_index":14,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cells",{"_index":19,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["change",{"_index":176,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetection",{"_index":25,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy",{"_index":138,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy.onpush",{"_index":26,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes",{"_index":178,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["child",{"_index":264,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["circle",{"_index":75,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cl",{"_index":217,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["class",{"_index":171,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["color",{"_index":90,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["colors",{"_index":66,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["column",{"_index":228,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["columnname",{"_index":229,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["columns",{"_index":47,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["columnswithtypeandcount",{"_index":53,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["commonmodule",{"_index":141,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["component",{"_index":0,"title":{"components/BiomarkerTableComponent.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["component_template",{"_index":311,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"index.html":{}}}],["composition",{"_index":164,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["consisting",{"_index":179,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["const",{"_index":185,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["content",{"_index":305,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["contrast",{"_index":303,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["converts",{"_index":117,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["count",{"_index":173,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["d3d3d3",{"_index":262,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["data",{"_index":48,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datacell",{"_index":158,"title":{"interfaces/DataCell.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dataitem",{"_index":147,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datarow",{"_index":61,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["datasetcount",{"_index":79,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasets",{"_index":162,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasource",{"_index":37,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["deep",{"_index":287,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["definations",{"_index":136,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["defined",{"_index":59,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["dependencies",{"_index":318,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describes",{"_index":163,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["describing",{"_index":17,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["details",{"_index":83,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["directive",{"_index":309,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["directives",{"_index":312,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["display",{"_index":235,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["displayed",{"_index":77,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element",{"_index":308,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element[0",{"_index":226,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element[1",{"_index":227,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ellipsis",{"_index":284,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["emptyfiller",{"_index":247,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["execute",{"_index":334,"title":{},"body":{"index.html":{}}}],["export",{"_index":157,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["expression",{"_index":224,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["fff7f8",{"_index":252,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["fit",{"_index":304,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["flex",{"_index":293,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["function",{"_index":124,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["functional",{"_index":213,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["g",{"_index":190,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gene",{"_index":219,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["generated",{"_index":328,"title":{},"body":{"index.html":{}}}],["getcolor",{"_index":39,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getcolor(value",{"_index":86,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getcolumnswithtypeandcount",{"_index":131,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverdata",{"_index":40,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverdata([index",{"_index":211,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gethoverdata(undefined",{"_index":95,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxcolor",{"_index":41,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxcolor(meanexpression",{"_index":100,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getminmaxsize",{"_index":42,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxsize(percentage",{"_index":109,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gets",{"_index":102,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getsize",{"_index":43,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getsize(value",{"_index":113,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getter",{"_index":133,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getting",{"_index":324,"title":{"index.html":{}},"body":{}}],["give",{"_index":125,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["given",{"_index":127,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["grade",{"_index":105,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradient",{"_index":49,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradientpoint",{"_index":64,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["header",{"_index":280,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["height",{"_index":237,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hex",{"_index":120,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hex2rgb",{"_index":44,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hex2rgb(hex",{"_index":115,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hexcode",{"_index":118,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hgnc",{"_index":222,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hidden",{"_index":283,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["host",{"_index":234,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hover",{"_index":99,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hover.full",{"_index":292,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hoverdirective",{"_index":149,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hra",{"_index":28,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["html",{"_index":307,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["icon",{"_index":160,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id",{"_index":78,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["implements",{"_index":22,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["import",{"_index":137,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["important",{"_index":291,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["imports",{"_index":170,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["include",{"_index":242,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["input",{"_index":73,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["inputs",{"_index":46,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["interface",{"_index":154,"title":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["interfaces",{"_index":316,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["item.percentage",{"_index":200,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["join",{"_index":207,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["label",{"_index":76,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["left",{"_index":245,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["legend",{"_index":306,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["lerp",{"_index":45,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["lerp(value",{"_index":122,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["library",{"_index":327,"title":{},"body":{"index.html":{}}}],["literal",{"_index":108,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{}}}],["map((component",{"_index":205,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["margin",{"_index":244,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["mat",{"_index":288,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["matching",{"_index":315,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.round(component).tostring(16",{"_index":206,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mattabledatasource",{"_index":129,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mattablemodule",{"_index":143,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["max",{"_index":104,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor",{"_index":197,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor[index",{"_index":204,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxsize",{"_index":209,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mdc",{"_index":289,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["mean",{"_index":223,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression",{"_index":107,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression.tofixed(6",{"_index":225,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["method",{"_index":134,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["methods",{"_index":38,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["min",{"_index":103,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mincolor",{"_index":196,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["minsize",{"_index":208,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["miscellaneous",{"_index":339,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["modules",{"_index":335,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":92,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["new",{"_index":128,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ng",{"_index":286,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ngonchanges(changes",{"_index":180,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["nowrap",{"_index":278,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["number",{"_index":87,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nx",{"_index":329,"title":{},"body":{"index.html":{}}}],["object",{"_index":98,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["onchanges",{"_index":23,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["open",{"_index":85,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["optional",{"_index":93,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["organ",{"_index":21,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["organisms",{"_index":326,"title":{},"body":{"index.html":{}}}],["overflow",{"_index":282,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["overview",{"_index":336,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":317,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":248,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["param",{"_index":177,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parameters",{"_index":91,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["parsefloat(item.label",{"_index":201,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(1",{"_index":187,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(3",{"_index":191,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(5",{"_index":194,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["peer",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":112,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["points",{"_index":69,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["properties",{"_index":35,"title":{"properties.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"properties.html":{}}}],["provide",{"_index":135,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["quanitites",{"_index":18,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["r",{"_index":186,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["radius",{"_index":74,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["readonly",{"_index":36,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["representing",{"_index":155,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["represents",{"_index":159,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["results",{"_index":314,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":172,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["returns",{"_index":94,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rgb",{"_index":119,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgba(0",{"_index":300,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["rgbtriblet",{"_index":152,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgbtriplet",{"_index":121,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["right",{"_index":256,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["rocesses",{"_index":97,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row",{"_index":165,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["row[0",{"_index":216,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[1",{"_index":218,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[index",{"_index":212,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rows",{"_index":63,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["run",{"_index":332,"title":{},"body":{"index.html":{}}}],["running",{"_index":330,"title":{},"body":{"index.html":{}}}],["selector",{"_index":27,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sets",{"_index":175,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["shadow",{"_index":298,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["simplechanges",{"_index":139,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["single",{"_index":156,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":111,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizelegend",{"_index":70,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizes",{"_index":50,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["solid",{"_index":261,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["space",{"_index":277,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["specific",{"_index":20,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sr",{"_index":241,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["src/.../biomarker",{"_index":342,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/biomarker",{"_index":10,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["standalone",{"_index":168,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["started",{"_index":325,"title":{"index.html":{}},"body":{}}],["stop",{"_index":68,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["store",{"_index":153,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":56,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["styleurls",{"_index":30,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["t",{"_index":167,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tab",{"_index":290,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table",{"_index":16,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.html",{"_index":33,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.scss",{"_index":31,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.ts",{"_index":12,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.ts:110",{"_index":123,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:119",{"_index":116,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:131",{"_index":101,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:149",{"_index":110,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:163",{"_index":88,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:179",{"_index":114,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:190",{"_index":96,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:67",{"_index":81,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:74",{"_index":60,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:77",{"_index":62,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:80",{"_index":65,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:83",{"_index":71,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:86",{"_index":132,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:91",{"_index":130,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table/biomarker",{"_index":11,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["taking",{"_index":72,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["td",{"_index":257,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td:first",{"_index":268,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td:last",{"_index":271,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["templateurl",{"_index":32,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["test",{"_index":333,"title":{},"body":{"index.html":{}}}],["tests",{"_index":331,"title":{},"body":{"index.html":{}}}],["text",{"_index":254,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th",{"_index":250,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:first",{"_index":270,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:last",{"_index":272,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["this.columns",{"_index":174,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.columns[index",{"_index":220,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.data",{"_index":183,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.datasource.data",{"_index":182,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.getminmaxsize(value",{"_index":210,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.gradient.findindex((item",{"_index":198,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.lerp(value",{"_index":203,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissue",{"_index":84,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissueinfo",{"_index":51,"title":{"interfaces/TissueInfo.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["top",{"_index":265,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tr",{"_index":267,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tr:first",{"_index":263,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["true",{"_index":169,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tslib",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":340,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":15,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["uberon",{"_index":215,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/cdk",{"_index":150,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/atoms",{"_index":151,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/molecules",{"_index":148,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/theming",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":166,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["unit",{"_index":214,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"index.html":{}}}],["use",{"_index":230,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["utils",{"_index":231,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["utils.sr",{"_index":243,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["value",{"_index":58,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["var",{"_index":310,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["variables",{"_index":232,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["vars",{"_index":233,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["vars.$primary",{"_index":302,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["version",{"_index":337,"title":{},"body":{"properties.html":{}}}],["void",{"_index":181,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["white",{"_index":276,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["width",{"_index":239,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/BiomarkerTableComponent.html":{"url":"components/BiomarkerTableComponent.html","title":"component - BiomarkerTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BiomarkerTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/biomarker-table/biomarker-table.component.ts\n\n\n\n    \n        Description\n    \n    \n        Cell types table, describing the types and quanitites of cells for a specific organ\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hra-biomarker-table\n            \n\n            \n                styleUrls\n                ./biomarker-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./biomarker-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                dataSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColor\n                            \n                            \n                                getHoverData\n                            \n                            \n                                getMinMaxColor\n                            \n                            \n                                getMinMaxSize\n                            \n                            \n                                getSize\n                            \n                            \n                                hex2rgb\n                            \n                            \n                                lerp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                data\n                            \n                            \n                                gradient\n                            \n                            \n                                sizes\n                            \n                            \n                                tissueInfo\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    columnsWithTypeAndCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:74\n                            \n                        \n                \n                    \n                        Columns for the table\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         DataRow[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:77\n                            \n                        \n                \n                    \n                        Rows of the table\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        gradient\n                    \n                \n                \n                    \n                        Type :     GradientPoint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:80\n                            \n                        \n                \n                    \n                        Gradient colors along with their stop points\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sizes\n                    \n                \n                \n                    \n                        Type :     SizeLegend[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:83\n                            \n                        \n                \n                    \n                        Taking input for the radius of the circle and the label to be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tissueInfo\n                    \n                \n                \n                    \n                        Type :         TissueInfo\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    label: '',\n    datasetCount: 0,\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:67\n                            \n                        \n                \n                    \n                        Input: TissueInfo carrying the details of the tissue open\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:163\n                \n            \n\n\n            \n                \n                    Calculates the color of this value on this gradient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHoverData\n                        \n                    \n                \n            \n            \n                \ngetHoverData(undefined: [number, DataRow])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:190\n                \n            \n\n\n            \n                \n                    rocesses the object for hover data for Table Cell\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                [number, DataRow]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinMaxColor\n                        \n                    \n                \n            \n            \n                \ngetMinMaxColor(meanExpression: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:131\n                \n            \n\n\n            \n                \n                    Gets Min and Max color grade based on the meanExpression value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meanExpression\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinMaxSize\n                        \n                    \n                \n            \n            \n                \ngetMinMaxSize(percentage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:149\n                \n            \n\n\n            \n                \n                    Gets Min and Max size grade based on the Percentage value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSize\n                        \n                    \n                \n            \n            \n                \ngetSize(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:179\n                \n            \n\n\n            \n                \n                    gets Size of the Cell based on the percentage value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hex2rgb\n                        \n                    \n                \n            \n            \n                \nhex2rgb(hex: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:119\n                \n            \n\n\n            \n                \n                    Converts HexCode to RGB\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hex\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RGBTriplet\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lerp\n                        \n                    \n                \n            \n            \n                \nlerp(value: number, min: number, max: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:110\n                \n            \n\n\n            \n                \n                    Lerp function to give value beween min and max value based on the given value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource>([])\n                    \n                \n                    \n                        \n                                Defined in src/lib/biomarker-table/biomarker-table.component.ts:91\n                        \n                    \n\n            \n                \n                    Source for the table\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        columnsWithTypeAndCount\n                    \n                \n\n                \n                    \n                        getcolumnsWithTypeAndCount()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:86\n                                \n                            \n                    \n                        \n                                Getter method to provide the definations of the columns\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n  /** Number of datasets for this Tissue */\n  datasetCount: number;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n    datasetCount: 0,\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * sets the data source for the table on every change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * rocesses the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label, datasetCount },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${datasetCount}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n}\n\n    \n\n    \n        \n  \n    Cell type table by Biomarker\n  \n\n  \n    Cell Type\n\n    \n      {{ element[0] }}\n    \n  \n\n  \n    Cell Count\n\n    \n      {{ element[1] !== undefined ? (element[1] | number) : 'no data' }}\n    \n  \n\n  \n    \n      {{ column }}\n    \n\n    \n      \n      \n\n      \n        \n      \n    \n  \n\n  \n  \n\n\n\n  \n    {{ columnName }}\n  \n\n\n\n   \n\n\n    \n\n    \n                \n                    ./biomarker-table.component.scss\n                \n                @use 'utils';\n@use 'variables' as vars;\n\n:host {\n  display: block;\n  max-height: 16.5rem;\n  max-width: 43rem;\n\n  .sr-only {\n    @include utils.sr-only();\n  }\n\n  .table {\n    margin-left: -1px;\n    .emptyFiller {\n      padding: 1.3rem;\n    }\n  }\n  .table th {\n    background-color: #fff7f8;\n    color: #59264d;\n    text-align: right;\n  }\n\n  .table td {\n    border-bottom: 0.063rem solid #d3d3d3;\n    border-left: 0.063rem solid #d3d3d3;\n  }\n\n  .table tr:first-child td {\n    border-top: 0rem solid #d3d3d3;\n  }\n\n  tr > td:first-child {\n    text-align: left;\n    padding: 0 2rem;\n  }\n\n  tr > th:first-child {\n    text-align: left;\n    padding: 0 2rem;\n  }\n\n  tr > td:last-of-type {\n    border-right: 0.063rem solid #d3d3d3;\n  }\n\n  tr > th:last-of-type {\n    border-right: 0.063rem solid #d3d3d3;\n  }\n\n  .type {\n    height: 3rem;\n    max-width: 26rem;\n    min-width: 17rem;\n    border-radius: 0rem;\n    white-space: nowrap;\n  }\n\n  .count {\n    text-align: right;\n    height: 3rem;\n    min-width: 6.5rem;\n  }\n\n  .icon-header {\n    max-width: 5rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .icon-cell {\n    max-width: 5rem;\n    min-height: 3rem;\n\n    .icon {\n      margin: auto;\n    }\n  }\n}\n\n::ng-deep .mat-mdc-tab-header {\n  margin-left: -1px !important;\n}\n\n::ng-deep .biomarker-table-hover.full-column-name {\n  display: flex;\n  padding: 1rem 1.5rem;\n  border-radius: 0.5rem;\n  box-shadow: 0.063rem 0.125rem 1rem 0.125rem rgba(0, 0, 0, 0.16);\n  background-color: vars.$primary-contrast-rgb;\n  overflow: auto;\n  max-width: fit-content;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Cell type table by Biomarker        Cell Type          {{ element[0] }}            Cell Count          {{ element[1] !== undefined ? (element[1] | number) : \\'no data\\' }}                  {{ column }}                                                        {{ columnName }}     '\n    var COMPONENTS = [{'name': 'BiomarkerTableComponent', 'selector': 'hra-biomarker-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BiomarkerTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataCell.html":{"url":"interfaces/DataCell.html","title":"interface - DataCell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataCell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a single cell of the table.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the color of the icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the data for the data card\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the size of the icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n  /** Number of datasets for this Tissue */\n  datasetCount: number;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n    datasetCount: 0,\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * sets the data source for the table on every change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * rocesses the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label, datasetCount },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${datasetCount}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueInfo.html":{"url":"interfaces/TissueInfo.html","title":"interface - TissueInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TissueInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Details of the Tissue\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            datasetCount\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datasetCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datasetCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of datasets for this Tissue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID of the Tissue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the Tissue\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n  /** Number of datasets for this Tissue */\n  datasetCount: number;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n    datasetCount: 0,\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * sets the data source for the table on every change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * rocesses the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label, datasetCount },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${datasetCount}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @hra-ui/theming : *\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncomponents-organisms\nThis library was generated with Nx.\nRunning unit tests\nRun nx test components-organisms to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataRow   (src/.../biomarker-table.component.ts)\n                        \n                        \n                            RGBTriplet   (src/.../biomarker-table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/biomarker-table/biomarker-table.component.ts\n    \n    \n        \n            \n                \n                    \n                    DataRow\n                \n            \n            \n                \n                    Describes the composition of a single row in the table\n\n                \n            \n            \n                \n                        [string, , ...[]]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RGBTriplet\n                \n            \n            \n                \n                    RGBTriblet of type RGB to store color\n\n                \n            \n            \n                \n                        [number, number, number]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
