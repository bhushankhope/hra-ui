var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/BiomarkerTableComponent.html",[0,0.646,1,0.863]],["body/components/BiomarkerTableComponent.html",[0,0.546,1,0.854,2,0.98,3,0.442,4,1.123,5,0.799,6,0.799,7,0.799,8,0.799,9,0.442,10,1.474,11,1.474,12,0.336,13,1.123,14,2.061,15,1.123,16,1.519,17,0.742,18,0.742,19,1.252,20,0.742,21,0.742,22,0.742,23,0.959,24,0.799,25,0.742,26,0.742,27,0.959,28,1.031,29,1.802,30,0.742,31,0.959,32,0.742,33,0.742,34,0.64,35,0.423,36,1.123,37,1.252,38,1.341,39,1.341,40,1.341,41,1.341,42,1.341,43,1.341,44,1.341,45,1.341,46,1.341,47,1.123,48,1.341,49,1.123,50,1.341,51,1.44,52,1.85,53,1.355,54,0.959,55,1.123,56,0.959,57,1.195,58,1.341,59,0.959,60,1.341,61,0.959,62,1.6,63,0.112,64,1.474,65,2.731,66,2.073,67,3.475,68,0.799,69,1.299,70,0.799,71,0.742,72,0.959,73,0.799,74,0.742,75,0.742,76,0.742,77,0.742,78,0.799,79,1.951,80,1.123,81,0.742,82,0.742,83,0.799,84,0.742,85,0.742,86,1.123,87,0.959,88,0.799,89,0.742,90,1.743,91,1.123,92,0.742,93,1.871,94,0.742,95,0.799,96,0.742,97,0.959,98,1.44,99,0.742,100,0.959,101,0.799,102,1.123,103,1.437,104,0.799,105,1.577,106,0.799,107,0.799,108,1.269,109,2.934,110,1.85,111,2.934,112,1.907,113,0.799,114,0.799,115,0.742,116,0.959,117,1.355,118,0.742,119,0.799,120,1.44,121,0.742,122,0.799,123,1.774,124,1.774,125,0.959,126,1.44,127,1.511,128,0.98,129,0.799,130,0.799,131,1.252,132,1.355,133,0.742,134,0.799,135,0.742,136,0.799,137,0.742,138,0.742,139,0.854,140,0.742,141,0.952,142,0.742,143,0.799,144,0.959,145,0.742,146,0.742,147,0.742,148,0.742,149,0.799,150,0.742,151,0.742,152,0.742,153,0.742,154,0.742,155,0.799,156,0.959,157,0.959,158,0.799,159,1.252,160,0.799,161,0.959,162,0.742,163,0.742,164,0.959,165,0.959,166,0.959,167,0.799,168,0.799,169,0.799,170,0.742,171,0.742,172,0.742,173,0.742,174,1.355,175,0.442,176,0.742,177,0.742,178,0.336,179,0.742,180,0.336,181,0.742,182,0.442,183,0.742,184,0.742,185,0.742,186,0.442,187,0.742,188,0.442,189,0.442,190,0.336,191,0.336,192,0.546,193,0.442,194,0.564,195,1.123,196,0.336,197,0.959,198,1.252,199,0.442,200,0.742,201,0.959,202,0.336,203,0.336,204,1.252,205,0.959,206,0.442,207,0.442,208,0.442,209,1.774,210,1.123,211,0.442,212,0.959,213,0.442,214,1.708,215,0.959,216,0.442,217,0.442,218,0.742,219,0.442,220,0.442,221,0.442,222,0.442,223,0.442,224,0.442,225,0.959,226,0.442,227,1.624,228,0.742,229,0.442,230,0.742,231,0.442,232,0.729,233,0.442,234,0.742,235,0.742,236,0.442,237,0.442,238,0.742,239,0.442,240,0.442,241,0.959,242,0.742,243,0.442,244,0.442,245,0.442,246,0.442,247,0.442,248,0.442,249,0.442,250,0.442,251,0.442,252,0.442,253,0.442,254,0.742,255,0.442,256,0.442,257,0.442,258,0.442,259,0.742,260,0.742,261,0.442,262,0.442,263,0.742,264,0.442,265,0.336,266,0.442,267,1.44,268,0.442,269,0.442,270,0.442,271,0.442,272,0.442,273,0.336,274,0.442,275,0.442,276,0.442,277,0.442,278,0.442,279,2.03,280,2.03,281,1.733,282,1.341,283,1.341,284,0.799,285,0.799,286,0.799,287,0.799,288,1.341,289,0.799,290,0.799,291,0.799,292,0.799,293,1.733,294,2.603,295,2.03,296,1.341,297,2.03,298,1.341,299,0.799,300,2.449,301,0.799,302,0.799,303,0.799,304,0.799,305,0.799,306,2.03,307,2.03,308,1.733,309,1.733,310,0.799,311,1.341,312,2.84,313,0.799,314,2.262,315,2.603,316,2.603,317,2.262,318,2.262,319,2.03,320,0.799,321,2.03,322,1.341,323,0.799,324,1.733,325,1.341,326,0.799,327,0.799,328,0.799,329,2.449,330,0.799,331,0.799,332,1.341,333,1.341,334,1.341,335,0.799,336,1.341,337,0.799,338,0.799,339,0.799,340,1.341,341,1.341,342,1.733,343,0.799,344,0.799,345,1.341,346,1.341,347,1.341,348,1.733,349,1.733,350,0.799,351,0.799,352,0.799,353,0.799,354,0.799,355,1.341,356,0.799,357,0.799,358,0.799,359,0.799,360,1.341,361,0.799,362,0.799,363,0.799,364,0.799,365,0.799,366,0.799,367,0.799,368,1.341,369,1.341,370,0.799,371,2.03,372,0.799,373,0.799,374,0.799,375,0.036,376,0.036]],["title/interfaces/DataCell.html",[192,0.646,196,0.863]],["body/interfaces/DataCell.html",[0,0.615,1,0.536,3,0.704,4,1.312,9,0.704,10,0.536,11,0.536,12,0.536,13,0.704,14,2.036,15,1.079,16,1.476,17,0.704,18,0.704,19,1.312,20,0.704,21,0.704,22,0.704,23,1.079,25,0.704,26,0.704,27,0.704,28,1.119,29,1.742,30,0.704,31,0.704,32,0.704,33,0.704,34,0.838,35,0.615,36,1.079,37,1.312,47,0.704,49,0.704,51,1.312,52,2.005,53,1.079,54,0.704,55,1.079,56,0.704,57,1.206,59,0.704,61,0.704,62,1.525,63,0.112,64,1.511,66,2.062,69,1.206,71,0.704,72,1.079,74,0.704,75,0.704,76,0.704,77,0.704,79,2.005,80,1.079,81,0.704,82,0.704,84,0.704,85,0.704,86,1.079,87,1.079,89,0.704,90,1.913,91,0.704,92,0.704,93,2.005,94,0.704,96,0.704,97,1.079,98,1.674,99,0.704,100,1.079,102,1.079,103,1.476,105,1.568,108,1.367,110,1.471,112,1.742,115,0.704,116,1.079,117,1.312,118,0.704,120,1.312,121,0.704,123,1.674,124,1.586,125,0.704,126,1.312,127,1.674,128,1.425,131,1.742,132,1.312,133,0.704,135,0.704,137,0.704,138,0.704,139,0.821,140,0.704,141,1.119,142,0.704,144,1.079,145,0.704,146,0.704,147,0.704,148,0.704,150,0.704,151,0.704,152,0.704,153,0.704,154,0.704,156,1.079,157,1.079,159,1.312,161,1.079,162,0.704,163,0.704,164,0.704,165,1.079,166,1.079,170,0.704,171,0.704,172,0.704,173,0.704,174,1.674,175,0.704,176,1.079,177,1.079,178,0.536,179,1.079,180,0.536,181,1.079,182,0.704,183,1.079,184,1.079,185,1.079,186,0.704,187,1.079,188,0.704,189,0.704,190,0.536,191,0.536,192,0.838,193,1.079,194,0.998,195,1.471,196,0.821,197,1.674,198,1.471,199,1.079,200,1.079,201,1.312,202,0.536,203,0.536,204,1.312,205,1.312,206,0.704,207,0.704,208,0.704,209,1.986,210,0.704,211,0.704,212,1.312,213,0.704,214,1.941,215,1.312,216,0.704,217,0.704,218,1.079,219,0.704,220,0.704,221,0.704,222,0.704,223,0.704,224,0.704,225,1.312,226,0.704,227,1.881,228,1.079,229,0.704,230,1.079,231,0.704,232,0.998,233,0.704,234,1.079,235,1.079,236,0.704,237,0.704,238,1.079,239,0.704,240,0.704,241,1.312,242,1.079,243,0.704,244,0.704,245,0.704,246,0.704,247,0.704,248,0.704,249,0.704,250,0.704,251,0.704,252,0.704,253,0.704,254,1.079,255,0.704,256,0.704,257,0.704,258,0.704,259,1.079,260,1.079,261,0.704,262,0.704,263,1.079,264,0.704,265,0.536,266,0.704,267,0.704,268,0.704,269,0.704,270,0.704,271,0.704,272,0.704,273,0.536,274,0.704,275,0.704,276,0.704,277,0.704,278,0.704,375,0.053,376,0.053,377,0.704]],["title/interfaces/TissueInfo.html",[57,0.863,192,0.646]],["body/interfaces/TissueInfo.html",[0,0.621,1,0.543,3,0.713,4,1.323,9,0.713,10,0.543,11,0.543,12,0.543,13,0.713,14,2.026,15,1.09,16,1.46,17,0.713,18,0.713,19,1.323,20,0.713,21,0.713,22,0.713,23,1.09,25,0.713,26,0.713,27,0.713,28,1.126,29,1.75,30,0.713,31,0.713,32,0.713,33,0.713,34,0.843,35,0.621,36,1.09,37,1.323,47,0.713,49,0.713,51,1.323,52,1.887,53,1.09,54,0.713,55,1.09,56,0.713,57,1.279,59,0.713,61,0.713,62,1.481,63,0.112,64,1.541,66,2.066,69,1.214,71,0.713,72,1.09,74,0.713,75,0.713,76,0.713,77,0.713,79,2.066,80,1.09,81,0.713,82,0.713,84,0.713,85,0.713,86,1.09,87,1.09,89,0.713,90,1.919,91,0.713,92,0.713,93,2.054,94,0.713,96,0.713,97,1.323,98,1.85,99,0.713,100,1.09,102,1.09,103,1.481,105,1.552,108,1.126,110,1.596,112,1.75,115,0.713,116,1.09,117,1.323,118,0.713,120,1.323,121,0.713,123,1.682,124,1.596,125,0.713,126,1.323,127,1.682,131,1.323,132,1.323,133,0.713,135,0.713,137,0.713,138,0.713,139,0.829,140,0.713,141,1.126,142,0.713,144,1.09,145,0.713,146,0.713,147,0.713,148,0.713,150,0.713,151,0.713,152,0.713,153,0.713,154,0.713,156,1.09,157,1.09,159,1.323,161,1.09,162,0.713,163,0.713,164,0.713,165,1.09,166,1.09,170,0.713,171,0.713,172,0.713,173,0.713,174,1.682,175,0.713,176,1.09,177,1.09,178,0.543,179,1.09,180,0.543,181,1.09,182,0.713,183,1.09,184,1.09,185,1.09,186,0.713,187,1.09,188,0.713,189,0.713,190,0.543,191,0.543,192,0.753,193,0.713,194,0.829,195,1.481,196,0.543,197,1.323,198,1.09,199,0.713,200,1.09,201,1.323,202,0.543,203,0.543,204,1.323,205,1.323,206,0.713,207,0.713,208,0.713,209,1.991,210,0.713,211,0.713,212,1.323,213,0.713,214,1.947,215,1.323,216,0.713,217,0.713,218,1.09,219,0.713,220,0.713,221,0.713,222,0.713,223,0.713,224,0.713,225,1.323,226,0.713,227,1.887,228,1.09,229,0.713,230,1.09,231,0.713,232,1.006,233,0.713,234,1.09,235,1.09,236,0.713,237,0.713,238,1.09,239,0.713,240,0.713,241,1.323,242,1.09,243,0.713,244,0.713,245,0.713,246,0.713,247,0.713,248,0.713,249,0.713,250,0.713,251,0.713,252,0.713,253,0.713,254,1.09,255,0.713,256,0.713,257,0.713,258,0.713,259,1.09,260,1.09,261,0.713,262,0.713,263,1.09,264,0.713,265,0.543,266,0.713,267,0.713,268,0.713,269,0.713,270,0.713,271,0.713,272,0.713,273,0.543,274,0.713,275,0.713,276,0.713,277,0.713,278,0.713,375,0.053,376,0.053,377,0.713]],["title/dependencies.html",[378,1.268,379,1.792]],["body/dependencies.html",[28,1.3,63,0.107,178,1.3,180,1.3,375,0.096,376,0.096,379,2.594,380,3.087,381,3.087,382,3.087,383,3.549,384,3.087]],["title/index.html",[34,0.547,385,1.736,386,1.736]],["body/index.html",[2,2.594,63,0.096,265,1.494,375,0.096,376,0.096,387,3.549,388,3.087,389,3.087,390,3.549,391,3.087,392,3.549,393,3.087,394,3.087,395,3.087]],["title/modules.html",[396,2.009]],["body/modules.html",[63,0.097,375,0.097,376,0.097,396,2.317]],["title/overview.html",[397,2.009]],["body/overview.html",[0,0.992,63,0.097,232,1.325,273,1.325,375,0.097,376,0.097,377,1.742,397,2.3]],["title/properties.html",[35,0.773,378,1.268]],["body/properties.html",[35,0.994,63,0.102,375,0.097,376,0.097,398,3.153,399,3.153]],["title/miscellaneous/typealiases.html",[400,1.268,401,2.452]],["body/miscellaneous/typealiases.html",[10,1.266,11,1.266,12,1.556,16,1.266,34,0.948,62,1.472,63,0.103,64,1.266,69,1.472,103,1.266,105,1.556,108,1.266,139,1.266,141,1.472,190,1.266,191,1.266,194,1.266,202,1.266,203,1.266,375,0.095,376,0.095,400,2.199,402,3.009,403,3.497]]],"invertedIndex":[["",{"_index":63,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":267,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["0.0.1",{"_index":399,"title":{},"body":{"properties.html":{}}}],["0.063rem",{"_index":314,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.125rem",{"_index":360,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.16",{"_index":362,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.5rem",{"_index":357,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0rem",{"_index":322,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1",{"_index":232,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["1.5rem",{"_index":356,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["100",{"_index":253,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["15.1.0",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":241,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["17rem",{"_index":331,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1px",{"_index":295,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1rem",{"_index":355,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["2",{"_index":273,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["2.3.0",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["26rem",{"_index":330,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["2rem",{"_index":325,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["3",{"_index":240,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["3rem",{"_index":319,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["400",{"_index":310,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["5",{"_index":244,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["59264d",{"_index":305,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["5rem",{"_index":341,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["6.5rem",{"_index":338,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["7",{"_index":246,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["a[0].tolowercase",{"_index":226,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["accessors",{"_index":60,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["actual_component",{"_index":374,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["aliases",{"_index":402,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":306,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["along",{"_index":75,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["alphabetically",{"_index":162,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["angular/common",{"_index":180,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/core",{"_index":178,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/material/table",{"_index":182,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["arr",{"_index":250,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["auto",{"_index":345,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["b",{"_index":225,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["background",{"_index":297,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["based",{"_index":126,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["beween",{"_index":152,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarker",{"_index":29,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertablecomponent",{"_index":1,"title":{"components/BiomarkerTableComponent.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledatacardcomponent",{"_index":183,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledataiconcomponent",{"_index":184,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["block",{"_index":289,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["bold",{"_index":336,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["boolean",{"_index":147,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["border",{"_index":312,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["bottom",{"_index":313,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["box",{"_index":358,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["calculates",{"_index":107,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["card",{"_index":199,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["carrying",{"_index":96,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cell",{"_index":14,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cells",{"_index":19,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["change",{"_index":212,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetection",{"_index":25,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy",{"_index":175,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy.onpush",{"_index":26,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes",{"_index":215,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes['illustrationids'].currentvalue.tostring",{"_index":221,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes['illustrationids'].previousvalue",{"_index":220,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes['illustrationids'].previousvalue.tostring",{"_index":222,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["child",{"_index":321,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["circle",{"_index":92,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cl",{"_index":269,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["class",{"_index":208,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["color",{"_index":108,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["colors",{"_index":74,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["column",{"_index":281,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["columnname",{"_index":282,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["columns",{"_index":51,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["columnswithtypeandcount",{"_index":61,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["commonmodule",{"_index":179,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["component",{"_index":0,"title":{"components/BiomarkerTableComponent.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["component_template",{"_index":372,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"index.html":{}}}],["composition",{"_index":203,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["consisting",{"_index":216,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["const",{"_index":227,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["content",{"_index":366,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["contrast",{"_index":364,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["converts",{"_index":137,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["count",{"_index":210,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["d3d3d3",{"_index":316,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["data",{"_index":52,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["data.slice(2).find((entry",{"_index":236,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datacell",{"_index":196,"title":{"interfaces/DataCell.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dataitem",{"_index":185,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datarow",{"_index":69,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["dataset_count",{"_index":201,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasets",{"_index":200,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasource",{"_index":37,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["deep",{"_index":347,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["default",{"_index":65,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["definations",{"_index":173,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["defined",{"_index":67,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["dependencies",{"_index":379,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describes",{"_index":202,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["describing",{"_index":17,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["details",{"_index":97,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["directive",{"_index":370,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["directives",{"_index":373,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["display",{"_index":288,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["displayed",{"_index":94,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element",{"_index":369,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element[0",{"_index":279,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element[1",{"_index":280,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ellipsis",{"_index":344,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["emits",{"_index":102,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["entry",{"_index":235,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["entry?.data.cell",{"_index":237,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["eventemitter",{"_index":100,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["execute",{"_index":395,"title":{},"body":{"index.html":{}}}],["export",{"_index":195,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["expression",{"_index":276,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["f8f9fa",{"_index":298,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["fff7f8",{"_index":304,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["fit",{"_index":365,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["flex",{"_index":354,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["font",{"_index":308,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["function",{"_index":150,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["functional",{"_index":264,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["g",{"_index":242,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gene",{"_index":271,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["generated",{"_index":389,"title":{},"body":{"index.html":{}}}],["getcolor",{"_index":39,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getcolor(value",{"_index":104,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getcolumnswithtypeandcount",{"_index":168,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverdata",{"_index":40,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverdata([index",{"_index":262,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gethoverdata(undefined",{"_index":113,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverid",{"_index":41,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverid(data",{"_index":118,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getminmaxcolor",{"_index":42,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxcolor(meanexpression",{"_index":121,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getminmaxsize",{"_index":43,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxsize(percentage",{"_index":129,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gets",{"_index":120,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getsize",{"_index":44,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getsize(value",{"_index":133,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getter",{"_index":170,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getting",{"_index":385,"title":{"index.html":{}},"body":{}}],["give",{"_index":151,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["given",{"_index":153,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["grade",{"_index":125,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradient",{"_index":53,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradientpoint",{"_index":72,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["header",{"_index":340,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["height",{"_index":318,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hex",{"_index":140,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hex2rgb",{"_index":45,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hex2rgb(hex",{"_index":135,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hexcode",{"_index":138,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hgnc",{"_index":274,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hidden",{"_index":343,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["highlight",{"_index":296,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["highlighted",{"_index":146,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["highlightedcellid",{"_index":54,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["highlighting",{"_index":82,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["host",{"_index":287,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hover",{"_index":117,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hover.full",{"_index":353,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hoverdirective",{"_index":187,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hovered",{"_index":80,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hoverid",{"_index":157,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hra",{"_index":28,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["html",{"_index":368,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["icon",{"_index":198,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id",{"_index":79,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id1",{"_index":228,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id2",{"_index":230,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ids",{"_index":85,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustration",{"_index":86,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustrationids",{"_index":55,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustrationlabels",{"_index":213,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["implements",{"_index":22,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["import",{"_index":174,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["important",{"_index":351,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["imports",{"_index":207,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["include",{"_index":291,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["input",{"_index":90,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["inputs",{"_index":50,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["interface",{"_index":192,"title":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["interfaces",{"_index":377,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["ishighlighted",{"_index":46,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ishighlighted(row",{"_index":142,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["item.percentage",{"_index":251,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["join",{"_index":258,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["label",{"_index":93,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["left",{"_index":294,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["legend",{"_index":367,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["lerp",{"_index":47,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["lerp(value",{"_index":148,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["library",{"_index":388,"title":{},"body":{"index.html":{}}}],["list",{"_index":84,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["literal",{"_index":128,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{}}}],["lowercase",{"_index":302,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["map((component",{"_index":256,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["margin",{"_index":293,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["mat",{"_index":348,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["matches",{"_index":145,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["matching",{"_index":376,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.round(component).tostring(16",{"_index":257,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mattabledatasource",{"_index":166,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mattablemodule",{"_index":181,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["max",{"_index":124,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor",{"_index":248,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor[index",{"_index":255,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxsize",{"_index":260,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mdc",{"_index":349,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["mean",{"_index":275,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression",{"_index":127,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression.tofixed(6",{"_index":277,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["method",{"_index":171,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["methods",{"_index":38,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["min",{"_index":123,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mincolor",{"_index":247,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["minsize",{"_index":259,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["miscellaneous",{"_index":400,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["modules",{"_index":396,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":110,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["new",{"_index":165,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ng",{"_index":346,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ngonchanges(changes",{"_index":217,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["nowrap",{"_index":334,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["number",{"_index":105,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nx",{"_index":390,"title":{},"body":{"index.html":{}}}],["object",{"_index":116,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["onchanges",{"_index":23,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["opacity",{"_index":337,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["open",{"_index":99,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["optional",{"_index":111,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["organ",{"_index":21,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["organisms",{"_index":387,"title":{},"body":{"index.html":{}}}],["output",{"_index":176,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["outputs",{"_index":58,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["overflow",{"_index":342,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["overview",{"_index":397,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":378,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":324,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["param",{"_index":214,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parameters",{"_index":109,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["parsefloat(item.label",{"_index":252,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(1",{"_index":239,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(3",{"_index":243,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(5",{"_index":245,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["peer",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":132,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["points",{"_index":77,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["processes",{"_index":115,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["properties",{"_index":35,"title":{"properties.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"properties.html":{}}}],["provide",{"_index":172,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["pseudo",{"_index":335,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["puts",{"_index":163,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["quanitites",{"_index":18,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["r",{"_index":238,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["radius",{"_index":91,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["readonly",{"_index":36,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["representing",{"_index":193,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["represents",{"_index":197,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["results",{"_index":375,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":209,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["returns",{"_index":112,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rgb",{"_index":139,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgba(0",{"_index":361,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["rgbtriblet",{"_index":190,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgbtriplet",{"_index":141,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["right",{"_index":307,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["row",{"_index":103,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["row:hover",{"_index":352,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["row[0",{"_index":268,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[1",{"_index":270,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[index",{"_index":263,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rowhover",{"_index":59,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rows",{"_index":71,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["run",{"_index":393,"title":{},"body":{"index.html":{}}}],["running",{"_index":391,"title":{},"body":{"index.html":{}}}],["selector",{"_index":27,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sethoverid",{"_index":48,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["sethoverid(hoverid",{"_index":154,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sets",{"_index":156,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["shadow",{"_index":359,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["simplechanges",{"_index":177,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["single",{"_index":194,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":131,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizelegend",{"_index":87,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizes",{"_index":56,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["solid",{"_index":315,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["sorts",{"_index":161,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sorttable",{"_index":49,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["space",{"_index":333,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["specific",{"_index":20,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sr",{"_index":290,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["src/.../biomarker",{"_index":403,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/biomarker",{"_index":10,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["standalone",{"_index":206,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["started",{"_index":386,"title":{"index.html":{}},"body":{}}],["stop",{"_index":76,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["store",{"_index":191,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":64,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["styleurls",{"_index":30,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["t",{"_index":205,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tab",{"_index":350,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table",{"_index":16,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.html",{"_index":33,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.scss",{"_index":31,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.ts",{"_index":12,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.ts:102",{"_index":169,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:107",{"_index":167,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:133",{"_index":160,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:149",{"_index":143,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:158",{"_index":119,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:170",{"_index":149,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:179",{"_index":136,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:191",{"_index":122,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:207",{"_index":130,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:221",{"_index":106,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:237",{"_index":134,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:248",{"_index":114,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:283",{"_index":155,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:75",{"_index":95,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:81",{"_index":68,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:84",{"_index":70,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:87",{"_index":73,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:90",{"_index":88,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:93",{"_index":78,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:96",{"_index":83,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:99",{"_index":101,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table/biomarker",{"_index":11,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["taking",{"_index":89,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["td",{"_index":311,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td.type",{"_index":299,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td:first",{"_index":323,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td:last",{"_index":327,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["templateurl",{"_index":32,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["test",{"_index":394,"title":{},"body":{"index.html":{}}}],["tests",{"_index":392,"title":{},"body":{"index.html":{}}}],["text",{"_index":300,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th",{"_index":303,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:first",{"_index":326,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:last",{"_index":328,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:not(:first",{"_index":339,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["this.columns",{"_index":211,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.columns[index",{"_index":272,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.data",{"_index":219,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.data.sort((a",{"_index":224,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.datasource.data",{"_index":218,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.gethoverid(row",{"_index":233,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.getminmaxsize(value",{"_index":261,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.gradient.findindex((item",{"_index":249,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.highlightedcellid",{"_index":234,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.illustrationids.includes(this.gethoverid(a",{"_index":229,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.illustrationids.includes(this.gethoverid(b",{"_index":231,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.lerp(value",{"_index":254,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.rowhover.emit(hoverid",{"_index":278,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.sorttable",{"_index":223,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissue",{"_index":98,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissueinfo",{"_index":57,"title":{"interfaces/TissueInfo.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["top",{"_index":164,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tr",{"_index":317,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tr:first",{"_index":320,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["transform",{"_index":301,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["true",{"_index":144,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tslib",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":62,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":401,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":15,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["uberon",{"_index":266,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/cdk",{"_index":188,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/atoms",{"_index":189,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/molecules",{"_index":186,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/theming",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":204,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["unit",{"_index":265,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"index.html":{}}}],["use",{"_index":283,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["used",{"_index":81,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["utils",{"_index":284,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["utils.sr",{"_index":292,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["value",{"_index":66,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["var",{"_index":371,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["variables",{"_index":285,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["vars",{"_index":286,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["vars.$primary",{"_index":363,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["version",{"_index":398,"title":{},"body":{"properties.html":{}}}],["void",{"_index":159,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["weight",{"_index":309,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["white",{"_index":332,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["width",{"_index":329,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["yes",{"_index":158,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/BiomarkerTableComponent.html":{"url":"components/BiomarkerTableComponent.html","title":"component - BiomarkerTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BiomarkerTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/biomarker-table/biomarker-table.component.ts\n\n\n\n    \n        Description\n    \n    \n        Cell types table, describing the types and quanitites of cells for a specific organ\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hra-biomarker-table\n            \n\n            \n                styleUrls\n                ./biomarker-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./biomarker-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                dataSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColor\n                            \n                            \n                                getHoverData\n                            \n                            \n                                getHoverId\n                            \n                            \n                                getMinMaxColor\n                            \n                            \n                                getMinMaxSize\n                            \n                            \n                                getSize\n                            \n                            \n                                hex2rgb\n                            \n                            \n                                isHighlighted\n                            \n                            \n                                lerp\n                            \n                            \n                                setHoverId\n                            \n                            \n                                sortTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                data\n                            \n                            \n                                gradient\n                            \n                            \n                                highlightedCellId\n                            \n                            \n                                illustrationIds\n                            \n                            \n                                sizes\n                            \n                            \n                                tissueInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rowHover\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    columnsWithTypeAndCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:81\n                            \n                        \n                \n                    \n                        Columns for the table\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         DataRow[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:84\n                            \n                        \n                \n                    \n                        Rows of the table\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        gradient\n                    \n                \n                \n                    \n                        Type :     GradientPoint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:87\n                            \n                        \n                \n                    \n                        Gradient colors along with their stop points\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedCellId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:93\n                            \n                        \n                \n                    \n                        Cell id which is hovered, used for highlighting\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        illustrationIds\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:96\n                            \n                        \n                \n                    \n                        List of cell ids in the illustration\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sizes\n                    \n                \n                \n                    \n                        Type :     SizeLegend[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:90\n                            \n                        \n                \n                    \n                        Taking input for the radius of the circle and the label to be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tissueInfo\n                    \n                \n                \n                    \n                        Type :         TissueInfo\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    label: '',\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:75\n                            \n                        \n                \n                    \n                        Input: TissueInfo carrying the details of the tissue open\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rowHover\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:99\n                            \n                        \n                \n                    \n                        Emits cell type label when row is hovered\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:221\n                \n            \n\n\n            \n                \n                    Calculates the color of this value on this gradient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHoverData\n                        \n                    \n                \n            \n            \n                \ngetHoverData(undefined: [number, DataRow])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:248\n                \n            \n\n\n            \n                \n                    Processes the object for hover data for Table Cell\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                [number, DataRow]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHoverId\n                        \n                    \n                \n            \n            \n                \ngetHoverId(data: DataRow)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:158\n                \n            \n\n\n            \n                \n                    Gets hover id from row\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DataRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        row data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        cell type id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinMaxColor\n                        \n                    \n                \n            \n            \n                \ngetMinMaxColor(meanExpression: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:191\n                \n            \n\n\n            \n                \n                    Gets Min and Max color grade based on the meanExpression value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meanExpression\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinMaxSize\n                        \n                    \n                \n            \n            \n                \ngetMinMaxSize(percentage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:207\n                \n            \n\n\n            \n                \n                    Gets Min and Max size grade based on the Percentage value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSize\n                        \n                    \n                \n            \n            \n                \ngetSize(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:237\n                \n            \n\n\n            \n                \n                    gets Size of the Cell based on the percentage value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hex2rgb\n                        \n                    \n                \n            \n            \n                \nhex2rgb(hex: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:179\n                \n            \n\n\n            \n                \n                    Converts HexCode to RGB\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hex\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RGBTriplet\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHighlighted\n                        \n                    \n                \n            \n            \n                \nisHighlighted(row: DataRow)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:149\n                \n            \n\n\n            \n                \n                    Returns true if id matches the cell id of the row\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                DataRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Highlighted row\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lerp\n                        \n                    \n                \n            \n            \n                \nlerp(value: number, min: number, max: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:170\n                \n            \n\n\n            \n                \n                    Lerp function to give value beween min and max value based on the given value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHoverId\n                        \n                    \n                \n            \n            \n                \nsetHoverId(hoverId?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:283\n                \n            \n\n\n            \n                \n                    Sets and emits cell type id on row hover\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hoverId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        cell type id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortTable\n                        \n                    \n                \n            \n            \n                \nsortTable()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:133\n                \n            \n\n\n            \n                \n                    Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource>([])\n                    \n                \n                    \n                        \n                                Defined in src/lib/biomarker-table/biomarker-table.component.ts:107\n                        \n                    \n\n            \n                \n                    Source for the table\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        columnsWithTypeAndCount\n                    \n                \n\n                \n                    \n                        getcolumnsWithTypeAndCount()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:102\n                                \n                            \n                    \n                        \n                                Getter method to provide the definations of the columns\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Cell id which is hovered, used for highlighting */\n  @Input() highlightedCellId = '';\n\n  /** List of cell ids in the illustration */\n  @Input() illustrationIds: string[] = [];\n\n  /** Emits cell type label when row is hovered */\n  @Output() readonly rowHover = new EventEmitter();\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * Sets the data source for the table on every change\n   * Sorts the biomarker table on illustrationLabels change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n\n    if ('illustrationIds' in changes) {\n      if (!changes['illustrationIds'].previousValue) {\n        return;\n      }\n      if (changes['illustrationIds'].currentValue.toString() === changes['illustrationIds'].previousValue.toString()) {\n        return;\n      }\n      this.sortTable();\n    }\n  }\n\n  /**\n   * Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n   */\n  sortTable(): void {\n    this.dataSource.data = this.data.sort((a, b) => {\n      return a[0].toLowerCase()  {\n      const id1 = this.illustrationIds.includes(this.getHoverId(a));\n      const id2 = this.illustrationIds.includes(this.getHoverId(b));\n      return id1 && !id2 ? -1 : 1;\n    });\n  }\n\n  /**\n   * Returns true if id matches the cell id of the row\n   * @param row Highlighted row\n   */\n  isHighlighted(row: DataRow): boolean {\n    return this.getHoverId(row) === this.highlightedCellId;\n  }\n\n  /**\n   * Gets hover id from row\n   * @param data row data\n   * @returns cell type id\n   */\n  getHoverId(data: DataRow): string {\n    const entry = data.slice(2).find((entry) => entry) as T;\n    return entry?.data.cell;\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * Processes the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n\n  /**\n   * Sets and emits cell type id on row hover\n   * @param hoverId cell type id\n   */\n  setHoverId(hoverId?: string): void {\n    this.highlightedCellId = hoverId ?? '';\n    this.rowHover.emit(hoverId);\n  }\n}\n\n    \n\n    \n        \n  \n    Cell type table by Biomarker\n  \n\n  \n    Cell Type\n\n    \n      {{ element[0] }}\n      {{ element[0] }}\n    \n  \n\n  \n    Cell Count\n\n    \n      {{ element[1] !== undefined ? (element[1] | number) : 'no data' }}\n    \n  \n\n  \n    \n      {{ column }}\n    \n\n    \n      \n      \n\n      \n        \n      \n    \n  \n\n  \n  \n\n\n\n  \n    {{ columnName }}\n  \n\n\n\n   \n\n\n    \n\n    \n                \n                    ./biomarker-table.component.scss\n                \n                @use 'utils';\n@use 'variables' as vars;\n\n:host {\n  display: block;\n\n  .sr-only {\n    @include utils.sr-only();\n  }\n\n  .table {\n    margin-left: -1px;\n\n    .highlight {\n      background-color: #f8f9fa;\n    }\n    td.type {\n      text-transform: lowercase;\n    }\n  }\n\n  .table th {\n    background-color: #fff7f8;\n    color: #59264d;\n    text-align: right;\n    font-weight: 400;\n  }\n\n  .table td {\n    border-bottom: 0.063rem solid #d3d3d3;\n    border-left: 0.063rem solid #d3d3d3;\n  }\n\n  .table tr {\n    height: 3rem;\n  }\n\n  .table tr:first-child td {\n    border-top: 0rem solid #d3d3d3;\n  }\n\n  tr > td:first-child {\n    text-align: left;\n    padding: 0 2rem;\n  }\n\n  tr > th:first-child {\n    text-align: left;\n    padding: 0 2rem;\n  }\n\n  tr > td:last-of-type {\n    border-right: 0.063rem solid #d3d3d3;\n  }\n\n  tr > th:last-of-type {\n    border-right: 0.063rem solid #d3d3d3;\n    border-left: solid #d3d3d3 1px;\n  }\n\n  .type {\n    height: 3rem;\n    max-width: 26rem;\n    min-width: 17rem;\n    border-radius: 0rem;\n    white-space: nowrap;\n\n    .pseudo-type {\n      font-weight: bold;\n      opacity: 0;\n      height: 0;\n    }\n\n    &.highlight {\n      font-weight: bold;\n    }\n  }\n\n  .count {\n    text-align: right;\n    height: 3rem;\n    min-width: 6.5rem;\n  }\n\n  th:not(:first-child) {\n    border-left: solid #d3d3d3 1px;\n  }\n\n  .icon-header {\n    max-width: 5rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .icon-cell {\n    max-width: 5rem;\n    min-height: 3rem;\n\n    .icon {\n      margin: auto;\n    }\n  }\n}\n\n::ng-deep .mat-mdc-tab-header {\n  margin-left: -1px !important;\n}\n\n.mat-mdc-row:hover .mat-mdc-cell {\n  background-color: #f8f9fa;\n}\n\n::ng-deep .biomarker-table-hover.full-column-name {\n  display: flex;\n  padding: 1rem 1.5rem;\n  border-radius: 0.5rem;\n  box-shadow: 0.063rem 0.125rem 1rem 0.125rem rgba(0, 0, 0, 0.16);\n  background-color: vars.$primary-contrast-rgb;\n  overflow: auto;\n  max-width: fit-content;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Cell type table by Biomarker        Cell Type          {{ element[0] }}      {{ element[0] }}            Cell Count          {{ element[1] !== undefined ? (element[1] | number) : \\'no data\\' }}                  {{ column }}                                                        {{ columnName }}     '\n    var COMPONENTS = [{'name': 'BiomarkerTableComponent', 'selector': 'hra-biomarker-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BiomarkerTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataCell.html":{"url":"interfaces/DataCell.html","title":"interface - DataCell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataCell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a single cell of the table.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the color of the icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the data for the data card\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the size of the icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Cell id which is hovered, used for highlighting */\n  @Input() highlightedCellId = '';\n\n  /** List of cell ids in the illustration */\n  @Input() illustrationIds: string[] = [];\n\n  /** Emits cell type label when row is hovered */\n  @Output() readonly rowHover = new EventEmitter();\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * Sets the data source for the table on every change\n   * Sorts the biomarker table on illustrationLabels change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n\n    if ('illustrationIds' in changes) {\n      if (!changes['illustrationIds'].previousValue) {\n        return;\n      }\n      if (changes['illustrationIds'].currentValue.toString() === changes['illustrationIds'].previousValue.toString()) {\n        return;\n      }\n      this.sortTable();\n    }\n  }\n\n  /**\n   * Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n   */\n  sortTable(): void {\n    this.dataSource.data = this.data.sort((a, b) => {\n      return a[0].toLowerCase()  {\n      const id1 = this.illustrationIds.includes(this.getHoverId(a));\n      const id2 = this.illustrationIds.includes(this.getHoverId(b));\n      return id1 && !id2 ? -1 : 1;\n    });\n  }\n\n  /**\n   * Returns true if id matches the cell id of the row\n   * @param row Highlighted row\n   */\n  isHighlighted(row: DataRow): boolean {\n    return this.getHoverId(row) === this.highlightedCellId;\n  }\n\n  /**\n   * Gets hover id from row\n   * @param data row data\n   * @returns cell type id\n   */\n  getHoverId(data: DataRow): string {\n    const entry = data.slice(2).find((entry) => entry) as T;\n    return entry?.data.cell;\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * Processes the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n\n  /**\n   * Sets and emits cell type id on row hover\n   * @param hoverId cell type id\n   */\n  setHoverId(hoverId?: string): void {\n    this.highlightedCellId = hoverId ?? '';\n    this.rowHover.emit(hoverId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueInfo.html":{"url":"interfaces/TissueInfo.html","title":"interface - TissueInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TissueInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Details of the Tissue\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID of the Tissue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the Tissue\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Cell id which is hovered, used for highlighting */\n  @Input() highlightedCellId = '';\n\n  /** List of cell ids in the illustration */\n  @Input() illustrationIds: string[] = [];\n\n  /** Emits cell type label when row is hovered */\n  @Output() readonly rowHover = new EventEmitter();\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * Sets the data source for the table on every change\n   * Sorts the biomarker table on illustrationLabels change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n\n    if ('illustrationIds' in changes) {\n      if (!changes['illustrationIds'].previousValue) {\n        return;\n      }\n      if (changes['illustrationIds'].currentValue.toString() === changes['illustrationIds'].previousValue.toString()) {\n        return;\n      }\n      this.sortTable();\n    }\n  }\n\n  /**\n   * Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n   */\n  sortTable(): void {\n    this.dataSource.data = this.data.sort((a, b) => {\n      return a[0].toLowerCase()  {\n      const id1 = this.illustrationIds.includes(this.getHoverId(a));\n      const id2 = this.illustrationIds.includes(this.getHoverId(b));\n      return id1 && !id2 ? -1 : 1;\n    });\n  }\n\n  /**\n   * Returns true if id matches the cell id of the row\n   * @param row Highlighted row\n   */\n  isHighlighted(row: DataRow): boolean {\n    return this.getHoverId(row) === this.highlightedCellId;\n  }\n\n  /**\n   * Gets hover id from row\n   * @param data row data\n   * @returns cell type id\n   */\n  getHoverId(data: DataRow): string {\n    const entry = data.slice(2).find((entry) => entry) as T;\n    return entry?.data.cell;\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * Processes the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n\n  /**\n   * Sets and emits cell type id on row hover\n   * @param hoverId cell type id\n   */\n  setHoverId(hoverId?: string): void {\n    this.highlightedCellId = hoverId ?? '';\n    this.rowHover.emit(hoverId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @hra-ui/theming : *\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncomponents-organisms\nThis library was generated with Nx.\nRunning unit tests\nRun nx test components-organisms to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataRow   (src/.../biomarker-table.component.ts)\n                        \n                        \n                            RGBTriplet   (src/.../biomarker-table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/biomarker-table/biomarker-table.component.ts\n    \n    \n        \n            \n                \n                    \n                    DataRow\n                \n            \n            \n                \n                    Describes the composition of a single row in the table\n\n                \n            \n            \n                \n                        [string, , ...[]]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RGBTriplet\n                \n            \n            \n                \n                    RGBTriblet of type RGB to store color\n\n                \n            \n            \n                \n                        [number, number, number]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
