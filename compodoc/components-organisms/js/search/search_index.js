var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/BiomarkerTableComponent.html",[0,0.646,1,0.863]],["body/components/BiomarkerTableComponent.html",[0,0.549,1,0.858,2,0.986,3,0.445,4,1.128,5,0.804,6,0.804,7,0.804,8,0.804,9,0.445,10,1.465,11,1.465,12,0.339,13,0.964,14,2.035,15,1.128,16,1.521,17,0.746,18,0.746,19,1.257,20,0.746,21,0.746,22,0.746,23,0.964,24,0.804,25,0.746,26,0.746,27,0.964,28,1.035,29,1.805,30,0.746,31,0.964,32,0.746,33,0.746,34,0.642,35,0.425,36,1.128,37,1.257,38,1.349,39,1.349,40,1.349,41,1.349,42,1.349,43,1.349,44,1.349,45,1.349,46,1.349,47,1.128,48,1.128,49,1.349,50,1.445,51,1.853,52,1.36,53,0.964,54,1.128,55,0.964,56,1.199,57,1.349,58,0.964,59,1.349,60,0.964,61,1.578,62,0.112,63,1.439,64,2.739,65,2.075,66,3.451,67,0.804,68,1.302,69,0.804,70,0.746,71,0.964,72,0.804,73,0.746,74,0.746,75,0.746,76,0.746,77,0.804,78,1.892,79,1.128,80,0.746,81,0.746,82,0.804,83,0.746,84,0.746,85,1.128,86,0.964,87,0.804,88,0.746,89,1.747,90,1.128,91,0.746,92,1.874,93,0.746,94,0.804,95,0.746,96,0.964,97,1.445,98,0.746,99,0.964,100,0.804,101,0.746,102,1.409,103,0.804,104,1.578,105,0.804,106,0.804,107,1.272,108,2.848,109,1.83,110,2.848,111,1.892,112,0.804,113,0.804,114,0.746,115,0.964,116,1.128,117,0.746,118,0.804,119,1.445,120,0.746,121,0.804,122,1.778,123,1.778,124,0.964,125,1.445,126,1.516,127,0.986,128,0.804,129,0.804,130,1.257,131,1.36,132,0.746,133,0.804,134,0.746,135,0.804,136,0.746,137,0.746,138,0.858,139,0.746,140,0.956,141,0.746,142,0.804,143,0.964,144,0.746,145,0.746,146,0.746,147,0.746,148,0.804,149,0.746,150,0.746,151,0.746,152,0.746,153,0.804,154,0.964,155,0.746,156,0.746,157,0.964,158,0.964,159,0.964,160,0.964,161,0.804,162,0.804,163,0.804,164,0.746,165,0.746,166,0.746,167,0.746,168,1.36,169,0.445,170,0.746,171,0.746,172,0.339,173,0.746,174,0.339,175,0.746,176,0.445,177,0.746,178,0.746,179,0.746,180,0.445,181,0.746,182,0.445,183,0.445,184,0.339,185,0.339,186,0.549,187,0.445,188,0.568,189,1.128,190,0.339,191,0.964,192,1.257,193,0.445,194,0.746,195,0.964,196,0.339,197,0.339,198,1.257,199,0.964,200,0.445,201,0.445,202,0.445,203,1.778,204,1.128,205,0.445,206,0.445,207,0.964,208,0.445,209,1.673,210,0.964,211,0.445,212,0.445,213,0.746,214,0.445,215,0.445,216,0.445,217,0.445,218,0.445,219,0.445,220,0.964,221,0.445,222,1.628,223,0.746,224,0.445,225,0.746,226,0.445,227,0.733,228,0.445,229,0.445,230,0.746,231,0.445,232,0.445,233,0.746,234,0.445,235,0.445,236,0.964,237,0.746,238,0.445,239,0.445,240,0.445,241,0.445,242,0.445,243,0.445,244,0.445,245,0.445,246,0.445,247,0.445,248,0.445,249,0.746,250,0.445,251,0.445,252,0.445,253,0.445,254,0.746,255,0.746,256,0.445,257,0.445,258,0.746,259,0.445,260,0.339,261,0.445,262,1.257,263,0.445,264,0.445,265,0.445,266,0.445,267,0.445,268,0.339,269,0.445,270,0.445,271,0.445,272,0.445,273,1.349,274,2.039,275,1.742,276,1.349,277,1.349,278,0.804,279,0.804,280,0.804,281,0.804,282,1.349,283,0.804,284,0.804,285,0.804,286,0.804,287,1.742,288,2.611,289,2.039,290,0.804,291,2.039,292,1.349,293,0.804,294,2.458,295,0.804,296,0.804,297,0.804,298,0.804,299,0.804,300,2.039,301,2.039,302,0.804,303,0.804,304,0.804,305,1.349,306,2.848,307,0.804,308,2.271,309,2.611,310,2.611,311,2.271,312,2.039,313,2.039,314,0.804,315,2.039,316,1.349,317,0.804,318,1.742,319,1.349,320,0.804,321,0.804,322,0.804,323,2.458,324,0.804,325,0.804,326,1.349,327,1.349,328,1.349,329,0.804,330,0.804,331,1.349,332,1.349,333,1.742,334,0.804,335,0.804,336,1.349,337,1.349,338,1.349,339,1.742,340,1.742,341,0.804,342,0.804,343,0.804,344,0.804,345,0.804,346,1.349,347,0.804,348,0.804,349,0.804,350,0.804,351,1.349,352,0.804,353,0.804,354,0.804,355,0.804,356,0.804,357,0.804,358,0.804,359,1.349,360,1.349,361,0.804,362,2.039,363,0.804,364,0.804,365,0.804,366,0.036,367,0.036]],["title/interfaces/DataCell.html",[186,0.646,190,0.863]],["body/interfaces/DataCell.html",[0,0.613,1,0.533,3,0.701,4,1.309,9,0.701,10,0.533,11,0.533,12,0.533,13,0.701,14,2.003,15,1.076,16,1.475,17,0.701,18,0.701,19,1.309,20,0.701,21,0.701,22,0.701,23,1.076,25,0.701,26,0.701,27,0.701,28,1.116,29,1.739,30,0.701,31,0.701,32,0.701,33,0.701,34,0.836,35,0.613,36,1.076,37,1.309,47,0.701,48,0.701,50,1.309,51,2.003,52,1.076,53,0.701,54,1.076,55,0.701,56,1.204,58,0.701,60,0.701,61,1.493,62,0.112,63,1.493,65,2.061,68,1.204,70,0.701,71,1.076,73,0.701,74,0.701,75,0.701,76,0.701,78,1.963,79,1.076,80,0.701,81,0.701,83,0.701,84,0.701,85,1.076,86,1.076,88,0.701,89,1.911,90,0.701,91,0.701,92,2.003,93,0.701,95,0.701,96,1.076,97,1.671,98,0.701,99,1.076,101,0.701,102,1.454,104,1.567,107,1.365,109,1.468,111,1.739,114,0.701,115,1.076,116,1.076,117,0.701,119,1.309,120,0.701,122,1.671,123,1.583,124,0.701,125,1.309,126,1.671,127,1.42,130,1.739,131,1.309,132,0.701,134,0.701,136,0.701,137,0.701,138,0.818,139,0.701,140,1.116,141,0.701,143,1.076,144,0.701,145,0.701,146,0.701,147,0.701,149,0.701,150,0.701,151,0.701,152,0.701,154,1.076,155,0.701,156,0.701,157,0.701,158,1.076,159,1.076,160,1.076,164,0.701,165,0.701,166,0.701,167,0.701,168,1.671,169,0.701,170,1.076,171,1.076,172,0.533,173,1.076,174,0.533,175,1.076,176,0.701,177,1.076,178,1.076,179,1.076,180,0.701,181,1.076,182,0.701,183,0.701,184,0.533,185,0.533,186,0.836,187,1.076,188,0.995,189,1.468,190,0.818,191,1.671,192,1.468,193,1.076,194,1.076,195,1.309,196,0.533,197,0.533,198,1.309,199,1.309,200,0.701,201,0.701,202,0.701,203,1.984,204,0.701,205,0.701,206,0.701,207,1.309,208,0.701,209,1.911,210,1.309,211,0.701,212,0.701,213,1.076,214,0.701,215,0.701,216,0.701,217,0.701,218,0.701,219,0.701,220,1.309,221,0.701,222,1.879,223,1.076,224,0.701,225,1.076,226,0.701,227,0.995,228,0.701,229,0.701,230,1.076,231,0.701,232,0.701,233,1.076,234,0.701,235,0.701,236,1.309,237,1.076,238,0.701,239,0.701,240,0.701,241,0.701,242,0.701,243,0.701,244,0.701,245,0.701,246,0.701,247,0.701,248,0.701,249,1.076,250,0.701,251,0.701,252,0.701,253,0.701,254,1.076,255,1.076,256,0.701,257,0.701,258,1.076,259,0.701,260,0.533,261,0.701,262,0.701,263,0.701,264,0.701,265,0.701,266,0.701,267,0.701,268,0.533,269,0.701,270,0.701,271,0.701,272,0.701,366,0.053,367,0.053,368,0.701]],["title/interfaces/TissueInfo.html",[56,0.863,186,0.646]],["body/interfaces/TissueInfo.html",[0,0.619,1,0.54,3,0.711,4,1.32,9,0.711,10,0.54,11,0.54,12,0.54,13,0.711,14,1.99,15,1.087,16,1.458,17,0.711,18,0.711,19,1.32,20,0.711,21,0.711,22,0.711,23,1.087,25,0.711,26,0.711,27,0.711,28,1.124,29,1.748,30,0.711,31,0.711,32,0.711,33,0.711,34,0.842,35,0.619,36,1.087,37,1.32,47,0.711,48,0.711,50,1.32,51,1.885,52,1.087,53,0.711,54,1.087,55,0.711,56,1.278,58,0.711,60,0.711,61,1.434,62,0.112,63,1.528,65,2.065,68,1.211,70,0.711,71,1.087,73,0.711,74,0.711,75,0.711,76,0.711,78,2.04,79,1.087,80,0.711,81,0.711,83,0.711,84,0.711,85,1.087,86,1.087,88,0.711,89,1.917,90,0.711,91,0.711,92,2.053,93,0.711,95,0.711,96,1.32,97,1.848,98,0.711,99,1.087,101,0.711,102,1.458,104,1.551,107,1.124,109,1.593,111,1.748,114,0.711,115,1.087,116,1.087,117,0.711,119,1.32,120,0.711,122,1.68,123,1.593,124,0.711,125,1.32,126,1.68,130,1.32,131,1.32,132,0.711,134,0.711,136,0.711,137,0.711,138,0.827,139,0.711,140,1.124,141,0.711,143,1.087,144,0.711,145,0.711,146,0.711,147,0.711,149,0.711,150,0.711,151,0.711,152,0.711,154,1.087,155,0.711,156,0.711,157,0.711,158,1.087,159,1.087,160,1.087,164,0.711,165,0.711,166,0.711,167,0.711,168,1.68,169,0.711,170,1.087,171,1.087,172,0.54,173,1.087,174,0.54,175,1.087,176,0.711,177,1.087,178,1.087,179,1.087,180,0.711,181,1.087,182,0.711,183,0.711,184,0.54,185,0.54,186,0.752,187,0.711,188,0.827,189,1.478,190,0.54,191,1.32,192,1.087,193,0.711,194,1.087,195,1.32,196,0.54,197,0.54,198,1.32,199,1.32,200,0.711,201,0.711,202,0.711,203,1.99,204,0.711,205,0.711,206,0.711,207,1.32,208,0.711,209,1.917,210,1.32,211,0.711,212,0.711,213,1.087,214,0.711,215,0.711,216,0.711,217,0.711,218,0.711,219,0.711,220,1.32,221,0.711,222,1.885,223,1.087,224,0.711,225,1.087,226,0.711,227,1.004,228,0.711,229,0.711,230,1.087,231,0.711,232,0.711,233,1.087,234,0.711,235,0.711,236,1.32,237,1.087,238,0.711,239,0.711,240,0.711,241,0.711,242,0.711,243,0.711,244,0.711,245,0.711,246,0.711,247,0.711,248,0.711,249,1.087,250,0.711,251,0.711,252,0.711,253,0.711,254,1.087,255,1.087,256,0.711,257,0.711,258,1.087,259,0.711,260,0.54,261,0.711,262,0.711,263,0.711,264,0.711,265,0.711,266,0.711,267,0.711,268,0.54,269,0.711,270,0.711,271,0.711,272,0.711,366,0.053,367,0.053,368,0.711]],["title/dependencies.html",[369,1.268,370,1.792]],["body/dependencies.html",[28,1.298,62,0.107,172,1.298,174,1.298,366,0.096,367,0.096,370,2.591,371,3.083,372,3.083,373,3.083,374,3.546,375,3.083]],["title/index.html",[34,0.547,376,1.736,377,1.736]],["body/index.html",[2,2.591,62,0.096,260,1.493,366,0.096,367,0.096,378,3.546,379,3.083,380,3.083,381,3.546,382,3.083,383,3.546,384,3.083,385,3.083,386,3.083]],["title/modules.html",[387,2.009]],["body/modules.html",[62,0.097,366,0.097,367,0.097,387,2.315]],["title/overview.html",[388,2.009]],["body/overview.html",[0,0.991,62,0.097,227,1.324,268,1.324,366,0.097,367,0.097,368,1.741,388,2.298]],["title/properties.html",[35,0.773,369,1.268]],["body/properties.html",[35,0.993,62,0.102,366,0.097,367,0.097,389,3.151,390,3.151]],["title/miscellaneous/typealiases.html",[391,1.268,392,2.452]],["body/miscellaneous/typealiases.html",[10,1.263,11,1.263,12,1.554,16,1.263,34,0.946,61,1.47,62,0.103,63,1.263,68,1.47,102,1.263,104,1.554,107,1.263,138,1.263,140,1.47,184,1.263,185,1.263,188,1.263,196,1.263,197,1.263,366,0.094,367,0.094,391,2.193,393,3.001,394,3.492]]],"invertedIndex":[["",{"_index":62,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":262,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["0.0.1",{"_index":390,"title":{},"body":{"properties.html":{}}}],["0.063rem",{"_index":308,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.125rem",{"_index":351,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.16",{"_index":353,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.5rem",{"_index":348,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0rem",{"_index":316,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1",{"_index":227,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["1.5rem",{"_index":347,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["100",{"_index":248,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["15.1.0",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":236,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["17rem",{"_index":325,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1px",{"_index":289,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1rem",{"_index":346,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["2",{"_index":268,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["2.3.0",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["26rem",{"_index":324,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["2rem",{"_index":319,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["3",{"_index":235,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["3rem",{"_index":313,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["400",{"_index":304,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["5",{"_index":239,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["59264d",{"_index":299,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["5rem",{"_index":332,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["6.5rem",{"_index":329,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["7",{"_index":241,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["a[0].tolowercase",{"_index":221,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["accessors",{"_index":59,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["actual_component",{"_index":365,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["aliases",{"_index":393,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":300,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["along",{"_index":74,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["alphabetically",{"_index":155,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["angular/common",{"_index":174,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/core",{"_index":172,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/material/table",{"_index":176,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["arr",{"_index":245,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["auto",{"_index":336,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["b",{"_index":220,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["background",{"_index":291,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["based",{"_index":125,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["beween",{"_index":151,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarker",{"_index":29,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertablecomponent",{"_index":1,"title":{"components/BiomarkerTableComponent.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledatacardcomponent",{"_index":177,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledataiconcomponent",{"_index":178,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["block",{"_index":283,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["boolean",{"_index":146,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["border",{"_index":306,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["bottom",{"_index":307,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["box",{"_index":349,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["calculates",{"_index":106,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["card",{"_index":193,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["carrying",{"_index":95,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cell",{"_index":14,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cells",{"_index":19,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["change",{"_index":207,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetection",{"_index":25,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy",{"_index":169,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy.onpush",{"_index":26,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes",{"_index":210,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes['illustrationids'].currentvalue.tostring",{"_index":216,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes['illustrationids'].previousvalue",{"_index":215,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes['illustrationids'].previousvalue.tostring",{"_index":217,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["child",{"_index":315,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["circle",{"_index":91,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cl",{"_index":264,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["class",{"_index":202,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["color",{"_index":107,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["colors",{"_index":73,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["column",{"_index":275,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["columnname",{"_index":276,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["columns",{"_index":50,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["columnswithtypeandcount",{"_index":60,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["commonmodule",{"_index":173,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["component",{"_index":0,"title":{"components/BiomarkerTableComponent.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["component_template",{"_index":363,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"index.html":{}}}],["composition",{"_index":197,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["consisting",{"_index":211,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["const",{"_index":222,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["content",{"_index":357,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["contrast",{"_index":355,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["converts",{"_index":136,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["count",{"_index":204,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["d3d3d3",{"_index":310,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["data",{"_index":51,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["data.slice(2).find((entry",{"_index":231,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datacell",{"_index":190,"title":{"interfaces/DataCell.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dataitem",{"_index":179,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datarow",{"_index":68,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["dataset_count",{"_index":195,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasets",{"_index":194,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasource",{"_index":37,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["deep",{"_index":338,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["default",{"_index":64,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["definations",{"_index":167,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["defined",{"_index":66,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["dependencies",{"_index":370,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describes",{"_index":196,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["describing",{"_index":17,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["details",{"_index":96,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["directive",{"_index":361,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["directives",{"_index":364,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["display",{"_index":282,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["displayed",{"_index":93,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element",{"_index":360,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element[0",{"_index":273,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element[1",{"_index":274,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ellipsis",{"_index":335,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["emits",{"_index":101,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["entry",{"_index":230,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["entry?.data.cell",{"_index":232,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["eventemitter",{"_index":99,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["execute",{"_index":386,"title":{},"body":{"index.html":{}}}],["export",{"_index":189,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["expression",{"_index":271,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["f8f9fa",{"_index":292,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["fff7f8",{"_index":298,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["fit",{"_index":356,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["flex",{"_index":345,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["font",{"_index":302,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["function",{"_index":149,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["functional",{"_index":259,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["g",{"_index":237,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gene",{"_index":266,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["generated",{"_index":380,"title":{},"body":{"index.html":{}}}],["getcolor",{"_index":39,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getcolor(value",{"_index":103,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getcolumnswithtypeandcount",{"_index":162,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverdata",{"_index":40,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverdata([index",{"_index":257,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gethoverdata(undefined",{"_index":112,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverid",{"_index":41,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverid(data",{"_index":117,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getminmaxcolor",{"_index":42,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxcolor(meanexpression",{"_index":120,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getminmaxsize",{"_index":43,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxsize(percentage",{"_index":128,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gets",{"_index":119,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getsize",{"_index":44,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getsize(value",{"_index":132,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getter",{"_index":164,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getting",{"_index":376,"title":{"index.html":{}},"body":{}}],["give",{"_index":150,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["given",{"_index":152,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["grade",{"_index":124,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradient",{"_index":52,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradientpoint",{"_index":71,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["header",{"_index":331,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["height",{"_index":312,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hex",{"_index":139,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hex2rgb",{"_index":45,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hex2rgb(hex",{"_index":134,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hexcode",{"_index":137,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hgnc",{"_index":269,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hidden",{"_index":334,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["highlight",{"_index":290,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["highlighted",{"_index":145,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["highlightedcellid",{"_index":53,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["highlighting",{"_index":81,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["host",{"_index":281,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hover",{"_index":116,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hover.full",{"_index":344,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hoverdirective",{"_index":181,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hovered",{"_index":79,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hra",{"_index":28,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["html",{"_index":359,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["icon",{"_index":192,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id",{"_index":78,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id1",{"_index":223,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id2",{"_index":225,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ids",{"_index":84,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustration",{"_index":85,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustrationids",{"_index":54,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustrationlabels",{"_index":208,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["implements",{"_index":22,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["import",{"_index":168,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["important",{"_index":342,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["imports",{"_index":201,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["include",{"_index":285,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["input",{"_index":89,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["inputs",{"_index":49,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["interface",{"_index":186,"title":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["interfaces",{"_index":368,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["ishighlighted",{"_index":46,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ishighlighted(row",{"_index":141,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["item.percentage",{"_index":246,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["join",{"_index":253,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["label",{"_index":92,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["left",{"_index":288,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["legend",{"_index":358,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["lerp",{"_index":47,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["lerp(value",{"_index":147,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["library",{"_index":379,"title":{},"body":{"index.html":{}}}],["list",{"_index":83,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["literal",{"_index":127,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{}}}],["lowercase",{"_index":296,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["map((component",{"_index":251,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["margin",{"_index":287,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["mat",{"_index":339,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["matches",{"_index":144,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["matching",{"_index":367,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.round(component).tostring(16",{"_index":252,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mattabledatasource",{"_index":160,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mattablemodule",{"_index":175,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["max",{"_index":123,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor",{"_index":243,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor[index",{"_index":250,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxsize",{"_index":255,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mdc",{"_index":340,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["mean",{"_index":270,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression",{"_index":126,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression.tofixed(6",{"_index":272,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["method",{"_index":165,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["methods",{"_index":38,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["min",{"_index":122,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mincolor",{"_index":242,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["minsize",{"_index":254,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["miscellaneous",{"_index":391,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["modules",{"_index":387,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":109,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["new",{"_index":159,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ng",{"_index":337,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ngonchanges(changes",{"_index":212,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["nowrap",{"_index":328,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["number",{"_index":104,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nx",{"_index":381,"title":{},"body":{"index.html":{}}}],["object",{"_index":115,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["onchanges",{"_index":23,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["open",{"_index":98,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["optional",{"_index":110,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["organ",{"_index":21,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["organisms",{"_index":378,"title":{},"body":{"index.html":{}}}],["output",{"_index":170,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["outputs",{"_index":57,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["overflow",{"_index":333,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["overview",{"_index":388,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":369,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":318,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["param",{"_index":209,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["parsefloat(item.label",{"_index":247,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(1",{"_index":234,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(3",{"_index":238,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(5",{"_index":240,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["peer",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":131,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["points",{"_index":76,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["processes",{"_index":114,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["properties",{"_index":35,"title":{"properties.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"properties.html":{}}}],["provide",{"_index":166,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["puts",{"_index":156,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["quanitites",{"_index":18,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["r",{"_index":233,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["radius",{"_index":90,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["readonly",{"_index":36,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["representing",{"_index":187,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["represents",{"_index":191,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["results",{"_index":366,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":203,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["returns",{"_index":111,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rgb",{"_index":138,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgba(0",{"_index":352,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["rgbtriblet",{"_index":184,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgbtriplet",{"_index":140,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["right",{"_index":301,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["row",{"_index":102,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["row:hover",{"_index":343,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["row[0",{"_index":263,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[1",{"_index":265,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[index",{"_index":258,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rowhover",{"_index":58,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rows",{"_index":70,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["run",{"_index":384,"title":{},"body":{"index.html":{}}}],["running",{"_index":382,"title":{},"body":{"index.html":{}}}],["selector",{"_index":27,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sets",{"_index":206,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["shadow",{"_index":350,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["simplechanges",{"_index":171,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["single",{"_index":188,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":130,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizelegend",{"_index":86,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizes",{"_index":55,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["solid",{"_index":309,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["sorts",{"_index":154,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sorttable",{"_index":48,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["space",{"_index":327,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["specific",{"_index":20,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sr",{"_index":284,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["src/.../biomarker",{"_index":394,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/biomarker",{"_index":10,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["standalone",{"_index":200,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["started",{"_index":377,"title":{"index.html":{}},"body":{}}],["stop",{"_index":75,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["store",{"_index":185,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":63,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["styleurls",{"_index":30,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["t",{"_index":199,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tab",{"_index":341,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table",{"_index":16,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.html",{"_index":33,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.scss",{"_index":31,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.ts",{"_index":12,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.ts:102",{"_index":163,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:107",{"_index":161,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:133",{"_index":153,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:149",{"_index":142,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:158",{"_index":118,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:170",{"_index":148,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:179",{"_index":135,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:191",{"_index":121,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:207",{"_index":129,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:221",{"_index":105,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:237",{"_index":133,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:248",{"_index":113,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:75",{"_index":94,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:81",{"_index":67,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:84",{"_index":69,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:87",{"_index":72,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:90",{"_index":87,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:93",{"_index":77,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:96",{"_index":82,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:99",{"_index":100,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table/biomarker",{"_index":11,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["taking",{"_index":88,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["td",{"_index":305,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td.type",{"_index":293,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td:first",{"_index":317,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td:last",{"_index":321,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["templateurl",{"_index":32,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["test",{"_index":385,"title":{},"body":{"index.html":{}}}],["tests",{"_index":383,"title":{},"body":{"index.html":{}}}],["text",{"_index":294,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th",{"_index":297,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:first",{"_index":320,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:last",{"_index":322,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:not(:first",{"_index":330,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["this.columns",{"_index":205,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.columns[index",{"_index":267,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.data",{"_index":214,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.data.sort((a",{"_index":219,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.datasource.data",{"_index":213,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.gethoverid(row",{"_index":228,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.getminmaxsize(value",{"_index":256,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.gradient.findindex((item",{"_index":244,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.highlightedcellid",{"_index":229,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.illustrationids.includes(this.gethoverid(a",{"_index":224,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.illustrationids.includes(this.gethoverid(b",{"_index":226,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.lerp(value",{"_index":249,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.sorttable",{"_index":218,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissue",{"_index":97,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissueinfo",{"_index":56,"title":{"interfaces/TissueInfo.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["top",{"_index":157,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tr",{"_index":311,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tr:first",{"_index":314,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["transform",{"_index":295,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["true",{"_index":143,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tslib",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":61,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":392,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":15,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["uberon",{"_index":261,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/cdk",{"_index":182,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/atoms",{"_index":183,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/molecules",{"_index":180,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/theming",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":198,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["unit",{"_index":260,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"index.html":{}}}],["use",{"_index":277,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["used",{"_index":80,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["utils",{"_index":278,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["utils.sr",{"_index":286,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["value",{"_index":65,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["var",{"_index":362,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["variables",{"_index":279,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["vars",{"_index":280,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["vars.$primary",{"_index":354,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["version",{"_index":389,"title":{},"body":{"properties.html":{}}}],["void",{"_index":158,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["weight",{"_index":303,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["white",{"_index":326,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["width",{"_index":323,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/BiomarkerTableComponent.html":{"url":"components/BiomarkerTableComponent.html","title":"component - BiomarkerTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BiomarkerTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/biomarker-table/biomarker-table.component.ts\n\n\n\n    \n        Description\n    \n    \n        Cell types table, describing the types and quanitites of cells for a specific organ\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hra-biomarker-table\n            \n\n            \n                styleUrls\n                ./biomarker-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./biomarker-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                dataSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColor\n                            \n                            \n                                getHoverData\n                            \n                            \n                                getHoverId\n                            \n                            \n                                getMinMaxColor\n                            \n                            \n                                getMinMaxSize\n                            \n                            \n                                getSize\n                            \n                            \n                                hex2rgb\n                            \n                            \n                                isHighlighted\n                            \n                            \n                                lerp\n                            \n                            \n                                sortTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                data\n                            \n                            \n                                gradient\n                            \n                            \n                                highlightedCellId\n                            \n                            \n                                illustrationIds\n                            \n                            \n                                sizes\n                            \n                            \n                                tissueInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rowHover\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    columnsWithTypeAndCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:81\n                            \n                        \n                \n                    \n                        Columns for the table\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         DataRow[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:84\n                            \n                        \n                \n                    \n                        Rows of the table\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        gradient\n                    \n                \n                \n                    \n                        Type :     GradientPoint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:87\n                            \n                        \n                \n                    \n                        Gradient colors along with their stop points\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedCellId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:93\n                            \n                        \n                \n                    \n                        Cell id which is hovered, used for highlighting\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        illustrationIds\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:96\n                            \n                        \n                \n                    \n                        List of cell ids in the illustration\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sizes\n                    \n                \n                \n                    \n                        Type :     SizeLegend[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:90\n                            \n                        \n                \n                    \n                        Taking input for the radius of the circle and the label to be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tissueInfo\n                    \n                \n                \n                    \n                        Type :         TissueInfo\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    label: '',\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:75\n                            \n                        \n                \n                    \n                        Input: TissueInfo carrying the details of the tissue open\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rowHover\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:99\n                            \n                        \n                \n                    \n                        Emits cell type label when row is hovered\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:221\n                \n            \n\n\n            \n                \n                    Calculates the color of this value on this gradient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHoverData\n                        \n                    \n                \n            \n            \n                \ngetHoverData(undefined: [number, DataRow])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:248\n                \n            \n\n\n            \n                \n                    Processes the object for hover data for Table Cell\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                [number, DataRow]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHoverId\n                        \n                    \n                \n            \n            \n                \ngetHoverId(data: DataRow)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:158\n                \n            \n\n\n            \n                \n                    Gets hover id from row\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DataRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        row data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        cell type id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinMaxColor\n                        \n                    \n                \n            \n            \n                \ngetMinMaxColor(meanExpression: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:191\n                \n            \n\n\n            \n                \n                    Gets Min and Max color grade based on the meanExpression value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meanExpression\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinMaxSize\n                        \n                    \n                \n            \n            \n                \ngetMinMaxSize(percentage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:207\n                \n            \n\n\n            \n                \n                    Gets Min and Max size grade based on the Percentage value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSize\n                        \n                    \n                \n            \n            \n                \ngetSize(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:237\n                \n            \n\n\n            \n                \n                    gets Size of the Cell based on the percentage value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hex2rgb\n                        \n                    \n                \n            \n            \n                \nhex2rgb(hex: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:179\n                \n            \n\n\n            \n                \n                    Converts HexCode to RGB\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hex\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RGBTriplet\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHighlighted\n                        \n                    \n                \n            \n            \n                \nisHighlighted(row: DataRow)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:149\n                \n            \n\n\n            \n                \n                    Returns true if id matches the cell id of the row\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                DataRow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Highlighted row\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lerp\n                        \n                    \n                \n            \n            \n                \nlerp(value: number, min: number, max: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:170\n                \n            \n\n\n            \n                \n                    Lerp function to give value beween min and max value based on the given value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortTable\n                        \n                    \n                \n            \n            \n                \nsortTable()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:133\n                \n            \n\n\n            \n                \n                    Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource>([])\n                    \n                \n                    \n                        \n                                Defined in src/lib/biomarker-table/biomarker-table.component.ts:107\n                        \n                    \n\n            \n                \n                    Source for the table\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        columnsWithTypeAndCount\n                    \n                \n\n                \n                    \n                        getcolumnsWithTypeAndCount()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:102\n                                \n                            \n                    \n                        \n                                Getter method to provide the definations of the columns\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Cell id which is hovered, used for highlighting */\n  @Input() highlightedCellId = '';\n\n  /** List of cell ids in the illustration */\n  @Input() illustrationIds: string[] = [];\n\n  /** Emits cell type label when row is hovered */\n  @Output() readonly rowHover = new EventEmitter();\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * Sets the data source for the table on every change\n   * Sorts the biomarker table on illustrationLabels change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n\n    if ('illustrationIds' in changes) {\n      if (!changes['illustrationIds'].previousValue) {\n        return;\n      }\n      if (changes['illustrationIds'].currentValue.toString() === changes['illustrationIds'].previousValue.toString()) {\n        return;\n      }\n      this.sortTable();\n    }\n  }\n\n  /**\n   * Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n   */\n  sortTable(): void {\n    this.dataSource.data = this.data.sort((a, b) => {\n      return a[0].toLowerCase()  {\n      const id1 = this.illustrationIds.includes(this.getHoverId(a));\n      const id2 = this.illustrationIds.includes(this.getHoverId(b));\n      return id1 && !id2 ? -1 : 1;\n    });\n  }\n\n  /**\n   * Returns true if id matches the cell id of the row\n   * @param row Highlighted row\n   */\n  isHighlighted(row: DataRow): boolean {\n    return this.getHoverId(row) === this.highlightedCellId;\n  }\n\n  /**\n   * Gets hover id from row\n   * @param data row data\n   * @returns cell type id\n   */\n  getHoverId(data: DataRow): string {\n    const entry = data.slice(2).find((entry) => entry) as T;\n    return entry?.data.cell;\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * Processes the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n}\n\n    \n\n    \n        \n  \n    Cell type table by Biomarker\n  \n\n  \n    Cell Type\n\n    \n      {{ element[0] }}\n    \n  \n\n  \n    Cell Count\n\n    \n      {{ element[1] !== undefined ? (element[1] | number) : 'no data' }}\n    \n  \n\n  \n    \n      {{ column }}\n    \n\n    \n      \n      \n\n      \n        \n      \n    \n  \n\n  \n  \n\n\n\n  \n    {{ columnName }}\n  \n\n\n\n   \n\n\n    \n\n    \n                \n                    ./biomarker-table.component.scss\n                \n                @use 'utils';\n@use 'variables' as vars;\n\n:host {\n  display: block;\n\n  .sr-only {\n    @include utils.sr-only();\n  }\n\n  .table {\n    margin-left: -1px;\n\n    .highlight {\n      background-color: #f8f9fa;\n    }\n    td.type {\n      text-transform: lowercase;\n    }\n  }\n\n  .table th {\n    background-color: #fff7f8;\n    color: #59264d;\n    text-align: right;\n    font-weight: 400;\n  }\n\n  .table td {\n    border-bottom: 0.063rem solid #d3d3d3;\n    border-left: 0.063rem solid #d3d3d3;\n  }\n\n  .table tr {\n    height: 3rem;\n  }\n\n  .table tr:first-child td {\n    border-top: 0rem solid #d3d3d3;\n  }\n\n  tr > td:first-child {\n    text-align: left;\n    padding: 0 2rem;\n  }\n\n  tr > th:first-child {\n    text-align: left;\n    padding: 0 2rem;\n  }\n\n  tr > td:last-of-type {\n    border-right: 0.063rem solid #d3d3d3;\n  }\n\n  tr > th:last-of-type {\n    border-right: 0.063rem solid #d3d3d3;\n    border-left: solid #d3d3d3 1px;\n  }\n\n  .type {\n    height: 3rem;\n    max-width: 26rem;\n    min-width: 17rem;\n    border-radius: 0rem;\n    white-space: nowrap;\n  }\n\n  .count {\n    text-align: right;\n    height: 3rem;\n    min-width: 6.5rem;\n  }\n\n  th:not(:first-child) {\n    border-left: solid #d3d3d3 1px;\n  }\n\n  .icon-header {\n    max-width: 5rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .icon-cell {\n    max-width: 5rem;\n    min-height: 3rem;\n\n    .icon {\n      margin: auto;\n    }\n  }\n}\n\n::ng-deep .mat-mdc-tab-header {\n  margin-left: -1px !important;\n}\n\n.mat-mdc-row:hover .mat-mdc-cell {\n  background-color: #f8f9fa;\n}\n\n::ng-deep .biomarker-table-hover.full-column-name {\n  display: flex;\n  padding: 1rem 1.5rem;\n  border-radius: 0.5rem;\n  box-shadow: 0.063rem 0.125rem 1rem 0.125rem rgba(0, 0, 0, 0.16);\n  background-color: vars.$primary-contrast-rgb;\n  overflow: auto;\n  max-width: fit-content;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Cell type table by Biomarker        Cell Type          {{ element[0] }}            Cell Count          {{ element[1] !== undefined ? (element[1] | number) : \\'no data\\' }}                  {{ column }}                                                        {{ columnName }}     '\n    var COMPONENTS = [{'name': 'BiomarkerTableComponent', 'selector': 'hra-biomarker-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BiomarkerTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataCell.html":{"url":"interfaces/DataCell.html","title":"interface - DataCell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataCell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a single cell of the table.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the color of the icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the data for the data card\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the size of the icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Cell id which is hovered, used for highlighting */\n  @Input() highlightedCellId = '';\n\n  /** List of cell ids in the illustration */\n  @Input() illustrationIds: string[] = [];\n\n  /** Emits cell type label when row is hovered */\n  @Output() readonly rowHover = new EventEmitter();\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * Sets the data source for the table on every change\n   * Sorts the biomarker table on illustrationLabels change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n\n    if ('illustrationIds' in changes) {\n      if (!changes['illustrationIds'].previousValue) {\n        return;\n      }\n      if (changes['illustrationIds'].currentValue.toString() === changes['illustrationIds'].previousValue.toString()) {\n        return;\n      }\n      this.sortTable();\n    }\n  }\n\n  /**\n   * Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n   */\n  sortTable(): void {\n    this.dataSource.data = this.data.sort((a, b) => {\n      return a[0].toLowerCase()  {\n      const id1 = this.illustrationIds.includes(this.getHoverId(a));\n      const id2 = this.illustrationIds.includes(this.getHoverId(b));\n      return id1 && !id2 ? -1 : 1;\n    });\n  }\n\n  /**\n   * Returns true if id matches the cell id of the row\n   * @param row Highlighted row\n   */\n  isHighlighted(row: DataRow): boolean {\n    return this.getHoverId(row) === this.highlightedCellId;\n  }\n\n  /**\n   * Gets hover id from row\n   * @param data row data\n   * @returns cell type id\n   */\n  getHoverId(data: DataRow): string {\n    const entry = data.slice(2).find((entry) => entry) as T;\n    return entry?.data.cell;\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * Processes the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueInfo.html":{"url":"interfaces/TissueInfo.html","title":"interface - TissueInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TissueInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Details of the Tissue\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID of the Tissue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the Tissue\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Cell id which is hovered, used for highlighting */\n  @Input() highlightedCellId = '';\n\n  /** List of cell ids in the illustration */\n  @Input() illustrationIds: string[] = [];\n\n  /** Emits cell type label when row is hovered */\n  @Output() readonly rowHover = new EventEmitter();\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * Sets the data source for the table on every change\n   * Sorts the biomarker table on illustrationLabels change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n\n    if ('illustrationIds' in changes) {\n      if (!changes['illustrationIds'].previousValue) {\n        return;\n      }\n      if (changes['illustrationIds'].currentValue.toString() === changes['illustrationIds'].previousValue.toString()) {\n        return;\n      }\n      this.sortTable();\n    }\n  }\n\n  /**\n   * Sorts table by cell type alphabetically, then puts cells that are in the illustration on top\n   */\n  sortTable(): void {\n    this.dataSource.data = this.data.sort((a, b) => {\n      return a[0].toLowerCase()  {\n      const id1 = this.illustrationIds.includes(this.getHoverId(a));\n      const id2 = this.illustrationIds.includes(this.getHoverId(b));\n      return id1 && !id2 ? -1 : 1;\n    });\n  }\n\n  /**\n   * Returns true if id matches the cell id of the row\n   * @param row Highlighted row\n   */\n  isHighlighted(row: DataRow): boolean {\n    return this.getHoverId(row) === this.highlightedCellId;\n  }\n\n  /**\n   * Gets hover id from row\n   * @param data row data\n   * @returns cell type id\n   */\n  getHoverId(data: DataRow): string {\n    const entry = data.slice(2).find((entry) => entry) as T;\n    return entry?.data.cell;\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * Processes the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @hra-ui/theming : *\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncomponents-organisms\nThis library was generated with Nx.\nRunning unit tests\nRun nx test components-organisms to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataRow   (src/.../biomarker-table.component.ts)\n                        \n                        \n                            RGBTriplet   (src/.../biomarker-table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/biomarker-table/biomarker-table.component.ts\n    \n    \n        \n            \n                \n                    \n                    DataRow\n                \n            \n            \n                \n                    Describes the composition of a single row in the table\n\n                \n            \n            \n                \n                        [string, , ...[]]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RGBTriplet\n                \n            \n            \n                \n                    RGBTriblet of type RGB to store color\n\n                \n            \n            \n                \n                        [number, number, number]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
