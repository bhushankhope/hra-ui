var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/BiomarkerTableComponent.html",[0,0.646,1,0.863]],["body/components/BiomarkerTableComponent.html",[0,0.553,1,0.863,2,0.993,3,0.449,4,1.135,5,0.812,6,0.812,7,0.812,8,0.812,9,0.449,10,1.377,11,1.377,12,0.342,13,0.449,14,1.878,15,1.135,16,1.489,17,0.752,18,0.752,19,0.97,20,0.752,21,0.752,22,0.752,23,0.97,24,0.812,25,0.752,26,0.752,27,0.97,28,1.039,29,1.782,30,0.752,31,0.97,32,0.752,33,0.752,34,0.646,35,0.428,36,0.97,37,1.263,38,1.359,39,1.359,40,1.359,41,1.359,42,1.359,43,1.359,44,1.359,45,1.135,46,1.359,47,1.451,48,1.752,49,1.366,50,0.97,51,1.203,52,1.359,53,0.97,54,1.515,55,0.111,56,1.356,57,2.469,58,2.065,59,3.221,60,0.812,61,1.039,62,0.812,63,0.752,64,0.97,65,0.812,66,0.752,67,0.752,68,0.752,69,0.752,70,0.97,71,0.812,72,0.752,73,1.678,74,1.135,75,0.752,76,1.835,77,0.752,78,1.582,79,0.812,80,0.752,81,0.97,82,1.451,83,0.752,84,0.812,85,1.58,86,0.812,87,0.812,88,1.203,89,2.622,90,1.782,91,2.622,92,1.752,93,0.812,94,0.812,95,0.752,96,0.97,97,0.752,98,0.752,99,0.812,100,1.263,101,1.782,102,1.835,103,0.97,104,1.451,105,1.522,106,0.993,107,0.812,108,0.812,109,1.263,110,1.366,111,0.752,112,0.812,113,0.752,114,0.812,115,0.752,116,0.752,117,0.863,118,0.752,119,0.961,120,0.752,121,0.812,122,0.752,123,0.752,124,0.752,125,0.752,126,0.752,127,0.97,128,0.812,129,0.812,130,0.812,131,0.752,132,0.752,133,0.752,134,0.752,135,1.366,136,0.449,137,0.752,138,0.342,139,0.752,140,0.342,141,0.752,142,0.449,143,0.752,144,0.752,145,0.752,146,0.449,147,0.752,148,0.449,149,0.449,150,0.342,151,0.342,152,0.553,153,0.449,154,0.572,155,1.135,156,0.342,157,0.97,158,1.263,159,0.449,160,0.752,161,0.97,162,0.342,163,0.342,164,0.961,165,1.263,166,0.752,167,0.449,168,0.449,169,0.449,170,0.449,171,1.522,172,1.135,173,0.449,174,0.449,175,0.752,176,1.582,177,0.752,178,0.449,179,0.449,180,0.449,181,0.449,182,0.449,183,0.342,184,1.451,185,0.752,186,0.449,187,0.449,188,0.97,189,0.752,190,0.449,191,0.449,192,0.752,193,0.449,194,0.449,195,0.449,196,0.449,197,0.449,198,0.449,199,0.449,200,0.449,201,0.449,202,0.752,203,0.449,204,0.449,205,0.449,206,0.449,207,0.752,208,0.752,209,0.449,210,0.449,211,0.752,212,0.449,213,0.342,214,0.449,215,1.263,216,0.449,217,0.449,218,0.449,219,0.449,220,0.449,221,0.342,222,0.449,223,0.449,224,0.449,225,0.449,226,1.359,227,2.051,228,1.753,229,1.359,230,1.359,231,0.812,232,0.812,233,0.812,234,0.812,235,1.359,236,0.812,237,2.051,238,0.812,239,2.622,240,0.812,241,0.812,242,0.812,243,0.812,244,1.753,245,2.283,246,1.359,247,0.812,248,2.051,249,0.812,250,0.812,251,1.359,252,0.812,253,0.812,254,2.283,255,2.051,256,2.051,257,1.359,258,2.622,259,0.812,260,2.283,261,2.283,262,2.283,263,0.812,264,1.753,265,0.812,266,1.359,267,2.051,268,0.812,269,1.359,270,0.812,271,0.812,272,0.812,273,1.753,274,0.812,275,0.812,276,1.359,277,1.359,278,1.359,279,0.812,280,1.359,281,1.359,282,1.753,283,0.812,284,0.812,285,1.359,286,1.359,287,1.359,288,0.812,289,0.812,290,0.812,291,0.812,292,0.812,293,0.812,294,1.359,295,0.812,296,0.812,297,0.812,298,0.812,299,1.359,300,0.812,301,0.812,302,0.812,303,0.812,304,0.812,305,0.812,306,0.812,307,1.359,308,1.359,309,0.812,310,2.051,311,0.812,312,0.812,313,0.812,314,0.037,315,0.037]],["title/interfaces/DataCell.html",[152,0.646,156,0.863]],["body/interfaces/DataCell.html",[0,0.613,1,0.534,3,0.702,4,1.309,9,0.702,10,0.534,11,0.534,12,0.534,13,0.702,14,1.841,15,1.076,16,1.429,17,0.702,18,0.702,19,1.076,20,0.702,21,0.702,22,0.702,23,1.076,25,0.702,26,0.702,27,0.702,28,1.117,29,1.671,30,0.702,31,0.702,32,0.702,33,0.702,34,0.836,35,0.613,36,0.702,37,1.309,45,0.702,47,1.309,48,1.963,49,1.076,50,0.702,51,1.205,53,0.702,54,1.429,55,0.112,56,1.454,58,2.061,61,0.996,63,0.702,64,1.076,66,0.702,67,0.702,68,0.702,69,0.702,70,1.076,72,0.702,73,1.841,74,0.702,75,0.702,76,1.985,77,0.702,78,1.795,80,0.702,81,1.076,82,1.671,83,0.702,85,1.568,88,1.366,90,1.468,92,1.584,95,0.702,96,1.076,97,0.702,98,0.702,100,1.076,101,1.671,102,1.584,103,0.702,104,1.309,105,1.671,106,1.421,109,1.74,110,1.309,111,0.702,113,0.702,115,0.702,116,0.702,117,0.819,118,0.702,119,1.117,120,0.702,122,0.702,123,0.702,124,0.702,125,0.702,126,0.702,127,1.076,131,0.702,132,0.702,133,0.702,134,0.702,135,1.671,136,0.702,137,1.076,138,0.534,139,1.076,140,0.534,141,1.076,142,0.702,143,1.076,144,1.076,145,1.076,146,0.702,147,1.076,148,0.702,149,0.702,150,0.534,151,0.534,152,0.836,153,1.076,154,0.996,155,1.468,156,0.819,157,1.671,158,1.468,159,1.076,160,1.076,161,1.309,162,0.534,163,0.534,164,1.205,165,1.309,166,1.076,167,0.702,168,0.702,169,0.702,170,0.702,171,1.795,172,0.702,173,0.702,174,0.702,175,1.076,176,1.841,177,1.076,178,0.702,179,0.702,180,0.702,181,0.702,182,0.702,183,0.534,184,1.74,185,1.076,186,0.702,187,0.702,188,1.309,189,1.076,190,0.702,191,0.702,192,1.076,193,0.702,194,0.702,195,0.702,196,0.702,197,0.702,198,0.702,199,0.702,200,0.702,201,0.702,202,1.076,203,0.702,204,0.702,205,0.702,206,0.702,207,1.076,208,1.076,209,0.702,210,0.702,211,1.076,212,0.702,213,0.534,214,0.702,215,0.702,216,0.702,217,0.702,218,0.702,219,0.702,220,0.702,221,0.534,222,0.702,223,0.702,224,0.702,225,0.702,314,0.053,315,0.053,316,0.702]],["title/interfaces/TissueInfo.html",[51,0.863,152,0.646]],["body/interfaces/TissueInfo.html",[0,0.621,1,0.543,3,0.713,4,1.323,9,0.713,10,0.543,11,0.543,12,0.543,13,0.713,14,1.805,15,1.09,16,1.407,17,0.713,18,0.713,19,1.09,20,0.713,21,0.713,22,0.713,23,1.09,25,0.713,26,0.713,27,0.713,28,1.127,29,1.682,30,0.713,31,0.713,32,0.713,33,0.713,34,0.843,35,0.621,36,0.713,37,1.323,45,0.713,47,1.323,48,1.805,49,1.09,50,0.713,51,1.28,53,0.713,54,1.331,55,0.112,56,1.499,58,2.066,61,1.006,63,0.713,64,1.09,66,0.713,67,0.713,68,0.713,69,0.713,70,1.09,72,0.713,73,1.85,74,0.713,75,0.713,76,2.041,77,0.713,78,1.947,80,0.713,81,1.323,82,1.85,83,0.713,85,1.552,88,1.127,90,1.596,92,1.596,95,0.713,96,1.09,97,0.713,98,0.713,100,1.09,101,1.682,102,1.596,103,0.713,104,1.323,105,1.682,109,1.323,110,1.323,111,0.713,113,0.713,115,0.713,116,0.713,117,0.829,118,0.713,119,1.127,120,0.713,122,0.713,123,0.713,124,0.713,125,0.713,126,0.713,127,1.09,131,0.713,132,0.713,133,0.713,134,0.713,135,1.682,136,0.713,137,1.09,138,0.543,139,1.09,140,0.543,141,1.09,142,0.713,143,1.09,144,1.09,145,1.09,146,0.713,147,1.09,148,0.713,149,0.713,150,0.543,151,0.543,152,0.753,153,0.713,154,0.829,155,1.481,156,0.543,157,1.323,158,1.09,159,0.713,160,1.09,161,1.323,162,0.543,163,0.543,164,1.214,165,1.323,166,1.09,167,0.713,168,0.713,169,0.713,170,0.713,171,1.805,172,0.713,173,0.713,174,0.713,175,1.09,176,1.85,177,1.09,178,0.713,179,0.713,180,0.713,181,0.713,182,0.713,183,0.543,184,1.75,185,1.09,186,0.713,187,0.713,188,1.323,189,1.09,190,0.713,191,0.713,192,1.09,193,0.713,194,0.713,195,0.713,196,0.713,197,0.713,198,0.713,199,0.713,200,0.713,201,0.713,202,1.09,203,0.713,204,0.713,205,0.713,206,0.713,207,1.09,208,1.09,209,0.713,210,0.713,211,1.09,212,0.713,213,0.543,214,0.713,215,0.713,216,0.713,217,0.713,218,0.713,219,0.713,220,0.713,221,0.543,222,0.713,223,0.713,224,0.713,225,0.713,314,0.053,315,0.053,316,0.713]],["title/dependencies.html",[317,1.268,318,1.792]],["body/dependencies.html",[28,1.285,55,0.107,138,1.285,140,1.285,314,0.095,315,0.095,318,2.577,319,3.054,320,3.054,321,3.054,322,3.527,323,3.054]],["title/index.html",[34,0.547,324,1.736,325,1.736]],["body/index.html",[2,2.577,55,0.095,213,1.485,314,0.095,315,0.095,326,3.527,327,3.054,328,3.054,329,3.527,330,3.054,331,3.527,332,3.054,333,3.054,334,3.054]],["title/modules.html",[335,2.009]],["body/modules.html",[55,0.097,314,0.097,315,0.097,335,2.308]],["title/overview.html",[336,2.009]],["body/overview.html",[0,0.986,55,0.097,183,1.318,221,1.318,314,0.097,315,0.097,316,1.732,336,2.287]],["title/properties.html",[35,0.773,317,1.268]],["body/properties.html",[35,0.989,55,0.102,314,0.097,315,0.097,337,3.137,338,3.137]],["title/miscellaneous/typealiases.html",[339,1.268,340,2.452]],["body/miscellaneous/typealiases.html",[10,1.244,11,1.244,12,1.545,16,1.244,34,0.931,54,1.457,55,0.102,56,1.244,61,1.457,85,1.545,88,1.244,117,1.244,119,1.457,150,1.244,151,1.244,154,1.244,162,1.244,163,1.244,164,1.244,314,0.094,315,0.094,339,2.16,341,2.956,342,3.461]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":215,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["0.0.1",{"_index":338,"title":{},"body":{"properties.html":{}}}],["0.063rem",{"_index":260,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.125rem",{"_index":299,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.16",{"_index":301,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0.5rem",{"_index":296,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["0rem",{"_index":266,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1",{"_index":183,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["1.3rem",{"_index":249,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1.5rem",{"_index":295,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["100",{"_index":201,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["15.1.0",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":188,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["16.5rem",{"_index":238,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["17rem",{"_index":275,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1px",{"_index":246,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["1rem",{"_index":294,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["2",{"_index":221,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["2.3.0",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["26rem",{"_index":274,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["2rem",{"_index":269,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["3",{"_index":187,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["3rem",{"_index":273,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["43rem",{"_index":240,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["5",{"_index":191,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["59264d",{"_index":253,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["5rem",{"_index":281,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["6.5rem",{"_index":279,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["7",{"_index":194,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["accessors",{"_index":52,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["actual_component",{"_index":313,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["aliases",{"_index":341,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":255,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["along",{"_index":67,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["angular/common",{"_index":140,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/core",{"_index":138,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/material/table",{"_index":142,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["arr",{"_index":198,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["auto",{"_index":285,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["b",{"_index":192,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["background",{"_index":251,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["based",{"_index":104,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["beween",{"_index":124,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarker",{"_index":29,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertablecomponent",{"_index":1,"title":{"components/BiomarkerTableComponent.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledatacardcomponent",{"_index":143,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledataiconcomponent",{"_index":144,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["block",{"_index":236,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["border",{"_index":258,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["bottom",{"_index":259,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["box",{"_index":297,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["calculates",{"_index":87,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["card",{"_index":159,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["carrying",{"_index":80,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cell",{"_index":14,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cells",{"_index":19,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["change",{"_index":175,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetection",{"_index":25,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy",{"_index":136,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy.onpush",{"_index":26,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes",{"_index":177,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["child",{"_index":264,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["circle",{"_index":75,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cl",{"_index":217,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["class",{"_index":170,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["color",{"_index":88,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["colors",{"_index":66,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["column",{"_index":228,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["columnname",{"_index":229,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["columns",{"_index":47,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["columnswithtypeandcount",{"_index":53,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["commonmodule",{"_index":139,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["component",{"_index":0,"title":{"components/BiomarkerTableComponent.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["component_template",{"_index":311,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"index.html":{}}}],["composition",{"_index":163,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["consisting",{"_index":178,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["const",{"_index":184,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["content",{"_index":305,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["contrast",{"_index":303,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["converts",{"_index":115,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["count",{"_index":172,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["d3d3d3",{"_index":262,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["data",{"_index":48,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datacell",{"_index":156,"title":{"interfaces/DataCell.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dataitem",{"_index":145,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datarow",{"_index":61,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["dataset_count",{"_index":161,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasets",{"_index":160,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasource",{"_index":37,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["deep",{"_index":287,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["definations",{"_index":134,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["defined",{"_index":59,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["dependencies",{"_index":318,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describes",{"_index":162,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["describing",{"_index":17,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["details",{"_index":81,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["directive",{"_index":309,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["directives",{"_index":312,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["display",{"_index":235,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["displayed",{"_index":77,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element",{"_index":308,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element[0",{"_index":226,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["element[1",{"_index":227,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ellipsis",{"_index":284,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["emptyfiller",{"_index":247,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["execute",{"_index":334,"title":{},"body":{"index.html":{}}}],["export",{"_index":155,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["expression",{"_index":224,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["fff7f8",{"_index":252,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["fit",{"_index":304,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["flex",{"_index":293,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["function",{"_index":122,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["functional",{"_index":212,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["g",{"_index":189,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gene",{"_index":219,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["generated",{"_index":328,"title":{},"body":{"index.html":{}}}],["getcolor",{"_index":39,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getcolor(value",{"_index":84,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getcolumnswithtypeandcount",{"_index":129,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverdata",{"_index":40,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gethoverdata([index",{"_index":210,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gethoverdata(undefined",{"_index":93,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxcolor",{"_index":41,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxcolor(meanexpression",{"_index":98,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getminmaxsize",{"_index":42,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getminmaxsize(percentage",{"_index":107,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["gets",{"_index":100,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getsize",{"_index":43,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["getsize(value",{"_index":111,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getter",{"_index":131,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getting",{"_index":324,"title":{"index.html":{}},"body":{}}],["give",{"_index":123,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["given",{"_index":125,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["grade",{"_index":103,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradient",{"_index":49,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradientpoint",{"_index":64,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["header",{"_index":280,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["height",{"_index":237,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hex",{"_index":118,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hex2rgb",{"_index":44,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hex2rgb(hex",{"_index":113,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hexcode",{"_index":116,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hgnc",{"_index":222,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hidden",{"_index":283,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["host",{"_index":234,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hover",{"_index":97,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hover.full",{"_index":292,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["hoverdirective",{"_index":147,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hra",{"_index":28,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["html",{"_index":307,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["icon",{"_index":158,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id",{"_index":78,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["implements",{"_index":22,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["import",{"_index":135,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["important",{"_index":291,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["imports",{"_index":169,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["include",{"_index":242,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["input",{"_index":73,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["inputs",{"_index":46,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["interface",{"_index":152,"title":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["interfaces",{"_index":316,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["item.percentage",{"_index":199,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["join",{"_index":206,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["label",{"_index":76,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["left",{"_index":245,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["legend",{"_index":306,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["lerp",{"_index":45,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["lerp(value",{"_index":120,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["library",{"_index":327,"title":{},"body":{"index.html":{}}}],["literal",{"_index":106,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{}}}],["map((component",{"_index":204,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["margin",{"_index":244,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["mat",{"_index":288,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["matching",{"_index":315,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.round(component).tostring(16",{"_index":205,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mattabledatasource",{"_index":127,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mattablemodule",{"_index":141,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["max",{"_index":102,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor",{"_index":196,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor[index",{"_index":203,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxsize",{"_index":208,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mdc",{"_index":289,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["mean",{"_index":223,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression",{"_index":105,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression.tofixed(6",{"_index":225,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["method",{"_index":132,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["methods",{"_index":38,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["min",{"_index":101,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mincolor",{"_index":195,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["minsize",{"_index":207,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["miscellaneous",{"_index":339,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["modules",{"_index":335,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":90,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["new",{"_index":126,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ng",{"_index":286,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["ngonchanges(changes",{"_index":179,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["nowrap",{"_index":278,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["number",{"_index":85,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nx",{"_index":329,"title":{},"body":{"index.html":{}}}],["object",{"_index":96,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["onchanges",{"_index":23,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["open",{"_index":83,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["optional",{"_index":91,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["organ",{"_index":21,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["organisms",{"_index":326,"title":{},"body":{"index.html":{}}}],["overflow",{"_index":282,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["overview",{"_index":336,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":317,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":248,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["param",{"_index":176,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["parsefloat(item.label",{"_index":200,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(1",{"_index":186,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(3",{"_index":190,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(5",{"_index":193,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["peer",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":110,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["points",{"_index":69,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["properties",{"_index":35,"title":{"properties.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"properties.html":{}}}],["provide",{"_index":133,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["quanitites",{"_index":18,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["r",{"_index":185,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["radius",{"_index":74,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["readonly",{"_index":36,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["representing",{"_index":153,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["represents",{"_index":157,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["results",{"_index":314,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":171,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["returns",{"_index":92,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rgb",{"_index":117,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgba(0",{"_index":300,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["rgbtriblet",{"_index":150,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgbtriplet",{"_index":119,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["right",{"_index":256,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["rocesses",{"_index":95,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row",{"_index":164,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["row[0",{"_index":216,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[1",{"_index":218,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[index",{"_index":211,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rows",{"_index":63,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["run",{"_index":332,"title":{},"body":{"index.html":{}}}],["running",{"_index":330,"title":{},"body":{"index.html":{}}}],["selector",{"_index":27,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sets",{"_index":174,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["shadow",{"_index":298,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["simplechanges",{"_index":137,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["single",{"_index":154,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":109,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizelegend",{"_index":70,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizes",{"_index":50,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["solid",{"_index":261,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["space",{"_index":277,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["specific",{"_index":20,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sr",{"_index":241,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["src/.../biomarker",{"_index":342,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/biomarker",{"_index":10,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["standalone",{"_index":167,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["started",{"_index":325,"title":{"index.html":{}},"body":{}}],["stop",{"_index":68,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["store",{"_index":151,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":56,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["styleurls",{"_index":30,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["t",{"_index":166,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tab",{"_index":290,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table",{"_index":16,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.html",{"_index":33,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.scss",{"_index":31,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.ts",{"_index":12,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.ts:109",{"_index":121,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:118",{"_index":114,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:130",{"_index":99,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:148",{"_index":108,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:162",{"_index":86,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:178",{"_index":112,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:189",{"_index":94,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:67",{"_index":79,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:73",{"_index":60,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:76",{"_index":62,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:79",{"_index":65,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:82",{"_index":71,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:85",{"_index":130,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table.component.ts:90",{"_index":128,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["table/biomarker",{"_index":11,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["taking",{"_index":72,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["td",{"_index":257,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td:first",{"_index":268,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["td:last",{"_index":271,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["templateurl",{"_index":32,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["test",{"_index":333,"title":{},"body":{"index.html":{}}}],["tests",{"_index":331,"title":{},"body":{"index.html":{}}}],["text",{"_index":254,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th",{"_index":250,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:first",{"_index":270,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["th:last",{"_index":272,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["this.columns",{"_index":173,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.columns[index",{"_index":220,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.data",{"_index":182,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.datasource.data",{"_index":181,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.getminmaxsize(value",{"_index":209,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.gradient.findindex((item",{"_index":197,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.lerp(value",{"_index":202,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissue",{"_index":82,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissueinfo",{"_index":51,"title":{"interfaces/TissueInfo.html":{}},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["top",{"_index":265,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tr",{"_index":267,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tr:first",{"_index":263,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["true",{"_index":168,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tslib",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":340,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":15,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["uberon",{"_index":214,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/cdk",{"_index":148,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/atoms",{"_index":149,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/molecules",{"_index":146,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/theming",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":165,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["unit",{"_index":213,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"index.html":{}}}],["use",{"_index":230,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["utils",{"_index":231,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["utils.sr",{"_index":243,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["value",{"_index":58,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["var",{"_index":310,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["variables",{"_index":232,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["vars",{"_index":233,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["vars.$primary",{"_index":302,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["version",{"_index":337,"title":{},"body":{"properties.html":{}}}],["void",{"_index":180,"title":{},"body":{"components/BiomarkerTableComponent.html":{},"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["white",{"_index":276,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}],["width",{"_index":239,"title":{},"body":{"components/BiomarkerTableComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/BiomarkerTableComponent.html":{"url":"components/BiomarkerTableComponent.html","title":"component - BiomarkerTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BiomarkerTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/biomarker-table/biomarker-table.component.ts\n\n\n\n    \n        Description\n    \n    \n        Cell types table, describing the types and quanitites of cells for a specific organ\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hra-biomarker-table\n            \n\n            \n                styleUrls\n                ./biomarker-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./biomarker-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                dataSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColor\n                            \n                            \n                                getHoverData\n                            \n                            \n                                getMinMaxColor\n                            \n                            \n                                getMinMaxSize\n                            \n                            \n                                getSize\n                            \n                            \n                                hex2rgb\n                            \n                            \n                                lerp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                data\n                            \n                            \n                                gradient\n                            \n                            \n                                sizes\n                            \n                            \n                                tissueInfo\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    columnsWithTypeAndCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:73\n                            \n                        \n                \n                    \n                        Columns for the table\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         DataRow[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:76\n                            \n                        \n                \n                    \n                        Rows of the table\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        gradient\n                    \n                \n                \n                    \n                        Type :     GradientPoint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:79\n                            \n                        \n                \n                    \n                        Gradient colors along with their stop points\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sizes\n                    \n                \n                \n                    \n                        Type :     SizeLegend[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:82\n                            \n                        \n                \n                    \n                        Taking input for the radius of the circle and the label to be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tissueInfo\n                    \n                \n                \n                    \n                        Type :         TissueInfo\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    label: '',\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:67\n                            \n                        \n                \n                    \n                        Input: TissueInfo carrying the details of the tissue open\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:162\n                \n            \n\n\n            \n                \n                    Calculates the color of this value on this gradient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHoverData\n                        \n                    \n                \n            \n            \n                \ngetHoverData(undefined: [number, DataRow])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:189\n                \n            \n\n\n            \n                \n                    rocesses the object for hover data for Table Cell\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                [number, DataRow]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinMaxColor\n                        \n                    \n                \n            \n            \n                \ngetMinMaxColor(meanExpression: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:130\n                \n            \n\n\n            \n                \n                    Gets Min and Max color grade based on the meanExpression value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meanExpression\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinMaxSize\n                        \n                    \n                \n            \n            \n                \ngetMinMaxSize(percentage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:148\n                \n            \n\n\n            \n                \n                    Gets Min and Max size grade based on the Percentage value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSize\n                        \n                    \n                \n            \n            \n                \ngetSize(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:178\n                \n            \n\n\n            \n                \n                    gets Size of the Cell based on the percentage value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hex2rgb\n                        \n                    \n                \n            \n            \n                \nhex2rgb(hex: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:118\n                \n            \n\n\n            \n                \n                    Converts HexCode to RGB\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hex\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RGBTriplet\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lerp\n                        \n                    \n                \n            \n            \n                \nlerp(value: number, min: number, max: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:109\n                \n            \n\n\n            \n                \n                    Lerp function to give value beween min and max value based on the given value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource>([])\n                    \n                \n                    \n                        \n                                Defined in src/lib/biomarker-table/biomarker-table.component.ts:90\n                        \n                    \n\n            \n                \n                    Source for the table\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        columnsWithTypeAndCount\n                    \n                \n\n                \n                    \n                        getcolumnsWithTypeAndCount()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/biomarker-table/biomarker-table.component.ts:85\n                                \n                            \n                    \n                        \n                                Getter method to provide the definations of the columns\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * sets the data source for the table on every change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * rocesses the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n}\n\n    \n\n    \n        \n  \n    Cell type table by Biomarker\n  \n\n  \n    Cell Type\n\n    \n      {{ element[0] }}\n    \n  \n\n  \n    Cell Count\n\n    \n      {{ element[1] !== undefined ? (element[1] | number) : 'no data' }}\n    \n  \n\n  \n    \n      {{ column }}\n    \n\n    \n      \n      \n\n      \n        \n      \n    \n  \n\n  \n  \n\n\n\n  \n    {{ columnName }}\n  \n\n\n\n   \n\n\n    \n\n    \n                \n                    ./biomarker-table.component.scss\n                \n                @use 'utils';\n@use 'variables' as vars;\n\n:host {\n  display: block;\n  max-height: 16.5rem;\n  max-width: 43rem;\n\n  .sr-only {\n    @include utils.sr-only();\n  }\n\n  .table {\n    margin-left: -1px;\n    .emptyFiller {\n      padding: 1.3rem;\n    }\n  }\n  .table th {\n    background-color: #fff7f8;\n    color: #59264d;\n    text-align: right;\n  }\n\n  .table td {\n    border-bottom: 0.063rem solid #d3d3d3;\n    border-left: 0.063rem solid #d3d3d3;\n  }\n\n  .table tr:first-child td {\n    border-top: 0rem solid #d3d3d3;\n  }\n\n  tr > td:first-child {\n    text-align: left;\n    padding: 0 2rem;\n  }\n\n  tr > th:first-child {\n    text-align: left;\n    padding: 0 2rem;\n  }\n\n  tr > td:last-of-type {\n    border-right: 0.063rem solid #d3d3d3;\n  }\n\n  tr > th:last-of-type {\n    border-right: 0.063rem solid #d3d3d3;\n  }\n\n  .type {\n    height: 3rem;\n    max-width: 26rem;\n    min-width: 17rem;\n    border-radius: 0rem;\n    white-space: nowrap;\n  }\n\n  .count {\n    text-align: right;\n    height: 3rem;\n    min-width: 6.5rem;\n  }\n\n  .icon-header {\n    max-width: 5rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .icon-cell {\n    max-width: 5rem;\n    min-height: 3rem;\n\n    .icon {\n      margin: auto;\n    }\n  }\n}\n\n::ng-deep .mat-mdc-tab-header {\n  margin-left: -1px !important;\n}\n\n::ng-deep .biomarker-table-hover.full-column-name {\n  display: flex;\n  padding: 1rem 1.5rem;\n  border-radius: 0.5rem;\n  box-shadow: 0.063rem 0.125rem 1rem 0.125rem rgba(0, 0, 0, 0.16);\n  background-color: vars.$primary-contrast-rgb;\n  overflow: auto;\n  max-width: fit-content;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Cell type table by Biomarker        Cell Type          {{ element[0] }}            Cell Count          {{ element[1] !== undefined ? (element[1] | number) : \\'no data\\' }}                  {{ column }}                                                        {{ columnName }}     '\n    var COMPONENTS = [{'name': 'BiomarkerTableComponent', 'selector': 'hra-biomarker-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BiomarkerTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataCell.html":{"url":"interfaces/DataCell.html","title":"interface - DataCell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataCell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a single cell of the table.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the color of the icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the data for the data card\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the size of the icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * sets the data source for the table on every change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * rocesses the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueInfo.html":{"url":"interfaces/TissueInfo.html","title":"interface - TissueInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TissueInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Details of the Tissue\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID of the Tissue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the Tissue\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n} from '@hra-ui/components/molecules';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    cell: string;\n    biomarker: string;\n    meanExpression: number;\n    /** Number of datasets for this Tissue */\n    dataset_count: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Getter method to provide the definations of the columns */\n  get columnsWithTypeAndCount(): string[] {\n    return ['type', 'count', ...this.columns];\n  }\n\n  /** Source for the table */\n  readonly dataSource = new MatTableDataSource>([]);\n\n  /**\n   * sets the data source for the table on every change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSource.data = this.data;\n    }\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => Math.round(component).toString(16))\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * rocesses the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @hra-ui/theming : *\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncomponents-organisms\nThis library was generated with Nx.\nRunning unit tests\nRun nx test components-organisms to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataRow   (src/.../biomarker-table.component.ts)\n                        \n                        \n                            RGBTriplet   (src/.../biomarker-table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/biomarker-table/biomarker-table.component.ts\n    \n    \n        \n            \n                \n                    \n                    DataRow\n                \n            \n            \n                \n                    Describes the composition of a single row in the table\n\n                \n            \n            \n                \n                        [string, , ...[]]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RGBTriplet\n                \n            \n            \n                \n                    RGBTriblet of type RGB to store color\n\n                \n            \n            \n                \n                        [number, number, number]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
