var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AnatomicalStructureTagState.html",[0,1.253,1,2.575]],["body/injectables/AnatomicalStructureTagState.html",[0,1.606,1,3.3,2,2.235,3,0.047,4,0.047,5,0.047,6,7.186,7,3.868,8,5.367,9,3.458,10,0.764,11,2.127,12,4.882,13,3.026,14,2.435,15,2.041,16,5.66,17,0.324,18,1.415,19,5.66,20,5.156,21,2.889,22,4.882,23,5.543,24,2.801,25,5.066,26,5.66,27,0.873,28,3.149,29,3.713,30,1.853,31,3.925,32,0.97,33,0.995,34,4.593,35,1.659,36,0.01,37,0.936,38,0.691,39,1.191,40,1.221,41,1.565,42,3.508,43,3.372,44,2.432,45,2.524,46,4.882,47,2.022,48,3.969,49,3.925,50,1.484,51,1.121,52,4.882,53,3.925,54,3.925,55,2.294,56,4.447,57,3.925,58,4.882,59,0.805,60,4.845,61,1.6,62,5.908,63,3.925,64,4.882,65,0.007,66,3.076,67,4.156,68,4.447,69,4.447,70,0.008,71,4.882,72,4.227,73,4.122,74,3.026,75,3.925,76,3.925,77,2.789,78,3.925,79,3.925,80,0.22,81,4.882,82,3.458,83,2.434,84,3.458,85,2.701,86,2.294,87,1.624,88,1.624,89,0.15,90,1.576,91,3.149,92,1.848,93,1.108,94,2.161,95,1.295,96,2.451,97,2.451,98,2.919,99,2.099,100,2.06,101,1.931,102,2.337,103,3.156,104,3.149,105,0.067,106,0.244,107,3.149,108,1.576,109,0.102,110,1.286,111,3.458,112,3.458,113,3.458,114,3.647,115,1.204,116,3.975,117,0.945,118,0.945,119,4.865,120,3.458,121,3.149,122,3.458,123,3.458,124,3.458,125,3.372,126,3.458,127,3.458,128,3.458,129,3.458,130,3.458,131,2.499,132,1.984,133,3.458,134,2.582,135,1.788,136,3.458,137,4.882,138,1.735,139,1.042,140,1.576,141,0.539,142,1.624,143,1.624,144,1.729,145,2.451,146,2.143,147,2.451,148,2.451,149,2.451,150,2.451,151,2.451,152,3.458,153,3.458,154,2.451,155,2.451,156,3.458,157,3.458,158,2.735,159,4.882,160,4.882,161,4.882,162,3.647,163,1.984,164,4.882,165,3.863,166,3.458,167,3.458,168,1.197,169,2.582,170,3.458,171,3.458,172,3.458,173,2.735,174,2.735,175,2.919,176,2.735,177,3.458]],["title/interfaces/AnatomicalStructureTagStateModel.html",[106,0.269,107,3.471]],["body/interfaces/AnatomicalStructureTagStateModel.html",[0,1.773,1,2.697,3,0.055,4,0.055,5,0.055,6,3.99,7,3.053,8,2.98,9,3.99,10,0.538,11,2.119,12,3.99,13,2.473,14,2.424,15,1.668,16,5.39,19,3.99,20,3.634,21,1.875,25,4.944,26,3.99,27,0.713,29,3.528,32,0.792,33,0.813,34,4.559,36,0.01,37,0.555,38,0.66,40,1.071,41,1.279,42,3.341,43,3.211,44,2.414,45,2.624,46,3.99,48,3.75,50,0.856,51,1.065,52,3.99,55,1.875,56,3.634,58,3.99,59,0.706,60,4.559,61,1.128,62,5.955,64,3.99,65,0.007,66,2.696,67,3.643,68,3.634,69,3.634,70,0.008,71,3.99,72,4.026,73,3.369,74,2.473,77,2.625,80,0.225,81,5.39,82,3.99,83,2.625,84,3.99,85,2.982,86,2.532,87,1.875,88,1.875,89,0.173,90,1.819,91,3.634,92,2.132,93,1.279,94,2.386,95,1.495,96,2.829,97,2.829,98,3.369,99,2.318,100,2.377,101,2.131,102,2.697,103,3.484,104,3.634,105,0.074,106,0.282,107,4.91,108,1.819,109,0.118,110,1.367,111,3.99,112,3.99,113,3.99,114,4.026,115,1.252,116,4.226,117,1.043,118,1.043,119,5.172,120,3.99,121,3.634,122,3.99,123,3.99,124,3.99,125,3.637,126,3.99,127,3.99,128,3.99,129,3.99,130,3.99,131,2.657,132,2.191,133,3.99,134,2.98,135,1.882,136,3.99,137,5.39,138,1.915,139,1.108,140,1.819,141,0.622,142,1.875,143,1.875,144,1.996,145,2.829,146,2.473,147,2.829,148,2.829,149,2.829,150,2.829,151,2.829,152,3.99,153,3.99,154,2.829,155,2.829,156,3.99,157,3.99,158,3.157,159,5.39,160,5.39,161,5.39,162,4.026,163,2.191,164,5.39,165,4.265,166,3.99,167,3.99,168,1.381,169,2.98,170,3.99,171,3.99,172,3.99,173,3.157,174,3.157,175,3.369,176,3.157,177,3.99,178,1.186]],["title/components/AppComponent.html",[179,0.426,180,1.161]],["body/components/AppComponent.html",[3,0.033,4,0.033,5,0.052,10,0.755,11,1.01,15,1.014,17,0.485,18,1.088,24,2.155,27,0.672,29,3.294,30,1.932,35,1.513,36,0.01,37,0.909,38,0.579,39,1.086,44,1.817,45,1.37,47,1.235,50,1.11,51,1.043,59,0.905,65,0.005,70,0.005,80,0.193,89,0.106,92,1.297,93,0.778,99,2.224,101,2.045,105,0.052,106,0.265,109,0.072,110,0.961,115,0.974,117,0.889,118,0.727,132,0.986,135,1.035,139,0.636,141,1.167,163,1.527,168,1.3,179,0.625,180,1.576,181,1.062,182,0.758,183,0.862,184,0.84,185,0.84,186,2.21,187,2.538,188,1.662,189,2.542,190,3.432,191,0.739,192,1.088,193,1.088,194,2.191,195,1.087,196,1.267,197,1.116,198,4.185,199,1.116,200,3.421,201,0.522,202,3.879,203,3.095,204,4.17,205,4.17,206,3.879,207,3.343,208,4.321,209,4.185,210,3.756,211,4.264,212,4.264,213,4.711,214,3.421,215,4.264,216,4.264,217,4.185,218,2.049,219,5.62,220,4.711,221,4.711,222,3.879,223,3.667,224,3.879,225,3.343,226,2.096,227,2.102,228,2.737,229,3.081,230,2.755,231,2.971,232,2.591,233,2.755,234,3.667,235,4.264,236,4.185,237,1.716,238,2.238,239,4.185,240,3.432,241,4.185,242,3.824,243,3.879,244,3.432,245,2.755,246,3.863,247,4.264,248,5.096,249,2.542,250,1.793,251,1.896,252,4.995,253,3.171,254,3.421,255,3.421,256,3.421,257,3.421,258,1.2,259,2.755,260,2.755,261,2.428,262,3.421,263,2.428,264,4.723,265,4.185,266,4.092,267,1.266,268,1.439,269,2.256,270,2.755,271,3.421,272,2.755,273,2.755,274,3.421,275,2.755,276,2.755,277,3.421,278,2.755,279,2.755,280,2.755,281,3.171,282,2.078,283,1.17,284,1.299,285,3.206,286,2.755,287,3.421,288,2.755,289,3.421,290,2.755,291,2.755,292,2.755,293,0.703,294,1.812,295,2.049,296,1.812,297,2.21,298,0.739,299,2.049,300,2.21,301,2.663,302,1.92,303,2.049,304,1.568,305,1.446,306,0.934,307,1.392,308,1.392,309,2.049,310,2.21,311,3.258,312,1.72,313,1.941,314,2.21,315,1.72,316,2.21,317,3.421,318,2.21,319,2.049,320,2.21,321,2.21,322,1.72,323,2.21,324,2.21,325,1.446,326,2.21,327,2.21,328,2.21,329,1.568,330,1.812,331,2.21,332,0.778,333,2.21,334,2.21,335,2.971,336,2.21,337,2.21,338,2.21,339,2.21,340,2.21,341,2.21,342,3.421,343,4.711,344,5.807,345,2.21,346,2.21,347,5.62,348,2.21,349,2.21,350,2.21,351,5.209,352,1.446,353,2.21,354,3.525,355,2.21,356,2.153,357,3.421,358,3.824,359,2.21,360,2.21,361,1.615,362,3.421,363,1.812,364,1.765,365,3.421,366,2.21,367,2.049,368,3.421,369,1.043,370,2.078,371,1.568,372,1.72,373,1.812,374,2.21,375,2.21,376,0.686,377,1.64,378,1.043,379,1.392,380,1.72,381,0.934,382,1.705,383,2.78,384,2.238,385,2.238,386,2.845,387,1.721,388,1.568,389,2.538,390,1.074,391,1.088,392,2.007,393,2.737,394,2.755,395,2.078,396,1.788,397,1.3,398,2.755,399,2.338,400,2.663,401,2.989,402,3.171,403,2.755,404,2.899,405,4.185,406,2.971,407,1.088,408,2.538,409,2.755,410,1.014,411,2.159,412,2.078,413,1.01,414,2.805,415,1.878,416,1.92,417,2.238,418,2.226,419,1.297,420,1.765,421,1.82,422,2.007,423,2.21,424,2.21,425,1.176,426,2.238,427,2.755,428,1.176,429,1.014,430,2.971,431,1.92,432,2.374,433,3.081,434,0.869,435,2.455,436,4.264,437,0.869,438,1.92,439,2.755,440,2.755,441,1.537,442,3.432,443,1.72,444,2.078,445,2.755,446,2.755,447,2.755,448,1.392,449,2.21,450,1.014,451,1.92,452,1.254,453,1.254,454,2.755,455,1.72,456,1.92,457,1.92,458,0.4,459,1.035,460,0.84,461,1.791,462,0.84,463,0.84,464,0.778,465,0.84,466,0.758,467,1.591,468,0.778,469,0.84,470,1.145,471,1.591,472,0.778,473,0.819,474,0.84,475,0.778,476,0.84,477,0.778,478,0.739,479,0.84,480,0.778,481,0.84,482,0.778,483,0.758,484,0.84,485,0.778,486,0.819,487,0.798,488,0.84,489,0.778,490,1.3,491,0.758,492,0.778,493,0.778,494,0.84,495,0.778,496,1.591,497,0.778,498,1.204,499,1.3,500,0.758,501,0.778,502,0.758,503,0.621,504,0.84,505,0.758,506,0.721,507,0.778,508,0.84,509,0.778,510,0.84,511,0.778,512,0.84,513,0.778,514,1.088,515,0.778,516,1.204,517,0.778,518,0.84,519,0.778,520,1.088,521,0.84,522,0.778,523,0.84,524,0.84]],["title/modules/AppModule.html",[525,0.594,526,3.217]],["body/modules/AppModule.html",[3,0.064,4,0.064,5,0.064,18,1.356,29,3.595,30,1.227,36,0.01,50,1.004,51,0.934,65,0.007,70,0.007,80,0.235,89,0.203,105,0.064,109,0.138,115,0.815,140,2.133,141,0.73,180,2.241,187,3.163,188,2.071,195,0.65,208,3.025,264,3.951,295,3.951,296,3.495,298,1.426,303,3.951,376,1.323,407,1.356,458,0.771,464,2.358,525,0.73,526,6.773,527,1.462,528,1.62,529,2.285,530,1.579,531,1.968,532,1.62,533,4.68,534,4.68,535,4.68,536,5.819,537,5.819,538,5.819,539,5.819,540,5.819,541,5.819,542,5.819,543,2.072,544,1.5,545,5.313,546,2.127,547,7.494,548,5.313,549,6.796,550,2.02,551,5.313,552,5.313,553,6.796,554,3.495,555,2.34,556,2.812,557,2.071,558,6.796,559,5.986,560,4.736,561,3.702,562,5.453,563,4.262,564,6.796,565,3.951,566,5.313,567,5.313,568,5.313,569,5.453,570,5.313,571,5.313,572,5.313,573,4.262,574,6.796,575,5.313,576,4.736,577,4.262,578,5.313,579,4.262,580,5.313,581,5.054,582,5.453,583,4.262,584,5.313,585,6.796,586,5.313,587,4.68,588,5.313,589,3.951]],["title/interfaces/AppOptions.html",[106,0.269,309,3.217]],["body/interfaces/AppOptions.html",[3,0.051,4,0.051,5,0.051,15,2.136,17,0.346,27,0.66,29,3.27,36,0.01,38,0.594,39,1.319,44,1.46,45,1.347,51,1.072,59,1.004,65,0.006,70,0.006,80,0.215,89,0.161,92,1.973,93,1.183,99,2.198,101,2.021,105,0.07,106,0.361,109,0.109,110,1.226,115,1.157,117,0.989,118,0.714,132,1.501,135,1.409,139,0.866,141,1.173,163,1.501,178,1.097,179,0.655,180,1.125,186,3.363,187,2.495,188,1.634,189,2.828,190,3.818,192,1.07,193,1.07,194,1.044,195,0.815,196,1.018,197,1.097,198,3.363,199,1.097,200,3.363,201,0.71,202,3.117,203,3.676,204,4.645,205,4.645,206,3.117,207,3.304,208,4.714,209,3.363,213,3.363,217,3.363,219,5.34,220,4.656,221,4.656,222,3.117,223,3.624,224,3.117,225,3.304,226,2.371,227,2.078,228,2.199,229,3.045,232,2.383,234,2.617,236,3.363,237,1.538,238,1.928,239,3.363,240,2.757,241,3.363,242,3.304,243,3.117,244,2.757,246,2.757,248,4.656,249,2.043,250,1.879,251,1.699,252,4.316,253,3.117,254,3.363,255,3.363,256,3.363,257,3.363,258,1.425,261,2.386,262,3.363,263,2.386,264,5.343,265,4.656,266,4.639,267,0.714,269,2.319,271,3.363,274,3.363,277,3.363,281,3.117,282,2.043,283,0.772,284,1.044,285,2.288,287,3.363,289,3.363,293,1.07,294,2.757,295,3.117,296,2.757,297,3.363,298,1.125,299,3.117,300,3.363,301,3.624,302,2.921,303,3.117,304,2.386,305,2.199,306,1.421,307,2.118,308,2.118,309,4.316,310,3.363,311,4.157,312,2.617,313,1.908,314,3.363,315,2.617,316,3.363,317,4.656,318,3.363,319,3.117,320,3.363,321,3.363,322,2.617,323,3.363,324,3.363,325,2.199,326,3.363,327,3.363,328,3.363,329,2.386,330,2.757,331,3.363,332,1.183,333,3.363,334,3.363,335,2.921,336,3.363,337,3.363,338,3.363,339,3.363,340,3.363,341,3.363,342,4.656,343,5.764,344,6.543,345,3.363,346,3.363,347,6.419,348,3.363,349,3.363,350,3.363,351,5.95,352,2.199,353,3.363,354,4.095,355,3.363,356,1.967,357,4.656,358,4.368,359,3.363,360,3.363,361,2.198,362,4.656,363,2.757,364,2.401,365,4.656,366,3.363,367,3.117,368,4.656,369,1.588,370,2.043,371,2.386,372,2.617,373,2.757,374,3.363,375,3.363,376,1.044,377,2.495,378,1.588,379,2.118,380,2.617]],["title/components/AppWebComponent.html",[179,0.426,464,1.221]],["body/components/AppWebComponent.html",[3,0.049,4,0.049,5,0.068,11,1.336,15,2.077,17,0.332,27,0.634,30,2.009,35,0.907,36,0.01,37,0.864,38,0.732,39,0.651,51,0.775,59,1.045,65,0.006,70,0.006,72,3.711,80,0.206,89,0.154,93,1.136,105,0.093,109,0.105,110,1.039,115,0.617,118,0.686,179,0.641,180,1.08,181,1.621,182,1.553,184,1.227,185,1.227,191,1.08,192,1.44,193,1.44,194,2.253,195,1.112,196,1.581,203,3.44,204,3.877,205,3.877,208,3.708,226,1.328,227,2.527,228,3.704,229,3.704,237,0.93,250,2.456,251,1.44,258,1.456,268,0.8,283,1.2,284,1.002,293,1.027,298,1.08,302,2.804,306,2.681,332,1.136,391,1.027,396,1.663,410,3.02,434,0.82,437,0.82,441,1.053,450,1.481,458,0.584,459,1.37,460,1.227,461,2.153,462,1.227,463,1.227,464,1.993,465,1.227,466,1.108,467,1.986,468,1.136,469,1.227,470,1.514,471,1.986,472,1.136,473,1.196,474,1.227,475,1.136,476,1.227,477,1.136,478,1.08,479,1.227,480,1.136,481,1.227,482,1.136,483,1.108,484,1.227,485,1.136,486,1.196,487,1.166,488,1.227,489,1.136,490,1.72,491,1.108,492,1.136,493,1.136,494,1.227,495,1.136,496,1.986,497,1.136,498,1.593,499,1.72,500,1.108,501,1.136,502,1.108,503,0.907,504,1.227,505,1.108,506,1.053,507,1.136,508,1.227,509,1.136,510,1.227,511,1.136,512,1.227,513,1.136,514,1.44,515,1.136,516,1.593,517,1.136,518,1.227,519,1.136,520,1.44,521,1.227,522,1.136,523,1.227,524,1.227,565,6.499,590,7.011,591,3.229,592,6.513,593,5.641,594,2.199,595,3.877,596,4.644,597,5.225,598,4.919,599,5.663,600,4.202,601,3.109,602,5.249,603,4.919,604,5.641,605,5.641,606,4.024,607,4.024,608,4.539,609,4.024,610,4.067,611,4.024,612,5.737,613,4.024,614,4.024,615,4.024,616,4.024,617,4.024,618,4.024,619,4.844,620,4.024,621,4.024,622,4.024,623,4.024,624,4.024,625,1.961,626,2.112,627,5.641,628,4.024,629,1.894,630,1.961,631,4.969,632,2.334,633,3.544,634,3.229,635,4.024,636,3.229,637,4.024,638,4.024,639,4.024,640,4.024,641,4.024,642,2.033,643,1.364,644,4.024,645,4.024,646,6.513,647,5.641,648,3.544,649,6.513,650,4.024]],["title/interfaces/BlockSize.html",[106,0.269,651,2.362]],["body/interfaces/BlockSize.html",[3,0.064,4,0.064,5,0.064,10,0.634,17,0.441,32,0.933,33,0.957,36,0.01,37,0.834,38,0.62,40,0.933,51,0.936,59,0.615,61,2.163,65,0.007,70,0.007,80,0.177,89,0.204,105,0.082,106,0.467,108,2.142,109,0.177,115,1.045,117,1.161,139,1.12,140,2.142,141,1.031,163,1.909,178,1.396,179,0.778,192,1.361,193,1.361,194,1.328,195,0.834,197,1.396,199,1.396,201,0.834,232,1.909,234,3.331,237,2.084,250,2.429,251,1.361,268,1.06,293,1.361,356,2.77,361,3.096,364,3.382,386,2.508,391,2.196,397,2.078,459,1.295,466,1.468,642,2.695,651,4.319,652,3.966,653,3.717,654,3.331,655,5.067,656,3.575,657,4.469,658,4.319,659,6.001,660,2.656,661,1.506,662,2.656,663,2.656,664,2.079,665,2.079,666,2.656,667,3.966,668,6.023,669,4.151,670,3.966,671,3.509,672,3.509,673,1.506,674,1.669,675,3.273,676,3.966,677,3.509,678,4.698,679,2.656,680,2.276,681,3.175,682,3.855,683,3.717,684,3.717,685,4.698,686,3.717,687,3.509,688,3.331,689,6.613,690,3.966,691,4.698,692,6.001,693,4.698,694,6.001,695,3.966,696,4.698,697,4.698]],["title/components/BlockSizeInputComponent.html",[179,0.426,466,1.191]],["body/components/BlockSizeInputComponent.html",[3,0.043,4,0.043,5,0.063,10,0.728,11,1.234,17,0.297,18,1.33,27,0.567,30,1.769,32,0.911,33,0.935,35,1.174,36,0.01,37,0.993,38,0.613,39,0.842,40,0.911,47,1.042,50,0.984,51,0.922,59,0.774,61,1.524,65,0.006,66,2.295,70,0.006,80,0.136,89,0.138,105,0.063,106,0.324,108,1.445,109,0.193,115,0.799,117,1.044,118,0.613,139,0.914,140,1.445,141,0.978,163,1.865,168,1.588,179,0.753,180,0.966,181,1.297,182,0.991,183,1.126,184,1.097,185,1.097,191,0.966,192,1.33,193,1.33,194,2.234,195,1.105,196,0.874,197,1.363,199,1.363,201,0.638,203,1.754,232,1.865,234,3.823,237,2.055,250,2.431,251,1.713,263,2.049,267,1.044,268,1.415,283,1.128,284,0.896,293,0.919,356,2.275,361,2.542,364,2.777,369,1.973,370,2.984,371,2.966,381,1.22,382,1.801,383,2.947,384,1.888,385,1.888,386,2.622,390,1.403,391,2.294,392,1.694,395,1.754,396,1.563,397,2.172,399,1.325,404,1.489,411,2.947,412,1.754,413,1.687,417,1.888,418,2.223,420,1.489,421,1.536,422,1.694,425,1.536,428,2.223,429,1.325,432,1.638,433,1.888,434,0.733,435,1.694,437,1.062,438,2.507,441,0.942,444,1.754,452,1.638,453,1.638,458,0.522,459,1.729,460,1.097,461,2.046,462,1.097,463,1.097,464,1.016,465,1.097,466,1.847,467,1.867,468,1.016,469,1.097,470,1.398,471,1.867,472,1.016,473,1.069,474,1.097,475,1.016,476,1.097,477,1.016,478,0.966,479,1.097,480,1.016,481,1.097,482,1.016,483,0.991,484,1.097,485,1.016,486,1.069,487,1.042,488,1.097,489,1.016,490,1.588,491,0.991,492,1.016,493,1.016,494,1.097,495,1.016,496,1.867,497,1.016,498,1.471,499,1.588,500,0.991,501,1.016,502,0.991,503,0.811,504,1.097,505,0.991,506,0.942,507,1.016,508,1.097,509,1.016,510,1.097,511,1.016,512,1.097,513,1.016,514,1.33,515,1.016,516,1.471,517,1.016,518,1.097,519,1.016,520,1.33,521,1.097,522,1.016,523,1.097,524,1.097,555,2.956,594,2.387,642,1.818,651,4.053,652,5.831,653,5.464,654,2.247,655,2.676,656,1.888,657,4.239,658,4.18,659,5.393,660,2.387,661,1.016,662,2.031,663,2.616,664,1.403,665,1.403,666,2.387,667,2.676,668,5.384,669,3.737,670,3.874,671,3.427,672,4.028,673,1.471,674,1.916,675,3.245,676,3.874,677,3.427,678,5.393,679,2.387,680,2.223,681,3.101,682,3.618,683,3.63,684,3.63,685,4.588,686,2.507,687,2.367,688,2.247,689,5.393,690,2.676,691,3.169,692,4.588,693,3.169,694,4.588,695,3.874,696,5.911,697,3.169,698,5.209,699,2.371,700,1.719,701,1.888,702,5.209,703,3.598,704,5.209,705,3.598,706,3.169,707,3.874,708,4.266,709,3.169,710,2.507,711,3.169,712,3.169,713,2.049,714,1.818,715,2.367,716,2.247,717,2.507,718,2.367,719,2.142,720,3.169,721,1.253,722,2.142,723,3.598,724,2.887,725,2.676,726,2.367,727,4.588,728,2.676,729,2.142,730,2.507,731,3.169,732,2.049,733,2.367,734,2.367]],["title/modules/BlockSizeInputModule.html",[525,0.594,735,3.015]],["body/modules/BlockSizeInputModule.html",[3,0.077,4,0.077,5,0.077,36,0.01,65,0.008,70,0.008,80,0.231,89,0.243,105,0.077,109,0.165,237,1.465,391,2.071,407,1.618,458,0.921,466,2.494,525,0.871,527,1.745,528,1.933,529,2.474,530,1.884,531,1.836,532,2.474,543,2.312,544,1.79,546,1.984,550,2.253,554,4.171,555,2.793,556,3.138,557,2.472,652,4.715,653,4.418,735,6.143,736,5.585,737,5.585,738,5.585,739,5.087,740,2.641,741,2.149,742,5.284,743,4.418,744,5.284,745,4.988,746,4.171,747,3.979,748,3.327,749,5.087]],["title/interfaces/Collision.html",[106,0.269,750,3.217]],["body/interfaces/Collision.html",[0,1.27,3,0.035,4,0.035,5,0.035,14,2.068,15,1.052,17,0.236,21,2.209,27,0.691,29,2.939,32,0.5,33,0.513,34,3.939,36,0.01,37,0.35,38,0.534,40,0.767,41,0.807,42,2.395,43,2.302,44,1.528,45,2.075,51,0.393,55,1.183,59,0.884,61,1.697,65,0.005,70,0.005,77,3.097,80,0.219,83,1.661,85,3.856,86,1.815,87,1.183,88,1.183,89,0.109,90,1.147,92,2.818,93,0.807,94,1.71,95,0.943,99,1.661,100,1.5,103,1.627,105,0.053,106,0.332,108,1.147,109,0.074,110,1.623,114,4.818,115,1.309,117,1.28,125,2.801,131,2.541,135,1.945,138,1.671,139,0.426,141,0.822,142,1.183,143,1.183,144,1.259,145,1.785,146,1.56,147,1.785,148,1.785,149,1.785,150,1.785,151,1.785,168,2.29,178,0.748,188,1.114,195,0.653,201,0.537,226,1.447,227,1.57,238,1.27,258,0.54,267,0.487,269,1.303,283,0.526,298,0.767,325,2.801,352,1.5,354,2.801,358,3.269,369,1.082,376,1.608,387,2.417,393,3.724,399,1.052,410,1.615,413,1.614,419,3.447,429,1.615,434,0.582,437,0.582,450,1.052,503,1.692,610,3.333,625,1.393,626,1.5,629,1.345,630,1.393,632,1.183,643,0.969,651,2.395,669,1.5,750,3.969,751,1.991,752,2.064,753,3.519,754,2.125,755,1.785,756,1.88,757,1.88,758,3.969,759,2.293,760,2.293,761,2.293,762,5.331,763,3.142,764,3.056,765,2.293,766,3.519,767,1.88,768,1.991,769,1.701,770,3.519,771,2.739,772,2.293,773,1.5,774,1.393,775,3.519,776,2.885,777,1.444,778,1.991,779,1.701,780,1.259,781,1.996,782,1.785,783,2.801,784,1.88,785,1.56,786,1.996,787,1.345,788,1.56,789,1.183,790,1.183,791,1.183,792,1.082,793,1.301,794,2.293,795,1.345,796,2.125,797,3.519,798,2.125,799,3.262,800,2.125,801,2.125,802,2.125,803,2.125,804,2.293,805,3.519,806,2.293,807,3.519,808,2.293,809,2.293,810,2.293,811,2.293,812,2.293,813,2.293,814,2.293,815,2.697,816,1.701,817,5.104,818,3.519,819,2.293,820,2.293,821,2.293,822,2.293,823,2.601,824,2.293,825,3.519,826,3.056,827,3.025,828,2.293,829,2.293,830,2.293,831,2.293,832,2.293,833,2.293,834,5.278,835,4.803,836,3.511,837,2.293,838,2.293,839,1.991,840,2.293,841,3.519,842,2.293,843,2.293,844,3.519,845,2.885,846,4.484,847,3.519,848,3.519,849,2.293,850,3.519,851,2.293,852,2.497,853,2.293,854,3.519,855,2.293,856,3.039,857,2.293,858,3.262,859,5.876,860,3.056,861,4.282,862,2.293,863,2.845,864,6.849,865,2.885,866,3.519,867,3.519,868,2.885,869,2.125,870,2.293,871,3.519,872,3.519,873,3.056,874,2.293,875,2.293,876,2.293,877,2.293,878,2.293,879,2.374,880,1.627,881,1.627,882,2.293,883,2.293,884,2.293,885,2.293,886,2.293,887,2.293,888,2.293,889,2.293,890,3.519,891,2.885,892,3.719,893,2.293,894,2.293,895,2.293,896,2.293,897,2.293,898,2.293,899,3.519,900,2.293,901,2.293,902,1.991,903,2.293,904,1.991,905,3.519,906,1.991,907,2.293,908,1.991,909,2.125,910,2.293,911,1.991,912,2.885,913,2.293,914,1.991,915,1.785,916,2.293,917,1.991,918,2.293,919,1.991,920,3.519,921,1.991,922,2.293,923,1.991,924,1.991,925,1.991,926,3.519,927,2.293,928,2.293,929,2.293,930,2.293,931,2.293,932,2.293,933,2.293,934,2.293,935,2.125,936,2.125,937,2.739,938,2.739,939,1.88,940,2.739,941,2.739,942,2.739,943,3.262,944,4.257,945,2.293,946,2.293,947,2.293,948,3.519,949,2.293,950,2.293,951,2.293,952,2.293,953,3.519,954,2.293,955,4.282,956,2.293,957,2.293,958,1.22,959,2.885,960,1.627,961,1.991,962,3.262,963,2.293,964,2.293,965,1.88,966,2.293,967,2.293,968,2.293,969,2.293,970,2.293,971,2.293,972,1.785,973,2.293,974,2.293,975,2.293,976,2.293,977,2.293,978,2.293,979,1.88,980,1.701,981,2.293,982,2.885,983,1.991,984,2.293,985,2.293,986,2.293,987,1.88,988,2.293,989,2.293,990,2.293,991,2.293,992,2.293,993,2.293,994,1.991,995,2.293,996,1.991,997,2.293,998,2.293,999,2.293,1000,2.293,1001,2.293,1002,2.293,1003,2.293,1004,2.125,1005,2.293,1006,2.293,1007,2.293,1008,2.293,1009,2.293,1010,3.039,1011,1.88,1012,2.293,1013,2.293,1014,2.293,1015,2.293,1016,2.293,1017,1.88,1018,2.293,1019,1.88,1020,2.293,1021,2.293,1022,1.88,1023,1.88,1024,2.293,1025,2.293,1026,2.293,1027,2.293,1028,2.293,1029,2.293,1030,1.627,1031,2.293]],["title/modules/ConfigModule.html",[525,0.594,1032,3.015]],["body/modules/ConfigModule.html",[3,0.083,4,0.083,5,0.083,36,0.01,65,0.009,70,0.009,80,0.218,89,0.262,105,0.083,109,0.178,195,0.837,298,1.834,527,1.881,531,1.979,550,2.355,581,5.082,1032,5.522,1033,6.834,1034,4.949,1035,5.893,1036,6.98,1037,3.586,1038,6.834,1039,6.834]],["title/components/ContainerComponent.html",[179,0.426,468,1.221]],["body/components/ContainerComponent.html",[3,0.045,4,0.045,5,0.065,10,0.636,11,1.267,17,0.442,24,2.703,27,0.842,30,1.577,32,0.936,33,0.96,35,0.841,36,0.01,37,0.836,38,0.597,39,0.604,40,0.936,41,1.51,47,1.082,50,1.181,51,0.735,59,0.431,61,0.93,65,0.006,70,0.006,80,0.196,89,0.143,93,1.054,95,1.232,105,0.045,109,0.196,110,1.257,115,1.047,117,0.912,118,0.636,135,1.958,138,1.674,139,1.019,141,1.107,168,1.906,176,2.602,179,0.779,180,1.002,181,1.799,182,1.028,183,1.169,184,1.139,185,1.139,188,2.086,189,3.046,191,1.002,192,1.366,193,1.366,194,2.241,195,1.107,196,0.907,197,1.4,199,1.4,201,0.655,228,3.582,229,3.582,232,2.444,237,1.236,238,2.093,249,3.046,251,1.366,258,1.181,267,0.912,268,1.063,283,1.151,284,0.93,293,0.953,301,3.341,311,3.904,312,2.332,313,3.841,315,2.332,329,2.126,356,1.266,372,3.904,376,1.699,377,2.223,378,2.026,379,1.887,380,2.332,381,1.266,382,1.002,388,3.046,389,2.223,391,0.953,396,2.185,399,2.968,400,2.332,413,0.884,434,0.761,437,0.761,441,0.977,450,1.969,458,0.542,459,1.754,460,1.139,461,2.082,462,1.139,463,1.139,464,1.054,465,1.139,466,1.028,467,1.906,468,1.927,469,1.139,470,1.832,471,1.906,472,1.054,473,1.11,474,1.139,475,1.927,476,1.139,477,1.054,478,1.002,479,1.139,480,1.054,481,1.139,482,1.054,483,1.028,484,1.139,485,1.054,486,1.11,487,1.082,488,1.139,489,1.054,490,1.631,491,1.028,492,1.054,493,1.054,494,1.139,495,1.054,496,1.906,497,1.054,498,1.51,499,1.631,500,1.028,501,1.054,502,1.028,503,0.841,504,1.139,505,1.028,506,0.977,507,1.054,508,1.139,509,1.054,510,1.139,511,1.054,512,1.139,513,1.054,514,1.366,515,1.054,516,1.51,517,1.054,518,1.139,519,1.054,520,1.366,521,1.139,522,1.054,523,1.139,524,1.139,531,1.549,642,1.887,656,1.959,661,1.054,673,1.51,700,1.765,776,2.457,879,1.863,1040,3.289,1041,2.921,1042,5.015,1043,4.712,1044,5.35,1045,3.669,1046,6.251,1047,5.35,1048,6.251,1049,3.289,1050,3.734,1051,2.807,1052,3.327,1053,3.519,1054,5.35,1055,3.734,1056,3.734,1057,1.366,1058,6.251,1059,3.734,1060,6.826,1061,3.734,1062,2.996,1063,2.777,1064,3.007,1065,2.703,1066,2.457,1067,2.602,1068,3.289,1069,3.978,1070,3.734,1071,3.289,1072,3.734,1073,3.289,1074,4.112,1075,3.904,1076,3.289,1077,3.734,1078,4.609,1079,3.734,1080,5.35,1081,3.978,1082,2.996,1083,3.734,1084,3.734,1085,3.734,1086,3.289,1087,3.734,1088,3.734,1089,3.289,1090,3.734,1091,3.734,1092,3.734,1093,2.457,1094,2.435,1095,2.457,1096,2.996,1097,3.289,1098,2.777,1099,1.699,1100,3.734,1101,3.734,1102,2.996,1103,3.734,1104,3.734,1105,4.712,1106,2.457,1107,3.185,1108,4.712,1109,3.734,1110,3.734,1111,3.289,1112,3.734,1113,2.457,1114,2.996,1115,2.777,1116,3.734,1117,3.734,1118,3.734,1119,3.734,1120,3.734,1121,3.734,1122,3.734,1123,5.35,1124,5.35,1125,3.734,1126,3.734,1127,3.734,1128,3.734,1129,3.734,1130,3.734,1131,3.734,1132,2.777,1133,3.734,1134,3.734]],["title/components/ContentComponent.html",[179,0.426,470,1.161]],["body/components/ContentComponent.html",[3,0.036,4,0.036,5,0.054,10,0.647,11,1.064,14,2.219,17,0.45,18,1.147,27,0.708,30,1.863,32,0.786,33,0.807,34,4.005,35,1.227,36,0.01,37,0.928,38,0.658,39,0.881,44,2.404,45,2.105,47,0.855,50,1.029,51,0.836,59,0.34,61,1.119,65,0.005,67,1.756,70,0.005,80,0.197,89,0.113,94,1.15,95,0.974,99,2.306,101,2.12,103,3.466,105,0.036,109,0.18,115,0.835,117,0.503,118,0.928,135,1.322,139,0.978,141,1.154,168,0.9,179,0.773,180,0.792,181,1.119,182,0.812,183,0.924,184,0.9,185,0.9,188,1.752,189,2.653,190,3.582,191,0.792,192,1.147,193,1.147,194,2.197,195,1.094,196,1.322,197,1.176,199,1.176,201,0.55,202,4.049,218,2.194,225,3.466,228,3.194,229,3.194,232,1.056,237,1.258,238,2.361,243,2.194,249,2.19,250,1.269,251,1.672,258,1.029,263,1.68,267,1.292,268,1.507,269,2.051,282,1.438,283,1.448,284,0.735,293,0.753,296,1.941,304,1.68,305,1.548,330,1.941,351,4.872,352,1.548,354,3.194,356,2.702,358,3.324,361,2.928,364,3.199,367,2.194,376,0.735,378,1.118,381,1,382,1.853,383,2.711,386,2.412,387,1.483,388,1.68,389,2.676,390,1.15,391,1.147,392,1.389,393,2.359,396,1.39,397,2.189,399,3.094,401,2.562,404,1.86,411,1.86,412,2.19,413,1.064,417,2.857,418,2.324,419,1.389,420,1.221,421,1.259,422,1.389,428,1.259,429,1.086,430,2.056,431,2.056,433,1.548,434,1.241,437,1.11,441,0.772,442,1.941,444,3.498,448,1.491,452,1.343,453,1.343,458,0.428,459,1.591,460,0.9,461,1.856,462,0.9,463,0.9,464,0.833,465,0.9,466,0.812,467,1.66,468,0.833,469,0.9,470,1.759,471,1.66,472,0.833,473,0.877,474,0.9,475,0.833,476,0.9,477,0.833,478,0.792,479,0.9,480,0.833,481,0.9,482,0.833,483,0.812,484,0.9,485,0.833,486,0.877,487,0.855,488,0.9,489,0.833,490,1.371,491,0.812,492,0.833,493,0.833,494,0.9,495,0.833,496,1.66,497,0.833,498,1.269,499,1.371,500,0.812,501,0.833,502,0.812,503,0.665,504,0.9,505,0.812,506,0.772,507,0.833,508,0.9,509,0.833,510,0.9,511,0.833,512,0.9,513,0.833,514,1.147,515,0.833,516,1.269,517,0.833,518,0.9,519,0.833,520,1.147,521,0.9,522,0.833,523,0.9,524,0.9,544,1.269,594,1.752,601,2.398,625,2.653,626,3.194,629,1.389,630,1.438,661,0.833,669,1.548,673,1.269,674,1.704,700,1.483,708,3.132,716,1.843,717,2.056,719,1.756,721,2.404,722,1.756,781,2.77,815,3.311,816,2.676,834,3.343,839,2.056,863,1.98,909,3.343,915,2.807,938,1.843,939,1.941,940,1.843,941,1.843,942,1.843,943,2.194,944,4.482,960,1.68,962,3.343,1041,2.972,1053,2.957,1057,1.554,1081,2.194,1099,2.046,1113,1.941,1135,2.951,1136,4.368,1137,3.959,1138,5.444,1139,5.444,1140,6.087,1141,6.087,1142,5.444,1143,4.495,1144,5.444,1145,4.495,1146,6.087,1147,2.951,1148,4.495,1149,2.951,1150,4.495,1151,2.951,1152,5.444,1153,2.951,1154,2.951,1155,1.756,1156,2.951,1157,2.951,1158,2.359,1159,2.194,1160,2.951,1161,2.951,1162,4.005,1163,1.68,1164,4.495,1165,4.495,1166,4.495,1167,4.495,1168,6.903,1169,4.495,1170,4.495,1171,4.495,1172,4.495,1173,4.495,1174,4.495,1175,2.951,1176,2.951,1177,3.959,1178,4.495,1179,6.552,1180,4.495,1181,3.959,1182,4.495,1183,2.951,1184,2.951,1185,5.444,1186,4.495,1187,4.495,1188,4.495,1189,4.495,1190,4.495,1191,4.495,1192,4.495,1193,2.951,1194,2.951,1195,2.957,1196,4.495,1197,4.495,1198,2.951,1199,2.951,1200,2.951,1201,2.194,1202,2.951,1203,4.495,1204,4.495,1205,2.951,1206,2.951,1207,3.132,1208,1.941,1209,4.495,1210,6.087,1211,6.087,1212,4.495,1213,4.495,1214,4.495,1215,4.495,1216,3.324,1217,2.957,1218,3.132,1219,3.4,1220,2.367,1221,2.951,1222,2.951,1223,2.951,1224,2.951,1225,2.951,1226,2.367,1227,2.367,1228,2.951,1229,2.951,1230,2.951,1231,2.951,1232,1.843,1233,2.951,1234,2.599,1235,2.056,1236,2.951]],["title/components/ContentComponent-1.html",[168,1.098,179,0.354,470,0.966]],["body/components/ContentComponent-1.html",[3,0.041,4,0.041,5,0.061,10,0.597,11,1.19,14,1.418,17,0.415,27,0.539,30,1.879,32,0.879,33,0.902,35,0.771,36,0.01,37,0.802,38,0.652,39,0.554,40,0.879,41,1.418,47,2.022,50,0.647,51,0.817,59,0.395,61,1.816,65,0.005,70,0.005,80,0.182,89,0.131,93,0.967,105,0.041,109,0.19,110,1.207,115,1.156,117,0.584,118,0.584,135,1.695,138,1.572,139,1.125,141,0.9,146,1.869,168,1.532,179,0.761,180,0.919,181,1.251,182,1.383,183,1.072,184,1.044,185,1.044,188,1.959,189,2.9,191,0.919,192,1.282,193,1.282,194,2.225,195,1.101,196,0.831,197,1.315,201,0.615,228,3.44,229,3.44,232,2.347,237,0.791,238,1.723,249,2.9,251,1.282,258,1.239,267,1.386,268,1.595,269,2.241,283,1.096,284,0.852,293,0.874,301,3.137,311,3.716,312,2.138,315,2.138,329,1.949,335,2.386,352,1.797,354,3.122,356,1.161,372,3.716,376,1.816,377,2.038,378,1.297,379,1.73,380,2.138,381,1.161,382,0.919,383,2.079,384,1.797,385,1.797,386,1.261,387,1.13,388,1.949,391,1.974,396,2.213,397,2.225,399,3.163,404,2.079,405,2.747,406,2.386,407,0.874,413,1.786,418,2.144,419,1.612,434,1.487,437,1.487,441,0.896,449,2.747,450,1.261,451,2.386,458,0.497,459,1.695,460,1.044,461,1.999,462,1.044,463,1.044,464,0.967,465,1.044,466,0.943,467,1.815,468,0.967,469,1.044,470,1.874,471,1.815,472,0.967,473,1.018,474,1.044,475,1.851,476,1.044,477,0.967,478,0.919,479,1.044,480,0.967,481,1.044,482,0.967,483,0.943,484,1.044,485,0.967,486,1.018,487,0.992,488,1.044,489,0.967,490,1.532,491,0.943,492,0.967,493,0.967,494,1.044,495,0.967,496,1.815,497,0.967,498,1.418,499,1.532,500,0.943,501,0.967,502,0.943,503,0.771,504,1.044,505,0.943,506,0.896,507,0.967,508,1.044,509,0.967,510,1.044,511,0.967,512,1.044,513,0.967,514,1.282,515,0.967,516,1.418,517,0.967,518,1.044,519,0.967,520,1.282,521,1.044,522,0.967,523,1.044,524,1.044,661,0.967,673,1.418,680,2.144,700,1.658,721,2.977,722,2.038,863,2.213,958,1.461,1045,3.321,1049,4.425,1051,2.636,1052,3.194,1053,3.305,1057,1.925,1063,2.546,1064,2.621,1074,4.312,1075,3.716,1078,2.99,1086,4.425,1098,2.546,1106,2.253,1107,2.038,1113,2.253,1114,2.747,1115,2.546,1136,4.774,1237,3.424,1238,5.024,1239,7.163,1240,5.95,1241,6.555,1242,5.95,1243,5.95,1244,5.024,1245,5.024,1246,6.555,1247,6.555,1248,6.555,1249,3.424,1250,3.305,1251,5.024,1252,5.95,1253,5.024,1254,5.024,1255,5.95,1256,5.024,1257,5.024,1258,5.024,1259,5.024,1260,6.555,1261,2.546,1262,4.425,1263,2.747,1264,3.016,1265,3.424,1266,3.424,1267,3.424,1268,3.424,1269,3.424,1270,2.386,1271,3.424,1272,3.424,1273,3.016,1274,2.747,1275,2.747,1276,2.747,1277,5.024,1278,3.424,1279,5.024,1280,2.138,1281,3.424,1282,1.869,1283,2.253,1284,3.424,1285,4.488,1286,3.424,1287,3.424,1288,3.424,1289,5.95,1290,3.424,1291,3.424,1292,2.138,1293,3.016,1294,3.424,1295,5.024,1296,3.424,1297,3.424,1298,5.024,1299,3.424,1300,3.424,1301,3.424,1302,3.424]],["title/interfaces/ContentContainerChanged.html",[106,0.269,1303,2.846]],["body/interfaces/ContentContainerChanged.html",[3,0.065,4,0.065,5,0.065,10,0.638,14,1.515,17,0.443,36,0.01,38,0.753,40,1.196,41,1.515,61,1.703,65,0.007,70,0.007,80,0.14,105,0.107,106,0.493,109,0.14,115,0.823,117,1.166,138,2.356,163,2.838,178,1.404,179,0.806,181,1.703,201,0.837,258,1.292,313,3.112,396,2.274,397,2.085,399,3.202,408,4.071,415,2.363,514,1.37,632,3.115,675,2.22,721,2.382,789,2.22,790,2.22,791,2.22,792,2.032,793,2.442,879,1.869,1045,3.426,1051,2.815,1052,3.333,1057,1.746,1064,3.925,1065,3.456,1078,4.071,1094,2.442,1106,3.53,1107,4.071,1270,3.739,1280,3.35,1282,2.929,1285,4.071,1303,4.953,1304,3.53,1305,4.766,1306,4.766,1307,4.766,1308,4.953,1309,3.739,1310,4.499,1311,3.739,1312,4.513,1313,4.499,1314,4.766,1315,3.99,1316,3.99,1317,4.499,1318,4.499,1319,3.35,1320,3.99,1321,3.99,1322,4.766,1323,3.739,1324,3.739,1325,4.286,1326,3.53,1327,3.53]],["title/modules/ContentModule.html",[525,0.594,536,3.015]],["body/modules/ContentModule.html",[3,0.075,4,0.075,5,0.075,36,0.01,65,0.008,70,0.008,80,0.23,89,0.236,105,0.075,109,0.161,195,0.756,284,1.858,298,1.657,407,1.576,441,1.616,458,0.897,470,2.424,516,1.743,525,0.848,527,1.7,528,1.883,529,2.446,530,1.835,531,1.788,532,2.446,536,6.27,543,2.276,544,1.743,546,2.336,550,2.218,556,3.088,557,2.407,740,2.599,741,2.093,742,5.2,743,4.303,1062,4.954,1328,5.439,1329,5.439,1330,5.439,1331,5.439,1332,6.04,1333,6.04,1334,6.175,1335,7.463,1336,7.463,1337,7.463,1338,4.592,1339,6.175,1340,4.303,1341,4.954,1342,6.175]],["title/modules/CoreModule.html",[525,0.594,537,3.015]],["body/modules/CoreModule.html",[3,0.074,4,0.074,5,0.074,36,0.01,39,0.995,65,0.008,70,0.008,80,0.23,89,0.236,105,0.074,109,0.16,117,1.049,195,0.912,196,1.494,298,1.652,299,4.576,407,1.571,458,0.894,525,1.1,527,1.694,528,1.877,529,1.877,530,1.829,531,1.782,532,2.271,537,6.267,543,2.271,544,1.738,546,2.331,550,2.213,589,4.576,629,2.896,630,2.999,754,4.576,1032,6.035,1076,5.42,1343,5.42,1344,5.42,1345,6.035,1346,6.035,1347,6.154,1348,7.447,1349,5.19,1350,7.447,1351,6.154,1352,6.154,1353,6.154,1354,6.154,1355,6.154,1356,6.154,1357,6.154,1358,6.154,1359,5.42,1360,8.008,1361,6.154,1362,4.937,1363,6.154]],["title/interfaces/DefaultIconDefinition.html",[106,0.269,1364,3.471]],["body/interfaces/DefaultIconDefinition.html",[3,0.045,4,0.045,5,0.045,10,0.447,17,0.311,36,0.01,37,1.122,38,0.566,39,1.284,59,0.966,65,0.006,70,0.006,105,0.065,106,0.234,115,0.577,118,1.285,138,1.178,178,0.986,187,5.435,201,0.659,283,0.693,322,5.726,425,3.921,434,1.477,437,1.477,459,1.885,601,3.018,643,1.824,656,2.824,817,2.624,863,1.659,1041,2.056,1364,5.038,1365,2.8,1366,3.316,1367,3.316,1368,3.021,1369,3.765,1370,4.318,1371,3.765,1372,3.765,1373,3.316,1374,3.765,1375,3.765,1376,3.021,1377,3.765,1378,6.815,1379,4.002,1380,5.497,1381,3.75,1382,2.624,1383,3.316,1384,2.8,1385,2.351,1386,3.316,1387,8.018,1388,8.018,1389,3.316,1390,3.316,1391,3.316,1392,4.74,1393,3.316,1394,3.316,1395,3.316,1396,3.316,1397,3.316,1398,3.316,1399,3.316,1400,3.316,1401,3.316,1402,3.316,1403,3.316,1404,3.316,1405,6.035,1406,6.035,1407,6.384,1408,6.384,1409,2.624,1410,3.316,1411,4.079,1412,3.316,1413,3.316,1414,3.316,1415,3.316,1416,3.75,1417,3.75,1418,4.74,1419,3.316,1420,3.316,1421,3.316,1422,3.316,1423,6.384,1424,3.316,1425,4.74,1426,3.316,1427,3.316,1428,3.316,1429,3.316,1430,3.316,1431,6.035,1432,4.74,1433,3.316,1434,3.316,1435,3.316,1436,3.316,1437,3.316,1438,3.316,1439,3.316,1440,3.316,1441,3.316,1442,3.316,1443,3.316,1444,3.316,1445,3.316,1446,4.74,1447,4.74,1448,3.316,1449,3.316,1450,2.624,1451,3.316,1452,3.316,1453,3.316,1454,3.316,1455,3.316,1456,3.316,1457,3.316,1458,6.035,1459,3.316,1460,3.316,1461,6.035,1462,3.316,1463,3.316,1464,2.624,1465,3.316,1466,3.316,1467,5.532,1468,3.316,1469,4.74,1470,3.316,1471,3.316,1472,3.316,1473,3.316]],["title/components/DetailsLabelComponent.html",[179,0.426,472,1.221]],["body/components/DetailsLabelComponent.html",[3,0.055,4,0.055,5,0.074,10,0.732,11,1.459,17,0.378,18,1.573,30,1.722,35,1.031,36,0.01,37,1.002,38,0.616,39,0.74,47,1.325,50,1.164,59,1.011,65,0.007,70,0.007,80,0.119,89,0.175,105,0.055,109,0.208,110,0.843,118,0.78,132,2.868,139,0.683,141,0.957,179,0.765,180,1.228,181,1.534,182,1.26,183,1.432,184,1.395,185,1.395,191,1.228,192,1.573,193,1.573,194,2.272,195,1.121,196,1.111,197,1.613,199,1.613,201,0.754,237,1.423,250,1.74,251,1.573,267,1.187,268,1.385,283,1.283,284,1.139,293,1.168,381,1.551,382,1.87,386,1.685,391,1.168,393,3.233,396,1.778,425,2.63,429,2.268,434,0.933,437,0.933,441,1.198,450,2.268,458,0.664,459,1.889,460,1.395,461,2.273,462,1.395,463,1.395,464,1.292,465,1.395,466,1.26,467,2.124,468,1.292,469,1.395,470,1.654,471,2.124,472,2.104,473,2.637,474,1.395,475,1.292,476,1.395,477,1.292,478,1.228,479,1.395,480,1.292,481,1.395,482,1.292,483,1.26,484,1.395,485,1.292,486,1.36,487,1.325,488,1.395,489,1.292,490,1.879,491,1.26,492,1.292,493,1.292,494,1.395,495,1.292,496,2.124,497,1.292,498,1.74,499,1.879,500,1.26,501,1.292,502,1.26,503,1.031,504,1.395,505,1.26,506,1.198,507,1.292,508,1.395,509,1.292,510,1.395,511,1.292,512,1.395,513,1.292,514,1.573,515,1.292,516,1.74,517,1.292,518,1.395,519,1.292,520,1.573,521,1.395,522,1.292,523,1.395,524,1.395,594,2.402,661,1.292,673,1.74,674,2.18,700,2.033,1474,6.852,1475,6.852,1476,4.576,1477,5.427,1478,5.427,1479,4.654,1480,7.453,1481,6.161,1482,7.453,1483,6.161,1484,6.966,1485,6.161,1486,6.161,1487,4.576,1488,3.668,1489,6.161,1490,6.161,1491,4.576,1492,3.508,1493,6.161,1494,4.582,1495,7.453,1496,6.161,1497,6.161,1498,6.161,1499,4.576,1500,4.576,1501,6.161,1502,3.01]],["title/modules/DetailsLabelModule.html",[525,0.594,1503,3.217]],["body/modules/DetailsLabelModule.html",[3,0.08,4,0.08,5,0.08,36,0.01,65,0.008,70,0.008,80,0.215,89,0.253,105,0.08,109,0.172,407,1.685,458,0.959,472,2.571,473,1.962,525,0.907,527,1.817,528,2.013,529,2.516,530,1.962,531,1.912,532,2.516,543,2.368,544,1.864,546,2.066,550,2.308,740,2.705,741,2.238,1474,5.815,1475,5.815,1503,6.608,1504,5.815,1505,5.815,1506,5.815,1507,6.602,1508,6.602]],["title/interfaces/DocumentationContent.html",[106,0.269,1509,3.81]],["body/interfaces/DocumentationContent.html",[3,0.095,4,0.081,5,0.081,7,2.955,10,0.797,17,0.554,36,0.01,38,0.648,59,1.018,65,0.008,70,0.008,105,0.081,106,0.417,178,1.756,201,0.96,399,3.251,713,5.028,1509,6.905,1510,6.708,1511,6.708,1512,4.189,1513,6.708,1514,6.077,1515,5.908,1516,3.993,1517,5.829]],["title/interfaces/DrawerContainersChanged.html",[106,0.269,1310,2.846]],["body/interfaces/DrawerContainersChanged.html",[3,0.064,4,0.064,5,0.064,10,0.633,14,1.503,17,0.44,36,0.01,38,0.754,40,1.19,41,1.503,61,1.694,65,0.007,70,0.007,80,0.138,105,0.106,106,0.492,109,0.138,115,0.816,117,0.907,138,2.13,163,2.83,178,1.393,179,0.778,181,1.867,201,0.833,258,1.286,313,3.097,396,2.289,397,2.075,399,2.91,408,4.051,415,2.345,514,1.359,632,3.104,675,2.816,721,2.37,789,2.203,790,2.203,791,2.203,792,2.016,793,2.423,879,2.37,1045,3.413,1051,2.793,1052,3.316,1057,1.737,1064,3.921,1065,3.438,1078,4.863,1094,2.423,1106,3.502,1107,4.051,1270,4.742,1280,3.324,1282,2.906,1285,4.051,1303,4.477,1304,3.502,1305,4.757,1306,4.742,1307,4.742,1308,4.934,1309,3.709,1310,4.934,1311,4.742,1312,4.5,1313,4.477,1314,4.742,1315,3.959,1316,3.959,1317,4.477,1318,4.477,1319,3.324,1320,3.959,1321,3.959,1322,4.742,1323,3.709,1324,3.709,1325,4.27,1326,3.502,1327,3.502]],["title/interfaces/DrawerInitialized.html",[106,0.269,1317,2.846]],["body/interfaces/DrawerInitialized.html",[3,0.065,4,0.065,5,0.065,10,0.642,14,1.525,17,0.446,36,0.01,38,0.753,40,1.202,41,1.525,61,1.71,65,0.007,70,0.007,80,0.141,105,0.107,106,0.494,109,0.141,115,0.828,117,0.921,138,2.15,163,2.704,178,1.414,179,0.743,181,1.71,201,0.841,258,1.298,313,3.126,396,2.285,397,2.095,399,2.926,408,4.089,415,2.38,514,1.379,632,3.125,675,2.236,721,2.392,789,2.236,790,2.236,791,2.236,792,2.046,793,2.459,879,1.882,1045,3.437,1051,2.835,1052,3.348,1057,1.753,1064,3.928,1065,3.471,1078,4.089,1094,2.459,1106,3.554,1107,4.089,1270,3.765,1280,3.374,1282,2.95,1285,4.089,1303,4.519,1304,3.554,1305,4.775,1306,4.787,1307,4.787,1308,4.969,1309,3.765,1310,4.519,1311,3.765,1312,4.525,1313,4.519,1314,4.787,1315,5.108,1316,5.108,1317,4.969,1318,4.519,1319,3.374,1320,4.018,1321,4.018,1322,4.787,1323,3.765,1324,3.765,1325,4.3,1326,3.554,1327,3.554]],["title/modules/DrawerModule.html",[525,0.594,538,3.015]],["body/modules/DrawerModule.html",[3,0.072,4,0.072,5,0.072,36,0.01,65,0.008,70,0.008,80,0.231,89,0.229,105,0.072,109,0.156,407,1.529,458,0.87,468,2.541,470,2.339,475,2.541,513,2.541,514,1.529,525,0.823,527,1.649,528,1.827,529,2.414,530,1.78,531,2.122,532,2.414,538,6.328,543,2.234,544,1.692,546,1.875,550,2.177,556,3.032,557,2.336,559,6.454,560,5.106,561,4.175,562,5.878,563,4.807,581,4.456,582,4.807,1062,4.807,1063,4.456,1309,4.175,1518,5.277,1519,5.277,1520,5.277,1521,5.991,1522,4.82,1523,4.82,1524,5.991,1525,5.277,1526,5.277]],["title/interfaces/DrawerToggled.html",[106,0.269,1318,2.846]],["body/interfaces/DrawerToggled.html",[3,0.063,4,0.063,5,0.063,10,0.615,14,1.887,17,0.428,36,0.01,38,0.755,40,1.169,41,1.887,61,2.065,65,0.007,70,0.007,80,0.135,105,0.106,106,0.486,109,0.135,115,0.794,117,0.882,138,2.092,163,2.8,178,1.355,179,0.728,181,1.664,201,0.818,258,1.567,313,3.042,396,2.302,397,2.529,399,2.88,408,4.937,415,2.944,514,1.706,632,3.063,675,2.142,721,2.888,789,2.142,790,2.142,791,2.142,792,1.961,793,2.356,879,1.803,1045,3.369,1051,3.507,1052,3.257,1057,1.997,1064,3.907,1065,3.377,1078,3.979,1094,2.356,1106,3.405,1107,3.979,1270,3.607,1280,3.232,1282,2.826,1285,4.937,1303,4.397,1304,3.405,1305,4.611,1306,4.657,1307,4.657,1308,4.869,1309,3.607,1310,4.397,1311,3.607,1312,4.453,1313,4.397,1314,4.657,1315,3.849,1316,3.849,1317,4.397,1318,4.869,1319,4.174,1320,4.97,1321,4.97,1322,4.657,1323,3.607,1324,3.607,1325,4.214,1326,3.405,1327,3.405]],["title/interfaces/ExtractionSet.html",[106,0.269,1527,2.463]],["body/interfaces/ExtractionSet.html",[3,0.077,4,0.077,5,0.077,10,0.762,17,0.53,36,0.01,37,1.07,38,0.673,39,1.235,59,1.008,65,0.008,70,0.008,80,0.167,105,0.077,106,0.399,118,1.49,178,1.679,201,0.935,410,3.279,478,2.39,520,1.638,681,4.545,783,4.428,785,3.502,1158,4.007,1527,4.347,1528,6.415,1529,6.415,1530,6.623,1531,7.635,1532,7.635]],["title/components/ExtractionSetDropdownComponent.html",[179,0.426,477,1.221]],["body/components/ExtractionSetDropdownComponent.html",[3,0.047,4,0.047,5,0.066,10,0.757,11,1.298,17,0.319,18,1.399,27,0.609,30,1.846,32,0.959,33,0.984,35,1.235,36,0.01,37,0.978,38,0.646,39,0.887,40,0.959,47,1.119,50,1.204,51,0.753,59,0.446,65,0.006,66,1.702,70,0.006,80,0.166,89,0.148,105,0.047,109,0.198,110,0.712,117,0.659,118,1.565,139,0.818,140,1.552,141,1.006,168,1.178,179,0.72,180,1.037,181,1.365,182,1.064,183,1.209,184,1.178,185,1.178,191,1.037,192,1.399,193,1.399,194,2.246,195,1.11,196,0.938,197,1.435,199,1.435,201,0.671,237,0.893,238,1.119,250,1.548,251,1.399,258,1.036,267,0.934,268,1.455,283,1.173,284,0.962,293,0.986,369,2.076,370,2.671,371,2.2,376,1.365,381,1.31,386,2.018,391,0.986,396,1.626,397,1.672,401,1.819,402,4.738,411,1.599,413,0.915,416,2.693,434,0.788,437,0.788,441,1.011,443,2.413,448,1.952,452,2.899,453,2.899,455,2.413,456,2.693,457,4.439,458,0.561,459,1.778,460,1.178,461,2.114,462,1.178,463,1.178,464,1.091,465,1.178,466,1.064,467,1.943,468,1.091,469,1.178,470,1.471,471,1.943,472,1.091,473,1.148,474,1.178,475,1.091,476,1.178,477,1.957,478,2.428,479,1.178,480,1.091,481,1.178,482,1.091,483,1.064,484,1.178,485,1.091,486,1.148,487,1.119,488,1.178,489,1.091,490,1.672,491,1.064,492,1.091,493,1.091,494,1.178,495,1.091,496,1.943,497,1.091,498,1.548,499,1.672,500,1.064,501,1.091,502,1.064,503,0.871,504,1.178,505,1.064,506,1.011,507,1.091,508,1.178,509,1.091,510,1.178,511,1.091,512,1.178,513,1.091,514,1.399,515,1.091,516,1.548,517,1.091,518,1.178,519,1.091,520,1.399,521,1.178,522,1.091,523,1.178,524,1.178,555,2.415,594,2.137,660,2.484,661,1.091,662,2.137,663,2.703,664,1.506,665,1.506,666,2.484,673,1.548,674,1.994,679,2.484,699,2.495,700,1.809,701,2.028,729,3.263,730,2.693,1057,1.399,1099,3.559,1488,3.263,1514,2.693,1527,4.549,1533,7.159,1534,6.521,1535,3.864,1536,7.26,1537,4.077,1538,6.371,1539,5.482,1540,5.207,1541,5.482,1542,6.933,1543,6.371,1544,5.482,1545,3.864,1546,3.343,1547,3.864,1548,3.263,1549,2.495,1550,5.482,1551,5.482,1552,3.864,1553,3.864,1554,4.398,1555,5.562,1556,5.156,1557,3.423,1558,3.864,1559,3.864,1560,3.864,1561,3.864,1562,3.864,1563,3.864,1564,3.864,1565,5.482,1566,5.482,1567,5.482,1568,3.1,1569,3.864,1570,3.864,1571,2.874,1572,3.864,1573,3.864,1574,3.1,1575,3.864]],["title/modules/ExtractionSetDropdownModule.html",[525,0.594,1576,3.015]],["body/modules/ExtractionSetDropdownModule.html",[3,0.079,4,0.079,5,0.079,36,0.01,65,0.008,70,0.008,80,0.221,89,0.25,105,0.079,109,0.17,118,1.4,407,1.667,458,0.948,477,2.567,478,1.753,525,0.897,527,1.798,528,1.991,529,2.505,530,1.941,531,1.892,532,2.505,543,2.353,544,1.844,546,2.044,550,2.293,740,2.688,741,2.213,1533,5.752,1534,5.24,1576,6.179,1577,5.752,1578,5.752,1579,5.752,1580,6.531,1581,6.191,1582,5.24,1583,6.531]],["title/interfaces/GlobalConfig.html",[106,0.269,226,1.427]],["body/interfaces/GlobalConfig.html",[3,0.063,4,0.063,5,0.063,13,2.848,17,0.431,36,0.01,37,0.639,38,0.747,39,1.487,51,0.923,59,1.053,65,0.007,70,0.007,72,4.419,80,0.193,89,0.2,93,1.473,105,0.098,106,0.418,110,0.961,115,0.8,117,0.889,178,1.365,195,0.639,201,0.822,203,3.823,204,4.67,205,4.67,207,4.466,208,4.466,226,2.589,258,1.669,298,1.4,306,2.751,307,3.394,308,3.394,332,1.473,410,2.888,434,1.063,437,1.063,450,3.112,595,4.67,596,5.161,597,6.294,598,5.467,599,6.294,600,4.67,601,3.456,602,5.834,603,5.467,643,1.768,958,2.226,1034,4.194,1035,3.879,1409,3.635,1411,3.105,1416,3.635,1417,3.635,1450,3.635,1584,3.635,1585,4.422,1586,5.161,1587,5.916,1588,3.257,1589,4.419,1590,3.635,1591,2.848,1592,2.848,1593,2.848,1594,4.594,1595,4.185,1596,4.185,1597,2.374,1598,4.185,1599,4.594]],["title/components/HeaderComponent.html",[179,0.426,480,1.221]],["body/components/HeaderComponent.html",[3,0.054,4,0.054,5,0.073,10,0.716,11,1.428,17,0.366,27,0.698,30,1.777,32,1.055,33,1.082,35,0.998,36,0.01,37,0.994,38,0.636,39,0.717,44,2.828,47,1.283,59,0.887,65,0.006,66,2.656,70,0.006,80,0.157,89,0.17,101,2.561,105,0.054,109,0.206,118,0.755,139,0.661,141,0.941,168,1.351,179,0.757,180,1.189,181,1.501,182,1.22,183,1.387,184,1.351,185,1.351,191,1.189,192,1.539,193,1.539,194,2.267,195,1.119,196,1.076,197,1.578,199,1.578,201,0.738,203,4.129,204,4.079,205,4.079,237,1.023,250,1.935,251,1.539,267,1.028,268,1.198,283,1.262,284,1.103,293,1.131,305,2.325,332,1.702,378,1.678,381,1.502,382,1.974,383,3.184,386,2.832,387,1.989,390,2.671,391,1.964,393,2.325,395,2.159,396,1.749,397,2.243,404,1.833,411,2.835,413,1.742,418,3.139,420,1.833,421,1.891,422,2.085,425,1.891,428,3.139,429,2.708,430,4.201,432,2.743,433,3.163,434,0.903,437,0.903,441,1.16,444,2.938,458,0.643,459,1.868,460,1.351,461,2.243,462,1.351,463,1.351,464,1.251,465,1.351,466,1.22,467,2.089,468,1.251,469,1.351,470,1.618,471,2.089,472,1.251,473,1.317,474,1.351,475,1.251,476,1.351,477,1.251,478,1.189,479,1.351,480,2.077,481,1.351,482,1.251,483,1.22,484,1.351,485,1.251,486,1.317,487,1.283,488,1.351,489,1.251,490,1.838,491,1.22,492,1.251,493,1.251,494,1.351,495,1.251,496,2.089,497,1.251,498,1.702,499,1.838,500,1.22,501,1.251,502,1.22,503,0.998,504,1.351,505,1.22,506,1.16,507,1.251,508,1.351,509,1.251,510,1.351,511,1.251,512,1.351,513,1.251,514,1.539,515,1.251,516,1.702,517,1.251,518,1.351,519,1.251,520,1.539,521,1.351,522,1.251,523,1.351,524,1.351,594,2.35,661,1.251,673,1.702,674,2.145,700,1.989,714,2.239,719,2.637,721,1.543,729,2.637,732,3.432,733,2.915,734,2.915,1071,3.902,1219,2.767,1262,3.295,1311,3.087,1382,3.087,1494,3.295,1502,4.508,1515,3.902,1600,4.43,1601,6.852,1602,6.028,1603,3.555,1604,6.028,1605,4.43,1606,6.028,1607,4.43,1608,6.028,1609,4.483,1610,3.295,1611,3.555,1612,3.295,1613,4.43,1614,4.43,1615,4.43,1616,4.43,1617,4.43,1618,2.915,1619,4.43,1620,4.43,1621,3.902,1622,4.43,1623,4.43,1624,4.43,1625,3.295,1626,6.028]],["title/modules/HeaderModule.html",[525,0.594,539,3.015]],["body/modules/HeaderModule.html",[3,0.079,4,0.079,5,0.079,36,0.01,65,0.008,70,0.008,80,0.225,89,0.25,105,0.079,109,0.17,407,1.667,458,0.948,480,2.567,525,0.897,527,1.798,528,1.991,529,2.505,530,1.941,531,1.892,532,2.505,539,6.179,543,2.353,544,1.844,546,2.044,550,2.293,556,3.193,557,2.546,740,2.688,741,2.213,747,4.049,748,3.427,1627,5.752,1628,5.752,1629,5.752,1630,6.531,1631,6.531]],["title/interfaces/IconDefinition.html",[106,0.269,1632,3.471]],["body/interfaces/IconDefinition.html",[0,1.7,3,0.051,4,0.051,5,0.051,10,0.506,14,2.043,15,1.568,17,0.352,21,1.763,27,0.671,32,0.745,33,0.765,36,0.01,37,1.056,38,0.598,39,1.36,40,0.745,41,1.896,48,2.966,50,1.367,51,0.806,59,0.927,65,0.006,70,0.006,80,0.216,83,2.223,86,2.429,87,1.763,88,1.763,89,0.163,90,1.711,105,0.071,106,0.265,109,0.111,110,1.549,115,1.255,117,1,118,1.337,135,1.904,139,1.17,141,0.922,142,1.763,143,1.763,175,3.168,178,1.115,195,0.522,201,0.718,226,1.937,227,2.101,231,2.969,258,1.109,267,1,268,0.847,269,2.331,283,1.332,298,1.144,322,5.303,369,2.223,376,1.671,425,3.83,459,2.062,557,1.661,560,2.969,561,2.969,595,3.494,601,3.607,632,2.778,634,3.418,636,3.418,642,2.153,643,1.989,656,3.08,780,1.877,879,2.044,1155,4.517,1163,3.341,1216,3.666,1362,3.418,1365,3.168,1368,6.569,1378,6.368,1379,5.643,1380,5.804,1381,4.09,1382,5.465,1384,3.168,1479,2.326,1618,2.803,1632,6.293,1633,3.418,1634,3.753,1635,4.365,1636,6.372,1637,6.372,1638,5.169,1639,5.914,1640,5.169,1641,3.753,1642,3.753,1643,2.969,1644,6.908,1645,5.169,1646,3.753,1647,3.753,1648,3.665,1649,3.753,1650,3.753,1651,3.753,1652,3.753,1653,3.753,1654,5.169,1655,3.753,1656,3.753,1657,3.753,1658,3.753,1659,3.753,1660,3.753,1661,3.753,1662,3.753,1663,3.753,1664,3.753,1665,3.753,1666,3.753,1667,3.168,1668,5.169,1669,3.753,1670,3.753,1671,3.753,1672,3.753,1673,3.753,1674,5.169,1675,3.753,1676,3.753,1677,3.418,1678,3.753,1679,3.753,1680,3.753,1681,5.914,1682,3.753,1683,3.753,1684,3.753,1685,5.169,1686,3.753,1687,3.753,1688,3.753,1689,3.753,1690,3.753,1691,3.753,1692,3.753,1693,3.753,1694,3.168,1695,3.753,1696,3.753]],["title/injectables/IconRegistryState.html",[0,1.253,1643,3.015]],["body/injectables/IconRegistryState.html",[0,1.67,2,2.364,3,0.05,4,0.05,5,0.05,10,0.787,14,2.197,15,2.123,17,0.343,18,1.472,21,2.961,27,0.908,30,1.53,32,1.009,33,1.035,35,1.299,36,0.01,37,1.035,38,0.476,39,1.157,40,1.009,41,2.021,47,1.203,48,3.347,50,1.47,51,0.91,59,0.764,65,0.006,70,0.006,80,0.215,83,2.184,86,2.386,87,1.719,88,1.719,89,0.159,90,1.668,105,0.07,106,0.258,109,0.108,110,1.541,115,1.248,117,0.708,118,1.129,135,1.889,139,1.161,141,0.91,142,1.719,143,1.719,175,3.089,195,0.508,226,2.361,227,2.562,231,2.894,258,1.252,267,1.129,268,0.826,269,2.372,283,1.433,298,1.115,322,4.984,369,2.71,376,1.782,425,3.813,459,1.976,557,1.619,560,2.894,561,2.894,595,3.433,601,3.516,632,2.741,634,3.332,636,3.332,642,2.099,643,1.408,656,2.179,780,1.829,879,2.008,1155,4.476,1163,3.771,1216,4.105,1362,4.626,1365,5.322,1368,6.528,1378,6.051,1379,5.322,1380,4.626,1381,2.894,1382,5.422,1384,3.089,1479,2.267,1618,3.793,1632,6.403,1633,5.741,1634,3.658,1635,3.089,1636,5.079,1637,5.079,1638,5.835,1639,6.623,1640,6.303,1641,5.079,1642,3.658,1643,4.018,1644,7.278,1645,6.303,1646,5.079,1647,5.079,1648,4.469,1649,3.658,1650,3.658,1651,3.658,1652,3.658,1653,3.658,1654,5.079,1655,3.658,1656,3.658,1657,3.658,1658,3.658,1659,3.658,1660,3.658,1661,3.658,1662,3.658,1663,3.658,1664,3.658,1665,3.658,1666,3.658,1667,4.288,1668,5.835,1669,5.079,1670,3.658,1671,3.658,1672,5.835,1673,3.658,1674,5.079,1675,3.658,1676,3.658,1677,3.332,1678,3.658,1679,3.658,1680,3.658,1681,5.835,1682,3.658,1683,3.658,1684,3.658,1685,5.079,1686,3.658,1687,3.658,1688,3.658,1689,3.658,1690,3.658,1691,3.658,1692,3.658,1693,3.658,1694,3.089,1695,3.658,1696,3.658,1697,4.153,1698,4.153,1699,4.153,1700,4.153]],["title/classes/InitializationState.html",[109,0.113,1701,3.81]],["body/classes/InitializationState.html",[3,0.033,4,0.033,5,0.033,10,0.329,14,2.4,17,0.229,18,1.092,27,0.436,30,0.988,32,0.484,33,0.497,35,0.964,36,0.01,38,0.526,40,0.484,41,0.781,50,1.202,51,1.105,55,1.145,61,1.065,65,0.005,70,0.005,80,0.166,89,0.106,93,0.781,105,0.033,109,0.136,110,1.532,115,1.165,117,1.147,118,1.295,135,2.043,138,1.339,139,1.047,141,1.022,163,0.99,179,0.662,181,0.689,183,0.866,188,1.078,189,2.085,192,0.706,193,0.706,194,0.689,195,0.524,197,0.724,199,0.724,225,2.435,228,2.245,229,2.245,232,2.107,238,1.705,249,2.085,250,1.662,251,1.791,258,1.436,261,2.435,263,2.435,267,0.471,268,1.04,269,1.999,281,2.057,285,4.061,293,0.706,294,1.82,301,2.671,311,3.266,312,1.727,315,1.727,329,1.575,372,1.727,376,1.852,377,1.647,378,1.048,379,1.398,380,1.727,395,1.348,396,2.243,397,2.477,400,2.671,404,1.77,406,2.981,407,1.092,408,4.735,413,1.884,414,2.814,419,1.302,423,2.219,424,2.219,434,0.872,437,0.872,442,2.814,450,1.018,451,4.101,459,1.039,475,1.477,514,0.706,632,1.145,643,0.938,660,1.078,661,0.781,662,2.735,673,0.781,681,1.647,716,1.727,721,2.83,789,2.435,790,2.435,791,2.164,792,2.229,793,2.38,935,2.057,958,1.181,1004,2.057,1042,3.432,1043,2.436,1045,2.678,1052,2.085,1053,1.82,1057,1.717,1064,2.304,1065,2.161,1074,4.768,1075,4.526,1089,3.768,1093,1.82,1094,2.38,1095,1.82,1096,2.219,1097,2.436,1098,2.057,1099,1.947,1102,2.219,1105,3.768,1111,2.436,1113,1.82,1115,2.057,1239,2.436,1261,2.057,1262,5.217,1263,2.219,1264,2.436,1274,2.219,1275,2.219,1276,2.219,1280,3.266,1282,2.335,1283,1.82,1285,4.605,1313,1.82,1319,5.073,1326,3.441,1327,3.441,1376,2.219,1549,2.38,1701,4.606,1702,2.219,1703,2.219,1704,4.277,1705,4.722,1706,5.885,1707,2.766,1708,2.766,1709,3.788,1710,5.968,1711,5.23,1712,2.766,1713,2.766,1714,2.436,1715,4.606,1716,6.179,1717,4.606,1718,4.606,1719,5.926,1720,4.606,1721,5.605,1722,4.606,1723,5.184,1724,5.184,1725,5.605,1726,5.184,1727,3.768,1728,5.184,1729,4.277,1730,2.766,1731,2.766,1732,4.277,1733,5.23,1734,4.277,1735,2.766,1736,2.436,1737,2.766,1738,2.766,1739,2.766,1740,2.766,1741,2.766,1742,2.766,1743,2.766,1744,2.766,1745,4.277,1746,2.766,1747,4.277,1748,2.766,1749,2.766,1750,2.436,1751,6.363,1752,2.766,1753,4.606,1754,2.436,1755,3.768,1756,4.277,1757,2.766,1758,5.885,1759,4.277,1760,2.766,1761,2.766,1762,2.766,1763,5.23,1764,2.766,1765,2.766,1766,2.766,1767,3.266,1768,2.766,1769,5.23,1770,2.766,1771,1.82,1772,2.766,1773,3.768,1774,2.766,1775,2.766,1776,2.766,1777,6.728,1778,4.277,1779,5.885,1780,4.277,1781,3.768,1782,2.766,1783,5.23,1784,4.277,1785,2.766,1786,2.766,1787,2.766,1788,4.277,1789,4.277,1790,2.766,1791,2.766,1792,5.23,1793,2.766,1794,2.766,1795,2.766,1796,2.766,1797,4.277,1798,2.766,1799,2.766,1800,2.057,1801,2.057,1802,2.766,1803,1.727,1804,2.766,1805,2.766,1806,5.184,1807,5.23,1808,5.885,1809,4.277,1810,4.277,1811,2.766,1812,2.766,1813,2.766,1814,2.766,1815,2.766,1816,2.766,1817,2.766,1818,6.728,1819,2.981,1820,4.277,1821,2.766,1822,2.766,1823,2.766,1824,2.766,1825,2.766,1826,2.766,1827,2.766,1828,1.928,1829,2.766,1830,2.766,1831,1.928,1832,2.766,1833,2.766,1834,4.277,1835,2.766,1836,2.766,1837,2.766,1838,2.766,1839,2.766,1840,2.766,1841,4.277,1842,5.23,1843,2.766,1844,2.766,1845,4.277,1846,2.766,1847,2.766,1848,2.766,1849,2.766,1850,2.766,1851,2.766,1852,3.113,1853,2.766,1854,2.766,1855,2.766]],["title/components/JsonFileReaderComponent.html",[179,0.426,482,1.221]],["body/components/JsonFileReaderComponent.html",[3,0.047,4,0.047,5,0.11,10,0.659,11,1.314,17,0.325,18,1.416,27,0.619,30,1.854,32,0.971,33,0.996,35,1.25,36,0.01,37,0.983,38,0.649,39,0.897,40,0.971,41,2.159,47,1.607,50,1.048,51,0.96,59,0.741,65,0.006,70,0.006,80,0.144,89,0.151,105,0.047,109,0.199,110,0.724,115,1.13,117,0.946,118,0.67,132,2.813,139,0.828,140,1.578,141,1.012,179,0.725,180,1.055,181,1.381,182,1.082,183,1.23,184,1.199,185,1.199,191,1.055,192,1.416,193,1.416,194,2.249,195,1.111,196,0.955,197,1.452,199,1.452,201,0.679,225,3.661,232,2.922,237,0.908,244,2.586,246,2.586,250,2.266,251,1.783,267,1.096,268,1.278,283,1.184,284,0.979,293,1.003,381,1.332,386,1.447,387,1.297,390,1.533,391,1.003,396,1.642,397,1.199,404,1.627,415,3.246,420,1.627,421,1.678,422,1.85,434,0.801,437,0.801,441,1.029,458,0.571,459,1.789,460,1.199,461,2.13,462,1.199,463,1.199,464,1.11,465,1.199,466,1.082,467,1.961,468,1.11,469,1.199,470,1.489,471,1.961,472,1.11,473,1.168,474,1.199,475,1.11,476,1.199,477,1.11,478,1.055,479,1.199,480,1.11,481,1.199,482,1.973,483,2.433,484,1.199,485,1.11,486,1.168,487,1.139,488,1.199,489,1.11,490,1.692,491,1.082,492,1.11,493,1.11,494,1.199,495,1.11,496,1.961,497,1.11,498,1.567,499,1.692,500,1.082,501,1.11,502,1.082,503,0.886,504,1.199,505,1.082,506,1.029,507,1.11,508,1.199,509,1.11,510,1.199,511,1.11,512,1.199,513,1.11,514,1.416,515,1.11,516,1.567,517,1.11,518,1.199,519,1.11,520,1.416,521,1.199,522,1.11,523,1.199,524,1.199,594,2.163,632,1.627,643,2.368,660,2.507,661,1.11,662,2.163,663,2.724,664,1.533,665,1.533,666,2.507,673,1.567,674,2.013,679,2.507,686,2.739,688,2.455,699,2.525,700,1.831,701,2.063,714,1.986,1155,3.303,1181,4.887,1263,5.605,1478,4.887,1502,2.586,1548,3.288,1856,7.188,1857,6.547,1858,3.931,1859,7.069,1860,6.431,1861,5.549,1862,6.431,1863,5.549,1864,6.986,1865,6.431,1866,5.549,1867,6.49,1868,3.931,1869,3.867,1870,5.549,1871,5.549,1872,4.452,1873,5.549,1874,5.549,1875,3.931,1876,5.549,1877,3.931,1878,5.549,1879,4.868,1880,5.549,1881,4.126,1882,5.549,1883,5.549,1884,3.931,1885,5.549,1886,3.154,1887,3.931,1888,3.931,1889,3.931,1890,3.931,1891,3.931,1892,5.549,1893,3.931,1894,3.931,1895,3.931,1896,5.549,1897,3.931,1898,3.931,1899,3.931,1900,3.154]],["title/modules/JsonFileReaderModule.html",[525,0.594,1901,3.015]],["body/modules/JsonFileReaderModule.html",[3,0.079,4,0.079,5,0.103,36,0.01,65,0.008,70,0.008,80,0.221,89,0.25,105,0.079,109,0.17,407,1.667,458,0.948,482,2.567,483,1.798,525,0.897,527,1.798,528,1.991,529,2.505,530,1.941,531,1.892,532,2.505,543,2.353,544,1.844,546,2.044,550,2.293,740,2.688,741,2.213,1856,5.752,1857,5.24,1901,6.179,1902,5.752,1903,5.752,1904,5.752,1905,6.531,1906,6.531,1907,5.076,1908,4.296]],["title/components/LabeledSlideToggleComponent.html",[179,0.426,485,1.221]],["body/components/LabeledSlideToggleComponent.html",[3,0.047,4,0.047,5,0.067,10,0.76,11,1.305,14,1.556,17,0.321,18,1.406,24,2.784,27,0.613,30,1.881,32,0.964,33,0.989,35,1.241,36,0.01,37,0.98,38,0.661,39,0.891,40,0.964,47,1.127,50,1.041,51,0.757,59,0.879,65,0.006,70,0.006,80,0.143,89,0.149,105,0.047,109,0.198,110,0.717,115,0.597,117,0.663,118,0.663,132,1.393,139,0.822,140,1.563,141,1.008,179,0.771,180,1.045,181,1.372,182,1.071,183,1.218,184,1.187,185,1.187,191,1.045,192,1.406,193,1.406,194,2.247,195,1.11,196,0.945,197,1.442,199,1.442,201,0.674,237,0.899,250,2.152,251,1.406,258,1.44,267,1.251,268,1.676,269,1.637,283,1.178,284,0.969,293,0.993,381,1.319,391,0.993,392,1.832,393,2.042,396,1.633,404,1.61,413,0.922,420,2.28,421,1.661,422,1.832,434,1.683,437,1.304,441,1.019,458,0.565,459,1.782,460,1.187,461,2.121,462,1.187,463,1.187,464,1.099,465,1.187,466,1.071,467,1.95,468,1.099,469,1.187,470,1.479,471,1.95,472,1.099,473,1.156,474,1.187,475,1.099,476,1.187,477,1.099,478,1.045,479,1.187,480,1.099,481,1.187,482,1.099,483,1.071,484,1.187,485,1.964,486,2.543,487,2.624,488,1.187,489,1.099,490,1.68,491,1.071,492,1.099,493,1.099,494,1.187,495,1.099,496,1.95,497,1.099,498,1.556,499,1.68,500,1.071,501,1.099,502,1.071,503,0.877,504,1.187,505,1.071,506,1.019,507,1.099,508,1.187,509,1.099,510,1.187,511,1.099,512,1.187,513,1.099,514,2.231,515,1.099,516,1.556,517,1.099,518,1.187,519,1.099,520,1.406,521,1.187,522,1.099,523,1.187,524,1.187,594,2.148,660,2.493,661,1.099,662,2.148,663,2.712,664,1.517,665,1.517,666,2.493,673,1.556,674,2.002,679,2.493,680,2.351,699,2.507,700,1.818,701,2.042,721,1.355,863,1.714,1057,1.406,1282,3.008,1540,4.76,1546,2.891,1548,3.273,1549,2.507,1554,4.42,1557,4.343,1909,7.271,1910,6.623,1911,3.428,1912,5.509,1913,4.537,1914,5.633,1915,4.853,1916,5.509,1917,5.311,1918,6.955,1919,6.396,1920,5.509,1921,3.892,1922,3.892,1923,5.509,1924,5.889,1925,3.892,1926,5.509,1927,7.622,1928,5.509,1929,5.509,1930,3.892,1931,5.509,1932,5.509,1933,3.892,1934,3.892,1935,6.396,1936,5.509,1937,3.892,1938,3.892,1939,3.892,1940,3.892,1941,3.892,1942,5.509,1943,3.428,1944,3.122]],["title/modules/LabeledSlideToggleModule.html",[525,0.594,1945,3.015]],["body/modules/LabeledSlideToggleModule.html",[3,0.079,4,0.079,5,0.079,36,0.01,65,0.008,70,0.008,80,0.221,89,0.25,105,0.079,109,0.17,407,1.665,458,0.947,485,2.567,486,1.938,487,2.378,514,1.665,525,0.896,527,1.796,528,1.989,529,2.503,530,1.938,531,1.889,532,2.503,543,2.351,544,1.842,546,2.042,550,2.291,740,2.686,741,2.211,1909,5.745,1910,5.233,1945,6.177,1946,5.745,1947,5.745,1948,5.745,1949,5.745,1950,7.711,1951,6.523,1952,5.745]],["title/components/LeftSidebarComponent.html",[179,0.426,489,1.221]],["body/components/LeftSidebarComponent.html",[3,0.043,4,0.043,5,0.062,10,0.611,11,1.218,17,0.425,18,1.313,27,0.81,30,1.759,35,1.159,36,0.01,37,0.955,38,0.61,39,0.832,44,1.792,45,1.948,47,1.025,50,0.668,51,0.707,59,0.768,65,0.006,66,1.558,70,0.006,80,0.192,89,0.135,94,1.379,95,1.167,99,2.521,101,2.319,105,0.043,109,0.192,118,0.603,132,1.266,139,0.528,141,1.093,168,1.079,179,0.596,180,0.95,181,1.281,182,0.974,183,1.107,184,1.079,185,1.079,191,0.95,192,1.313,193,1.313,194,2.235,195,1.105,196,0.859,197,1.347,199,1.347,201,0.63,203,2.507,237,1.188,238,1.025,250,1.453,251,1.313,258,0.668,267,1.206,268,1.406,269,1.978,282,2.507,283,1.437,284,1.509,285,2.809,293,0.903,304,2.014,305,1.856,306,1.744,313,1.61,325,4.175,356,1.199,361,1.34,369,2.679,376,1.281,381,1.199,382,1.981,383,2.927,384,1.856,385,1.856,386,2.717,387,2.001,388,2.014,390,2.877,391,1.548,392,2.854,395,2.955,396,1.548,397,2.251,399,1.894,401,3.329,410,2.451,411,2.509,412,1.724,413,1.577,416,2.465,417,1.856,418,2.841,419,1.665,426,2.7,428,2.588,429,1.894,432,2.759,433,2.7,434,1.741,435,1.665,437,1.236,441,1.587,442,2.327,443,2.209,444,2.955,448,1.787,451,3.585,452,2.341,453,2.341,455,2.209,456,2.465,458,0.514,459,1.717,460,1.079,461,2.03,462,1.079,463,1.079,464,0.999,465,1.079,466,0.974,467,1.849,468,0.999,469,1.079,470,1.381,471,1.849,472,0.999,473,1.051,474,1.079,475,0.999,476,1.079,477,0.999,478,2.044,479,1.079,480,0.999,481,1.079,482,0.999,483,0.974,484,1.079,485,0.999,486,1.051,487,1.025,488,1.079,489,1.88,490,1.569,491,0.974,492,0.999,493,0.999,494,1.079,495,0.999,496,1.849,497,0.999,498,1.453,499,1.569,500,0.974,501,0.999,502,0.974,503,0.797,504,1.079,505,0.974,506,0.926,507,0.999,508,1.079,509,0.999,510,1.079,511,0.999,512,1.079,513,0.999,514,1.313,515,0.999,516,1.453,517,0.999,518,1.079,519,0.999,520,1.313,521,1.079,522,0.999,523,1.079,524,1.079,573,6.261,594,2.006,625,1.724,661,0.999,673,1.453,674,1.898,680,2.196,700,1.698,710,2.465,713,2.014,714,3.364,715,2.327,721,2.718,726,3.385,729,2.106,733,2.327,734,2.327,781,3.03,783,4.095,785,3.31,795,2.421,879,2.815,1057,1.313,1132,3.826,1195,3.385,1201,2.631,1220,6.261,1464,2.465,1514,4.225,1603,2.838,1610,2.631,1611,2.838,1612,2.631,1881,2.631,1913,2.106,1953,6.874,1954,3.116,1955,5.34,1956,4.532,1957,7.073,1958,5.34,1959,5.145,1960,5.34,1961,5.145,1962,3.538,1963,5.145,1964,5.145,1965,3.538,1966,7.073,1967,5.145,1968,5.145,1969,5.145,1970,5.145,1971,4.128,1972,4.128,1973,4.532,1974,5.145,1975,3.538,1976,3.116,1977,3.538,1978,5.145,1979,3.538,1980,3.452,1981,4.225,1982,3.826,1983,4.532,1984,5.145,1985,4.128,1986,2.838,1987,3.116,1988,2.631,1989,4.532,1990,6.874,1991,3.826,1992,3.385,1993,2.838,1994,3.538,1995,5.145,1996,3.538,1997,3.116,1998,3.538,1999,3.538]],["title/modules/LeftSidebarModule.html",[525,0.594,540,3.015]],["body/modules/LeftSidebarModule.html",[3,0.071,4,0.071,5,0.071,36,0.01,65,0.008,70,0.008,80,0.233,89,0.225,105,0.071,109,0.153,118,1.233,195,0.718,298,1.575,407,1.498,434,1.196,458,0.852,489,2.534,525,0.806,527,1.615,528,1.79,529,2.392,530,1.744,531,1.7,532,2.392,540,6.344,543,2.206,544,1.657,546,2.264,550,2.15,556,2.994,557,2.288,573,4.708,740,2.52,741,1.989,747,3.796,748,3.079,1534,4.708,1576,5.967,1953,5.169,2000,5.169,2001,5.169,2002,5.169,2003,5.169,2004,5.633,2005,5.967,2006,6.156,2007,5.169,2008,5.804,2009,4.708,2010,6.372,2011,5.169,2012,6.372,2013,5.869,2014,5.869,2015,5.869,2016,4.089,2017,4.708,2018,7.234,2019,4.708,2020,5.869,2021,4.708,2022,5.169,2023,5.169]],["title/interfaces/Message.html",[106,0.269,1064,1.906]],["body/interfaces/Message.html",[0,1.722,3,0.052,4,0.106,5,0.052,10,0.516,17,0.359,27,0.936,32,1.186,33,0.779,36,0.01,38,0.631,39,0.962,40,1.439,41,1.226,50,1.443,51,0.817,61,1.902,65,0.006,70,0.006,74,3.246,77,3.276,80,0.176,89,0.166,93,1.226,95,1.433,105,0.095,106,0.37,109,0.155,110,1.407,115,1.04,117,1.302,131,2.824,135,1.915,139,1.245,141,1.109,178,1.137,182,1.867,188,1.693,189,2.898,196,1.444,201,0.728,258,0.82,267,0.74,332,1.679,376,1.081,378,1.645,379,2.194,413,1.028,632,3.161,774,2.116,1037,3.12,1045,2.706,1051,2.278,1052,4.153,1057,1.108,1064,4.002,1065,3.004,1066,2.856,1093,2.856,1094,3.841,1095,2.856,1250,2.856,1283,3.912,1305,4.491,1312,4.851,1325,2.472,1349,4.143,1512,2.711,1522,2.856,1523,3.912,1546,2.278,1588,2.711,1597,3.477,1648,2.711,1709,4.036,1767,4.235,1819,3.026,1828,3.026,1831,3.026,1852,2.585,2024,3.026,2025,4.554,2026,3.432,2027,4.41,2028,4.422,2029,4.422,2030,2.585,2031,5.082,2032,4.422,2033,3.229,2034,4.461,2035,3.229,2036,5.681,2037,4.143,2038,2.856,2039,2.856,2040,3.026,2041,4.143,2042,3.026,2043,3.229,2044,4.422,2045,3.229,2046,2.711,2047,3.229,2048,3.229,2049,3.229,2050,4.422,2051,3.026,2052,3.229,2053,3.229,2054,3.229,2055,4.422,2056,3.229,2057,4.422,2058,2.856,2059,5.043,2060,3.229,2061,3.229,2062,3.229,2063,4.422,2064,2.711,2065,3.229,2066,3.229,2067,5.043,2068,3.229,2069,3.229,2070,3.229,2071,3.229,2072,3.026,2073,3.229,2074,3.229,2075,3.229,2076,3.229]],["title/classes/MessageChannel.html",[109,0.113,1065,2.186]],["body/classes/MessageChannel.html",[0,1.631,3,0.049,4,0.106,5,0.049,10,0.882,17,0.332,18,1.438,27,1.024,30,1.715,32,1.234,33,0.721,35,1.589,36,0.01,37,0.863,38,0.636,39,1.245,40,1.412,41,1.134,50,1.549,51,0.894,61,1.62,65,0.006,70,0.006,74,3.075,77,3.388,80,0.169,89,0.154,93,1.134,95,1.325,105,0.093,106,0.35,109,0.147,110,1.368,115,0.997,117,1.312,131,2.329,135,1.869,139,1.224,141,1.086,182,1.791,188,1.565,189,2.745,196,1.368,258,0.759,267,0.684,332,1.134,376,1,378,1.521,379,2.029,413,0.951,632,3.073,774,1.957,1037,2.955,1045,2.563,1051,2.955,1052,4.291,1057,1.025,1064,3.995,1065,3.287,1066,2.641,1093,2.641,1094,3.888,1095,2.641,1250,3.705,1283,3.705,1305,4.594,1312,4.782,1325,3.206,1349,3.925,1512,2.507,1522,2.641,1523,3.705,1546,2.107,1588,2.507,1597,3.38,1648,2.507,1702,3.221,1709,4.583,1767,4.808,1819,2.798,1828,3.925,1831,3.925,1852,2.39,2024,2.798,2025,4.062,2026,3.062,2027,4.317,2028,2.986,2029,2.986,2030,2.39,2031,5.509,2032,4.188,2033,2.986,2034,4.28,2035,2.986,2036,5.523,2037,3.925,2038,2.641,2039,2.641,2040,2.798,2041,3.925,2042,2.798,2043,4.188,2044,4.188,2045,2.986,2046,3.517,2047,4.188,2048,2.986,2049,2.986,2050,4.188,2051,3.925,2052,4.188,2053,5.244,2054,2.986,2055,5.244,2056,4.188,2057,4.188,2058,3.705,2059,5.725,2060,4.188,2061,2.986,2062,2.986,2063,4.188,2064,2.507,2065,2.986,2066,2.986,2067,4.838,2068,2.986,2069,2.986,2070,2.986,2071,2.986,2072,2.798,2073,2.986,2074,2.986,2075,2.986,2076,2.986,2077,5.632,2078,5.632,2079,5.632,2080,4.015,2081,4.015,2082,4.015,2083,4.015,2084,4.015,2085,4.015]],["title/injectables/MessageService.html",[0,1.253,1045,1.969]],["body/injectables/MessageService.html",[0,1.694,2,2.414,3,0.051,4,0.105,5,0.051,10,0.796,17,0.35,18,1.493,27,1.055,30,1.351,32,1.263,33,1.05,35,1.318,36,0.01,37,0.716,38,0.596,39,1.168,40,1.497,41,1.197,50,1.48,51,0.804,61,1.667,65,0.006,70,0.006,74,3.194,77,3.264,80,0.174,89,0.162,93,1.197,95,1.399,105,0.095,106,0.364,109,0.152,110,1.395,115,1.027,117,1.335,131,2.398,135,1.902,139,1.239,141,1.102,182,1.844,188,1.653,189,2.851,196,1.42,258,0.801,267,0.723,332,1.197,376,1.056,378,1.606,379,2.143,413,1.004,632,3.135,774,2.067,1037,3.514,1045,3.447,1051,2.225,1052,4.17,1057,1.082,1064,3.996,1065,3.384,1066,3.849,1093,3.849,1094,3.862,1095,2.79,1250,2.79,1283,3.849,1305,4.459,1312,4.656,1325,2.414,1349,4.077,1512,2.648,1522,2.79,1523,3.849,1546,2.225,1588,2.648,1597,3.564,1648,4.182,1709,3.987,1767,4.182,1819,2.955,1828,2.955,1831,2.955,1852,2.524,2024,2.955,2025,4.182,2026,3.152,2027,4.136,2028,3.154,2029,3.154,2030,2.524,2031,5.031,2032,4.35,2033,3.154,2034,4.983,2035,3.154,2036,6.082,2037,4.077,2038,2.79,2039,2.79,2040,2.955,2041,4.077,2042,2.955,2043,3.154,2044,4.35,2045,3.154,2046,2.648,2047,3.154,2048,3.154,2049,3.154,2050,4.35,2051,2.955,2052,3.154,2053,3.154,2054,3.154,2055,4.35,2056,3.154,2057,4.35,2058,2.79,2059,4.981,2060,3.154,2061,3.154,2062,3.154,2063,4.35,2064,3.653,2065,3.154,2066,3.154,2067,4.981,2068,3.154,2069,3.154,2070,3.154,2071,3.154,2072,2.955,2073,3.154,2074,4.35,2075,4.35,2076,3.154,2086,5.85,2087,4.24,2088,4.24,2089,4.24]],["title/interfaces/MessageServiceConfig.html",[106,0.269,2034,2.846]],["body/interfaces/MessageServiceConfig.html",[0,1.734,3,0.053,4,0.105,5,0.053,10,0.521,17,0.362,27,0.943,32,1.193,33,0.788,36,0.01,38,0.605,39,0.968,40,1.463,41,1.239,50,1.449,51,0.823,61,1.697,65,0.006,70,0.006,74,3.27,77,3.281,80,0.177,89,0.168,93,1.239,95,1.448,105,0.096,106,0.372,109,0.156,110,1.412,115,1.045,117,1.307,131,2.441,135,1.922,139,1.248,141,1.113,178,1.148,182,1.877,188,1.711,189,2.918,196,1.454,201,0.733,258,1.288,267,0.748,332,1.239,376,1.092,378,1.662,379,2.217,413,1.039,632,3.173,774,2.138,1037,3.142,1045,2.725,1051,2.302,1052,4.194,1057,1.529,1064,3.984,1065,3.026,1066,2.886,1093,2.886,1094,3.805,1095,2.886,1250,2.886,1283,3.94,1305,4.365,1312,4.694,1325,2.498,1349,4.173,1512,2.74,1522,2.886,1523,3.94,1546,3.142,1588,2.74,1597,3.601,1648,2.74,1709,4.058,1767,4.257,1819,3.057,1828,3.057,1831,3.057,1852,2.612,2024,3.057,2025,4.257,2026,3.209,2027,4.186,2028,3.263,2029,3.263,2030,2.612,2031,5.104,2032,4.453,2033,3.263,2034,4.819,2035,4.453,2036,5.885,2037,5.343,2038,2.886,2039,2.886,2040,3.057,2041,4.173,2042,3.057,2043,3.263,2044,4.453,2045,3.263,2046,2.74,2047,3.263,2048,3.263,2049,3.263,2050,4.453,2051,3.057,2052,3.263,2053,3.263,2054,3.263,2055,4.453,2056,3.263,2057,4.453,2058,2.886,2059,5.07,2060,3.263,2061,3.263,2062,3.263,2063,4.453,2064,2.74,2065,3.263,2066,3.263,2067,5.07,2068,3.263,2069,3.263,2070,3.263,2071,3.263,2072,3.057,2073,3.263,2074,3.263,2075,3.263,2076,3.263]],["title/interfaces/MetaDataField.html",[106,0.269,2090,3.471]],["body/interfaces/MetaDataField.html",[3,0.083,4,0.083,5,0.083,17,0.566,36,0.01,38,0.692,59,1.023,65,0.009,70,0.009,105,0.096,106,0.426,132,3.085,178,1.793,191,1.839,201,0.972,268,1.713,2090,6.722,2091,6.035,2092,6.035]],["title/interfaces/ModelStateModel.html",[106,0.269,2093,2.846]],["body/interfaces/ModelStateModel.html",[0,1.031,3,0.027,4,0.027,5,0.027,7,0.967,10,0.261,14,1.949,15,0.808,17,0.181,21,0.908,27,0.346,29,2.586,32,0.384,33,0.394,36,0.01,37,0.906,38,0.694,39,0.984,40,0.623,41,0.62,42,1.198,43,1.152,44,0.764,45,2.417,48,3.906,51,1.095,55,0.908,59,0.901,61,1.119,65,0.004,70,0.004,77,3.043,80,0.201,83,1.349,85,2.19,86,1.474,87,0.908,88,0.908,89,0.084,90,0.881,93,0.62,94,1.388,95,0.724,99,0.831,101,1.24,102,1.307,105,0.077,106,0.279,108,0.881,109,0.057,110,1.23,115,1.232,117,1.209,118,0.607,125,2.982,131,2.693,132,2.295,135,1.621,138,2.09,139,1.167,141,1.104,142,0.908,143,0.908,144,0.967,154,1.371,155,1.371,158,1.529,163,0.786,165,1.529,178,0.574,195,0.436,201,0.436,226,1.175,227,1.275,237,1.481,238,2.239,240,2.343,258,1.074,261,1.25,267,0.374,269,1.536,283,0.828,298,0.589,325,1.869,332,1.605,356,2.404,361,2.686,364,2.935,373,1.444,376,1.596,382,0.589,387,1.483,391,1.451,410,3.067,413,1.752,419,2.115,429,1.311,434,1.241,437,1.241,441,0.932,478,1.852,503,1.742,506,0.932,520,0.56,601,1.569,642,1.799,643,0.744,651,3.646,658,1.944,663,1.388,664,0.856,665,0.856,666,0.856,669,2.358,675,1.859,679,0.856,680,3.21,682,1.07,752,1.676,763,1.152,769,1.307,773,1.152,774,1.07,777,1.109,779,1.307,780,0.967,783,3.807,784,1.444,785,1.198,786,1.621,787,1.033,788,1.198,789,1.474,790,1.474,791,0.908,792,0.831,793,1.621,795,1.676,815,1.799,823,1.07,827,1.109,845,4.54,846,4.54,852,3.929,856,1.25,863,2.681,865,1.444,879,2.12,880,1.25,881,1.25,891,4.54,937,4.766,938,4.17,940,1.371,941,1.371,942,1.371,958,3.478,959,2.956,960,1.25,972,1.371,979,1.444,980,1.307,982,1.444,987,1.444,1010,1.25,1017,2.956,1030,2.027,1041,1.198,1057,1.147,1094,2.045,1099,3.039,1162,4.773,1195,2.956,1207,5.318,1208,2.343,1385,1.371,1479,2.453,1488,1.307,1492,1.25,1527,3.465,1530,4.226,1586,2.343,1589,2.956,1590,3.131,1591,4.221,1592,3.646,1593,3.5,1597,2.77,1980,3.65,1981,4.467,1982,1.632,2026,2.115,2027,2.453,2064,1.371,2093,2.343,2094,1.529,2095,2.857,2096,4.54,2097,4.478,2098,4.537,2099,2.481,2100,3.951,2101,4.147,2102,3.228,2103,3.605,2104,3.929,2105,4.241,2106,2.224,2107,2.481,2108,1.307,2109,1.307,2110,2.857,2111,1.761,2112,6.336,2113,1.761,2114,1.25,2115,1.761,2116,1.761,2117,1.761,2118,1.632,2119,2.675,2120,1.761,2121,2.12,2122,1.632,2123,1.371,2124,1.761,2125,1.761,2126,1.761,2127,2.12,2128,6.336,2129,6.273,2130,1.761,2131,1.761,2132,1.761,2133,1.761,2134,1.761,2135,1.761,2136,1.761,2137,1.761,2138,1.761,2139,1.761,2140,1.761,2141,1.761,2142,1.761,2143,1.761,2144,1.761,2145,1.761,2146,1.761,2147,1.761,2148,1.761,2149,1.761,2150,1.761,2151,1.761,2152,1.761,2153,1.761,2154,1.761,2155,1.761,2156,1.761,2157,1.761,2158,5.143,2159,2.857,2160,1.761,2161,4.147,2162,1.761,2163,2.857,2164,1.761,2165,4.882,2166,1.761,2167,1.761,2168,1.761,2169,1.761,2170,1.761,2171,1.761,2172,1.761,2173,1.761,2174,1.761,2175,1.761,2176,1.761,2177,1.761,2178,1.761,2179,1.761,2180,1.761,2181,1.761,2182,1.761,2183,1.632,2184,3.605,2185,4.147,2186,1.761,2187,1.761,2188,1.761,2189,1.761,2190,1.761,2191,1.761,2192,1.761,2193,1.761,2194,1.761,2195,1.761,2196,1.761,2197,1.761,2198,2.857,2199,1.761,2200,1.761,2201,1.761,2202,1.761,2203,1.761,2204,1.761,2205,1.761,2206,1.761,2207,3.341,2208,1.761,2209,1.761,2210,1.761,2211,1.761,2212,1.761,2213,1.761,2214,1.761,2215,2.857,2216,1.761,2217,2.857,2218,2.857,2219,2.857,2220,1.761,2221,1.761,2222,1.761,2223,1.761,2224,1.761,2225,1.761,2226,1.761,2227,1.761,2228,1.761,2229,1.761,2230,1.761,2231,1.761,2232,1.761,2233,1.529,2234,1.761,2235,1.761,2236,1.761,2237,1.761,2238,2.027,2239,1.761,2240,1.761,2241,1.632,2242,1.761,2243,4.147,2244,1.371,2245,1.761,2246,1.761,2247,1.761,2248,1.761,2249,1.761,2250,1.761,2251,2.857,2252,2.857,2253,1.761,2254,1.761,2255,1.761,2256,1.761]],["title/components/NameInputComponent.html",[179,0.426,491,1.191]],["body/components/NameInputComponent.html",[3,0.044,4,0.044,5,0.063,10,0.732,11,1.244,17,0.301,18,1.341,24,2.654,27,0.573,30,1.903,32,0.919,33,0.943,35,1.388,36,0.01,37,1.117,38,0.635,39,0.996,40,0.919,41,2.104,47,1.054,50,1.164,51,0.846,59,0.886,65,0.006,66,2.313,70,0.006,80,0.16,89,0.139,105,0.063,106,0.226,109,0.194,110,0.67,115,0.558,117,1.404,118,0.895,135,0.884,139,0.919,140,1.461,141,0.983,179,0.756,180,0.977,181,1.307,182,1.002,183,1.139,184,1.11,185,1.11,191,0.977,192,1.341,193,1.341,194,2.236,195,1.105,196,0.884,197,1.375,199,1.375,201,0.643,232,2.206,237,0.841,250,2.475,251,1.722,267,1.219,268,1.593,283,1.135,284,0.906,293,0.929,306,2.286,307,3.409,308,3.409,332,1.028,370,1.774,381,1.234,382,0.977,383,1.506,387,1.201,390,1.419,391,1.341,392,1.713,396,1.573,397,1.11,411,2.173,413,0.862,428,1.553,434,1.07,437,1.07,441,0.953,452,1.656,453,1.656,458,0.528,459,1.737,460,1.11,461,2.057,462,1.11,463,1.11,464,1.028,465,1.11,466,1.002,467,1.879,468,1.028,469,1.11,470,1.41,471,1.879,472,1.028,473,1.081,474,1.11,475,1.028,476,1.11,477,1.028,478,0.977,479,1.11,480,1.028,481,1.11,482,1.028,483,1.002,484,1.11,485,1.028,486,1.081,487,1.054,488,1.11,489,1.028,490,1.601,491,1.857,492,1.028,493,1.028,494,1.11,495,1.028,496,1.879,497,1.028,498,1.483,499,1.601,500,1.002,501,1.028,502,1.002,503,0.82,504,1.11,505,1.002,506,0.953,507,1.028,508,1.11,509,1.028,510,1.11,511,1.028,512,1.11,513,1.028,514,1.341,515,1.028,516,1.483,517,1.028,518,1.11,519,1.028,520,1.341,521,1.11,522,1.028,523,1.11,524,1.11,555,3.465,594,2.047,643,2.286,654,2.273,660,2.402,661,1.028,662,2.047,663,2.63,664,1.419,665,1.419,666,2.402,671,3.455,672,4.053,673,1.483,674,1.928,679,2.402,680,2.241,681,3.126,682,3.632,686,2.536,687,2.394,688,2.273,690,2.706,699,2.39,700,1.733,701,1.91,706,4.626,724,2.92,725,2.706,726,2.394,1548,3.175,1549,2.804,2016,5.801,2257,6.679,2258,4.626,2259,4.626,2260,5.427,2261,5.427,2262,5.427,2263,5.252,2264,5.427,2265,5.252,2266,6.793,2267,5.252,2268,4.626,2269,3.639,2270,3.66,2271,4.626,2272,6.164,2273,6.565,2274,3.639,2275,6.565,2276,3.905,2277,3.206,2278,3.754,2279,3.639,2280,6.3,2281,3.639,2282,3.639,2283,3.206,2284,2.92,2285,2.273,2286,4.582,2287,3.28,2288,4.626,2289,3.206,2290,3.206,2291,3.206,2292,3.206,2293,3.206,2294,4.626,2295,3.206,2296,3.206,2297,3.206]],["title/modules/NameInputModule.html",[525,0.594,2004,2.846]],["body/modules/NameInputModule.html",[3,0.078,4,0.078,5,0.078,36,0.01,37,0.789,65,0.008,70,0.008,80,0.228,89,0.247,105,0.078,109,0.168,407,1.645,458,0.936,491,2.499,525,0.885,527,1.774,528,1.966,529,2.491,530,1.915,531,1.867,532,2.491,543,2.335,544,1.82,546,2.017,550,2.275,739,5.171,740,2.667,741,2.185,745,5.037,746,4.24,747,4.018,748,3.382,749,5.171,2004,5.818,2016,4.492,2257,5.171,2285,4.025,2298,5.677,2299,5.677,2300,5.677,2301,6.143,2302,6.143]],["title/interfaces/OrganConfig.html",[106,0.269,1586,2.846]],["body/interfaces/OrganConfig.html",[3,0.07,4,0.07,5,0.07,13,3.177,17,0.481,36,0.01,37,0.999,38,0.693,39,1.382,51,0.988,59,1.038,65,0.008,70,0.008,72,4.734,80,0.203,89,0.223,93,1.643,105,0.101,106,0.447,110,1.072,115,0.892,117,0.992,178,1.523,195,0.712,201,0.881,203,2.835,204,3.464,205,3.464,207,3.313,208,3.313,226,2.578,258,1.542,298,1.562,306,2.439,307,3.636,308,3.636,332,1.643,410,2.142,434,1.593,437,1.593,450,2.142,595,3.464,596,3.828,597,4.668,598,4.054,599,4.668,600,3.464,601,2.563,602,4.327,603,4.054,643,1.972,958,3.484,1034,4.494,1035,4.327,1409,4.054,1411,3.464,1416,4.054,1417,4.054,1450,4.054,1584,4.054,1585,3.464,1586,5.14,1588,3.633,1589,5.37,1590,5.688,1591,4.457,1592,4.266,1593,4.266,1594,5.125,1595,4.668,1596,4.668,1597,2.648,1598,4.668,1599,5.125]],["title/interfaces/OrganData.html",[106,0.269,2244,2.701]],["body/interfaces/OrganData.html",[0,1.593,3,0.066,4,0.047,5,0.047,14,2.07,15,1.429,17,0.321,21,1.606,27,0.611,36,0.01,37,0.673,38,0.528,39,1.123,40,0.679,45,1.247,50,1.039,51,0.533,55,1.606,59,0.993,61,1.729,65,0.006,70,0.006,77,2.083,80,0.223,83,2.419,86,2.275,87,1.606,88,1.606,89,0.149,90,1.558,93,1.096,94,1.513,95,1.28,100,2.036,105,0.084,106,0.342,108,1.558,109,0.101,110,1.519,115,1.344,125,4.421,135,1.687,138,1.999,139,1.037,141,0.755,142,1.606,143,1.606,144,1.709,168,1.947,178,1.016,195,0.782,201,0.673,226,1.814,227,1.968,238,1.124,242,2.209,267,0.661,298,1.042,332,1.552,352,2.036,354,3.351,356,2.164,358,3.486,361,2.419,363,2.553,364,2.642,378,2.083,382,1.042,387,1.28,410,3.216,434,1.552,437,1.552,450,1.429,595,2.31,625,1.891,626,2.036,629,1.826,630,1.891,682,1.891,752,2.588,755,3.988,756,2.553,757,2.553,762,3.988,763,3.351,767,2.553,771,3.434,777,1.961,780,1.709,786,1.766,787,1.826,789,1.606,790,1.606,791,1.606,792,1.47,793,1.766,795,2.588,815,1.961,816,2.31,827,2.778,836,2.553,852,3.13,856,3.955,879,2.834,912,2.553,915,2.423,944,2.423,958,3.521,1010,3.13,1011,2.553,1019,2.553,1022,2.553,1023,2.553,1030,2.209,1034,3.434,1041,2.119,1158,2.036,1163,3.13,1411,2.31,1527,3.13,1591,4.504,1592,4.157,1593,4.157,2027,3.002,2096,3.617,2098,3.13,2100,3.848,2106,2.423,2244,3.988,2303,2.886,2304,2.886,2305,3.617,2306,2.704,2307,5.573,2308,2.886,2309,5.883,2310,3.113,2311,3.113,2312,2.704,2313,3.113,2314,3.113,2315,3.113,2316,3.113,2317,3.113,2318,3.113,2319,3.113,2320,3.113,2321,3.113,2322,2.886,2323,4.411,2324,4.411,2325,4.411,2326,4.411,2327,4.411,2328,4.411,2329,2.886,2330,3.113,2331,3.113,2332,3.113,2333,3.113,2334,3.113,2335,3.113,2336,3.113,2337,3.113,2338,3.113,2339,3.113,2340,3.113,2341,3.831,2342,3.113,2343,3.113,2344,3.113,2345,3.113,2346,5.123,2347,5.123,2348,3.113,2349,3.113,2350,3.113,2351,2.704,2352,2.704,2353,2.704,2354,3.113,2355,4.411,2356,3.831,2357,3.113,2358,3.113,2359,3.113,2360,3.113,2361,4.411,2362,3.113,2363,3.113,2364,3.113,2365,3.113,2366,3.113,2367,3.113,2368,3.113,2369,3.113,2370,3.113,2371,3.113,2372,3.113,2373,3.113,2374,3.113,2375,3.113,2376,1.826,2377,3.113,2378,3.113,2379,3.113,2380,3.113,2381,3.113,2382,3.113,2383,3.113,2384,3.113,2385,3.113,2386,3.113,2387,3.113,2388,3.113,2389,4.411,2390,3.113,2391,3.113]],["title/injectables/PageState.html",[0,1.253,101,1.507]],["body/injectables/PageState.html",[0,1.358,2,1.777,3,0.038,4,0.038,5,0.038,10,0.798,13,3.42,14,2.066,15,1.727,17,0.258,18,1.197,21,2.592,24,2.37,27,0.739,30,1.978,32,0.821,33,0.842,35,1.513,36,0.01,37,0.988,38,0.555,39,1.086,40,0.821,44,2.457,45,1.003,47,2.043,48,4.123,50,1.542,51,1.158,55,1.941,59,0.95,65,0.005,70,0.005,77,2.851,80,0.21,83,1.776,85,3.053,86,1.941,87,1.292,88,1.292,89,0.12,90,1.253,92,1.469,93,0.881,94,1.217,95,1.03,101,1.634,105,0.068,106,0.292,108,1.253,109,0.081,110,1.348,115,1.081,118,0.799,131,2.921,135,1.521,139,1.002,141,1.176,142,1.292,143,1.292,144,1.375,163,1.118,168,1.43,173,2.175,195,0.574,201,0.574,207,4.798,226,2.216,227,2.243,232,1.118,258,1.525,267,1.202,268,1.583,269,2.174,282,2.746,283,1.038,284,1.403,285,3.076,298,0.838,306,2.766,307,3.165,308,3.165,376,2.032,596,4.418,600,3.997,608,3.268,629,1.469,630,1.521,752,2.652,773,2.956,774,1.521,780,1.375,781,2.851,782,1.949,789,1.292,790,1.292,791,1.292,792,1.182,823,2.286,879,1.962,1037,1.638,1057,0.797,1099,3.21,1158,1.638,1163,2.67,1216,2.561,1292,2.929,1549,2.135,1585,1.858,1597,2.135,2046,1.949,2100,2.37,2108,1.858,2109,1.858,2114,1.777,2165,3.729,2238,1.777,2276,2.561,2278,2.461,2287,2.929,2376,3.32,2392,2.504,2393,3.763,2394,5.598,2395,4.64,2396,6.178,2397,5.026,2398,5.026,2399,5.026,2400,4.69,2401,4.69,2402,4.69,2403,4.69,2404,6.475,2405,4.52,2406,6.293,2407,3.122,2408,3.707,2409,3.122,2410,3.122,2411,3.122,2412,3.122,2413,5.371,2414,2.929,2415,5.026,2416,3.122,2417,3.122,2418,3.122,2419,3.763,2420,3.122,2421,3.763,2422,5.924,2423,3.268,2424,3.763,2425,3.122,2426,3.763,2427,3.926,2428,3.122,2429,4.994,2430,3.763,2431,3.122,2432,3.926,2433,3.488,2434,5.466,2435,3.763,2436,3.122,2437,3.763,2438,3.122,2439,3.763,2440,3.122,2441,3.763,2442,3.122,2443,3.763,2444,3.122,2445,3.763,2446,3.122,2447,3.122,2448,3.122,2449,3.122,2450,3.122,2451,3.122,2452,3.122,2453,2.504,2454,5.099,2455,2.175,2456,2.504,2457,2.504,2458,3.707,2459,3.763,2460,2.054,2461,2.504,2462,2.504,2463,2.504,2464,2.504,2465,2.504,2466,2.504,2467,2.175,2468,2.504,2469,2.504,2470,2.504,2471,2.504,2472,2.504,2473,2.504,2474,3.763,2475,2.321,2476,2.504,2477,3.926,2478,2.504,2479,2.504,2480,3.763,2481,3.763,2482,3.926,2483,2.504,2484,2.504,2485,3.763,2486,2.504,2487,2.504,2488,2.504,2489,2.504,2490,2.504,2491,2.504,2492,2.504,2493,2.504,2494,2.504,2495,2.504,2496,2.504,2497,4.52,2498,2.504,2499,2.175,2500,3.763,2501,2.504,2502,2.504,2503,2.504,2504,2.504,2505,2.504,2506,3.488,2507,3.488,2508,2.321,2509,2.321,2510,2.504,2511,2.504,2512,2.504,2513,3.763,2514,2.504,2515,2.321,2516,2.504,2517,2.504]],["title/interfaces/PageStateModel.html",[106,0.269,2460,2.846]],["body/interfaces/PageStateModel.html",[0,1.515,3,0.044,4,0.044,5,0.044,10,0.43,13,2.856,14,2.1,15,1.333,17,0.299,21,1.498,27,0.57,32,0.633,33,0.65,36,0.01,37,0.824,38,0.649,39,0.846,40,0.633,44,2.486,45,1.681,48,3.876,50,1.161,51,1.099,55,1.498,59,0.923,65,0.006,70,0.006,77,2.818,80,0.216,83,1.981,85,3.279,86,2.165,87,1.498,88,1.498,89,0.139,90,1.454,92,1.704,93,1.022,94,1.411,95,1.194,101,1.261,105,0.074,106,0.325,108,1.454,109,0.094,110,1.413,115,1.141,118,0.617,131,2.865,135,1.634,139,1.065,141,1.079,142,1.498,143,1.498,144,1.595,163,1.296,168,1.595,173,2.523,178,0.947,195,0.64,201,0.64,207,4.778,226,2.22,227,1.873,232,1.296,258,1.655,268,1.221,269,2.279,282,2.994,283,1.131,284,1.529,285,3.354,298,0.972,306,2.845,307,3.4,308,3.4,376,1.992,596,3.442,600,4.428,608,3.645,629,1.704,630,1.764,752,2.462,773,3.223,774,1.764,780,1.595,781,2.381,782,2.261,789,1.498,790,1.498,791,1.498,792,1.371,823,2.549,879,2.139,1037,1.9,1057,1.335,1099,2.796,1158,1.9,1163,2.061,1216,1.976,1292,2.261,1549,1.647,1585,2.155,1597,1.647,2046,2.261,2100,3.4,2108,2.155,2109,2.155,2114,2.061,2165,4.006,2238,2.061,2276,1.976,2278,1.9,2287,3.267,2376,2.891,2392,2.904,2393,2.904,2394,5.84,2395,5.046,2396,6.519,2397,2.904,2398,2.904,2399,2.904,2404,6.734,2405,2.904,2406,6.602,2408,2.381,2413,5.241,2414,2.261,2415,4.197,2419,2.904,2421,2.904,2422,5.704,2424,2.904,2426,2.904,2427,2.523,2429,5.004,2430,2.904,2432,3.645,2433,2.692,2434,4.974,2435,2.904,2437,2.904,2439,2.904,2441,2.904,2443,2.904,2445,2.904,2453,2.904,2454,5.345,2455,2.523,2456,2.904,2457,2.904,2458,4.696,2459,4.197,2460,3.442,2461,2.904,2462,2.904,2463,2.904,2464,2.904,2465,2.904,2466,2.904,2467,2.523,2468,2.904,2469,2.904,2470,2.904,2471,2.904,2472,2.904,2473,2.904,2474,4.197,2475,2.692,2476,2.904,2477,4.281,2478,2.904,2479,2.904,2480,4.197,2481,4.197,2482,4.281,2483,2.904,2484,2.904,2485,4.197,2486,2.904,2487,2.904,2488,2.904,2489,2.904,2490,2.904,2491,2.904,2492,2.904,2493,2.904,2494,2.904,2495,2.904,2496,2.904,2497,4.929,2498,2.904,2499,2.523,2500,4.197,2501,2.904,2502,2.904,2503,2.904,2504,2.904,2505,2.904,2506,3.89,2507,3.89,2508,2.692,2509,2.692,2510,2.904,2511,2.904,2512,2.904,2513,4.197,2514,2.904,2515,2.692,2516,2.904,2517,2.904]],["title/interfaces/Person.html",[106,0.269,2458,2.846]],["body/interfaces/Person.html",[0,1.539,3,0.045,4,0.045,5,0.045,10,0.44,13,2.901,14,2.032,15,1.362,17,0.306,21,1.531,27,0.582,32,0.647,33,0.664,36,0.01,37,0.832,38,0.561,39,1.099,40,0.647,44,2.367,45,1.188,48,3.901,50,1.175,51,1.105,55,1.531,59,0.996,65,0.006,70,0.006,77,2.838,80,0.217,83,2.012,85,3.312,86,2.199,87,1.531,88,1.531,89,0.142,90,1.485,92,1.741,93,1.044,94,1.442,95,1.22,101,1.288,105,0.075,106,0.33,108,1.485,109,0.096,110,1.422,115,1.149,118,0.63,131,2.88,135,1.65,139,1.074,141,1.085,142,1.531,143,1.531,144,1.629,163,1.324,168,1.62,173,2.577,178,0.968,195,0.65,201,0.65,207,4.648,226,2.243,227,1.902,232,1.324,258,1.52,268,1.236,269,2.294,282,2.589,283,0.979,284,1.323,285,2.901,298,0.993,306,2.727,307,3.901,308,3.901,376,2.003,596,3.495,600,3.701,608,3.702,629,1.741,630,1.802,752,2.501,773,3.263,774,1.802,780,1.629,781,2.418,782,2.31,789,1.531,790,1.531,791,1.531,792,1.401,823,2.589,879,2.166,1037,1.941,1057,0.944,1099,2.83,1158,2.788,1163,2.106,1216,2.019,1292,2.31,1549,1.683,1585,3.163,1597,1.683,2046,3.318,2100,2.685,2108,2.202,2109,2.202,2114,2.106,2165,4.046,2238,2.106,2276,2.019,2278,1.941,2287,4.495,2376,2.926,2392,2.967,2393,2.967,2394,5.353,2395,4.471,2396,6.194,2397,2.967,2398,2.967,2399,2.967,2404,6.55,2405,2.967,2406,6.338,2408,2.433,2413,5.261,2414,2.31,2415,4.263,2419,2.967,2421,2.967,2422,5.741,2424,2.967,2426,2.967,2427,2.577,2429,4.624,2430,2.967,2432,3.702,2433,2.751,2434,5.016,2435,2.967,2437,2.967,2439,2.967,2441,2.967,2443,2.967,2445,2.967,2453,2.967,2454,5.38,2455,2.577,2456,2.967,2457,2.967,2458,4.736,2459,5.775,2460,2.433,2461,2.967,2462,2.967,2463,2.967,2464,2.967,2465,2.967,2466,2.967,2467,2.577,2468,2.967,2469,2.967,2470,2.967,2471,2.967,2472,2.967,2473,2.967,2474,4.263,2475,2.751,2476,2.967,2477,4.333,2478,2.967,2479,2.967,2480,4.263,2481,4.263,2482,4.333,2483,2.967,2484,2.967,2485,4.263,2486,2.967,2487,2.967,2488,2.967,2489,2.967,2490,2.967,2491,2.967,2492,2.967,2493,2.967,2494,2.967,2495,2.967,2496,2.967,2497,4.989,2498,2.967,2499,2.577,2500,4.263,2501,2.967,2502,2.967,2503,2.967,2504,2.967,2505,2.967,2506,3.951,2507,3.951,2508,2.751,2509,2.751,2510,2.967,2511,2.967,2512,2.967,2513,4.263,2514,2.967,2515,2.751,2516,2.967,2517,2.967]],["title/injectables/ReferenceDataState.html",[0,1.253,786,1.969]],["body/injectables/ReferenceDataState.html",[0,1.494,2,2.021,3,0.062,4,0.043,5,0.043,10,0.722,14,2.153,15,1.899,17,0.293,18,1.316,21,2.759,27,0.812,30,1.636,35,1.502,36,0.01,37,0.905,38,0.551,39,1.078,40,0.902,45,1.657,50,1.396,51,0.708,55,2.134,59,1.017,61,1.66,65,0.006,70,0.006,77,1.953,80,0.219,83,2.301,86,2.134,87,1.469,88,1.469,89,0.136,90,1.425,93,1.002,94,1.384,95,1.171,100,1.862,105,0.081,106,0.321,108,1.425,109,0.092,110,1.49,115,1.33,125,4.531,135,1.619,138,2.217,139,0.995,141,0.708,142,1.469,143,1.469,144,1.563,168,1.852,195,0.744,226,2.2,227,2.387,238,1.028,242,2.021,267,0.605,298,0.953,332,1.883,352,1.862,354,3.188,356,2.059,358,3.316,361,2.301,363,2.335,364,2.514,378,2.525,382,1.384,387,1.171,410,3.217,434,1.554,437,1.554,450,1.307,595,2.113,625,1.73,626,1.862,629,1.67,630,1.73,682,1.73,752,2.859,755,3.793,756,2.335,757,2.335,762,3.793,763,3.188,767,2.335,771,3.22,777,1.793,780,1.563,786,2.347,787,3.478,789,1.469,790,1.469,791,1.469,792,1.344,793,1.615,795,2.427,815,2.606,816,2.113,827,2.606,836,2.335,852,2.936,856,3.796,879,2.957,912,2.335,915,2.216,944,2.216,958,3.452,1010,2.936,1011,2.335,1019,2.335,1022,2.335,1023,2.335,1030,2.021,1034,4.164,1041,2.816,1158,2.706,1163,3.796,1411,2.113,1527,2.936,1591,4.416,1592,4.163,1593,4.163,2027,2.816,2096,3.393,2098,2.936,2100,3.947,2106,2.216,2244,3.793,2303,5.495,2304,2.639,2305,3.393,2306,2.473,2307,6.117,2308,2.639,2309,5.682,2310,2.847,2311,2.847,2312,2.473,2313,2.847,2314,2.847,2315,2.847,2316,2.847,2317,2.847,2318,2.847,2319,2.847,2320,2.847,2321,2.847,2322,2.639,2323,4.138,2324,4.138,2325,4.138,2326,4.138,2327,4.138,2328,4.138,2329,3.835,2330,2.847,2331,2.847,2332,2.847,2333,2.847,2334,2.847,2335,2.847,2336,2.847,2337,2.847,2338,2.847,2339,2.847,2340,2.847,2341,3.594,2342,2.847,2343,2.847,2344,2.847,2345,4.138,2346,4.874,2347,4.874,2348,2.847,2349,2.847,2350,2.847,2351,2.473,2352,2.473,2353,2.473,2354,2.847,2355,4.138,2356,4.233,2357,2.847,2358,2.847,2359,2.847,2360,2.847,2361,5.349,2362,4.138,2363,4.874,2364,2.847,2365,2.847,2366,2.847,2367,2.847,2368,2.847,2369,2.847,2370,2.847,2371,2.847,2372,2.847,2373,2.847,2374,2.847,2375,4.138,2376,2.427,2377,4.138,2378,2.847,2379,2.847,2380,2.847,2381,2.847,2382,2.847,2383,2.847,2384,2.847,2385,2.847,2386,2.847,2387,2.847,2388,2.847,2389,4.138,2390,2.847,2391,2.847,2423,4.233,2518,5.157,2519,5.157,2520,3.549,2521,3.549,2522,3.549,2523,3.549,2524,3.549,2525,3.549,2526,3.549]],["title/interfaces/ReferenceDataStateModel.html",[106,0.269,2322,3.217]],["body/interfaces/ReferenceDataStateModel.html",[0,1.569,3,0.065,4,0.046,5,0.046,14,2.054,15,1.399,17,0.314,21,1.572,27,0.598,36,0.01,37,0.663,38,0.728,40,0.665,45,1.221,50,1.023,51,0.522,55,1.572,59,0.989,61,1.713,65,0.006,70,0.006,77,2.051,80,0.222,83,2.391,86,2.241,87,1.572,88,1.572,89,0.146,90,1.526,93,1.073,94,1.481,95,1.254,100,1.994,105,0.083,106,0.337,108,1.526,109,0.099,110,1.513,115,1.341,125,4.404,135,1.671,138,1.975,139,1.027,141,0.744,142,1.572,143,1.572,144,1.674,168,1.925,178,0.994,195,0.773,201,0.663,226,1.787,227,1.939,238,1.1,242,2.163,267,0.648,298,1.02,332,1.529,352,1.994,354,3.312,356,2.139,358,3.446,361,2.391,363,2.499,364,2.612,378,2.051,382,1.02,387,1.254,410,3.159,434,1.402,437,1.402,450,1.399,595,2.262,625,1.852,626,1.994,629,1.788,630,1.852,682,1.852,752,2.549,755,3.941,756,2.499,757,2.499,762,3.941,763,3.312,767,2.499,771,3.382,777,1.92,780,1.674,786,1.729,787,1.788,789,1.572,790,1.572,791,1.572,792,1.439,793,1.729,795,2.549,815,1.92,816,2.262,827,2.737,836,2.499,852,4.141,856,3.917,879,2.82,912,2.499,915,2.373,944,2.373,958,3.321,1010,3.084,1011,2.499,1019,2.499,1022,2.499,1023,2.499,1030,2.163,1034,3.382,1041,2.074,1158,1.994,1163,3.084,1411,2.262,1527,3.084,1587,7.51,1591,4.249,1592,3.756,1593,3.756,2027,2.957,2096,4.785,2098,3.084,2100,3.477,2106,2.373,2244,3.382,2303,2.825,2304,2.825,2305,3.563,2306,2.648,2307,5.52,2308,2.825,2309,5.836,2310,3.048,2311,3.048,2312,2.648,2313,3.048,2314,3.048,2315,3.048,2316,3.048,2317,3.048,2318,3.048,2319,3.048,2320,3.048,2321,3.048,2322,4.028,2323,5.836,2324,4.345,2325,5.836,2326,5.836,2327,5.836,2328,5.836,2329,2.825,2330,3.048,2331,3.048,2332,3.048,2333,3.048,2334,3.048,2335,3.048,2336,3.048,2337,3.048,2338,3.048,2339,3.048,2340,3.048,2341,3.774,2342,3.048,2343,3.048,2344,3.048,2345,3.048,2346,5.064,2347,5.064,2348,3.048,2349,3.048,2350,3.048,2351,2.648,2352,2.648,2353,2.648,2354,3.048,2355,4.345,2356,3.774,2357,3.048,2358,3.048,2359,3.048,2360,3.048,2361,4.345,2362,3.048,2363,3.048,2364,3.048,2365,3.048,2366,3.048,2367,3.048,2368,3.048,2369,3.048,2370,3.048,2371,3.048,2372,3.048,2373,3.048,2374,3.048,2375,3.048,2376,1.788,2377,3.048,2378,3.048,2379,3.048,2380,3.048,2381,3.048,2382,3.048,2383,3.048,2384,3.048,2385,3.048,2386,3.048,2387,3.048,2388,3.048,2389,4.345,2390,3.048,2391,3.048]],["title/components/RegistrationContentComponent.html",[179,0.426,492,1.221]],["body/components/RegistrationContentComponent.html",[3,0.035,4,0.035,5,0.053,10,0.811,11,1.041,14,2.166,17,0.237,18,1.122,27,0.692,30,1.944,32,0.769,33,0.789,35,1.457,36,0.01,37,1.017,38,0.676,39,1.046,44,2.474,45,2.465,47,0.83,50,1.42,51,1.072,59,0.616,65,0.005,70,0.005,80,0.178,89,0.11,94,1.117,95,0.945,99,2.271,101,2.088,105,0.035,109,0.178,110,0.528,118,0.488,132,2.315,139,1.094,141,1.007,179,0.636,180,0.769,181,1.094,182,0.789,183,0.897,184,0.874,185,0.874,191,0.769,192,1.122,193,1.122,194,2.199,195,1.087,196,0.696,197,1.15,199,1.15,201,0.538,228,3.146,229,3.146,232,2.691,237,1.235,238,1.273,249,2.142,250,1.241,251,1.122,258,1.449,267,1.163,268,1.192,269,0.851,282,2.142,283,1.621,284,1.493,293,0.731,298,0.769,304,1.631,305,1.503,306,2.032,313,1.304,329,3.413,376,1.699,382,1.435,383,2.481,384,1.503,385,1.503,386,2.207,390,2.337,391,1.122,392,1.349,395,1.396,396,1.365,397,1.34,399,2.767,404,1.186,410,3.036,411,1.819,412,1.396,413,1.531,415,2.355,417,1.503,418,2.282,420,1.186,421,1.876,422,1.349,426,2.805,428,1.876,429,1.618,432,2,434,0.584,435,2.068,437,0.584,441,0.75,455,1.789,456,1.997,458,0.416,459,1.57,460,0.874,461,1.828,462,0.874,463,0.874,464,0.809,465,0.874,466,0.789,467,1.63,468,0.809,469,0.874,470,1.18,471,1.63,472,0.809,473,0.851,474,0.874,475,0.809,476,0.874,477,0.809,478,0.769,479,0.874,480,0.809,481,0.874,482,0.809,483,0.789,484,0.874,485,0.809,486,0.851,487,0.83,488,0.874,489,0.809,490,1.34,491,0.789,492,1.693,493,0.809,494,0.874,495,0.809,496,1.63,497,0.809,498,1.241,499,1.34,500,0.789,501,0.809,502,0.789,503,1.205,504,0.874,505,0.789,506,0.75,507,0.809,508,0.874,509,0.809,510,0.874,511,0.809,512,0.874,513,0.809,514,1.122,515,0.809,516,1.241,517,0.809,518,0.874,519,0.809,520,1.122,521,0.874,522,0.809,523,0.874,524,0.874,576,5.895,656,2.306,661,0.809,673,1.241,674,1.673,680,2.912,700,1.45,713,1.631,714,2.701,718,1.885,721,0.998,722,1.706,731,3.871,732,1.631,792,1.085,936,2.131,1057,1.53,1074,2.891,1099,3.105,1113,2.891,1136,4.289,1137,3.871,1219,3.339,1235,1.997,1292,4.577,1385,2.744,1492,2.502,1516,4.229,1540,5.223,1546,1.503,1549,3.491,1591,4.424,1592,3.725,1593,4.103,1603,2.299,1621,3.871,1803,2.744,1872,4.81,1879,4.178,1913,1.706,1917,1.997,1958,4.709,1988,2.131,1989,4.709,1992,2.891,2100,3.59,2123,3.339,2241,3.268,2276,3.273,2278,3.146,2376,2.068,2394,3.976,2413,2.744,2423,1.997,2427,3.726,2458,1.885,2499,1.997,2527,6.291,2528,6.291,2529,2.865,2530,5.346,2531,5.346,2532,3.726,2533,4.755,2534,4.709,2535,5.346,2536,5.696,2537,5.346,2538,5.346,2539,3.871,2540,5.995,2541,5.995,2542,4.395,2543,3.871,2544,3.871,2545,4.809,2546,4.395,2547,4.395,2548,3.871,2549,2.865,2550,3.871,2551,5.074,2552,2.865,2553,4.395,2554,4.395,2555,2.865,2556,4.395,2557,2.865,2558,3.871,2559,4.709,2560,2.865,2561,4.395,2562,3.871,2563,2.865,2564,2.865,2565,2.865,2566,2.865,2567,2.865,2568,2.865,2569,2.865,2570,3.063,2571,4.395,2572,2.865,2573,4.395,2574,4.395,2575,2.865,2576,2.865,2577,1.564,2578,5.346,2579,2.524,2580,2.524,2581,2.865,2582,2.865,2583,2.865,2584,5.346,2585,2.865,2586,2.865,2587,2.865,2588,2.865,2589,2.865,2590,2.865,2591,2.865,2592,3.871,2593,2.524,2594,2.524,2595,2.865,2596,2.865,2597,2.865,2598,2.865,2599,2.299,2600,2.865,2601,2.131,2602,4.395,2603,2.865,2604,2.299,2605,2.299,2606,2.524,2607,2.524,2608,2.865,2609,2.865,2610,2.865,2611,2.524]],["title/modules/RegistrationContentModule.html",[525,0.594,2612,3.015]],["body/modules/RegistrationContentModule.html",[3,0.077,4,0.077,5,0.077,36,0.01,65,0.008,70,0.008,80,0.227,89,0.244,105,0.077,109,0.166,283,1.173,407,1.626,458,0.925,492,2.56,525,0.875,527,1.754,528,1.943,529,2.479,530,1.893,531,1.845,532,2.479,543,2.319,544,1.799,546,2.38,550,2.259,576,4.439,740,2.648,741,2.159,747,3.99,748,3.343,1907,5.002,1908,4.191,2527,4.737,2528,4.737,2612,6.238,2613,5.611,2614,5.611,2615,5.611,2616,5.611,2617,5.743,2618,6.37,2619,5.611,2620,4.737,2621,5.611,2622,5.611]],["title/components/RegistrationMetadataComponent.html",[179,0.426,493,1.221]],["body/components/RegistrationMetadataComponent.html",[3,0.038,4,0.038,5,0.081,10,0.798,11,1.111,14,2.125,17,0.258,18,1.197,27,0.739,30,1.84,32,0.821,33,0.842,35,1.513,36,0.01,37,1.009,38,0.636,39,1.288,44,2.457,45,2.158,50,1.333,51,1.034,59,0.888,65,0.005,66,2.482,70,0.005,80,0.183,89,0.12,99,2.373,101,2.182,105,0.038,109,0.081,110,0.575,117,0.96,118,0.532,131,2.243,132,2.243,139,1.092,141,0.86,179,0.661,180,0.838,181,1.168,182,0.859,183,0.977,184,0.952,185,0.952,191,1.802,192,1.197,193,1.197,194,2.212,195,1.09,196,0.758,197,1.228,199,1.228,201,0.574,218,2.321,232,2.404,237,0.721,250,1.591,251,1.197,258,0.886,267,0.532,268,1.496,283,1.62,284,0.777,293,0.797,304,1.777,305,1.638,306,2.391,332,1.992,369,2.134,370,3.273,371,3.208,381,1.058,382,1.893,383,3.246,384,3.287,385,3.287,386,2.306,387,1.03,390,2.618,391,1.599,392,3.32,396,1.438,397,1.718,410,2.074,411,3.115,413,1.59,415,1.375,418,1.332,426,1.638,428,1.332,429,1.149,432,2.135,433,3.701,434,0.636,435,1.469,437,1.277,441,0.817,444,3.273,452,3.056,453,3.056,457,3.926,458,0.453,459,1.139,460,0.952,461,1.91,462,0.952,463,0.952,464,0.881,465,0.952,466,0.859,467,1.718,468,0.881,469,0.952,470,1.259,471,1.718,472,0.881,473,0.928,474,0.952,475,0.881,476,0.952,477,0.881,478,0.838,479,0.952,480,0.881,481,0.952,482,0.881,483,1.291,484,0.952,485,0.881,486,0.928,487,0.904,488,0.952,489,0.881,490,1.43,491,0.859,492,0.881,493,1.769,494,0.952,495,0.881,496,1.718,497,0.881,498,1.324,499,1.43,500,0.859,501,0.881,502,0.859,503,0.703,504,0.952,505,0.859,506,0.817,507,0.881,508,0.952,509,0.881,510,0.952,511,0.881,512,0.952,513,0.881,514,1.438,515,0.881,516,1.324,517,0.881,518,0.952,519,0.881,520,1.197,521,0.952,522,0.881,523,0.952,524,0.952,555,2.066,598,3.268,610,3.912,625,1.521,626,1.638,660,2.197,662,1.829,680,2.674,699,2.135,713,1.777,714,2.37,715,2.054,721,1.087,728,2.321,729,1.858,730,2.175,732,1.777,781,2.851,792,2.373,958,2.002,1064,2.76,1069,4.659,1201,2.321,1219,2.929,1292,3.912,1385,2.929,1540,3.912,1548,2.948,1549,2.135,1568,2.504,1591,3.995,1592,3.851,1593,3.851,1859,2.749,1867,4.963,1872,5.87,1991,3.488,1992,3.707,2026,2.208,2102,2.929,2183,3.488,2276,3.42,2278,3.287,2284,2.504,2285,1.949,2376,1.469,2408,2.054,2413,5.263,2422,3.488,2427,3.926,2433,3.488,2458,2.054,2475,2.321,2506,4.659,2507,4.659,2508,3.488,2509,3.488,2534,4.963,2536,5.915,2539,4.131,2544,4.131,2548,4.131,2550,4.131,2551,5.245,2562,4.131,2579,2.749,2580,2.749,2592,2.749,2593,2.749,2594,2.749,2604,4.52,2606,2.749,2607,4.131,2620,6.001,2623,7.108,2624,3.122,2625,5.634,2626,4.69,2627,5.634,2628,6.715,2629,7.054,2630,4.69,2631,4.69,2632,4.69,2633,3.122,2634,3.122,2635,3.122,2636,6.264,2637,4.69,2638,4.69,2639,3.122,2640,4.131,2641,3.122,2642,4.69,2643,3.122,2644,3.122,2645,3.122,2646,4.69,2647,5.634,2648,4.69,2649,4.69,2650,4.69,2651,3.122,2652,3.122,2653,3.122,2654,3.122,2655,3.122,2656,4.69,2657,3.122,2658,3.122,2659,3.122,2660,3.122,2661,3.122,2662,5.634,2663,6.715,2664,5.634,2665,3.122,2666,2.749,2667,2.749,2668,3.122,2669,3.122]],["title/modules/RegistrationMetadataModule.html",[525,0.594,2617,2.846]],["body/modules/RegistrationMetadataModule.html",[3,0.073,4,0.073,5,0.096,36,0.01,37,0.735,65,0.008,70,0.008,80,0.234,89,0.23,105,0.073,109,0.156,283,1.106,407,1.533,458,0.872,483,1.653,493,2.541,525,0.825,527,1.653,528,1.831,529,2.416,530,1.784,531,1.739,532,2.416,543,2.237,544,1.695,546,2.296,550,2.18,554,3.95,555,2.645,740,2.555,741,2.035,744,5.113,745,4.827,746,3.95,747,4.157,748,3.151,1581,5.886,1582,4.817,1857,4.817,1901,6,1907,4.827,1908,3.95,2004,5.665,2016,4.184,2017,4.817,2285,3.75,2301,5.886,2302,5.886,2617,5.897,2620,4.465,2623,5.289,2670,5.289,2671,5.289,2672,5.289,2673,6.005,2674,6.005,2675,6.462,2676,5.289,2677,6.005,2678,6.005]],["title/components/RegistrationModalComponent.html",[179,0.426,495,1.221]],["body/components/RegistrationModalComponent.html",[3,0.05,4,0.05,5,0.07,10,0.688,11,1.371,13,2.28,17,0.345,18,1.477,27,0.911,30,1.801,32,1.013,33,1.039,35,0.941,36,0.01,37,0.978,38,0.593,39,0.675,44,2.314,45,2.305,47,1.209,50,0.789,51,0.912,59,0.481,65,0.006,70,0.006,80,0.218,89,0.16,92,1.965,93,1.179,95,1.378,99,2.717,101,2.498,105,0.05,109,0.203,110,1.321,118,0.987,135,1.742,139,0.623,141,1.098,179,0.741,180,1.121,181,1.441,182,1.149,184,1.273,185,1.273,188,2.256,190,4.37,191,1.121,194,2.259,195,1.116,196,1.014,199,1.515,201,0.709,226,2.367,227,2.568,237,0.965,251,1.477,267,1.132,268,1.32,269,1.974,283,1.629,284,2.154,298,1.121,302,2.91,304,2.377,305,2.191,330,2.747,332,1.179,376,1.04,391,1.066,396,1.696,413,0.989,434,0.851,437,0.851,441,1.093,458,0.606,459,1.829,460,1.273,461,2.187,462,1.273,463,1.273,464,1.179,465,1.273,466,1.149,467,2.026,468,1.179,469,1.273,470,1.554,471,2.026,472,1.179,473,1.241,474,1.273,475,1.179,476,1.273,477,1.179,478,1.121,479,1.273,480,1.179,481,1.273,482,1.179,483,1.149,484,1.273,485,1.179,486,1.241,487,1.209,488,1.273,489,1.179,490,1.765,491,1.149,492,1.634,493,1.179,494,1.273,495,2.025,496,2.026,497,1.179,498,1.634,499,1.765,500,1.149,501,1.179,502,1.149,503,0.941,504,1.273,505,1.149,506,1.093,507,1.179,508,1.273,509,1.179,510,1.273,511,1.179,512,1.273,513,1.179,514,1.477,515,1.179,516,1.634,517,1.179,518,1.273,519,1.179,520,1.477,521,1.273,522,1.179,523,1.273,524,1.273,576,6.029,661,1.179,673,1.634,674,2.079,700,1.91,786,3.264,787,1.965,788,2.28,823,2.035,972,4.148,1217,2.747,1285,3.445,1292,3.614,1370,5.33,1516,5.118,1801,4.94,2114,2.377,2238,2.377,2527,5.944,2528,3.105,2532,4.629,2577,2.28,2622,3.678,2679,3.105,2680,5.788,2681,4.304,2682,6.643,2683,7.173,2684,3.35,2685,6.044,2686,5.788,2687,5.788,2688,4.175,2689,4.175,2690,4.175,2691,3.105,2692,3.35,2693,3.35,2694,4.175,2695,4.175,2696,4.175,2697,5.788,2698,4.175,2699,4.175,2700,3.35,2701,3.35,2702,3.35,2703,4.175,2704,4.175,2705,4.175]],["title/modules/RegistrationModalModule.html",[525,0.594,541,3.015]],["body/modules/RegistrationModalModule.html",[3,0.077,4,0.077,5,0.077,36,0.01,65,0.008,70,0.008,80,0.227,89,0.244,105,0.077,109,0.166,283,1.4,407,1.626,458,0.925,495,2.56,525,0.875,527,1.754,528,1.943,529,2.479,530,1.893,531,1.845,532,2.479,541,6.238,543,2.319,544,1.799,546,2.38,550,2.259,556,3.146,557,2.483,576,5.298,740,2.648,741,2.159,2527,4.737,2528,4.737,2577,3.478,2612,6.084,2706,5.611,2707,5.611,2708,5.611,2709,6.37,2710,5.111,2711,6.1,2712,6.37,2713,4.439]],["title/injectables/RegistrationState.html",[0,1.253,781,1.969]],["body/injectables/RegistrationState.html",[0,1.098,1,2.256,2,1.35,3,0.046,4,0.029,5,0.046,7,2.382,8,1.56,10,0.786,11,1.4,13,2.069,14,2.317,15,1.395,17,0.196,18,0.968,21,2.238,24,1.915,25,4.326,27,0.746,28,1.903,29,3.225,30,1.854,32,0.663,33,0.68,35,1.549,36,0.01,37,0.925,38,0.624,39,1.112,40,0.946,41,1.337,42,2.585,43,2.484,44,2.672,45,2.696,47,1.566,48,3.581,50,1.502,51,1.054,55,1.568,59,0.871,65,0.004,70,0.004,73,2.819,77,2.98,80,0.215,83,1.793,85,3.453,86,1.568,87,0.982,88,0.982,89,0.091,90,0.952,92,1.116,93,0.67,94,0.925,95,0.783,98,1.764,99,1.436,100,1.245,101,1.32,102,1.412,105,0.046,106,0.147,108,0.952,109,0.062,110,1.478,115,1.219,116,1.35,117,1.008,118,0.646,131,1.936,132,2.705,135,1.835,138,2.071,139,1.145,141,0.812,142,0.982,143,1.959,144,1.045,145,1.481,146,1.295,147,1.481,148,1.481,149,1.481,150,1.481,151,1.481,154,1.481,155,1.481,162,1.56,168,1.444,174,2.641,191,1.951,195,0.58,201,0.464,226,2.183,227,1.936,237,1.094,238,0.687,242,1.35,258,1.469,267,0.646,268,1.564,269,1.757,282,1.847,283,1.53,298,0.637,306,1.285,307,1.198,308,1.198,332,2.317,356,1.605,361,1.793,364,1.959,376,1.346,382,1.271,387,0.783,410,2.609,413,0.562,419,1.116,450,1.743,483,1.303,503,0.534,589,2.819,598,2.641,600,3.219,601,2.604,603,2.641,610,4.292,619,1.764,625,1.156,626,1.245,643,0.804,655,2.819,657,2.818,658,1.295,675,0.982,707,2.819,752,2.228,763,1.245,764,1.653,768,1.653,769,1.412,773,1.245,776,2.493,777,1.198,778,1.653,779,1.412,780,1.045,781,1.725,786,1.725,787,1.116,788,1.295,823,1.847,827,1.198,860,1.653,868,1.56,873,1.653,879,2.531,880,1.35,881,1.35,892,3.299,902,1.653,904,1.653,906,1.653,908,1.653,911,1.653,914,1.653,917,1.653,919,1.653,921,1.653,923,1.653,924,1.653,925,1.653,939,1.56,965,2.493,980,1.412,983,1.653,994,1.653,996,1.653,1057,1.609,1067,3.299,1081,1.764,1099,2.869,1216,3.752,1217,3.889,1218,3.768,1226,3.041,1381,1.653,1479,2.952,1494,1.764,1537,2.819,1546,1.989,1549,2.69,1585,3.519,1597,1.725,1609,2.819,1635,1.764,1667,2.819,1705,3.798,1710,3.041,1980,2.158,2026,1.116,2058,1.56,2093,1.56,2098,2.695,2100,1.915,2102,3.691,2107,2.641,2108,1.412,2109,1.412,2114,2.158,2119,1.412,2121,1.412,2123,2.367,2127,2.256,2165,3.219,2233,1.653,2238,2.158,2270,3.768,2276,1.295,2278,1.989,2286,2.819,2287,1.481,2305,4.971,2306,1.653,2312,2.641,2341,1.653,2351,1.653,2352,1.653,2353,1.653,2356,1.653,2376,2.228,2408,2.493,2413,1.481,2414,3.377,2423,1.653,2432,1.653,2434,2.641,2454,2.641,2455,1.653,2460,1.56,2467,1.653,2477,2.641,2482,1.653,2570,3.768,2599,1.903,2601,3.52,2692,4.338,2693,3.798,2700,4.338,2701,4.338,2702,1.903,2714,1.903,2715,6.401,2716,5.514,2717,3.79,2718,3.79,2719,3.79,2720,3.79,2721,4.763,2722,3.79,2723,5.828,2724,4.17,2725,4.17,2726,2.372,2727,3.339,2728,2.372,2729,3.339,2730,2.372,2731,3.339,2732,2.372,2733,2.372,2734,3.339,2735,2.372,2736,3.339,2737,4.763,2738,3.339,2739,3.339,2740,3.041,2741,3.339,2742,2.372,2743,3.339,2744,3.339,2745,2.372,2746,5.552,2747,2.372,2748,3.339,2749,2.372,2750,3.339,2751,2.372,2752,2.372,2753,2.372,2754,2.372,2755,2.372,2756,2.372,2757,2.372,2758,2.372,2759,2.372,2760,2.372,2761,2.372,2762,2.372,2763,2.372,2764,2.089,2765,2.089,2766,2.089,2767,2.089,2768,3.339,2769,3.339,2770,2.089,2771,1.764,2772,1.903,2773,4.763,2774,3.339,2775,1.903,2776,4.17,2777,4.17,2778,2.089,2779,3.339,2780,2.089,2781,2.089,2782,3.339,2783,2.089,2784,2.089,2785,2.089,2786,2.089,2787,2.089,2788,2.089,2789,2.089,2790,2.089,2791,2.089,2792,2.089,2793,2.819,2794,2.089,2795,2.089,2796,2.089,2797,2.089,2798,1.903,2799,2.089,2800,2.089,2801,2.089,2802,2.089,2803,2.089,2804,2.089,2805,2.089,2806,2.089,2807,2.089,2808,2.089,2809,2.089,2810,2.089,2811,2.089,2812,2.089,2813,2.089,2814,2.089,2815,2.089,2816,2.089,2817,2.089,2818,2.089,2819,2.089,2820,2.089,2821,2.089,2822,2.089,2823,2.089,2824,2.089,2825,2.089,2826,2.089,2827,2.089,2828,2.089,2829,2.089,2830,2.089,2831,2.089,2832,2.089,2833,2.089,2834,2.089,2835,2.089,2836,2.089,2837,2.089,2838,2.089,2839,1.903,2840,2.089,2841,1.903,2842,2.089,2843,2.089,2844,2.089,2845,3.339,2846,2.089,2847,2.089,2848,2.089,2849,2.089,2850,2.089,2851,2.089,2852,2.089,2853,2.089,2854,2.089,2855,2.089,2856,2.089,2857,2.089,2858,1.903,2859,2.089,2860,2.089,2861,2.089,2862,2.089,2863,2.089,2864,2.089,2865,3.339,2866,2.089,2867,3.339,2868,2.089,2869,3.339,2870,2.089,2871,3.339,2872,2.089,2873,2.089,2874,2.089,2875,2.089,2876,2.089,2877,3.339,2878,2.089,2879,2.089,2880,2.089,2881,2.089,2882,2.089,2883,2.089,2884,4.17,2885,2.089,2886,2.089,2887,2.089,2888,3.339,2889,3.041,2890,3.041,2891,2.089,2892,2.089,2893,2.089,2894,4.17,2895,2.089,2896,2.089,2897,2.089,2898,1.903,2899,2.089,2900,2.089,2901,2.089,2902,2.089,2903,2.089,2904,2.089,2905,2.089,2906,2.089,2907,2.089,2908,2.089,2909,2.089,2910,2.089,2911,2.089,2912,2.089,2913,2.089,2914,2.089,2915,2.089,2916,2.089,2917,2.089,2918,2.089,2919,2.089,2920,2.089,2921,2.089,2922,2.089,2923,2.089,2924,2.089,2925,2.089,2926,2.089,2927,2.089,2928,2.089,2929,2.089,2930,2.089,2931,2.089,2932,2.089,2933,2.089]],["title/interfaces/RegistrationStateModel.html",[106,0.269,2772,3.471]],["body/interfaces/RegistrationStateModel.html",[0,1.208,1,2.484,3,0.05,4,0.032,5,0.05,7,2.548,8,1.762,10,0.318,11,1.485,13,1.463,14,2.319,15,0.986,17,0.221,21,1.109,25,4.483,27,0.657,29,2.853,32,0.469,33,0.481,36,0.01,37,0.708,38,0.592,39,0.675,40,0.73,41,1.178,42,2.278,43,2.189,44,2.672,45,2.705,48,3.168,50,1.093,51,0.912,55,1.109,59,0.868,65,0.004,70,0.004,73,3.103,77,2.79,80,0.219,83,1.941,85,3.59,86,1.727,87,1.109,88,1.109,89,0.103,90,1.076,92,1.261,93,0.756,94,1.044,95,0.884,98,1.992,99,1.58,100,1.406,101,1.453,102,1.595,105,0.05,106,0.167,108,1.076,109,0.07,110,1.512,115,1.249,116,1.525,117,0.986,118,0.457,131,2.071,132,2.79,135,1.892,138,2.17,139,1.179,141,0.704,142,1.109,143,1.727,144,1.18,145,1.673,146,1.463,147,1.673,148,1.673,149,1.673,150,1.673,151,1.673,154,1.673,155,1.673,162,1.762,168,1.563,174,1.867,178,0.701,191,1.861,195,0.627,201,0.511,226,2.069,227,1.494,237,1.184,238,0.776,242,1.525,258,1.45,268,1.549,269,1.719,282,1.306,283,1.533,298,0.719,306,1.961,307,1.354,308,1.354,332,2.319,356,1.737,361,1.941,364,2.121,376,1.276,382,1.376,387,0.884,410,2.552,413,0.634,419,1.261,450,1.887,483,1.149,503,0.604,589,1.992,600,3.444,601,2.258,603,2.908,610,4.478,619,1.992,625,1.306,626,1.406,643,0.908,655,3.103,657,3.051,658,1.463,675,1.109,707,3.103,752,1.964,763,1.406,764,1.867,768,1.867,769,1.595,773,1.406,776,2.745,777,1.354,778,1.867,779,1.595,780,1.18,781,1.219,786,1.899,787,1.261,788,1.463,823,2.033,827,1.354,860,1.867,868,1.762,873,1.867,879,2.497,880,1.525,881,1.525,892,1.867,902,1.867,904,1.867,906,1.867,908,1.867,911,1.867,914,1.867,917,1.867,919,1.867,921,1.867,923,1.867,924,1.867,925,1.867,939,1.762,965,2.745,980,1.595,983,1.867,994,1.867,996,1.867,1057,1.695,1067,3.571,1081,3.103,1099,2.332,1216,3.625,1217,3.806,1218,2.908,1226,3.348,1381,1.867,1479,3.158,1494,1.992,1537,1.992,1546,1.406,1549,2.853,1585,3.732,1597,1.219,1609,1.992,1635,1.992,1667,1.992,1705,2.149,1710,2.149,1980,2.375,2026,1.261,2058,1.762,2093,1.762,2098,2.918,2100,2.108,2102,3.613,2107,2.908,2108,1.595,2109,1.595,2114,2.375,2119,1.595,2121,1.595,2123,2.606,2127,2.484,2165,3.444,2233,1.867,2238,2.375,2270,2.908,2276,1.463,2278,2.189,2286,1.992,2287,1.673,2305,4.717,2306,1.867,2312,2.908,2341,1.867,2351,1.867,2352,1.867,2353,1.867,2356,1.867,2376,1.261,2408,1.762,2413,1.673,2414,3.2,2432,1.867,2434,1.867,2454,2.908,2455,1.867,2460,1.762,2467,1.867,2477,2.908,2482,1.867,2570,3.571,2599,2.149,2601,3.811,2692,4.641,2693,4.112,2700,4.641,2701,4.641,2702,2.149,2714,2.149,2715,6.757,2716,5.753,2721,2.36,2723,5.095,2724,2.36,2725,2.36,2727,2.36,2729,2.36,2731,2.36,2734,2.36,2736,2.36,2737,4.514,2738,2.36,2739,2.36,2740,2.149,2741,2.36,2743,2.36,2744,2.36,2746,5.095,2748,2.36,2750,2.36,2764,2.36,2765,2.36,2766,2.36,2767,2.36,2768,3.675,2769,3.675,2770,2.36,2771,1.992,2772,3.348,2773,6.107,2774,5.522,2775,2.149,2776,4.514,2777,4.514,2778,2.36,2779,3.675,2780,2.36,2781,2.36,2782,3.675,2783,2.36,2784,2.36,2785,2.36,2786,2.36,2787,2.36,2788,2.36,2789,2.36,2790,2.36,2791,2.36,2792,2.36,2793,3.103,2794,2.36,2795,2.36,2796,2.36,2797,2.36,2798,2.149,2799,2.36,2800,2.36,2801,2.36,2802,2.36,2803,2.36,2804,2.36,2805,2.36,2806,2.36,2807,2.36,2808,2.36,2809,2.36,2810,2.36,2811,2.36,2812,2.36,2813,2.36,2814,2.36,2815,2.36,2816,2.36,2817,2.36,2818,2.36,2819,2.36,2820,2.36,2821,2.36,2822,2.36,2823,2.36,2824,2.36,2825,2.36,2826,2.36,2827,2.36,2828,2.36,2829,2.36,2830,2.36,2831,2.36,2832,2.36,2833,2.36,2834,2.36,2835,2.36,2836,2.36,2837,2.36,2838,2.36,2839,2.149,2840,2.36,2841,2.149,2842,2.36,2843,2.36,2844,2.36,2845,3.675,2846,2.36,2847,2.36,2848,2.36,2849,2.36,2850,2.36,2851,2.36,2852,2.36,2853,2.36,2854,2.36,2855,2.36,2856,2.36,2857,2.36,2858,2.149,2859,2.36,2860,2.36,2861,2.36,2862,2.36,2863,2.36,2864,2.36,2865,3.675,2866,2.36,2867,3.675,2868,2.36,2869,3.675,2870,2.36,2871,3.675,2872,2.36,2873,2.36,2874,2.36,2875,2.36,2876,2.36,2877,3.675,2878,2.36,2879,2.36,2880,2.36,2881,2.36,2882,2.36,2883,2.36,2884,4.514,2885,2.36,2886,2.36,2887,2.36,2888,3.675,2889,3.348,2890,3.348,2891,2.36,2892,2.36,2893,2.36,2894,4.514,2895,2.36,2896,2.36,2897,2.36,2898,2.149,2899,2.36,2900,2.36,2901,2.36,2902,2.36,2903,2.36,2904,2.36,2905,2.36,2906,2.36,2907,2.36,2908,2.36,2909,2.36,2910,2.36,2911,2.36,2912,2.36,2913,2.36,2914,2.36,2915,2.36,2916,2.36,2917,2.36,2918,2.36,2919,2.36,2920,2.36,2921,2.36,2922,2.36,2923,2.36,2924,2.36,2925,2.36,2926,2.36,2927,2.36,2928,2.36,2929,2.36,2930,2.36,2931,2.36,2932,2.36,2933,2.36]],["title/components/ReviewButtonComponent.html",[179,0.426,497,1.221]],["body/components/ReviewButtonComponent.html",[3,0.07,4,0.039,5,0.058,7,1.433,10,0.575,11,1.145,17,0.269,18,1.235,24,2.444,25,2.879,27,0.762,30,1.9,32,0.846,33,0.868,35,1.09,36,0.01,37,0.97,38,0.655,39,0.782,40,1.118,41,1.365,44,2.011,47,0.942,50,1.091,51,0.793,59,0.666,65,0.005,70,0.005,80,0.186,89,0.125,101,2.227,105,0.039,109,0.186,110,1.063,115,1.048,117,0.824,118,0.984,135,1.402,138,1.514,139,0.862,141,1.047,179,0.791,180,0.873,181,1.204,182,0.895,183,1.018,184,0.992,185,0.992,187,2.879,188,1.885,191,2.127,192,1.235,193,1.235,194,2.216,195,1.096,196,0.79,197,1.266,199,1.266,201,0.592,207,1.852,232,1.731,237,1.334,238,0.942,250,2.198,251,1.235,252,3.597,258,1.291,266,4.455,267,1.264,268,1.598,269,2.314,283,1.259,284,1.783,293,0.83,305,1.707,306,2.427,332,2.022,376,1.783,382,1.298,386,1.197,387,1.073,390,1.268,391,0.83,396,1.474,397,1.475,404,1.346,410,2.126,415,3.736,420,1.346,422,1.531,434,0.663,437,0.663,441,0.851,458,0.472,459,1.659,460,0.992,461,1.95,462,0.992,463,0.992,464,0.918,465,0.992,466,0.895,467,1.761,468,0.918,469,0.992,470,1.298,471,1.761,472,0.918,473,1.716,474,0.992,475,0.918,476,0.992,477,0.918,478,0.873,479,0.992,480,0.918,481,0.992,482,0.918,483,0.895,484,0.992,485,0.918,486,0.966,487,0.942,488,0.992,489,0.918,490,1.475,491,0.895,492,0.918,493,0.918,494,0.992,495,0.918,496,1.761,497,1.805,498,2.441,499,1.475,500,1.331,501,0.918,502,0.895,503,0.733,504,0.992,505,0.895,506,0.851,507,0.918,508,0.992,509,0.918,510,0.992,511,0.918,512,0.992,513,0.918,514,1.235,515,0.918,516,1.365,517,0.918,518,0.992,519,0.918,520,1.235,521,0.992,522,0.918,523,0.992,524,0.992,555,2.543,594,1.885,601,3.586,643,1.639,658,3.152,660,2.664,661,0.918,662,2.664,663,2.493,664,1.268,665,1.268,666,2.251,673,1.365,674,1.807,679,2.493,680,1.388,699,2.201,700,1.596,707,3.597,714,1.643,879,1.133,1057,2.023,1067,3.37,1069,3.597,1158,2.538,1218,5.522,1232,3.02,1293,2.865,1319,3.02,1373,4.26,1492,2.753,1502,2.139,1516,4.068,1548,2.276,1557,3.02,1709,1.936,1801,3.597,1879,3.37,1900,2.609,1917,4.991,1944,2.609,2395,4.712,2423,2.266,2499,2.266,2533,2.266,2543,4.26,2558,4.26,2559,5.085,2577,1.776,2601,2.418,2684,2.609,2685,5.129,2713,2.266,2716,4.632,2740,3.88,2841,2.609,2934,5.786,2935,6.661,2936,2.865,2937,4.836,2938,4.836,2939,5.774,2940,5.085,2941,4.26,2942,6.393,2943,6.393,2944,5.774,2945,5.774,2946,5.774,2947,4.836,2948,4.836,2949,3.252,2950,7.162,2951,4.836,2952,3.252,2953,2.865,2954,3.252,2955,4.26,2956,4.836,2957,3.252,2958,4.836,2959,4.836,2960,4.836,2961,4.836,2962,3.252,2963,3.88,2964,4.836,2965,3.252,2966,4.836,2967,4.26,2968,3.252,2969,3.252,2970,3.252,2971,2.609,2972,2.266,2973,3.252,2974,3.252,2975,3.252,2976,4.836,2977,4.836,2978,3.252,2979,5.774,2980,3.252,2981,3.252,2982,3.252,2983,3.252,2984,2.865,2985,3.252,2986,3.252,2987,3.252,2988,4.836,2989,3.252,2990,3.252,2991,3.252,2992,3.252,2993,3.252,2994,2.609,2995,2.609,2996,3.252,2997,3.252,2998,3.252]],["title/modules/ReviewButtonModule.html",[525,0.594,2999,3.015]],["body/modules/ReviewButtonModule.html",[3,0.077,4,0.077,5,0.077,36,0.01,65,0.008,70,0.008,80,0.227,89,0.244,105,0.077,109,0.166,407,1.628,458,0.926,497,2.56,498,2.148,525,0.876,527,1.756,528,1.945,529,2.48,530,1.895,531,1.847,532,2.48,543,2.32,544,1.801,546,2.381,550,2.261,577,5.117,740,2.65,741,2.162,747,3.993,748,3.347,1526,5.617,1907,5.006,1908,4.196,2934,4.444,2935,5.117,2972,4.444,2999,6.239,3000,5.617,3001,5.617,3002,5.617,3003,5.617,3004,6.085,3005,6.377]],["title/components/ReviewModalComponent.html",[179,0.426,500,1.191]],["body/components/ReviewModalComponent.html",[3,0.075,4,0.045,5,0.064,10,0.631,11,1.258,17,0.306,18,1.838,27,0.837,30,1.825,32,1.259,33,0.954,35,0.833,36,0.01,37,0.945,38,0.638,39,0.598,41,1.756,47,1.539,50,0.699,51,0.73,59,0.426,65,0.006,66,2.739,70,0.006,80,0.162,89,0.142,105,0.045,106,0.23,109,0.195,118,1.158,132,1.324,138,1.946,139,0.793,141,0.854,179,0.803,180,0.993,181,1.323,182,1.018,183,1.158,184,1.128,185,1.128,191,2.159,192,1.356,193,1.356,194,2.239,195,1.108,196,0.898,197,1.391,199,1.391,201,0.65,237,0.854,250,1.044,251,1.356,258,1.175,267,0.906,268,1.056,283,1.538,284,2.114,293,0.944,313,1.683,332,2.397,369,1.401,381,1.254,382,1.824,383,2.573,387,1.22,390,2.65,391,1.587,392,3.527,393,1.941,396,1.587,397,1.896,399,2.289,401,2.926,404,1.531,407,0.944,411,2.979,413,1.258,414,4.93,415,1.629,417,2.788,418,1.579,420,1.531,421,1.579,422,1.741,425,1.579,428,2.654,430,2.577,431,2.577,433,2.788,434,1.267,437,1.467,441,0.968,444,2.589,458,0.537,459,1.748,460,1.128,461,2.073,462,1.128,463,1.128,464,1.044,465,1.128,466,1.018,467,1.896,468,1.044,469,1.128,470,1.426,471,1.896,472,1.044,473,1.099,474,1.128,475,1.044,476,1.128,477,1.044,478,0.993,479,1.128,480,1.044,481,1.128,482,1.044,483,1.018,484,1.128,485,1.044,486,1.099,487,1.071,488,1.128,489,1.044,490,1.62,491,1.018,492,1.044,493,1.044,494,1.128,495,1.044,496,1.896,497,1.044,498,2.479,499,1.62,500,1.871,501,1.044,502,1.018,503,0.833,504,1.128,505,1.018,506,0.968,507,1.044,508,1.128,509,1.044,510,1.128,511,1.044,512,1.128,513,1.044,514,1.356,515,1.044,516,1.5,517,1.044,518,1.128,519,1.044,520,1.356,521,1.128,522,1.044,523,1.128,524,1.128,555,1.629,601,2.34,643,2.107,656,3.263,661,1.044,673,1.5,674,1.946,700,1.753,713,2.106,714,2.685,719,3.163,721,2.507,1057,1.587,1158,3.263,1217,4.091,1218,4.333,1219,3.883,1232,3.883,1261,2.751,1516,4.702,1517,4.624,1625,3.951,1694,4.624,1800,2.751,1803,3.318,1900,4.263,2030,2.202,2395,4.93,2414,2.31,2532,5.222,2533,5.016,2545,5.353,2577,2.019,2679,2.751,2681,3.951,2691,4.624,2934,5.606,2963,2.967,2971,2.967,2972,5.606,2984,4.68,2994,2.967,2995,2.967,3006,4.68,3007,4.989,3008,3.699,3009,5.775,3010,5.313,3011,5.477,3012,4.989,3013,5.477,3014,5.313,3015,3.699,3016,4.263,3017,3.699,3018,3.699,3019,3.699,3020,2.967,3021,3.258,3022,3.258,3023,3.258,3024,3.258,3025,3.258,3026,3.258,3027,2.967,3028,3.258,3029,4.68,3030,5.313,3031,3.699,3032,3.699,3033,3.699,3034,5.313,3035,3.258,3036,3.699]],["title/interfaces/ReviewModalData.html",[106,0.269,3009,3.471]],["body/interfaces/ReviewModalData.html",[3,0.085,4,0.067,5,0.067,10,0.661,17,0.46,18,1.42,27,0.876,32,1.224,33,0.999,36,0.01,37,0.681,38,0.578,41,1.571,51,0.764,65,0.008,70,0.008,80,0.199,89,0.213,105,0.067,106,0.346,109,0.182,118,1.305,138,1.741,139,1.044,141,0.764,178,1.456,179,0.814,191,2.366,192,1.42,193,1.42,194,1.385,195,0.857,197,1.456,199,1.456,201,0.857,250,1.976,258,1.518,283,1.48,284,2.135,293,1.42,332,2.386,407,1.42,414,3.659,459,1.351,498,2.489,500,1.531,643,2.595,656,4.017,661,1.571,673,1.571,674,1.741,1057,1.954,1158,4.017,1217,5.036,1232,4.781,1261,4.137,1516,4.557,1517,5.693,1694,4.137,1800,4.137,1803,3.474,2030,3.311,2395,5.446,2414,4.37,2532,4.876,2533,4.876,2545,5.204,2577,3.037,2679,4.137,2681,4.137,2691,5.693,2934,3.876,2963,5.614,2971,4.463,2972,3.876,2994,4.463,2995,4.463,3006,4.9,3007,4.463,3009,6.142,3011,4.9,3012,4.463,3013,4.9,3016,4.463,3020,4.463,3021,6.163,3022,4.9,3023,4.9,3024,4.9,3025,4.9,3026,4.9,3027,4.463,3028,4.9]],["title/modules/ReviewModalModule.html",[525,0.594,3004,3.015]],["body/modules/ReviewModalModule.html",[3,0.078,4,0.078,5,0.078,36,0.01,65,0.008,70,0.008,80,0.228,89,0.247,105,0.078,109,0.168,407,1.649,458,0.938,498,1.824,500,2.5,525,0.887,527,1.779,528,1.97,529,2.493,530,1.92,531,1.871,532,2.493,543,2.338,544,1.824,546,2.022,550,2.279,556,3.173,557,2.519,740,2.67,741,2.19,1907,5.044,1908,4.25,2577,3.527,2710,5.184,2711,6.152,2713,4.502,2934,4.502,2972,4.502,3004,6.166,3037,5.691,3038,5.691,3039,5.691]],["title/components/RightSidebarComponent.html",[179,0.426,501,1.221]],["body/components/RightSidebarComponent.html",[1,3.993,3,0.063,4,0.043,5,0.063,7,3.27,8,2.366,10,0.619,11,1.686,14,2.213,17,0.43,25,4.238,27,0.82,30,1.645,32,0.911,33,0.935,35,0.81,36,0.01,37,0.937,38,0.588,39,0.582,40,1.174,44,2.585,45,2.288,47,1.042,59,0.415,65,0.006,66,1.584,67,3.099,70,0.007,80,0.185,89,0.138,99,2.541,101,2.336,105,0.043,109,0.193,116,3.484,117,0.613,118,0.613,134,4.026,139,1.001,141,1.077,168,1.097,179,0.7,180,0.965,181,1.296,182,0.99,183,1.126,184,1.097,185,1.097,191,1.643,192,1.329,193,1.329,194,2.234,195,1.105,196,0.873,197,1.363,199,1.363,201,0.637,203,2.537,206,4.551,218,2.674,237,1.645,238,1.508,250,1.47,251,1.329,258,0.679,267,1.043,268,1.216,269,1.547,282,2.537,283,1.544,284,1.524,285,2.843,293,0.918,304,2.047,305,1.887,306,1.765,313,2.785,356,1.219,361,1.362,369,2.696,381,1.219,382,1.992,383,3.168,384,1.887,385,1.887,386,2.987,387,1.718,388,3.484,390,2.776,391,1.712,392,3.603,395,2.982,396,1.562,397,2.334,399,1.917,401,3.351,411,2.946,412,2.982,413,1.857,415,2.293,416,2.506,417,2.732,418,2.612,426,2.732,428,2.222,429,1.917,432,2.369,433,2.732,434,1.56,435,1.692,437,1.771,441,0.941,442,4.026,443,2.246,444,3.269,448,2.631,452,2.369,453,2.369,455,2.246,456,2.506,458,0.756,459,1.729,460,1.097,461,2.046,462,1.097,463,1.097,464,1.015,465,1.097,466,0.99,467,1.866,468,1.015,469,1.097,470,1.397,471,1.866,472,1.015,473,1.069,474,1.097,475,1.015,476,1.097,477,1.015,478,0.965,479,1.097,480,1.015,481,1.097,482,1.015,483,0.99,484,1.097,485,1.015,486,1.069,487,1.042,488,1.097,489,1.015,490,1.588,491,0.99,492,1.015,493,1.015,494,1.097,495,1.015,496,1.866,497,1.015,498,1.728,499,1.588,500,0.99,501,1.894,502,0.99,503,0.81,504,1.097,505,0.99,506,0.941,507,1.015,508,1.097,509,1.015,510,1.097,511,1.015,512,1.097,513,1.015,514,1.329,515,1.015,516,1.47,517,1.015,518,1.097,519,1.015,520,1.329,521,1.097,522,1.015,523,1.097,524,1.097,579,5.955,594,2.03,625,2.537,657,3.099,660,2.386,661,1.015,662,2.03,667,2.674,673,1.47,674,1.915,699,2.369,700,1.718,710,2.506,714,2.631,715,2.366,721,2.782,726,2.366,729,2.141,733,2.366,734,2.366,781,3.053,1057,1.329,1075,2.246,1132,3.872,1201,2.674,1220,6.509,1232,2.246,1235,2.506,1464,2.506,1514,4.675,1571,2.674,1610,2.674,1625,2.674,1881,2.674,1954,3.167,1955,5.391,1956,4.586,1960,5.391,1980,3.819,1983,4.586,1985,4.177,1986,2.885,1987,3.167,1990,5.909,1992,3.425,1993,2.885,1997,3.167,2104,2.047,2570,3.628,2771,2.674,3040,6.538,3041,6.709,3042,5.206,3043,3.596,3044,5.206,3045,3.596,3046,5.206,3047,3.596,3048,3.596,3049,3.596,3050,3.596,3051,3.596,3052,3.596,3053,3.596,3054,3.596,3055,6.12,3056,3.596,3057,3.596,3058,3.596,3059,3.596,3060,3.596]],["title/modules/RightSidebarModule.html",[525,0.594,542,3.015]],["body/modules/RightSidebarModule.html",[3,0.068,4,0.068,5,0.068,36,0.01,65,0.008,70,0.008,80,0.235,89,0.214,105,0.068,109,0.145,195,0.684,298,1.501,391,1.792,407,1.427,437,1.14,458,0.812,501,2.518,525,0.768,527,1.539,528,1.705,529,2.34,530,1.662,531,1.619,532,2.34,542,6.363,543,2.141,544,1.579,546,2.197,550,2.086,556,2.905,557,2.18,560,3.896,562,5.632,563,4.486,579,4.486,653,3.896,735,5.896,740,2.445,741,1.895,747,3.684,748,2.934,2007,4.925,2008,5.632,2009,4.486,2010,6.183,2011,4.925,2017,5.632,2023,4.925,2617,5.566,2619,4.925,2620,4.158,2621,4.925,2935,4.486,2999,5.896,3040,4.925,3061,4.925,3062,4.925,3063,4.925,3064,4.925,3065,5.896,3066,5.896,3067,5.896,3068,5.896,3069,7.02,3070,5.591,3071,5.591,3072,3.896,3073,5.591,3074,5.591,3075,3.896,3076,7.02,3077,4.486,3078,5.591,3079,4.158,3080,5.591,3081,5.591,3082,5.591]],["title/interfaces/Rotation.html",[106,0.269,503,0.975]],["body/interfaces/Rotation.html",[3,0.065,4,0.065,5,0.065,10,0.641,17,0.445,32,0.943,33,0.968,36,0.01,37,0.66,38,0.677,40,0.943,51,0.741,59,0.791,61,2.184,65,0.007,70,0.007,80,0.178,89,0.206,105,0.083,106,0.335,109,0.178,115,1.052,117,1.354,118,1.169,139,1.126,140,2.165,141,1.036,178,1.411,179,0.825,192,1.376,193,1.376,194,1.342,195,0.84,197,1.411,199,1.411,201,0.84,250,2.242,267,0.919,268,1.73,293,1.376,356,2.887,361,3.226,364,3.525,413,1.787,450,1.985,459,1.309,502,1.484,503,2.023,643,1.827,660,2.675,661,1.522,662,2.942,663,2.675,664,2.102,665,2.102,666,2.675,673,1.522,674,1.688,675,3.123,679,2.675,826,5.534,961,5.715,1107,4.084,1155,3.21,1492,3.07,1548,2.538,1556,4.01,1767,3.367,1771,3.547,1869,3.757,1913,5.182,1988,5.611,3072,3.757,3083,4.01,3084,4.326,3085,6.043,3086,5.504,3087,4.749,3088,4.326,3089,4.749,3090,4.749,3091,4.749,3092,4.749,3093,4.749,3094,4.749,3095,4.01,3096,4.749,3097,4.749,3098,4.326,3099,6.646,3100,4.749,3101,4.749,3102,4.749]],["title/components/RotationSliderComponent.html",[179,0.426,502,1.191]],["body/components/RotationSliderComponent.html",[3,0.043,4,0.043,5,0.063,10,0.726,11,1.231,17,0.296,18,1.327,27,0.565,30,1.767,32,0.909,33,0.933,35,1.377,36,0.01,37,0.978,38,0.647,39,0.989,40,0.909,47,1.039,50,0.982,51,0.84,59,0.882,61,1.847,65,0.006,66,2.29,70,0.006,80,0.135,89,0.137,105,0.063,106,0.223,109,0.193,115,0.797,117,1.304,118,1.213,139,0.912,140,1.441,141,0.977,168,1.585,179,0.808,180,0.963,181,1.294,182,0.988,183,1.123,184,1.094,185,1.094,191,0.963,192,1.327,193,1.327,194,2.234,195,1.104,196,0.871,197,1.361,199,1.361,201,0.636,203,1.749,237,1.412,249,1.749,250,2.16,251,1.327,263,2.96,267,1.142,268,1.65,283,1.126,284,0.893,293,0.916,313,2.366,356,2.593,361,2.898,364,3.166,369,1.969,370,1.749,371,2.043,381,1.216,382,1.641,383,2.944,386,2.467,387,2.017,390,1.399,391,0.916,392,1.689,395,1.749,396,1.56,397,1.864,399,2.25,404,2.151,411,2.944,412,2.979,413,1.812,415,1.581,417,3.208,418,2.609,420,1.485,421,1.532,422,1.689,428,2.609,429,1.914,432,1.633,434,1.06,435,1.689,437,1.06,438,2.501,441,0.939,444,1.749,450,2.25,452,2.366,453,2.366,455,2.241,458,0.521,459,1.727,460,1.094,461,2.044,462,1.094,463,1.094,464,1.013,465,1.094,466,0.988,467,1.864,468,1.013,469,1.094,470,1.395,471,1.864,472,1.013,473,1.066,474,1.094,475,1.013,476,1.094,477,1.013,478,0.963,479,1.094,480,1.013,481,1.094,482,1.013,483,0.988,484,1.094,485,1.013,486,1.066,487,1.039,488,1.094,489,1.013,490,1.585,491,0.988,492,1.013,493,1.013,494,1.094,495,1.013,496,1.864,497,1.013,498,1.468,499,1.585,500,0.988,501,1.013,502,1.845,503,2.025,504,1.094,505,0.988,506,0.939,507,1.013,508,1.094,509,1.013,510,1.094,511,1.013,512,1.094,513,1.013,514,1.327,515,1.013,516,1.468,517,1.013,518,1.094,519,1.013,520,1.327,521,1.094,522,1.013,523,1.094,524,1.094,544,1.468,555,2.29,594,2.027,643,1.762,657,3.095,660,2.383,661,1.013,662,2.613,663,2.613,664,1.399,665,1.399,666,2.383,673,1.468,674,1.913,675,2.151,679,2.383,683,2.501,699,2.366,700,1.715,701,1.883,708,4.26,713,2.043,714,1.813,715,2.361,716,2.241,717,2.501,718,2.361,719,3.095,733,2.361,734,2.361,826,5.46,961,5.46,1075,2.241,1107,3.99,1155,3.095,1219,2.241,1227,2.879,1492,2.96,1548,2.447,1556,3.866,1610,2.669,1767,3.247,1771,3.42,1869,3.623,1913,5.064,1988,4.546,3072,5.46,3083,5.827,3084,2.879,3085,3.161,3086,4.905,3087,4.579,3088,4.171,3089,4.579,3090,4.579,3091,4.579,3092,4.579,3093,4.579,3094,5.384,3095,3.866,3096,4.579,3097,5.384,3098,4.171,3099,5.903,3100,4.579,3101,4.579,3102,3.161,3103,5.199,3104,5.199,3105,5.199,3106,3.589,3107,5.199,3108,3.589,3109,3.589,3110,3.589,3111,3.161,3112,3.589,3113,3.589,3114,3.589,3115,3.589]],["title/modules/RotationSliderModule.html",[525,0.594,3065,3.015]],["body/modules/RotationSliderModule.html",[3,0.076,4,0.076,5,0.076,36,0.01,65,0.008,70,0.008,80,0.232,89,0.241,105,0.076,109,0.164,407,1.609,458,0.915,502,2.493,503,1.42,525,0.866,527,1.735,528,1.922,529,2.468,530,1.873,531,1.826,532,2.468,543,2.304,544,1.78,546,1.973,550,2.245,554,4.147,555,2.777,556,3.127,557,2.458,740,2.632,741,2.137,742,5.265,743,4.393,744,5.265,745,4.971,746,4.147,747,3.965,748,3.308,3065,6.136,3072,4.393,3083,4.688,3116,5.552,3117,5.552,3118,5.552,3119,6.304,3120,6.304,3121,7.556,3122,6.304]],["title/injectables/SceneState.html",[0,1.253,103,2.463]],["body/injectables/SceneState.html",[0,1.199,2,1.51,3,0.032,4,0.032,5,0.032,10,0.492,14,2.195,15,1.524,17,0.219,18,1.057,21,2.736,24,2.091,27,0.802,28,2.127,29,3.342,30,1.82,32,0.724,33,0.743,34,4.35,35,0.597,36,0.01,37,0.507,38,0.571,39,0.429,40,1.006,41,1.169,42,2.78,43,2.672,44,1.773,45,2.125,50,0.782,51,0.569,55,1.713,59,0.824,61,1.646,65,0.004,70,0.004,77,3.127,80,0.216,83,1.568,85,3.788,86,1.713,87,1.097,88,1.097,89,0.102,90,1.065,92,2.708,93,0.749,94,1.614,95,0.875,99,1.568,100,1.391,103,2.356,105,0.05,106,0.317,108,1.065,109,0.069,110,1.612,114,4.701,115,1.295,117,1.28,125,2.672,131,2.234,135,1.913,138,1.801,139,0.396,141,0.908,142,1.097,143,1.097,144,1.168,145,1.656,146,1.448,147,1.656,148,1.656,149,1.656,150,1.656,151,1.656,168,2.29,188,1.034,195,0.623,201,0.507,226,1.898,227,2.06,238,1.199,258,0.501,267,0.706,268,0.527,269,1.513,283,0.488,298,0.712,325,3.019,352,1.391,354,2.672,358,3.141,369,1.004,376,1.646,387,2.358,393,3.75,399,0.976,410,1.524,413,1.566,419,3.456,429,1.524,434,0.54,437,0.54,450,0.976,503,1.724,610,3.179,625,1.292,626,1.391,629,1.248,630,1.292,632,1.097,643,1.403,651,2.26,669,1.391,750,3.078,751,1.848,752,2.396,753,4.616,754,1.972,755,1.656,756,1.744,757,1.744,758,3.786,759,2.127,760,2.127,761,2.127,762,5.299,763,3.019,764,2.884,765,2.127,766,3.321,767,1.744,768,1.848,769,1.578,770,3.321,771,2.585,772,2.127,773,1.391,774,1.292,775,3.321,776,2.723,777,1.34,778,1.848,779,1.578,780,1.168,781,1.884,782,1.656,783,2.672,784,1.744,785,1.448,786,1.884,787,1.248,788,1.448,789,1.097,790,1.097,791,1.097,792,1.004,793,1.207,794,2.127,795,1.248,796,1.972,797,3.321,798,1.972,799,3.078,800,1.972,801,1.972,802,1.972,803,1.972,804,2.127,805,3.321,806,2.127,807,3.321,808,2.127,809,2.127,810,2.127,811,2.127,812,2.127,813,2.127,814,2.127,815,3.153,816,1.578,817,5.332,818,3.321,819,2.127,820,2.127,821,2.127,822,2.127,823,2.481,824,2.127,825,3.321,826,2.884,827,2.907,828,2.127,829,4.085,830,2.127,831,2.127,832,2.127,833,2.127,834,5.136,835,5.006,836,3.349,837,2.127,838,2.127,839,2.884,840,4.085,841,3.321,842,2.127,843,2.127,844,3.321,845,2.723,846,4.35,847,3.321,848,3.321,849,2.127,850,3.321,851,2.127,852,2.356,853,4.085,854,3.321,855,2.127,856,2.899,857,2.127,858,3.078,859,5.733,860,2.884,861,4.085,862,2.127,863,2.913,864,6.888,865,2.723,866,3.321,867,3.321,868,2.723,869,1.972,870,2.127,871,3.321,872,3.321,873,2.884,874,4.085,875,2.127,876,2.127,877,2.127,878,2.127,879,2.303,880,1.51,881,1.51,882,2.127,883,2.127,884,2.127,885,2.127,886,2.127,887,4.085,888,2.127,889,2.127,890,3.321,891,2.723,892,3.548,893,2.127,894,4.085,895,2.127,896,2.127,897,2.127,898,2.127,899,3.321,900,2.127,901,2.127,902,1.848,903,2.127,904,1.848,905,3.321,906,1.848,907,2.127,908,1.848,909,1.972,910,2.127,911,1.848,912,2.723,913,2.127,914,1.848,915,1.656,916,2.127,917,1.848,918,2.127,919,1.848,920,3.321,921,1.848,922,2.127,923,1.848,924,1.848,925,1.848,926,5.305,927,2.127,928,2.127,929,2.127,930,2.127,931,2.127,932,2.127,933,2.127,934,2.127,935,1.972,936,1.972,937,2.585,938,2.585,939,1.744,940,2.585,941,2.585,942,2.585,943,3.078,944,4.129,945,2.127,946,2.127,947,2.127,948,3.321,949,2.127,950,2.127,951,2.127,952,2.127,953,3.321,954,2.127,955,4.616,956,2.127,957,2.127,958,1.132,959,2.723,960,1.51,961,1.848,962,4.64,963,3.321,964,3.321,965,2.723,966,3.321,967,3.321,968,3.321,969,3.321,970,3.321,971,3.321,972,1.656,973,2.127,974,2.127,975,2.127,976,4.085,977,2.127,978,2.127,979,1.744,980,1.578,981,2.127,982,2.723,983,1.848,984,2.127,985,2.127,986,2.127,987,1.744,988,2.127,989,2.127,990,2.127,991,2.127,992,2.127,993,2.127,994,1.848,995,2.127,996,1.848,997,2.127,998,2.127,999,2.127,1000,2.127,1001,2.127,1002,2.127,1003,2.127,1004,1.972,1005,2.127,1006,2.127,1007,2.127,1008,3.321,1009,2.127,1010,2.899,1011,1.744,1012,2.127,1013,2.127,1014,2.127,1015,2.127,1016,2.127,1017,1.744,1018,2.127,1019,1.744,1020,2.127,1021,2.127,1022,1.744,1023,1.744,1024,2.127,1025,2.127,1026,2.127,1027,2.127,1028,2.127,1029,2.127,1030,1.51,1031,2.127,3123,2.652,3124,2.652,3125,2.652,3126,2.652,3127,2.652,3128,2.652,3129,2.652,3130,2.652,3131,2.652,3132,2.652,3133,2.652,3134,2.652,3135,2.652,3136,2.652,3137,2.652,3138,2.652,3139,4.139,3140,2.652,3141,2.652,3142,2.652,3143,2.652]],["title/interfaces/SceneStateModel.html",[106,0.269,796,3.217]],["body/interfaces/SceneStateModel.html",[0,1.268,3,0.034,4,0.034,5,0.034,10,0.339,14,2.119,15,1.05,17,0.236,21,2.206,27,0.69,29,2.936,32,0.499,33,0.512,34,4.245,36,0.01,37,0.349,38,0.533,40,0.766,41,0.805,42,2.391,43,2.298,44,1.525,45,2.188,51,0.392,55,1.18,59,0.844,61,1.696,65,0.005,70,0.005,77,3.095,80,0.219,83,1.659,85,3.854,86,1.812,87,1.18,88,1.18,89,0.109,90,1.145,92,2.815,93,0.805,94,1.707,95,0.941,99,1.659,100,1.496,103,1.623,105,0.053,106,0.331,108,1.145,109,0.074,110,1.623,114,4.815,115,1.308,117,1.279,125,2.797,131,2.141,135,1.945,138,1.668,139,0.426,141,0.821,142,1.18,143,1.18,144,1.256,145,1.781,146,1.557,147,1.781,148,1.781,149,1.781,150,1.781,151,1.781,168,2.289,178,0.746,188,1.112,195,0.653,201,0.536,226,1.445,227,1.568,238,1.268,258,1.007,267,0.486,269,1.301,283,0.525,298,0.765,325,2.797,352,1.496,354,2.797,358,3.265,369,1.08,376,1.606,387,2.415,393,3.722,399,1.05,410,1.612,413,1.613,419,3.445,429,1.612,434,0.581,437,0.581,450,1.05,503,1.691,610,3.329,625,1.39,626,1.496,629,1.342,630,1.39,632,1.18,643,0.967,651,2.391,669,1.496,750,3.256,751,1.987,752,2.061,753,3.513,754,2.121,755,1.781,756,1.876,757,1.876,758,3.964,759,2.288,760,2.288,761,2.288,762,5.329,763,3.138,764,3.051,765,2.288,766,3.513,767,1.876,768,1.987,769,1.698,770,3.513,771,2.735,772,2.288,773,1.496,774,1.39,775,3.513,776,2.881,777,1.441,778,1.987,779,1.698,780,1.256,781,1.993,782,1.781,783,2.797,784,1.876,785,1.557,786,1.993,787,1.342,788,1.557,789,1.18,790,1.18,791,1.18,792,1.08,793,1.298,794,2.288,795,1.342,796,3.256,797,5.177,798,2.121,799,3.256,800,2.121,801,2.121,802,2.121,803,2.121,804,2.288,805,3.513,806,2.288,807,3.513,808,2.288,809,2.288,810,2.288,811,2.288,812,2.288,813,2.288,814,2.288,815,2.693,816,1.698,817,5.1,818,3.513,819,2.288,820,2.288,821,2.288,822,2.288,823,2.598,824,2.288,825,3.513,826,3.051,827,3.022,828,2.288,829,2.288,830,2.288,831,2.288,832,2.288,833,2.288,834,5.274,835,4.798,836,3.507,837,2.288,838,2.288,839,1.987,840,2.288,841,3.513,842,2.288,843,2.288,844,3.513,845,2.881,846,4.481,847,3.513,848,3.513,849,2.288,850,3.513,851,2.288,852,2.493,853,2.288,854,3.513,855,2.288,856,3.035,857,2.288,858,3.256,859,5.872,860,3.051,861,4.277,862,2.288,863,2.842,864,6.847,865,2.881,866,3.513,867,3.513,868,2.881,869,2.121,870,2.288,871,3.513,872,3.513,873,3.051,874,2.288,875,2.288,876,2.288,877,2.288,878,2.288,879,2.372,880,1.623,881,1.623,882,2.288,883,2.288,884,2.288,885,2.288,886,2.288,887,2.288,888,2.288,889,2.288,890,3.513,891,2.881,892,3.715,893,2.288,894,2.288,895,2.288,896,2.288,897,2.288,898,2.288,899,3.513,900,2.288,901,2.288,902,1.987,903,2.288,904,1.987,905,3.513,906,1.987,907,2.288,908,1.987,909,2.121,910,2.288,911,1.987,912,2.881,913,2.288,914,1.987,915,1.781,916,2.288,917,1.987,918,2.288,919,1.987,920,3.513,921,1.987,922,2.288,923,1.987,924,1.987,925,1.987,926,3.513,927,2.288,928,2.288,929,2.288,930,2.288,931,2.288,932,2.288,933,2.288,934,2.288,935,2.121,936,2.121,937,2.735,938,2.735,939,1.876,940,2.735,941,2.735,942,2.735,943,3.256,944,4.253,945,2.288,946,2.288,947,2.288,948,3.513,949,2.288,950,2.288,951,2.288,952,2.288,953,3.513,954,2.288,955,4.277,956,2.288,957,2.288,958,1.217,959,2.881,960,1.623,961,1.987,962,3.256,963,2.288,964,2.288,965,1.876,966,2.288,967,2.288,968,2.288,969,2.288,970,2.288,971,2.288,972,1.781,973,2.288,974,2.288,975,2.288,976,2.288,977,2.288,978,2.288,979,1.876,980,1.698,981,2.288,982,2.881,983,1.987,984,2.288,985,2.288,986,2.288,987,1.876,988,2.288,989,2.288,990,2.288,991,2.288,992,2.288,993,2.288,994,1.987,995,2.288,996,1.987,997,2.288,998,2.288,999,2.288,1000,2.288,1001,2.288,1002,2.288,1003,2.288,1004,2.121,1005,2.288,1006,2.288,1007,2.288,1008,2.288,1009,2.288,1010,3.035,1011,1.876,1012,2.288,1013,2.288,1014,2.288,1015,2.288,1016,2.288,1017,1.876,1018,2.288,1019,1.876,1020,2.288,1021,2.288,1022,1.876,1023,1.876,1024,2.288,1025,2.288,1026,2.288,1027,2.288,1028,2.288,1029,2.288,1030,1.623,1031,2.288]],["title/interfaces/SlicesConfig.html",[106,0.269,2097,2.575]],["body/interfaces/SlicesConfig.html",[0,1.087,3,0.028,4,0.028,5,0.028,7,1.032,10,0.278,14,1.932,15,0.862,17,0.193,21,0.969,27,0.369,29,2.673,32,0.41,33,0.42,36,0.01,37,0.905,38,0.611,40,0.656,41,0.661,42,1.279,43,1.229,44,0.816,45,2.267,48,3.965,51,1.109,55,0.969,59,0.835,61,1.703,65,0.004,70,0.004,77,3.081,80,0.204,83,1.421,85,2.288,86,1.553,87,0.969,88,0.969,89,0.09,90,0.94,93,0.661,94,1.463,95,0.773,99,0.887,101,1.307,102,1.394,105,0.08,106,0.292,108,0.94,109,0.061,110,1.26,115,1.247,117,1.234,118,0.64,125,2.817,131,2.591,132,1.681,135,1.661,138,1.962,139,1.183,141,1.117,142,0.969,143,0.969,144,1.032,154,1.463,155,1.463,158,1.632,163,0.839,165,1.632,178,0.613,195,0.459,201,0.459,226,1.238,227,1.343,237,1.521,238,2.142,240,2.469,258,0.887,261,1.333,267,0.399,269,1.595,283,0.691,298,0.629,325,1.969,332,1.516,356,2.454,361,2.742,364,2.996,373,1.541,376,1.639,382,0.629,387,1.549,391,1.37,410,2.972,413,1.783,419,2.209,429,1.381,434,1.094,437,1.094,441,0.613,478,1.767,503,1.666,506,1.405,520,0.598,601,1.653,642,1.896,643,0.794,651,3.207,658,1.279,663,1.463,664,0.913,665,0.913,666,0.913,669,2.463,675,1.943,679,0.913,680,3.264,682,1.141,752,1.766,763,1.229,769,1.394,773,1.229,774,1.141,777,1.184,779,1.394,780,1.032,783,3.455,784,1.541,785,1.279,786,1.708,787,1.102,788,1.279,789,1.553,790,1.553,791,0.969,792,0.887,793,1.708,795,1.766,815,1.896,823,1.141,827,1.184,845,4.124,846,4.124,852,3.569,856,1.333,863,2.761,865,1.541,879,2.183,880,1.333,881,1.333,891,4.124,937,4.407,938,3.668,940,1.463,941,1.463,942,1.463,958,3.384,959,3.088,960,1.333,972,1.463,979,1.541,980,1.394,982,1.541,987,1.541,1010,1.333,1017,3.088,1030,2.136,1041,1.279,1057,0.958,1094,2.136,1099,2.996,1162,4.642,1195,3.088,1207,4.917,1208,2.469,1385,1.463,1479,2.563,1488,1.394,1492,1.333,1527,3.056,1530,3.992,1586,2.469,1589,3.088,1590,3.271,1591,4.037,1592,3.422,1593,3.207,1597,2.853,1980,3.569,1981,4.368,1982,1.742,2026,1.766,2027,2.563,2064,1.463,2093,1.541,2094,1.632,2095,1.879,2096,4.124,2097,4.201,2098,4.121,2099,1.632,2100,3.918,2101,3.011,2102,2.932,2103,3.011,2104,3.895,2105,4.368,2106,2.343,2107,2.615,2108,1.394,2109,1.394,2110,3.011,2111,1.879,2112,6.422,2113,1.879,2114,1.333,2115,1.879,2116,1.879,2117,1.879,2118,1.742,2119,3.919,2120,3.011,2121,3.497,2122,1.742,2123,1.463,2124,1.879,2125,1.879,2126,1.879,2127,2.234,2128,6.422,2129,6.362,2130,1.879,2131,1.879,2132,1.879,2133,1.879,2134,1.879,2135,1.879,2136,1.879,2137,1.879,2138,1.879,2139,1.879,2140,1.879,2141,1.879,2142,1.879,2143,1.879,2144,1.879,2145,1.879,2146,1.879,2147,1.879,2148,1.879,2149,1.879,2150,1.879,2151,1.879,2152,1.879,2153,1.879,2154,1.879,2155,1.879,2156,1.879,2157,1.879,2158,5.282,2159,3.011,2160,1.879,2161,4.307,2162,1.879,2163,3.011,2164,1.879,2165,4.934,2166,1.879,2167,1.879,2168,1.879,2169,1.879,2170,1.879,2171,1.879,2172,1.879,2173,1.879,2174,1.879,2175,1.879,2176,1.879,2177,1.879,2178,1.879,2179,1.879,2180,1.879,2181,1.879,2182,1.879,2183,1.742,2184,3.766,2185,4.307,2186,1.879,2187,1.879,2188,1.879,2189,1.879,2190,1.879,2191,1.879,2192,1.879,2193,1.879,2194,1.879,2195,1.879,2196,1.879,2197,1.879,2198,3.011,2199,1.879,2200,1.879,2201,1.879,2202,1.879,2203,1.879,2204,1.879,2205,1.879,2206,1.879,2207,3.491,2208,1.879,2209,1.879,2210,1.879,2211,1.879,2212,1.879,2213,1.879,2214,1.879,2215,3.011,2216,1.879,2217,3.011,2218,3.011,2219,3.011,2220,1.879,2221,1.879,2222,1.879,2223,1.879,2224,1.879,2225,1.879,2226,1.879,2227,1.879,2228,1.879,2229,1.879,2230,1.879,2231,1.879,2232,1.879,2233,1.632,2234,1.879,2235,1.879,2236,1.879,2237,1.879,2238,2.136,2239,1.879,2240,1.879,2241,1.742,2242,1.879,2243,4.307,2244,1.463,2245,1.879,2246,1.879,2247,1.879,2248,1.879,2249,1.879,2250,1.879,2251,3.011,2252,3.011,2253,1.879,2254,1.879,2255,1.879,2256,1.879]],["title/interfaces/SlicesConfig-1.html",[106,0.224,168,1.098,2097,2.143]],["body/interfaces/SlicesConfig-1.html",[3,0.064,4,0.064,5,0.064,10,0.625,17,0.435,32,0.92,33,0.944,36,0.01,37,0.827,38,0.558,40,0.92,50,0.994,51,0.928,59,0.607,61,2.136,65,0.007,70,0.007,80,0.176,89,0.201,105,0.082,106,0.464,109,0.176,110,0.969,115,1.036,117,1.151,139,1.113,140,2.113,141,1.025,163,1.884,178,1.377,179,0.774,192,1.343,193,1.343,194,1.31,195,0.827,197,1.377,199,1.377,201,0.827,232,1.884,234,3.286,237,1.924,250,2.447,251,1.343,258,0.994,267,0.897,268,1.483,293,1.343,332,2.298,459,1.278,505,1.448,506,2.302,642,2.659,654,3.286,656,3.544,657,4.685,658,2.873,660,2.633,661,1.486,662,2.633,663,2.633,664,2.051,665,2.051,666,2.633,670,3.913,671,3.461,672,3.461,673,1.486,674,1.647,675,3.447,676,3.913,677,3.461,679,2.633,680,2.245,681,3.132,682,3.836,683,3.666,684,3.666,687,3.461,688,3.286,695,3.913,795,2.476,1037,2.761,1057,1.343,1512,4.218,2097,4.685,2105,5.484,2119,5.107,2121,4.845,2127,4.44,2376,2.476,2551,3.913,3075,3.666,3144,3.913,3145,5.985,3146,4.634,3147,4.634,3148,4.634,3149,4.634,3150,4.634,3151,4.634,3152,4.634,3153,6.57,3154,6.57,3155,4.634,3156,5.949,3157,4.634,3158,5.949,3159,4.634,3160,4.634]],["title/components/SlicesInputComponent.html",[179,0.426,505,1.191]],["body/components/SlicesInputComponent.html",[3,0.043,4,0.043,5,0.062,10,0.721,11,1.219,17,0.292,18,1.314,24,2.601,27,0.557,30,1.803,32,0.9,33,0.924,35,1.16,36,0.01,37,0.99,38,0.61,39,0.832,40,0.9,47,1.025,50,1.337,51,0.915,59,0.768,61,1.51,65,0.006,66,2.267,70,0.006,80,0.134,89,0.136,105,0.062,106,0.32,109,0.192,110,0.652,115,0.789,117,1.034,118,0.603,139,0.905,140,1.421,141,0.972,163,1.843,168,1.57,179,0.749,180,0.95,181,1.281,182,0.974,183,1.108,184,1.079,185,1.079,191,0.95,192,1.314,193,1.314,194,2.231,195,1.103,196,0.86,197,1.347,199,1.347,201,0.63,203,1.725,232,1.843,234,3.788,237,1.76,250,2.448,251,1.7,258,0.973,263,2.015,267,1.135,268,1.552,282,1.725,283,1.117,284,0.881,293,0.904,332,2.151,369,2.297,370,2.956,371,2.93,381,1.2,382,1.899,383,2.928,384,1.858,385,1.858,386,1.895,390,1.38,391,0.904,395,1.725,396,1.548,397,1.57,399,1.303,404,1.465,411,2.928,412,2.508,413,1.804,417,1.858,418,2.197,420,1.465,421,1.511,422,1.666,425,1.511,428,2.197,429,1.303,432,1.611,433,1.858,434,0.722,435,1.666,437,1.049,438,2.467,441,0.927,444,2.508,452,1.611,453,1.611,458,0.514,459,1.718,460,1.079,461,2.031,462,1.079,463,1.079,464,0.999,465,1.079,466,0.974,467,1.85,468,0.999,469,1.079,470,1.382,471,1.85,472,0.999,473,1.052,474,1.079,475,0.999,476,1.079,477,0.999,478,0.95,479,1.079,480,0.999,481,1.079,482,0.999,483,0.974,484,1.079,485,0.999,486,1.052,487,1.025,488,1.079,489,0.999,490,1.57,491,0.974,492,0.999,493,0.999,494,1.079,495,0.999,496,1.85,497,0.999,498,1.453,499,1.57,500,0.974,501,0.999,502,0.974,503,0.798,504,1.079,505,1.833,506,2.278,507,0.999,508,1.079,509,0.999,510,1.079,511,0.999,512,1.079,513,0.999,514,1.314,515,0.999,516,1.453,517,0.999,518,1.079,519,0.999,520,1.314,521,1.079,522,0.999,523,1.079,524,1.079,555,2.933,594,2.365,642,1.789,654,2.211,656,1.858,657,3.964,658,2.81,660,2.365,661,0.999,662,2.007,663,2.596,664,1.38,665,1.38,666,2.365,670,3.828,671,3.386,672,3.99,673,1.453,674,1.898,675,3.389,676,3.828,677,3.386,679,2.365,680,2.197,681,3.064,682,3.598,683,3.587,684,3.587,687,2.329,688,2.211,695,3.828,699,2.343,700,1.698,701,1.858,708,4.227,709,3.118,710,2.467,711,3.118,712,3.118,713,2.015,714,1.789,715,2.329,716,2.211,717,2.467,718,2.329,719,2.107,720,3.118,721,1.233,722,2.107,724,2.84,725,2.632,726,2.329,727,5.342,728,2.632,729,2.107,730,2.467,733,2.329,734,2.329,795,2.423,1037,1.858,1057,1.314,1512,2.211,2097,4.394,2105,4.93,2119,4.535,2121,3.064,2127,3.611,2277,3.118,2283,3.118,2376,2.423,2551,3.828,2604,2.84,3075,5.545,3144,5.918,3145,5.343,3146,5.342,3147,5.342,3148,3.118,3149,4.534,3150,4.534,3151,4.534,3152,4.534,3153,5.342,3154,5.342,3155,3.118,3156,4.534,3157,3.118,3158,4.534,3159,5.866,3160,3.118,3161,5.147,3162,3.54,3163,3.54,3164,5.147,3165,3.54,3166,3.54,3167,3.54,3168,6.659,3169,5.147,3170,3.54,3171,3.54,3172,3.54]],["title/modules/SlicesInputModule.html",[525,0.594,3066,3.015]],["body/modules/SlicesInputModule.html",[3,0.076,4,0.076,5,0.076,36,0.01,65,0.008,70,0.008,80,0.232,89,0.241,105,0.076,109,0.164,195,0.771,298,1.69,407,1.607,458,0.914,505,2.492,506,1.648,525,0.865,527,1.733,528,1.92,529,2.466,530,1.871,531,1.824,532,2.466,543,2.303,544,1.778,546,1.971,550,2.244,554,4.142,555,2.774,556,3.125,557,2.455,739,5.052,740,2.63,741,2.134,742,5.262,743,4.388,744,5.262,745,4.967,746,4.142,747,3.962,748,3.304,749,5.052,3066,6.135,3075,4.388,3144,4.682,3173,5.546,3174,5.546,3175,5.546,3176,7.551]],["title/components/StageNavComponent.html",[179,0.426,507,1.221]],["body/components/StageNavComponent.html",[3,0.034,4,0.034,5,0.052,10,0.801,11,1.016,17,0.354,18,1.095,24,2.168,27,0.437,30,1.909,32,0.751,33,0.77,35,1.518,36,0.01,37,0.962,38,0.672,39,1.09,40,0.751,47,1.708,50,1.114,51,0.965,59,0.32,65,0.005,70,0.005,80,0.112,89,0.106,105,0.052,109,0.175,110,0.79,115,0.426,117,1.005,118,0.731,132,2.598,135,1.042,139,0.88,140,1.115,141,0.926,163,1.536,176,2.99,179,0.783,180,0.745,181,1.068,182,0.765,183,0.869,184,0.847,185,0.847,191,0.745,192,1.095,193,1.095,194,2.184,195,1.082,196,0.674,197,1.123,199,1.123,201,0.525,210,3.779,214,3.443,225,3.63,231,1.935,232,2.723,237,0.642,238,0.804,242,2.985,244,3.449,246,4.433,249,2.091,250,2.219,251,1.793,253,3.191,258,1.437,266,2.99,267,1.149,268,1.442,269,2.003,283,0.966,284,0.691,293,0.709,294,1.827,296,4.194,306,2.161,356,0.941,369,2.415,370,2.091,376,1.894,381,0.941,382,2.042,383,3.295,384,2.252,385,2.252,386,1.93,389,3.795,390,1.673,391,1.338,392,1.307,395,1.354,396,1.338,401,2.468,404,1.776,411,1.149,412,2.555,413,1.51,415,1.223,418,2.238,420,1.149,421,1.185,425,1.185,426,1.457,428,2.517,429,2.171,431,1.935,432,1.953,433,2.252,434,1.374,435,1.307,437,1.432,441,2.163,443,1.734,444,2.091,448,1.403,452,2.684,453,2.684,458,0.403,459,1.548,460,0.847,461,1.799,462,0.847,463,0.847,464,0.784,465,0.847,466,0.765,467,1.599,468,0.784,469,0.847,470,1.152,471,1.599,472,0.784,473,0.825,474,0.847,475,0.784,476,0.847,477,0.784,478,0.745,479,0.847,480,0.784,481,0.847,482,0.784,483,0.765,484,0.847,485,0.784,486,0.825,487,1.243,488,0.847,489,0.784,490,1.308,491,0.765,492,0.784,493,0.784,494,0.847,495,0.784,496,1.599,497,0.784,498,1.212,499,1.308,500,0.765,501,0.784,502,0.765,503,0.626,504,0.847,505,0.765,506,0.727,507,1.665,508,0.847,509,0.784,510,0.847,511,0.784,512,0.847,513,0.784,514,1.095,515,0.784,516,1.212,517,0.784,518,0.847,519,0.784,520,1.72,521,0.847,522,0.784,523,0.847,524,0.847,594,1.673,601,2.31,660,2.486,661,0.784,662,2.739,663,2.299,664,1.083,665,1.083,666,2.044,673,1.212,674,1.641,675,1.149,677,3.88,679,2.044,699,1.953,700,1.416,701,1.457,718,1.827,719,1.653,721,2.594,725,3.191,732,1.581,792,1.052,815,3.763,863,2.31,958,3.552,960,2.985,1057,1.793,1074,1.827,1162,4.774,1177,3.779,1208,4.194,1216,2.863,1282,2.343,1338,6.189,1492,3.358,1536,6.7,1540,2.68,1546,4.063,1548,2.776,1549,3.067,1571,2.065,1612,2.065,1771,3.88,1803,3.274,1852,3.511,1869,4.696,1879,3.654,1886,2.228,1913,3.121,1924,6.388,1971,3.443,1972,3.443,1986,3.443,1991,5.225,2104,1.581,2276,1.516,2278,1.457,2376,1.307,2605,3.443,2666,2.446,2667,3.779,2858,3.443,3095,5.225,3098,4.732,3177,6.677,3178,2.446,3179,4.291,3180,4.291,3181,4.291,3182,7.607,3183,5.243,3184,4.291,3185,5.243,3186,6.375,3187,5.243,3188,5.243,3189,4.291,3190,4.291,3191,5.898,3192,5.243,3193,5.243,3194,5.243,3195,4.291,3196,2.777,3197,2.777,3198,4.291,3199,4.291,3200,5.243,3201,5.243,3202,5.243,3203,2.777,3204,4.291,3205,2.777,3206,2.777,3207,4.291,3208,2.777,3209,4.291,3210,5.243,3211,4.618,3212,6.739,3213,5.243,3214,5.243,3215,4.291,3216,4.291,3217,2.777,3218,5.898,3219,4.291,3220,2.777,3221,2.777,3222,2.777,3223,4.291,3224,2.777,3225,4.291,3226,2.777,3227,2.777,3228,2.777,3229,2.777,3230,5.243,3231,4.291,3232,4.291,3233,4.291,3234,2.777,3235,4.291,3236,2.777,3237,2.777,3238,2.777,3239,2.777,3240,4.291,3241,2.777,3242,2.777,3243,2.777,3244,2.777,3245,2.777,3246,2.777,3247,2.777,3248,4.291,3249,5.898,3250,2.446,3251,2.777,3252,2.777,3253,4.618,3254,4.291]],["title/modules/StageNavModule.html",[525,0.594,1332,3.015]],["body/modules/StageNavModule.html",[3,0.075,4,0.075,5,0.075,36,0.01,65,0.008,70,0.008,80,0.232,89,0.238,105,0.075,109,0.162,407,1.587,441,1.627,458,0.903,487,2.17,507,2.552,525,0.854,527,1.711,528,1.896,529,2.453,530,1.848,531,1.801,532,2.453,543,2.285,544,1.755,546,2.345,550,2.227,556,3.101,557,2.424,740,2.61,741,2.107,747,3.932,748,3.262,1332,6.214,1338,4.624,1581,6.012,1582,4.988,1910,4.988,1945,6.05,2008,6.012,2009,4.988,2022,5.476,2675,6.6,2676,5.476,3177,4.988,3255,5.476,3256,5.476,3257,5.476,3258,6.217,3259,6.217,3260,6.217,3261,6.217]],["title/modules/StoreModule.html",[525,0.594,1345,3.015]],["body/modules/StoreModule.html",[1,4.335,3,0.072,4,0.072,5,0.072,7,3.208,8,3.903,36,0.01,65,0.008,70,0.008,80,0.235,83,2.247,89,0.227,90,2.382,99,2.758,100,3.113,101,2.536,102,3.531,103,4.146,104,4.76,105,0.088,109,0.154,115,0.91,138,1.857,146,3.239,187,3.531,195,0.726,227,2.607,298,1.955,332,2.056,425,2.532,525,0.815,527,1.633,546,1.857,550,2.164,629,2.792,630,2.891,682,2.891,781,3.314,782,3.705,786,3.314,787,2.792,788,3.239,816,4.335,1234,5.225,1345,5.075,1376,4.76,1633,4.76,1643,5.075,1917,4.134,1980,3.378,2051,4.134,2278,3.113,2771,4.412,3012,4.76,3088,4.76,3262,5.225,3263,5.933,3264,5.933,3265,5.933,3266,5.933,3267,8.435,3268,5.933,3269,5.933,3270,5.933,3271,5.933,3272,5.225,3273,5.225,3274,5.933,3275,5.933,3276,5.933,3277,5.933,3278,5.933,3279,5.933,3280,5.933,3281,5.933,3282,5.933,3283,5.933,3284,5.933,3285,5.933,3286,5.933,3287,5.933,3288,5.933,3289,5.933,3290,5.933,3291,5.933]],["title/interfaces/Tag.html",[11,1.025,106,0.269]],["body/interfaces/Tag.html",[3,0.076,4,0.076,5,0.076,7,2.761,10,0.745,11,2.083,17,0.518,36,0.01,38,0.733,59,0.965,60,4.123,61,2.01,65,0.008,67,3.731,70,0.009,74,3.422,96,5.229,97,3.914,105,0.098,106,0.468,116,4.876,119,5.625,131,2.998,132,3.114,134,5.31,169,4.123,178,1.64,201,0.922,378,2.374,382,2.021,2025,4.702,2026,3.544,2099,4.367,3292,5.028,3293,5.028,3294,5.028,3295,5.52]],["title/components/TagListComponent.html",[179,0.426,509,1.221]],["body/components/TagListComponent.html",[3,0.048,4,0.048,5,0.068,7,1.752,10,0.834,11,2.171,17,0.329,18,1.428,22,4.928,25,4.871,27,0.626,30,1.89,32,0.979,33,1.004,35,1.582,36,0.01,37,1.015,38,0.676,39,1.136,40,0.979,47,1.152,50,1.223,51,0.768,56,4.488,59,0.746,61,1.611,65,0.006,70,0.006,80,0.168,89,0.152,96,3.494,105,0.048,109,0.2,110,1.03,116,3.185,117,1.197,118,0.678,119,4.893,121,3.191,132,1.424,134,2.616,139,1.048,140,1.597,141,1.054,162,2.616,179,0.728,180,1.067,181,1.393,182,1.095,183,1.245,184,1.213,185,1.213,191,1.067,192,1.428,193,1.428,194,2.251,195,1.112,196,0.966,197,1.464,199,1.464,201,0.685,237,1.292,250,1.58,251,1.428,267,0.954,268,1.112,283,1.192,284,0.99,293,1.015,361,1.506,364,1.646,370,2.726,381,1.348,382,1.067,388,3.185,389,2.367,390,1.551,391,1.428,396,1.652,413,0.942,434,0.811,437,0.811,441,1.041,452,1.81,453,1.81,457,2.771,458,0.577,459,1.797,460,1.213,461,2.141,462,1.213,463,1.213,464,1.123,465,1.213,466,1.095,467,1.974,468,1.123,469,1.213,470,1.502,471,1.974,472,1.123,473,1.182,474,1.213,475,1.123,476,1.213,477,1.123,478,1.067,479,1.213,480,1.123,481,1.213,482,1.123,483,1.095,484,1.213,485,1.123,486,1.182,487,1.152,488,1.213,489,1.123,490,1.706,491,1.095,492,1.123,493,1.123,494,1.213,495,1.123,496,1.974,497,1.123,498,1.58,499,1.706,500,1.095,501,1.123,502,1.095,503,0.896,504,1.213,505,1.095,506,1.041,507,1.123,508,1.213,509,1.983,510,1.213,511,1.123,512,1.213,513,1.123,514,1.428,515,1.123,516,1.58,517,1.123,518,1.213,519,1.123,520,1.428,521,1.213,522,1.123,523,1.213,524,1.213,594,2.181,632,1.646,660,2.885,661,1.123,662,2.523,663,2.738,664,1.551,665,1.551,666,2.523,673,1.58,674,2.026,679,2.523,699,2.546,700,1.846,701,2.087,721,1.385,722,2.367,1479,3.054,1548,3.305,1709,3.33,2025,3.494,2026,3.046,2570,5.897,2691,4.16,2798,3.191,3077,6.653,3296,5.778,3297,3.977,3298,5.594,3299,6.472,3300,5.594,3301,5.594,3302,6.472,3303,6.472,3304,5.594,3305,3.977,3306,3.977,3307,5.594,3308,3.977,3309,4.928,3310,4.928,3311,5.594,3312,3.977,3313,4.928,3314,3.977,3315,4.488,3316,4.928,3317,3.503,3318,3.977,3319,3.977,3320,3.977,3321,3.977,3322,6.472,3323,3.977,3324,3.977,3325,4.928,3326,3.503,3327,3.977,3328,3.503,3329,3.503]],["title/modules/TagListModule.html",[525,0.594,3067,3.015]],["body/modules/TagListModule.html",[3,0.079,4,0.079,5,0.079,11,1.541,36,0.01,65,0.008,70,0.008,80,0.225,89,0.249,105,0.079,109,0.169,407,1.661,458,0.945,509,2.566,525,0.894,527,1.791,528,1.984,529,2.501,530,1.934,531,1.885,532,2.501,543,2.348,544,1.837,546,2.037,550,2.288,556,3.186,557,2.537,740,2.682,741,2.206,3067,6.174,3077,5.221,3296,4.534,3330,5.732,3331,5.732,3332,5.732,3333,6.507,3334,6.782,3335,5.732,3336,6.507]],["title/components/TagSearchComponent.html",[179,0.426,511,1.221]],["body/components/TagSearchComponent.html",[3,0.03,4,0.03,5,0.047,7,1.082,10,0.761,11,2.051,17,0.322,18,0.995,20,4.425,25,4.267,27,0.614,30,1.939,32,0.682,33,0.7,35,1.355,36,0.01,37,0.918,38,0.639,39,0.973,40,0.682,41,0.694,47,1.597,50,1.388,51,0.921,59,0.636,60,2.564,61,1.866,62,4.825,65,0.004,66,3.066,67,5.192,68,3.127,69,1.971,70,0.009,72,3.187,74,4.163,77,0.93,80,0.175,89,0.094,91,1.971,93,0.694,94,0.958,95,0.811,96,3.756,97,3.756,105,0.03,109,0.167,110,1.282,115,1.126,116,3.424,117,1.143,118,0.419,131,0.879,135,1.554,138,1.22,139,1.07,141,1.063,162,1.616,168,1.682,169,1.616,179,0.737,180,0.659,181,0.97,182,0.676,183,0.769,184,1.834,185,0.749,188,1.52,189,2.361,191,0.659,192,0.995,193,0.995,194,2.156,195,1.07,196,0.596,197,1.02,199,1.02,201,0.477,214,3.127,224,3.603,225,3.962,228,2.894,229,2.894,231,2.716,232,2.916,237,0.9,238,1.129,244,1.616,249,1.899,250,1.698,251,1.634,258,0.736,263,2.219,267,1.252,268,1.383,269,1.902,283,0.892,284,0.612,293,0.627,294,1.616,306,1.321,329,1.399,356,0.833,369,0.93,370,1.197,371,2.219,376,1.497,377,1.462,378,1.835,379,1.241,381,0.833,382,1.3,383,1.613,386,2.03,387,1.599,390,0.958,391,0.995,395,1.197,396,1.237,397,0.749,399,0.904,400,1.534,401,2.28,411,1.017,412,1.899,413,1.516,414,2.564,415,2.134,417,1.289,418,2.068,420,1.017,421,1.048,426,1.289,428,2.068,429,2.356,432,1.774,434,0.794,435,1.156,437,0.794,441,0.643,448,1.241,450,0.904,452,1.118,453,1.118,455,1.534,458,0.357,459,1.46,460,0.749,461,1.682,462,0.749,463,0.749,464,0.694,465,0.749,466,0.676,467,1.477,468,0.694,469,0.749,470,1.046,471,1.477,472,0.694,473,0.73,474,0.749,475,0.694,476,0.749,477,0.694,478,0.659,479,0.749,480,0.694,481,0.749,482,0.694,483,0.676,484,0.749,485,0.694,486,0.73,487,0.711,488,0.749,489,0.694,490,1.189,491,0.676,492,0.694,493,0.694,494,0.749,495,0.694,496,1.477,497,0.694,498,1.1,499,1.189,500,0.676,501,0.694,502,0.676,503,0.553,504,0.749,505,0.676,506,0.643,507,0.694,508,0.749,509,0.694,510,0.749,511,1.557,512,0.749,513,0.694,514,0.995,515,0.694,516,1.1,517,0.694,518,0.749,519,0.694,520,0.995,521,0.749,522,0.694,523,0.749,524,0.749,555,2.134,594,1.52,643,2.17,660,1.889,661,0.694,662,1.52,663,2.15,664,0.958,665,0.958,666,1.889,669,1.289,673,1.1,674,1.516,679,2.15,699,1.774,700,1.286,721,1.357,726,1.616,728,1.827,729,1.462,730,1.712,732,1.399,771,2.434,777,1.241,789,2.649,790,2.649,791,1.613,792,2.424,793,1.774,795,1.156,823,1.197,869,1.827,880,1.399,881,1.399,1053,2.564,1057,1.408,1075,1.534,1082,1.971,1155,2.32,1159,2.898,1195,2.564,1326,2.564,1327,2.564,1514,4.85,1537,2.898,1540,2.434,1548,2.831,1554,3.127,1557,2.434,1571,1.827,1574,1.971,1585,2.884,1618,1.616,1781,2.164,1801,4.101,1803,3.444,1852,2.32,1879,3.376,1881,4.473,1886,1.971,1980,2.219,1981,2.716,2026,2.596,2031,2.716,2072,1.712,2272,3.887,2285,1.534,2640,3.433,2793,3.603,2898,1.971,3035,2.164,3079,6.27,3294,3.127,3296,5.876,3313,3.433,3315,3.127,3316,3.433,3317,2.164,3337,2.164,3338,3.897,3339,4.267,3340,4.845,3341,3.897,3342,5.515,3343,5.515,3344,6.015,3345,4.845,3346,5.515,3347,5.515,3348,3.897,3349,5.515,3350,5.515,3351,6.96,3352,4.845,3353,4.845,3354,3.897,3355,3.897,3356,2.456,3357,2.456,3358,5.298,3359,2.456,3360,2.456,3361,2.456,3362,2.456,3363,5.298,3364,2.456,3365,3.897,3366,4.845,3367,2.456,3368,4.845,3369,2.456,3370,2.456,3371,3.897,3372,3.897,3373,3.897,3374,2.456,3375,2.456,3376,7.168,3377,2.456,3378,2.456,3379,3.897,3380,3.897,3381,2.456,3382,3.897,3383,3.897,3384,2.456,3385,2.456,3386,3.897,3387,3.897,3388,4.845,3389,2.456,3390,3.897,3391,2.456,3392,3.897,3393,5.638,3394,2.456,3395,2.456,3396,2.456,3397,4.267,3398,2.164,3399,2.164,3400,3.433,3401,2.456,3402,2.456,3403,2.456,3404,2.456,3405,2.456,3406,2.456,3407,2.456,3408,2.456,3409,2.456,3410,3.897,3411,4.845,3412,2.456,3413,2.456,3414,2.456,3415,2.456,3416,2.456,3417,2.456,3418,2.456,3419,2.456,3420,2.456,3421,2.456,3422,2.456,3423,2.456,3424,2.456,3425,2.456,3426,2.456,3427,2.456,3428,5.515,3429,2.456,3430,2.456,3431,2.456,3432,2.456,3433,2.456,3434,2.456,3435,2.456,3436,2.456,3437,2.456,3438,2.456,3439,2.456,3440,2.456,3441,2.456,3442,2.456,3443,2.456,3444,2.456,3445,2.456,3446,2.456,3447,2.456,3448,2.456,3449,2.456,3450,2.456,3451,2.456,3452,3.897,3453,3.897,3454,3.897,3455,2.456,3456,2.456]],["title/modules/TagSearchModule.html",[525,0.594,3068,3.015]],["body/modules/TagSearchModule.html",[3,0.076,4,0.076,5,0.076,11,1.489,36,0.01,65,0.008,70,0.008,80,0.232,89,0.241,105,0.076,109,0.164,407,1.605,458,0.913,511,2.556,525,0.864,527,1.731,528,1.918,529,2.465,530,1.869,531,1.822,532,2.465,543,2.301,544,1.776,546,1.968,550,2.242,554,4.137,555,2.77,556,3.122,557,2.452,740,2.628,741,2.132,744,5.258,745,4.964,746,4.137,1907,4.964,1908,4.137,2285,3.927,2301,6.054,2302,6.054,3068,6.133,3079,4.677,3296,4.382,3457,5.539,3458,5.539,3459,5.539,3460,6.289,3461,7.545,3462,6.289,3463,6.289]],["title/interfaces/TagSearchResult.html",[97,2.701,106,0.269]],["body/interfaces/TagSearchResult.html",[3,0.077,4,0.077,5,0.077,7,2.8,10,0.755,11,2.067,17,0.525,36,0.01,38,0.695,59,0.875,60,4.995,61,2.172,65,0.008,67,4.52,70,0.01,74,4.145,96,4.742,97,4.742,105,0.098,106,0.472,116,4.323,119,4.429,131,2.275,132,2.718,134,4.181,169,5.534,178,1.663,201,0.93,378,2.876,382,1.706,2025,3.969,2026,2.991,2099,5.291,3292,5.099,3293,5.099,3294,6.092,3295,6.688]],["title/modules/ThemingModule.html",[525,0.594,1346,3.015]],["body/modules/ThemingModule.html",[3,0.081,4,0.081,5,0.081,36,0.01,65,0.008,70,0.008,80,0.204,89,0.257,105,0.081,109,0.174,223,5.514,376,1.668,407,1.71,458,0.973,525,0.92,527,1.844,528,2.043,529,2.043,530,1.991,531,2.404,532,2.043,543,2.389,544,1.892,550,2.328,581,4.982,582,5.375,1346,6.153,3464,5.901,3465,5.901,3466,6.699,3467,7.833,3468,6.699,3469,6.699,3470,6.699]],["title/injectables/ThemingService.html",[0,1.253,223,2.701]],["body/injectables/ThemingService.html",[0,1.788,2,2.612,3,0.055,4,0.055,5,0.055,10,0.829,17,0.379,18,1.575,27,0.722,29,3.99,30,1.852,32,1.08,35,1.681,36,0.01,37,0.913,38,0.616,39,1.325,40,1.403,50,1.471,51,1.159,59,0.992,65,0.007,70,0.007,80,0.161,89,0.176,105,0.075,109,0.22,110,1.374,115,1.277,117,1.189,118,1.052,135,1.89,139,1.162,141,0.63,174,3.197,179,0.789,181,1.142,196,1.114,208,5.142,222,6.093,223,3.854,225,4.432,246,3.018,251,1.987,267,1.367,319,5.548,378,2.338,401,2.159,530,1.834,569,3.68,587,4.04,1057,1.171,1068,4.04,1069,3.411,1082,3.68,1099,2.809,1155,4.152,1159,4.59,1280,2.865,1359,4.04,1557,5.117,1574,4.952,1588,2.865,1648,4.659,1677,3.68,1736,5.436,1852,4.152,2030,2.731,2038,3.018,2039,3.018,2429,6.093,2955,4.04,3309,4.04,3310,6.144,3358,6.571,3471,4.04,3472,6.172,3473,7.46,3474,7.46,3475,7.46,3476,6.172,3477,4.587,3478,4.587,3479,7.785,3480,4.587,3481,6.172,3482,7.46,3483,4.587,3484,6.172,3485,6.172,3486,6.172,3487,4.587,3488,6.172,3489,4.587,3490,6.172,3491,4.587,3492,4.587,3493,4.587,3494,4.04,3495,4.04,3496,4.587,3497,4.587,3498,4.587,3499,4.587,3500,4.587,3501,4.587,3502,4.587,3503,4.587,3504,4.587,3505,4.587,3506,4.587,3507,7.46,3508,4.587,3509,6.172,3510,4.587,3511,4.587,3512,4.587,3513,4.587,3514,4.587,3515,4.587,3516,4.587,3517,4.587]],["title/components/ToggleButtonComponent.html",[179,0.426,513,1.221]],["body/components/ToggleButtonComponent.html",[3,0.042,4,0.042,5,0.062,10,0.715,11,1.206,14,1.438,17,0.288,18,1.3,24,2.574,27,0.802,30,1.796,32,0.891,33,0.914,35,1.148,36,0.01,37,0.929,38,0.581,39,0.824,40,0.891,41,1.438,47,1.011,50,1.329,51,0.909,55,1.444,59,0.694,65,0.005,70,0.005,80,0.172,89,0.134,93,0.985,105,0.042,109,0.191,110,1.218,115,0.922,117,0.595,118,0.595,135,1.708,138,1.594,139,0.987,141,1.009,179,0.746,180,0.937,181,1.268,182,0.961,183,1.092,184,1.064,185,1.064,188,2.579,189,2.932,191,0.937,192,1.3,193,1.3,194,2.229,195,1.105,196,0.847,197,1.333,199,1.333,201,0.624,228,3.471,229,3.471,232,2.63,237,0.806,238,2.197,249,3.224,251,1.3,258,1.329,267,0.868,268,1.013,269,1.514,283,1.108,284,0.869,293,0.891,301,3.181,311,3.757,312,2.179,315,2.179,329,1.987,369,1.322,372,3.757,376,1.498,377,2.077,378,1.322,379,1.763,380,2.179,381,1.183,382,1.367,386,1.285,389,2.077,391,0.891,392,1.643,396,2.273,397,1.064,401,2.832,402,5.231,404,2.108,408,3.032,411,2.108,413,0.827,415,3.795,420,1.444,421,1.489,422,1.643,423,5.893,424,5.893,425,3.318,426,1.831,432,2.318,434,1.348,435,2.398,437,1.497,441,0.913,448,2.574,458,0.507,459,1.708,460,1.064,461,2.017,462,1.064,463,1.064,464,0.985,465,1.064,466,0.961,467,1.835,468,0.985,469,1.064,470,1.367,471,1.835,472,0.985,473,1.037,474,1.064,475,1.986,476,1.064,477,0.985,478,0.937,479,1.064,480,0.985,481,1.064,482,0.985,483,0.961,484,1.064,485,0.985,486,1.037,487,1.011,488,1.064,489,0.985,490,1.553,491,0.961,492,0.985,493,0.985,494,1.064,495,0.985,496,1.835,497,0.985,498,1.438,499,1.553,500,0.961,501,0.985,502,0.961,503,0.786,504,1.064,505,0.961,506,0.913,507,0.985,508,1.064,509,0.985,510,1.064,511,0.985,512,1.064,513,1.868,514,2.248,515,0.985,516,1.438,517,0.985,518,1.064,519,0.985,520,1.3,521,1.064,522,0.985,523,1.064,524,1.064,661,0.985,673,1.438,680,2.174,700,1.681,732,4.005,863,1.537,958,3.002,1042,4.827,1045,3.538,1051,2.673,1052,2.932,1053,3.351,1057,1.689,1063,2.595,1064,3.236,1074,3.351,1075,5.099,1078,3.032,1094,1.588,1096,2.8,1098,2.595,1102,2.8,1108,3.074,1113,3.351,1114,4.087,1115,3.788,1250,3.351,1273,4.487,1274,4.087,1275,4.087,1276,2.8,1282,1.905,1285,3.938,1525,6.984,1568,2.8,1611,2.8,1709,3.032,1750,3.074,1753,3.074,1754,5.299,1755,5.299,1773,4.487,1800,2.595,1806,4.487,2936,3.074,2940,5.299,2941,4.487,2953,4.487,3253,3.074,3518,7.93,3519,5.094,3520,5.094,3521,3.49,3522,3.49,3523,6.615,3524,5.094,3525,6.016,3526,3.49,3527,3.49,3528,3.49,3529,3.49,3530,3.49,3531,6.016,3532,6.016,3533,3.49,3534,3.49,3535,3.49,3536,3.49,3537,3.49,3538,3.49,3539,3.49,3540,3.49,3541,5.094,3542,5.094,3543,3.49,3544,3.49,3545,3.49,3546,3.49]],["title/interfaces/User.html",[106,0.269,306,1.466]],["body/interfaces/User.html",[3,0.052,4,0.052,5,0.052,15,1.572,17,0.353,27,0.673,29,3.296,36,0.01,38,0.486,44,1.487,45,1.372,51,1.078,59,0.995,65,0.006,70,0.006,80,0.216,89,0.164,92,2.01,93,1.206,99,2.226,101,2.047,105,0.071,106,0.366,109,0.111,110,1.238,115,1.164,117,1.002,118,0.728,132,1.529,135,1.427,139,0.877,141,1.177,163,1.529,178,1.118,179,0.661,180,1.146,186,3.426,187,2.542,188,1.665,189,2.865,190,3.867,192,1.09,193,1.09,194,1.063,195,0.823,196,1.037,197,1.118,198,3.426,199,1.118,200,3.426,201,0.72,202,3.176,203,2.865,204,4.002,205,4.002,206,3.176,207,3.347,208,4.468,209,3.426,213,3.426,217,3.426,219,5.393,220,4.716,221,4.716,222,3.176,223,3.671,224,3.176,225,3.347,226,2.218,227,2.104,228,2.241,229,3.085,232,2.407,234,2.667,236,3.426,237,1.553,238,1.947,239,3.426,240,2.809,241,3.426,242,3.347,243,3.176,244,2.809,246,2.809,248,4.716,249,2.081,250,1.898,251,1.716,252,4.372,253,3.176,254,3.426,255,3.426,256,3.426,257,3.426,258,1.27,261,2.431,262,3.426,263,2.431,264,5.386,265,4.716,266,4.684,267,0.728,269,2.332,271,3.426,274,3.426,277,3.426,281,3.176,282,2.081,283,0.787,284,1.063,285,2.332,287,3.426,289,3.426,293,1.09,294,2.809,295,3.176,296,2.809,297,3.426,298,1.146,299,3.176,300,3.426,301,3.671,302,2.976,303,3.176,304,2.431,305,2.241,306,1.992,307,3.659,308,3.659,309,3.176,310,3.426,311,4.198,312,2.667,313,1.943,314,3.426,315,2.667,316,3.426,317,4.716,318,3.426,319,3.176,320,3.426,321,3.426,322,2.667,323,3.426,324,3.426,325,2.241,326,3.426,327,3.426,328,3.426,329,2.431,330,2.809,331,3.426,332,1.206,333,3.426,334,3.426,335,2.976,336,3.426,337,3.426,338,3.426,339,3.426,340,3.426,341,3.426,342,4.716,343,5.81,344,6.572,345,3.426,346,3.426,347,6.452,348,3.426,349,3.426,350,3.426,351,5.98,352,2.241,353,3.426,354,4.119,355,3.426,356,1.992,357,4.716,358,4.39,359,3.426,360,3.426,361,2.226,362,4.716,363,2.809,364,2.433,365,4.716,366,3.426,367,3.176,368,4.716,369,1.617,370,2.081,371,2.431,372,2.667,373,2.809,374,3.426,375,3.426,376,1.063,377,2.542,378,1.617,379,2.158,380,2.667]],["title/interfaces/UserName.html",[106,0.269,2266,3.471]],["body/interfaces/UserName.html",[3,0.062,4,0.062,5,0.062,10,0.609,17,0.424,32,0.897,33,0.92,36,0.01,37,1.108,38,0.609,40,0.897,41,2.08,51,0.704,59,1.003,65,0.007,70,0.007,80,0.192,89,0.196,105,0.08,106,0.319,109,0.173,110,0.944,115,0.786,117,1.41,118,0.874,135,1.245,139,1.1,140,2.059,141,1.012,178,1.342,179,0.767,192,1.309,193,1.309,194,1.277,195,0.813,197,1.342,199,1.342,201,0.813,232,1.836,250,2.456,251,1.309,268,1.32,293,1.309,306,2.498,307,4.18,308,4.18,332,1.876,459,1.245,491,1.411,555,3.246,643,2.251,654,3.202,660,2.59,661,1.448,662,2.59,663,2.59,664,1.999,665,1.999,666,2.59,671,3.373,672,3.373,673,1.448,674,1.605,679,2.59,680,2.188,681,3.052,682,3.798,686,3.573,687,3.373,688,3.202,690,3.813,1548,3.126,1549,2.334,2016,3.573,2257,4.114,2258,4.516,2259,4.516,2260,4.516,2261,4.516,2262,4.516,2264,4.516,2266,6.847,2268,4.516,2270,3.573,2271,4.516,2272,6.253,2273,6.49,2275,6.49,2276,4.023,2278,3.867,2280,6.49,2284,4.114,2285,3.202,2286,6.152,2287,5.042,2288,5.851,2289,4.516,2290,4.516,2291,4.516,2292,4.516,2293,4.516,2294,5.851,2295,4.516,2296,4.516,2297,4.516]],["title/components/VideoModalComponent.html",[179,0.426,515,1.221]],["body/components/VideoModalComponent.html",[3,0.049,4,0.049,5,0.069,10,0.484,11,1.347,17,0.336,18,1.452,27,0.896,30,1.834,32,0.995,33,1.021,35,0.918,36,0.01,37,0.972,38,0.586,39,0.659,43,2.137,47,1.647,50,1.075,51,1.025,59,0.47,65,0.006,70,0.006,80,0.171,83,2.154,89,0.156,105,0.049,109,0.201,115,0.624,118,0.694,135,1.381,141,1.112,179,0.809,180,1.093,181,1.416,182,1.121,183,1.275,184,1.242,185,1.242,188,2.218,190,4.312,191,1.093,192,1.452,193,1.452,194,2.255,195,1.114,196,0.989,197,1.489,199,1.489,201,0.696,237,1.314,238,1.647,251,1.452,267,0.97,268,1.131,283,1.207,284,2.132,293,1.04,313,2.589,330,2.679,332,2.108,369,2.154,381,1.38,382,1.093,386,2.094,388,2.318,390,1.588,391,1.452,393,2.137,396,1.673,397,2.164,399,2.748,400,2.543,401,1.917,402,3.028,404,1.685,405,3.267,411,2.936,412,2.772,413,1.347,414,4.911,420,1.685,421,1.738,425,1.738,426,2.137,432,1.853,434,0.83,435,1.917,437,1.159,441,1.066,443,4.093,448,2.058,452,1.853,453,1.853,458,0.591,459,1.813,460,1.242,461,2.164,462,1.242,463,1.242,464,1.15,465,1.242,466,1.121,467,1.999,468,1.15,469,1.242,470,1.527,471,1.999,472,1.15,473,1.21,474,1.242,475,1.15,476,1.242,477,1.15,478,1.093,479,1.242,480,1.15,481,1.242,482,1.15,483,1.121,484,1.242,485,1.15,486,1.21,487,1.179,488,1.242,489,1.15,490,1.735,491,1.121,492,1.15,493,1.15,494,1.242,495,1.15,496,1.999,497,1.15,498,1.606,499,1.735,500,1.121,501,1.15,502,1.121,503,0.918,504,1.242,505,1.121,506,1.066,507,1.15,508,1.242,509,1.15,510,1.242,511,1.15,512,1.242,513,1.15,514,1.452,515,2.003,516,2.498,517,1.15,518,1.242,519,1.15,520,1.452,521,1.242,522,1.15,523,1.242,524,1.242,632,1.685,661,1.15,673,1.606,674,2.052,700,1.877,721,1.418,722,3.386,741,1.38,1232,3.552,1235,2.838,1340,6.071,1516,3.386,1517,4.23,1618,3.742,1803,3.552,2030,2.424,2532,5.389,2533,5.202,2545,5.552,2577,2.223,2679,3.028,2681,4.23,3007,5.259,3016,4.564,3020,3.267,3027,3.267,3029,5.01,3211,6.991,3494,6.812,3547,6.022,3548,7.465,3549,7.096,3550,4.072,3551,6.555,3552,4.072,3553,4.072,3554,5.688,3555,5.688,3556,5.774,3557,5.774,3558,5.688,3559,5.688,3560,4.072,3561,4.072,3562,4.072,3563,4.072,3564,4.072,3565,5.688,3566,4.072,3567,4.072,3568,4.072,3569,4.072,3570,4.072,3571,4.072,3572,6.555,3573,4.072]],["title/components/VideoModalLauncherComponent.html",[179,0.426,517,1.221]],["body/components/VideoModalLauncherComponent.html",[3,0.052,4,0.052,5,0.071,10,0.701,11,1.397,17,0.487,18,1.505,27,0.676,30,1.757,32,1.032,33,1.059,35,0.967,36,0.01,37,0.986,38,0.599,39,0.694,41,1.665,47,1.243,50,0.811,51,0.81,59,0.495,65,0.006,66,1.89,70,0.006,80,0.175,83,2.234,89,0.164,105,0.052,106,0.367,109,0.204,118,0.731,140,1.723,141,0.997,168,1.308,179,0.819,180,1.152,181,1.468,182,1.181,183,1.343,184,1.308,185,1.308,191,1.152,192,1.505,193,1.505,194,2.263,195,1.117,196,1.042,197,1.544,199,1.544,201,0.722,237,0.991,238,1.243,250,2.049,251,1.505,258,0.811,267,1.149,268,1.339,283,1.401,284,2.257,293,1.095,306,1.999,332,1.211,356,1.454,376,1.468,381,1.454,382,1.152,383,2.441,384,2.251,385,2.251,390,1.673,391,1.505,392,2.019,396,1.72,397,2.055,401,2.019,415,1.89,418,2.517,420,1.776,421,1.831,425,1.831,428,2.517,429,1.58,433,3.095,434,1.202,437,0.875,441,1.123,444,2.091,448,2.168,458,0.623,459,1.847,460,1.308,461,2.213,462,1.308,463,1.308,464,1.211,465,1.308,466,1.181,467,2.055,468,1.211,469,1.308,470,1.583,471,2.055,472,1.211,473,1.275,474,1.308,475,1.211,476,1.308,477,1.211,478,1.152,479,1.308,480,1.211,481,1.308,482,1.211,483,1.181,484,1.308,485,1.211,486,1.275,487,1.243,488,1.308,489,1.211,490,1.798,491,1.181,492,1.211,493,1.211,494,1.308,495,1.211,496,2.055,497,1.211,498,1.665,499,1.798,500,1.181,501,1.211,502,1.181,503,0.967,504,1.308,505,1.181,506,1.123,507,1.211,508,1.308,509,1.211,510,1.308,511,1.211,512,1.308,513,1.211,514,1.852,515,1.665,516,2.504,517,2.049,518,1.308,519,1.211,520,1.505,521,1.308,522,1.211,523,1.308,524,1.308,583,4.732,594,2.299,661,1.211,673,1.665,674,2.109,700,1.946,713,2.443,716,2.679,721,2.054,1216,3.22,1227,4.732,1340,5.611,1341,6.306,1516,3.511,1618,3.88,1625,5.396,2104,3.837,2577,2.343,2684,3.442,2685,5.822,2713,2.99,3547,5.845,3574,4.291,3575,5.898,3576,8.421,3577,6.739,3578,5.898,3579,7.256,3580,5.898,3581,5.898,3582,4.291,3583,5.898,3584,4.291,3585,4.291,3586,5.898,3587,5.898,3588,4.291,3589,4.291,3590,4.291]],["title/modules/VideoModalLauncherModule.html",[525,0.594,1333,3.015]],["body/modules/VideoModalLauncherModule.html",[3,0.077,4,0.077,5,0.077,36,0.01,65,0.008,70,0.008,80,0.224,89,0.245,105,0.077,109,0.166,284,2.027,407,1.632,458,0.928,516,2.151,517,2.561,525,0.878,527,1.76,528,1.949,529,2.482,530,1.9,531,1.852,532,2.482,543,2.323,544,1.805,546,2.385,550,2.264,556,3.153,557,2.492,577,5.129,740,2.654,741,2.167,1333,6.241,1340,5.309,1341,5.129,3547,4.754,3591,5.631,3592,5.631,3593,5.631,3594,5.631,3595,6.089,3596,6.392,3597,6.392]],["title/modules/VideoModalModule.html",[525,0.594,3595,3.015]],["body/modules/VideoModalModule.html",[3,0.078,4,0.078,5,0.078,36,0.01,65,0.008,70,0.008,80,0.228,89,0.247,105,0.078,109,0.168,407,1.645,458,0.936,515,2.563,516,1.82,525,0.885,527,1.774,528,1.966,529,2.491,530,1.915,531,1.867,532,2.491,543,2.335,544,1.82,546,2.017,550,2.275,556,3.169,557,2.513,740,2.667,741,2.185,1340,5.336,2577,3.519,2710,5.171,2711,6.143,2713,4.492,3547,4.793,3556,5.677,3595,6.163,3598,5.677,3599,5.677,3600,5.677,3601,7.657,3602,6.445]],["title/interfaces/VisibilityItem.html",[106,0.269,783,2.27]],["body/interfaces/VisibilityItem.html",[3,0.075,4,0.075,5,0.075,10,0.74,17,0.514,36,0.01,37,1.063,38,0.706,39,1.351,59,1.028,61,2.162,65,0.008,66,3.303,70,0.008,105,0.075,106,0.466,131,3.109,178,1.629,201,0.918,258,1.521,268,1.49,325,4.557,332,1.757,441,1.963,520,1.589,783,3.935,785,4.795,863,3.825,1057,1.914,1488,4.464,1557,4.683,2104,4.756,3603,6.224,3604,6.224,3605,7.499]],["title/components/VisibilityMenuComponent.html",[179,0.426,519,1.221]],["body/components/VisibilityMenuComponent.html",[3,0.035,4,0.035,5,0.053,10,0.846,11,1.046,17,0.497,18,1.127,27,0.454,30,1.874,32,0.773,33,0.793,35,1.541,36,0.01,37,0.983,38,0.655,39,1.106,40,0.773,47,0.835,50,1.452,51,1.089,59,0.619,61,1.974,65,0.005,66,1.27,70,0.005,80,0.14,89,0.11,105,0.035,109,0.178,110,0.813,115,0.677,117,1.025,118,0.491,131,2.629,139,1.096,140,1.158,141,0.94,163,1.581,168,1.834,179,0.638,180,0.774,181,1.099,182,0.794,183,0.902,184,0.879,185,0.879,191,0.774,192,1.127,193,1.127,194,2.192,195,1.086,196,0.7,197,1.156,199,1.156,201,0.541,237,0.666,238,1.555,249,2.152,250,1.515,251,1.127,261,2.514,267,0.753,268,1.628,283,0.989,284,0.718,293,0.736,306,0.977,335,3.74,356,0.977,361,1.092,376,1.099,381,0.977,382,1.185,383,2.489,384,1.513,385,1.513,386,1.626,388,3.056,389,3.195,391,0.736,395,1.405,396,1.37,397,1.637,400,1.801,401,1.357,404,3.234,406,3.74,407,1.655,412,1.405,413,1.536,418,1.231,420,1.828,421,1.885,422,2.079,425,1.885,426,1.513,428,1.231,429,2.955,431,2.009,432,2.443,434,1.226,435,2.526,437,0.9,438,4.519,441,0.755,442,2.905,443,1.801,448,2.231,449,4.306,450,1.976,451,3.74,458,0.419,459,1.575,460,0.879,461,1.834,462,0.879,463,0.879,464,0.814,465,0.879,466,0.794,467,1.637,468,0.814,469,0.879,470,1.185,471,1.637,472,0.814,473,0.857,474,0.879,475,0.814,476,0.879,477,0.814,478,0.774,479,0.879,480,0.814,481,0.879,482,0.814,483,0.794,484,0.879,485,0.814,486,0.857,487,0.835,488,0.879,489,0.814,490,1.347,491,0.794,492,0.814,493,0.814,494,0.879,495,0.814,496,1.637,497,0.814,498,1.247,499,1.347,500,0.794,501,0.814,502,0.794,503,0.65,504,0.879,505,0.794,506,0.755,507,0.814,508,0.879,509,0.814,510,0.879,511,0.814,512,0.879,513,0.814,514,1.127,515,0.814,516,1.247,517,0.814,518,0.879,519,1.698,520,2.191,521,0.879,522,0.814,523,0.879,524,0.879,544,0.814,594,1.722,660,2.528,661,0.814,662,2.093,663,2.345,664,1.124,665,1.124,666,2.093,673,1.247,674,1.68,679,2.093,680,1.885,684,4.192,699,2.01,700,1.457,701,1.513,708,3.077,716,1.801,717,2.009,718,2.905,719,1.716,721,1.869,722,1.716,732,1.642,783,4.257,785,4.895,858,3.992,863,3.795,868,4.266,879,2.676,1099,2.01,1159,3.284,1219,2.758,1232,2.758,1235,3.077,1282,2.411,1464,2.009,1479,1.574,1488,2.629,1502,1.897,1540,4.272,1546,2.317,1548,3.617,1549,2.737,1555,3.543,1556,4.473,1557,4.272,1609,3.284,1771,2.905,1913,1.716,1924,5.712,1973,5.298,1976,2.54,1985,2.313,1991,6.186,1992,1.897,2019,6.57,2102,2.758,2104,4.182,2118,3.284,2207,3.992,2270,2.009,2839,3.543,3250,2.54,3315,2.313,3606,6.09,3607,2.883,3608,5.367,3609,4.416,3610,4.416,3611,6.015,3612,4.416,3613,6.015,3614,4.416,3615,3.89,3616,4.416,3617,5.367,3618,4.416,3619,2.883,3620,2.883,3621,2.883,3622,4.416,3623,4.416,3624,2.883,3625,2.883,3626,4.416,3627,4.416,3628,4.416,3629,4.416,3630,2.883,3631,4.416,3632,2.883,3633,4.416,3634,2.883,3635,4.416,3636,4.416,3637,2.883,3638,4.416,3639,4.416,3640,2.883,3641,7.929,3642,4.416,3643,2.54,3644,6.015,3645,2.883,3646,2.883,3647,2.883,3648,6.841,3649,6.485,3650,4.416,3651,5.367,3652,4.416,3653,2.883,3654,2.883,3655,5.367,3656,2.883,3657,2.883,3658,2.883,3659,2.883,3660,2.883,3661,2.883,3662,2.883,3663,2.883,3664,2.883]],["title/modules/VisibilityMenuModule.html",[525,0.594,2005,3.015]],["body/modules/VisibilityMenuModule.html",[3,0.078,4,0.078,5,0.078,36,0.01,65,0.008,70,0.008,80,0.228,89,0.247,105,0.078,109,0.168,195,0.79,298,1.732,407,1.647,458,0.937,519,2.564,520,1.647,525,0.886,527,1.776,528,1.968,529,2.492,530,1.918,531,1.869,532,2.492,543,2.337,544,1.822,546,2.02,550,2.277,556,3.171,557,2.516,740,2.669,741,2.187,742,5.339,743,4.497,2005,6.164,2012,6.749,2019,5.177,3606,4.799,3665,5.684,3666,5.684,3667,5.684,3668,6.453,3669,6.453]],["title/components/VisibilityToggleComponent.html",[179,0.426,522,1.221]],["body/components/VisibilityToggleComponent.html",[3,0.045,4,0.045,5,0.065,10,0.636,11,1.268,14,1.929,17,0.309,18,1.367,27,0.589,30,1.83,32,0.937,33,0.961,35,0.843,36,0.01,37,0.948,38,0.64,39,0.605,40,0.937,47,1.083,50,0.707,51,0.736,59,0.617,65,0.006,70,0.006,80,0.139,89,0.143,105,0.045,109,0.196,117,1.232,118,1.232,132,2.693,139,0.558,140,1.501,141,0.993,163,1.917,179,0.793,180,1.004,181,1.333,182,1.029,183,1.17,184,1.14,185,1.14,191,1.004,192,1.367,193,1.367,194,2.241,195,1.107,196,0.908,197,1.402,199,1.402,201,0.656,237,1.237,238,1.083,250,2.124,251,1.367,258,1.012,261,3.049,267,1.232,268,1.54,269,2.03,283,1.152,284,0.931,293,0.955,306,1.815,369,1.416,370,3.049,378,2.028,381,1.267,382,1.833,383,2.827,386,2.303,387,1.234,389,2.226,390,2.088,391,1.367,393,1.962,395,3.049,396,1.597,397,2.083,399,1.971,401,1.76,404,2.216,406,2.606,407,0.955,411,2.992,412,1.822,413,1.482,416,2.606,417,2.81,418,3.085,420,2.589,421,2.67,422,1.76,425,2.285,426,1.962,428,2.67,429,2.303,430,3.732,432,3.109,434,1.275,435,2.52,437,1.092,441,0.979,444,3.049,448,1.889,452,1.702,453,1.702,457,3.732,458,0.543,459,1.755,460,1.14,461,2.083,462,1.14,463,1.14,464,1.056,465,1.14,466,1.029,467,1.908,468,1.056,469,1.14,470,1.437,471,1.908,472,1.056,473,1.111,474,1.14,475,1.056,476,1.14,477,1.056,478,1.004,479,1.14,480,1.056,481,1.14,482,1.056,483,1.029,484,1.14,485,1.056,486,1.111,487,1.083,488,1.14,489,1.056,490,1.633,491,1.029,492,1.056,493,1.056,494,1.14,495,1.056,496,1.908,497,1.056,498,1.512,499,1.633,500,1.029,501,1.056,502,1.029,503,0.843,504,1.14,505,1.029,506,0.979,507,1.056,508,1.14,509,1.056,510,1.14,511,1.056,512,1.14,513,1.056,514,2.209,515,1.056,516,1.512,517,1.056,518,1.14,519,1.056,520,2.258,521,1.14,522,1.929,523,1.14,524,1.14,594,2.088,660,2.439,661,1.056,662,2.088,663,2.663,664,1.458,665,1.458,666,2.439,673,1.512,674,1.958,677,3.523,679,2.439,699,3.109,700,1.767,701,1.962,710,2.606,714,1.889,721,1.302,732,2.129,863,1.647,1057,1.367,1132,2.781,1262,2.781,1477,4.717,1502,2.46,1548,2.52,1549,2.437,1555,4.296,1612,2.781,1771,3.523,1869,3.732,1911,3.294,1913,3.188,1914,5.51,1915,4.717,1917,5.241,1944,3,1971,4.296,1972,4.296,1992,3.523,1993,3,2021,6.471,2104,3.562,2605,3,2611,3.294,3095,3.982,3111,4.717,3325,4.717,3326,3.294,3328,3.294,3329,3.294,3339,4.717,3606,5.998,3615,6.625,3643,3.294,3670,5.355,3671,5.355,3672,7.229,3673,6.256,3674,5.355,3675,3.739,3676,3.739,3677,5.355,3678,3.739,3679,5.355,3680,3.739,3681,6.256,3682,3.739,3683,3.739,3684,5.355,3685,3.739,3686,3.739,3687,3.739,3688,3.739,3689,3.739,3690,5.355,3691,3.739]],["title/modules/VisibilityToggleModule.html",[525,0.594,2006,3.015]],["body/modules/VisibilityToggleModule.html",[3,0.079,4,0.079,5,0.079,36,0.01,65,0.008,70,0.008,80,0.225,89,0.249,105,0.079,109,0.169,407,1.661,458,0.945,520,1.661,522,2.566,525,0.894,527,1.791,528,1.984,529,2.501,530,1.934,531,1.885,532,2.501,543,2.348,544,1.837,546,2.037,550,2.288,556,3.186,557,2.537,740,2.682,741,2.206,1949,5.732,1952,5.732,2006,6.174,2021,5.221,3334,6.782,3335,5.732,3606,4.839,3692,5.732,3693,5.732,3694,5.732]],["title/interfaces/XYZTriplet.html",[106,0.269,2098,2.463]],["body/interfaces/XYZTriplet.html",[0,1.082,3,0.028,4,0.028,5,0.028,7,1.026,10,0.277,14,1.928,15,0.858,17,0.192,21,0.964,27,0.367,29,2.666,32,0.408,33,0.418,36,0.01,37,0.904,38,0.631,40,0.654,41,0.658,42,1.272,43,1.223,44,0.812,45,2.264,48,3.96,51,1.108,55,0.964,59,0.833,61,1.165,65,0.004,70,0.004,77,3.078,80,0.204,83,1.415,85,2.28,86,1.546,87,0.964,88,0.964,89,0.089,90,0.936,93,0.658,94,1.457,95,0.769,99,0.883,101,1.301,102,1.387,105,0.079,106,0.291,108,0.936,109,0.061,110,1.258,115,1.246,117,1.232,118,0.637,125,2.809,131,2.587,132,1.675,135,1.658,138,1.957,139,1.182,141,1.116,142,0.964,143,0.964,144,1.026,154,1.455,155,1.455,158,1.624,163,0.834,165,1.624,178,0.61,195,0.457,201,0.457,226,1.233,227,1.338,237,1.445,238,2.139,240,2.458,258,0.884,261,1.327,267,0.397,269,1.591,283,0.688,298,0.625,325,1.961,332,1.511,356,2.656,361,2.968,364,3.243,373,1.533,376,1.636,382,0.625,387,1.544,391,1.366,410,2.969,413,1.781,419,2.202,429,1.376,434,1.091,437,1.091,441,0.61,478,1.763,503,1.664,506,0.978,520,0.595,601,1.646,642,1.888,643,1.267,651,3.199,658,1.272,663,1.457,664,0.908,665,0.908,666,0.908,669,2.455,675,1.936,679,0.908,680,3.26,682,1.136,752,1.759,763,1.223,769,1.387,773,1.223,774,1.136,777,1.177,779,1.387,780,1.026,783,3.447,784,1.533,785,1.272,786,1.701,787,1.097,788,1.272,789,1.546,790,1.546,791,0.964,792,0.883,793,1.701,795,1.759,815,1.888,823,1.136,827,1.177,845,4.114,846,4.114,852,3.56,856,1.327,863,2.755,865,1.533,879,2.178,880,1.327,881,1.327,891,4.114,937,4.399,938,3.659,940,1.455,941,1.455,942,1.455,958,3.38,959,3.078,960,1.327,972,1.455,979,1.533,980,1.387,982,1.533,987,1.533,1010,1.327,1017,3.078,1030,2.128,1041,1.272,1057,0.954,1094,2.846,1099,2.99,1162,4.634,1195,3.078,1207,4.909,1208,2.458,1385,1.455,1479,2.554,1488,1.387,1492,1.327,1527,3.047,1530,3.98,1586,2.458,1589,3.078,1590,3.26,1591,4.031,1592,3.414,1593,3.199,1597,2.666,1980,3.56,1981,4.358,1982,1.733,2026,1.759,2027,3.846,2064,2.334,2093,1.533,2094,1.624,2095,1.87,2096,4.114,2097,4.065,2098,4.204,2099,1.624,2100,3.913,2101,2.998,2102,2.921,2103,2.998,2104,3.888,2105,4.083,2106,2.334,2107,2.604,2108,1.387,2109,1.387,2110,2.998,2111,1.87,2112,6.415,2113,1.87,2114,1.327,2115,1.87,2116,1.87,2117,1.87,2118,2.779,2119,2.785,2120,1.87,2121,2.224,2122,1.733,2123,1.455,2124,1.87,2125,1.87,2126,1.87,2127,2.224,2128,6.415,2129,6.355,2130,1.87,2131,1.87,2132,1.87,2133,1.87,2134,1.87,2135,1.87,2136,1.87,2137,1.87,2138,1.87,2139,1.87,2140,1.87,2141,1.87,2142,1.87,2143,1.87,2144,1.87,2145,1.87,2146,1.87,2147,1.87,2148,1.87,2149,1.87,2150,1.87,2151,1.87,2152,1.87,2153,1.87,2154,1.87,2155,1.87,2156,1.87,2157,1.87,2158,5.271,2159,2.998,2160,1.87,2161,4.294,2162,1.87,2163,2.998,2164,1.87,2165,4.93,2166,1.87,2167,1.87,2168,1.87,2169,1.87,2170,1.87,2171,1.87,2172,1.87,2173,1.87,2174,1.87,2175,1.87,2176,1.87,2177,1.87,2178,1.87,2179,1.87,2180,1.87,2181,1.87,2182,1.87,2183,1.733,2184,3.753,2185,4.294,2186,1.87,2187,1.87,2188,1.87,2189,1.87,2190,1.87,2191,1.87,2192,1.87,2193,1.87,2194,1.87,2195,1.87,2196,1.87,2197,1.87,2198,2.998,2199,1.87,2200,1.87,2201,1.87,2202,1.87,2203,1.87,2204,1.87,2205,1.87,2206,1.87,2207,3.479,2208,1.87,2209,1.87,2210,1.87,2211,1.87,2212,1.87,2213,1.87,2214,1.87,2215,2.998,2216,1.87,2217,2.998,2218,2.998,2219,2.998,2220,1.87,2221,1.87,2222,1.87,2223,1.87,2224,1.87,2225,1.87,2226,1.87,2227,1.87,2228,1.87,2229,1.87,2230,1.87,2231,1.87,2232,1.87,2233,1.624,2234,1.87,2235,1.87,2236,1.87,2237,1.87,2238,2.128,2239,1.87,2240,1.87,2241,1.733,2242,1.87,2243,4.294,2244,1.455,2245,1.87,2246,1.87,2247,1.87,2248,1.87,2249,1.87,2250,1.87,2251,2.998,2252,2.998,2253,1.87,2254,1.87,2255,1.87,2256,1.87]],["title/miscellaneous/functions.html",[3695,2.368,3696,4.589]],["body/miscellaneous/functions.html",[10,0.757,17,0.526,35,1.938,36,0.01,37,1.053,38,0.671,39,1.391,45,2.047,50,1.625,59,0.734,65,0.008,70,0.008,176,4.439,226,2.102,238,2.202,268,1.266,396,1.941,410,2.345,450,2.345,565,5.654,590,5.111,591,6.1,633,5.611,642,3.219,648,6.697,751,4.439,755,5.076,758,4.737,762,4.748,787,2.998,803,4.737,827,3.842,1034,4.748,1036,6.697,1040,5.611,1066,4.191,1067,4.439,1073,5.611,1584,4.439,1598,5.111,2303,4.737,2304,5.654,2305,5.002,2308,4.737,2329,4.737,3695,4.191,3696,5.611,3697,7.603,3698,6.37,3699,7.603,3700,5.611,3701,5.111,3702,5.611,3703,7.603,3704,6.37,3705,6.37]],["title/index.html",[17,0.357,3706,3.81]],["body/index.html",[2,2.219,36,0.01,65,0.006,70,0.006,178,1.02,180,1.718,181,0.97,223,3.997,407,0.995,419,1.834,458,0.566,464,1.807,466,2.158,468,2.213,470,2.149,472,2.213,475,2.213,477,2.213,480,2.213,482,2.213,485,2.213,489,2.213,491,2.158,492,2.213,493,2.213,495,2.213,497,2.213,500,2.158,501,2.213,502,2.158,505,2.158,507,2.213,509,2.213,511,2.213,513,2.213,515,2.213,517,2.213,519,2.213,522,2.213,525,0.535,526,6.547,527,1.073,528,1.188,529,1.188,530,1.158,531,1.129,532,1.188,533,3.433,534,3.433,535,3.433,536,5.754,537,5.675,538,5.966,539,5.314,540,6.035,541,5.58,542,6.135,543,1.682,544,1.1,735,5.314,736,3.433,737,3.433,738,3.433,1032,4.46,1328,3.433,1329,3.433,1330,3.433,1331,3.433,1332,5.58,1333,5.58,1343,3.433,1344,3.433,1345,4.46,1346,5.118,1503,5.462,1504,3.433,1505,3.433,1506,3.433,1518,3.433,1519,3.433,1520,3.433,1576,5.314,1577,3.433,1578,3.433,1579,3.433,1627,3.433,1628,3.433,1629,3.433,1702,3.127,1901,5.314,1902,3.433,1903,3.433,1904,3.433,1943,4.858,1945,5.314,1946,3.433,1947,3.433,1948,3.433,2000,3.433,2001,3.433,2002,3.433,2003,3.433,2004,5.157,2005,5.314,2006,5.463,2298,3.433,2299,3.433,2300,3.433,2612,5.58,2613,3.433,2614,3.433,2615,3.433,2616,3.433,2617,5.494,2670,3.433,2671,3.433,2672,3.433,2706,3.433,2707,3.433,2708,3.433,2999,5.58,3000,3.433,3001,3.433,3002,3.433,3003,3.433,3004,5.314,3037,3.433,3038,3.433,3039,3.433,3061,3.433,3062,3.433,3063,3.433,3064,3.433,3065,5.314,3066,5.314,3067,5.314,3068,5.314,3116,3.433,3117,3.433,3118,3.433,3173,3.433,3174,3.433,3175,3.433,3255,3.433,3256,3.433,3257,3.433,3330,3.433,3331,3.433,3332,3.433,3457,3.433,3458,3.433,3459,3.433,3464,3.433,3465,3.433,3591,3.433,3592,3.433,3593,3.433,3594,3.433,3595,5.314,3598,3.433,3599,3.433,3600,3.433,3665,3.433,3666,3.433,3667,3.433,3692,3.433,3693,3.433,3694,3.433,3706,3.433,3707,3.897,3708,3.897]],["title/modules.html",[527,1.633]],["body/modules.html",[36,0.008,65,0.008,70,0.008,526,4.47,527,1.655,536,4.189,537,4.189,538,4.189,539,4.189,540,4.189,541,4.189,542,4.189,561,6.44,735,4.189,1032,4.189,1332,4.189,1333,4.189,1345,4.189,1346,4.189,1379,6.872,1503,4.47,1576,4.189,1901,4.189,1945,4.189,2004,3.955,2005,4.189,2006,4.189,2612,4.189,2617,3.955,2999,4.189,3004,4.189,3065,4.189,3066,4.189,3067,4.189,3068,4.189,3595,4.189,3709,9.241,3710,9.254,3711,7.342,3712,7.342]],["title/miscellaneous/typealiases.html",[3695,2.368,3713,5.21]],["body/miscellaneous/typealiases.html",[7,3.112,11,1.338,14,2.177,17,0.467,36,0.01,38,0.711,40,0.988,45,2.27,59,0.651,61,1.406,65,0.008,70,0.008,96,4.412,181,1.406,191,1.896,285,3.857,306,2.395,313,2.571,396,1.968,400,3.528,408,3.363,410,2.601,434,1.44,437,1.44,450,2.838,565,6.309,590,4.532,591,6.806,601,2.489,608,4.923,612,6.223,619,5.254,631,6.223,675,2.338,815,3.57,937,4.412,958,3.447,960,4.022,1045,3.215,1052,3.443,1064,3.396,1065,3.57,1078,3.363,1094,2.571,1162,3.716,1207,4.923,1208,4.648,1303,3.716,1304,3.716,1305,4.022,1306,3.937,1307,3.937,1308,3.716,1310,3.716,1312,4.735,1313,4.648,1314,5.372,1317,3.716,1318,3.716,1319,5.044,1322,5.372,1323,3.937,1324,3.937,1325,4.389,1338,4.201,1409,3.937,1411,3.363,1416,3.937,1417,3.937,1450,3.937,1584,3.937,1589,4.648,1703,4.532,1714,4.976,1715,6.223,1716,6.223,1717,4.976,1718,6.223,1719,4.976,1720,6.223,1721,4.976,1722,4.976,1723,4.976,1724,4.976,2090,4.532,2091,4.976,2092,6.223,2094,3.937,2122,4.201,2376,2.659,3177,4.532,3178,6.223,3292,4.532,3293,5.669,3695,3.716,3701,4.532,3702,7.325,3714,5.649,3715,7.472,3716,6.791,3717,5.649,3718,5.649,3719,5.649,3720,6.223,3721,5.649]],["title/miscellaneous/variables.html",[3695,2.368,3722,4.589]],["body/miscellaneous/variables.html",[1,1.77,17,0.246,35,0.67,36,0.01,37,1.102,38,0.691,40,1.069,59,0.343,60,1.956,61,1.521,65,0.005,67,4.522,70,0.007,74,1.623,97,1.857,99,1.126,101,1.035,103,1.693,108,1.194,109,0.142,114,1.956,117,0.932,138,1.415,146,1.623,169,1.956,187,5.365,196,0.722,203,2.666,204,3.256,205,3.256,208,3.743,226,0.981,227,1.064,237,0.687,267,1.505,268,1.699,269,1.625,298,0.798,322,5.623,356,1.532,361,1.712,364,1.871,376,1.929,387,1.492,391,1.396,397,0.907,413,1.704,425,3.826,434,1.34,437,1.34,503,1.019,506,0.778,569,3.627,583,3.627,602,4.068,629,3.259,643,2.347,651,1.623,652,2.211,653,2.072,654,3.816,667,2.211,668,3.627,669,3.207,675,1.871,721,1.035,751,2.072,781,1.353,786,1.353,795,1.399,798,3.362,799,3.362,800,2.211,801,2.211,802,2.211,817,2.072,839,3.812,863,1.31,965,3.598,1035,3.362,1037,1.56,1041,1.623,1045,2.057,1064,1.991,1304,1.956,1308,1.956,1364,2.385,1365,2.211,1366,2.619,1367,3.982,1370,2.385,1378,6.696,1382,2.072,1383,2.619,1384,3.362,1385,2.823,1386,2.619,1387,7.897,1388,7.897,1389,2.619,1390,2.619,1391,2.619,1392,3.982,1393,2.619,1394,2.619,1395,2.619,1396,2.619,1397,2.619,1398,2.619,1399,2.619,1400,2.619,1401,2.619,1402,2.619,1403,2.619,1404,2.619,1405,5.383,1406,5.383,1407,5.79,1408,5.79,1409,2.072,1410,2.619,1411,3.638,1412,2.619,1413,2.619,1414,2.619,1415,2.619,1416,3.15,1417,3.15,1418,3.982,1419,2.619,1420,2.619,1421,2.619,1422,2.619,1423,5.79,1424,2.619,1425,3.982,1426,2.619,1427,2.619,1428,2.619,1429,2.619,1430,2.619,1431,5.383,1432,3.982,1433,2.619,1434,2.619,1435,2.619,1436,2.619,1437,2.619,1438,2.619,1439,2.619,1440,2.619,1441,2.619,1442,2.619,1443,2.619,1444,2.619,1445,2.619,1446,3.982,1447,3.982,1448,2.619,1449,2.619,1450,2.072,1451,2.619,1452,2.619,1453,2.619,1454,2.619,1455,2.619,1456,2.619,1457,2.619,1458,5.383,1459,2.619,1460,2.619,1461,5.383,1462,2.619,1463,2.619,1464,2.072,1465,2.619,1466,2.619,1467,4.818,1468,2.619,1469,3.982,1470,2.619,1471,2.619,1472,2.619,1473,2.619,1488,1.77,1522,2.974,1523,3.598,1584,2.072,1595,3.627,1596,2.385,1597,2.781,1643,2.072,1703,2.385,1725,2.619,1726,3.982,1727,2.619,1728,2.619,2024,2.072,2034,1.956,2037,2.072,2038,2.974,2039,2.974,2040,2.072,2041,2.072,2042,2.072,2094,2.072,2097,1.77,2106,1.857,2119,1.77,2121,1.77,2123,2.823,2127,2.691,2515,4.545,2714,2.385,2775,3.627,2793,2.211,2889,4.389,2890,4.389,2967,4.818,3072,2.072,3075,2.072,3079,2.211,3083,2.211,3084,3.627,3086,3.627,3144,2.211,3145,3.627,3262,2.619,3272,2.619,3273,3.982,3296,2.072,3337,5.383,3363,2.619,3393,3.982,3397,3.982,3398,2.619,3399,2.619,3400,3.982,3471,2.619,3495,2.619,3557,6.098,3695,1.956,3700,3.982,3701,3.627,3715,2.619,3716,2.619,3720,2.619,3722,2.619,3723,2.973,3724,2.973,3725,2.973,3726,5.47,3727,2.973,3728,2.973,3729,2.973,3730,2.973,3731,2.973,3732,2.973,3733,4.521,3734,2.973,3735,2.973,3736,5.47,3737,5.47,3738,5.47,3739,5.47,3740,5.47,3741,5.47,3742,5.47,3743,5.47,3744,5.47,3745,6.923,3746,5.47,3747,5.47,3748,5.47,3749,5.47,3750,5.47,3751,5.47,3752,5.47,3753,5.47,3754,5.47,3755,5.47,3756,5.47,3757,5.47,3758,2.973,3759,2.973,3760,2.973,3761,2.973,3762,2.973,3763,2.973,3764,2.973,3765,2.973]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["0.05rem",{"_index":3546,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["0.075rem",{"_index":3688,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["0.125rem",{"_index":2607,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["0.15rem",{"_index":3544,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["0.16",{"_index":2610,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["0.1rem",{"_index":1569,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["0.1s",{"_index":3664,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.25rem",{"_index":732,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["0.25s",{"_index":3253,"title":{},"body":{"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0.2rem",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2s",{"_index":3689,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["0.375rem",{"_index":1984,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["0.3rem",{"_index":1568,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0.3s",{"_index":3663,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.4s",{"_index":3662,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.5",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["0.5rem",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["0.5s",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/VideoModalComponent.html":{}}}],["0.675rem",{"_index":3545,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["0.6s",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["0.75rem",{"_index":726,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{}}}],["0.875rem",{"_index":3254,"title":{},"body":{"components/StageNavComponent.html":{}}}],["0.9rem",{"_index":1997,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["0px",{"_index":731,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["0rem",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{}}}],["1",{"_index":168,"title":{"components/ContentComponent-1.html":{},"interfaces/SlicesConfig-1.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["1)[0",{"_index":2511,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["1.0",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["1.0625rem",{"_index":3541,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["1.125rem",{"_index":3691,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["1.1875rem",{"_index":3057,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["1.25rem",{"_index":2605,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["1.2rem",{"_index":427,"title":{},"body":{"components/AppComponent.html":{}}}],["1.5rem",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["1.75rem",{"_index":1996,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["1.9375rem",{"_index":3056,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["10",{"_index":669,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["10.5rem",{"_index":1572,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["100",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":944,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["10rem",{"_index":2606,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["11",{"_index":3252,"title":{},"body":{"components/StageNavComponent.html":{}}}],["118",{"_index":1028,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["11rem",{"_index":1223,"title":{},"body":{"components/ContentComponent.html":{}}}],["12.75rem",{"_index":1222,"title":{},"body":{"components/ContentComponent.html":{}}}],["14px",{"_index":3329,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["14rem",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["15rem",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["180",{"_index":961,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["1px",{"_index":1611,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["1s",{"_index":1228,"title":{},"body":{"components/ContentComponent.html":{}}}],["1wrjhn9fm6",{"_index":3760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"index.html":{}}}],["2.0625rem",{"_index":3540,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["2.06rem",{"_index":3690,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["2.25rem",{"_index":1502,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["2.5rem",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["2.688rem",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["2.9rem",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["2.awsapprunner.com/get",{"_index":802,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":2207,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["200",{"_index":953,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["20rem",{"_index":720,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["210",{"_index":1029,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["21rem",{"_index":1999,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["232f3a",{"_index":1224,"title":{},"body":{"components/ContentComponent.html":{}}}],["24px",{"_index":1995,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["24px.svg",{"_index":1467,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":1027,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["25.5rem",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["250",{"_index":3028,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["255",{"_index":864,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["25rem",{"_index":1623,"title":{},"body":{"components/HeaderComponent.html":{}}}],["27rem",{"_index":1998,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["2]).rotatey(toradians(0",{"_index":968,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["2px",{"_index":718,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["2rem",{"_index":1219,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["3",{"_index":3090,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["3.5rem",{"_index":1571,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{}}}],["3.625rem",{"_index":3055,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["3.75rem",{"_index":3047,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["30",{"_index":1943,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"index.html":{}}}],["3000",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["30rem",{"_index":3589,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["32rem",{"_index":3058,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["34",{"_index":3708,"title":{},"body":{"index.html":{}}}],["3d",{"_index":815,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["3px",{"_index":1987,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["3rem",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["4.5rem",{"_index":723,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["40",{"_index":1168,"title":{},"body":{"components/ContentComponent.html":{}}}],["400",{"_index":715,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["40vh",{"_index":3659,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["46rem",{"_index":3585,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["47rem",{"_index":2603,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["4rem",{"_index":1610,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{}}}],["5",{"_index":3398,"title":{},"body":{"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["5.5rem",{"_index":1230,"title":{},"body":{"components/ContentComponent.html":{}}}],["5.688rem",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["50",{"_index":1625,"title":{},"body":{"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["500",{"_index":1900,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{}}}],["55rem",{"_index":1236,"title":{},"body":{"components/ContentComponent.html":{}}}],["5rem",{"_index":1227,"title":{},"body":{"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["600",{"_index":1989,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["60rem",{"_index":2993,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["65vh",{"_index":3571,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["6px",{"_index":2608,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["6rem",{"_index":3048,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["700",{"_index":2665,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["7rem",{"_index":1229,"title":{},"body":{"components/ContentComponent.html":{}}}],["9",{"_index":3707,"title":{},"body":{"index.html":{}}}],["90",{"_index":959,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["999",{"_index":3049,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["9]{4",{"_index":2508,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["9]{4}){3",{"_index":2509,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["9e9e9e",{"_index":1570,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["9rem",{"_index":3170,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["_blocksize",{"_index":933,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_error",{"_index":1684,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["_expanded",{"_index":1766,"title":{},"body":{"classes/InitializationState.html":{}}}],["_index",{"_index":3315,"title":{},"body":{"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["_latesttags",{"_index":136,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["_lighting",{"_index":969,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_measuredmargin",{"_index":1796,"title":{},"body":{"classes/InitializationState.html":{}}}],["_measuredwidth",{"_index":1790,"title":{},"body":{"classes/InitializationState.html":{}}}],["_msg",{"_index":1112,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_name",{"_index":2293,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["_opened",{"_index":1762,"title":{},"body":{"classes/InitializationState.html":{}}}],["_position",{"_index":935,"title":{},"body":{"interfaces/Collision.html":{},"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_rotation",{"_index":934,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["aabb",{"_index":758,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["about.wrapper",{"_index":3031,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["absolute",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["acc",{"_index":3451,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["acc.concat(nodes",{"_index":872,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["acc[id",{"_index":3449,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["accepting",{"_index":1850,"title":{},"body":{"classes/InitializationState.html":{}}}],["accessible",{"_index":2335,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["accessing",{"_index":3232,"title":{},"body":{"components/StageNavComponent.html":{}}}],["accessors",{"_index":24,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["accordingly",{"_index":2194,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["action",{"_index":2740,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["active",{"_index":2429,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ThemingService.html":{}}}],["actual_component",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["add",{"_index":3358,"title":{},"body":{"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{}}}],["addclass",{"_index":3514,"title":{},"body":{"injectables/ThemingService.html":{}}}],["added",{"_index":116,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["added.add(id",{"_index":123,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["added.add(iri",{"_index":129,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["added.has(iri",{"_index":128,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addeventlistener('beforeunload",{"_index":2503,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["adding",{"_index":3339,"title":{},"body":{"components/TagSearchComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["addregistration",{"_index":2717,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["addregistration(registration",{"_index":2727,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["adds",{"_index":174,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/ThemingService.html":{}}}],["addsvgicon",{"_index":1688,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["addtag",{"_index":19,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtag(tag",{"_index":46,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtagraw(tag",{"_index":177,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtags",{"_index":20,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagSearchComponent.html":{}}}],["addtags(tags",{"_index":52,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["afterviewinit",{"_index":1042,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["against",{"_index":1839,"title":{},"body":{"classes/InitializationState.html":{}}}],["alert",{"_index":2478,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["aliases",{"_index":3714,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["alignment",{"_index":2885,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["all_organs",{"_index":2106,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["all_organs.find",{"_index":2381,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["all_organs.find((o",{"_index":2159,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["allow",{"_index":3050,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["allowed",{"_index":1944,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["allows",{"_index":1869,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["along",{"_index":2196,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["already",{"_index":1082,"title":{},"body":{"components/ContainerComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{}}}],["always",{"_index":1071,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["analytics",{"_index":666,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["analyticsmodule",{"_index":1351,"title":{},"body":{"modules/CoreModule.html":{}}}],["analyticsmodule.forroot",{"_index":1355,"title":{},"body":{"modules/CoreModule.html":{}}}],["anatomical",{"_index":1980,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["anatomicalstructures",{"_index":852,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["anatomicalstructuretagstate",{"_index":1,"title":{"injectables/AnatomicalStructureTagState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["anatomicalstructuretagstatemodel",{"_index":107,"title":{"interfaces/AnatomicalStructureTagStateModel.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["angle",{"_index":3180,"title":{},"body":{"components/StageNavComponent.html":{}}}],["angular",{"_index":83,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["angular/animations",{"_index":1264,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{}}}],["angular/cdk/coercion",{"_index":1713,"title":{},"body":{"classes/InitializationState.html":{}}}],["angular/cdk/overlay",{"_index":3493,"title":{},"body":{"injectables/ThemingService.html":{}}}],["angular/common",{"_index":741,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"components/VideoModalComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["angular/common/http",{"_index":754,"title":{},"body":{"interfaces/Collision.html":{},"modules/CoreModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["angular/core",{"_index":89,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["angular/elements",{"_index":552,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":2285,"title":{},"body":{"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/UserName.html":{}}}],["angular/material/button",{"_index":1908,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/checkbox",{"_index":3462,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["angular/material/chips",{"_index":3335,"title":{},"body":{"modules/TagListModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["angular/material/core",{"_index":743,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["angular/material/dialog",{"_index":2577,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{}}}],["angular/material/divider",{"_index":2009,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/expansion",{"_index":2011,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["angular/material/form",{"_index":554,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/icon",{"_index":557,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["angular/material/input",{"_index":746,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/radio",{"_index":2676,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/select",{"_index":1582,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/slide",{"_index":1951,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{}}}],["angular/material/slider",{"_index":3122,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["angular/material/snack",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["angular/material/tooltip",{"_index":748,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{}}}],["angular/platform",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/RightSidebarModule.html":{}}}],["angular/youtube",{"_index":3602,"title":{},"body":{"modules/VideoModalModule.html":{}}}],["animate",{"_index":1261,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["animate('.5s",{"_index":1747,"title":{},"body":{"classes/InitializationState.html":{}}}],["animate('1s",{"_index":1269,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["animate(0",{"_index":1746,"title":{},"body":{"classes/InitializationState.html":{}}}],["animated",{"_index":2992,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["animated')[0]?.classlist.add('modal",{"_index":3025,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["animation",{"_index":1725,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":1239,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{}}}],["animationsenabled",{"_index":1240,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["anterior",{"_index":1208,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["api",{"_index":3557,"title":{},"body":{"components/VideoModalComponent.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/ReviewButtonComponent.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":567,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["app.component.scss",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["app_bootstrap_listener",{"_index":3467,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":180,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["appearance",{"_index":711,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["appears",{"_index":2680,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["appelement",{"_index":585,"title":{},"body":{"modules/AppModule.html":{}}}],["applicable",{"_index":2101,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["application",{"_index":2959,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["application/json",{"_index":994,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["applyspatialplacement",{"_index":3697,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applyspatialplacement(new",{"_index":2350,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["applyspatialplacement(tx",{"_index":2308,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["applythemeclass(cls",{"_index":3508,"title":{},"body":{"injectables/ThemingService.html":{}}}],["appmodule",{"_index":526,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":1358,"title":{},"body":{"modules/CoreModule.html":{}}}],["appoptions",{"_index":309,"title":{"interfaces/AppOptions.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["appwebcomponent",{"_index":464,"title":{"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["area",{"_index":1185,"title":{},"body":{"components/ContentComponent.html":{}}}],["arg",{"_index":1680,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args",{"_index":1681,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args.filter((value",{"_index":1696,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["argument",{"_index":1693,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arguments",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{}}}],["around",{"_index":3034,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["array",{"_index":1479,"title":{},"body":{"components/DetailsLabelComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["array.isarray(entity.placement",{"_index":1012,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["arraytostring",{"_index":1486,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(details",{"_index":1501,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(inputarray",{"_index":1490,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arrow_drop_down",{"_index":3248,"title":{},"body":{"components/StageNavComponent.html":{}}}],["arrow_left",{"_index":3532,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["arrow_right",{"_index":3531,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["as.id",{"_index":171,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["as.name",{"_index":172,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["as.name.tolowercase().indexof(text.tolowercase",{"_index":167,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["aslookup",{"_index":2216,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["aslookup[iri",{"_index":2218,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["assertions",{"_index":2125,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["assets/icons/ico",{"_index":1472,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/opacity",{"_index":1466,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/organ",{"_index":1387,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/visibility",{"_index":1469,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/reference",{"_index":2340,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["assigned",{"_index":134,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["associated",{"_index":2028,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["astags",{"_index":3041,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["async",{"_index":1705,"title":{},"body":{"classes/InitializationState.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["async)?.x",{"_index":1213,"title":{},"body":{"components/ContentComponent.html":{}}}],["async)?.y",{"_index":1214,"title":{},"body":{"components/ContentComponent.html":{}}}],["async)?.z",{"_index":1215,"title":{},"body":{"components/ContentComponent.html":{}}}],["asynchronously",{"_index":3559,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["atlas",{"_index":3756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attach",{"_index":3525,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["author",{"_index":2662,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["auto",{"_index":722,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["autofocus",{"_index":2705,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["available",{"_index":3712,"title":{},"body":{"modules.html":{}}}],["await",{"_index":1729,"title":{},"body":{"classes/InitializationState.html":{}}}],["awaited",{"_index":1704,"title":{},"body":{"classes/InitializationState.html":{}}}],["axis",{"_index":826,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["b",{"_index":1210,"title":{},"body":{"components/ContentComponent.html":{}}}],["b3dt7xpmrt",{"_index":3765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":1609,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["backbutton",{"_index":1617,"title":{},"body":{"components/HeaderComponent.html":{}}}],["background",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["backing",{"_index":1671,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["bar",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["based",{"_index":1293,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ReviewButtonComponent.html":{}}}],["basehref",{"_index":595,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["basewebcomponent",{"_index":592,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bbox",{"_index":1004,"title":{},"body":{"interfaces/Collision.html":{},"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bbox.left",{"_index":1787,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.overlaps(getnodebbox(model",{"_index":1007,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bbox.right",{"_index":1786,"title":{},"body":{"classes/InitializationState.html":{}}}],["before",{"_index":1376,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"classes/InitializationState.html":{},"modules/StoreModule.html":{}}}],["beforeunloadevent",{"_index":2498,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["beforeunloadlistener",{"_index":2497,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["begin",{"_index":2960,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["behavior",{"_index":1225,"title":{},"body":{"components/ContentComponent.html":{}}}],["being",{"_index":3012,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/StoreModule.html":{}}}],["belong",{"_index":1531,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["belonging",{"_index":1532,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["between",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{}}}],["bind",{"_index":62,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagSearchComponent.html":{}}}],["binds",{"_index":3488,"title":{},"body":{"injectables/ThemingService.html":{}}}],["biomolecular",{"_index":3755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["bladder",{"_index":1386,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bladder.svg",{"_index":1389,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blank",{"_index":2415,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["blob([json",{"_index":2856,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["block",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["block.x",{"_index":2178,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["block_size_input",{"_index":692,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["blocks",{"_index":2103,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["blocksize",{"_index":651,"title":{"interfaces/BlockSize.html":{}},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["blocksize.x",{"_index":903,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksize.y",{"_index":905,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksize.z",{"_index":907,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksize.z].map((n",{"_index":952,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksizechange",{"_index":678,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["blocksizeinputcomponent",{"_index":466,"title":{"components/BlockSizeInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["blocksizeinputmodule",{"_index":735,"title":{"modules/BlockSizeInputModule.html":{}},"body":{"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"index.html":{},"modules.html":{}}}],["blood",{"_index":1390,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blood.svg",{"_index":1391,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":625,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bodyuimodule",{"_index":1335,"title":{},"body":{"modules/ContentModule.html":{}}}],["bold",{"_index":1993,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["bone",{"_index":1392,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["booleaninput",{"_index":1711,"title":{},"body":{"classes/InitializationState.html":{}}}],["bootstrap",{"_index":530,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["border",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["bottom",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["bounds",{"_index":1138,"title":{},"body":{"components/ContentComponent.html":{}}}],["box",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/TagSearchComponent.html":{}}}],["bp",{"_index":637,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.boolean",{"_index":646,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.function",{"_index":649,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.json",{"_index":647,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.stringarray",{"_index":650,"title":{},"body":{"components/AppWebComponent.html":{}}}],["brain",{"_index":1395,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["brain.svg",{"_index":1396,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["breaks",{"_index":147,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["breast.svg",{"_index":1399,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bronchus",{"_index":1400,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bronchus.svg",{"_index":1402,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":3710,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["browser/animations",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/RightSidebarModule.html":{}}}],["browseranimationsmodule",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/RightSidebarModule.html":{}}}],["browsermodule",{"_index":559,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["buildjsonld",{"_index":2887,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["buildmetadata(page",{"_index":2875,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["builds",{"_index":2874,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["builtin_parsers",{"_index":627,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.json(value",{"_index":635,"title":{},"body":{"components/AppWebComponent.html":{}}}],["button",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["button'},{'name",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["button.component",{"_index":1526,"title":{},"body":{"modules/DrawerModule.html":{},"modules/ReviewButtonModule.html":{}}}],["button.component.html",{"_index":2941,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":2940,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":2936,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts:104",{"_index":2968,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:107",{"_index":3527,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:119",{"_index":2965,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:20",{"_index":2964,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:25",{"_index":2953,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts:28",{"_index":3524,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:30",{"_index":2952,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:33",{"_index":3530,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:36",{"_index":2949,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:41",{"_index":2954,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:46",{"_index":2962,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:48",{"_index":3522,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:53",{"_index":2957,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:58",{"_index":2947,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:88",{"_index":2970,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:95",{"_index":3526,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.module",{"_index":3082,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["button.module.ts",{"_index":3005,"title":{},"body":{"modules/ReviewButtonModule.html":{}}}],["button/review",{"_index":2935,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{}}}],["button/toggle",{"_index":1525,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["buttons",{"_index":1196,"title":{},"body":{"components/ContentComponent.html":{}}}],["cached",{"_index":1788,"title":{},"body":{"classes/InitializationState.html":{}}}],["calc",{"_index":3543,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["calc(100",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["calc(50",{"_index":1750,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["calculated",{"_index":1781,"title":{},"body":{"classes/InitializationState.html":{},"components/TagSearchComponent.html":{}}}],["call",{"_index":1694,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["callback",{"_index":1217,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["called",{"_index":1736,"title":{},"body":{"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["calling",{"_index":3218,"title":{},"body":{"components/StageNavComponent.html":{}}}],["calls",{"_index":2640,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"components/TagSearchComponent.html":{}}}],["cancel",{"_index":2691,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/TagListComponent.html":{}}}],["cancelregistration",{"_index":596,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["cancelregistrationcallback",{"_index":608,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"miscellaneous/typealiases.html":{}}}],["cannon",{"_index":760,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["case",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["catch",{"_index":636,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["catcherror",{"_index":771,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagSearchComponent.html":{}}}],["ccf",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ccf_annotations",{"_index":2897,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ccfcontexturl",{"_index":3742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccfdrawer",{"_index":1740,"title":{},"body":{"classes/InitializationState.html":{}}}],["ccfdrawercontainer",{"_index":1044,"title":{},"body":{"components/ContainerComponent.html":{}}}],["ccfowlurl",{"_index":3739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdk",{"_index":1573,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["cdr",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cdr.markforcheck",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["center",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["centimeter",{"_index":2311,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["certain",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["cff",{"_index":1302,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["change",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{}}}],["changed",{"_index":1107,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["changedetection",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectionstrategy",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectorref",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["changerotation",{"_index":3103,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["changerotation(newrotation",{"_index":3101,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["changes",{"_index":163,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["changing",{"_index":3198,"title":{},"body":{"components/StageNavComponent.html":{}}}],["channel",{"_index":1094,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["channel.getmessagesfromsource(drawer).subscribe((msg",{"_index":3533,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["channels",{"_index":2064,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["check",{"_index":2251,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["checked",{"_index":3376,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["checkedresults",{"_index":3342,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["checkedresults[tag.id",{"_index":3419,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["checknamevalid",{"_index":2539,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["checknamevalid(event",{"_index":2548,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["checks",{"_index":1292,"title":{},"body":{"components/ContentComponent-1.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{}}}],["chevron_left",{"_index":1608,"title":{},"body":{"components/HeaderComponent.html":{}}}],["child",{"_index":725,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["chip",{"_index":3326,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["chip__action",{"_index":3685,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["chip__text",{"_index":3328,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["class",{"_index":109,"title":{"classes/InitializationState.html":{},"classes/MessageChannel.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["class.ccf",{"_index":3520,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["class.cff",{"_index":1245,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["classend",{"_index":1754,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["classes",{"_index":1702,"title":{},"body":{"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"index.html":{}}}],["classname",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["clean",{"_index":2072,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/TagSearchComponent.html":{}}}],["cleans",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["clear",{"_index":3029,"title":{},"body":{"components/ReviewModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["clearhaschanges",{"_index":2397,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["clears",{"_index":3626,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["click",{"_index":1879,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{}}}],["clicked",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ReviewButtonComponent.html":{},"interfaces/User.html":{}}}],["clicks",{"_index":3213,"title":{},"body":{"components/StageNavComponent.html":{}}}],["close",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{}}}],["closed",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["closedialog",{"_index":2540,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["closeexpanded",{"_index":1815,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeopendone",{"_index":1822,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeresults",{"_index":3348,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["closeresults(event",{"_index":3372,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["closes",{"_index":1803,"title":{},"body":{"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{}}}],["closesearch",{"_index":3343,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["closesearch.nativeelement.contains(event.target",{"_index":3432,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["cls",{"_index":3507,"title":{},"body":{"injectables/ThemingService.html":{}}}],["clsname",{"_index":674,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["cluster_appmodule",{"_index":533,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":534,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":535,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_blocksizeinputmodule",{"_index":736,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"index.html":{}}}],["cluster_blocksizeinputmodule_declarations",{"_index":737,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"index.html":{}}}],["cluster_blocksizeinputmodule_exports",{"_index":738,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"index.html":{}}}],["cluster_contentmodule",{"_index":1328,"title":{},"body":{"modules/ContentModule.html":{},"index.html":{}}}],["cluster_contentmodule_declarations",{"_index":1329,"title":{},"body":{"modules/ContentModule.html":{},"index.html":{}}}],["cluster_contentmodule_exports",{"_index":1331,"title":{},"body":{"modules/ContentModule.html":{},"index.html":{}}}],["cluster_contentmodule_imports",{"_index":1330,"title":{},"body":{"modules/ContentModule.html":{},"index.html":{}}}],["cluster_coremodule",{"_index":1343,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_imports",{"_index":1344,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_detailslabelmodule",{"_index":1504,"title":{},"body":{"modules/DetailsLabelModule.html":{},"index.html":{}}}],["cluster_detailslabelmodule_declarations",{"_index":1505,"title":{},"body":{"modules/DetailsLabelModule.html":{},"index.html":{}}}],["cluster_detailslabelmodule_exports",{"_index":1506,"title":{},"body":{"modules/DetailsLabelModule.html":{},"index.html":{}}}],["cluster_drawermodule",{"_index":1518,"title":{},"body":{"modules/DrawerModule.html":{},"index.html":{}}}],["cluster_drawermodule_declarations",{"_index":1519,"title":{},"body":{"modules/DrawerModule.html":{},"index.html":{}}}],["cluster_drawermodule_exports",{"_index":1520,"title":{},"body":{"modules/DrawerModule.html":{},"index.html":{}}}],["cluster_extractionsetdropdownmodule",{"_index":1577,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"index.html":{}}}],["cluster_extractionsetdropdownmodule_declarations",{"_index":1579,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"index.html":{}}}],["cluster_extractionsetdropdownmodule_exports",{"_index":1578,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"index.html":{}}}],["cluster_headermodule",{"_index":1627,"title":{},"body":{"modules/HeaderModule.html":{},"index.html":{}}}],["cluster_headermodule_declarations",{"_index":1628,"title":{},"body":{"modules/HeaderModule.html":{},"index.html":{}}}],["cluster_headermodule_exports",{"_index":1629,"title":{},"body":{"modules/HeaderModule.html":{},"index.html":{}}}],["cluster_jsonfilereadermodule",{"_index":1902,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"index.html":{}}}],["cluster_jsonfilereadermodule_declarations",{"_index":1903,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"index.html":{}}}],["cluster_jsonfilereadermodule_exports",{"_index":1904,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"index.html":{}}}],["cluster_labeledslidetogglemodule",{"_index":1946,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"index.html":{}}}],["cluster_labeledslidetogglemodule_declarations",{"_index":1947,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"index.html":{}}}],["cluster_labeledslidetogglemodule_exports",{"_index":1948,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"index.html":{}}}],["cluster_leftsidebarmodule",{"_index":2000,"title":{},"body":{"modules/LeftSidebarModule.html":{},"index.html":{}}}],["cluster_leftsidebarmodule_declarations",{"_index":2001,"title":{},"body":{"modules/LeftSidebarModule.html":{},"index.html":{}}}],["cluster_leftsidebarmodule_exports",{"_index":2003,"title":{},"body":{"modules/LeftSidebarModule.html":{},"index.html":{}}}],["cluster_leftsidebarmodule_imports",{"_index":2002,"title":{},"body":{"modules/LeftSidebarModule.html":{},"index.html":{}}}],["cluster_nameinputmodule",{"_index":2298,"title":{},"body":{"modules/NameInputModule.html":{},"index.html":{}}}],["cluster_nameinputmodule_declarations",{"_index":2299,"title":{},"body":{"modules/NameInputModule.html":{},"index.html":{}}}],["cluster_nameinputmodule_exports",{"_index":2300,"title":{},"body":{"modules/NameInputModule.html":{},"index.html":{}}}],["cluster_registrationcontentmodule",{"_index":2613,"title":{},"body":{"modules/RegistrationContentModule.html":{},"index.html":{}}}],["cluster_registrationcontentmodule_declarations",{"_index":2616,"title":{},"body":{"modules/RegistrationContentModule.html":{},"index.html":{}}}],["cluster_registrationcontentmodule_exports",{"_index":2614,"title":{},"body":{"modules/RegistrationContentModule.html":{},"index.html":{}}}],["cluster_registrationcontentmodule_imports",{"_index":2615,"title":{},"body":{"modules/RegistrationContentModule.html":{},"index.html":{}}}],["cluster_registrationmetadatamodule",{"_index":2670,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"index.html":{}}}],["cluster_registrationmetadatamodule_declarations",{"_index":2672,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"index.html":{}}}],["cluster_registrationmetadatamodule_exports",{"_index":2671,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"index.html":{}}}],["cluster_registrationmetadatamodule_imports",{"_index":2673,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["cluster_registrationmodalmodule",{"_index":2706,"title":{},"body":{"modules/RegistrationModalModule.html":{},"index.html":{}}}],["cluster_registrationmodalmodule_declarations",{"_index":2707,"title":{},"body":{"modules/RegistrationModalModule.html":{},"index.html":{}}}],["cluster_registrationmodalmodule_exports",{"_index":2708,"title":{},"body":{"modules/RegistrationModalModule.html":{},"index.html":{}}}],["cluster_registrationmodalmodule_imports",{"_index":2709,"title":{},"body":{"modules/RegistrationModalModule.html":{}}}],["cluster_reviewbuttonmodule",{"_index":3000,"title":{},"body":{"modules/ReviewButtonModule.html":{},"index.html":{}}}],["cluster_reviewbuttonmodule_declarations",{"_index":3001,"title":{},"body":{"modules/ReviewButtonModule.html":{},"index.html":{}}}],["cluster_reviewbuttonmodule_exports",{"_index":3003,"title":{},"body":{"modules/ReviewButtonModule.html":{},"index.html":{}}}],["cluster_reviewbuttonmodule_imports",{"_index":3002,"title":{},"body":{"modules/ReviewButtonModule.html":{},"index.html":{}}}],["cluster_reviewmodalmodule",{"_index":3037,"title":{},"body":{"modules/ReviewModalModule.html":{},"index.html":{}}}],["cluster_reviewmodalmodule_declarations",{"_index":3038,"title":{},"body":{"modules/ReviewModalModule.html":{},"index.html":{}}}],["cluster_reviewmodalmodule_exports",{"_index":3039,"title":{},"body":{"modules/ReviewModalModule.html":{},"index.html":{}}}],["cluster_rightsidebarmodule",{"_index":3061,"title":{},"body":{"modules/RightSidebarModule.html":{},"index.html":{}}}],["cluster_rightsidebarmodule_declarations",{"_index":3064,"title":{},"body":{"modules/RightSidebarModule.html":{},"index.html":{}}}],["cluster_rightsidebarmodule_exports",{"_index":3063,"title":{},"body":{"modules/RightSidebarModule.html":{},"index.html":{}}}],["cluster_rightsidebarmodule_imports",{"_index":3062,"title":{},"body":{"modules/RightSidebarModule.html":{},"index.html":{}}}],["cluster_rotationslidermodule",{"_index":3116,"title":{},"body":{"modules/RotationSliderModule.html":{},"index.html":{}}}],["cluster_rotationslidermodule_declarations",{"_index":3118,"title":{},"body":{"modules/RotationSliderModule.html":{},"index.html":{}}}],["cluster_rotationslidermodule_exports",{"_index":3117,"title":{},"body":{"modules/RotationSliderModule.html":{},"index.html":{}}}],["cluster_slicesinputmodule",{"_index":3173,"title":{},"body":{"modules/SlicesInputModule.html":{},"index.html":{}}}],["cluster_slicesinputmodule_declarations",{"_index":3175,"title":{},"body":{"modules/SlicesInputModule.html":{},"index.html":{}}}],["cluster_slicesinputmodule_exports",{"_index":3174,"title":{},"body":{"modules/SlicesInputModule.html":{},"index.html":{}}}],["cluster_stagenavmodule",{"_index":3255,"title":{},"body":{"modules/StageNavModule.html":{},"index.html":{}}}],["cluster_stagenavmodule_declarations",{"_index":3257,"title":{},"body":{"modules/StageNavModule.html":{},"index.html":{}}}],["cluster_stagenavmodule_exports",{"_index":3256,"title":{},"body":{"modules/StageNavModule.html":{},"index.html":{}}}],["cluster_stagenavmodule_imports",{"_index":3258,"title":{},"body":{"modules/StageNavModule.html":{}}}],["cluster_taglistmodule",{"_index":3330,"title":{},"body":{"modules/TagListModule.html":{},"index.html":{}}}],["cluster_taglistmodule_declarations",{"_index":3332,"title":{},"body":{"modules/TagListModule.html":{},"index.html":{}}}],["cluster_taglistmodule_exports",{"_index":3331,"title":{},"body":{"modules/TagListModule.html":{},"index.html":{}}}],["cluster_tagsearchmodule",{"_index":3457,"title":{},"body":{"modules/TagSearchModule.html":{},"index.html":{}}}],["cluster_tagsearchmodule_declarations",{"_index":3459,"title":{},"body":{"modules/TagSearchModule.html":{},"index.html":{}}}],["cluster_tagsearchmodule_exports",{"_index":3458,"title":{},"body":{"modules/TagSearchModule.html":{},"index.html":{}}}],["cluster_themingmodule",{"_index":3464,"title":{},"body":{"modules/ThemingModule.html":{},"index.html":{}}}],["cluster_themingmodule_providers",{"_index":3465,"title":{},"body":{"modules/ThemingModule.html":{},"index.html":{}}}],["cluster_videomodallaunchermodule",{"_index":3591,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"index.html":{}}}],["cluster_videomodallaunchermodule_declarations",{"_index":3592,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"index.html":{}}}],["cluster_videomodallaunchermodule_exports",{"_index":3594,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"index.html":{}}}],["cluster_videomodallaunchermodule_imports",{"_index":3593,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"index.html":{}}}],["cluster_videomodalmodule",{"_index":3598,"title":{},"body":{"modules/VideoModalModule.html":{},"index.html":{}}}],["cluster_videomodalmodule_declarations",{"_index":3600,"title":{},"body":{"modules/VideoModalModule.html":{},"index.html":{}}}],["cluster_videomodalmodule_exports",{"_index":3599,"title":{},"body":{"modules/VideoModalModule.html":{},"index.html":{}}}],["cluster_visibilitymenumodule",{"_index":3665,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"index.html":{}}}],["cluster_visibilitymenumodule_declarations",{"_index":3666,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"index.html":{}}}],["cluster_visibilitymenumodule_exports",{"_index":3667,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"index.html":{}}}],["cluster_visibilitytogglemodule",{"_index":3692,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["cluster_visibilitytogglemodule_declarations",{"_index":3693,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["cluster_visibilitytogglemodule_exports",{"_index":3694,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["coalescing",{"_index":2369,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["code",{"_index":3558,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["code.touppercase().endswith(lookup",{"_index":2372,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["coercebooleanproperty",{"_index":1712,"title":{},"body":{"classes/InitializationState.html":{}}}],["collapse",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["collapsed",{"_index":1721,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":1814,"title":{},"body":{"classes/InitializationState.html":{}}}],["collection",{"_index":12,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["collidedids",{"_index":998,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["collidedids.has(node['@id",{"_index":1002,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["collision",{"_index":750,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["collisions",{"_index":114,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["collisionsendpoint",{"_index":597,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["color",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["column",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["combined",{"_index":1323,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":92,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["combinelatest([nonemptyorganiri",{"_index":897,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([regs",{"_index":2789,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["combinelatest([this.entities",{"_index":111,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["combinelatest([this.model.anatomicalstructures",{"_index":841,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.page.state",{"_index":2692,"title":{},"body":{"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["combinelatest([this.referenceorgansimplenodes",{"_index":875,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.reg.state",{"_index":2466,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["combinelatest([this.rotation",{"_index":830,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.theme",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["come",{"_index":3285,"title":{},"body":{"modules/StoreModule.html":{}}}],["comma",{"_index":1498,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["commas",{"_index":1483,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["commonmodule",{"_index":740,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["compatibility",{"_index":3282,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":1830,"title":{},"body":{"classes/InitializationState.html":{}}}],["completes",{"_index":3401,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["completion",{"_index":1820,"title":{},"body":{"classes/InitializationState.html":{}}}],["component",{"_index":179,"title":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["component's",{"_index":1148,"title":{},"body":{"components/ContentComponent.html":{}}}],["component.component",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":591,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["component.component.ts:31",{"_index":607,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:32",{"_index":623,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:33",{"_index":624,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:34",{"_index":617,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:35",{"_index":611,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":620,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":609,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:38",{"_index":613,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:39",{"_index":621,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:40",{"_index":622,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:41",{"_index":614,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:42",{"_index":615,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:43",{"_index":616,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:44",{"_index":618,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:45",{"_index":605,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["componentref",{"_index":3482,"title":{},"body":{"injectables/ThemingService.html":{}}}],["components",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["computed",{"_index":85,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["computes",{"_index":3444,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["concat",{"_index":2224,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["concatmap",{"_index":772,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["concatmap((jsonld",{"_index":974,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["config",{"_index":1037,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"miscellaneous/variables.html":{}}}],["config.cancelregistration",{"_index":2472,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["config.isolated",{"_index":2066,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["config.register",{"_index":2471,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["config.user",{"_index":2474,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["configmodule",{"_index":1032,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["configstore",{"_index":606,"title":{},"body":{"components/AppWebComponent.html":{}}}],["configuration",{"_index":1597,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["confirm('changes",{"_index":2479,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["connect",{"_index":2086,"title":{},"body":{"injectables/MessageService.html":{}}}],["connect(source",{"_index":2075,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connected",{"_index":1093,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connects",{"_index":2074,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["consentservice",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["consider",{"_index":3281,"title":{},"body":{"modules/StoreModule.html":{}}}],["const",{"_index":115,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["constructor(@optional",{"_index":1359,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ThemingService.html":{}}}],["constructor(config",{"_index":2087,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(configstore",{"_index":604,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(defaulttheme",{"_index":3477,"title":{},"body":{"injectables/ThemingService.html":{}}}],["constructor(dialog",{"_index":2684,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["constructor(dialogref",{"_index":3008,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["constructor(drawer",{"_index":3521,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["constructor(el",{"_index":3356,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["constructor(ga",{"_index":701,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["constructor(globalconfig",{"_index":2407,"title":{},"body":{"injectables/PageState.html":{}}}],["constructor(globals",{"_index":2520,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["constructor(injector",{"_index":28,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"injectables/RegistrationState.html":{},"injectables/SceneState.html":{}}}],["constructor(messageservice",{"_index":1049,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{}}}],["constructor(model",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{}}}],["constructor(page",{"_index":1603,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["constructor(private",{"_index":140,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"modules/AppModule.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["constructor(readonly",{"_index":1607,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(registry",{"_index":1697,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["constructor(renderer2",{"_index":3550,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["constructor(source",{"_index":2080,"title":{},"body":{"classes/MessageChannel.html":{}}}],["contain",{"_index":1311,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{}}}],["contained",{"_index":2095,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["container",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["container.component.html",{"_index":1047,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":1046,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.component",{"_index":1524,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":468,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["containerpayload",{"_index":1314,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":1106,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["containing",{"_index":656,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["contains",{"_index":681,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ExtractionSet.html":{},"classes/InitializationState.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["content",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["content'},{'name",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["content.component",{"_index":2622,"title":{},"body":{"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{}}}],["content.component.html",{"_index":1137,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["content.component.scss",{"_index":1136,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{}}}],["content.component.ts",{"_index":2529,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:108",{"_index":2557,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:119",{"_index":2560,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:132",{"_index":2555,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:141",{"_index":2552,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:20",{"_index":2547,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:23",{"_index":2575,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:26",{"_index":2569,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:29",{"_index":2576,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:32",{"_index":2572,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:35",{"_index":2565,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:38",{"_index":2564,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:41",{"_index":2567,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:44",{"_index":2568,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:47",{"_index":2546,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:60",{"_index":2566,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:89",{"_index":2563,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:99",{"_index":2549,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.module",{"_index":2712,"title":{},"body":{"modules/RegistrationModalModule.html":{}}}],["content.module.ts",{"_index":2618,"title":{},"body":{"modules/RegistrationContentModule.html":{}}}],["content/content.component",{"_index":1062,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{}}}],["content/registration",{"_index":2528,"title":{},"body":{"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{}}}],["content1",{"_index":1084,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content2",{"_index":1088,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren",{"_index":1059,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(contentcomponent",{"_index":1083,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(drawercomponent",{"_index":1079,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentcomponent",{"_index":470,"title":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["contentcontainerchanged",{"_index":1303,"title":{"interfaces/ContentContainerChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["contentmodule",{"_index":536,"title":{"modules/ContentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContentModule.html":{},"index.html":{},"modules.html":{}}}],["context",{"_index":2888,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["context.jsonld",{"_index":2890,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":2602,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["control",{"_index":2649,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["controller",{"_index":3392,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["controls",{"_index":3046,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["convention",{"_index":1327,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{}}}],["converted",{"_index":2646,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["converting",{"_index":1493,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["converts",{"_index":2432,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["cord",{"_index":1448,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["cord.svg",{"_index":1449,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":1360,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":568,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/anatomical",{"_index":3317,"title":{},"body":{"components/TagListComponent.html":{},"components/TagSearchComponent.html":{}}}],["core/models/extraction",{"_index":1558,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["core/models/meta",{"_index":2971,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["core/models/visibility",{"_index":1976,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["core/services/config/config",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{}}}],["core/services/theming/theming.service",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["core/store/anatomical",{"_index":3045,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["core/store/model/model.state",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["core/store/page/page.state",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["core/store/reference",{"_index":2690,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["core/store/registration/registration.state",{"_index":1201,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{}}}],["core/store/scene/scene.state",{"_index":1202,"title":{},"body":{"components/ContentComponent.html":{}}}],["coremodule",{"_index":537,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["correct",{"_index":1621,"title":{},"body":{"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["corresponding",{"_index":3380,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["count",{"_index":3388,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["counter",{"_index":2044,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["countmapping",{"_index":3344,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["createcustomelement",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":586,"title":{},"body":{"modules/AppModule.html":{}}}],["createentitycollections",{"_index":81,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["creates",{"_index":32,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["createscenenodes(organiri",{"_index":981,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["creating",{"_index":1066,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["creation",{"_index":2948,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["creation_date",{"_index":2896,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["creator",{"_index":2893,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["creator_first_name",{"_index":2865,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["creator_last_name",{"_index":2867,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["creator_middle_name",{"_index":2869,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["creator_orcid",{"_index":2871,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["crosshairs",{"_index":1156,"title":{},"body":{"components/ContentComponent.html":{}}}],["css",{"_index":1198,"title":{},"body":{"components/ContentComponent.html":{}}}],["cube.svg",{"_index":1473,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":1549,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["currentdate",{"_index":2795,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["currentidentifier",{"_index":2792,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["currently",{"_index":1557,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{}}}],["currentorgan",{"_index":2530,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["currentsex",{"_index":2531,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["cursor",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["customelements.define('ccf",{"_index":588,"title":{},"body":{"modules/AppModule.html":{}}}],["customizable",{"_index":3670,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["customization",{"_index":3753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customized",{"_index":1870,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["d",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["dark",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["data",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}}}],["data.json",{"_index":2341,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.label",{"_index":2984,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{}}}],["data.metadata",{"_index":3022,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["data.push",{"_index":2877,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.registrationcallbackset",{"_index":3023,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["data.sex",{"_index":2818,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.side",{"_index":2820,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.state",{"_index":788,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{}}}],["data.state.ts",{"_index":2304,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["data.state.ts:108",{"_index":2526,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:133",{"_index":2524,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:158",{"_index":2522,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:72",{"_index":2521,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:83",{"_index":2525,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.ts",{"_index":2092,"title":{},"body":{"interfaces/MetaDataField.html":{},"miscellaneous/typealiases.html":{}}}],["data.value",{"_index":3030,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["data/reference",{"_index":787,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["dataaction",{"_index":48,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["database",{"_index":767,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["datatype",{"_index":1926,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["date().toisostring().split('t')[0",{"_index":2796,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["db",{"_index":856,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.anatomicalstructures[organiri",{"_index":865,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.extractionsets[organiri",{"_index":2221,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.organirilookup[key",{"_index":2374,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["db.organspatialentities[organiri",{"_index":987,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.placementpatches[place?.target",{"_index":2348,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["db.scenenodelookup[item.id",{"_index":861,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.scenenodelookup[node['@id",{"_index":985,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.simplescenenodelookup[item.id",{"_index":862,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.simplescenenodelookup[node['@id",{"_index":870,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["dboptions",{"_index":3738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":1179,"title":{},"body":{"components/ContentComponent.html":{}}}],["debugmode",{"_index":1139,"title":{},"body":{"components/ContentComponent.html":{}}}],["decides",{"_index":2950,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["declarations",{"_index":529,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["declare",{"_index":1594,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["decoration",{"_index":1615,"title":{},"body":{"components/HeaderComponent.html":{}}}],["decorator",{"_index":91,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagSearchComponent.html":{}}}],["decorators",{"_index":47,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["deep",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["def",{"_index":1654,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def.html",{"_index":1652,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def.url",{"_index":1666,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def?.url",{"_index":1663,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["default_block_size",{"_index":668,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"miscellaneous/variables.html":{}}}],["default_collisions_endpoint",{"_index":799,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["default_icons",{"_index":1384,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["default_icons.filter((def",{"_index":1651,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default_icons.find((icon",{"_index":1660,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default_rotation",{"_index":3086,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"miscellaneous/variables.html":{}}}],["default_search_limit",{"_index":3397,"title":{},"body":{"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["default_search_throttle",{"_index":3400,"title":{},"body":{"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["default_slices_config",{"_index":3145,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"miscellaneous/variables.html":{}}}],["default_theme",{"_index":569,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["defaulticondefinition",{"_index":1364,"title":{"interfaces/DefaultIconDefinition.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["defaultposition",{"_index":2174,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["defaults",{"_index":108,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["defaulttheme",{"_index":3479,"title":{},"body":{"injectables/ThemingService.html":{}}}],["defer",{"_index":770,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["deferred",{"_index":1730,"title":{},"body":{"classes/InitializationState.html":{}}}],["define",{"_index":1511,"title":{},"body":{"interfaces/DocumentationContent.html":{}}}],["defined",{"_index":30,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["definition",{"_index":1368,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.html",{"_index":1676,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.url",{"_index":1675,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["degree",{"_index":2917,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["delay",{"_index":2111,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["delay(0",{"_index":2235,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["delta",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["depend",{"_index":1650,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["dependencies",{"_index":528,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["deps",{"_index":1039,"title":{},"body":{"modules/ConfigModule.html":{}}}],["depth",{"_index":659,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["descendants",{"_index":1080,"title":{},"body":{"components/ContainerComponent.html":{}}}],["description",{"_index":10,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["destroy",{"_index":3404,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["destroyed",{"_index":3402,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["destruction",{"_index":3413,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["details",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["detailslabelcomponent",{"_index":472,"title":{"components/DetailsLabelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["detailslabelmodule",{"_index":1503,"title":{"modules/DetailsLabelModule.html":{}},"body":{"modules/DetailsLabelModule.html":{},"index.html":{},"modules.html":{}}}],["detection",{"_index":1113,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["detector",{"_index":1053,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["determines",{"_index":1554,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/TagSearchComponent.html":{}}}],["dev",{"_index":1233,"title":{},"body":{"components/ContentComponent.html":{}}}],["development",{"_index":2332,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["developmentmode",{"_index":3280,"title":{},"body":{"modules/StoreModule.html":{}}}],["dialog",{"_index":1516,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["dialog's",{"_index":3011,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["dialogopen",{"_index":2682,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["dialogref",{"_index":2533,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["dialogref.afterclosed().subscribe((data",{"_index":2996,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["dialogref.disableclose",{"_index":2587,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["dialogue",{"_index":2966,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["didn't",{"_index":2553,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["different",{"_index":1851,"title":{},"body":{"classes/InitializationState.html":{}}}],["dimension",{"_index":683,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["dimension_units",{"_index":2906,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["dimensions",{"_index":658,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["dims",{"_index":940,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.x",{"_index":2177,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.y",{"_index":2179,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.z",{"_index":2180,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims[0",{"_index":1209,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[1",{"_index":1211,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[2",{"_index":1212,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[i",{"_index":948,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["direction",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["directive",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["directives",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["disable",{"_index":790,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["disabled",{"_index":1917,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/StoreModule.html":{},"components/VisibilityToggleComponent.html":{}}}],["disabledbworker",{"_index":3737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disablepositionchange",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["disables",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["disablewhenclicked",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["display",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["displayed",{"_index":1488,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["displayerrors",{"_index":2716,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["displaying",{"_index":1232,"title":{},"body":{"components/ContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["distinct",{"_index":2112,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilchanged",{"_index":773,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilchanged((v1",{"_index":2151,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilchanged(isequal",{"_index":873,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["distinctuntilkeychanged",{"_index":1200,"title":{},"body":{"components/ContentComponent.html":{}}}],["distinctuntilkeychanged('x",{"_index":1173,"title":{},"body":{"components/ContentComponent.html":{}}}],["distinctuntilkeychanged('y",{"_index":1174,"title":{},"body":{"components/ContentComponent.html":{}}}],["div",{"_index":3687,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["divider",{"_index":1986,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{}}}],["dobootstrap",{"_index":549,"title":{},"body":{"modules/AppModule.html":{}}}],["document",{"_index":3211,"title":{},"body":{"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{}}}],["document.getelementsbyclassname('modal",{"_index":3024,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["document:click",{"_index":3195,"title":{},"body":{"components/StageNavComponent.html":{}}}],["document:click(target",{"_index":3208,"title":{},"body":{"components/StageNavComponent.html":{}}}],["document:keydown",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["document:keydown(target",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["document:mousedown",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["document:mousedown(target",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1513,"title":{},"body":{"interfaces/DocumentationContent.html":{}}}],["documentationcontent",{"_index":1509,"title":{"interfaces/DocumentationContent.html":{}},"body":{"interfaces/DocumentationContent.html":{}}}],["dom",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["domsanitizer",{"_index":1640,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["don't",{"_index":1649,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["done",{"_index":3684,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["donor",{"_index":2663,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["dot",{"_index":3059,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["down",{"_index":3201,"title":{},"body":{"components/StageNavComponent.html":{}}}],["download",{"_index":1218,"title":{},"body":{"components/ContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{}}}],["downloads",{"_index":2736,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["draft",{"_index":954,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["draftplacement",{"_index":945,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["draggable",{"_index":3091,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["drawer",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":476,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["drawer.close",{"_index":3538,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.closeexpanded",{"_index":3537,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.component.html",{"_index":1741,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.component.scss",{"_index":1742,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.open",{"_index":3539,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.position",{"_index":1124,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawer/drawer.component",{"_index":1063,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["drawercomponent",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["drawercomponent).position",{"_index":1284,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["drawercontainerschanged",{"_index":1310,"title":{"interfaces/DrawerContainersChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawerinitialized",{"_index":1317,"title":{"interfaces/DrawerInitialized.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":538,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"index.html":{},"modules.html":{}}}],["drawerpayload",{"_index":1322,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":1078,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter((drawer",{"_index":1123,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawertoggled",{"_index":1318,"title":{"interfaces/DrawerToggled.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drop",{"_index":3200,"title":{},"body":{"components/StageNavComponent.html":{}}}],["dropdown",{"_index":1536,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["dropdown'},{'name",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["dropdown.component",{"_index":1583,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{}}}],["dropdown.component.html",{"_index":1539,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":1538,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":1535,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:17",{"_index":1550,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:22",{"_index":1547,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:27",{"_index":1545,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:32",{"_index":1544,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:46",{"_index":1552,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:57",{"_index":1553,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.module",{"_index":2014,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["dropdown.module.ts",{"_index":1580,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{}}}],["dropdown/extraction",{"_index":1534,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/LeftSidebarModule.html":{}}}],["dropdowncontainer",{"_index":3251,"title":{},"body":{"components/StageNavComponent.html":{}}}],["duration",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent-1.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{}}}],["during",{"_index":3485,"title":{},"body":{"injectables/ThemingService.html":{}}}],["e",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["each",{"_index":1512,"title":{},"body":{"interfaces/DocumentationContent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["ease",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["easily",{"_index":3111,"title":{},"body":{"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["east",{"_index":801,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["ececec",{"_index":439,"title":{},"body":{"components/AppComponent.html":{}}}],["editregistration",{"_index":598,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{}}}],["editregistration(reg",{"_index":2729,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["el",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{}}}],["element",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["element's",{"_index":1878,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["element.getboundingclientrect",{"_index":1785,"title":{},"body":{"classes/InitializationState.html":{}}}],["element.nativeelement",{"_index":3511,"title":{},"body":{"injectables/ThemingService.html":{}}}],["elementref",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["ellipsis",{"_index":3661,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["emit",{"_index":3113,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["emits",{"_index":1548,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["emitted",{"_index":676,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["emitter",{"_index":677,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["emitting",{"_index":1767,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["empty",{"_index":795,"title":{},"body":{"interfaces/Collision.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["empty_result",{"_index":3393,"title":{},"body":{"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":1255,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["enables",{"_index":3087,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["end",{"_index":1075,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["end?.expanded",{"_index":1300,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["end?.opened",{"_index":1299,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["enddrawers",{"_index":1125,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers.length",{"_index":1128,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers[0",{"_index":1131,"title":{},"body":{"components/ContainerComponent.html":{}}}],["endexpanded",{"_index":1298,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["endings",{"_index":2857,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["entered",{"_index":2551,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entererrormode",{"_index":2945,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["entering",{"_index":670,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entire",{"_index":3272,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":3748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":1010,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.comment",{"_index":2219,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.label",{"_index":1030,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.placement",{"_index":1014,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.placement[0",{"_index":1013,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.representation_of",{"_index":2217,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.sex?.tolowercase",{"_index":2386,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side",{"_index":2383,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side.tolowercase",{"_index":2384,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side?.tolowercase",{"_index":2387,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.y_dimension",{"_index":1025,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.z_dimension].map((n",{"_index":1026,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity['@id",{"_index":1017,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entitycollections",{"_index":82,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["entry",{"_index":2270,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{}}}],["environment",{"_index":629,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["environment.customization",{"_index":644,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions",{"_index":640,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.googleanalyticstoken",{"_index":1357,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.production",{"_index":816,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["environment.skipunsavedchangesconfirmation",{"_index":2464,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["environments/environment",{"_index":630,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["ernvz1q4ke",{"_index":3763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":1069,"title":{},"body":{"components/ContainerComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{}}}],["error('the",{"_index":1361,"title":{},"body":{"modules/CoreModule.html":{}}}],["error(`multiple",{"_index":1077,"title":{},"body":{"components/ContainerComponent.html":{}}}],["errors",{"_index":1067,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":761,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["eslint",{"_index":789,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/consistent",{"_index":2124,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/member",{"_index":2116,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/naming",{"_index":1326,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{}}}],["eslint/no",{"_index":794,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["eslint/prefer",{"_index":2367,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["etc",{"_index":1321,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["event",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{}}}],["event'])@hostlistener('window:focusin",{"_index":3374,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["event.firstname.length",{"_index":2593,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["event.lastname.length",{"_index":2594,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["event.preventdefault",{"_index":2499,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["event.returnvalue",{"_index":2500,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["event.target",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{}}}],["eventemitter",{"_index":660,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["eventemitter(true",{"_index":1769,"title":{},"body":{"classes/InitializationState.html":{}}}],["events",{"_index":2611,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["evolution",{"_index":3325,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["except",{"_index":2051,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/StoreModule.html":{}}}],["executes",{"_index":3433,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["executesearch(text",{"_index":3435,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["executionstrategy",{"_index":3283,"title":{},"body":{"modules/StoreModule.html":{}}}],["expand",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["expand/collapse",{"_index":1824,"title":{},"body":{"classes/InitializationState.html":{}}}],["expand_collapse_params_default",{"_index":1726,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["expandcollapsedone",{"_index":1826,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":1764,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded/collapsed",{"_index":1717,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":1770,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandedstate",{"_index":1718,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":1720,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":1776,"title":{},"body":{"classes/InitializationState.html":{}}}],["expands",{"_index":1811,"title":{},"body":{"classes/InitializationState.html":{}}}],["expansion",{"_index":1990,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["expected",{"_index":3021,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["experimentation",{"_index":3054,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["explicit",{"_index":2738,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["export",{"_index":105,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["exportas",{"_index":1043,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["exports",{"_index":532,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["ext/operators",{"_index":2109,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extended",{"_index":1723,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":15,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["external",{"_index":73,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["extraction",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["extraction_set_dropdown",{"_index":1561,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionset",{"_index":1527,"title":{"interfaces/ExtractionSet.html":{}},"body":{"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extractionsetchanged",{"_index":1541,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionsetchanged(value",{"_index":1551,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionsetdropdowncomponent",{"_index":477,"title":{"components/ExtractionSetDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["extractionsetdropdownmodule",{"_index":1576,"title":{"modules/ExtractionSetDropdownModule.html":{}},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/LeftSidebarModule.html":{},"index.html":{},"modules.html":{}}}],["extractionsets",{"_index":2096,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extractionsites",{"_index":845,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extractionsitetooltip",{"_index":1957,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["extracts",{"_index":3379,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["extrapulmonary",{"_index":1401,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye",{"_index":1403,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye.svg",{"_index":1404,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1438,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["factor",{"_index":2309,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["factory",{"_index":2042,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":3026,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["faded",{"_index":1241,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["fadeinout",{"_index":1244,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["fallopian",{"_index":1405,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["false=right",{"_index":1932,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["female",{"_index":1593,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["fetch",{"_index":1381,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["fetched",{"_index":2786,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["fetched]).pipe(map(([local",{"_index":2790,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["fetchpreviousregistrations",{"_index":599,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["fetchpreviousregistrationscallback",{"_index":612,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":555,"title":{},"body":{"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/UserName.html":{}}}],["field)?.value",{"_index":2985,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["fields",{"_index":3035,"title":{},"body":{"components/ReviewModalComponent.html":{},"components/TagSearchComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["file(s",{"_index":2656,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["fileinput",{"_index":1862,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["fileinputelement",{"_index":1887,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["fileinputelement.click",{"_index":1889,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader",{"_index":1892,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader.onload",{"_index":1893,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader.readastext(file",{"_index":1899,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["files",{"_index":1871,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["fill",{"_index":1619,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filler",{"_index":733,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["filter",{"_index":774,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filter((item",{"_index":983,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter((node",{"_index":866,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(item",{"_index":857,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filtered",{"_index":2055,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["filternodebbox(nodes",{"_index":1003,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filternodecollisions(nodes",{"_index":997,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filternulls",{"_index":2107,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["finished",{"_index":1315,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["fired",{"_index":3214,"title":{},"body":{"components/StageNavComponent.html":{}}}],["first",{"_index":2276,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{}}}],["firstname",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{}}}],["firstnamevalidator",{"_index":2260,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["fit",{"_index":3572,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["flex",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["float",{"_index":3032,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["floatlabel",{"_index":584,"title":{},"body":{"modules/AppModule.html":{}}}],["focused",{"_index":3171,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["focusin",{"_index":3353,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["font",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["footer",{"_index":3036,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["foreach((def",{"_index":1656,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["form",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{}}}],["format",{"_index":2414,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["formatted",{"_index":1495,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["formcontrol",{"_index":2647,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["formsmodule",{"_index":2301,"title":{},"body":{"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/TagSearchModule.html":{}}}],["found",{"_index":3053,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["from([this.channel",{"_index":2069,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["from(fetch(url)).pipe",{"_index":2343,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["from(search(text",{"_index":3436,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["full",{"_index":1724,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["function",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagSearchComponent.html":{},"components/VisibilityMenuComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":3696,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2515,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"miscellaneous/variables.html":{}}}],["ga",{"_index":679,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["gap",{"_index":2604,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/SlicesInputComponent.html":{}}}],["gatoken",{"_index":1356,"title":{},"body":{"modules/CoreModule.html":{}}}],["general",{"_index":2393,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["generic",{"_index":1912,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["genericmessage",{"_index":1306,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":1307,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":1308,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["getarguments",{"_index":1695,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getclassend",{"_index":3528,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getcollisions(jsonld",{"_index":988,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getdisabled",{"_index":2969,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["geterrormessage",{"_index":2629,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["getglobalskipconfirmation",{"_index":2449,"title":{},"body":{"injectables/PageState.html":{}}}],["gethaschanges",{"_index":2451,"title":{},"body":{"injectables/PageState.html":{}}}],["gethasthicknessvalue",{"_index":3166,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["gethaswrappedcontent",{"_index":1055,"title":{},"body":{"components/ContainerComponent.html":{}}}],["geticon",{"_index":3529,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getid",{"_index":3610,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["getid(_index",{"_index":3623,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["getislighttheme",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["getisvalid",{"_index":2762,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["getjsonld",{"_index":2754,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["getlatestiri(organ",{"_index":2388,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getlatesttags",{"_index":78,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["getleft",{"_index":1933,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["getmessages",{"_index":2053,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsource",{"_index":2077,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsource(source",{"_index":2056,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsources",{"_index":2078,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsources(sources",{"_index":2060,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmetadata",{"_index":2752,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["getmethodname",{"_index":1686,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getname",{"_index":2281,"title":{},"body":{"components/NameInputComponent.html":{}}}],["getnodebbox",{"_index":3699,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getnodebbox(model",{"_index":803,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["getnodebbox(placement",{"_index":1005,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getnodecollisions",{"_index":3134,"title":{},"body":{"injectables/SceneState.html":{}}}],["getnodes",{"_index":3126,"title":{},"body":{"injectables/SceneState.html":{}}}],["getoption('editregistration",{"_index":2804,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["getoption('organ",{"_index":2234,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["getorgandata",{"_index":2518,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getorgandata(iri",{"_index":2377,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getorganspatialentity(organiri",{"_index":986,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getoriginscene",{"_index":765,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getoriginscene(organ",{"_index":849,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getplacementcube",{"_index":3139,"title":{},"body":{"injectables/SceneState.html":{}}}],["getpreviousregistrationnodes",{"_index":1008,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getpreviousregistrations",{"_index":2760,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["getreferenceorganiri",{"_index":2363,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getreferenceorganiri(organ",{"_index":2523,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getreferenceorgannodes",{"_index":3130,"title":{},"body":{"injectables/SceneState.html":{}}}],["getreferenceorgansimplenodes",{"_index":3132,"title":{},"body":{"injectables/SceneState.html":{}}}],["getrotatednodes",{"_index":3128,"title":{},"body":{"injectables/SceneState.html":{}}}],["getrotation",{"_index":3142,"title":{},"body":{"injectables/SceneState.html":{}}}],["gets",{"_index":1709,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ReviewButtonComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["getskipconfirmation",{"_index":2447,"title":{},"body":{"injectables/PageState.html":{}}}],["getsourcedb",{"_index":2337,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getspatialkeyboardaxis",{"_index":3137,"title":{},"body":{"injectables/SceneState.html":{}}}],["gettags",{"_index":75,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["getter/setter",{"_index":1758,"title":{},"body":{"classes/InitializationState.html":{}}}],["gettheme",{"_index":3473,"title":{},"body":{"injectables/ThemingService.html":{}}}],["getthrottledjsonld",{"_index":2756,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["gettissueblockscene",{"_index":766,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getupdatedcheckedresults(result",{"_index":3446,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["getvalid",{"_index":2758,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["give",{"_index":2045,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["given",{"_index":1494,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["gizmo",{"_index":962,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["gland",{"_index":1398,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":13,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["global.editregistration",{"_index":2698,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["global_config",{"_index":1035,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["globalconfig",{"_index":226,"title":{"interfaces/GlobalConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["globalconfig.getoption('fetchpreviousregistrations').pipe",{"_index":2787,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["globalconfigfactory",{"_index":1036,"title":{},"body":{"modules/ConfigModule.html":{},"miscellaneous/functions.html":{}}}],["globalconfigfactory(globals",{"_index":1598,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/functions.html":{}}}],["globalconfigstate",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["globally",{"_index":2334,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["globals",{"_index":2329,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["globals.get('ruiconfig",{"_index":1599,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["globalskipconfirmation",{"_index":2405,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["globalsservice",{"_index":1034,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":1793,"title":{},"body":{"classes/InitializationState.html":{}}}],["globalthis['ruiconfig",{"_index":641,"title":{},"body":{"components/AppWebComponent.html":{}}}],["google",{"_index":665,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["googleanalyticsservice",{"_index":663,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["googleanalyticstoken",{"_index":3757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":3711,"title":{},"body":{"modules.html":{}}}],["group",{"_index":2667,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{}}}],["grow",{"_index":734,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["half",{"_index":1722,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":1377,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["handleclick",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["handleclick(target",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["handlefile",{"_index":1863,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handlefile(event",{"_index":1874,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handlekey",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["handlekey(target",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["handlemessage",{"_index":3519,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["handlemessage(_msg",{"_index":1116,"title":{},"body":{"components/ContainerComponent.html":{}}}],["handlemessage(msg",{"_index":1275,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["handlenodedrag",{"_index":1143,"title":{},"body":{"components/ContentComponent.html":{}}}],["handlenodedrag(event",{"_index":1151,"title":{},"body":{"components/ContentComponent.html":{}}}],["handler",{"_index":1880,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handleregistrationselect",{"_index":2541,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["handleregistrationupload",{"_index":2630,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["handleregistrationupload(reg",{"_index":2638,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["handles",{"_index":1492,"title":{},"body":{"components/DetailsLabelComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["handling",{"_index":1641,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["happy",{"_index":3276,"title":{},"body":{"modules/StoreModule.html":{}}}],["haschanges",{"_index":2406,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["hascheckedtags",{"_index":3349,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hasthicknessvalue",{"_index":3147,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["haswrappedcontent",{"_index":1048,"title":{},"body":{"components/ContainerComponent.html":{}}}],["header",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganConfig.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["header'},{'name",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["header.component",{"_index":1631,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":1602,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1601,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":480,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["headermodule",{"_index":539,"title":{"modules/HeaderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"index.html":{},"modules.html":{}}}],["headers",{"_index":993,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["heart",{"_index":1409,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["heart.svg",{"_index":1410,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["helper",{"_index":176,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":149,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["hidden",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hides",{"_index":1178,"title":{},"body":{"components/ContentComponent.html":{}}}],["highlighted",{"_index":3605,"title":{},"body":{"interfaces/VisibilityItem.html":{}}}],["hint",{"_index":71,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["home",{"_index":1616,"title":{},"body":{"components/HeaderComponent.html":{}}}],["homeurl",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding",{"_index":661,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding('@expandcollapse",{"_index":1775,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('@fadeinout",{"_index":1259,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbinding('@openclose",{"_index":1774,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('class",{"_index":673,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding('class.ccf",{"_index":1753,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.cff",{"_index":1258,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbinding('style.margin",{"_index":1260,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbindings",{"_index":700,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostlistener",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":1825,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('@openclose.done",{"_index":1821,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('click",{"_index":3426,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hostlistener('click')@hostlistener('focusin",{"_index":3377,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hostlistener('document:click",{"_index":3215,"title":{},"body":{"components/StageNavComponent.html":{}}}],["hostlistener('document:keydown",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["hostlistener('document:mousedown",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["hostlistener('focusin",{"_index":3427,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hostlistener('window:click",{"_index":3373,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hostlistener('window:focusin",{"_index":3429,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hostlisteners",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{}}}],["hover",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["hovered",{"_index":1973,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["html",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["htmlelement",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["htmlinputelement",{"_index":688,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["htmlscriptelement",{"_index":3567,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["http",{"_index":976,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["http://purl.org/ccf/1.5/${this.currentidentifier",{"_index":2891,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["http://purl.org/ccf/1.5/${this.currentidentifier}_placement",{"_index":2907,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhmaleorgans_vhm_spleen_colic_surface",{"_index":963,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["httpclient",{"_index":753,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["httpclientmodule",{"_index":1348,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://assets.hubmapconsortium.org",{"_index":3750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://ccf",{"_index":3740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":965,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["https://orcid.org",{"_index":2517,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["https://pfn8zf2gtu.us",{"_index":800,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["https://portal.hubmapconsortium.org",{"_index":3745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":3284,"title":{},"body":{"modules/StoreModule.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":3569,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["hubmap",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"components/VideoModalLauncherComponent.html":{},"miscellaneous/variables.html":{}}}],["hubmapassetsurl",{"_index":3749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubmapdataservice",{"_index":3743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubmapdataurl",{"_index":3746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubmapportalurl",{"_index":3744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubmaptoken",{"_index":3751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["human",{"_index":3754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i18nplural",{"_index":3454,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["icon",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ReviewModalComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["icon.add",{"_index":3051,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["icon.name",{"_index":1661,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["icon.namespace",{"_index":1662,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["icondefinition",{"_index":1632,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistry",{"_index":1642,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":1643,"title":{"injectables/IconRegistryState.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1382,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["icons.ts",{"_index":1367,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["icons/organ",{"_index":1388,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":131,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["identifier",{"_index":2026,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{}}}],["identifiers",{"_index":3721,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idmatches(ontologyid",{"_index":2157,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ids",{"_index":2746,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["idwithhyphens",{"_index":2513,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["iframe",{"_index":3555,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["ignoredkeys",{"_index":2147,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ignoredkeys.includes(key",{"_index":2149,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["iif",{"_index":2453,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["iif(!!config.user",{"_index":2473,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["immutable",{"_index":2305,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/functions.html":{}}}],["implementation",{"_index":175,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["implements",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["implies",{"_index":1320,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["import",{"_index":80,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["imported",{"_index":1362,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["imports",{"_index":546,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["in's",{"_index":1968,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":1994,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["infinity",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["infix",{"_index":728,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["info.side",{"_index":2385,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["infobuttonmodule",{"_index":3069,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["inform",{"_index":2636,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["information",{"_index":1158,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ExtractionSet.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["inherit",{"_index":730,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{}}}],["init",{"_index":3563,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["initial",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{}}}],["initialconfig",{"_index":639,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialization",{"_index":1797,"title":{},"body":{"classes/InitializationState.html":{}}}],["initializationstate",{"_index":1701,"title":{"classes/InitializationState.html":{}},"body":{"classes/InitializationState.html":{}}}],["initialize",{"_index":3474,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(component",{"_index":3481,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(element",{"_index":3486,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialized",{"_index":1280,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["initializer",{"_index":3484,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializes",{"_index":55,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["initializing",{"_index":1316,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["initialregistration",{"_index":2774,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["initialwithchanges",{"_index":2863,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["initskipconfirmationlisteners",{"_index":2488,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["inject",{"_index":2030,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/ThemingService.html":{},"components/VideoModalComponent.html":{}}}],["inject(default_theme",{"_index":3499,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inject(document",{"_index":3562,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":3016,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["inject(message_service_config",{"_index":2065,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AnatomicalStructureTagState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"injectables/RegistrationState.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"interfaces/XYZTriplet.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"injectables/RegistrationState.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"index.html":{}}}],["injected",{"_index":3013,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["injecting",{"_index":145,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["injectiontoken",{"_index":1588,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/ThemingService.html":{}}}],["injectiontoken('default",{"_index":3495,"title":{},"body":{"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('global",{"_index":1596,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('message",{"_index":2040,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":29,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["injector.get(overlaycontainer",{"_index":3512,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(renderer2",{"_index":3510,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(themingservice",{"_index":3497,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inline",{"_index":3060,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["input",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["input'},{'name",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["input.component",{"_index":749,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.component.html",{"_index":671,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.scss",{"_index":672,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.ts",{"_index":654,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{},"miscellaneous/variables.html":{}}}],["input.component.ts:31",{"_index":3164,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:34",{"_index":704,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:36",{"_index":3162,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:38",{"_index":2267,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:39",{"_index":703,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:41",{"_index":3163,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:43",{"_index":2274,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:44",{"_index":702,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:46",{"_index":3167,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:48",{"_index":2277,"title":{},"body":{"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["input.component.ts:53",{"_index":2279,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:59",{"_index":706,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{}}}],["input.component.ts:63",{"_index":2283,"title":{},"body":{"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["input.component.ts:69",{"_index":705,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:73",{"_index":3165,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:79",{"_index":2265,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:94",{"_index":2269,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.module",{"_index":2017,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RightSidebarModule.html":{}}}],["input.module.ts",{"_index":739,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.target",{"_index":687,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input/block",{"_index":653,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"miscellaneous/variables.html":{}}}],["input/name",{"_index":2016,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"interfaces/UserName.html":{}}}],["input/slices",{"_index":3075,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"miscellaneous/variables.html":{}}}],["input[type='number",{"_index":709,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["inputarray",{"_index":1496,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputarray.filter((item",{"_index":1499,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputevent",{"_index":2271,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputs",{"_index":594,"title":{},"body":{"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["inputtarget",{"_index":686,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputtarget.files",{"_index":1890,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["inputtarget.files[0",{"_index":1891,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["inputtarget.value",{"_index":690,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputted",{"_index":2956,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["inputting",{"_index":2258,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["insertitem",{"_index":2764,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["insertitem(registration",{"_index":2840,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["inside",{"_index":1517,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["instance",{"_index":33,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["instanceof",{"_index":3430,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["instant",{"_index":1716,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":3202,"title":{},"body":{"components/StageNavComponent.html":{}}}],["interface",{"_index":106,"title":{"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}}}],["interfaces",{"_index":178,"title":{},"body":{"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"index.html":{}}}],["interval",{"_index":3395,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["interval(this.searchthrottle",{"_index":3407,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["intestine",{"_index":1417,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["intestine.svg",{"_index":1418,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["invalid",{"_index":2637,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["invisible",{"_index":1252,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["iri",{"_index":125,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["iris",{"_index":2834,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["iris.has(item.id",{"_index":2838,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["is3dview",{"_index":1140,"title":{},"body":{"components/ContentComponent.html":{}}}],["isdatavalid",{"_index":2718,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["isdatavalid(page",{"_index":2731,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["isdropdownactive",{"_index":3185,"title":{},"body":{"components/StageNavComponent.html":{}}}],["isdropdownhidden",{"_index":3186,"title":{},"body":{"components/StageNavComponent.html":{}}}],["isequal",{"_index":768,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["islighttheme",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["ismultiple",{"_index":1542,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["isnan(this.slicesconfig.thickness",{"_index":3148,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["isnarrowview",{"_index":1141,"title":{},"body":{"components/ContentComponent.html":{}}}],["isolated",{"_index":2037,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["isorcidvalid",{"_index":2398,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["isvalid",{"_index":2725,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["item",{"_index":785,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ExtractionSet.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["item).join",{"_index":1500,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["item.id",{"_index":868,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item.name",{"_index":2839,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item.opacity",{"_index":859,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["item.tooltip",{"_index":1979,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["item.ts",{"_index":3604,"title":{},"body":{"interfaces/VisibilityItem.html":{}}}],["item.visible",{"_index":858,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item?.tooltip",{"_index":1977,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["items",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["items.length",{"_index":3442,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["items.slice(0",{"_index":3443,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["itemschange",{"_index":3617,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["j9hwv9qpj4",{"_index":3761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1497,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["json",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["json.parse(filereader.result",{"_index":1894,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["json.stringify(jsonld",{"_index":992,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["json.stringify(jsonobj",{"_index":2853,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["json_file_reader",{"_index":1896,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["jsonfilereadercomponent",{"_index":482,"title":{"components/JsonFileReaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["jsonfilereadermodule",{"_index":1901,"title":{"modules/JsonFileReaderModule.html":{}},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationMetadataModule.html":{},"index.html":{},"modules.html":{}}}],["jsonld",{"_index":2723,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["jsonld_throttle_duration",{"_index":2775,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/variables.html":{}}}],["jsonobj",{"_index":2849,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["justify",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["keeps",{"_index":1971,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["key",{"_index":682,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/StoreModule.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{}}}],["keyboard",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["keyboardevent",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{}}}],["keys",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["kidney",{"_index":1411,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["kidneys",{"_index":1412,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["kidneys.svg",{"_index":1413,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["knee",{"_index":1414,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["knee.svg",{"_index":1415,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":132,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/DetailsLabelComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["label'},{'name",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["label.component",{"_index":1508,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label.component.html",{"_index":1485,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.scss",{"_index":1484,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts",{"_index":1476,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:15",{"_index":1489,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:20",{"_index":1487,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:29",{"_index":1491,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.module.ts",{"_index":1507,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label/details",{"_index":1475,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{}}}],["labeled",{"_index":486,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["labeledslidetogglecomponent",{"_index":485,"title":{"components/LabeledSlideToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["labeledslidetogglemodule",{"_index":1945,"title":{"modules/LabeledSlideToggleModule.html":{}},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/StageNavModule.html":{},"index.html":{},"modules.html":{}}}],["labelel",{"_index":3233,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labelel.contains(target",{"_index":3237,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labelref",{"_index":3187,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labels",{"_index":1918,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[0",{"_index":1942,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[1",{"_index":1935,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["landmark",{"_index":1565,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["landmarks",{"_index":1982,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["large",{"_index":1416,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["larynx",{"_index":1419,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["larynx.svg",{"_index":1420,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":2278,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"interfaces/UserName.html":{}}}],["lastname",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{}}}],["lastnamevalidator",{"_index":2261,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["latesttags",{"_index":26,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["launch",{"_index":2937,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["launcher",{"_index":3576,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["launcher.component",{"_index":3597,"title":{},"body":{"modules/VideoModalLauncherModule.html":{}}}],["launcher.component.html",{"_index":3578,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.scss",{"_index":3577,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts",{"_index":3574,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts:17",{"_index":3581,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts:22",{"_index":3580,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts:32",{"_index":3582,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.module",{"_index":1342,"title":{},"body":{"modules/ContentModule.html":{}}}],["launcher.module.ts",{"_index":3596,"title":{},"body":{"modules/VideoModalLauncherModule.html":{}}}],["launcher/video",{"_index":1341,"title":{},"body":{"modules/ContentModule.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{}}}],["launches",{"_index":3583,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launching",{"_index":3575,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launchreviewmodal",{"_index":2943,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["launchvideomodal",{"_index":3579,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["lazy",{"_index":42,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["leading",{"_index":880,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["left",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["left.px",{"_index":1247,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["left.svg",{"_index":1407,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["leftmargin",{"_index":1242,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["leftsidebarcomponent",{"_index":489,"title":{"components/LeftSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["leftsidebarmodule",{"_index":540,"title":{"modules/LeftSidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LeftSidebarModule.html":{},"index.html":{},"modules.html":{}}}],["legend",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["length",{"_index":3150,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["level",{"_index":3504,"title":{},"body":{"injectables/ThemingService.html":{}}}],["library/assets/body4mesh_1338.glb",{"_index":966,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["light",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["lighter",{"_index":1613,"title":{},"body":{"components/HeaderComponent.html":{}}}],["limit",{"_index":60,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["limits",{"_index":3149,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["line",{"_index":792,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["link",{"_index":1614,"title":{},"body":{"components/HeaderComponent.html":{}}}],["list",{"_index":2570,"title":{},"body":{"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{}}}],["list'},{'name",{"_index":510,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["list.component",{"_index":3336,"title":{},"body":{"modules/TagListModule.html":{}}}],["list.component.html",{"_index":3300,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.scss",{"_index":3299,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts",{"_index":3297,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:17",{"_index":3307,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:22",{"_index":3305,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:27",{"_index":3306,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:32",{"_index":3304,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:48",{"_index":3314,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:52",{"_index":3312,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:61",{"_index":3308,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.module",{"_index":3078,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["list.module.ts",{"_index":3333,"title":{},"body":{"modules/TagListModule.html":{}}}],["list/tag",{"_index":3077,"title":{},"body":{"modules/RightSidebarModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{}}}],["listen",{"_index":2035,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listener",{"_index":1819,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listeners",{"_index":1100,"title":{},"body":{"components/ContainerComponent.html":{}}}],["listens",{"_index":3210,"title":{},"body":{"components/StageNavComponent.html":{}}}],["literal",{"_index":1587,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["liver",{"_index":1421,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["liver.svg",{"_index":1422,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":43,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VideoModalComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["loaded",{"_index":1369,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["loads",{"_index":3554,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["loadyoutubeplayerapi",{"_index":3549,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["local",{"_index":2791,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["localstorage.getitem('hubmap_token",{"_index":3752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["located",{"_index":1752,"title":{},"body":{"classes/InitializationState.html":{}}}],["location",{"_index":3496,"title":{},"body":{"injectables/ThemingService.html":{}}}],["lodash",{"_index":769,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["logger",{"_index":3290,"title":{},"body":{"modules/StoreModule.html":{}}}],["logic",{"_index":1738,"title":{},"body":{"classes/InitializationState.html":{}}}],["logo",{"_index":1624,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logotooltip",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["look",{"_index":1515,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/HeaderComponent.html":{}}}],["looks",{"_index":2361,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["lookup",{"_index":2324,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["lowerbound",{"_index":805,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["lowerbound[i",{"_index":814,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["lung",{"_index":1423,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lungs.svg",{"_index":1424,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1425,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":3169,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["made",{"_index":2480,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["main",{"_index":1041,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":2333,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["makes",{"_index":3635,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["making",{"_index":3677,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["male",{"_index":1592,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["mammary",{"_index":1397,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["manages",{"_index":3472,"title":{},"body":{"injectables/ThemingService.html":{}}}],["manually",{"_index":1885,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["map",{"_index":94,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["map(([_viewtype",{"_index":932,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([anatomicalstructures",{"_index":844,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([entities",{"_index":113,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["map(([haschanges",{"_index":2495,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["map(([nodes",{"_index":882,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([organiri",{"_index":890,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([page",{"_index":2777,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["map(([placement",{"_index":824,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([rotation",{"_index":832,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((basehref",{"_index":2339,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["map((def",{"_index":1653,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["map((dims",{"_index":1165,"title":{},"body":{"components/ContentComponent.html":{}}}],["map((item",{"_index":860,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((node",{"_index":984,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((p",{"_index":1189,"title":{},"body":{"components/ContentComponent.html":{}}}],["map((set",{"_index":2222,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["map((side",{"_index":957,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((value",{"_index":2463,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["map((x",{"_index":2129,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["map(this.truncateresults",{"_index":3438,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["mapping",{"_index":3386,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["margin",{"_index":721,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["margin2",{"_index":1728,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["marrow",{"_index":1393,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["marrow.svg",{"_index":1394,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["mat.transformaspoint",{"_index":806,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["mat.transformaspoint([1",{"_index":808,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["mat_dialog_data",{"_index":3020,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["mat_form_field_default_options",{"_index":553,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":1907,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/TagSearchModule.html":{}}}],["match",{"_index":2252,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["matcheckboxmodule",{"_index":3461,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["matches",{"_index":165,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["matches.length",{"_index":170,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["matching",{"_index":65,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":3334,"title":{},"body":{"modules/TagListModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["matdialog",{"_index":2685,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["matdialogmodule",{"_index":2711,"title":{},"body":{"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/VideoModalModule.html":{}}}],["matdialogref",{"_index":2545,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["matdividermodule",{"_index":2008,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["material",{"_index":1618,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["matexpansionmodule",{"_index":2010,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["matformfieldmodule",{"_index":744,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["math.floor(p.x",{"_index":1190,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.floor(p.y",{"_index":1191,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.floor(p.z",{"_index":1192,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.gl/core",{"_index":757,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["math.max(dims.x",{"_index":1166,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(dims.y",{"_index":1169,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(dims.z",{"_index":1171,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(n",{"_index":813,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["math.min(20",{"_index":2205,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["math.min(n",{"_index":810,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["math.round(xyz.x",{"_index":2925,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["math.round(xyz.y",{"_index":2926,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["math.round(xyz.z",{"_index":2927,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["maticonmodule",{"_index":556,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["maticonregistry",{"_index":1639,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matinputmodule",{"_index":745,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["matradiomodule",{"_index":2675,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["matripplemodule",{"_index":742,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["matrix",{"_index":2349,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["matrix.transformaspoint([position.x",{"_index":2354,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["matrix4",{"_index":755,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["matrix4(matrix4.identity",{"_index":836,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(matrix4.identity).scale([2",{"_index":967,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(model.transformmatrix",{"_index":804,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matselectmodule",{"_index":1581,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["matslidermodule",{"_index":3121,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["matslidetogglemodule",{"_index":1950,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{}}}],["matsnackbar",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["matsnackbarmodule",{"_index":558,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":747,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{}}}],["max",{"_index":1235,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["maximum",{"_index":68,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagSearchComponent.html":{}}}],["mdc",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{}}}],["measured",{"_index":1789,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredmargin",{"_index":1791,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredwidth",{"_index":1782,"title":{},"body":{"classes/InitializationState.html":{}}}],["menu",{"_index":1991,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["menu'},{'name",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["menu.component",{"_index":3669,"title":{},"body":{"modules/VisibilityMenuModule.html":{}}}],["menu.component.html",{"_index":3609,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.scss",{"_index":3608,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts",{"_index":3607,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:106",{"_index":3632,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:125",{"_index":3634,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:138",{"_index":3624,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:19",{"_index":3622,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:24",{"_index":3619,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:29",{"_index":3620,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":3621,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:39",{"_index":3618,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:53",{"_index":3637,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:68",{"_index":3630,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:78",{"_index":3625,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:88",{"_index":3640,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.module",{"_index":2020,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["menu.module.ts",{"_index":3668,"title":{},"body":{"modules/VisibilityMenuModule.html":{}}}],["menu/visibility",{"_index":2019,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{}}}],["mergeall",{"_index":2032,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["message",{"_index":1064,"title":{"interfaces/Message.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/RegistrationMetadataComponent.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message_service_config",{"_index":1522,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["message_service_default_config",{"_index":1523,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["messagechannel",{"_index":1065,"title":{"classes/MessageChannel.html":{}},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":2076,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel.counter",{"_index":2063,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messages",{"_index":1052,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messages.subscribe((msg",{"_index":1272,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["messageservice",{"_index":1045,"title":{"injectables/MessageService.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messageservice.connect(this",{"_index":1096,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["messageservice.connect(this).getmessages",{"_index":1271,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["messageserviceconfig",{"_index":2034,"title":{"interfaces/MessageServiceConfig.html":{}},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":2973,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["metadata",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["metadata'},{'name",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["metadata.component",{"_index":2678,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["metadata.component.html",{"_index":2626,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.scss",{"_index":2625,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts",{"_index":2624,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:20",{"_index":2633,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:23",{"_index":2644,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:26",{"_index":2645,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:29",{"_index":2651,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:32",{"_index":2632,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:58",{"_index":2635,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:66",{"_index":2643,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:74",{"_index":2639,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:83",{"_index":2634,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:91",{"_index":2641,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.module",{"_index":2621,"title":{},"body":{"modules/RegistrationContentModule.html":{},"modules/RightSidebarModule.html":{}}}],["metadata.module.ts",{"_index":2674,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["metadata/registration",{"_index":2620,"title":{},"body":{"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RightSidebarModule.html":{}}}],["metadatafield",{"_index":2090,"title":{"interfaces/MetaDataField.html":{}},"body":{"interfaces/MetaDataField.html":{},"miscellaneous/typealiases.html":{}}}],["metadatalookup(field",{"_index":2982,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["meter",{"_index":2313,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["method",{"_index":1155,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{}}}],["method.apply(registry",{"_index":1683,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["methodname",{"_index":1677,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["methods",{"_index":18,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["middle",{"_index":2280,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["middlename",{"_index":2287,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{}}}],["middlenamevalidator",{"_index":2262,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["millimeter",{"_index":2312,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["min",{"_index":729,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{}}}],["minimap",{"_index":1221,"title":{},"body":{"components/ContentComponent.html":{}}}],["miscellaneous",{"_index":3695,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":707,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["modal",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["modal's",{"_index":2963,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["modal'},{'name",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["modal.component",{"_index":2713,"title":{},"body":{"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewModalModule.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{}}}],["modal.component.html",{"_index":2681,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.scss",{"_index":3007,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts",{"_index":2679,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts:16",{"_index":3551,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:22",{"_index":2687,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.component.ts:23",{"_index":3561,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:24",{"_index":3560,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:25",{"_index":2686,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.component.ts:27",{"_index":3014,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:31",{"_index":3019,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:33",{"_index":2689,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.component.ts:36",{"_index":3010,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:38",{"_index":3553,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:45",{"_index":3018,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:46",{"_index":3017,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:47",{"_index":3552,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:55",{"_index":3015,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:69",{"_index":2688,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.module",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"modules/ReviewButtonModule.html":{},"modules/VideoModalLauncherModule.html":{}}}],["modal.module.ts",{"_index":2710,"title":{},"body":{"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/VideoModalModule.html":{}}}],["modal.wrapper",{"_index":3573,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal/registration",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{}}}],["modal/review",{"_index":2972,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{}}}],["modal/video",{"_index":1340,"title":{},"body":{"modules/ContentModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{}}}],["modalclosed",{"_index":1960,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["mode",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["model",{"_index":45,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["model.blocksize.x.tofixed(3",{"_index":2903,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.blocksize.y.tofixed(3",{"_index":2904,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.blocksize.z.tofixed(3",{"_index":2905,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.label",{"_index":2892,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.organ$.subscribe((organ",{"_index":2583,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["model.organ.name",{"_index":2845,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.organ.organ",{"_index":2846,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.organ.src",{"_index":2702,"title":{},"body":{"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.organiri",{"_index":2908,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.position.x.tofixed(3",{"_index":2918,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.position.y.tofixed(3",{"_index":2919,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.position.z.tofixed(3",{"_index":2920,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.representation_of",{"_index":126,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["model.rotation.x.tofixed(3",{"_index":2912,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.rotation.y.tofixed(3",{"_index":2913,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.rotation.z.tofixed(3",{"_index":2914,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.slicesconfig?.numslices",{"_index":2902,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.slicesconfig?.thickness",{"_index":2900,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.snapshot",{"_index":2851,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.tooltip",{"_index":133,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["model/model.state",{"_index":100,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["modelchanged",{"_index":2146,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["models/anatomical",{"_index":98,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["models/extraction",{"_index":2115,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["models/meta",{"_index":2770,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["models/visibility",{"_index":784,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["modelstate",{"_index":99,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["modelstatemodel",{"_index":2093,"title":{"interfaces/ModelStateModel.html":{}},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["modification",{"_index":2794,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["module",{"_index":525,"title":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["modules",{"_index":527,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{},"modules.html":{}}}],["modules/content/content.module",{"_index":570,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/header/header.module",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/left",{"_index":572,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/registration",{"_index":575,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/right",{"_index":578,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1555,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["mouse",{"_index":3628,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseevent",{"_index":2559,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["mouseout",{"_index":3611,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseover",{"_index":3612,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseover(item",{"_index":3629,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mousepositiontrackermodule",{"_index":1350,"title":{},"body":{"modules/CoreModule.html":{}}}],["moz",{"_index":710,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ms",{"_index":3399,"title":{},"body":{"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":1274,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.payload",{"_index":1286,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["msg.payload.drawers",{"_index":1278,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["msg.payload.opened",{"_index":3535,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["msg.payload.type",{"_index":1276,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.source",{"_index":1283,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["multi",{"_index":3470,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiplyright(n.transformmatrix",{"_index":838,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["n",{"_index":834,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["name",{"_index":37,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name(value",{"_index":2289,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["name.endswith(info.organ",{"_index":2382,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["name.firstname",{"_index":2483,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["name.lastname",{"_index":2484,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["name.middlename",{"_index":2485,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["name_input",{"_index":2296,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["namechange",{"_index":2264,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["nameinputcomponent",{"_index":491,"title":{"components/NameInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["nameinputmodule",{"_index":2004,"title":{"modules/NameInputModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"index.html":{},"modules.html":{}}}],["namematches(organname",{"_index":2162,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["namespace",{"_index":1378,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["namevalid",{"_index":2534,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["nan",{"_index":2127,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["narrow",{"_index":1187,"title":{},"body":{"components/ContentComponent.html":{}}}],["native",{"_index":2858,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{}}}],["nav",{"_index":3182,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav'},{'name",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["nav.component",{"_index":3261,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav.component.html",{"_index":3184,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.scss",{"_index":3183,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts",{"_index":3178,"title":{},"body":{"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["nav.component.ts:116",{"_index":3220,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:26",{"_index":3207,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:30",{"_index":3199,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:36",{"_index":3197,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:39",{"_index":3203,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:42",{"_index":3205,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:45",{"_index":3206,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:48",{"_index":3224,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:51",{"_index":3226,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:54",{"_index":3221,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:57",{"_index":3222,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:67",{"_index":3196,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:83",{"_index":3209,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:98",{"_index":3217,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.module",{"_index":1339,"title":{},"body":{"modules/ContentModule.html":{}}}],["nav.module.ts",{"_index":3259,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav/stage",{"_index":1338,"title":{},"body":{"modules/ContentModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"miscellaneous/typealiases.html":{}}}],["necessary",{"_index":2955,"title":{},"body":{"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{}}}],["need",{"_index":1373,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/ReviewButtonComponent.html":{}}}],["needed",{"_index":3151,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["needs",{"_index":1114,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{}}}],["neurons",{"_index":1427,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["neurons.svg",{"_index":1428,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":642,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":117,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["newplacement",{"_index":2355,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.x_translation",{"_index":2358,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.y_translation",{"_index":2359,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.z_translation",{"_index":2360,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newposition",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["newrotation",{"_index":3099,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["newstructures",{"_index":2203,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["next",{"_index":791,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["nextmessageid",{"_index":2062,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ng",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ngacceptinputtype_expanded",{"_index":1855,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_opened",{"_index":1854,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_position",{"_index":1853,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngafterviewinit",{"_index":1102,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ngdobootstrap",{"_index":547,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":550,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["ngonchanges",{"_index":2974,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["ngondestroy",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["ngoninit",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["ngx",{"_index":664,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxs",{"_index":3287,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxs/logger",{"_index":3266,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxs/storage",{"_index":3269,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxs/store",{"_index":90,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxs/store/operators",{"_index":2455,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ngxsdataentitycollectionsrepository",{"_index":16,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["ngxsdatapluginmodule",{"_index":3263,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":3278,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":1638,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ngxsimmutabledatarepository",{"_index":752,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxsloggerpluginmodule",{"_index":3265,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":3291,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":3270,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":3279,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsoninit",{"_index":21,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxsstoragepluginmodule",{"_index":3268,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsstoragepluginmodule.forroot",{"_index":3288,"title":{},"body":{"modules/StoreModule.html":{}}}],["node",{"_index":869,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagSearchComponent.html":{}}}],["node.id",{"_index":1000,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.representation_of",{"_index":867,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node_collision_throttle_duration",{"_index":798,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["nodecollisions",{"_index":874,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodedragevent",{"_index":1152,"title":{},"body":{"components/ContentComponent.html":{}}}],["nodes",{"_index":817,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["nodes.filter((model",{"_index":1006,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.filter((node",{"_index":1001,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.map((n",{"_index":833,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.svg",{"_index":1426,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["nonemptyorganiri",{"_index":895,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nonnullable",{"_index":631,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["normalizeplacement",{"_index":2519,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["normalizeplacement(place",{"_index":2345,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["not(:last",{"_index":724,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["nothing",{"_index":2561,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["nowrap",{"_index":3250,"title":{},"body":{"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["null",{"_index":1648,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["null)?.getcontainerelement",{"_index":3513,"title":{},"body":{"injectables/ThemingService.html":{}}}],["nullish",{"_index":2368,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["number",{"_index":61,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(value.slice(0",{"_index":1795,"title":{},"body":{"classes/InitializationState.html":{}}}],["numbersonlymodule",{"_index":3176,"title":{},"body":{"modules/SlicesInputModule.html":{}}}],["numslices",{"_index":2121,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["o.id",{"_index":2160,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["o.organ.tolowercase",{"_index":2163,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["o.side",{"_index":2161,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["obj",{"_index":3319,"title":{},"body":{"components/TagListComponent.html":{}}}],["object",{"_index":643,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["object.entries(entities).foreach(([id",{"_index":120,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["object.keys(data.organirilookup).length",{"_index":2699,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["object.keys(db.organirilookup).find((code",{"_index":2371,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["object.keys(this.initialstate).filter((key",{"_index":2148,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["object.values(aslookup",{"_index":2220,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["object.values(this.checkedresults).some((v",{"_index":3416,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["objects",{"_index":655,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["observable",{"_index":77,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["observableinput",{"_index":72,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"components/TagSearchComponent.html":{}}}],["observables",{"_index":3403,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["of(undefined",{"_index":995,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["offset",{"_index":1289,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["offsets",{"_index":3052,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["oldposition",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.x",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.y",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.z",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["once",{"_index":1363,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":2939,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["ondestroy",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["one",{"_index":1556,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["oninit",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["onorganchange(organ",{"_index":2242,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["onorganirichange",{"_index":2209,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["onreferencedatachange",{"_index":2232,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ontology.hubmapconsortium.org/v2.1.0/ccf.owl",{"_index":3741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ontology/ccf",{"_index":2889,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/variables.html":{}}}],["ontologyid",{"_index":1590,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["opacity",{"_index":863,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["opacityslidermodule",{"_index":2012,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["open",{"_index":1319,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ReviewButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["open/close",{"_index":1773,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["opendialog",{"_index":2683,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["opened",{"_index":1285,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["opened(value",{"_index":1760,"title":{},"body":{"classes/InitializationState.html":{}}}],["opened/closed",{"_index":1714,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":1768,"title":{},"body":{"classes/InitializationState.html":{}}}],["openedstate",{"_index":1715,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":1812,"title":{},"body":{"classes/InitializationState.html":{}}}],["opening/closing/expanding",{"_index":1739,"title":{},"body":{"classes/InitializationState.html":{}}}],["openresults",{"_index":3350,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["opens",{"_index":1801,"title":{},"body":{"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/TagSearchComponent.html":{}}}],["opposite",{"_index":1719,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["option",{"_index":1927,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["optional",{"_index":39,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1546,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["optionsel",{"_index":3235,"title":{},"body":{"components/StageNavComponent.html":{}}}],["optionsel.contains(target",{"_index":3238,"title":{},"body":{"components/StageNavComponent.html":{}}}],["optionsref",{"_index":3188,"title":{},"body":{"components/StageNavComponent.html":{}}}],["orcid",{"_index":2413,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["orcid.match('^[a",{"_index":2505,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["orcidcontrol",{"_index":2627,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["orcidid",{"_index":2459,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["orcidtouri(id",{"_index":2512,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["orcidvalid",{"_index":2394,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{}}}],["ordering",{"_index":2117,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["organ.id",{"_index":2932,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["organ.name",{"_index":2183,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.name.tolowercase",{"_index":2248,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.ontologyid",{"_index":2249,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.sex?.tolowercase",{"_index":2250,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.side",{"_index":2184,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.src",{"_index":936,"title":{},"body":{"interfaces/Collision.html":{},"components/RegistrationContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organ.touppercase",{"_index":2364,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organconfig",{"_index":1586,"title":{"interfaces/OrganConfig.html":{}},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdata",{"_index":2244,"title":{"interfaces/OrganData.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdata?.organ",{"_index":2247,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdata?.sex?.tolowercase",{"_index":2246,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions",{"_index":938,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.x",{"_index":941,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.y",{"_index":942,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.z",{"_index":2230,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.z].map((n",{"_index":943,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentity",{"_index":899,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentity.x_dimension",{"_index":910,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentity.y_dimension",{"_index":913,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentity.z_dimension",{"_index":916,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentry",{"_index":2389,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo",{"_index":2100,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organinfo.sex",{"_index":2366,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo?.sex",{"_index":2365,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo?.side?.tolowercase",{"_index":2255,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organinfo?.side].join('|').touppercase",{"_index":2370,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organiri",{"_index":846,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organirilookup",{"_index":2323,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organlist",{"_index":2535,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organlistoptions(organoptions",{"_index":2929,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["organname",{"_index":1589,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["organoptions",{"_index":600,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["organoptions.includes(organ.id",{"_index":2933,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["organoptions.length",{"_index":2930,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["organs",{"_index":1385,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["organscene",{"_index":850,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organselect",{"_index":2542,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organselect(organ",{"_index":2556,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organselected",{"_index":1958,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["organsex",{"_index":2243,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organside",{"_index":2158,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organspatialentities",{"_index":2325,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["originscene",{"_index":848,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ot",{"_index":1374,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["other.expanded",{"_index":1841,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.expandedstate2",{"_index":1842,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.margin2",{"_index":1847,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredmargin",{"_index":1845,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredwidth",{"_index":1844,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.opened",{"_index":1843,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.width",{"_index":1846,"title":{},"body":{"classes/InitializationState.html":{}}}],["otherwise",{"_index":1163,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["out",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"classes/InitializationState.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["output",{"_index":662,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["outputs",{"_index":699,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["outside",{"_index":3095,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ovaries",{"_index":1429,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovaries.svg",{"_index":1430,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovary",{"_index":1431,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":3631,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["overflow",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["overlay",{"_index":1574,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{}}}],["overlaycontainer",{"_index":3492,"title":{},"body":{"injectables/ThemingService.html":{}}}],["override",{"_index":143,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["overview",{"_index":3706,"title":{"index.html":{}},"body":{"index.html":{}}}],["owning",{"_index":3523,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["p",{"_index":1011,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.target",{"_index":1015,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.translation_units",{"_index":2310,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_rotation",{"_index":2317,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_scaling",{"_index":2318,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_translation",{"_index":2314,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.y_rotation",{"_index":1022,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.y_scaling",{"_index":2319,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.y_translation",{"_index":1019,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_rotation].map(toradians",{"_index":1023,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_scaling",{"_index":2320,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.z_translation].map((n",{"_index":1020,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_translation].map((t",{"_index":2315,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["padding",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["padding/margin/height",{"_index":3456,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["page",{"_index":44,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["page.isorcidvalid",{"_index":2582,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["page.orcidvalid",{"_index":2844,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.registrationcallbackset",{"_index":2876,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.registrationstarted$.subscribe((registrationstarted",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["page.snapshot.user.firstname",{"_index":2866,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.snapshot.user.lastname",{"_index":2868,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.snapshot.user.middlename",{"_index":2870,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.snapshot.user.orcidid",{"_index":2872,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.uritoorcid(user.orcidid",{"_index":2653,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["page.user$.subscribe((user",{"_index":2579,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["page.user.firstname",{"_index":2700,"title":{},"body":{"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.user.lastname",{"_index":2701,"title":{},"body":{"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.user.middlename",{"_index":2894,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.user.orcidid",{"_index":2895,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page/page.state",{"_index":102,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{}}}],["pagestate",{"_index":101,"title":{"injectables/PageState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["pagestatemodel",{"_index":2460,"title":{"interfaces/PageStateModel.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["pair",{"_index":1849,"title":{},"body":{"classes/InitializationState.html":{}}}],["palatine",{"_index":1432,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas",{"_index":1435,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas.svg",{"_index":1436,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1575,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["panel",{"_index":1514,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagSearchComponent.html":{}}}],["panelclass",{"_index":2991,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["param",{"_index":139,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":1727,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["parent",{"_index":2036,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parent.messages.pipe(takewhile",{"_index":2070,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parse",{"_index":645,"title":{},"body":{"components/AppWebComponent.html":{}}}],["parsed",{"_index":1876,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["parsedjson",{"_index":1865,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["parseorgan",{"_index":648,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/functions.html":{}}}],["parseorgan(value",{"_index":633,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":3295,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{}}}],["parts",{"_index":1687,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.join",{"_index":1692,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('innamespace",{"_index":1691,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('literal",{"_index":1690,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('set",{"_index":1689,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["pass",{"_index":2195,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["passed",{"_index":1967,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["patch",{"_index":2454,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["patchplacement",{"_index":2347,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["patchplacement.target",{"_index":2357,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["payload",{"_index":1312,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["pbr",{"_index":970,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pelvis",{"_index":1437,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pelvis.svg",{"_index":1439,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":2120,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["person",{"_index":2458,"title":{"interfaces/Person.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["pick",{"_index":2427,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["piece",{"_index":3434,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["pipe",{"_index":823,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["pipe(skipuntil(this.page.registrationstarted$.pipe(filter((started",{"_index":2240,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["place",{"_index":2356,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.x_rotation",{"_index":2827,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.x_translation",{"_index":2351,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.y_rotation",{"_index":2828,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.y_translation",{"_index":2352,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.z_rotation",{"_index":2829,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.z_translation",{"_index":2353,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["placed",{"_index":3277,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":1881,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagSearchComponent.html":{}}}],["placement",{"_index":827,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["placement.length",{"_index":884,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placement[0",{"_index":886,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placement_date",{"_index":2909,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["placementcube",{"_index":926,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placementpatches",{"_index":2328,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["placenta",{"_index":1440,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["placenta.svg",{"_index":1441,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["play",{"_index":3590,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["play_circle_outline",{"_index":3587,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["player",{"_index":3556,"title":{},"body":{"components/VideoModalComponent.html":{},"modules/VideoModalModule.html":{}}}],["pluckunique",{"_index":2456,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["plugin",{"_index":3267,"title":{},"body":{"modules/StoreModule.html":{}}}],["plugins",{"_index":3286,"title":{},"body":{"modules/StoreModule.html":{}}}],["pluralizing",{"_index":3387,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["pointer",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["populated",{"_index":2375,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["popup",{"_index":3212,"title":{},"body":{"components/StageNavComponent.html":{}}}],["portal",{"_index":1622,"title":{},"body":{"components/HeaderComponent.html":{}}}],["portal.hubmapconsortium.org",{"_index":3759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pos",{"_index":2977,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["position",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["position(value",{"_index":1757,"title":{},"body":{"classes/InitializationState.html":{}}}],["position.x",{"_index":909,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["position.x.tofixed(1)}_${position.y.tofixed(1)}_${position.z.tofixed(1",{"_index":2170,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["position.y",{"_index":912,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["position.z",{"_index":915,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["position.z].map((n",{"_index":947,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["positions",{"_index":1118,"title":{},"body":{"components/ContainerComponent.html":{}}}],["possible",{"_index":2099,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{}}}],["posterior",{"_index":960,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["potential",{"_index":2362,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["pre",{"_index":3671,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["preclose",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["preexisting",{"_index":2573,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["preserved",{"_index":3445,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["pressed",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["prev",{"_index":3447,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["prev[id",{"_index":3450,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["previous",{"_index":2102,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["previousitems",{"_index":2198,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["previousitems.map((structure",{"_index":2204,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["previousregistrationnodes",{"_index":887,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousregistrations",{"_index":892,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousregistrations.map(tonode).filter((entity",{"_index":1031,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["prevnodes",{"_index":825,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["primary",{"_index":3686,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["private",{"_index":135,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["process",{"_index":1273,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{}}}],["processes",{"_index":1111,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["production",{"_index":3736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":2967,"title":{},"body":{"components/ReviewButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["projected",{"_index":1101,"title":{},"body":{"components/ContainerComponent.html":{}}}],["promise",{"_index":1710,"title":{},"body":{"classes/InitializationState.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["promise((resolve",{"_index":1731,"title":{},"body":{"classes/InitializationState.html":{}}}],["properties",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["property",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["prostate",{"_index":1442,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["prostate.svg",{"_index":1443,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":581,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":1081,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["providedin",{"_index":2041,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":531,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["provides",{"_index":2928,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["providing",{"_index":1238,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["public",{"_index":2532,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["purposes",{"_index":1181,"title":{},"body":{"components/ContentComponent.html":{},"components/JsonFileReaderComponent.html":{}}}],["px",{"_index":1751,"title":{},"body":{"classes/InitializationState.html":{}}}],["q",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["queries",{"_index":1199,"title":{},"body":{"components/ContentComponent.html":{}}}],["query",{"_index":3747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["querylist",{"_index":1060,"title":{},"body":{"components/ContainerComponent.html":{}}}],["r",{"_index":2316,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["radio",{"_index":2666,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{}}}],["radius",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ratio",{"_index":2911,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reactiveformsmodule",{"_index":2302,"title":{},"body":{"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/TagSearchModule.html":{}}}],["read",{"_index":3383,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["reader",{"_index":1859,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["reader'},{'name",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["reader.component",{"_index":1906,"title":{},"body":{"modules/JsonFileReaderModule.html":{}}}],["reader.component.html",{"_index":1861,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.scss",{"_index":1860,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts",{"_index":1858,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:21",{"_index":1873,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:24",{"_index":1884,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:27",{"_index":1868,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:30",{"_index":1866,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:43",{"_index":1877,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:53",{"_index":1875,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.module",{"_index":2677,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["reader.module.ts",{"_index":1905,"title":{},"body":{"modules/JsonFileReaderModule.html":{}}}],["reader/json",{"_index":1857,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"modules/RegistrationMetadataModule.html":{}}}],["readonly",{"_index":141,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["reason",{"_index":3275,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":1250,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["receiving",{"_index":2043,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["record",{"_index":1585,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagSearchComponent.html":{}}}],["reduce((acc",{"_index":871,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["refdata",{"_index":2797,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reference",{"_index":138,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["referencedata",{"_index":972,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["referencedatastate",{"_index":786,"title":{"injectables/ReferenceDataState.html":{}},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["referencedatastatemodel",{"_index":2322,"title":{"interfaces/ReferenceDataStateModel.html":{}},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["referenceorgannodes",{"_index":840,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["referenceorgansimplenodes",{"_index":853,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["references",{"_index":1270,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["refresh",{"_index":708,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["refreshblocksize",{"_index":696,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["refreshes",{"_index":695,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["refreshslices",{"_index":3159,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["reg",{"_index":2408,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_first_name",{"_index":2812,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_last_name",{"_index":2814,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_middle_name",{"_index":2813,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.initialregistration",{"_index":2475,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["reg.placement",{"_index":2809,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.placement[0",{"_index":2808,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.slice_count",{"_index":2832,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.slice_thickness",{"_index":2831,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.useregistrationcallback",{"_index":2470,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["reg.x_dimension",{"_index":2823,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.y_dimension",{"_index":2824,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.z_dimension",{"_index":2825,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["register",{"_index":601,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["register(usecallback",{"_index":2734,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["register/download",{"_index":2739,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registerbuttonclick",{"_index":2543,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["registerbuttonclick(event",{"_index":2558,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["registerdata",{"_index":2946,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["registered",{"_index":1383,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["registericon",{"_index":1672,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericon(definition",{"_index":1669,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericonimpl(definition",{"_index":1673,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registering",{"_index":1635,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registers",{"_index":1667,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registration",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["registration.registrations",{"_index":3289,"title":{},"body":{"modules/StoreModule.html":{}}}],["registration.state$.subscribe((reg",{"_index":2654,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["registration/registration.state",{"_index":782,"title":{},"body":{"interfaces/Collision.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["registrationcallback",{"_index":619,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["registrationcallback?.(json",{"_index":2855,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registrationcallbackset",{"_index":2395,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["registrationcontentcomponent",{"_index":492,"title":{"components/RegistrationContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["registrationcontentmodule",{"_index":2612,"title":{"modules/RegistrationContentModule.html":{}},"body":{"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"index.html":{},"modules.html":{}}}],["registrationexpanded",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["registrationisvalid",{"_index":2942,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["registrationmetadatacomponent",{"_index":493,"title":{"components/RegistrationMetadataComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["registrationmetadatamodule",{"_index":2617,"title":{"modules/RegistrationMetadataModule.html":{}},"body":{"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RightSidebarModule.html":{},"index.html":{},"modules.html":{}}}],["registrationmodalcomponent",{"_index":495,"title":{"components/RegistrationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["registrationmodalmodule",{"_index":541,"title":{"modules/RegistrationModalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RegistrationModalModule.html":{},"index.html":{},"modules.html":{}}}],["registrations",{"_index":2715,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registrationselected",{"_index":2536,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["registrationstarted",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/ReviewButtonComponent.html":{},"interfaces/User.html":{}}}],["registrationstate",{"_index":781,"title":{"injectables/RegistrationState.html":{}},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["registrationstatemodel",{"_index":2772,"title":{"interfaces/RegistrationStateModel.html":{}},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registrationtoggle",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["registrationtoggle(event",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["registry",{"_index":1644,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state",{"_index":3271,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":1634,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state.ts:43",{"_index":1698,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:58",{"_index":1699,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:84",{"_index":1700,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry/default",{"_index":1366,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["registry/icon",{"_index":1633,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{}}}],["registry[methodname",{"_index":1679,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["regs",{"_index":2783,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["regular",{"_index":2433,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["relative",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["removable",{"_index":3298,"title":{},"body":{"components/TagListComponent.html":{}}}],["remove",{"_index":3310,"title":{},"body":{"components/TagListComponent.html":{},"injectables/ThemingService.html":{}}}],["removeclass",{"_index":3515,"title":{},"body":{"injectables/ThemingService.html":{}}}],["removed",{"_index":119,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["removed.add(id",{"_index":122,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["removed.has(iri",{"_index":127,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["removeeventlistener('beforeunload",{"_index":2502,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["removes",{"_index":3309,"title":{},"body":{"components/TagListComponent.html":{},"injectables/ThemingService.html":{}}}],["removetag",{"_index":22,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/TagListComponent.html":{}}}],["removetag(tag",{"_index":56,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagListComponent.html":{}}}],["renderer",{"_index":3509,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer2",{"_index":3494,"title":{},"body":{"injectables/ThemingService.html":{},"components/VideoModalComponent.html":{}}}],["renderer[methodname](overlay",{"_index":3517,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](root",{"_index":3516,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rendering",{"_index":3181,"title":{},"body":{"components/StageNavComponent.html":{}}}],["renders",{"_index":1481,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["repeat",{"_index":1626,"title":{},"body":{"components/HeaderComponent.html":{}}}],["replace",{"_index":2514,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["replace(/(.{1,4})/g",{"_index":2516,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["replaysubject",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["replaysubject(1",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["representation",{"_index":2923,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["requiredvalues",{"_index":2843,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["requiredvalues.every((value",{"_index":2847,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["researcher's",{"_index":2259,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["reset",{"_index":544,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"components/ContentComponent.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["resetitem",{"_index":3613,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["resetrotation",{"_index":3104,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["resetrotation(dimension",{"_index":3109,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["resets",{"_index":1159,"title":{},"body":{"components/ContentComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/VisibilityMenuComponent.html":{}}}],["resetstage",{"_index":1144,"title":{},"body":{"components/ContentComponent.html":{}}}],["resettheme",{"_index":3475,"title":{},"body":{"injectables/ThemingService.html":{}}}],["resize",{"_index":1203,"title":{},"body":{"components/ContentComponent.html":{}}}],["resizesensor",{"_index":1197,"title":{},"body":{"components/ContentComponent.html":{}}}],["resizesensor(this.rootref.nativeelement",{"_index":1206,"title":{},"body":{"components/ContentComponent.html":{}}}],["resolve",{"_index":1733,"title":{},"body":{"classes/InitializationState.html":{}}}],["resolver",{"_index":1658,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["resolves",{"_index":1089,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["response",{"_index":3627,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["result",{"_index":74,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["result.label",{"_index":3452,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["result.results",{"_index":3441,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["result.results.reduce>((acc",{"_index":3448,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["results",{"_index":70,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultsvisible",{"_index":3345,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["retracted",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["return",{"_index":110,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["returned",{"_index":69,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagSearchComponent.html":{}}}],["returns",{"_index":50,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":1477,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["reverted",{"_index":3638,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["review",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["review/review",{"_index":3081,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["review_button",{"_index":2988,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["reviewbuttoncomponent",{"_index":497,"title":{"components/ReviewButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["reviewbuttonmodule",{"_index":2999,"title":{"modules/ReviewButtonModule.html":{}},"body":{"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"index.html":{},"modules.html":{}}}],["reviewing",{"_index":3006,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["reviewmodal",{"_index":2938,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["reviewmodalcomponent",{"_index":500,"title":{"components/ReviewModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["reviewmodaldata",{"_index":3009,"title":{"interfaces/ReviewModalData.html":{}},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["reviewmodalmodule",{"_index":3004,"title":{"modules/ReviewModalModule.html":{}},"body":{"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"index.html":{},"modules.html":{}}}],["rgba(0",{"_index":2609,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["right",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["right.px",{"_index":1248,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["right.svg",{"_index":1408,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["rightmargin",{"_index":1243,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rightsidebarcomponent",{"_index":501,"title":{"components/RightSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["rightsidebarmodule",{"_index":542,"title":{"modules/RightSidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RightSidebarModule.html":{},"index.html":{},"modules.html":{}}}],["ripple::after",{"_index":2669,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["ripple::before",{"_index":2668,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["root",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["root_states",{"_index":3273,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["rootref",{"_index":1146,"title":{},"body":{"components/ContentComponent.html":{}}}],["rotatednodes",{"_index":829,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotatexyz([p.x_rotation",{"_index":1021,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotatexyz([rotation.x",{"_index":949,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotatey(toradians(rotation",{"_index":837,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation",{"_index":503,"title":{"interfaces/Rotation.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["rotation.x",{"_index":918,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation.y",{"_index":920,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation.z",{"_index":922,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation.z].map(toradians",{"_index":950,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation_order",{"_index":2915,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["rotation_units",{"_index":2916,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["rotationchange",{"_index":3097,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotations",{"_index":3112,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotationslidercomponent",{"_index":502,"title":{"components/RotationSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["rotationslidermodule",{"_index":3065,"title":{"modules/RotationSliderModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"index.html":{},"modules.html":{}}}],["ru/common/entity",{"_index":84,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["ru/common/typings",{"_index":2306,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ru/ngxs",{"_index":3264,"title":{},"body":{"modules/StoreModule.html":{}}}],["ru/ngxs/decorators",{"_index":87,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ru/ngxs/repositories",{"_index":88,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["rui",{"_index":589,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["rui_organs",{"_index":2123,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["rui_organs.filter((organ",{"_index":2931,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ruiconfig",{"_index":1595,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1115,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["runtime",{"_index":1372,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["rxjs",{"_index":93,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["rxjs/operators",{"_index":95,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["s",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/User.html":{}}}],["s)).subscribe(updateskipconfirmation",{"_index":2492,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["safehtml",{"_index":1636,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saferesourceurl",{"_index":1637,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["same",{"_index":2118,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["sanitize",{"_index":1646,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitized",{"_index":1375,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["sanitizer",{"_index":1645,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saveas",{"_index":2765,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["saveas(data",{"_index":2859,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["saved",{"_index":2481,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["saver",{"_index":2766,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["saves",{"_index":2421,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["scale",{"_index":1620,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scale([blocksize.x",{"_index":951,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scale([entity.x_dimension",{"_index":1024,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scalex",{"_index":717,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["scaling_units",{"_index":2910,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["scene",{"_index":34,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scene/scene.state",{"_index":104,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"modules/StoreModule.html":{}}}],["scenegraph",{"_index":964,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodelookup",{"_index":2326,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["scenestate",{"_index":103,"title":{"injectables/SceneState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["scenestatemodel",{"_index":796,"title":{"interfaces/SceneStateModel.html":{}},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scheme",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["script",{"_index":3565,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["script.src",{"_index":3568,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["scroll",{"_index":1983,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["scrollbar",{"_index":1985,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["scrolling",{"_index":1133,"title":{},"body":{"components/ContainerComponent.html":{}}}],["search",{"_index":67,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["search.component",{"_index":3463,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["search.component.html",{"_index":3341,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.scss",{"_index":3340,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts",{"_index":3337,"title":{},"body":{"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["search.component.ts:123",{"_index":3378,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:132",{"_index":3375,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:139",{"_index":3370,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:157",{"_index":3366,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:170",{"_index":3368,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:41",{"_index":3365,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:44",{"_index":3359,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:47",{"_index":3360,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:50",{"_index":3361,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:53",{"_index":3362,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:56",{"_index":3364,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:59",{"_index":3384,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:62",{"_index":3385,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:69",{"_index":3391,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:72",{"_index":3394,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:75",{"_index":3381,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:78",{"_index":3389,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:81",{"_index":3357,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.module",{"_index":3080,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["search.module.ts",{"_index":3460,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["search/tag",{"_index":3079,"title":{},"body":{"modules/RightSidebarModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"miscellaneous/variables.html":{}}}],["searchcontrol",{"_index":3346,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchcontrol.reset",{"_index":3421,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searches",{"_index":64,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["searchexternal",{"_index":23,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["searchexternal(text",{"_index":58,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["searching",{"_index":3338,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchlimit",{"_index":3351,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchlimit)).pipe",{"_index":3437,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchresults",{"_index":3347,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchresults.results.filter((tag",{"_index":3418,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchresults.totalcount",{"_index":3453,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchthrottle",{"_index":3352,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["section",{"_index":2664,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["sections",{"_index":3168,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["see",{"_index":2550,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["select",{"_index":1992,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["selectable",{"_index":2571,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["selected",{"_index":1540,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["selecting",{"_index":1537,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagSearchComponent.html":{}}}],["selection",{"_index":1924,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["selections",{"_index":3371,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["selector",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["selects",{"_index":1685,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["send",{"_index":1051,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["sender",{"_index":2029,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending",{"_index":1831,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending/receiving",{"_index":1798,"title":{},"body":{"classes/InitializationState.html":{}}}],["sendmessage",{"_index":2079,"title":{},"body":{"classes/MessageChannel.html":{}}}],["sendmessage(payload",{"_index":2047,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sends",{"_index":1828,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sendtoggle",{"_index":1832,"title":{},"body":{"classes/InitializationState.html":{}}}],["sensor",{"_index":1204,"title":{},"body":{"components/ContentComponent.html":{}}}],["sent",{"_index":1305,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["separated",{"_index":1482,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["service",{"_index":40,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["service.initialize(location",{"_index":3498,"title":{},"body":{"injectables/ThemingService.html":{}}}],["services/config/config",{"_index":780,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["services/config/config.module",{"_index":1352,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/message/message.service",{"_index":1309,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{}}}],["services/theming/theming.module",{"_index":1353,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":118,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["set's",{"_index":2743,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["set(collisions.map((node",{"_index":999,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["set(reg.ccf_annotations",{"_index":2835,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["set.extractionsites.map((entity",{"_index":2225,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["set.label",{"_index":2223,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["set.name",{"_index":1566,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["set.sites.length",{"_index":1567,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["set.ts",{"_index":1529,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["set__chips",{"_index":3327,"title":{},"body":{"components/TagListComponent.html":{}}}],["setallopacity",{"_index":3614,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["setallopacity(value",{"_index":3633,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["setanatomicalstructures(anatomicalstructures",{"_index":2192,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setblocksize(blocksize",{"_index":2164,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setchange",{"_index":1543,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["setdisplayerrors",{"_index":2719,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["setdisplayerrors(displayerrors",{"_index":2741,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["setextractionsets(extractionsets",{"_index":2193,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setextractionsites(extractionsites",{"_index":2191,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sethaschanges",{"_index":2399,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setname(value",{"_index":2282,"title":{},"body":{"components/NameInputComponent.html":{}}}],["setorcidid",{"_index":2400,"title":{},"body":{"injectables/PageState.html":{}}}],["setorcidid(id",{"_index":2419,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setorgan(organ",{"_index":2181,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setorgandefaults",{"_index":2186,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setorganselection",{"_index":2720,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["setorganselection(ids",{"_index":2744,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["setposition(position",{"_index":2167,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setrotation(rotation",{"_index":2166,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sets",{"_index":1099,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["sets.length",{"_index":2226,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sets[0].sites",{"_index":2227,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsex(sex",{"_index":2188,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsexfromlabel",{"_index":2544,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["setsexfromlabel(label",{"_index":2562,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["setshowprevious",{"_index":2197,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setshowprevious(showprevious",{"_index":2190,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setside(side",{"_index":2189,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setslicesconfig(slicesconfig",{"_index":2171,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["settheme",{"_index":3476,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settheme(theme",{"_index":3490,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settimeout",{"_index":1800,"title":{},"body":{"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/ToggleButtonComponent.html":{}}}],["setting",{"_index":3088,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/StoreModule.html":{}}}],["settoinitialregistration",{"_index":2721,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["setusecancelregistrationcallback",{"_index":2401,"title":{},"body":{"injectables/PageState.html":{}}}],["setusecancelregistrationcallback(use",{"_index":2424,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setusedropdownmenu(value",{"_index":3227,"title":{},"body":{"components/StageNavComponent.html":{}}}],["setuseregistrationcallback",{"_index":2722,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["setuseregistrationcallback(use",{"_index":2748,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["setusername",{"_index":2402,"title":{},"body":{"injectables/PageState.html":{}}}],["setusername(name",{"_index":2426,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setviewside(viewside",{"_index":2173,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setviewtype",{"_index":1145,"title":{},"body":{"components/ContentComponent.html":{}}}],["setviewtype(is3dview",{"_index":1160,"title":{},"body":{"components/ContentComponent.html":{}}}],["setviewtype(viewtype",{"_index":2172,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sex",{"_index":1591,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sexbylabel",{"_index":2537,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["sexselected",{"_index":2538,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["shadow",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{}}}],["share",{"_index":775,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["shared",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"modules/RightSidebarModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/SlicesInputModule.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"modules/VisibilityMenuModule.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/CoreModule.html":{},"interfaces/User.html":{}}}],["shared/components/block",{"_index":3070,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":580,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/extraction",{"_index":2013,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/labeled",{"_index":3260,"title":{},"body":{"modules/StageNavModule.html":{}}}],["shared/components/name",{"_index":2015,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/registration",{"_index":2619,"title":{},"body":{"modules/RegistrationContentModule.html":{},"modules/RightSidebarModule.html":{}}}],["shared/components/rotation",{"_index":3071,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/slices",{"_index":3074,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/tag",{"_index":3076,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/visibility",{"_index":2018,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/rxjs",{"_index":2108,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["shared/web",{"_index":628,"title":{},"body":{"components/AppWebComponent.html":{}}}],["shifts",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["show",{"_index":1195,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["showcollisions",{"_index":797,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["showdebugbuttons",{"_index":1142,"title":{},"body":{"components/ContentComponent.html":{}}}],["showing",{"_index":2961,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["shown",{"_index":3390,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["showprevious",{"_index":891,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["shows",{"_index":1177,"title":{},"body":{"components/ContentComponent.html":{},"components/StageNavComponent.html":{}}}],["shrink",{"_index":3660,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["side",{"_index":958,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent-1.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["sidebar",{"_index":1220,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["sidebar.component",{"_index":2023,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar.component.html",{"_index":1956,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1955,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":1954,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:19",{"_index":3044,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:20",{"_index":1963,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:22",{"_index":3043,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:23",{"_index":1962,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:24",{"_index":3042,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:25",{"_index":1975,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":1961,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:46",{"_index":1965,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.module",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar.module.ts",{"_index":2007,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar/left",{"_index":573,"title":{},"body":{"modules/AppModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{}}}],["sidebar/right",{"_index":579,"title":{},"body":{"modules/AppModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{}}}],["sidechange",{"_index":3193,"title":{},"body":{"components/StageNavComponent.html":{}}}],["signal",{"_index":2554,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["simple",{"_index":3231,"title":{},"body":{"components/StageNavComponent.html":{}}}],["simplescenenodelookup",{"_index":2327,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["single",{"_index":2046,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["site",{"_index":1966,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sites",{"_index":1530,"title":{},"body":{"interfaces/ExtractionSet.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["size",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["sizes",{"_index":667,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/RightSidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["skin",{"_index":1444,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skin.svg",{"_index":1445,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skipconfirmation",{"_index":2404,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["skipself",{"_index":1349,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["skipunsavedchangesconfirmation",{"_index":602,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["skipuntil",{"_index":2113,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["slice",{"_index":2105,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["slice(0",{"_index":173,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["slice_count",{"_index":2901,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["slice_input",{"_index":3156,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["slice_thickness",{"_index":2899,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["slices",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["slicesconfig",{"_index":2097,"title":{"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["slicesconfigchange",{"_index":3146,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["slicesinputcomponent",{"_index":505,"title":{"components/SlicesInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["slicesinputmodule",{"_index":3066,"title":{"modules/SlicesInputModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/SlicesInputModule.html":{},"index.html":{},"modules.html":{}}}],["slide",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["slide_toggle",{"_index":1940,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["slider",{"_index":1913,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["slider'},{'name",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["slider.component",{"_index":3120,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["slider.component.html",{"_index":3093,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.scss",{"_index":3094,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts",{"_index":3084,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"miscellaneous/variables.html":{}}}],["slider.component.ts:33",{"_index":3107,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:36",{"_index":3106,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:39",{"_index":3105,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:54",{"_index":3108,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:64",{"_index":3110,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.module",{"_index":3073,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["slider.module.ts",{"_index":3119,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["slider/rotation",{"_index":3072,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"miscellaneous/variables.html":{}}}],["sliders",{"_index":1988,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["small",{"_index":1446,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["snackbar",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["snackbar.dismiss",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["snackbar__surface",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["snapshot",{"_index":2477,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["snapshot.useregistrationcallback",{"_index":2854,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["solid",{"_index":1612,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["sortby",{"_index":2110,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["sources",{"_index":2059,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sources.includes(msg.source",{"_index":2061,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["space",{"_index":719,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["spacer",{"_index":3455,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["spatial",{"_index":839,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["spatialentity",{"_index":763,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.x_dimension",{"_index":2228,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.y_dimension",{"_index":2229,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.z_dimension",{"_index":2231,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentityjsonld",{"_index":610,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialkeyboardaxis",{"_index":894,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialplacement",{"_index":764,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialplacementjsonld",{"_index":2307,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["spatialscenenode",{"_index":762,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["spatialsearchkeyboarduibehaviormodule",{"_index":1336,"title":{},"body":{"modules/ContentModule.html":{}}}],["specific",{"_index":1325,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["specified",{"_index":2058,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["specifying",{"_index":2039,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["spinal",{"_index":1447,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["spleen",{"_index":1450,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["spleen.svg",{"_index":1451,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["src",{"_index":2126,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["src/.../anatomical",{"_index":3719,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../app",{"_index":3702,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../block",{"_index":3723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":3701,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../container.component.ts",{"_index":3704,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../default",{"_index":3724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../drawer.component.ts",{"_index":3716,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":3729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.staging.ts",{"_index":3730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.service.ts",{"_index":3733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../messages.ts",{"_index":3715,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../meta",{"_index":3717,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../model.state.ts",{"_index":3720,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../reference",{"_index":3698,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../registration.state.ts",{"_index":3732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rotation",{"_index":3725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../scene.state.ts",{"_index":3700,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../slices",{"_index":3727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stage",{"_index":3718,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../store.module.ts",{"_index":3734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tag",{"_index":3726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../theming.service.ts",{"_index":3728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":590,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["src/app/app.component.ts:122",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:126",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:139",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:178",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:51",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:58",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:59",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:62",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:64",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:69",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":545,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.module.ts:53",{"_index":548,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":1347,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/models/anatomical",{"_index":3292,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/documentation.ts",{"_index":1510,"title":{},"body":{"interfaces/DocumentationContent.html":{}}}],["src/app/core/models/extraction",{"_index":1528,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["src/app/core/models/meta",{"_index":2091,"title":{},"body":{"interfaces/MetaDataField.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/visibility",{"_index":3603,"title":{},"body":{"interfaces/VisibilityItem.html":{}}}],["src/app/core/services/config/config.module.ts",{"_index":1033,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/app/core/services/config/config.ts",{"_index":1584,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/theming/theming.module.ts",{"_index":3466,"title":{},"body":{"modules/ThemingModule.html":{}}}],["src/app/core/services/theming/theming.service.ts",{"_index":3471,"title":{},"body":{"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/theming/theming.service.ts:29",{"_index":3483,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:33",{"_index":3478,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:47",{"_index":3480,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:56",{"_index":3491,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:68",{"_index":3489,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:78",{"_index":3487,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/store/anatomical",{"_index":6,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["src/app/core/store/icon",{"_index":1365,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/model/model.state.ts",{"_index":2094,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/page/page.state.ts",{"_index":2392,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["src/app/core/store/page/page.state.ts:101",{"_index":2416,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:122",{"_index":2410,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:139",{"_index":2425,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:149",{"_index":2428,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:167",{"_index":2420,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:184",{"_index":2417,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:193",{"_index":2418,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:205",{"_index":2411,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:243",{"_index":2412,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:253",{"_index":2431,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:60",{"_index":2446,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:62",{"_index":2442,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:63",{"_index":2444,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:64",{"_index":2440,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:65",{"_index":2438,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:66",{"_index":2436,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:69",{"_index":2448,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:74",{"_index":2450,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:82",{"_index":2452,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/page/page.state.ts:84",{"_index":2409,"title":{},"body":{"injectables/PageState.html":{}}}],["src/app/core/store/reference",{"_index":2303,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/store/registration/registration.state.ts",{"_index":2714,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/registration/registration.state.ts:123",{"_index":2726,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:141",{"_index":2733,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:178",{"_index":2730,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:223",{"_index":2749,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:233",{"_index":2742,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:243",{"_index":2728,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:257",{"_index":2745,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:261",{"_index":2732,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:275",{"_index":2763,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:284",{"_index":2735,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:320",{"_index":2747,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:54",{"_index":2751,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:58",{"_index":2753,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:66",{"_index":2755,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:73",{"_index":2757,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:82",{"_index":2759,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/registration/registration.state.ts:90",{"_index":2761,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["src/app/core/store/scene/scene.state.ts",{"_index":751,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/scene/scene.state.ts:109",{"_index":3131,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:124",{"_index":3133,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:157",{"_index":3135,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:173",{"_index":3136,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:186",{"_index":3138,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:223",{"_index":3140,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:237",{"_index":3141,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:254",{"_index":3143,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:276",{"_index":3125,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:302",{"_index":3123,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:320",{"_index":3124,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:71",{"_index":3127,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/scene/scene.state.ts:90",{"_index":3129,"title":{},"body":{"injectables/SceneState.html":{}}}],["src/app/core/store/store.module.ts",{"_index":3262,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/content/content.component.ts",{"_index":1135,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:112",{"_index":1161,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:120",{"_index":1154,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:130",{"_index":1153,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:32",{"_index":1150,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:34",{"_index":1149,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:36",{"_index":1193,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:41",{"_index":1183,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:43",{"_index":1175,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:54",{"_index":1184,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:59",{"_index":1176,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:64",{"_index":1194,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.component.ts:67",{"_index":1147,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/modules/content/content.module.ts",{"_index":1334,"title":{},"body":{"modules/ContentModule.html":{}}}],["src/app/modules/content/stage",{"_index":3177,"title":{},"body":{"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/content/video",{"_index":3547,"title":{},"body":{"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{}}}],["src/app/modules/header/header.component.ts",{"_index":1600,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/modules/header/header.component.ts:16",{"_index":1606,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/modules/header/header.component.ts:18",{"_index":1605,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/modules/header/header.component.ts:20",{"_index":1604,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/modules/header/header.module.ts",{"_index":1630,"title":{},"body":{"modules/HeaderModule.html":{}}}],["src/app/modules/left",{"_index":1953,"title":{},"body":{"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{}}}],["src/app/modules/registration",{"_index":2527,"title":{},"body":{"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{}}}],["src/app/modules/review/review",{"_index":2934,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{}}}],["src/app/modules/right",{"_index":3040,"title":{},"body":{"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{}}}],["src/app/shared/components/block",{"_index":652,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/details",{"_index":1474,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts",{"_index":1040,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:42",{"_index":1054,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:60",{"_index":1056,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:67",{"_index":1050,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts",{"_index":1237,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:27",{"_index":1253,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:29",{"_index":1254,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:31",{"_index":1256,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:33",{"_index":1257,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:35",{"_index":1251,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:40",{"_index":1249,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["src/app/shared/components/drawer/drawer.module.ts",{"_index":1521,"title":{},"body":{"modules/DrawerModule.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":1703,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:52",{"_index":1707,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:62",{"_index":1708,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/messages.ts",{"_index":1304,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/drawer/toggle",{"_index":3518,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["src/app/shared/components/extraction",{"_index":1533,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{}}}],["src/app/shared/components/json",{"_index":1856,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{}}}],["src/app/shared/components/labeled",{"_index":1909,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{}}}],["src/app/shared/components/name",{"_index":2257,"title":{},"body":{"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/UserName.html":{}}}],["src/app/shared/components/registration",{"_index":2623,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{}}}],["src/app/shared/components/rotation",{"_index":3083,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/slices",{"_index":3144,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/tag",{"_index":3296,"title":{},"body":{"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/visibility",{"_index":3606,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{}}}],["src/app/shared/services/message/message.service.ts",{"_index":2024,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/message/message.service.ts:126",{"_index":2088,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message/message.service.ts:160",{"_index":2089,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message/message.service.ts:45",{"_index":2081,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:65",{"_index":2085,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:78",{"_index":2082,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:88",{"_index":2083,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:98",{"_index":2084,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/environments/environment.prod.ts",{"_index":3735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.staging.ts",{"_index":3762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stage",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["stage_nav",{"_index":3240,"title":{},"body":{"components/StageNavComponent.html":{}}}],["stagenavcomponent",{"_index":507,"title":{"components/StageNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["stagenavmodule",{"_index":1332,"title":{"modules/StageNavModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/StageNavModule.html":{},"index.html":{},"modules.html":{}}}],["stamp",{"_index":2883,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["start",{"_index":1074,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["start?.expanded",{"_index":1297,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["start?.opened",{"_index":1296,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["startdrawers",{"_index":1122,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers.length",{"_index":1126,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers[0",{"_index":1130,"title":{},"body":{"components/ContainerComponent.html":{}}}],["started",{"_index":2241,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["startexpanded",{"_index":1295,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["startup",{"_index":1370,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/RegistrationModalComponent.html":{},"miscellaneous/variables.html":{}}}],["startwith",{"_index":776,"title":{},"body":{"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["state",{"_index":14,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["state$.pipe(map((x",{"_index":2784,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["state('closed",{"_index":1744,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('collapsed",{"_index":1749,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('false",{"_index":1266,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["state('true",{"_index":1267,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["state.organspatialentities[updatediri",{"_index":2380,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["statechange",{"_index":1772,"title":{},"body":{"classes/InitializationState.html":{}}}],["staterepository",{"_index":86,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["states",{"_index":146,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContentComponent-1.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":1852,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{}}}],["stomach",{"_index":1452,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["stomach.svg",{"_index":1453,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":1234,"title":{},"body":{"components/ContentComponent.html":{},"modules/StoreModule.html":{}}}],["store/store.module",{"_index":1354,"title":{},"body":{"modules/CoreModule.html":{}}}],["stored",{"_index":3085,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["storedebugmodule",{"_index":1337,"title":{},"body":{"modules/ContentModule.html":{}}}],["storemodule",{"_index":1345,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"index.html":{},"modules.html":{}}}],["strange",{"_index":3274,"title":{},"body":{"modules/StoreModule.html":{}}}],["string",{"_index":59,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1480,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["structure",{"_index":7,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/DocumentationContent.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["structure.opacity",{"_index":2206,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["structures",{"_index":1981,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["strvalue",{"_index":3153,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["style",{"_index":1262,"title":{},"body":{"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/VisibilityToggleComponent.html":{}}}],["style.margin",{"_index":1246,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["styled",{"_index":2951,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["styles",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["styles.getpropertyvalue(property",{"_index":1794,"title":{},"body":{"classes/InitializationState.html":{}}}],["styleurls",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["styling",{"_index":1882,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["sub",{"_index":1324,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":2031,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/TagSearchComponent.html":{}}}],["subscribe",{"_index":2238,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["subscribe((result",{"_index":3409,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["subscribe(updateskipconfirmation",{"_index":2496,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["subscription",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["subscriptions",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["successful",{"_index":1668,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["suffix",{"_index":727,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["suffix.show",{"_index":3172,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["super",{"_index":142,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["super(configstore",{"_index":638,"title":{},"body":{"components/AppWebComponent.html":{}}}],["super.ngxsoninit",{"_index":144,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["support",{"_index":3709,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1379,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["switch",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["switchmap",{"_index":777,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["switchmap((data",{"_index":2344,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["switchmap((endpoint",{"_index":990,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["switchmap((fetch",{"_index":2788,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["switchmap((organ",{"_index":2236,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["switchmap((url",{"_index":2342,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["switchmap(this.executesearch",{"_index":3408,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["syncexpanded(other",{"_index":1840,"title":{},"body":{"classes/InitializationState.html":{}}}],["syncs",{"_index":1837,"title":{},"body":{"classes/InitializationState.html":{}}}],["t",{"_index":2027,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["t.label).join",{"_index":2882,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["tag",{"_index":11,"title":{"interfaces/Tag.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tag.id",{"_index":162,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{}}}],["tag.label",{"_index":3322,"title":{},"body":{"components/TagListComponent.html":{}}}],["tag.label).join",{"_index":3424,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["tag.ts",{"_index":3293,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["tag.type",{"_index":121,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagListComponent.html":{}}}],["tag_list",{"_index":3321,"title":{},"body":{"components/TagListComponent.html":{}}}],["tag_search",{"_index":3423,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["tagclasses",{"_index":3301,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagclasses(tag",{"_index":3311,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagid",{"_index":96,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["tagid(_index",{"_index":3313,"title":{},"body":{"components/TagListComponent.html":{},"components/TagSearchComponent.html":{}}}],["taglistcomponent",{"_index":509,"title":{"components/TagListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["taglistmodule",{"_index":3067,"title":{"modules/TagListModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/TagListModule.html":{},"index.html":{},"modules.html":{}}}],["tagremoved",{"_index":3302,"title":{},"body":{"components/TagListComponent.html":{}}}],["tags",{"_index":25,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{}}}],["tags.length",{"_index":3420,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["tags.map((t",{"_index":2881,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["tags.map((tag",{"_index":2898,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagSearchComponent.html":{}}}],["tags.push",{"_index":130,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["tags.push(tag",{"_index":124,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["tags.state",{"_index":2771,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{}}}],["tags.state.ts",{"_index":9,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["tags.state.ts:108",{"_index":53,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:115",{"_index":49,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:120",{"_index":57,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:136",{"_index":63,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:36",{"_index":76,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:68",{"_index":79,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:77",{"_index":31,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:91",{"_index":54,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags/anatomical",{"_index":8,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{}}}],["tags].every((value",{"_index":2981,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["tagschange",{"_index":3303,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagsearchcomponent",{"_index":511,"title":{"components/TagSearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["tagsearchmodule",{"_index":3068,"title":{"modules/TagSearchModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/TagSearchModule.html":{},"index.html":{},"modules.html":{}}}],["tagsearchresult",{"_index":97,"title":{"interfaces/TagSearchResult.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["take",{"_index":778,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["take(1",{"_index":996,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["takes",{"_index":1478,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/JsonFileReaderComponent.html":{}}}],["takeuntil",{"_index":3396,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["takeuntil(this.destroy",{"_index":3406,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["takewhile",{"_index":2033,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["tap",{"_index":2114,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["tap(([page",{"_index":2696,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["tap(([reg",{"_index":2468,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["tap((reg",{"_index":2805,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["target",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["target.classname",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.classname.includes(classname",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.key",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.preventdefault",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.repeat",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["template",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["templateurl",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["temporary",{"_index":1231,"title":{},"body":{"components/ContentComponent.html":{}}}],["testing",{"_index":1180,"title":{},"body":{"components/ContentComponent.html":{}}}],["text",{"_index":66,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{}}}],["textfield",{"_index":712,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["theme",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["thememode",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["theming",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["theming.initialize(el",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["theming.service",{"_index":3468,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":1346,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"index.html":{},"modules.html":{}}}],["themingservice",{"_index":223,"title":{"injectables/ThemingService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"index.html":{}}}],["themingservice.initialize",{"_index":3469,"title":{},"body":{"modules/ThemingModule.html":{}}}],["thick",{"_index":1462,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thick.svg",{"_index":1463,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thickness",{"_index":2119,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":1464,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["thin.svg",{"_index":1465,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":148,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this._expanded",{"_index":1763,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._latesttags",{"_index":137,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this._measuredmargin",{"_index":1792,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredwidth",{"_index":1783,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._name",{"_index":2288,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this._opened",{"_index":1759,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._position",{"_index":1756,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.added.emit(tags",{"_index":3425,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.addentityone",{"_index":164,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.addregistration(jsonobj",{"_index":2862,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.addtagraw(tag",{"_index":159,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.animationsenabled",{"_index":1281,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.applythemeclass(theme",{"_index":3502,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.gettheme",{"_index":3506,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.theme",{"_index":3501,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.blocksize",{"_index":689,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.blocksize[key",{"_index":693,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.blocksizechange.emit(this.blocksize",{"_index":694,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.buildjsonld(page",{"_index":2779,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.buildjsonld(page.snapshot",{"_index":2850,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.buildmetadata(page",{"_index":2778,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.cdr.markforcheck",{"_index":1108,"title":{},"body":{"components/ContainerComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.channel",{"_index":1095,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.asobservable",{"_index":2068,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.closed))]).pipe",{"_index":2071,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.complete",{"_index":2073,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.getmessages().subscribe((msg",{"_index":1097,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.channel.next",{"_index":2048,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.sendmessage",{"_index":1105,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.checkedresults",{"_index":3411,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.checknamevalid(user",{"_index":2580,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["this.closedialog",{"_index":2596,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.collisions",{"_index":876,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.consentservice.consent",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.content",{"_index":1110,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":1109,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.first",{"_index":1090,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.length",{"_index":1092,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content2.first",{"_index":1091,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.createscenenodes",{"_index":851,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.ctx.patchstate",{"_index":2165,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ctx.setstate",{"_index":2482,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.currentdate",{"_index":2884,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.currentidentifier",{"_index":2886,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.currentorgan",{"_index":2595,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.currentsex",{"_index":2590,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.defaultposition",{"_index":2187,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.defaulttheme",{"_index":3500,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.deferred",{"_index":1735,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.destroy$.complete",{"_index":3415,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.destroy$.next",{"_index":3414,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.dialog.open(registrationcontentcomponent",{"_index":2704,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.dialog.open(reviewmodalcomponent",{"_index":2990,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.dialog.open(videomodalcomponent",{"_index":3584,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["this.dialogopen",{"_index":2697,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.dialogref.close",{"_index":3027,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["this.dialogref.close(true",{"_index":2600,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.disablepositionchange",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.drawer",{"_index":3536,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawer.position",{"_index":3534,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawers",{"_index":1277,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":1103,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.drawers.toarray",{"_index":1121,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.editregistration(initialwithchanges",{"_index":2873,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.editregistration(reg",{"_index":2806,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.el.nativeelement.contains(event.target",{"_index":3431,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.element",{"_index":3505,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.element.nativeelement",{"_index":1784,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.entererrormode.emit",{"_index":2986,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.entities$.subscribe",{"_index":157,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.expanded",{"_index":1818,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":1827,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate",{"_index":1808,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate2",{"_index":1777,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.extractionsitetooltip",{"_index":1978,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.faded",{"_index":1301,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.fileinput.nativeelement",{"_index":1888,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.filternodebbox(nodes",{"_index":885,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.filternodecollisions(nodes",{"_index":883,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.firstnamevalidator.setvalue(value?.firstname",{"_index":2290,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.ga.event",{"_index":2168,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ga.event('all_items_opacity_update",{"_index":3658,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('block_size_change",{"_index":691,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.ga.event('block_size_reset",{"_index":697,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.ga.event('item_reset",{"_index":3656,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('json_file_load_end",{"_index":1895,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.ga.event('json_file_load_start",{"_index":1898,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.ga.event('name_updated",{"_index":2295,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.ga.event('opacity_update",{"_index":3653,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('organ_select",{"_index":2182,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ga.event('register",{"_index":2997,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.ga.event('review_start",{"_index":2987,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.ga.event('selected_extraction_set_change",{"_index":1560,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.ga.event('side_update",{"_index":3239,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.ga.event('slice_config_reset",{"_index":3160,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.ga.event('slice_config_update",{"_index":3155,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.ga.event('slide_toggle_toggled",{"_index":1939,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.ga.event('tag_removed",{"_index":3320,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.ga.event('tags_added",{"_index":3422,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.ga.event('view_update",{"_index":3246,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.ga.event('visibility_toggled",{"_index":3643,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["this.getarguments(definition",{"_index":1682,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getcollisions(jsonld",{"_index":975,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.getlatestiri(iri",{"_index":2379,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getlatestiri(key",{"_index":2373,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getlatestiri(organentry.target",{"_index":2391,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getmessages().pipe(filter((msg",{"_index":2057,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.getmethodname(definition",{"_index":1678,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getorganspatialentity(organiri",{"_index":847,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.getpreviousregistrationnodes(organiri",{"_index":893,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.getsourcedb().subscribe((db",{"_index":2330,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getupdatedcheckedresults(result",{"_index":3412,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.globalconfig",{"_index":2233,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.globalconfig.config",{"_index":2467,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.globalconfig.getoption('basehref').pipe",{"_index":2338,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalconfig.getoption('collisionsendpoint').pipe",{"_index":989,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.globalconfig.getoption('header",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('homeurl",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('homeurl').subscribe((url",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('logotooltip",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('logotooltip').subscribe((tooltip",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('skipunsavedchangesconfirmation').pipe",{"_index":2462,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.globalconfig.getoption('theme",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.snapshot.basehref",{"_index":1664,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.globalconfig.state",{"_index":2695,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.globals.set('db",{"_index":2336,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalskipconfirmation$.pipe(filter((s",{"_index":2491,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.handlemessage(msg",{"_index":1098,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.haschanges",{"_index":2493,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.homeurl",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.hover.emit(item",{"_index":3646,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.hover.emit(undefined",{"_index":3647,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.http.post(endpoint",{"_index":991,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.idmatches(ontologyid",{"_index":2253,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.initialized",{"_index":1734,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.set",{"_index":1799,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.valueof",{"_index":1809,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.wait",{"_index":1833,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initskipconfirmationlisteners",{"_index":2476,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.injector",{"_index":587,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["this.injector.get(anatomicalstructuretagstate",{"_index":2799,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.injector.get(modelstate",{"_index":151,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(pagestate",{"_index":155,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.injector.get(referencedatastate",{"_index":980,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.injector.get(registrationstate",{"_index":978,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(scenestate",{"_index":153,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.isdatavalid(this.page.snapshot",{"_index":2848,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.isdropdownactive",{"_index":3229,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.isdropdownhidden",{"_index":3230,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.isorcidvalid",{"_index":2487,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.isvalid",{"_index":2782,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.items",{"_index":3651,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.items.map((i",{"_index":3657,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.items.map((item",{"_index":3652,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.itemschange.emit(this.items",{"_index":3655,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.labelref.nativeelement",{"_index":3234,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.labels[0",{"_index":1937,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.labels[1",{"_index":1938,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.lastnamevalidator.setvalue(value?.lastname",{"_index":2291,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.launchreviewmodal",{"_index":2989,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.leftmargin",{"_index":1290,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.loadyoutubeplayerapi",{"_index":3564,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.logotooltip",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.margin2",{"_index":1780,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredmargin",{"_index":1779,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredwidth",{"_index":1834,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.messages",{"_index":2067,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.messages.pipe(filter((msg",{"_index":2054,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.metadata",{"_index":2995,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["this.metadata.find((data",{"_index":2983,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.metadatalookup('anatomical",{"_index":2978,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.metadatalookup('reference",{"_index":2975,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.metadatalookup('tissue",{"_index":2976,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.middlenamevalidator.setvalue(value?.middlename",{"_index":2292,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.model",{"_index":150,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.blocksize",{"_index":928,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.defaultposition.x",{"_index":1167,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.defaultposition.y",{"_index":1170,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.defaultposition.z",{"_index":1172,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.extractionsites",{"_index":842,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organ",{"_index":931,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organ$.pipe(map((organ",{"_index":1974,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.organdimensions$.pipe",{"_index":1164,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.organiri",{"_index":854,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organiri$.pipe(filter((iri",{"_index":896,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organiri$]).pipe",{"_index":843,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.position",{"_index":930,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.position$.pipe",{"_index":1188,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.position$]).pipe",{"_index":898,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.rotation",{"_index":929,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.setblocksize",{"_index":2822,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setorgan(data.organ",{"_index":2817,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setorgan(this.currentorgan",{"_index":2598,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.setorgandefaults",{"_index":2599,"title":{},"body":{"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setposition",{"_index":2833,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setposition(newposition",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["this.model.setrotation",{"_index":2826,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setsex(data.sex",{"_index":2819,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setsex(label.tolowercase",{"_index":2661,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.model.setsex(this.currentsex",{"_index":2597,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.setside(data.side",{"_index":2821,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setslicesconfig",{"_index":2830,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.sex$.pipe(map((sex",{"_index":2574,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.showprevious",{"_index":888,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot",{"_index":939,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.anatomicalstructures",{"_index":2837,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.snapshot.anatomicalstructures.filter",{"_index":166,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.model.snapshot.blocksize",{"_index":900,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.organdimensions",{"_index":1016,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.position",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.model.snapshot.rotation",{"_index":901,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.state",{"_index":2693,"title":{},"body":{"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.state$]).pipe(map",{"_index":2781,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.viewside$.pipe",{"_index":956,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.viewtype",{"_index":927,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.viewtype$.pipe(map((type",{"_index":1182,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.modelchanged",{"_index":2239,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.name",{"_index":2294,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.namechange.emit(this.name",{"_index":2297,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.namematches(organname",{"_index":2254,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.namevalid",{"_index":2592,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["this.nextmessageid",{"_index":2049,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nodecollisions",{"_index":821,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.nodes$]).pipe",{"_index":831,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.onorganchange(organ",{"_index":2237,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.onorganirichange",{"_index":2185,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.onreferencedatachange",{"_index":2156,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.opendialog",{"_index":2703,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.opened",{"_index":1806,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.openedchange.emit(this.opened",{"_index":1823,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openedstate",{"_index":1807,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.optionsref.nativeelement",{"_index":3236,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.orcid",{"_index":2652,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.orcidcontrol.haserror('pattern",{"_index":2657,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.orcidtouri(id",{"_index":2486,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.orcidvalid",{"_index":2581,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.organlist",{"_index":2589,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.organlistoptions(ids",{"_index":2842,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.organselected",{"_index":2584,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.page",{"_index":154,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.page.clearhaschanges",{"_index":2861,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.page.organoptions$.subscribe((options",{"_index":2588,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.page.patchstate",{"_index":2841,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["this.page.registrationstarted",{"_index":2601,"title":{},"body":{"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["this.page.sethaschanges",{"_index":158,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.page.setorcidid",{"_index":2802,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.page.setorcidid(orcid",{"_index":2816,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.page.setorcidid(value",{"_index":2658,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.page.setusername",{"_index":2811,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.page.uritoorcid(reg.creator_orcid",{"_index":2815,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.parsedjson.emit(json",{"_index":1897,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.patchstate",{"_index":2490,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.placementcube",{"_index":818,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.placementcube$]).pipe",{"_index":877,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.position",{"_index":1755,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.previousregistrationnodes",{"_index":820,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.refdata",{"_index":2800,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.getorgandata(place.target",{"_index":2810,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.normalizeplacement(array.isarray(reg.placement",{"_index":2807,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.state$.subscribe",{"_index":2801,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.referencedata",{"_index":979,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.getorgandata(organ",{"_index":2245,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.getreferenceorganiri",{"_index":2210,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.snapshot",{"_index":982,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state",{"_index":2694,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.referencedata.state$.pipe(tap",{"_index":2256,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state$.subscribe",{"_index":2155,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state$]).pipe",{"_index":855,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.referenceorgannodes",{"_index":819,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registerdata.emit",{"_index":2998,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.registericonimpl(def",{"_index":1657,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registericonimpl(definition",{"_index":1670,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registration",{"_index":977,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registration.editregistration(reg",{"_index":2660,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.registration.previousregistrations",{"_index":889,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registration.throttledjsonld$).pipe",{"_index":973,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registrationcallbackset",{"_index":2994,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["this.registrationexpanded",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.registrationisvalid",{"_index":2979,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.registrationselected",{"_index":2578,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.registrationselected.emit",{"_index":2659,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.registrationstarted",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.registry",{"_index":1674,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registry?.addsvgiconresolver((name",{"_index":1659,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.renderer2.appendchild(this.document.body",{"_index":3570,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.renderer2.createelement('script",{"_index":3566,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.resolve",{"_index":1732,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.resultsvisible",{"_index":3428,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.rightmargin",{"_index":1291,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(def.html",{"_index":1655,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(basehref",{"_index":1665,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.scene",{"_index":152,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.scene.nodecollisions$]).pipe",{"_index":112,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.searchcontrol.valuechanges",{"_index":3405,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.searchresults",{"_index":3410,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.selected",{"_index":1559,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.selection",{"_index":3641,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.selection.id",{"_index":3642,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.sendtoggle",{"_index":1810,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.sensor",{"_index":1205,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.setallopacity(updatedselection.opacity",{"_index":3650,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.setanatomicalstructures(newstructures",{"_index":2208,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setanatomicalstructures(previousitems",{"_index":2202,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setchange.emit(value",{"_index":1563,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.setdisplayerrors(false",{"_index":2860,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.setorganselection(organoptions",{"_index":2803,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.sets.length",{"_index":1564,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.setsexfromlabel(sex",{"_index":2586,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.setshowprevious(visible",{"_index":2201,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setstate",{"_index":2469,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.setstate(db",{"_index":2331,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.settheme(this.defaulttheme",{"_index":3503,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.sexbylabel$.subscribe((sex",{"_index":2585,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.sexselected",{"_index":2591,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.side",{"_index":3243,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.sidechange.emit(this.side",{"_index":3244,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.skipconfirmation$.subscribe((skipconfirmation",{"_index":2501,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.slicesconfig",{"_index":3154,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.slicesconfig[key",{"_index":3157,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.slicesconfigchange.emit(this.slicesconfig",{"_index":3158,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.snackbar.openfromcomponent(trackingpopupcomponent",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.snapshot",{"_index":2346,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.snapshot.blocksize",{"_index":2176,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.entities[tag.id",{"_index":160,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.snapshot.initialregistration",{"_index":2864,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.snapshot.organ",{"_index":2214,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.name}_placement",{"_index":2169,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.organ",{"_index":2211,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.sex",{"_index":2215,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organdimensions",{"_index":2175,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.placementpatches[organ",{"_index":2390,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.snapshot.sex",{"_index":2212,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.showcollisions",{"_index":828,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.snapshot.side",{"_index":2213,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.source",{"_index":2050,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.spatialkeyboardaxis",{"_index":822,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe",{"_index":2128,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(map((x",{"_index":2434,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.state$.pipe(pluckunique('haschanges",{"_index":2465,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluckunique('registrationstarted",{"_index":2441,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluckunique('skipconfirmation",{"_index":2461,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.statechange.emit",{"_index":1835,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.subscriptions.add",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["this.subscriptions.unsubscribe",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["this.syncexpanded(other",{"_index":1836,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.tagremoved.emit(tag",{"_index":3323,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.tags",{"_index":2798,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagListComponent.html":{}}}],["this.tags$.subscribe((tags",{"_index":156,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.tags.addtags",{"_index":2836,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.tags.filter((obj",{"_index":3318,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.tags.latesttags",{"_index":2852,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.tags.tags$]).pipe",{"_index":2776,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.tagschange.emit(this.tags",{"_index":3324,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.theme",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["this.theme$.subscribe((theme",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$.next('light",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$.next(this.islighttheme",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$]).subscribe(([theme",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.gettheme().endswith('light",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.settheme(`${theme",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.settheme(`${this.theme",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":1761,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(false",{"_index":1804,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(true",{"_index":1802,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":1765,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(false",{"_index":1816,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(true",{"_index":1813,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.updateentitiesmany",{"_index":161,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.updatefaded",{"_index":1279,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.updatemargin(position",{"_index":1287,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.updateopacity(item.opacity",{"_index":3645,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.updateview(false",{"_index":3242,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.updateview(true",{"_index":3241,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.uploadtext",{"_index":2655,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.uritoorcid(this.snapshot.user.orcidid",{"_index":2504,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.uservalid",{"_index":2980,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.validatedrawers",{"_index":1104,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.value",{"_index":1936,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.valuechange.emit(this.value",{"_index":1941,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.view3d",{"_index":3245,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.view3dchange.emit(this.view3d",{"_index":3247,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.visibilitychanged.emit(this.visible",{"_index":3683,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["this.visible",{"_index":3681,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["this.width",{"_index":1778,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.xyztriplettostring(model.blocksize",{"_index":2878,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.xyztriplettostring(model.position",{"_index":2879,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.xyztriplettostring(model.rotation",{"_index":2880,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["those",{"_index":2052,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["throttle",{"_index":3363,"title":{},"body":{"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["throttledjsonld",{"_index":2724,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["throttletime",{"_index":779,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["throttletime(0",{"_index":2150,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["throttletime(jsonld_throttle_duration",{"_index":2780,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["throttletime(node_collision_throttle_duration",{"_index":878,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["through",{"_index":3092,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["throw",{"_index":1076,"title":{},"body":{"components/ContainerComponent.html":{},"modules/CoreModule.html":{}}}],["throwduplicatedrawerserror",{"_index":3703,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throwduplicatedrawerserror('end",{"_index":1129,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror('start",{"_index":1127,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror(position",{"_index":1073,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["thrown",{"_index":1072,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throws",{"_index":1068,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["thumb",{"_index":3115,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["thymus",{"_index":1454,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thymus.svg",{"_index":1455,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":2793,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["timing",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/VisibilityMenuComponent.html":{}}}],["tissue",{"_index":657,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["title",{"_index":713,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/DocumentationContent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["toggle",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle'},{'name",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle(opened",{"_index":1805,"title":{},"body":{"classes/InitializationState.html":{}}}],["toggle.component",{"_index":1952,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["toggle.component.html",{"_index":1915,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.scss",{"_index":1914,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts",{"_index":1911,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:17",{"_index":1928,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:18",{"_index":3679,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:22",{"_index":1922,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:23",{"_index":3678,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:27",{"_index":1925,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:29",{"_index":3676,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:32",{"_index":1921,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:34",{"_index":3675,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:37",{"_index":1920,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:40",{"_index":3674,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:49",{"_index":1934,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:52",{"_index":3680,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:59",{"_index":1930,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.module",{"_index":2022,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["toggle.module.ts",{"_index":1949,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["toggle/labeled",{"_index":1910,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/StageNavModule.html":{}}}],["toggle/visibility",{"_index":2021,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{}}}],["togglebuttoncomponent",{"_index":513,"title":{"components/ToggleButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["toggled",{"_index":1282,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["toggleexpanded(expanded",{"_index":1817,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglelabel",{"_index":3672,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggleregistrationblocksvisibility(visible",{"_index":2200,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["toggles",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["togglescheme",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["togglevisibility",{"_index":3615,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["togglevisibility(item",{"_index":3636,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["toggling",{"_index":3204,"title":{},"body":{"components/StageNavComponent.html":{}}}],["token",{"_index":2038,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["tonode",{"_index":1009,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tonsil",{"_index":1433,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tonsil.svg",{"_index":1434,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tooltip",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}}}],["top",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toradians",{"_index":756,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["total",{"_index":3294,"title":{},"body":{"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["totalcount",{"_index":169,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":1134,"title":{},"body":{"components/ContainerComponent.html":{}}}],["trachea",{"_index":1456,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["trachea.svg",{"_index":1457,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":1972,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["trackingpopupcomponent",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["trackingpopupmodule",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["trailing",{"_index":881,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["transform",{"_index":716,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["transformmatrix",{"_index":835,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["transition",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["transition('closed",{"_index":1745,"title":{},"body":{"classes/InitializationState.html":{}}}],["transition('false",{"_index":1268,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["translate",{"_index":3588,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["translate([p.x_translation",{"_index":1018,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["translate([position.x",{"_index":946,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["translation_units",{"_index":2921,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["tree",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["trigger",{"_index":1263,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{}}}],["trigger('expandcollapse",{"_index":1748,"title":{},"body":{"classes/InitializationState.html":{}}}],["trigger('fadeinout",{"_index":1265,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["trigger('openclose",{"_index":1743,"title":{},"body":{"classes/InitializationState.html":{}}}],["triggerfileinput",{"_index":1864,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["triplet",{"_index":2922,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["true",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["true=left",{"_index":1931,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["truncateresults(result",{"_index":3440,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["truncates",{"_index":3439,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["try",{"_index":634,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["tube",{"_index":1406,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tuple",{"_index":1119,"title":{},"body":{"components/ContainerComponent.html":{}}}],["turns",{"_index":2958,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["two",{"_index":1923,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["tx",{"_index":3705,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tx.translate(t).rotatexyz(r).scale(s",{"_index":2321,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["type",{"_index":38,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3713,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["types",{"_index":1313,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":793,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["typography",{"_index":3033,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["ui",{"_index":626,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["undefined",{"_index":879,"title":{},"body":{"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["under",{"_index":1380,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["unique",{"_index":2025,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["unknown",{"_index":632,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{}}}],["unlike",{"_index":1371,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["unpickable",{"_index":955,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["unset",{"_index":3542,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["until",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"interfaces/User.html":{}}}],["untypedformcontrol",{"_index":2272,"title":{},"body":{"components/NameInputComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{}}}],["unused",{"_index":3316,"title":{},"body":{"components/TagListComponent.html":{},"components/TagSearchComponent.html":{}}}],["up",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{}}}],["update",{"_index":3100,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["updateblocksizes",{"_index":698,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["updateblocksizes(input",{"_index":685,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["updated",{"_index":684,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["updatediri",{"_index":2378,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["updatednewrotation",{"_index":3102,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["updatedselection",{"_index":3648,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updatedselection.id",{"_index":3649,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updatedselection.opacity",{"_index":3654,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateextractionsitetooltip",{"_index":1959,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updateextractionsitetooltip(item",{"_index":1964,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updatefaded",{"_index":1294,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatemargin(position",{"_index":1288,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatename",{"_index":2263,"title":{},"body":{"components/NameInputComponent.html":{}}}],["updatename(input",{"_index":2268,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["updateopacity",{"_index":3616,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateopacity(value",{"_index":3639,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateorcid",{"_index":2631,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["updateorcid(value",{"_index":2642,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["updates",{"_index":680,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["updateside",{"_index":3189,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateside(selection",{"_index":3216,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateskipconfirmation",{"_index":2489,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["updateslicesdata",{"_index":3161,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["updateslicesdata(input",{"_index":3152,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["updatetoggle",{"_index":1916,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updatetoggle(selection",{"_index":1929,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updateview",{"_index":3190,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateview(selection",{"_index":3219,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updating",{"_index":3098,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["upload",{"_index":1867,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["uploaded",{"_index":1872,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["uploadtext",{"_index":2628,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["upperbound",{"_index":807,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["upperbound[i",{"_index":811,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ureter",{"_index":1458,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uri",{"_index":2422,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["uri.split('/').slice",{"_index":2510,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["uritoorcid",{"_index":2403,"title":{},"body":{"injectables/PageState.html":{}}}],["uritoorcid(uri",{"_index":2430,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["url",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1647,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["use",{"_index":1216,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["usecallback",{"_index":2737,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["usecancelregistrationcallback",{"_index":2396,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["used",{"_index":41,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["usedownload",{"_index":603,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["usedropdownmenu",{"_index":3191,"title":{},"body":{"components/StageNavComponent.html":{}}}],["usedropdownmenu(value",{"_index":3228,"title":{},"body":{"components/StageNavComponent.html":{}}}],["usefactory",{"_index":1038,"title":{},"body":{"modules/ConfigModule.html":{}}}],["useful",{"_index":1070,"title":{},"body":{"components/ContainerComponent.html":{}}}],["user",{"_index":306,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["user's",{"_index":2286,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{}}}],["useregistrationcallback",{"_index":2773,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["username",{"_index":2266,"title":{"interfaces/UserName.html":{}},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["uservalid",{"_index":2944,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["usevalue",{"_index":582,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["uterus",{"_index":1459,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uterus.svg",{"_index":1460,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uuid",{"_index":2769,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["uuidv4",{"_index":2768,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["v",{"_index":3417,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["v1[key",{"_index":2153,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v2",{"_index":2152,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v2[key",{"_index":2154,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v4",{"_index":2767,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["valid",{"_index":2376,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["validate",{"_index":2275,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["validatedrawers",{"_index":1120,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validates",{"_index":1117,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validating",{"_index":2650,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["validators",{"_index":2284,"title":{},"body":{"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/UserName.html":{}}}],["validators.pattern('^[a",{"_index":2648,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["validators.required",{"_index":2273,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["value",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.name",{"_index":1562,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["valuechange",{"_index":1919,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["valueof",{"_index":1737,"title":{},"body":{"classes/InitializationState.html":{}}}],["values",{"_index":675,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["variable",{"_index":1970,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["variables",{"_index":3722,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1461,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["vec3",{"_index":759,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["vec3(...lowerbound.map((n",{"_index":809,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["vec3(...upperbound.map((n",{"_index":812,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["very",{"_index":1186,"title":{},"body":{"components/ContentComponent.html":{}}}],["via",{"_index":3089,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["video",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["videomodalcomponent",{"_index":515,"title":{"components/VideoModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["videomodallaunchercomponent",{"_index":517,"title":{"components/VideoModalLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["videomodallaunchermodule",{"_index":1333,"title":{"modules/VideoModalLauncherModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/VideoModalLauncherModule.html":{},"index.html":{},"modules.html":{}}}],["videomodalmodule",{"_index":3595,"title":{"modules/VideoModalModule.html":{}},"body":{"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"index.html":{},"modules.html":{}}}],["view",{"_index":1162,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["view3d",{"_index":3192,"title":{},"body":{"components/StageNavComponent.html":{}}}],["view3dchange",{"_index":3194,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild",{"_index":1886,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{}}}],["viewchild('closesearch",{"_index":3382,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["viewchild('fileinput",{"_index":1883,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["viewchild('label",{"_index":3223,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild('options",{"_index":3225,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchildren",{"_index":1061,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewchildren(contentcomponent",{"_index":1087,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewed",{"_index":2122,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["viewing",{"_index":3179,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewside",{"_index":1207,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["viewtype",{"_index":937,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["visibility",{"_index":520,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["visibility_menu",{"_index":3644,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["visibility_off",{"_index":1470,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_off_cube",{"_index":1471,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_on",{"_index":1468,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_toggle",{"_index":3682,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["visibilitychanged",{"_index":3673,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["visibilityitem",{"_index":783,"title":{"interfaces/VisibilityItem.html":{}},"body":{"interfaces/Collision.html":{},"interfaces/ExtractionSet.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["visibilityitems",{"_index":2199,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["visibilitymenucomponent",{"_index":519,"title":{"components/VisibilityMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["visibilitymenumodule",{"_index":2005,"title":{"modules/VisibilityMenuModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityMenuModule.html":{},"index.html":{},"modules.html":{}}}],["visibilitytogglecomponent",{"_index":522,"title":{"components/VisibilityToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["visibilitytogglemodule",{"_index":2006,"title":{"modules/VisibilityToggleModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{},"modules.html":{}}}],["visible",{"_index":2104,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["visual",{"_index":3114,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["void",{"_index":51,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["w",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["wait",{"_index":1706,"title":{},"body":{"classes/InitializationState.html":{}}}],["waits",{"_index":1829,"title":{},"body":{"classes/InitializationState.html":{}}}],["want",{"_index":1969,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["watch",{"_index":3586,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["wc",{"_index":593,"title":{},"body":{"components/AppWebComponent.html":{}}}],["wc'},{'name",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["web",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["webkit",{"_index":1132,"title":{},"body":{"components/ContainerComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["weight",{"_index":714,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["whenever",{"_index":1771,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["whether",{"_index":1057,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["white",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["width",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["widths",{"_index":1838,"title":{},"body":{"classes/InitializationState.html":{}}}],["window.location.hostname",{"_index":3758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window:click",{"_index":3354,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["window:click(event",{"_index":3367,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["window:focusin",{"_index":3355,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["window:focusin(event",{"_index":3369,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["within",{"_index":3096,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["withlatestfrom",{"_index":2457,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["withlatestfrom(this.globalskipconfirmation",{"_index":2494,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["without",{"_index":1085,"title":{},"body":{"components/ContainerComponent.html":{}}}],["workaround",{"_index":1848,"title":{},"body":{"classes/InitializationState.html":{}}}],["wrap",{"_index":3249,"title":{},"body":{"components/StageNavComponent.html":{}}}],["wrapped",{"_index":1058,"title":{},"body":{"components/ContainerComponent.html":{}}}],["wrapper",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["wrapping",{"_index":1086,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{}}}],["x",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["x,y,z",{"_index":1157,"title":{},"body":{"components/ContentComponent.html":{}}}],["x?.anatomicalstructures",{"_index":2144,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.blocksize",{"_index":2131,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.displayerrors",{"_index":2750,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["x?.extractionsets",{"_index":2145,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.extractionsites",{"_index":2143,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.id",{"_index":2130,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.orcidvalid",{"_index":2435,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.organ",{"_index":2137,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organdimensions",{"_index":2139,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organiri",{"_index":2138,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organoptions",{"_index":2437,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.position",{"_index":2133,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.registrationcallbackset",{"_index":2439,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.registrations",{"_index":2785,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["x?.rotation",{"_index":2132,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.sex",{"_index":2140,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.showprevious",{"_index":2142,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.side",{"_index":2141,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.slicesconfig",{"_index":2134,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.usecancelregistrationcallback",{"_index":2443,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.user",{"_index":2445,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.viewside",{"_index":2136,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.viewtype",{"_index":2135,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x_dimension",{"_index":902,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["x_rotation",{"_index":917,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["x_scaling",{"_index":923,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["x_translation",{"_index":908,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["xyz",{"_index":1226,"title":{},"body":{"components/ContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["xyztriplet",{"_index":2098,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["xyztriplettostring(xyz",{"_index":2924,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["y",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["y_dimension",{"_index":904,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["y_rotation",{"_index":919,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["y_scaling",{"_index":924,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["y_translation",{"_index":911,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["yes",{"_index":2423,"title":{},"body":{"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{}}}],["youtube",{"_index":3548,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["youtubeplayermodule",{"_index":3601,"title":{},"body":{"modules/VideoModalModule.html":{}}}],["z",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["z0",{"_index":2507,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["z_dimension",{"_index":906,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["z_rotation",{"_index":921,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["z_scaling",{"_index":925,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["z_translation",{"_index":914,"title":{},"body":{"interfaces/Collision.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["za",{"_index":2506,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["zoom",{"_index":543,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"index.html":{}}}],["zoombasedopacity",{"_index":971,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AnatomicalStructureTagState.html":{"url":"injectables/AnatomicalStructureTagState.html","title":"injectable - AnatomicalStructureTagState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnatomicalStructureTagState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Tag collection global state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsDataEntityCollectionsRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addTag\n                            \n                            \n                                    \n                                addTags\n                            \n                            \n                                    \n                                ngxsOnInit\n                            \n                            \n                                    \n                                removeTag\n                            \n                            \n                                    \n                                searchExternal\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tags$\n                                \n                                \n                                    latestTags\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:77\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTag(tag: Tag)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addTags\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTags(tags: Tag[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Tag[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:91\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeTag(tag: Tag)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchExternal\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchExternal(text: string, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:136\n                        \n                    \n\n\n            \n                \n                        Searches for matching tags (not in the state)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Search text\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Maximum returned results hint\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ObservableInput\n\n                        \n                            \n                                external Search result\n\n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tags$\n                    \n                \n\n                \n                    \n                        gettags$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:36\n                                \n                            \n                    \n                        \n                                Observable of tags\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        latestTags\n                    \n                \n\n                \n                    \n                        getlatestTags()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:68\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { createEntityCollections, EntityCollections } from '@angular-ru/common/entity';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { bind as Bind } from 'bind-decorator';\nimport { combineLatest, Observable, ObservableInput } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../models/anatomical-structure-tag';\nimport { ModelState } from '../model/model.state';\nimport { PageState } from '../page/page.state';\nimport { SceneState } from '../scene/scene.state';\n\n/** Tag state model */\nexport interface AnatomicalStructureTagStateModel {}\n\n/**\n * Tag collection global state\n */\n@StateRepository()\n@State>({\n  name: 'tags',\n  defaults: {\n    ...createEntityCollections(),\n  },\n})\n@Injectable()\nexport class AnatomicalStructureTagState extends NgxsDataEntityCollectionsRepository {\n  /** Observable of tags */\n  @Computed()\n  get tags$(): Observable {\n    return combineLatest([this.entities$, this.scene.nodeCollisions$]).pipe(\n      map(([entities, collisions]) => {\n        const tags: Tag[] = [];\n        const added = new Set();\n        const removed = new Set();\n        Object.entries(entities).forEach(([id, tag]) => {\n          if (tag.type === 'removed') {\n            removed.add(id);\n          } else {\n            added.add(id);\n            tags.push(tag);\n          }\n        });\n        for (const model of collisions) {\n          const iri = model.representation_of;\n          if (iri && !removed.has(iri) && !added.has(iri)) {\n            added.add(iri);\n            tags.push({\n              id: iri,\n              label: model.tooltip as string,\n              type: 'assigned',\n            });\n          }\n        }\n        return tags;\n      }),\n    );\n  }\n\n  private _latestTags: Tag[] = [];\n\n  get latestTags(): Tag[] {\n    return this._latestTags;\n  }\n\n  /** Reference to the model state */\n  private model!: ModelState;\n  /** Reference to the scene state */\n  private scene!: SceneState;\n\n  private page!: PageState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(private readonly injector: Injector) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.scene = this.injector.get(SceneState);\n    this.page = this.injector.get(PageState);\n\n    this.tags$.subscribe((tags) => {\n      this._latestTags = tags;\n    });\n\n    this.entities$.subscribe(() => this.page.setHasChanges());\n  }\n\n  @DataAction()\n  addTags(tags: Tag[]): void {\n    for (const tag of tags) {\n      this.addTagRaw(tag);\n    }\n  }\n\n  @DataAction()\n  addTag(tag: Tag): void {\n    this.addTagRaw(tag);\n  }\n\n  @DataAction()\n  removeTag(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'removed' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'removed' });\n    }\n  }\n\n  /**\n   * Searches for matching tags (not in the state)\n   *\n   * @param text Search text\n   * @param limit Maximum returned results hint\n   * @returns external Search result\n   */\n  @Bind\n  searchExternal(text: string, limit: number): ObservableInput {\n    const matches = this.model.snapshot.anatomicalStructures.filter(\n      (as) => as.name.toLowerCase().indexOf(text.toLowerCase()) !== -1,\n    );\n    return [\n      {\n        totalCount: matches.length,\n        results: matches\n          .map(\n            (as): Tag => ({\n              id: as.id,\n              label: as.name,\n              type: 'added',\n            }),\n          )\n          .slice(0, limit),\n      },\n    ];\n  }\n\n  /**\n   * Adds a tag. Implementation helper for `addTags` and `addTag`\n   *\n   * @param tag The tag\n   */\n  private addTagRaw(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'added' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'added' });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnatomicalStructureTagStateModel.html":{"url":"interfaces/AnatomicalStructureTagStateModel.html","title":"interface - AnatomicalStructureTagStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnatomicalStructureTagStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Tag state model\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { createEntityCollections, EntityCollections } from '@angular-ru/common/entity';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { bind as Bind } from 'bind-decorator';\nimport { combineLatest, Observable, ObservableInput } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../models/anatomical-structure-tag';\nimport { ModelState } from '../model/model.state';\nimport { PageState } from '../page/page.state';\nimport { SceneState } from '../scene/scene.state';\n\n/** Tag state model */\nexport interface AnatomicalStructureTagStateModel {}\n\n/**\n * Tag collection global state\n */\n@StateRepository()\n@State>({\n  name: 'tags',\n  defaults: {\n    ...createEntityCollections(),\n  },\n})\n@Injectable()\nexport class AnatomicalStructureTagState extends NgxsDataEntityCollectionsRepository {\n  /** Observable of tags */\n  @Computed()\n  get tags$(): Observable {\n    return combineLatest([this.entities$, this.scene.nodeCollisions$]).pipe(\n      map(([entities, collisions]) => {\n        const tags: Tag[] = [];\n        const added = new Set();\n        const removed = new Set();\n        Object.entries(entities).forEach(([id, tag]) => {\n          if (tag.type === 'removed') {\n            removed.add(id);\n          } else {\n            added.add(id);\n            tags.push(tag);\n          }\n        });\n        for (const model of collisions) {\n          const iri = model.representation_of;\n          if (iri && !removed.has(iri) && !added.has(iri)) {\n            added.add(iri);\n            tags.push({\n              id: iri,\n              label: model.tooltip as string,\n              type: 'assigned',\n            });\n          }\n        }\n        return tags;\n      }),\n    );\n  }\n\n  private _latestTags: Tag[] = [];\n\n  get latestTags(): Tag[] {\n    return this._latestTags;\n  }\n\n  /** Reference to the model state */\n  private model!: ModelState;\n  /** Reference to the scene state */\n  private scene!: SceneState;\n\n  private page!: PageState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(private readonly injector: Injector) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.scene = this.injector.get(SceneState);\n    this.page = this.injector.get(PageState);\n\n    this.tags$.subscribe((tags) => {\n      this._latestTags = tags;\n    });\n\n    this.entities$.subscribe(() => this.page.setHasChanges());\n  }\n\n  @DataAction()\n  addTags(tags: Tag[]): void {\n    for (const tag of tags) {\n      this.addTagRaw(tag);\n    }\n  }\n\n  @DataAction()\n  addTag(tag: Tag): void {\n    this.addTagRaw(tag);\n  }\n\n  @DataAction()\n  removeTag(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'removed' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'removed' });\n    }\n  }\n\n  /**\n   * Searches for matching tags (not in the state)\n   *\n   * @param text Search text\n   * @param limit Maximum returned results hint\n   * @returns external Search result\n   */\n  @Bind\n  searchExternal(text: string, limit: number): ObservableInput {\n    const matches = this.model.snapshot.anatomicalStructures.filter(\n      (as) => as.name.toLowerCase().indexOf(text.toLowerCase()) !== -1,\n    );\n    return [\n      {\n        totalCount: matches.length,\n        results: matches\n          .map(\n            (as): Tag => ({\n              id: as.id,\n              label: as.name,\n              type: 'added',\n            }),\n          )\n          .slice(0, limit),\n      },\n    ];\n  }\n\n  /**\n   * Adds a tag. Implementation helper for `addTags` and `addTag`\n   *\n   * @param tag The tag\n   */\n  private addTagRaw(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'added' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'added' });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        App component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disablePositionChange\n                            \n                            \n                                    Readonly\n                                header$\n                            \n                            \n                                homeUrl\n                            \n                            \n                                    Readonly\n                                homeUrl$\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                    Readonly\n                                logoTooltip$\n                            \n                            \n                                registrationExpanded\n                            \n                            \n                                registrationStarted\n                            \n                            \n                                theme\n                            \n                            \n                                    Readonly\n                                theme$\n                            \n                            \n                                    Readonly\n                                themeMode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleClick\n                            \n                            \n                                    \n                                handleKey\n                            \n                            \n                                registrationToggle\n                            \n                            \n                                toggleScheme\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                            \n                                document:mousedown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLightTheme\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, page: PageState, consentService: ConsentService, snackbar: MatSnackBar, theming: ThemingService, el: ElementRef<>, injector: Injector, globalConfig: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                    ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theming\n                                                  \n                                                        \n                                                                        ThemingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(target: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Shifts block position when certain keys are pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:mousedown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:mousedown(target: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Disables block position change if an input element is clicked\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element clicked\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleClick(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:mousedown', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Disables block position change if an input element is clicked\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element clicked\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKey(target: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Shifts block position when certain keys are pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationToggle\n                        \n                    \n                \n            \n            \n                \nregistrationToggle(event: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleScheme\n                        \n                    \n                \n            \n            \n                \ntoggleScheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Toggles scheme between light and dark mode\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disablePositionChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:47\n                        \n                    \n\n            \n                \n                    Disables changes in block position\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        header$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('header')\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        homeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        homeUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('homeUrl')\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        logoTooltip$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('logoTooltip')\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationExpanded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationStarted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:44\n                        \n                    \n\n            \n                \n                    False until the initial registration modal is closed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('theme')\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        themeMode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLightTheme\n                    \n                \n\n                \n                    \n                        getisLightTheme()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:51\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { ReplaySubject, Subscription, combineLatest } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  registrationExpanded = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme!: string;\n\n  homeUrl!: string;\n\n  logoTooltip!: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState,\n    readonly page: PageState,\n    readonly consentService: ConsentService,\n    readonly snackbar: MatSnackBar,\n    readonly theming: ThemingService,\n    el: ElementRef,\n    injector: Injector,\n    private readonly globalConfig: GlobalConfigState,\n    cdr: ChangeDetectorRef,\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      }),\n    );\n    this.theme$.subscribe((theme) => {\n      this.theme = theme ?? 'light';\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url) => {\n      this.homeUrl = url ?? '';\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip) => {\n      this.logoTooltip = tooltip ?? '';\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(([theme, mode]) => {\n      this.theming.setTheme(`${theme}-theme-${mode}`);\n      cdr.markForCheck();\n    });\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        },\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000,\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  registrationToggle(event: boolean): void {\n    this.registrationExpanded = event;\n    if (!this.registrationExpanded) {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:mousedown', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const disableWhenClicked = ['mat-mdc-input-element', 'form-input-label'];\n    for (const className of disableWhenClicked) {\n      if (typeof target.className === 'string' && target.className.includes(className)) {\n        this.disablePositionChange = true;\n        return;\n      }\n    }\n    this.disablePositionChange = false;\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n     \n    \n  \n  \n    \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  font-size: 1rem;\n  color: black;\n\n  .header-hidden {\n    display: none;\n  }\n\n  ccf-drawer-container {\n    height: 100%;\n\n    ccf-drawer {\n      width: 25.5rem;\n    }\n\n    ccf-drawer-content {\n      position: relative;\n      z-index: 1;\n\n      .selector-drawer {\n        top: 0rem;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n        height: 5.688rem;\n        transition: all 0.5s ease-in-out;\n\n        &.expanded {\n          height: 15rem;\n        }\n\n        ccf-organ-selector {\n          height: 100%;\n          padding-top: 0.5rem;\n          transition: all 0.5s;\n\n          &.closed {\n            padding-top: 0;\n          }\n        }\n\n        .close-button-wrapper {\n          display: flex;\n          justify-content: center;\n          height: 0;\n          z-index: 2;\n\n          .close-button {\n            cursor: pointer;\n            transition: 0.6s;\n\n            .expand-collapse-icon {\n              width: 3rem;\n              height: 1.2rem;\n              display: flex;\n              justify-content: center;\n              align-items: center;\n              cursor: pointer;\n              background-color: white;\n              border-bottom-left-radius: 0.2rem;\n              border-bottom-right-radius: 0.2rem;\n              transition: 0.6s;\n\n              &:hover {\n                background-color: #ececec;\n              }\n            }\n          }\n        }\n\n        &.closed {\n          height: 3rem;\n          top: -2.9rem;\n        }\n      }\n\n      .stage-content {\n        border-radius: 0.5rem;\n        height: calc(100% - 2.5rem);\n      }\n\n      .expanded-stage {\n        height: calc(100% - 1.5rem);\n        padding-bottom: 1rem;\n      }\n\n      .retracted-stage {\n        height: calc(100% - 2.688rem - 14rem);\n      }\n    }\n\n    ccf-content {\n      // top: 0rem;\n      position: absolute;\n      transition-duration: 0.5s;\n      transition-timing-function: ease-in-out;\n      transition-property: all;\n      bottom: 1.5rem;\n      z-index: 1;\n    }\n  }\n}\n\n::ng-deep .mdc-snackbar__surface {\n  box-shadow: none !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nAppModule -->\n\nRegistrationModalModule->AppModule\n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContentModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            LeftSidebarModule\n                        \n                        \n                            RegistrationModalModule\n                        \n                        \n                            RightSidebarModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.module.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TrackingPopupModule } from 'ccf-shared';\n\nimport { AppWebComponent } from './app-web-component.component';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { DEFAULT_THEME } from './core/services/theming/theming.service';\nimport { ContentModule } from './modules/content/content.module';\nimport { HeaderModule } from './modules/header/header.module';\nimport { LeftSidebarModule } from './modules/left-sidebar/left-sidebar.module';\nimport { RegistrationModalModule } from './modules/registration-modal/registration-modal/registration-modal.module';\nimport { RightSidebarModule } from './modules/right-sidebar/right-sidebar.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    MatIconModule,\n    DrawerModule,\n    HeaderModule,\n    ContentModule,\n    LeftSidebarModule,\n    RightSidebarModule,\n    RegistrationModalModule,\n    TrackingPopupModule,\n    MatSnackBarModule,\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [\n    {\n      provide: DEFAULT_THEME,\n      useValue: 'hubmap-theme-light',\n    },\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        floatLabel: true,\n      },\n    },\n  ],\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) {}\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector,\n    });\n\n    customElements.define('ccf-rui', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GlobalConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { ReplaySubject, Subscription, combineLatest } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  registrationExpanded = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme!: string;\n\n  homeUrl!: string;\n\n  logoTooltip!: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState,\n    readonly page: PageState,\n    readonly consentService: ConsentService,\n    readonly snackbar: MatSnackBar,\n    readonly theming: ThemingService,\n    el: ElementRef,\n    injector: Injector,\n    private readonly globalConfig: GlobalConfigState,\n    cdr: ChangeDetectorRef,\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      }),\n    );\n    this.theme$.subscribe((theme) => {\n      this.theme = theme ?? 'light';\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url) => {\n      this.homeUrl = url ?? '';\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip) => {\n      this.logoTooltip = tooltip ?? '';\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(([theme, mode]) => {\n      this.theming.setTheme(`${theme}-theme-${mode}`);\n      cdr.markForCheck();\n    });\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        },\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000,\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  registrationToggle(event: boolean): void {\n    this.registrationExpanded = event;\n    if (!this.registrationExpanded) {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:mousedown', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const disableWhenClicked = ['mat-mdc-input-element', 'form-input-label'];\n    for (const className of disableWhenClicked) {\n      if (typeof target.className === 'string' && target.className.includes(className)) {\n        this.disablePositionChange = true;\n        return;\n      }\n    }\n    this.disablePositionChange = false;\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                baseHref\n                            \n                            \n                                cancelRegistration\n                            \n                            \n                                collisionsEndpoint\n                            \n                            \n                                editRegistration\n                            \n                            \n                                fetchPreviousRegistrations\n                            \n                            \n                                header\n                            \n                            \n                                homeUrl\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                organ\n                            \n                            \n                                organOptions\n                            \n                            \n                                register\n                            \n                            \n                                skipUnsavedChangesConfirmation\n                            \n                            \n                                theme\n                            \n                            \n                                useDownload\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-web-component.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        baseHref\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cancelRegistration\n                    \n                \n                \n                    \n                        Type :     string | CancelRegistrationCallback\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        collisionsEndpoint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editRegistration\n                    \n                \n                \n                    \n                        Type :     string | SpatialEntityJsonLd\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fetchPreviousRegistrations\n                    \n                \n                \n                    \n                        Type :         string | FetchPreviousRegistrationsCallback\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        organ\n                    \n                \n                \n                    \n                        Type :         string | Organ\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        organOptions\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        register\n                    \n                \n                \n                    \n                        Type :         string | RegistrationCallback\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skipUnsavedChangesConfirmation\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDownload\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         string | User\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app-web-component.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, BUILTIN_PARSERS } from 'ccf-shared/web-components';\nimport { ObservableInput } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\n\nimport { environment } from '../environments/environment';\n\nexport type User = NonNullable;\nexport type Organ = NonNullable;\nexport type RegistrationCallback = (data: unknown) => void;\nexport type CancelRegistrationCallback = () => void;\nexport type FetchPreviousRegistrationsCallback = () => ObservableInput[]>;\n\nfunction parseOrgan(value: unknown): string | Organ {\n  try {\n    return BUILTIN_PARSERS.json(value) as Organ;\n  } catch {\n    return '' + value;\n  }\n}\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() baseHref!: string;\n  @Input() useDownload!: string | boolean;\n  @Input() user!: string | User;\n  @Input() organ!: string | Organ;\n  @Input() editRegistration!: string | SpatialEntityJsonLd;\n  @Input() register!: string | RegistrationCallback;\n  @Input() cancelRegistration!: string | CancelRegistrationCallback;\n  @Input() fetchPreviousRegistrations!: string | FetchPreviousRegistrationsCallback;\n  @Input() skipUnsavedChangesConfirmation!: string | boolean;\n  @Input() theme!: string;\n  @Input() header!: string | boolean;\n  @Input() homeUrl!: string;\n  @Input() logoTooltip!: string;\n  @Input() organOptions!: string | string[];\n  @Input() collisionsEndpoint!: string;\n\n  constructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef) {\n    const BP = BUILTIN_PARSERS;\n\n    super(configStore, cdr, {\n      initialConfig: {\n        ...environment.dbOptions,\n        ...(globalThis['ruiConfig' as never] as object),\n        ...environment.customization,\n      },\n      parse: {\n        useDownload: BP.boolean,\n        user: BP.json,\n        organ: parseOrgan,\n        editRegistration: BP.json,\n        register: BP.function,\n        cancelRegistration: BP.function,\n        fetchPreviousRegistrations: BP.function,\n        skipUnsavedChangesConfirmation: BP.boolean,\n        header: BP.boolean,\n        organOptions: BP.stringArray,\n      },\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockSize.html":{"url":"interfaces/BlockSize.html","title":"interface - BlockSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/block-size-input/block-size-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for objects containing tissue block dimensions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Height of block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Depth of block\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10,\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Creates an instance of block size input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Updates values when an input changes\n   *\n   * @param input Event from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: KeyboardEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.ga.event('block_size_change', 'block_size_input', key, this.blockSize[key as never]);\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.ga.event('block_size_reset', 'block_size_input');\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockSizeInputComponent.html":{"url":"components/BlockSizeInputComponent.html","title":"component - BlockSizeInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockSizeInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/block-size-input/block-size-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for entering dimensions of the tissue block\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-block-size-input\n            \n\n\n\n            \n                styleUrls\n                ./block-size-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./block-size-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshBlockSize\n                            \n                            \n                                updateBlockSizes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSizeChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/block-size-input/block-size-input.component.ts:44\n                            \n                        \n\n                \n                    \n                            Creates an instance of block size input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blockSize\n                    \n                \n                \n                    \n                        Type :         BlockSize\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_BLOCK_SIZE\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/block-size-input/block-size-input.component.ts:39\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blockSizeChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/block-size-input/block-size-input.component.ts:44\n                            \n                        \n                \n                    \n                        Emitter for values\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-block-size-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-block-size-input'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/block-size-input/block-size-input.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshBlockSize\n                        \n                    \n                \n            \n            \n                \nrefreshBlockSize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/block-size-input/block-size-input.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Refreshes all block size values to 10\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBlockSizes\n                        \n                    \n                \n            \n            \n                \nupdateBlockSizes(input: KeyboardEvent, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/block-size-input/block-size-input.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Updates values when an input changes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of the dimension to be updated\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-block-size-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/block-size-input/block-size-input.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10,\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Creates an instance of block size input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Updates values when an input changes\n   *\n   * @param input Event from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: KeyboardEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.ga.event('block_size_change', 'block_size_input', key, this.blockSize[key as never]);\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.ga.event('block_size_reset', 'block_size_input');\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Dimensions (mm)\n  \n  refresh\n\n\n\n  \n    Width (X)\n    \n  \n\n  \n    Height (Y)\n    \n  \n\n  \n    Depth (Z)\n    \n  \n\n\n    \n\n    \n                \n                    ./block-size-input.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n    padding: 0.5rem 0;\n\n    .title {\n      font-weight: 400;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: 0.6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n  }\n\n  .size-inputs {\n    display: flex;\n    justify-content: space-between;\n    width: 20rem;\n    margin: 0 auto;\n\n    .field {\n      width: 4.5rem;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n\n      .suffix {\n        display: none;\n      }\n\n      ::ng-deep .mdc-text-field {\n        padding: 0;\n\n        .mat-mdc-form-field-infix {\n          padding-bottom: 0;\n          min-height: inherit;\n        }\n\n        .mat-mdc-form-field-icon-suffix {\n          padding: 1rem 0 0px 0.25rem;\n        }\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Dimensions (mm)    refresh      Width (X)            Height (Y)            Depth (Z)      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockSizeInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockSizeInputModule.html":{"url":"modules/BlockSizeInputModule.html","title":"module - BlockSizeInputModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockSizeInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/block-size-input/block-size-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { BlockSizeInputComponent } from './block-size-input.component';\n\n@NgModule({\n  imports: [CommonModule, MatInputModule, MatIconModule, MatRippleModule, MatTooltipModule, MatFormFieldModule],\n  declarations: [BlockSizeInputComponent],\n  exports: [BlockSizeInputComponent],\n})\nexport class BlockSizeInputModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/scene/scene.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { SpatialEntity, SpatialPlacement, getOriginScene, getTissueBlockScene } from 'ccf-database';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { isEqual } from 'lodash';\nimport { Observable, combineLatest, defer, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  distinctUntilChanged,\n  filter,\n  map,\n  share,\n  startWith,\n  switchMap,\n  take,\n  throttleTime,\n} from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\ninterface Collision {\n  id: string;\n}\n\nconst NODE_COLLISION_THROTTLE_DURATION = 10;\n\nconst DEFAULT_COLLISIONS_ENDPOINT = 'https://pfn8zf2gtu.us-east-2.awsapprunner.com/get-collisions';\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i]))),\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production,\n  },\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$,\n      this.referenceOrganNodes$,\n      this.previousRegistrationNodes$,\n      this.nodeCollisions$,\n      this.spatialKeyBoardAxis$,\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions, axis]) => [\n        ...placement,\n        ...prevNodes,\n        ...nodes,\n        ...axis,\n        ...(this.snapshot.showCollisions ? collisions : []),\n      ]),\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map((n) => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY)\n              .rotateY(toRadians(rotation))\n              .multiplyRight(n.transformMatrix),\n          }));\n        }\n      }),\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      map(([anatomicalStructures, extractionSites, organIri]) => {\n        const organ = this.getOrganSpatialEntity(organIri as string);\n        const originScene = organIri ? getOriginScene(organ, false, true) : [];\n        const organScene = this.createSceneNodes(\n          organIri as string,\n          [...anatomicalStructures, ...extractionSites] as VisibilityItem[],\n        );\n        return [...originScene, ...organScene];\n      }),\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [\n                {\n                  ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255],\n                },\n              ];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map(\n                  (node): SpatialSceneNode => ({\n                    ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                    opacity: (item.opacity ?? 100) / 100,\n                    color: [255, 255, 255, 255],\n                  }),\n                );\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), []),\n      ),\n      distinctUntilChanged(isEqual),\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.collisions$, this.placementCube$]).pipe(\n      throttleTime(NODE_COLLISION_THROTTLE_DURATION, undefined, { leading: true, trailing: true }),\n      map(([nodes, collisions, placement]) => {\n        if (collisions !== undefined) {\n          return this.filterNodeCollisions(nodes, collisions);\n        } else if (placement.length > 0) {\n          return this.filterNodeBBox(nodes, placement[0]);\n        }\n        return [];\n      }),\n      share(),\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([\n      this.model.organIri$,\n      this.model.showPrevious$,\n      this.registration.previousRegistrations$ as Observable,\n    ]).pipe(\n      map(([organIri = '', showPrevious, previousRegistrations]) =>\n        showPrevious ? this.getPreviousRegistrationNodes(organIri, previousRegistrations) : [],\n      ),\n    );\n  }\n\n  @Computed()\n  get spatialKeyBoardAxis$(): Observable {\n    const nonEmptyOrganIri = this.model.organIri$.pipe(filter((iri): iri is string => iri !== undefined && iri !== ''));\n\n    return combineLatest([nonEmptyOrganIri, this.model.position$]).pipe(\n      map(([organIri, position]) => {\n        const organEntity = this.getOrganSpatialEntity(organIri);\n        const blockSize = this.model.snapshot.blockSize;\n        const rotation = this.model.snapshot.rotation;\n        if (!organEntity) {\n          return [];\n        }\n\n        return getTissueBlockScene(\n          {\n            x_dimension: blockSize.x,\n            y_dimension: blockSize.y,\n            z_dimension: blockSize.z,\n          } as SpatialEntity,\n          {\n            x_translation: position.x - organEntity.x_dimension / 2,\n            y_translation: position.y - organEntity.y_dimension / 2,\n            z_translation: position.z - organEntity.z_dimension / 2,\n\n            x_rotation: rotation.x,\n            y_rotation: rotation.y,\n            z_rotation: rotation.z,\n\n            x_scaling: 1,\n            y_scaling: 1,\n            z_scaling: 1,\n          } as SpatialPlacement,\n        );\n      }),\n    );\n  }\n\n  @Computed()\n  get placementCube$(): Observable {\n    return combineLatest([\n      this.model.viewType$,\n      this.model.blockSize$,\n      this.model.rotation$,\n      this.model.position$,\n      this.model.organ$,\n    ]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => (organ.src === '' ? [] : [this.placementCube])),\n      distinctUntilChanged(isEqual),\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map((n) => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map((n) => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      }),\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1,\n    },\n  ]);\n\n  /** Reference to the model state */\n  private model!: ModelState;\n  private registration!: RegistrationState;\n  private referenceData!: ReferenceDataState;\n\n  @Computed()\n  private get collisions$(): Observable {\n    return defer(() => this.registration.throttledJsonld$).pipe(\n      concatMap((jsonld) => this.getCollisions(jsonld)),\n      startWith([]),\n    );\n  }\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly http: HttpClient,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter((item) => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [\n            {\n              ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255],\n            },\n          ];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map((node) => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255],\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n\n  private getOrganSpatialEntity(organIri: string): SpatialEntity {\n    const db = this.referenceData.snapshot;\n    return db.organSpatialEntities[organIri] as SpatialEntity;\n  }\n\n  private getCollisions(jsonld: unknown): Observable {\n    return this.globalConfig.getOption('collisionsEndpoint').pipe(\n      switchMap((endpoint = DEFAULT_COLLISIONS_ENDPOINT) =>\n        this.http.post(endpoint, JSON.stringify(jsonld), {\n          headers: { 'Content-Type': 'application/json' },\n        }),\n      ),\n      catchError(() => of(undefined)),\n      take(1),\n    );\n  }\n\n  private filterNodeCollisions(nodes: SpatialSceneNode[], collisions: Collision[]): SpatialSceneNode[] {\n    const collidedIds = new Set(collisions.map((node) => node.id));\n    return nodes.filter((node) => collidedIds.has(node['@id']));\n  }\n\n  private filterNodeBBox(nodes: SpatialSceneNode[], placement: SpatialSceneNode): SpatialSceneNode[] {\n    const bbox = getNodeBbox(placement);\n    return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n  }\n\n  private getPreviousRegistrationNodes(\n    organIri: string,\n    previousRegistrations: SpatialEntityJsonLd[],\n  ): SpatialSceneNode[] {\n    const toNode = (entity: SpatialEntityJsonLd): SpatialSceneNode | undefined => {\n      const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n      if (p.target === organIri) {\n        const organDimensions = this.model.snapshot.organDimensions;\n        const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map((n) => -n / 1000 / 2);\n        return {\n          '@id': entity['@id'],\n          '@type': 'SpatialSceneNode',\n          transformMatrix: new Matrix4(Matrix4.IDENTITY)\n            .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n            .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n            .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map((n) => n / 1000 / 2)),\n          color: [25, 118, 210, 200],\n          tooltip: entity.label,\n          unpickable: true,\n        };\n      } else {\n        return undefined;\n      }\n    };\n\n    return previousRegistrations.map(toNode).filter((entity): entity is SpatialSceneNode => entity !== undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/services/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\n\nimport { GLOBAL_CONFIG, globalConfigFactory } from './config';\n\n@NgModule({\n  providers: [\n    {\n      provide: GLOBAL_CONFIG,\n      useFactory: globalConfigFactory,\n      deps: [GlobalsService],\n    },\n  ],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/drawer/container/container.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n\n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/drawer/container/container.component.ts:67\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-container\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/container/container.component.ts:42\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/container/container.component.ts:42\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:60\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  HostBinding,\n  OnDestroy,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private readonly drawers!: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private readonly content1!: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private readonly content2!: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean {\n    return this.content1.length !== 0;\n  }\n\n  /** The connected message channel. */\n  private readonly channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(\n    messageService: MessageService,\n    private readonly cdr: ChangeDetectorRef,\n  ) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(\n      this.channel.getMessages().subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers,\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content,\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter((drawer) => drawer.position === 'start');\n    const endDrawers = drawers.filter((drawer) => drawer.position === 'end');\n\n    if (startDrawers.length > 1) {\n      throwDuplicateDrawersError('start');\n    }\n    if (endDrawers.length > 1) {\n      throwDuplicateDrawersError('end');\n    }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main content component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-content\n            \n\n\n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                bounds$\n                            \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                debugMode\n                            \n                            \n                                    Readonly\n                                is3DView$\n                            \n                            \n                                isNarrowView\n                            \n                            \n                                    Readonly\n                                position$\n                            \n                            \n                                showDebugButtons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleNodeDrag\n                            \n                            \n                                resetStage\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disablePositionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, page: PageState, registration: RegistrationState, scene: SceneState, rootRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/content/content.component.ts:67\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The model state\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The page state\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The registration state\n\n                                                        \n                                                \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                        SceneState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        rootRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Component's root element\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disablePositionChange\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/content/content.component.ts:34\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-content'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleNodeDrag\n                        \n                    \n                \n            \n            \n                \nhandleNodeDrag(event: NodeDragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/content/content.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        NodeDragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetStage\n                        \n                    \n                \n            \n            \n                \nresetStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/content/content.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Method to reset registration block, crosshairs, and x,y,z information.\nResets to initial registration state if provided\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(is3DView: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/content/content.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Sets view type\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                is3DView\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Set view type to '3d' if this is true otherwise set it to 'register'\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bounds$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.organDimensions$.pipe(\n    map((dims) => ({\n      x: Math.max(dims.x, this.model.defaultPosition.x + 40) / 1000,\n      y: Math.max(dims.y, this.model.defaultPosition.y + 40) / 1000,\n      z: Math.max(dims.z, this.model.defaultPosition.z + 40) / 1000,\n    })),\n    distinctUntilKeyChanged('x'),\n    distinctUntilKeyChanged('y'),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/content.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/content.component.ts:59\n                        \n                    \n\n            \n                \n                    Shows / hides the state debug component for testing purposes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        is3DView$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.viewType$.pipe(map((type) => type === '3d'))\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/content.component.ts:41\n                        \n                    \n\n            \n                \n                    Whether the view type is 3d or register\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNarrowView\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/content.component.ts:54\n                        \n                    \n\n            \n                \n                    Whether the content area is very narrow\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        position$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.position$.pipe(\n    map((p) => ({ x: Math.floor(p.x), y: Math.floor(p.y), z: Math.floor(p.z) })),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/content.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDebugButtons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : !environment.production\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/content.component.ts:64\n                        \n                    \n\n            \n                \n                    Show debug buttons of content component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NodeDragEvent } from 'ccf-body-ui';\nimport { ResizeSensor } from 'css-element-queries';\nimport { distinctUntilKeyChanged, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { SceneState } from '../../core/store/scene/scene.state';\n\n/**\n * Main content component\n */\n@Component({\n  selector: 'ccf-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContentComponent implements OnInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-content';\n\n  @Input() disablePositionChange = false;\n\n  readonly position$ = this.model.position$.pipe(\n    map((p) => ({ x: Math.floor(p.x), y: Math.floor(p.y), z: Math.floor(p.z) })),\n  );\n\n  /** Whether the view type is 3d or register */\n  readonly is3DView$ = this.model.viewType$.pipe(map((type) => type === '3d'));\n\n  readonly bounds$ = this.model.organDimensions$.pipe(\n    map((dims) => ({\n      x: Math.max(dims.x, this.model.defaultPosition.x + 40) / 1000,\n      y: Math.max(dims.y, this.model.defaultPosition.y + 40) / 1000,\n      z: Math.max(dims.z, this.model.defaultPosition.z + 40) / 1000,\n    })),\n    distinctUntilKeyChanged('x'),\n    distinctUntilKeyChanged('y'),\n  );\n\n  /** Whether the content area is very narrow */\n  isNarrowView = false;\n\n  /**\n   * Shows / hides the state debug component for testing purposes.\n   */\n  debugMode = false;\n\n  /**\n   * Show debug buttons of content component\n   */\n  showDebugButtons = !environment.production;\n\n  /** Resize detection */\n  private sensor!: ResizeSensor;\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param model The model state\n   * @param page The page state\n   * @param registration The registration state\n   * @param rootRef Component's root element\n   * @param cdr Change detector\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly page: PageState,\n    readonly registration: RegistrationState,\n    readonly scene: SceneState,\n    private readonly rootRef: ElementRef,\n    private readonly cdr: ChangeDetectorRef,\n  ) {}\n\n  /**\n   * Sets up the resize sensor\n   */\n  ngOnInit(): void {\n    this.sensor = new ResizeSensor(this.rootRef.nativeElement, ({ width }) => {\n      const isNarrowView = width  n * 1000) as [number, number];\n        const { position, viewSide, organDimensions } = this.model.snapshot;\n        const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map((n) => n / 2);\n        let newPosition = position;\n        switch (viewSide) {\n          case 'anterior':\n            newPosition = { x: a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'posterior':\n            newPosition = { x: -a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'left':\n            newPosition = { x: position.x, y: b + dims[1], z: -a + dims[2] };\n            break;\n          case 'right':\n            newPosition = { x: position.x, y: b + dims[1], z: a + dims[2] };\n            break;\n        }\n        this.model.setPosition(newPosition);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  refresh\n\n\n\n  \n\n  \n  \n    \n    \n    \n      \n        X: {{ (position$ | async)?.x }}\n        Y: {{ (position$ | async)?.y }}\n        Z: {{ (position$ | async)?.z }}\n      \n    \n  \n\n\n \n\n  State\n  Use callback\n  Use download\n\n\n    \n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n  height: 100%;\n  padding: 0.5rem;\n  overflow: hidden;\n\n  .top-bar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .reset {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: 0.6s;\n      font-size: 2rem;\n      height: 2rem;\n      width: 2rem;\n    }\n  }\n\n  .sidebar {\n    .minimap-scene {\n      margin: 1.5rem;\n      width: 12.75rem;\n      height: 11rem;\n      ::ng-deep .body-ui {\n        background-color: #232f3a;\n      }\n    }\n\n    ccf-spatial-search-keyboard-ui-behavior {\n      margin: 1.5rem;\n      display: flex;\n      justify-content: center;\n    }\n\n    ccf-xyz-position {\n      margin: 1.5rem;\n      padding-left: 5rem;\n    }\n  }\n\n  .main-content {\n    display: flex;\n    height: calc(100% - 1rem);\n\n    .body-ui {\n      flex: auto;\n      transition: opacity 1s;\n    }\n\n    .gizmo-area {\n      width: 7rem;\n      margin-top: 1.5rem;\n      margin-left: 1.5rem;\n      z-index: 10;\n      right: 1.5rem;\n\n      .position-display {\n        display: flex;\n        justify-content: center;\n        margin-bottom: 1.5rem;\n      }\n\n      .gizmo {\n        height: 5.5rem;\n        .hidden {\n          opacity: 0;\n          z-index: 0;\n        }\n      }\n    }\n  }\n\n  // Temporary for displaying dev information\n  .ccf-store-debug {\n    color: white;\n    position: absolute;\n    top: 0.5rem;\n    max-width: 55rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      refresh                                X: {{ (position$ | async)?.x }}        Y: {{ (position$ | async)?.y }}        Z: {{ (position$ | async)?.z }}               State  Use callback  Use download'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent-1.html":{"url":"components/ContentComponent-1.html","title":"component - ContentComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/drawer/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n\n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                animationsEnabled\n                            \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                            \n                                    \n                                faded\n                            \n                            \n                                    \n                                leftMargin\n                            \n                            \n                                    \n                                rightMargin\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        @fadeInOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.cff-drawer-content-animations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:29\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-left.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:31\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-right.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:33\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        animationsEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.cff-drawer-content-animations')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:29\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        faded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('@fadeInOut')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-left.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:31\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-right.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:33\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s')),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService, cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(\n      messages.subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled': {\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean, width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = !!(startExpanded || endExpanded);\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: 0.5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when the content component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage,\n  MessageChannel as GenericMessageChannel,\n  MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentModule.html":{"url":"modules/ContentModule.html","title":"module - ContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\n\nContentComponent\n\nContentComponent\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nContentModule -->\n\nVideoModalLauncherModule->ContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StageNavModule\n                        \n                        \n                            VideoModalLauncherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BodyUiModule, SpatialSearchKeyboardUIBehaviorModule, StoreDebugModule } from 'ccf-shared';\n\nimport { ContentComponent } from '../content/content.component';\nimport { StageNavModule } from './stage-nav/stage-nav.module';\nimport { VideoModalLauncherModule } from './video-modal/video-modal-launcher/video-modal-launcher.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StageNavModule,\n    MatIconModule,\n    StoreDebugModule,\n    VideoModalLauncherModule,\n    MatRippleModule,\n    SpatialSearchKeyboardUIBehaviorModule,\n    BodyUiModule,\n  ],\n  declarations: [ContentComponent],\n  exports: [ContentComponent],\n})\nexport class ContentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { MousePositionTrackerModule } from 'ccf-shared';\nimport { AnalyticsModule } from 'ccf-shared/analytics';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigModule } from './services/config/config.module';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsToken,\n      appName: 'rui',\n    }),\n    MousePositionTrackerModule,\n\n    ConfigModule,\n    StoreModule,\n    ThemingModule,\n  ],\n  exports: [],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/icon-registry/default-icons.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-brain.svg' },\n  { name: 'mammary-gland', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-breast.svg' },\n  { name: 'main-bronchus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-extrapulmonary-bronchus.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-left.svg' },\n  {\n    name: 'fallopian-tube-right',\n    namespace: 'app',\n    url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-right.svg',\n  },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-right.svg' },\n  { name: 'kidneys', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidneys.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-large-intestine.svg' },\n  { name: 'larynx', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-larynx.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lungs.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lymph-nodes.svg' },\n  { name: 'neurons', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-neurons.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-right.svg' },\n  { name: 'palatine-tonsil', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-palatine-tonsil.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pelvis.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-small-intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-thymus.svg' },\n  { name: 'trachea', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-trachea.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'visibility_off_cube', namespace: 'app', url: 'assets/icons/ico-cube.svg' },\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsLabelComponent.html":{"url":"components/DetailsLabelComponent.html","title":"component - DetailsLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/details-label/details-label.component.ts\n\n\n\n    \n        Description\n    \n    \n        Reusable component that takes an array of strings and renders\nthat array as a string, separated by commas, in the icon color.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-details-label\n            \n\n\n\n            \n                styleUrls\n                ./details-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        details\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/details-label/details-label.component.ts:20\n                            \n                        \n                \n                    \n                        The array of details to be displayed.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-details-label\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-details-label'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/details-label/details-label.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        arrayToString\n                        \n                    \n                \n            \n            \n                \narrayToString(inputArray: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/details-label/details-label.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Function that handles converting the array given\ninto a formatted string for display.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                inputArray\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    an array of strings to join.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                the formatted string of items separated by a comma.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-details-label'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/details-label/details-label.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n/**\n * Reusable component that takes an array of strings and renders\n * that array as a string, separated by commas, in the icon color.\n */\n@Component({\n  selector: 'ccf-details-label',\n  templateUrl: './details-label.component.html',\n  styleUrls: ['./details-label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DetailsLabelComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-details-label';\n\n  /**\n   * The array of details to be displayed.\n   */\n  @Input() details: string[] = [];\n\n  /**\n   * Function that handles converting the array given\n   * into a formatted string for display.\n   *\n   * @param inputArray an array of strings to join.\n   * @returns the formatted string of items separated by a comma.\n   */\n  arrayToString(inputArray: string[]): string {\n    return inputArray.filter((item) => !!item).join(', ');\n  }\n}\n\n    \n\n    \n        {{ arrayToString(details) }}\n\n    \n\n    \n                \n                    ./details-label.component.scss\n                \n                :host {\n  display: block;\n  height: 2.25rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ arrayToString(details) }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DetailsLabelModule.html":{"url":"modules/DetailsLabelModule.html","title":"module - DetailsLabelModule","body":"\n                   \n\n\n\n\n    Modules\n    DetailsLabelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/details-label/details-label.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailsLabelComponent } from './details-label.component';\n\n@NgModule({\n  declarations: [DetailsLabelComponent],\n  imports: [CommonModule],\n  exports: [DetailsLabelComponent],\n})\nexport class DetailsLabelModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentationContent.html":{"url":"interfaces/DocumentationContent.html","title":"interface - DocumentationContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentationContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/documentation.ts\n        \n\n\n            \n                Description\n            \n            \n                The structure to define how each documentation panel\nshould look like in the info dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Content inside the panel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the panel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drawers\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drawers:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage,\n  MessageChannel as GenericMessageChannel,\n  MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage,\n  MessageChannel as GenericMessageChannel,\n  MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [\n    {\n      provide: MESSAGE_SERVICE_CONFIG,\n      useValue: MESSAGE_SERVICE_DEFAULT_CONFIG,\n    },\n  ],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n})\nexport class DrawerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            margin\n                                        \n                                \n                                \n                                        \n                                            opened\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage,\n  MessageChannel as GenericMessageChannel,\n  MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtractionSet.html":{"url":"interfaces/ExtractionSet.html","title":"interface - ExtractionSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtractionSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/extraction-set.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains information for an extraction set\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            sites\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the set\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Organ that the extraction sites belong to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sites:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Extraction sites belonging to the organ in the extraction set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { VisibilityItem } from './visibility-item';\n\n/**\n * Contains information for an extraction set\n */\nexport interface ExtractionSet {\n  /** Name of the set */\n  name: string;\n\n  /** Organ that the extraction sites belong to */\n  organ?: string;\n\n  /** Extraction sites belonging to the organ in the extraction set */\n  sites: VisibilityItem[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtractionSetDropdownComponent.html":{"url":"components/ExtractionSetDropdownComponent.html","title":"component - ExtractionSetDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExtractionSetDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown for selecting the extraction set\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-extraction-set-dropdown\n            \n\n\n\n            \n                styleUrls\n                ./extraction-set-dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./extraction-set-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractionSetChanged\n                            \n                            \n                                isMultiple\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                setChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of extraction set dropdown component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sets\n                    \n                \n                \n                    \n                        Type :         ExtractionSet[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:27\n                            \n                        \n                \n                    \n                        Extraction sets to be displayed as options\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        setChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:22\n                            \n                        \n                \n                    \n                        Emits the current extraction set when selected\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-extraction-set-dropdown\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-extraction-set-dropdown'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractionSetChanged\n                        \n                    \n                \n            \n            \n                \nextractionSetChanged(value: ExtractionSet)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Sets the selected extraction set and emits the extraction set\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            ExtractionSet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The extraction set selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMultiple\n                        \n                    \n                \n            \n            \n                \nisMultiple()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Determines whether there is more than one extraction set\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if there is more than one extraction set\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-extraction-set-dropdown'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtractionSet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:32\n                        \n                    \n\n            \n                \n                    The currently selected extraction set\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { ExtractionSet } from '../../../core/models/extraction-set';\n\n/**\n * Dropdown for selecting the extraction set\n */\n@Component({\n  selector: 'ccf-extraction-set-dropdown',\n  templateUrl: './extraction-set-dropdown.component.html',\n  styleUrls: ['./extraction-set-dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ExtractionSetDropdownComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-extraction-set-dropdown';\n\n  /**\n   * Emits the current extraction set when selected\n   */\n  @Output() readonly setChange = new EventEmitter();\n\n  /**\n   * Extraction sets to be displayed as options\n   */\n  @Input() sets!: ExtractionSet[];\n\n  /**\n   * The currently selected extraction set\n   */\n  selected!: ExtractionSet;\n\n  /**\n   * Creates an instance of extraction set dropdown component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Sets the selected extraction set and emits the extraction set\n   *\n   * @param value The extraction set selected\n   */\n  extractionSetChanged(value: ExtractionSet): void {\n    this.selected = value;\n    this.ga.event('selected_extraction_set_change', 'extraction_set_dropdown', value.name);\n    this.setChange.emit(value);\n  }\n\n  /**\n   * Determines whether there is more than one extraction set\n   *\n   * @returns true if there is more than one extraction set\n   */\n  isMultiple(): boolean {\n    return this.sets.length > 1;\n  }\n}\n\n    \n\n    \n        \n  Landmark Set\n  \n    \n      {{ set.name }} ({{ set.sites.length }})\n    \n  \n\n\n    \n\n    \n                \n                    ./extraction-set-dropdown.component.scss\n                \n                ::ng-deep .extraction-set-panel {\n  position: absolute !important;\n  box-shadow: 0rem 0rem 0.3rem 0.1rem #9e9e9e !important;\n  top: -3.5rem;\n\n  .extraction-set-options {\n    height: 2.5rem;\n    min-height: inherit;\n  }\n}\n\n:host {\n  ::ng-deep .mat-mdc-form-field {\n    width: 10.5rem;\n\n    .mat-mdc-text-field-wrapper {\n      padding: 0;\n    }\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0rem !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Landmark Set            {{ set.name }} ({{ set.sites.length }})      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExtractionSetDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExtractionSetDropdownModule.html":{"url":"modules/ExtractionSetDropdownModule.html","title":"module - ExtractionSetDropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    ExtractionSetDropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExtractionSetDropdownModule\n\n\n\ncluster_ExtractionSetDropdownModule_exports\n\n\n\ncluster_ExtractionSetDropdownModule_declarations\n\n\n\n\nExtractionSetDropdownComponent\n\nExtractionSetDropdownComponent\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule -->\n\nExtractionSetDropdownComponent->ExtractionSetDropdownModule\n\n\n\n\n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent  -->\n\nExtractionSetDropdownModule->ExtractionSetDropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExtractionSetDropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExtractionSetDropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ExtractionSetDropdownComponent } from './extraction-set-dropdown.component';\n\n@NgModule({\n  imports: [CommonModule, MatSelectModule],\n  declarations: [ExtractionSetDropdownComponent],\n  exports: [ExtractionSetDropdownComponent],\n})\nexport class ExtractionSetDropdownModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/config/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            baseHref\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cancelRegistration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            collisionsEndpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editRegistration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fetchPreviousRegistrations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            register\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            registrationStarted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipUnsavedChangesConfirmation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useDownload\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseHref\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseHref:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cancelRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelRegistration:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collisionsEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collisionsEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editRegistration:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchPreviousRegistrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fetchPreviousRegistrations:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganConfig | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganConfig | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organOptions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        register\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        register:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationStarted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationStarted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipUnsavedChangesConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipUnsavedChangesConfirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useDownload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useDownload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\nimport { ObservableInput } from 'rxjs';\n\nexport interface GlobalConfig {\n  baseHref?: string;\n  editRegistration?: Record;\n  organ?: OrganConfig | string;\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n\n  register?: (data: string) => void;\n  useDownload?: boolean;\n\n  fetchPreviousRegistrations?: () => ObservableInput[]>;\n  registrationStarted?: boolean;\n\n  cancelRegistration?: () => void;\n\n  skipUnsavedChangesConfirmation?: boolean;\n\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  organOptions?: string[];\n\n  collisionsEndpoint?: string;\n}\n\nexport type OrganName = 'large intestine' | 'heart' | 'kidney' | 'spleen';\n\nexport interface OrganConfig {\n  name: OrganName;\n  ontologyId?: string;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\ndeclare global {\n  let ruiConfig: GlobalConfig;\n}\n\nexport const GLOBAL_CONFIG = new InjectionToken('Global configuration object');\n\nexport function globalConfigFactory(globals: GlobalsService): GlobalConfig {\n  return globals.get('ruiConfig', { user: { firstName: '', lastName: '' } });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page header\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                homeUrl\n                            \n                            \n                                logoTooltip\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/header/header.component.ts:20\n                            \n                        \n\n                \n                    \n                            Creates an instance of header component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/header/header.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/header/header.component.ts:20\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-header\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-header'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/header/header.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-header'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/header/header.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\nimport { PageState } from '../../core/store/page/page.state';\n\n/**\n * Page header\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-header';\n\n  @Input() homeUrl!: string;\n\n  @Input() logoTooltip!: string;\n\n  /**\n   * Creates an instance of header component.\n   *\n   * @param page Page data.\n   */\n  constructor(readonly page: PageState) {}\n}\n\n    \n\n    \n         \n\n\n  \n    chevron_left\n    BACK\n  \n\n\n\n  \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n\n  .text {\n    padding: 0.25rem 0;\n    height: 2rem;\n    display: flex;\n    align-items: center;\n    font-weight: lighter;\n    font-size: 1.5rem;\n  }\n\n  .link {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    text-decoration: none;\n    padding: 0.25rem 0;\n  }\n\n  .home {\n    * {\n      transition: color 0.6s;\n    }\n\n    .backbutton {\n      // Material icons do not always fill the space given\n      // Scale up size for icon to look correct\n      font-size: 2.25rem;\n      width: 2.25rem;\n      height: 2.25rem;\n    }\n  }\n\n  .portal {\n    height: 100%;\n    width: 25rem;\n    align-items: center;\n    display: flex;\n  }\n\n  .logo {\n    width: 100%;\n    height: 50%;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       chevron_left    BACK          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/header/header.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HeaderComponent } from './header.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatTooltipModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent],\n})\nexport class HeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:     SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { State } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { GlobalConfig } from '../../services/config/config';\nimport { DEFAULT_ICONS } from './default-icons';\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    private readonly sanitizer: DomSanitizer,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  override ngxsOnInit(): void {\n    // Register html icons as they don't depend on baseHref\n    DEFAULT_ICONS.filter((def) => def.html !== undefined)\n      .map((def) => ({ ...def, html: this.sanitizer.bypassSecurityTrustHtml(def.html ?? '') }))\n      .forEach((def) => this.registerIconImpl(def));\n\n    // Use resolver for url icons\n    this.registry?.addSvgIconResolver((name, namespace) => {\n      const def = DEFAULT_ICONS.find((icon) => (icon.name ?? '') === name && (icon.namespace ?? '') === namespace);\n\n      if (def?.url === undefined) {\n        return null;\n      }\n\n      const baseHref = this.globalConfig.snapshot.baseHref ?? '';\n      return this.sanitizer.bypassSecurityTrustResourceUrl(baseHref + def.url);\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry;\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName as never] as (...arg: unknown[]) => void;\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter((value) => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngxsOnInit\n                            \n                            \n                                    \n                                registerIcon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/icon-registry/icon-registry.state.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registerIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/icon-registry/icon-registry.state.ts:84\n                        \n                    \n\n\n            \n                \n                        Registers a svg icon for use in mat-icon.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                definition\n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Icon to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if registration was successful, otherwise false.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { State } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { GlobalConfig } from '../../services/config/config';\nimport { DEFAULT_ICONS } from './default-icons';\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    private readonly sanitizer: DomSanitizer,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  override ngxsOnInit(): void {\n    // Register html icons as they don't depend on baseHref\n    DEFAULT_ICONS.filter((def) => def.html !== undefined)\n      .map((def) => ({ ...def, html: this.sanitizer.bypassSecurityTrustHtml(def.html ?? '') }))\n      .forEach((def) => this.registerIconImpl(def));\n\n    // Use resolver for url icons\n    this.registry?.addSvgIconResolver((name, namespace) => {\n      const def = DEFAULT_ICONS.find((icon) => (icon.name ?? '') === name && (icon.namespace ?? '') === namespace);\n\n      if (def?.url === undefined) {\n        return null;\n      }\n\n      const baseHref = this.globalConfig.snapshot.baseHref ?? '';\n      return this.sanitizer.bypassSecurityTrustResourceUrl(baseHref + def.url);\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry;\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName as never] as (...arg: unknown[]) => void;\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter((value) => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Sets the state to true and\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        wait\n                        \n                    \n                \n            \n            \n                \n                        \n                    wait()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Gets a promise that resolves when this state is set to true.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0,\n  },\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private readonly deferred = new Promise((resolve) => {\n    this.resolve = resolve;\n  });\n  /** Resolve function for the promise. */\n  private resolve!: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise {\n    return this.deferred;\n  }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean {\n    return this.initialized;\n  }\n}\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(\n        'open, open-instant',\n        style({\n          transform: 'none',\n        }),\n      ),\n      state('closed', style({})),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('.5s ease-in-out')),\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state(\n        'half',\n        style({\n          width: 'calc(50% - {{ margin }}px)',\n        }),\n        EXPAND_COLLAPSE_PARAMS_DEFAULT,\n      ),\n      state(\n        'extended',\n        style({\n          width: 'calc(100% - {{ width }}px - {{ margin }}px)',\n        }),\n        EXPAND_COLLAPSE_PARAMS_DEFAULT,\n      ),\n      state(\n        'full',\n        style({\n          width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)',\n        }),\n        EXPAND_COLLAPSE_PARAMS_DEFAULT,\n      ),\n\n      transition('*  *', animate('.5s ease-in-out')),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input() // eslint-disable-line\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    this._position = value || 'start';\n  }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input()\n  @HostBinding('class.ccf-drawer-opened')\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input()\n  @HostBinding('class.ccf-drawer-expanded')\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    this.toggleExpanded(coerceBooleanProperty(value));\n  }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose') openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')\n  get expandedStateObj(): unknown {\n    return {\n      value: this.expandedState2,\n      params: {\n        width: this.width,\n        margin: this.measuredMargin,\n        margin2: this.margin2,\n      },\n    };\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) {\n      return this._measuredWidth;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) {\n      return 0;\n    }\n\n    this._measuredWidth = width;\n    return width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) {\n      return this._measuredMargin;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    this._measuredMargin = margin;\n    return margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private readonly initialized = new InitializationState();\n  /** Connected message channel. */\n  private readonly channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(\n    messageService: MessageService,\n    cdr: ChangeDetectorRef,\n    private readonly element: ElementRef,\n  ) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(\n      this.channel.getMessages().subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void {\n    this.toggle(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void {\n    this.toggle(false);\n  }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) {\n      return;\n    }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void {\n    this.toggleExpanded(true);\n  }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void {\n    this.toggleExpanded(false);\n  }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) {\n      return;\n    }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done')\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done')\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin,\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      const other = msg.source as DrawerComponent;\n      this.syncExpanded(other);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_position: '' | 'start' | 'end';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_opened: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_expanded: BooleanInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JsonFileReaderComponent.html":{"url":"components/JsonFileReaderComponent.html","title":"component - JsonFileReaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  JsonFileReaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/json-file-reader/json-file-reader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-json-file-reader\n            \n\n\n\n            \n                styleUrls\n                ./json-file-reader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./json-file-reader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                fileInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleFile\n                            \n                            \n                                triggerFileInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parsedJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/json-file-reader/json-file-reader.component.ts:30\n                            \n                        \n\n                \n                    \n                            Creates an instance of json file reader component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Upload'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/json-file-reader/json-file-reader.component.ts:27\n                            \n                        \n                \n                    \n                        Allows the label on the upload button to be customized.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parsedJson\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/json-file-reader/json-file-reader.component.ts:30\n                            \n                        \n                \n                    \n                        Emits the json object of any files uploaded.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-json-file-reader\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-json-file-reader'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/json-file-reader/json-file-reader.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleFile\n                        \n                    \n                \n            \n            \n                \nhandleFile(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/json-file-reader/json-file-reader.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Takes in a json file and emits the parsed json object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file input event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerFileInput\n                        \n                    \n                \n            \n            \n                \ntriggerFileInput()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/json-file-reader/json-file-reader.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Method used to trigger the file input element's click handler\nfrom the placeholder button used for styling purposes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-json-file-reader'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/json-file-reader/json-file-reader.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('fileInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/json-file-reader/json-file-reader.component.ts:24\n                        \n                    \n\n            \n                \n                    File Input element, used to manually trigger the click event.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n@Component({\n  selector: 'ccf-json-file-reader',\n  templateUrl: './json-file-reader.component.html',\n  styleUrls: ['./json-file-reader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class JsonFileReaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-json-file-reader';\n\n  /** File Input element, used to manually trigger the click event. */\n  @ViewChild('fileInput') fileInput!: ElementRef;\n\n  /** Allows the label on the upload button to be customized. */\n  @Input() label = 'Upload';\n\n  /** Emits the json object of any files uploaded. */\n  @Output() readonly parsedJson = new EventEmitter();\n\n  /**\n   * Creates an instance of json file reader component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Method used to trigger the file input element's click handler\n   * from the placeholder button used for styling purposes.\n   */\n  triggerFileInput(): void {\n    const fileInputElement: HTMLElement = this.fileInput.nativeElement;\n    fileInputElement.click();\n  }\n\n  /**\n   * Takes in a json file and emits the parsed json object.\n   *\n   * @param event file input event\n   */\n  handleFile(event: Event): void {\n    const inputTarget = event.target as HTMLInputElement;\n    if (!inputTarget.files) {\n      return;\n    }\n\n    const file = inputTarget.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const json = JSON.parse(fileReader.result as string) as unknown;\n      this.ga.event('json_file_load_end', 'json_file_reader');\n      this.parsedJson.emit(json);\n    };\n\n    this.ga.event('json_file_load_start', 'json_file_reader');\n    fileReader.readAsText(file);\n  }\n}\n\n    \n\n    \n        {{ label }}\n\n\n    \n\n    \n                \n                    ./json-file-reader.component.scss\n                \n                :host {\n  .upload-button {\n    width: 100%;\n    height: 2.25rem;\n    transition: 0.6s;\n    cursor: pointer;\n    font-weight: 500;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ label }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JsonFileReaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JsonFileReaderModule.html":{"url":"modules/JsonFileReaderModule.html","title":"module - JsonFileReaderModule","body":"\n                   \n\n\n\n\n    Modules\n    JsonFileReaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonFileReaderModule\n\n\n\ncluster_JsonFileReaderModule_declarations\n\n\n\ncluster_JsonFileReaderModule_exports\n\n\n\n\nJsonFileReaderComponent\n\nJsonFileReaderComponent\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nJsonFileReaderModule -->\n\nJsonFileReaderComponent->JsonFileReaderModule\n\n\n\n\n\nJsonFileReaderComponent \n\nJsonFileReaderComponent \n\nJsonFileReaderComponent  -->\n\nJsonFileReaderModule->JsonFileReaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/json-file-reader/json-file-reader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JsonFileReaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JsonFileReaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonFileReaderComponent } from './json-file-reader.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [JsonFileReaderComponent],\n  imports: [CommonModule, MatButtonModule],\n  exports: [JsonFileReaderComponent],\n})\nexport class JsonFileReaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabeledSlideToggleComponent.html":{"url":"components/LabeledSlideToggleComponent.html","title":"component - LabeledSlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabeledSlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Generic toggle slider component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-labeled-slide-toggle\n            \n\n\n\n            \n                styleUrls\n                ./labeled-slide-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./labeled-slide-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                labels\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    left\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of labeled slide toggle component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:32\n                            \n                        \n                \n                    \n                        Whether or not the slider is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labels\n                    \n                \n                \n                    \n                        Type :     [string, string]\n\n                    \n                \n                \n                    \n                        Default value : ['Left', 'Right']\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:22\n                            \n                        \n                \n                    \n                        The two selection options to be toggled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Left'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:27\n                            \n                        \n                \n                    \n                        Input value for toggle slider\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:37\n                            \n                        \n                \n                    \n                        Emits the datatype with the currently selected option\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-labeled-slide-toggle\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-labeled-slide-toggle'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateToggle\n                        \n                    \n                \n            \n            \n                \nupdateToggle(selection: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Updates and emits the currently selected option\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The current toggle state (true=left, false=right)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-labeled-slide-toggle'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        left\n                    \n                \n\n                \n                    \n                        getleft()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:49\n                                \n                            \n                    \n                        \n                                Determines if left toggle option is selected\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Generic toggle slider component\n */\n@Component({\n  selector: 'ccf-labeled-slide-toggle',\n  templateUrl: './labeled-slide-toggle.component.html',\n  styleUrls: ['./labeled-slide-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LabeledSlideToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-labeled-slide-toggle';\n\n  /**\n   * The two selection options to be toggled\n   */\n  @Input() labels: [string, string] = ['Left', 'Right'];\n\n  /**\n   * Input value for toggle slider\n   */\n  @Input() value = 'Left';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Emits the datatype with the currently selected option\n   */\n  @Output() readonly valueChange = new EventEmitter();\n\n  /**\n   * Creates an instance of labeled slide toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Determines if left toggle option is selected\n   */\n  get left(): boolean {\n    const { value, labels } = this;\n    return value !== labels[1];\n  }\n\n  /**\n   * Updates and emits the currently selected option\n   *\n   * @param selection The current toggle state (true=left, false=right)\n   */\n  updateToggle(selection: boolean): void {\n    this.value = selection ? this.labels[0] : this.labels[1];\n    this.ga.event('slide_toggle_toggled', 'slide_toggle', this.value);\n    this.valueChange.emit(this.value);\n  }\n}\n\n    \n\n    \n        \n  {{ labels[0] }}\n\n\n\n\n\n\n  {{ labels[1] }}\n\n\n    \n\n    \n                \n                    ./labeled-slide-toggle.component.scss\n                \n                :host {\n  .slide-label {\n    margin: 0 1rem;\n    transition: color 0.6s;\n    cursor: pointer;\n  }\n\n  .disabled {\n    opacity: 30%;\n    cursor: not-allowed;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ labels[0] }}  {{ labels[1] }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabeledSlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LabeledSlideToggleModule.html":{"url":"modules/LabeledSlideToggleModule.html","title":"module - LabeledSlideToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    LabeledSlideToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { LabeledSlideToggleComponent } from './labeled-slide-toggle.component';\n\n@NgModule({\n  imports: [CommonModule, MatSlideToggleModule],\n  declarations: [LabeledSlideToggleComponent],\n  exports: [LabeledSlideToggleComponent],\n})\nexport class LabeledSlideToggleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeftSidebarComponent.html":{"url":"components/LeftSidebarComponent.html","title":"component - LeftSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LeftSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/left-sidebar/left-sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The left sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-left-sidebar\n            \n\n\n\n            \n                styleUrls\n                ./left-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./left-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                extractionSiteTooltip\n                            \n                            \n                                    Readonly\n                                organSelected$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateExtractionSiteTooltip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalClosed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState, model: ModelState, registration: RegistrationState)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/left-sidebar/left-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalClosed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/left-sidebar/left-sidebar.component.ts:23\n                            \n                        \n                \n                    \n                        Whether or not the initial registration modal has been closed\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-left-sidebar\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-left-sidebar'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/left-sidebar/left-sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateExtractionSiteTooltip\n                        \n                    \n                \n            \n            \n                \nupdateExtractionSiteTooltip(item: VisibilityItem | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/left-sidebar/left-sidebar.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Updates extraction site tooltip to either the VisibilityItem passed in's\ntooltip property, or an empty string if undefined.\nundefined.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The VisibilityItem which we want to show the tooltip of, or\nundefined.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-left-sidebar'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/left-sidebar/left-sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractionSiteTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/left-sidebar/left-sidebar.component.ts:31\n                        \n                    \n\n            \n                \n                    Variable that keeps track of the extraction site tooltip to display on\nthe stage when hovered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organSelected$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.organ$.pipe(map((organ) => (organ === undefined ? false : true)))\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/left-sidebar/left-sidebar.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { VisibilityItem } from '../../core/models/visibility-item';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\n\n/**\n * The left sidebar\n */\n@Component({\n  selector: 'ccf-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LeftSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-left-sidebar';\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  readonly organSelected$ = this.model.organ$.pipe(map((organ) => (organ === undefined ? false : true)));\n\n  /**\n   * Variable that keeps track of the extraction site tooltip to display on\n   * the stage when hovered.\n   */\n  extractionSiteTooltip = '';\n\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n  ) {}\n\n  /**\n   * Updates extraction site tooltip to either the VisibilityItem passed in's\n   * tooltip property, or an empty string if undefined.\n   *\n   * @param item The VisibilityItem which we want to show the tooltip of, or\n   * undefined.\n   */\n  updateExtractionSiteTooltip(item: VisibilityItem | undefined): void {\n    if (item?.tooltip) {\n      this.extractionSiteTooltip = item.tooltip;\n    } else {\n      this.extractionSiteTooltip = '';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Anatomical Structures\n      \n\n      \n        \n        \n      \n    \n\n    \n\n    \n      \n        Landmarks\n      \n      \n        \n        \n        \n        \n      \n    \n     0\">\n      {{ extractionSiteTooltip }}\n    \n  \n\n\n    \n\n    \n                \n                    ./left-sidebar.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 2.5rem);\n  margin-top: 1rem;\n  margin-bottom: 1.5rem;\n\n  .scroll-wrapper {\n    overflow-y: scroll;\n    height: 100%;\n    margin-right: 0.375rem;\n\n    scrollbar-width: thin;\n    &::-webkit-scrollbar {\n      width: 0.75rem;\n    }\n\n    .container {\n      display: flex;\n      flex-direction: column;\n      margin-left: 1.5rem;\n      margin-right: 0.375rem;\n      min-height: 100%;\n\n      mat-divider {\n        border-top-width: 3px;\n      }\n\n      .ccf-organ-selector {\n        margin-top: 1.5rem;\n      }\n\n      .organ-sliders {\n        .slider-label {\n          font-weight: 600;\n        }\n\n        display: flex;\n        height: 3rem;\n        align-items: center;\n      }\n\n      mat-expansion-panel {\n        box-shadow: none;\n        mat-expansion-panel-header {\n          .expansion-title {\n            font-size: 1rem;\n            font-weight: 600;\n          }\n        }\n      }\n\n      ::ng-deep .mat-expansion-panel-body {\n        padding: 0;\n      }\n\n      .extraction-menu,\n      .anatomical-structures-menu {\n        ::ng-deep .expansion-header {\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          padding: 0;\n          font-weight: bold;\n          height: 3rem;\n\n          .mat-expansion-indicator {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            height: 24px;\n            width: 24px;\n          }\n        }\n\n        .expansion-content {\n          margin-bottom: 0.75rem;\n          text-align: center;\n          margin-top: 1.75rem;\n\n          .expansion-placeholder {\n            width: 100%;\n            font-size: 0.9rem;\n            font-weight: 400;\n          }\n        }\n      }\n\n      .extraction-site-tooltip {\n        position: absolute;\n        top: 4rem;\n        left: 27rem;\n        width: 21rem;\n        padding: 1rem;\n        border-radius: 0.5rem;\n        border: 1px solid;\n        z-index: 2;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Anatomical Structures                                                            Landmarks                                                           0\">      {{ extractionSiteTooltip }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeftSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeftSidebarModule.html":{"url":"modules/LeftSidebarModule.html","title":"module - LeftSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    LeftSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nLeftSidebarModule -->\n\nExtractionSetDropdownModule->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nLeftSidebarModule -->\n\nVisibilityMenuModule->LeftSidebarModule\n\n\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/left-sidebar/left-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ExtractionSetDropdownModule\n                        \n                        \n                            NameInputModule\n                        \n                        \n                            VisibilityMenuModule\n                        \n                        \n                            VisibilityToggleModule\n                        \n                        \n                            VisibilityToggleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { OpacitySliderModule } from 'ccf-shared';\n\nimport { ExtractionSetDropdownModule } from '../../shared/components/extraction-set-dropdown/extraction-set-dropdown.module';\nimport { NameInputModule } from '../../shared/components/name-input/name-input.module';\nimport { VisibilityMenuModule } from '../../shared/components/visibility-menu/visibility-menu.module';\nimport { VisibilityToggleModule } from '../../shared/components/visibility-toggle/visibility-toggle.module';\nimport { LeftSidebarComponent } from './left-sidebar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatTooltipModule,\n\n    MatDividerModule,\n    NameInputModule,\n    VisibilityToggleModule,\n    ExtractionSetDropdownModule,\n    OpacitySliderModule,\n    VisibilityMenuModule,\n    VisibilityToggleModule,\n  ],\n  declarations: [LeftSidebarComponent],\n  exports: [LeftSidebarComponent],\n})\nexport class LeftSidebarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Sender of the message.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Observable, Subject, from } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true,\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken('Message service configuration', {\n  providedIn: 'root',\n  factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG,\n});\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private readonly channel: Subject>,\n    private readonly messages: Observable>,\n  ) {}\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload,\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter((msg) => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter((msg) => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter((msg) => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    const result = MessageChannel.counter;\n    MessageChannel.counter++;\n    return result;\n  }\n}\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private readonly channel = new Subject>();\n  /** The message listener. */\n  private readonly messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(\n    @Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n    @Optional() @SkipSelf() readonly parent: MessageService | null,\n  ) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([this.channel, parent.messages.pipe(takeWhile(() => !this.channel.closed))]).pipe(\n        mergeAll(),\n      );\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/message/message.service.ts:45\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                        Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessages\n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/message/message.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting all messages except for those sent by this source.\n\n\n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSource\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/message/message.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting messages sent from a specific source.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source messages are filtered on.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSources\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/message/message.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting messages sent from any of the specified sources.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sources\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The sources messages are filtered on.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/message/message.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Sends a single message with a payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message payload.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Observable, Subject, from } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true,\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken('Message service configuration', {\n  providedIn: 'root',\n  factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG,\n});\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private readonly channel: Subject>,\n    private readonly messages: Observable>,\n  ) {}\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload,\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter((msg) => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter((msg) => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter((msg) => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    const result = MessageChannel.counter;\n    MessageChannel.counter++;\n    return result;\n  }\n}\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private readonly channel = new Subject>();\n  /** The message listener. */\n  private readonly messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(\n    @Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n    @Optional() @SkipSelf() readonly parent: MessageService | null,\n  ) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([this.channel, parent.messages.pipe(takeWhile(() => !this.channel.closed))]).pipe(\n        mergeAll(),\n      );\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/message/message.service.ts:126\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(source)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/message/message.service.ts:160\n                        \n                    \n\n\n            \n                \n                        Connects to a message channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source of messages sent.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MessageChannel\n\n                        \n                            \n                                A new connected message channel.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Observable, Subject, from } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true,\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken('Message service configuration', {\n  providedIn: 'root',\n  factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG,\n});\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private readonly channel: Subject>,\n    private readonly messages: Observable>,\n  ) {}\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload,\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter((msg) => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter((msg) => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter((msg) => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    const result = MessageChannel.counter;\n    MessageChannel.counter++;\n    return result;\n  }\n}\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private readonly channel = new Subject>();\n  /** The message listener. */\n  private readonly messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(\n    @Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n    @Optional() @SkipSelf() readonly parent: MessageService | null,\n  ) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([this.channel, parent.messages.pipe(takeWhile(() => !this.channel.closed))]).pipe(\n        mergeAll(),\n      );\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isolated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Observable, Subject, from } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true,\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken('Message service configuration', {\n  providedIn: 'root',\n  factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG,\n});\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private readonly channel: Subject>,\n    private readonly messages: Observable>,\n  ) {}\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload,\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter((msg) => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter((msg) => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter((msg) => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    const result = MessageChannel.counter;\n    MessageChannel.counter++;\n    return result;\n  }\n}\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private readonly channel = new Subject>();\n  /** The message listener. */\n  private readonly messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(\n    @Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n    @Optional() @SkipSelf() readonly parent: MessageService | null,\n  ) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([this.channel, parent.messages.pipe(takeWhile(() => !this.channel.closed))]).pipe(\n        mergeAll(),\n      );\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MetaDataField.html":{"url":"interfaces/MetaDataField.html","title":"interface - MetaDataField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MetaDataField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/meta-data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MetaDataField {\n  label: string;\n  value: string;\n}\n\nexport type MetaData = MetaDataField[];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelStateModel.html":{"url":"interfaces/ModelStateModel.html","title":"interface - ModelStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModelStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data contained in the stage state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            blockSize\n                                        \n                                \n                                \n                                        \n                                            extractionSets\n                                        \n                                \n                                \n                                        \n                                            extractionSites\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            organDimensions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organIri\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            showPrevious\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slicesConfig\n                                        \n                                \n                                \n                                        \n                                            viewSide\n                                        \n                                \n                                \n                                        \n                                            viewType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Anatomical structures for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockSize:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Block size\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSets:         ExtractionSet[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtractionSet[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Extraction sets\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSites:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Possible extraction sites\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organ name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organDimensions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organDimensions:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reference Organ Dimensions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organIri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organIri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Reference Organ IRI\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model position\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model rotation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sex if applicable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPrevious\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPrevious:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether previous registration blocks are visible\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Side if applicable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slicesConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slicesConfig:         SlicesConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SlicesConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Slice configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewSide\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewSide:         ViewSide\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViewSide\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View side\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewType:         ViewType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViewType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport {\n  delay,\n  distinct,\n  distinctUntilChanged,\n  filter,\n  map,\n  skipUntil,\n  switchMap,\n  tap,\n  throttleTime,\n} from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: [],\n  },\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(\n    map((x) => x?.id),\n    distinct(),\n  );\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(\n    map((x) => x?.blockSize),\n    distinct(),\n  );\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(\n    map((x) => x?.rotation),\n    distinct(),\n  );\n  /** Position observable */\n  readonly position$ = this.state$.pipe(\n    map((x) => x?.position),\n    distinct(),\n  );\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(\n    map((x) => x?.slicesConfig),\n    distinct(),\n  );\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(\n    map((x) => x?.viewType),\n    distinct(),\n  );\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(\n    map((x) => x?.viewSide),\n    distinct(),\n  );\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(\n    map((x) => x?.organ),\n    distinct(),\n  );\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(\n    map((x) => x?.organIri),\n    distinct(),\n  );\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(\n    map((x) => x?.organDimensions),\n    distinct(),\n  );\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(\n    map((x) => x?.sex),\n    distinct(),\n  );\n  /** Side observable */\n  readonly side$ = this.state$.pipe(\n    map((x) => x?.side),\n    distinct(),\n  );\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(\n    map((x) => x?.showPrevious),\n    distinct(),\n  );\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(\n    map((x) => x?.extractionSites),\n    distinct(),\n  );\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(\n    map((x) => x?.anatomicalStructures),\n    distinct(),\n  );\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(\n    map((x) => x?.extractionSets),\n    distinct(),\n  );\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState).filter((key) => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key as never] !== v2[key as never]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined),\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData!: ReferenceDataState;\n\n  private page!: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) => (ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false));\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName,\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event(\n      'placement',\n      `${this.snapshot.organ?.name}_placement`,\n      `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`,\n    );\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      } else {\n        this.ctx.patchState({ side: undefined });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Sets position and rotation to default\n   */\n  @DataAction()\n  setOrganDefaults(): void {\n    this.ctx.patchState({\n      position: this.defaultPosition,\n      rotation: { x: 0, y: 0, z: 0 },\n    });\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map((structure) => ({\n        ...structure,\n        opacity: Math.min(20, structure.opacity ?? 20),\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '',\n      this.snapshot.sex,\n      this.snapshot.side,\n      this.snapshot.organ,\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of db.anatomicalStructures[organIri] || []) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label ?? '',\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment,\n          };\n        }\n      }\n      this.ctx.patchState({\n        anatomicalStructures: [\n          { id: 'all', name: 'all anatomical structures', opacity: 20, visible: true },\n          ...Object.values(asLookup),\n        ],\n      });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: [{ id: 'all', name: 'all landmarks', visible: true, opacity: 0 }].concat(\n          sortBy(\n            set.extractionSites.map((entity) => ({\n              id: entity['@id'],\n              name: entity.label ?? '',\n              visible: true,\n              opacity: 0,\n              tooltip: entity.comment,\n            })),\n            'name',\n          ),\n        ),\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig\n      .getOption('organ')\n      .pipe(\n        filterNulls(),\n        delay(0),\n        switchMap((organ) => this.onOrganChange(organ)),\n      )\n      .subscribe();\n\n    this.modelChanged$\n      .pipe(skipUntil(this.page.registrationStarted$.pipe(filter((started) => started))))\n      .subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right',\n      });\n      return this.referenceData.state$.pipe(tap(() => this.onOrganIriChange()));\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameInputComponent.html":{"url":"components/NameInputComponent.html","title":"component - NameInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NameInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/name-input/name-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for inputting the researcher's name\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-name-input\n            \n\n\n\n            \n                styleUrls\n                ./name-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                firstNameValidator\n                            \n                            \n                                lastNameValidator\n                            \n                            \n                                middleNameValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nameChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/name-input/name-input.component.ts:79\n                            \n                        \n\n                \n                    \n                            Creates an instance of name input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         UserName\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/name-input/name-input.component.ts:59\n                            \n                        \n                \n                    \n                        Current user name\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nameChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/name-input/name-input.component.ts:79\n                            \n                        \n                \n                    \n                        Emits a UserName object\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-name-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-name-input'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/name-input/name-input.component.ts:38\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateName\n                        \n                    \n                \n            \n            \n                \nupdateName(input: Event, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/name-input/name-input.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Updates username with a new entry and emits the UserName object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    InputEvent from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    firstName or lastName\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-name-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/name-input/name-input.component.ts:38\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/name-input/name-input.component.ts:43\n                        \n                    \n\n            \n                \n                    Used to validate the first name input field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/name-input/name-input.component.ts:48\n                        \n                    \n\n            \n                \n                    Used to validate the last name input field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        middleNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/name-input/name-input.component.ts:53\n                        \n                    \n\n            \n                \n                    Used to validate the middle name input field.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/name-input/name-input.component.ts:59\n                                \n                            \n                    \n                        \n                                Current user name\n\n\n                                \n                                    Returns :         UserName\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(value: UserName)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/name-input/name-input.component.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            UserName\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * User name data\n */\nexport interface UserName {\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's middle name\n   */\n  middleName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Used to validate the first name input field.\n   */\n  firstNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the last name input field.\n   */\n  lastNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the middle name input field.\n   */\n  middleNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Current user name\n   */\n  @Input()\n  get name(): UserName {\n    return this._name;\n  }\n\n  set name(value: UserName) {\n    this._name = value;\n    this.firstNameValidator.setValue(value?.firstName || '');\n    this.lastNameValidator.setValue(value?.lastName || '');\n    this.middleNameValidator.setValue(value?.middleName || '');\n  }\n\n  private _name: UserName = {\n    firstName: '',\n    middleName: '',\n    lastName: '',\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Creates an instance of name input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: Event, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.ga.event('name_updated', 'name_input', key);\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n    \n        \n  First Name \n  \n\n\n\n  Middle Name \n  \n\n\n\n  Last Name \n  \n\n\n    \n\n    \n                \n                    ./name-input.component.scss\n                \n                :host {\n  display: flex;\n\n  .field {\n    &:not(:last-child) {\n      padding-right: 0.75rem;\n    }\n\n    .input {\n      text-align: left;\n      width: 100%;\n      font-size: 1rem;\n    }\n\n    ::ng-deep .mdc-text-field {\n      padding: 0;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  First Name     Middle Name     Last Name   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NameInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NameInputModule.html":{"url":"modules/NameInputModule.html","title":"module - NameInputModule","body":"\n                   \n\n\n\n\n    Modules\n    NameInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_declarations\n\n\n\ncluster_NameInputModule_exports\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\n\n\nNameInputModule\n\nNameInputModule\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/name-input/name-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NameInputComponent } from './name-input.component';\n\n@NgModule({\n  imports: [CommonModule, MatInputModule, FormsModule, ReactiveFormsModule, MatTooltipModule],\n  declarations: [NameInputComponent],\n  exports: [NameInputComponent],\n})\nexport class NameInputModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganConfig.html":{"url":"interfaces/OrganConfig.html","title":"interface - OrganConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/config/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         OrganName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\nimport { ObservableInput } from 'rxjs';\n\nexport interface GlobalConfig {\n  baseHref?: string;\n  editRegistration?: Record;\n  organ?: OrganConfig | string;\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n\n  register?: (data: string) => void;\n  useDownload?: boolean;\n\n  fetchPreviousRegistrations?: () => ObservableInput[]>;\n  registrationStarted?: boolean;\n\n  cancelRegistration?: () => void;\n\n  skipUnsavedChangesConfirmation?: boolean;\n\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  organOptions?: string[];\n\n  collisionsEndpoint?: string;\n}\n\nexport type OrganName = 'large intestine' | 'heart' | 'kidney' | 'spleen';\n\nexport interface OrganConfig {\n  name: OrganName;\n  ontologyId?: string;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\ndeclare global {\n  let ruiConfig: GlobalConfig;\n}\n\nexport const GLOBAL_CONFIG = new InjectionToken('Global configuration object');\n\nexport function globalConfigFactory(globals: GlobalsService): GlobalConfig {\n  return globals.get('ruiConfig', { user: { firstName: '', lastName: '' } });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganData.html":{"url":"interfaces/OrganData.html","title":"interface - OrganData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, Observable, from } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map((t) => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {},\n  },\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n  constructor(\n    private readonly globals: GlobalsService,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe((db) => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map((baseHref) => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap((url) =>\n        from(fetch(url)).pipe(\n          switchMap((data) => data.json()),\n          catchError(() => EMPTY),\n        ),\n      ),\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([position.x, position.y, position.z], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(\n    organ: string,\n    sex?: 'Male' | 'Female' | string,\n    side?: 'Left' | 'Right' | string,\n    organInfo?: OrganInfo,\n  ): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(\n      (info) => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side),\n    );\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right',\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageState.html":{"url":"injectables/PageState.html","title":"injectable - PageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                General page global state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                orcidValid$\n                            \n                            \n                                    Readonly\n                                organOptions$\n                            \n                            \n                                    Readonly\n                                registrationCallbackSet$\n                            \n                            \n                                    Readonly\n                                registrationStarted$\n                            \n                            \n                                    Readonly\n                                useCancelRegistrationCallback$\n                            \n                            \n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelRegistration\n                            \n                            \n                                    \n                                clearHasChanges\n                            \n                            \n                                isOrcidValid\n                            \n                            \n                                    \n                                ngxsOnInit\n                            \n                            \n                                    \n                                registrationStarted\n                            \n                            \n                                    \n                                setHasChanges\n                            \n                            \n                                    \n                                setOrcidId\n                            \n                            \n                                    \n                                setUseCancelRegistrationCallback\n                            \n                            \n                                    \n                                setUserName\n                            \n                            \n                                uriToOrcid\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skipConfirmation$\n                                \n                                \n                                    globalSkipConfirmation$\n                                \n                                \n                                    hasChanges$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, reg: RegistrationState)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/page/page.state.ts:84\n                            \n                        \n\n                \n                    \n                            Creates an instance of page state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global configuration\n\n                                                        \n                                                \n                                                \n                                                        reg\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelRegistration\n                        \n                    \n                \n            \n            \n                \ncancelRegistration()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/page/page.state.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clearHasChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearHasChanges()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/page/page.state.ts:205\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOrcidValid\n                        \n                    \n                \n            \n            \n                \nisOrcidValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/page/page.state.ts:243\n                        \n                    \n\n\n            \n                \n                        Checks if current orcid value is in the valid format\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if orcid valid or blank\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/page/page.state.ts:101\n                        \n                    \n\n\n            \n                \n                        Initializes this service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registrationStarted\n                        \n                    \n                \n            \n            \n                \n                        \n                    registrationStarted()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/page/page.state.ts:184\n                        \n                    \n\n\n            \n                \n                        Sets registrationStarted to true (when initial registration modal is closed)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setHasChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    setHasChanges()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/page/page.state.ts:193\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setOrcidId\n                        \n                    \n                \n            \n            \n                \n                        \n                    setOrcidId(id?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/page/page.state.ts:167\n                        \n                    \n\n\n            \n                \n                        Saves ORCID id as URI\nSets orcidValid to true if blank, otherwise set to true if valid\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    ORCID id\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setUseCancelRegistrationCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUseCancelRegistrationCallback(use: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/page/page.state.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                use\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setUserName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserName(name: Pick)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/page/page.state.ts:149\n                        \n                    \n\n\n            \n                \n                        Sets the name of the active user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The first and last name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uriToOrcid\n                        \n                    \n                \n            \n            \n                \nuriToOrcid(uri?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/page/page.state.ts:253\n                        \n                    \n\n\n            \n                \n                        Converts orcid URI to a regular orcid value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    orcid uri\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                orcid id\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        orcidValid$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map((x) => x?.orcidValid))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/page/page.state.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organOptions$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map((x) => x?.organOptions))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/page/page.state.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        registrationCallbackSet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map((x) => x?.registrationCallbackSet))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/page/page.state.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        registrationStarted$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluckUnique('registrationStarted'))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/page/page.state.ts:62\n                        \n                    \n\n            \n                \n                    registrationStarted observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useCancelRegistrationCallback$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map((x) => x?.useCancelRegistrationCallback))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/page/page.state.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map((x) => x?.user))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/page/page.state.ts:60\n                        \n                    \n\n            \n                \n                    Active user observable\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skipConfirmation$\n                    \n                \n\n                \n                    \n                        getskipConfirmation$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/page/page.state.ts:69\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        globalSkipConfirmation$\n                    \n                \n\n                \n                    \n                        getglobalSkipConfirmation$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/page/page.state.ts:74\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasChanges$\n                    \n                \n\n                \n                    \n                        gethasChanges$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/page/page.state.ts:82\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { RegistrationState } from '../registration/registration.state';\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n  orcidId?: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n  orcidValid: boolean;\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: '',\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: [],\n    orcidValid: false,\n  },\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map((x) => x?.user));\n  /** registrationStarted observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map((x) => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map((x) => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map((x) => x?.organOptions));\n  readonly orcidValid$ = this.state$.pipe(map((x) => x?.orcidValid));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map((value) => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged(),\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState,\n    private readonly reg: RegistrationState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    combineLatest([this.reg.state$, this.globalConfig.config$])\n      .pipe(\n        tap(([reg, config]) => {\n          this.setState(\n            patch({\n              registrationCallbackSet: reg.useRegistrationCallback ? !!config.register : false,\n              useCancelRegistrationCallback: !!config.cancelRegistration,\n              user: iif(!!config.user, config.user ?? { firstName: '', lastName: '' }),\n              registrationStarted: config.user ?? reg.initialRegistration ? true : undefined,\n            }),\n          );\n        }),\n      )\n      .subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: {\n        snapshot: { cancelRegistration: cancelRegistrationCallback },\n      },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation },\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(\n      patch({\n        user: patch({\n          firstName: name.firstName,\n          lastName: name.lastName,\n          middleName: name.middleName !== '' ? name.middleName : undefined,\n        }),\n      }),\n    );\n  }\n\n  /**\n   * Saves ORCID id as URI\n   * Sets orcidValid to true if blank, otherwise set to true if valid\n   * @param id ORCID id\n   */\n  @DataAction()\n  setOrcidId(id?: string): void {\n    this.ctx.setState(\n      patch({\n        user: patch({\n          orcidId: id ? this.orcidToUri(id) : undefined,\n        }),\n      }),\n    );\n    this.ctx.patchState({\n      orcidValid: id ? this.isOrcidValid() : true,\n    });\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(\n      patch({\n        registrationStarted: true,\n      }),\n    );\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const {\n      snapshot: { registrationStarted, hasChanges },\n    } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true,\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false,\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$.pipe(filter((s) => s)).subscribe(updateSkipConfirmation);\n\n    this.hasChanges$\n      .pipe(\n        withLatestFrom(this.globalSkipConfirmation$),\n        map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n        distinctUntilChanged(),\n      )\n      .subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe((skipConfirmation) => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n\n  /**\n   * Checks if current orcid value is in the valid format\n   * @returns true if orcid valid or blank\n   */\n  isOrcidValid(): boolean {\n    const orcId = this.uriToOrcid(this.snapshot.user.orcidId);\n    return !!(!orcId || orcId.match('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$'));\n  }\n\n  /**\n   * Converts orcid URI to a regular orcid value\n   * @param uri orcid uri\n   * @returns orcid id\n   */\n  uriToOrcid(uri?: string): string {\n    return uri ? uri.split('/').slice(-1)[0] : '';\n  }\n\n  /**\n   * Converts orcid to URI\n   * @param id orcid id\n   * @returns orcid URI\n   */\n  private orcidToUri(id: string): string {\n    const idWithHyphens = id\n      .replace(/-/g, '')\n      .replace(/(.{1,4})/g, '$1-')\n      .slice(0, -1);\n    return 'https://orcid.org/' + idWithHyphens;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageStateModel.html":{"url":"interfaces/PageStateModel.html","title":"interface - PageStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Page state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hasChanges\n                                        \n                                \n                                \n                                        \n                                            orcidValid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organOptions\n                                        \n                                \n                                \n                                        \n                                            registrationCallbackSet\n                                        \n                                \n                                \n                                        \n                                            registrationStarted\n                                        \n                                \n                                \n                                        \n                                            skipConfirmation\n                                        \n                                \n                                \n                                        \n                                            useCancelRegistrationCallback\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasChanges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasChanges:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orcidValid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orcidValid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organOptions:         OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationCallbackSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationCallbackSet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationStarted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationStarted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the initial registration modal has been closed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipConfirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useCancelRegistrationCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useCancelRegistrationCallback:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Person\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Active user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { RegistrationState } from '../registration/registration.state';\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n  orcidId?: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n  orcidValid: boolean;\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: '',\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: [],\n    orcidValid: false,\n  },\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map((x) => x?.user));\n  /** registrationStarted observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map((x) => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map((x) => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map((x) => x?.organOptions));\n  readonly orcidValid$ = this.state$.pipe(map((x) => x?.orcidValid));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map((value) => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged(),\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState,\n    private readonly reg: RegistrationState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    combineLatest([this.reg.state$, this.globalConfig.config$])\n      .pipe(\n        tap(([reg, config]) => {\n          this.setState(\n            patch({\n              registrationCallbackSet: reg.useRegistrationCallback ? !!config.register : false,\n              useCancelRegistrationCallback: !!config.cancelRegistration,\n              user: iif(!!config.user, config.user ?? { firstName: '', lastName: '' }),\n              registrationStarted: config.user ?? reg.initialRegistration ? true : undefined,\n            }),\n          );\n        }),\n      )\n      .subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: {\n        snapshot: { cancelRegistration: cancelRegistrationCallback },\n      },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation },\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(\n      patch({\n        user: patch({\n          firstName: name.firstName,\n          lastName: name.lastName,\n          middleName: name.middleName !== '' ? name.middleName : undefined,\n        }),\n      }),\n    );\n  }\n\n  /**\n   * Saves ORCID id as URI\n   * Sets orcidValid to true if blank, otherwise set to true if valid\n   * @param id ORCID id\n   */\n  @DataAction()\n  setOrcidId(id?: string): void {\n    this.ctx.setState(\n      patch({\n        user: patch({\n          orcidId: id ? this.orcidToUri(id) : undefined,\n        }),\n      }),\n    );\n    this.ctx.patchState({\n      orcidValid: id ? this.isOrcidValid() : true,\n    });\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(\n      patch({\n        registrationStarted: true,\n      }),\n    );\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const {\n      snapshot: { registrationStarted, hasChanges },\n    } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true,\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false,\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$.pipe(filter((s) => s)).subscribe(updateSkipConfirmation);\n\n    this.hasChanges$\n      .pipe(\n        withLatestFrom(this.globalSkipConfirmation$),\n        map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n        distinctUntilChanged(),\n      )\n      .subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe((skipConfirmation) => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n\n  /**\n   * Checks if current orcid value is in the valid format\n   * @returns true if orcid valid or blank\n   */\n  isOrcidValid(): boolean {\n    const orcId = this.uriToOrcid(this.snapshot.user.orcidId);\n    return !!(!orcId || orcId.match('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$'));\n  }\n\n  /**\n   * Converts orcid URI to a regular orcid value\n   * @param uri orcid uri\n   * @returns orcid id\n   */\n  uriToOrcid(uri?: string): string {\n    return uri ? uri.split('/').slice(-1)[0] : '';\n  }\n\n  /**\n   * Converts orcid to URI\n   * @param id orcid id\n   * @returns orcid URI\n   */\n  private orcidToUri(id: string): string {\n    const idWithHyphens = id\n      .replace(/-/g, '')\n      .replace(/(.{1,4})/g, '$1-')\n      .slice(0, -1);\n    return 'https://orcid.org/' + idWithHyphens;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Person.html":{"url":"interfaces/Person.html","title":"interface - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A record with information about a single person\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            middleName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orcidId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orcidId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orcidId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { RegistrationState } from '../registration/registration.state';\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n  orcidId?: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n  orcidValid: boolean;\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: '',\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: [],\n    orcidValid: false,\n  },\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map((x) => x?.user));\n  /** registrationStarted observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map((x) => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map((x) => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map((x) => x?.organOptions));\n  readonly orcidValid$ = this.state$.pipe(map((x) => x?.orcidValid));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map((value) => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged(),\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState,\n    private readonly reg: RegistrationState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    combineLatest([this.reg.state$, this.globalConfig.config$])\n      .pipe(\n        tap(([reg, config]) => {\n          this.setState(\n            patch({\n              registrationCallbackSet: reg.useRegistrationCallback ? !!config.register : false,\n              useCancelRegistrationCallback: !!config.cancelRegistration,\n              user: iif(!!config.user, config.user ?? { firstName: '', lastName: '' }),\n              registrationStarted: config.user ?? reg.initialRegistration ? true : undefined,\n            }),\n          );\n        }),\n      )\n      .subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: {\n        snapshot: { cancelRegistration: cancelRegistrationCallback },\n      },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation },\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(\n      patch({\n        user: patch({\n          firstName: name.firstName,\n          lastName: name.lastName,\n          middleName: name.middleName !== '' ? name.middleName : undefined,\n        }),\n      }),\n    );\n  }\n\n  /**\n   * Saves ORCID id as URI\n   * Sets orcidValid to true if blank, otherwise set to true if valid\n   * @param id ORCID id\n   */\n  @DataAction()\n  setOrcidId(id?: string): void {\n    this.ctx.setState(\n      patch({\n        user: patch({\n          orcidId: id ? this.orcidToUri(id) : undefined,\n        }),\n      }),\n    );\n    this.ctx.patchState({\n      orcidValid: id ? this.isOrcidValid() : true,\n    });\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(\n      patch({\n        registrationStarted: true,\n      }),\n    );\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const {\n      snapshot: { registrationStarted, hasChanges },\n    } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true,\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false,\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$.pipe(filter((s) => s)).subscribe(updateSkipConfirmation);\n\n    this.hasChanges$\n      .pipe(\n        withLatestFrom(this.globalSkipConfirmation$),\n        map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n        distinctUntilChanged(),\n      )\n      .subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe((skipConfirmation) => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n\n  /**\n   * Checks if current orcid value is in the valid format\n   * @returns true if orcid valid or blank\n   */\n  isOrcidValid(): boolean {\n    const orcId = this.uriToOrcid(this.snapshot.user.orcidId);\n    return !!(!orcId || orcId.match('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$'));\n  }\n\n  /**\n   * Converts orcid URI to a regular orcid value\n   * @param uri orcid uri\n   * @returns orcid id\n   */\n  uriToOrcid(uri?: string): string {\n    return uri ? uri.split('/').slice(-1)[0] : '';\n  }\n\n  /**\n   * Converts orcid to URI\n   * @param id orcid id\n   * @returns orcid URI\n   */\n  private orcidToUri(id: string): string {\n    const idWithHyphens = id\n      .replace(/-/g, '')\n      .replace(/(.{1,4})/g, '$1-')\n      .slice(0, -1);\n    return 'https://orcid.org/' + idWithHyphens;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReferenceDataState.html":{"url":"injectables/ReferenceDataState.html","title":"injectable - ReferenceDataState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReferenceDataState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data for the main 3d model display\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrganData\n                            \n                            \n                                getReferenceOrganIri\n                            \n                            \n                                    \n                                ngxsOnInit\n                            \n                            \n                                normalizePlacement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globals: GlobalsService, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/reference-data/reference-data.state.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globals\n                                                  \n                                                        \n                                                                    GlobalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganData\n                        \n                    \n                \n            \n            \n                \ngetOrganData(iri: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/reference-data/reference-data.state.ts:158\n                        \n                    \n\n\n            \n                \n                        Looks up organ information from an IRI\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                iri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The IRI\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OrganData | undefined\n\n                        \n                            \n                                A populated organ data if the IRI is valid, otherwise undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganIri\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganIri(organ: string, sex?: \"Male\" | \"Female\" | string, side?: \"Left\" | \"Right\" | string, organInfo?: OrganInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/reference-data/reference-data.state.ts:133\n                        \n                    \n\n\n            \n                \n                        Looks up an IRI for a potential reference organ.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the organ\n\n                                            \n                                        \n                                        \n                                                sex\n                                            \n                                                        \"Male\" | \"Female\" | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    the sex: male, female, or undefined\n\n                                            \n                                        \n                                        \n                                                side\n                                            \n                                                        \"Left\" | \"Right\" | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    the side: left, right, or undefined\n\n                                            \n                                        \n                                        \n                                                organInfo\n                                            \n                                                            OrganInfo\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                An IRI if there is a reference organ for this state, otherwise undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/reference-data/reference-data.state.ts:83\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizePlacement\n                        \n                    \n                \n            \n            \n                \nnormalizePlacement(place: SpatialPlacementJsonLd)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/reference-data/reference-data.state.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                place\n                                            \n                                                        SpatialPlacementJsonLd\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialPlacementJsonLd\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, Observable, from } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map((t) => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {},\n  },\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n  constructor(\n    private readonly globals: GlobalsService,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe((db) => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map((baseHref) => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap((url) =>\n        from(fetch(url)).pipe(\n          switchMap((data) => data.json()),\n          catchError(() => EMPTY),\n        ),\n      ),\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([position.x, position.y, position.z], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(\n    organ: string,\n    sex?: 'Male' | 'Female' | string,\n    side?: 'Left' | 'Right' | string,\n    organInfo?: OrganInfo,\n  ): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(\n      (info) => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side),\n    );\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right',\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReferenceDataStateModel.html":{"url":"interfaces/ReferenceDataStateModel.html","title":"interface - ReferenceDataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReferenceDataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            extractionSets\n                                        \n                                \n                                \n                                        \n                                            organIRILookup\n                                        \n                                \n                                \n                                        \n                                            organSpatialEntities\n                                        \n                                \n                                \n                                        \n                                            placementPatches\n                                        \n                                \n                                \n                                        \n                                            sceneNodeLookup\n                                        \n                                \n                                \n                                        \n                                            simpleSceneNodeLookup\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSets:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organIRILookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organIRILookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organSpatialEntities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organSpatialEntities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placementPatches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placementPatches:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sceneNodeLookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sceneNodeLookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        simpleSceneNodeLookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        simpleSceneNodeLookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, Observable, from } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map((t) => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {},\n  },\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n  constructor(\n    private readonly globals: GlobalsService,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe((db) => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map((baseHref) => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap((url) =>\n        from(fetch(url)).pipe(\n          switchMap((data) => data.json()),\n          catchError(() => EMPTY),\n        ),\n      ),\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([position.x, position.y, position.z], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(\n    organ: string,\n    sex?: 'Male' | 'Female' | string,\n    side?: 'Left' | 'Right' | string,\n    organInfo?: OrganInfo,\n  ): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(\n      (info) => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side),\n    );\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right',\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationContentComponent.html":{"url":"components/RegistrationContentComponent.html","title":"component - RegistrationContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/registration-modal/registration-content/registration-content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component containing content of the initial registration modal\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-content\n            \n\n\n\n            \n                styleUrls\n                ./registration-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                currentOrgan\n                            \n                            \n                                currentSex\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                nameValid\n                            \n                            \n                                orcidValid\n                            \n                            \n                                organList\n                            \n                            \n                                organSelected\n                            \n                            \n                                registrationSelected\n                            \n                            \n                                    Readonly\n                                sexByLabel$\n                            \n                            \n                                sexSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNameValid\n                            \n                            \n                                closeDialog\n                            \n                            \n                                handleRegistrationSelect\n                            \n                            \n                                organSelect\n                            \n                            \n                                registerButtonClick\n                            \n                            \n                                setSexFromLabel\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState, model: ModelState, dialogRef: MatDialogRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:47\n                            \n                        \n\n                \n                    \n                            Creates an instance of the registration dialog\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page state\n\n                                                        \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration dialog\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detection\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-registration-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-content'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkNameValid\n                        \n                    \n                \n            \n            \n                \ncheckNameValid(event: Pick)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Checks to see if a first and last name has been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name input event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Closes the dialog and sets the correct sex and organ in the model state\nSets block to default position and rotation if user didn't select a registration\nUpdates page state to signal registration has started\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRegistrationSelect\n                        \n                    \n                \n            \n            \n                \nhandleRegistrationSelect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Sets registrationSelected to true when a registration is uploaded\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organSelect\n                        \n                    \n                \n            \n            \n                \norganSelect(organ: OrganInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Updates current organ selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            OrganInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Organ selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonClick\n                        \n                    \n                \n            \n            \n                \nregisterButtonClick(event?: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Handles button click\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                Returns nothing is no organ is selected\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSexFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSexFromLabel(label: \"Female\" | \"Male\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Updates current sex selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        \"Female\" | \"Male\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Sex selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentOrgan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:38\n                        \n                    \n\n            \n                \n                    Current organ selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:35\n                        \n                    \n\n            \n                \n                    Current sex selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:60\n                        \n                    \n\n            \n                \n                    Registration dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:41\n                        \n                    \n\n            \n                \n                    Checks if the user has entered a first and last name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orcidValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:44\n                        \n                    \n\n            \n                \n                    Checks if the entered orcid is valid\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RUI_ORGANS\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:26\n                        \n                    \n\n            \n                \n                    List of selectable organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:32\n                        \n                    \n\n            \n                \n                    Whether an organ has been selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:47\n                        \n                    \n\n            \n                \n                    Checks if a preexisting registration was uploaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sexByLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.sex$.pipe(map((sex) => (sex === 'female' ? 'Female' : 'Male')))\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:23\n                        \n                    \n\n            \n                \n                    Current sex in the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sexSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-content/registration-content.component.ts:29\n                        \n                    \n\n            \n                \n                    Whether sex has been selected\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { OrganInfo } from 'ccf-shared';\nimport { map } from 'rxjs/operators';\n\nimport { ModelState, RUI_ORGANS } from '../../../core/store/model/model.state';\nimport { PageState, Person } from '../../../core/store/page/page.state';\n\n/**\n * Component containing content of the initial registration modal\n */\n@Component({\n  selector: 'ccf-registration-content',\n  templateUrl: './registration-content.component.html',\n  styleUrls: ['./registration-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegistrationContentComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-content';\n\n  /** Current sex in the model state */\n  readonly sexByLabel$ = this.model.sex$.pipe(map((sex) => (sex === 'female' ? 'Female' : 'Male')));\n\n  /** List of selectable organs */\n  organList = RUI_ORGANS;\n\n  /** Whether sex has been selected */\n  sexSelected!: boolean;\n\n  /** Whether an organ has been selected */\n  organSelected!: boolean;\n\n  /** Current sex selected */\n  currentSex!: string;\n\n  /** Current organ selected */\n  currentOrgan!: OrganInfo;\n\n  /** Checks if the user has entered a first and last name */\n  nameValid!: boolean;\n\n  /** Checks if the entered orcid is valid */\n  orcidValid!: boolean;\n\n  /** Checks if a preexisting registration was uploaded */\n  registrationSelected: boolean;\n\n  /**\n   * Creates an instance of the registration dialog\n   *\n   * @param page Page state\n   * @param model Model state\n   * @param dialogRef Registration dialog\n   * @param cdr Change detection\n   */\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    public dialogRef: MatDialogRef,\n    cdr: ChangeDetectorRef,\n  ) {\n    this.registrationSelected = false;\n    page.user$.subscribe((user) => {\n      this.checkNameValid(user);\n      this.orcidValid = page.isOrcidValid();\n      cdr.markForCheck();\n    });\n    model.organ$.subscribe((organ) => {\n      this.organSelected = organ.src !== '';\n      cdr.markForCheck();\n    });\n    this.sexByLabel$.subscribe((sex) => {\n      this.setSexFromLabel(sex);\n      cdr.markForCheck();\n    });\n    dialogRef.disableClose = true;\n    this.page.organOptions$.subscribe((options) => {\n      this.organList = options as OrganInfo[];\n      cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Updates current sex selected\n   *\n   * @param label Sex selected\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.currentSex = label;\n    this.sexSelected = true;\n  }\n\n  /**\n   * Checks to see if a first and last name has been entered\n   *\n   * @param event Name input event\n   */\n  checkNameValid(event: Pick): void {\n    this.nameValid = event.firstName.length > 0 && event.lastName.length > 0;\n  }\n\n  /**\n   * Updates current organ selected\n   *\n   * @param organ Organ selected\n   */\n  organSelect(organ: OrganInfo): void {\n    this.currentOrgan = organ;\n    this.organSelected = true;\n  }\n\n  /**\n   * Handles button click\n   *\n   * @param [event] The click event\n   * @returns  Returns nothing is no organ is selected\n   */\n  registerButtonClick(event?: MouseEvent): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.organSelected || !this.nameValid) {\n      return;\n    }\n    this.closeDialog();\n  }\n\n  /**\n   * Sets registrationSelected to true when a registration is uploaded\n   */\n  handleRegistrationSelect() {\n    this.registrationSelected = true;\n  }\n\n  /**\n   * Closes the dialog and sets the correct sex and organ in the model state\n   * Sets block to default position and rotation if user didn't select a registration\n   * Updates page state to signal registration has started\n   */\n  closeDialog(): void {\n    this.model.setSex(this.currentSex === 'Female' ? 'female' : 'male');\n    this.model.setOrgan(this.currentOrgan);\n    if (!this.registrationSelected) {\n      this.model.setOrganDefaults();\n    }\n    this.dialogRef.close(true);\n    this.page.registrationStarted();\n  }\n}\n\n    \n\n    \n        \n  Start Registration\n  \n  \n    Continue\n  \n\n\n    \n\n    \n                \n                    ./registration-content.component.scss\n                \n                .modal {\n  padding: 2rem;\n  border-radius: 0.5rem;\n  max-width: 47rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n\n  .title {\n    font-size: 1.25rem;\n    font-weight: 600;\n  }\n\n  .organ-sliders {\n    .slider-label {\n      font-weight: 600;\n    }\n\n    display: flex;\n    height: 3rem;\n    align-items: center;\n  }\n\n  .selector-label {\n    font-weight: 600;\n    height: 3rem;\n    line-height: 3rem;\n  }\n\n  .selector-container {\n    margin: 0 auto;\n  }\n\n  .registration-button {\n    transition: 0.6s;\n    display: flex;\n    width: 10rem;\n    height: 2rem;\n    padding: 0.25rem 1rem;\n    justify-content: center;\n    align-items: center;\n    border-radius: 0.125rem;\n    box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.16);\n    cursor: pointer;\n\n    &.disabled {\n      pointer-events: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Start Registration        Continue  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationContentModule.html":{"url":"modules/RegistrationContentModule.html","title":"module - RegistrationContentModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegistrationContentModule\n\n\n\ncluster_RegistrationContentModule_exports\n\n\n\ncluster_RegistrationContentModule_imports\n\n\n\ncluster_RegistrationContentModule_declarations\n\n\n\n\nRegistrationContentComponent\n\nRegistrationContentComponent\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationContentModule -->\n\nRegistrationContentComponent->RegistrationContentModule\n\n\n\n\n\nRegistrationContentComponent \n\nRegistrationContentComponent \n\nRegistrationContentComponent  -->\n\nRegistrationContentModule->RegistrationContentComponent \n\n\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRegistrationContentModule -->\n\nRegistrationMetadataModule->RegistrationContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/registration-modal/registration-content/registration-content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegistrationMetadataModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { RegistrationMetadataModule } from '../../../shared/components/registration-metadata/registration-metadata.module';\nimport { RegistrationContentComponent } from './registration-content.component';\n\n@NgModule({\n  declarations: [RegistrationContentComponent],\n  imports: [CommonModule, MatTooltipModule, RegistrationMetadataModule, MatButtonModule],\n  exports: [RegistrationContentComponent],\n})\nexport class RegistrationContentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationMetadataComponent.html":{"url":"components/RegistrationMetadataComponent.html","title":"component - RegistrationMetadataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationMetadataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/registration-metadata/registration-metadata.component.ts\n\n\n\n    \n        Description\n    \n    \n        Right side registration menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-metadata\n            \n\n\n\n            \n                styleUrls\n                ./registration-metadata.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-metadata.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nameValid\n                            \n                            \n                                    Optional\n                                orcId\n                            \n                            \n                                orcidControl\n                            \n                            \n                                uploadText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNameValid\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                handleRegistrationUpload\n                            \n                            \n                                setSexFromLabel\n                            \n                            \n                                updateOrcid\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                registrationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, registration: RegistrationState, page: PageState)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/registration-metadata/registration-metadata.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of registration metadata component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration state\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        registrationSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/registration-metadata/registration-metadata.component.ts:20\n                            \n                        \n                \n                    \n                        Emits when user has uploaded registration\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkNameValid\n                        \n                    \n                \n            \n            \n                \ncheckNameValid(event: Pick)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/registration-metadata/registration-metadata.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Checks to see if a first and last name has been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name input event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/registration-metadata/registration-metadata.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Error message to inform user if orcid is invalid\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Error message\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRegistrationUpload\n                        \n                    \n                \n            \n            \n                \nhandleRegistrationUpload(reg: SpatialEntityJsonLd)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/registration-metadata/registration-metadata.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Emits registrationSelected and calls editRegistration in state\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reg\n                                            \n                                                        SpatialEntityJsonLd\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSexFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSexFromLabel(label: \"Female\" | \"Male\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/registration-metadata/registration-metadata.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Updates current sex selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        \"Female\" | \"Male\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Sex selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrcid\n                        \n                    \n                \n            \n            \n                \nupdateOrcid(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/registration-metadata/registration-metadata.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Updates orcid value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Orcid value entered\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nameValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/registration-metadata/registration-metadata.component.ts:23\n                        \n                    \n\n            \n                \n                    Checks if first and last name has been entered\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        orcId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/registration-metadata/registration-metadata.component.ts:26\n                        \n                    \n\n            \n                \n                    Orcid URI converted to regular id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orcidControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.pattern('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$')])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/registration-metadata/registration-metadata.component.ts:32\n                        \n                    \n\n            \n                \n                    Form control for validating orcid id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/registration-metadata/registration-metadata.component.ts:29\n                        \n                    \n\n            \n                \n                    Text to inform user if a registration file has been uploaded\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { ModelState } from '../../../core/store/model/model.state';\nimport { PageState, Person } from '../../../core/store/page/page.state';\nimport { RegistrationState } from '../../../core/store/registration/registration.state';\n\n/**\n * Right side registration menu\n */\n@Component({\n  selector: 'ccf-registration-metadata',\n  templateUrl: './registration-metadata.component.html',\n  styleUrls: ['./registration-metadata.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegistrationMetadataComponent {\n  /** Emits when user has uploaded registration */\n  @Output() readonly registrationSelected = new EventEmitter();\n\n  /** Checks if first and last name has been entered */\n  nameValid!: boolean;\n\n  /** Orcid URI converted to regular id */\n  orcId?: string;\n\n  /** Text to inform user if a registration file has been uploaded */\n  uploadText!: string;\n\n  /** Form control for validating orcid id */\n  orcidControl = new FormControl('', [Validators.pattern('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$')]);\n\n  /**\n   * Creates an instance of registration metadata component.\n   * @param model Model state\n   * @param registration Registration state\n   * @param page Page state\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n    readonly page: PageState,\n  ) {\n    page.user$.subscribe((user) => {\n      this.checkNameValid(user);\n      this.orcId = page.uriToOrcid(user.orcidId);\n    });\n    registration.state$.subscribe((reg) => {\n      this.uploadText = reg.initialRegistration ? 'File(s) uploaded' : 'No file(s) uploaded';\n    });\n  }\n\n  /**\n   * Error message to inform user if orcid is invalid\n   * @returns Error message\n   */\n  getErrorMessage(): string {\n    return this.orcidControl.hasError('pattern') ? 'Not a valid ORCID' : '';\n  }\n\n  /**\n   * Updates orcid value\n   * @param value Orcid value entered\n   */\n  updateOrcid(value: string): void {\n    this.page.setOrcidId(value);\n  }\n\n  /**\n   * Emits registrationSelected and calls editRegistration in state\n   * @param event Registration uploaded\n   */\n  handleRegistrationUpload(reg: SpatialEntityJsonLd): void {\n    this.registrationSelected.emit();\n    this.registration.editRegistration(reg);\n  }\n\n  /**\n   * Checks to see if a first and last name has been entered\n   * @param event Name input event\n   */\n  checkNameValid(event: Pick): void {\n    this.nameValid = event.firstName.length > 0 && event.lastName.length > 0;\n  }\n\n  /**\n   * Updates current sex selected\n   * @param label Sex selected\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.model.setSex(label.toLowerCase() as 'male' | 'female');\n  }\n}\n\n    \n\n    \n        \n  Author Data\n\n  \n  \n\n  \n    ORCID identifier (optional)\n    \n    {{ getErrorMessage() }}\n  \n\n\n\n  Donor Data\n\n  \n    Donor Sex:\n    \n      Male\n      Female\n    \n  \n\n  \n    Select an organ:\n    \n      Organs\n      \n        \n          {{ organ.name }}\n        \n      \n    \n  \n\n  \n    Upload previous registration data (optional):\n\n    \n\n    {{ uploadText }}\n  \n\n\n    \n\n    \n                \n                    ./registration-metadata.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n\n  .section-title {\n    font-weight: 400;\n    line-height: 1.5rem;\n    margin: 0;\n    padding-bottom: 1.5rem;\n  }\n\n  .label {\n    font-size: 1rem;\n    font-weight: 700;\n    line-height: 1.5rem;\n  }\n\n  ::ng-deep .mat-mdc-form-field-infix {\n    padding-bottom: 0 !important;\n    min-height: inherit;\n  }\n\n  ::ng-deep .mdc-text-field {\n    padding: 0;\n    padding-bottom: 0.3rem !important;\n  }\n\n  .author-section {\n    display: flex;\n    flex-direction: column;\n\n    .orcid-input {\n      width: 100%;\n      font-size: 1rem;\n    }\n  }\n\n  .donor-section {\n    display: flex;\n    flex-direction: column;\n\n    .sex-toggle {\n      display: flex;\n      align-items: center;\n      padding-bottom: 1.5rem;\n\n      .label {\n        padding-right: 1rem;\n      }\n\n      mat-radio-group {\n        display: flex;\n        gap: 3rem;\n      }\n    }\n\n    .organ-selector {\n      padding-bottom: 1.5rem;\n\n      ::ng-deep .mat-mdc-select-value {\n        font-size: 1rem;\n      }\n    }\n\n    .upload-registration {\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n\n      ccf-json-file-reader {\n        ::ng-deep button {\n          width: 10rem;\n          height: 2rem;\n          padding: 0.25rem 1rem;\n          border-radius: 0.125rem;\n        }\n      }\n    }\n  }\n\n  ::ng-deep .mdc-line-ripple::before,\n  .mdc-line-ripple::after {\n    border-bottom-width: 0.125rem !important;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Author Data          ORCID identifier (optional)        {{ getErrorMessage() }}    Donor Data      Donor Sex:          Male      Female            Select an organ:          Organs                        {{ organ.name }}                          Upload previous registration data (optional):        {{ uploadText }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationMetadataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationMetadataModule.html":{"url":"modules/RegistrationMetadataModule.html","title":"module - RegistrationMetadataModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationMetadataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegistrationMetadataModule\n\n\n\ncluster_RegistrationMetadataModule_exports\n\n\n\ncluster_RegistrationMetadataModule_declarations\n\n\n\ncluster_RegistrationMetadataModule_imports\n\n\n\n\nRegistrationMetadataComponent\n\nRegistrationMetadataComponent\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule -->\n\nRegistrationMetadataComponent->RegistrationMetadataModule\n\n\n\n\n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent  -->\n\nRegistrationMetadataModule->RegistrationMetadataComponent \n\n\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nRegistrationMetadataModule -->\n\nJsonFileReaderModule->RegistrationMetadataModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nRegistrationMetadataModule -->\n\nNameInputModule->RegistrationMetadataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/registration-metadata/registration-metadata.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationMetadataComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JsonFileReaderModule\n                        \n                        \n                            NameInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationMetadataComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { JsonFileReaderModule } from '../json-file-reader/json-file-reader.module';\nimport { NameInputModule } from '../name-input/name-input.module';\nimport { RegistrationMetadataComponent } from './registration-metadata.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    NameInputModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    JsonFileReaderModule,\n  ],\n  declarations: [RegistrationMetadataComponent],\n  exports: [RegistrationMetadataComponent],\n})\nexport class RegistrationMetadataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationModalComponent.html":{"url":"components/RegistrationModalComponent.html","title":"component - RegistrationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/registration-modal/registration-modal/registration-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Registration modal that appears on startup\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-modal\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./registration-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dialogOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, page: PageState, model: ModelState, referenceData: ReferenceDataState, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of registration modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog for the modal\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        referenceData\n                                                  \n                                                        \n                                                                        ReferenceDataState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-registration-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-modal'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:22\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Opens dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:22\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:33\n                        \n                    \n\n            \n                \n                    Dialog for the modal\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:25\n                        \n                    \n\n            \n                \n                    Checks if registration dialog has been opened\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostBinding, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { GlobalConfig } from '../../../core/services/config/config';\nimport { ModelState } from '../../../core/store/model/model.state';\nimport { PageState } from '../../../core/store/page/page.state';\nimport { ReferenceDataState } from '../../../core/store/reference-data/reference-data.state';\nimport { RegistrationContentComponent } from '../registration-content/registration-content.component';\n\n/**\n * Registration modal that appears on startup\n */\n@Component({\n  selector: 'ccf-registration-modal',\n  templateUrl: './registration-modal.component.html',\n})\nexport class RegistrationModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-modal';\n\n  /** Checks if registration dialog has been opened */\n  dialogOpen = false;\n\n  /**\n   * Creates an instance of registration modal component.\n   *\n   * @param dialog Dialog for the modal\n   */\n  constructor(\n    public dialog: MatDialog,\n    private readonly page: PageState,\n    private readonly model: ModelState,\n    private readonly referenceData: ReferenceDataState,\n    private readonly globalConfig: GlobalConfigState,\n  ) {}\n\n  /**\n   * Opens the dialog on startup (but not if cancel registration callback is set)\n   */\n  ngOnInit(): void {\n    combineLatest([this.page.state$, this.model.state$, this.referenceData.state$, this.globalConfig.state$])\n      .pipe(\n        tap(([page, model, data, global]) => {\n          if (this.dialogOpen) {\n            return;\n          }\n          if (global.editRegistration) {\n            return;\n          }\n          if (Object.keys(data.organIRILookup).length === 0) {\n            return;\n          }\n          if (page.user.firstName !== '' && page.user.lastName !== '' && model.organ.src !== '') {\n            return;\n          }\n          this.dialogOpen = true;\n          this.openDialog();\n        }),\n      )\n      .subscribe();\n  }\n\n  /**\n   * Opens dialog\n   */\n  openDialog(): void {\n    this.dialog.open(RegistrationContentComponent, {\n      autoFocus: false,\n    });\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationModalModule.html":{"url":"modules/RegistrationModalModule.html","title":"module - RegistrationModalModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegistrationModalModule\n\n\n\ncluster_RegistrationModalModule_declarations\n\n\n\ncluster_RegistrationModalModule_exports\n\n\n\ncluster_RegistrationModalModule_imports\n\n\n\n\nRegistrationModalComponent\n\nRegistrationModalComponent\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nRegistrationModalModule -->\n\nRegistrationModalComponent->RegistrationModalModule\n\n\n\n\n\nRegistrationModalComponent \n\nRegistrationModalComponent \n\nRegistrationModalComponent  -->\n\nRegistrationModalModule->RegistrationModalComponent \n\n\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationModalModule -->\n\nRegistrationContentModule->RegistrationModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/registration-modal/registration-modal/registration-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationModalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegistrationContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RegistrationContentModule } from '../registration-content/registration-content.module';\nimport { RegistrationModalComponent } from './registration-modal.component';\n\n@NgModule({\n  declarations: [RegistrationModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, RegistrationContentModule],\n  exports: [RegistrationModalComponent],\n})\nexport class RegistrationModalModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegistrationState.html":{"url":"injectables/RegistrationState.html","title":"injectable - RegistrationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegistrationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/registration/registration.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data for model registrations\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                displayErrors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addRegistration\n                            \n                            \n                                    Async\n                                editRegistration\n                            \n                            \n                                isDataValid\n                            \n                            \n                                    \n                                ngxsOnInit\n                            \n                            \n                                register\n                            \n                            \n                                    \n                                setDisplayErrors\n                            \n                            \n                                    \n                                setOrganSelection\n                            \n                            \n                                setToInitialRegistration\n                            \n                            \n                                    \n                                setUseRegistrationCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    metadata$\n                                \n                                \n                                    jsonld$\n                                \n                                \n                                    throttledJsonld$\n                                \n                                \n                                    valid$\n                                \n                                \n                                    previousRegistrations$\n                                \n                                \n                                    isValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/registration/registration.state.ts:123\n                            \n                        \n\n                \n                    \n                            Creates an instance of registration state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addRegistration\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRegistration(registration: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/registration/registration.state.ts:243\n                        \n                    \n\n\n            \n                \n                        Adds an entry to the previous registrations\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                registration\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new entry\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editRegistration\n                        \n                    \n                \n            \n            \n                \n                        \n                    editRegistration(reg: SpatialEntityJsonLd)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/registration/registration.state.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reg\n                                            \n                                                        SpatialEntityJsonLd\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDataValid\n                        \n                    \n                \n            \n            \n                \nisDataValid(page: Immutable, model: Immutable)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/registration/registration.state.ts:261\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            Immutable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            Immutable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/registration/registration.state.ts:141\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(useCallback?: boolean | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/registration/registration.state.ts:284\n                        \n                    \n\n\n            \n                \n                        Registers or downloads json data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                useCallback\n                                            \n                                                        boolean | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Explicit override selecting the register/download action\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setDisplayErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    setDisplayErrors(displayErrors: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/registration/registration.state.ts:233\n                        \n                    \n\n\n            \n                \n                        Set's whether or not we should display the user's registration errors\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                displayErrors\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the value to set it to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setOrganSelection\n                        \n                    \n                \n            \n            \n                \n                        \n                    setOrganSelection(ids: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/registration/registration.state.ts:257\n                        \n                    \n\n\n            \n                \n                        Sets organ options in the RUI\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    list of organ ids\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToInitialRegistration\n                        \n                    \n                \n            \n            \n                \nsetToInitialRegistration()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/registration/registration.state.ts:320\n                        \n                    \n\n\n            \n                \n                        Sets the state back to the initial registration\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setUseRegistrationCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUseRegistrationCallback(use: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in src/app/core/store/registration/registration.state.ts:223\n                        \n                    \n\n\n            \n                \n                        Sets whether to use the registration callback function or download.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                use\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    True to use the callback, false to download\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        displayErrors$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map((x) => x?.displayErrors))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/registration/registration.state.ts:54\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        metadata$\n                    \n                \n\n                \n                    \n                        getmetadata$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/registration/registration.state.ts:58\n                                \n                            \n                    \n                        \n                                Observable of registration metadata\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jsonld$\n                    \n                \n\n                \n                    \n                        getjsonld$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/registration/registration.state.ts:66\n                                \n                            \n                    \n                        \n                                Observable of registration data in jsonld format\n\n\n                                \n                                    Returns :     Observable>\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        throttledJsonld$\n                    \n                \n\n                \n                    \n                        getthrottledJsonld$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/registration/registration.state.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        valid$\n                    \n                \n\n                \n                    \n                        getvalid$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/registration/registration.state.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        previousRegistrations$\n                    \n                \n\n                \n                    \n                        getpreviousRegistrations$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/registration/registration.state.ts:90\n                                \n                            \n                    \n                        \n                                Observable of previous registrations\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/registration/registration.state.ts:275\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { insertItem, patch } from '@ngxs/store/operators';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { saveAs } from 'file-saver';\nimport { Observable, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take, tap, throttleTime } from 'rxjs/operators';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { isEqual } from 'lodash';\nimport { Tag } from '../../models/anatomical-structure-tag';\nimport { MetaData } from '../../models/meta-data';\nimport { GlobalConfig } from '../../services/config/config';\nimport { AnatomicalStructureTagState } from '../anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState, ModelStateModel, RUI_ORGANS, XYZTriplet } from '../model/model.state';\nimport { PageState, PageStateModel } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n/**\n * Registration state model\n */\nexport interface RegistrationStateModel {\n  /** Whether to use the registration callback function */\n  useRegistrationCallback: boolean;\n  /** Whether or not to display user registration errors */\n  displayErrors: boolean;\n  /** Previous registrations */\n  registrations: Record[];\n  /** Registration provided by user */\n  initialRegistration?: SpatialEntityJsonLd;\n}\n\nconst JSONLD_THROTTLE_DURATION = 100;\n\n/**\n * Data for model registrations\n */\n@StateRepository()\n@State({\n  name: 'registration',\n  defaults: {\n    useRegistrationCallback: false,\n    displayErrors: false,\n    registrations: [],\n  },\n})\n@Injectable()\nexport class RegistrationState extends NgxsImmutableDataRepository {\n  readonly displayErrors$ = this.state$.pipe(map((x) => x?.displayErrors));\n\n  /** Observable of registration metadata */\n  @Computed()\n  get metadata$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildMetadata(page, model, tags)),\n    );\n  }\n\n  /** Observable of registration data in jsonld format */\n  @Computed()\n  get jsonld$(): Observable> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags)),\n    );\n  }\n\n  @Computed()\n  get throttledJsonld$(): Observable> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      throttleTime(JSONLD_THROTTLE_DURATION, undefined, { leading: true, trailing: true }),\n      distinctUntilChanged(isEqual),\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags)),\n    );\n  }\n\n  @Computed()\n  get valid$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$]).pipe(map(() => this.isValid));\n  }\n\n  /**\n   * Observable of previous registrations\n   */\n  @Computed()\n  get previousRegistrations$(): Observable[]> {\n    const { globalConfig, state$ } = this;\n    const regs = state$.pipe(map((x) => x?.registrations));\n    const fetched = globalConfig.getOption('fetchPreviousRegistrations').pipe(\n      switchMap((fetch) => fetch?.() ?? [[]]),\n      startWith([]),\n    );\n\n    return combineLatest([regs, fetched]).pipe(map(([local, external]) => [...local, ...external]));\n  }\n\n  /** Current uuid identifier used when registering */\n  @Computed()\n  private get currentIdentifier(): string {\n    return uuidV4();\n  }\n\n  /** Time of last modification to registration data */\n  @Computed()\n  private get currentDate(): string {\n    return new Date().toISOString().split('T')[0];\n  }\n\n  /** Reference to the page state */\n  private page!: PageState;\n\n  /** Reference to the model state */\n  private model!: ModelState;\n\n  /** Reference to the AS Tag state */\n  private tags!: AnatomicalStructureTagState;\n\n  /** Reference to the reference data state */\n  private refData!: ReferenceDataState;\n\n  /**\n   * Creates an instance of registration state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.page = this.injector.get(PageState);\n    this.model = this.injector.get(ModelState);\n    this.tags = this.injector.get(AnatomicalStructureTagState);\n    this.refData = this.injector.get(ReferenceDataState);\n\n    this.refData.state$.subscribe(() => {\n      this.globalConfig.config$\n        .pipe(\n          take(1),\n          tap(({ useDownload, register, organOptions }) => {\n            this.ctx.patchState({\n              useRegistrationCallback: !!(!useDownload && register),\n            });\n            this.page.setOrcidId();\n            this.model.setOrganDefaults();\n            this.setOrganSelection(organOptions as string[]);\n          }),\n        )\n        .subscribe();\n\n      this.globalConfig\n        .getOption('editRegistration')\n        .pipe(\n          filterNulls(),\n          tap((reg) => {\n            this.editRegistration(reg as SpatialEntityJsonLd);\n          }),\n        )\n        .subscribe();\n    });\n  }\n\n  async editRegistration(reg: SpatialEntityJsonLd): Promise {\n    this.ctx.patchState({ initialRegistration: reg });\n    const place = this.refData.normalizePlacement(Array.isArray(reg.placement) ? reg.placement[0] : reg.placement);\n    const data = this.refData.getOrganData(place.target);\n\n    this.page.setUserName({\n      firstName: reg.creator_first_name,\n      middleName: reg.creator_middle_name,\n      lastName: reg.creator_last_name,\n    });\n\n    const orcid = this.page.uriToOrcid(reg.creator_orcid);\n    this.page.setOrcidId(orcid);\n\n    if (data) {\n      this.model.setOrgan(data.organ);\n      if (data.sex) {\n        this.model.setSex(data.sex);\n      }\n      if (data.side) {\n        this.model.setSide(data.side);\n      }\n    }\n\n    this.model.setBlockSize({ x: reg.x_dimension, y: reg.y_dimension, z: reg.z_dimension });\n    this.model.setRotation({ x: place.x_rotation, y: place.y_rotation, z: place.z_rotation });\n    this.model.setSlicesConfig({ thickness: reg.slice_thickness || NaN, numSlices: reg.slice_count || NaN });\n\n    this.model.setPosition({ x: place.x_translation, y: place.y_translation, z: place.z_translation });\n    const iris = new Set(reg.ccf_annotations);\n    this.tags.addTags(\n      this.model.snapshot.anatomicalStructures\n        .filter((item) => iris.has(item.id as string))\n        .map((item) => ({ id: item.id, label: item.name, type: 'added' })),\n    );\n\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets whether to use the registration callback function or download.\n   *\n   * @param use True to use the callback, false to download\n   */\n  @DataAction()\n  setUseRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useRegistrationCallback: use });\n  }\n\n  /**\n   * Set's whether or not we should display the user's registration errors\n   *\n   * @param displayErrors the value to set it to\n   */\n  @DataAction()\n  setDisplayErrors(displayErrors: boolean): void {\n    this.ctx.patchState({ displayErrors });\n  }\n\n  /**\n   * Adds an entry to the previous registrations\n   *\n   * @param registration The new entry\n   */\n  @DataAction()\n  addRegistration(registration: Record): void {\n    this.ctx.setState(\n      patch({\n        registrations: insertItem(registration as Immutable>),\n      }),\n    );\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets organ options in the RUI\n   * @param ids list of organ ids\n   */\n  @DataAction()\n  setOrganSelection(ids: string[] = []): void {\n    this.page.patchState({ organOptions: this.organListOptions(ids) });\n  }\n\n  isDataValid(page: Immutable, model: Immutable): boolean {\n    const requiredValues = [\n      page.user.firstName,\n      page.user.lastName,\n      page.orcidValid,\n      model.organ.src,\n      model.organ.name,\n      model.organ.organ,\n    ];\n\n    return requiredValues.every((value) => !!value);\n  }\n\n  @Computed()\n  get isValid(): boolean {\n    return this.isDataValid(this.page.snapshot, this.model.snapshot);\n  }\n\n  /**\n   * Registers or downloads json data.\n   *\n   * @param [useCallback] Explicit override selecting the register/download action\n   */\n  register(useCallback?: boolean | undefined): void {\n    this.page.registrationStarted();\n    if (!this.isValid) {\n      return;\n    }\n\n    const {\n      globalConfig: {\n        snapshot: { register: registrationCallback },\n      },\n      page,\n      model,\n      snapshot,\n    } = this;\n    const jsonObj = this.buildJsonLd(page.snapshot, model.snapshot, this.tags.latestTags);\n    const json = JSON.stringify(jsonObj, undefined, 2);\n\n    if (useCallback ?? (useCallback === undefined && snapshot.useRegistrationCallback)) {\n      registrationCallback?.(json);\n    } else {\n      const data = new Blob([json], {\n        type: 'application/json',\n        endings: 'native',\n      });\n\n      saveAs(data, 'registration-data.json');\n    }\n\n    this.setDisplayErrors(false);\n    this.page.clearHasChanges();\n    this.addRegistration(jsonObj);\n  }\n\n  /**\n   * Sets the state back to the initial registration\n   */\n  setToInitialRegistration() {\n    const { page } = this;\n\n    const initialWithChanges: SpatialEntityJsonLd | undefined = {\n      ...(this.snapshot.initialRegistration as SpatialEntityJsonLd),\n      creator_first_name: page.snapshot.user.firstName,\n      creator_last_name: page.snapshot.user.lastName,\n      creator_middle_name: page.snapshot.user.middleName,\n      creator_orcid: page.snapshot.user.orcidId,\n    };\n\n    this.editRegistration(initialWithChanges);\n  }\n\n  /**\n   * Builds a metadata array from the specified data.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns metadata An array of label-value objects\n   */\n  private buildMetadata(page: Immutable, model: Immutable, tags: Tag[]): MetaData {\n    const data: MetaData = [];\n\n    if (!page.registrationCallbackSet) {\n      data.push({ label: 'First Name', value: page.user.firstName }, { label: 'Last Name', value: page.user.lastName });\n    }\n\n    data.push(\n      { label: 'Reference Organ Name', value: model.organ.name },\n      { label: 'Tissue Block Dimensions (mm)', value: this.xyzTripletToString(model.blockSize) },\n      { label: 'Tissue Block Position (mm)', value: this.xyzTripletToString(model.position) },\n      { label: 'Tissue Block Rotation', value: this.xyzTripletToString(model.rotation) },\n      { label: 'Anatomical Structure Tags', value: tags.map((t) => t.label).join(', ') },\n      { label: 'Time Stamp', value: this.currentDate },\n      { label: 'Alignment ID', value: this.currentIdentifier },\n    );\n\n    return data;\n  }\n\n  /**\n   * Converts the registration data into jsonld format.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns A jsonld object\n   */\n  private buildJsonLd(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[],\n  ): Record {\n    return {\n      '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n      '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}`,\n      '@type': 'SpatialEntity',\n      label: model.label || undefined,\n      creator: `${page.user.firstName} ${page.user.middleName ? page.user.middleName + ' ' : ''}${page.user.lastName}`,\n      creator_first_name: page.user.firstName,\n      creator_last_name: page.user.lastName,\n      creator_middle_name: page.user.middleName,\n      creator_orcid: page.user.orcidId,\n      creation_date: this.currentDate,\n      ccf_annotations: tags.map((tag) => tag.id),\n      slice_thickness: model.slicesConfig?.thickness || undefined,\n      slice_count: model.slicesConfig?.numSlices || undefined,\n\n      x_dimension: +model.blockSize.x.toFixed(3),\n      y_dimension: +model.blockSize.y.toFixed(3),\n      z_dimension: +model.blockSize.z.toFixed(3),\n      dimension_units: 'millimeter',\n\n      placement: {\n        '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n        '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}_placement`,\n        '@type': 'SpatialPlacement',\n        target: model.organIri as string,\n        placement_date: this.currentDate,\n\n        x_scaling: 1,\n        y_scaling: 1,\n        z_scaling: 1,\n        scaling_units: 'ratio',\n\n        x_rotation: +model.rotation.x.toFixed(3),\n        y_rotation: +model.rotation.y.toFixed(3),\n        z_rotation: +model.rotation.z.toFixed(3),\n        rotation_order: 'XYZ',\n        rotation_units: 'degree',\n\n        x_translation: +model.position.x.toFixed(3),\n        y_translation: +model.position.y.toFixed(3),\n        z_translation: +model.position.z.toFixed(3),\n        translation_units: 'millimeter',\n      },\n    };\n  }\n\n  /**\n   * Format a XYZTriplet as a string.\n   *\n   * @param xyz The triplet values\n   * @returns The string representation\n   */\n  private xyzTripletToString(xyz: XYZTriplet): string {\n    return `${Math.round(xyz.x)}, ${Math.round(xyz.y)}, ${Math.round(xyz.z)}`;\n  }\n\n  /**\n   * Provides list of organ objects given an array of organ ids\n   * @param organOptions array of organ ids\n   * @returns list of organ info\n   */\n  private organListOptions(organOptions?: string[]): OrganInfo[] {\n    if (organOptions && organOptions.length > 0) {\n      return RUI_ORGANS.filter((organ) => {\n        if (!organ.id) {\n          return false;\n        } else {\n          return organOptions.includes(organ.id);\n        }\n      });\n    } else {\n      return RUI_ORGANS;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationStateModel.html":{"url":"interfaces/RegistrationStateModel.html","title":"interface - RegistrationStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrationStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/registration/registration.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Registration state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayErrors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            initialRegistration\n                                        \n                                \n                                \n                                        \n                                            registrations\n                                        \n                                \n                                \n                                        \n                                            useRegistrationCallback\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayErrors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not to display user registration errors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialRegistration:     SpatialEntityJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialEntityJsonLd\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Registration provided by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrations:     Record[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Previous registrations\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useRegistrationCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useRegistrationCallback:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to use the registration callback function\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { insertItem, patch } from '@ngxs/store/operators';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { saveAs } from 'file-saver';\nimport { Observable, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take, tap, throttleTime } from 'rxjs/operators';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { isEqual } from 'lodash';\nimport { Tag } from '../../models/anatomical-structure-tag';\nimport { MetaData } from '../../models/meta-data';\nimport { GlobalConfig } from '../../services/config/config';\nimport { AnatomicalStructureTagState } from '../anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState, ModelStateModel, RUI_ORGANS, XYZTriplet } from '../model/model.state';\nimport { PageState, PageStateModel } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n/**\n * Registration state model\n */\nexport interface RegistrationStateModel {\n  /** Whether to use the registration callback function */\n  useRegistrationCallback: boolean;\n  /** Whether or not to display user registration errors */\n  displayErrors: boolean;\n  /** Previous registrations */\n  registrations: Record[];\n  /** Registration provided by user */\n  initialRegistration?: SpatialEntityJsonLd;\n}\n\nconst JSONLD_THROTTLE_DURATION = 100;\n\n/**\n * Data for model registrations\n */\n@StateRepository()\n@State({\n  name: 'registration',\n  defaults: {\n    useRegistrationCallback: false,\n    displayErrors: false,\n    registrations: [],\n  },\n})\n@Injectable()\nexport class RegistrationState extends NgxsImmutableDataRepository {\n  readonly displayErrors$ = this.state$.pipe(map((x) => x?.displayErrors));\n\n  /** Observable of registration metadata */\n  @Computed()\n  get metadata$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildMetadata(page, model, tags)),\n    );\n  }\n\n  /** Observable of registration data in jsonld format */\n  @Computed()\n  get jsonld$(): Observable> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags)),\n    );\n  }\n\n  @Computed()\n  get throttledJsonld$(): Observable> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      throttleTime(JSONLD_THROTTLE_DURATION, undefined, { leading: true, trailing: true }),\n      distinctUntilChanged(isEqual),\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags)),\n    );\n  }\n\n  @Computed()\n  get valid$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$]).pipe(map(() => this.isValid));\n  }\n\n  /**\n   * Observable of previous registrations\n   */\n  @Computed()\n  get previousRegistrations$(): Observable[]> {\n    const { globalConfig, state$ } = this;\n    const regs = state$.pipe(map((x) => x?.registrations));\n    const fetched = globalConfig.getOption('fetchPreviousRegistrations').pipe(\n      switchMap((fetch) => fetch?.() ?? [[]]),\n      startWith([]),\n    );\n\n    return combineLatest([regs, fetched]).pipe(map(([local, external]) => [...local, ...external]));\n  }\n\n  /** Current uuid identifier used when registering */\n  @Computed()\n  private get currentIdentifier(): string {\n    return uuidV4();\n  }\n\n  /** Time of last modification to registration data */\n  @Computed()\n  private get currentDate(): string {\n    return new Date().toISOString().split('T')[0];\n  }\n\n  /** Reference to the page state */\n  private page!: PageState;\n\n  /** Reference to the model state */\n  private model!: ModelState;\n\n  /** Reference to the AS Tag state */\n  private tags!: AnatomicalStructureTagState;\n\n  /** Reference to the reference data state */\n  private refData!: ReferenceDataState;\n\n  /**\n   * Creates an instance of registration state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.page = this.injector.get(PageState);\n    this.model = this.injector.get(ModelState);\n    this.tags = this.injector.get(AnatomicalStructureTagState);\n    this.refData = this.injector.get(ReferenceDataState);\n\n    this.refData.state$.subscribe(() => {\n      this.globalConfig.config$\n        .pipe(\n          take(1),\n          tap(({ useDownload, register, organOptions }) => {\n            this.ctx.patchState({\n              useRegistrationCallback: !!(!useDownload && register),\n            });\n            this.page.setOrcidId();\n            this.model.setOrganDefaults();\n            this.setOrganSelection(organOptions as string[]);\n          }),\n        )\n        .subscribe();\n\n      this.globalConfig\n        .getOption('editRegistration')\n        .pipe(\n          filterNulls(),\n          tap((reg) => {\n            this.editRegistration(reg as SpatialEntityJsonLd);\n          }),\n        )\n        .subscribe();\n    });\n  }\n\n  async editRegistration(reg: SpatialEntityJsonLd): Promise {\n    this.ctx.patchState({ initialRegistration: reg });\n    const place = this.refData.normalizePlacement(Array.isArray(reg.placement) ? reg.placement[0] : reg.placement);\n    const data = this.refData.getOrganData(place.target);\n\n    this.page.setUserName({\n      firstName: reg.creator_first_name,\n      middleName: reg.creator_middle_name,\n      lastName: reg.creator_last_name,\n    });\n\n    const orcid = this.page.uriToOrcid(reg.creator_orcid);\n    this.page.setOrcidId(orcid);\n\n    if (data) {\n      this.model.setOrgan(data.organ);\n      if (data.sex) {\n        this.model.setSex(data.sex);\n      }\n      if (data.side) {\n        this.model.setSide(data.side);\n      }\n    }\n\n    this.model.setBlockSize({ x: reg.x_dimension, y: reg.y_dimension, z: reg.z_dimension });\n    this.model.setRotation({ x: place.x_rotation, y: place.y_rotation, z: place.z_rotation });\n    this.model.setSlicesConfig({ thickness: reg.slice_thickness || NaN, numSlices: reg.slice_count || NaN });\n\n    this.model.setPosition({ x: place.x_translation, y: place.y_translation, z: place.z_translation });\n    const iris = new Set(reg.ccf_annotations);\n    this.tags.addTags(\n      this.model.snapshot.anatomicalStructures\n        .filter((item) => iris.has(item.id as string))\n        .map((item) => ({ id: item.id, label: item.name, type: 'added' })),\n    );\n\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets whether to use the registration callback function or download.\n   *\n   * @param use True to use the callback, false to download\n   */\n  @DataAction()\n  setUseRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useRegistrationCallback: use });\n  }\n\n  /**\n   * Set's whether or not we should display the user's registration errors\n   *\n   * @param displayErrors the value to set it to\n   */\n  @DataAction()\n  setDisplayErrors(displayErrors: boolean): void {\n    this.ctx.patchState({ displayErrors });\n  }\n\n  /**\n   * Adds an entry to the previous registrations\n   *\n   * @param registration The new entry\n   */\n  @DataAction()\n  addRegistration(registration: Record): void {\n    this.ctx.setState(\n      patch({\n        registrations: insertItem(registration as Immutable>),\n      }),\n    );\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets organ options in the RUI\n   * @param ids list of organ ids\n   */\n  @DataAction()\n  setOrganSelection(ids: string[] = []): void {\n    this.page.patchState({ organOptions: this.organListOptions(ids) });\n  }\n\n  isDataValid(page: Immutable, model: Immutable): boolean {\n    const requiredValues = [\n      page.user.firstName,\n      page.user.lastName,\n      page.orcidValid,\n      model.organ.src,\n      model.organ.name,\n      model.organ.organ,\n    ];\n\n    return requiredValues.every((value) => !!value);\n  }\n\n  @Computed()\n  get isValid(): boolean {\n    return this.isDataValid(this.page.snapshot, this.model.snapshot);\n  }\n\n  /**\n   * Registers or downloads json data.\n   *\n   * @param [useCallback] Explicit override selecting the register/download action\n   */\n  register(useCallback?: boolean | undefined): void {\n    this.page.registrationStarted();\n    if (!this.isValid) {\n      return;\n    }\n\n    const {\n      globalConfig: {\n        snapshot: { register: registrationCallback },\n      },\n      page,\n      model,\n      snapshot,\n    } = this;\n    const jsonObj = this.buildJsonLd(page.snapshot, model.snapshot, this.tags.latestTags);\n    const json = JSON.stringify(jsonObj, undefined, 2);\n\n    if (useCallback ?? (useCallback === undefined && snapshot.useRegistrationCallback)) {\n      registrationCallback?.(json);\n    } else {\n      const data = new Blob([json], {\n        type: 'application/json',\n        endings: 'native',\n      });\n\n      saveAs(data, 'registration-data.json');\n    }\n\n    this.setDisplayErrors(false);\n    this.page.clearHasChanges();\n    this.addRegistration(jsonObj);\n  }\n\n  /**\n   * Sets the state back to the initial registration\n   */\n  setToInitialRegistration() {\n    const { page } = this;\n\n    const initialWithChanges: SpatialEntityJsonLd | undefined = {\n      ...(this.snapshot.initialRegistration as SpatialEntityJsonLd),\n      creator_first_name: page.snapshot.user.firstName,\n      creator_last_name: page.snapshot.user.lastName,\n      creator_middle_name: page.snapshot.user.middleName,\n      creator_orcid: page.snapshot.user.orcidId,\n    };\n\n    this.editRegistration(initialWithChanges);\n  }\n\n  /**\n   * Builds a metadata array from the specified data.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns metadata An array of label-value objects\n   */\n  private buildMetadata(page: Immutable, model: Immutable, tags: Tag[]): MetaData {\n    const data: MetaData = [];\n\n    if (!page.registrationCallbackSet) {\n      data.push({ label: 'First Name', value: page.user.firstName }, { label: 'Last Name', value: page.user.lastName });\n    }\n\n    data.push(\n      { label: 'Reference Organ Name', value: model.organ.name },\n      { label: 'Tissue Block Dimensions (mm)', value: this.xyzTripletToString(model.blockSize) },\n      { label: 'Tissue Block Position (mm)', value: this.xyzTripletToString(model.position) },\n      { label: 'Tissue Block Rotation', value: this.xyzTripletToString(model.rotation) },\n      { label: 'Anatomical Structure Tags', value: tags.map((t) => t.label).join(', ') },\n      { label: 'Time Stamp', value: this.currentDate },\n      { label: 'Alignment ID', value: this.currentIdentifier },\n    );\n\n    return data;\n  }\n\n  /**\n   * Converts the registration data into jsonld format.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns A jsonld object\n   */\n  private buildJsonLd(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[],\n  ): Record {\n    return {\n      '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n      '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}`,\n      '@type': 'SpatialEntity',\n      label: model.label || undefined,\n      creator: `${page.user.firstName} ${page.user.middleName ? page.user.middleName + ' ' : ''}${page.user.lastName}`,\n      creator_first_name: page.user.firstName,\n      creator_last_name: page.user.lastName,\n      creator_middle_name: page.user.middleName,\n      creator_orcid: page.user.orcidId,\n      creation_date: this.currentDate,\n      ccf_annotations: tags.map((tag) => tag.id),\n      slice_thickness: model.slicesConfig?.thickness || undefined,\n      slice_count: model.slicesConfig?.numSlices || undefined,\n\n      x_dimension: +model.blockSize.x.toFixed(3),\n      y_dimension: +model.blockSize.y.toFixed(3),\n      z_dimension: +model.blockSize.z.toFixed(3),\n      dimension_units: 'millimeter',\n\n      placement: {\n        '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n        '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}_placement`,\n        '@type': 'SpatialPlacement',\n        target: model.organIri as string,\n        placement_date: this.currentDate,\n\n        x_scaling: 1,\n        y_scaling: 1,\n        z_scaling: 1,\n        scaling_units: 'ratio',\n\n        x_rotation: +model.rotation.x.toFixed(3),\n        y_rotation: +model.rotation.y.toFixed(3),\n        z_rotation: +model.rotation.z.toFixed(3),\n        rotation_order: 'XYZ',\n        rotation_units: 'degree',\n\n        x_translation: +model.position.x.toFixed(3),\n        y_translation: +model.position.y.toFixed(3),\n        z_translation: +model.position.z.toFixed(3),\n        translation_units: 'millimeter',\n      },\n    };\n  }\n\n  /**\n   * Format a XYZTriplet as a string.\n   *\n   * @param xyz The triplet values\n   * @returns The string representation\n   */\n  private xyzTripletToString(xyz: XYZTriplet): string {\n    return `${Math.round(xyz.x)}, ${Math.round(xyz.y)}, ${Math.round(xyz.z)}`;\n  }\n\n  /**\n   * Provides list of organ objects given an array of organ ids\n   * @param organOptions array of organ ids\n   * @returns list of organ info\n   */\n  private organListOptions(organOptions?: string[]): OrganInfo[] {\n    if (organOptions && organOptions.length > 0) {\n      return RUI_ORGANS.filter((organ) => {\n        if (!organ.id) {\n          return false;\n        } else {\n          return organOptions.includes(organ.id);\n        }\n      });\n    } else {\n      return RUI_ORGANS;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewButtonComponent.html":{"url":"components/ReviewButtonComponent.html","title":"component - ReviewButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/review/review-button/review-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to launch the ReviewModal component.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-review-button\n            \n\n\n\n            \n                styleUrls\n                ./review-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                registrationIsValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchReviewModal\n                            \n                            \n                                registerButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayErrors\n                            \n                            \n                                metaData\n                            \n                            \n                                registrationCallbackSet\n                            \n                            \n                                userValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                enterErrorMode\n                            \n                            \n                                registerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ga: GoogleAnalyticsService, page: PageState)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/review/review-button/review-button.component.ts:58\n                            \n                        \n\n                \n                    \n                            Creates an instance of review button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayErrors\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/review/review-button/review-button.component.ts:36\n                            \n                        \n                \n                    \n                        Whether or not the app is currently displaying errors\nDecides how the button should be styled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metaData\n                    \n                \n                \n                    \n                        Type :         MetaData\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/review/review-button/review-button.component.ts:30\n                            \n                        \n                \n                    \n                        Input object of information to display in the modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registrationCallbackSet\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/review/review-button/review-button.component.ts:25\n                            \n                        \n                \n                    \n                        Input to set whether the component should be in register (true) or download (false) mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        userValid\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/review/review-button/review-button.component.ts:41\n                            \n                        \n                \n                    \n                        Whether or not all the necessary data has been inputted from the user.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        enterErrorMode\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/review/review-button/review-button.component.ts:53\n                            \n                        \n                \n                    \n                        Turns on the 'error mode' for the application.\nUsed to begin showing the user what they need to\ndo to be able to register / download.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registerData\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/review/review-button/review-button.component.ts:46\n                            \n                        \n                \n                    \n                        Output that emits when the modal's register button was clicked\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-review-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-button'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/review/review-button/review-button.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchReviewModal\n                        \n                    \n                \n            \n            \n                \nlaunchReviewModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/review/review-button/review-button.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Opens the info dialogue with the project details\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonClick\n                        \n                    \n                \n            \n            \n                \nregisterButtonClick(event?: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/review/review-button/review-button.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Handles the click action for the register button.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/review/review-button/review-button.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationIsValid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/review/review-button/review-button.component.ts:58\n                        \n                    \n\n            \n                \n                    Decides whether or not to let the user open the registration / download modal\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/review/review-button/review-button.component.ts:88\n                                \n                            \n                    \n                        \n                                Decides whether or not the download / register button should\nbe disabled.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnChanges, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { MetaData } from '../../../core/models/meta-data';\nimport { PageState } from '../../../core/store/page/page.state';\nimport { ReviewModalComponent } from '../review-modal/review-modal.component';\n\n/**\n * Component to launch the ReviewModal component.\n */\n@Component({\n  selector: 'ccf-review-button',\n  templateUrl: './review-button.component.html',\n  styleUrls: ['./review-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewButtonComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-button';\n\n  /**\n   * Input to set whether the component should be in register (true) or download (false) mode\n   */\n  @Input() registrationCallbackSet = true;\n\n  /**\n   * Input object of information to display in the modal\n   */\n  @Input() metaData: MetaData = [];\n\n  /**\n   * Whether or not the app is currently displaying errors\n   * Decides how the button should be styled\n   */\n  @Input() displayErrors = true;\n\n  /**\n   * Whether or not all the necessary data has been inputted from the user.\n   */\n  @Input() userValid = false;\n\n  /**\n   * Output that emits when the modal's register button was clicked\n   */\n  @Output() readonly registerData = new EventEmitter();\n\n  /**\n   * Turns on the 'error mode' for the application.\n   * Used to begin showing the user what they need to\n   * do to be able to register / download.\n   */\n  @Output() readonly enterErrorMode = new EventEmitter();\n\n  /**\n   * Decides whether or not to let the user open the registration / download modal\n   */\n  registrationIsValid = false;\n\n  /**\n   * Creates an instance of review button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param ga Analytics service\n   */\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly ga: GoogleAnalyticsService,\n    readonly page: PageState,\n  ) {}\n\n  /**\n   * Updates the value of registrationIsValid based on the\n   * meta data.\n   */\n  ngOnChanges(): void {\n    const organ = this.metaDataLookup('Reference Organ Name');\n    const dimensions = this.metaDataLookup('Tissue Block Dimensions (mm)');\n    const pos = this.metaDataLookup('Tissue Block Position (mm)');\n    const tags = this.metaDataLookup('Anatomical Structure Tags');\n    this.registrationIsValid = this.userValid && [organ, dimensions, pos, tags].every((value) => value !== '');\n  }\n\n  /**\n   * Decides whether or not the download / register button should\n   * be disabled.\n   */\n  get disabled(): boolean {\n    return !this.registrationIsValid;\n  }\n\n  /**\n   * Gets value from metadata field\n   * @param field Name of field\n   * @returns Metadata value\n   */\n  private metaDataLookup(field: string): string | undefined {\n    return this.metaData.find((data) => data.label === field)?.value;\n  }\n\n  /**\n   * Handles the click action for the register button.\n   */\n  registerButtonClick(event?: MouseEvent): false {\n    if (event) {\n      event.preventDefault();\n    }\n    this.enterErrorMode.emit();\n    if (this.registrationIsValid) {\n      this.ga.event('review_start', 'review_button');\n      this.launchReviewModal();\n    }\n    return false;\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchReviewModal(): void {\n    this.page.patchState({ registrationStarted: false });\n    const dialogRef = this.dialog.open(ReviewModalComponent, {\n      panelClass: 'modal-animated',\n      width: '60rem',\n      data: {\n        registrationCallbackSet: this.registrationCallbackSet,\n        metaData: this.metaData,\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((data) => {\n      this.page.registrationStarted();\n      if (data) {\n        this.ga.event('register', 'review_button');\n        this.registerData.emit();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ registrationCallbackSet ? 'Review and Register' : 'Review and Download' }}\n\n\n    \n\n    \n                \n                    ./review-button.component.scss\n                \n                .review-button {\n  width: 100%;\n  height: 2.25rem;\n  transition: 0.6s;\n  font-weight: 500;\n\n  &.disabled {\n    cursor: not-allowed;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ registrationCallbackSet ? \\'Review and Register\\' : \\'Review and Download\\' }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewButtonModule.html":{"url":"modules/ReviewButtonModule.html","title":"module - ReviewButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewButtonModule\n\n\n\ncluster_ReviewButtonModule_declarations\n\n\n\ncluster_ReviewButtonModule_imports\n\n\n\ncluster_ReviewButtonModule_exports\n\n\n\n\nReviewButtonComponent\n\nReviewButtonComponent\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nReviewButtonModule -->\n\nReviewButtonComponent->ReviewButtonModule\n\n\n\n\n\nReviewButtonComponent \n\nReviewButtonComponent \n\nReviewButtonComponent  -->\n\nReviewButtonModule->ReviewButtonComponent \n\n\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewButtonModule -->\n\nReviewModalModule->ReviewButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/review/review-button/review-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReviewButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ReviewModalModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ReviewModalModule } from '../review-modal/review-modal.module';\nimport { ReviewButtonComponent } from './review-button.component';\n\n@NgModule({\n  declarations: [ReviewButtonComponent],\n  imports: [CommonModule, ReviewModalModule, MatButtonModule, MatTooltipModule],\n  exports: [ReviewButtonComponent],\n})\nexport class ReviewButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewModalComponent.html":{"url":"components/ReviewModalComponent.html","title":"component - ReviewModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/review/review-modal/review-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Modal for reviewing the registration\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-review-modal\n            \n\n\n\n            \n                styleUrls\n                ./review-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                metaData\n                            \n                            \n                                registrationCallbackSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ReviewModalData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/review/review-modal/review-modal.component.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of the review modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ReviewModalData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-review-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-modal'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/review/review-modal/review-modal.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/review/review-modal/review-modal.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Closes info dialog component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/review/review-modal/review-modal.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewModalData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/review/review-modal/review-modal.component.ts:46\n                        \n                    \n\n            \n                \n                    Data being injected into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/review/review-modal/review-modal.component.ts:45\n                        \n                    \n\n            \n                \n                    A reference to the dialog that this component creates, used to call the dialog's methods\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetaData\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/review/review-modal/review-modal.component.ts:36\n                        \n                    \n\n            \n                \n                    The object containing all of the review information for displaying inside the modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationCallbackSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/review/review-modal/review-modal.component.ts:31\n                        \n                    \n\n            \n                \n                    Whether or not the cancel registration callback is set\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MetaData } from '../../../core/models/meta-data';\n\n/**\n * The expected format of the review modal's data input.\n */\ninterface ReviewModalData {\n  /** The object containing all of the review information for displaying inside the modal */\n  metaData: MetaData;\n\n  /** Whether or not the cancel registration callback is set */\n  registrationCallbackSet: boolean;\n}\n\n/**\n * Modal for reviewing the registration\n */\n@Component({\n  selector: 'ccf-review-modal',\n  templateUrl: './review-modal.component.html',\n  styleUrls: ['./review-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-modal';\n  /**\n   * Whether or not the cancel registration callback is set\n   */\n  registrationCallbackSet: boolean;\n\n  /**\n   * The object containing all of the review information for displaying inside the modal\n   */\n  metaData: MetaData;\n\n  /**\n   * Creates an instance of the review modal component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ReviewModalData,\n  ) {\n    this.metaData = data.metaData;\n    this.registrationCallbackSet = data.registrationCallbackSet;\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      Registration Review\n\n      \n        \n          \n            {{ data.label }}\n            {{ data.value }}\n          \n        \n      \n\n      \n        \n          {{ registrationCallbackSet ? 'REGISTER' : 'DOWNLOAD REGISTRATION DATA' }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./review-modal.component.scss\n                \n                :host {\n  .ccf-about.wrapper {\n    .container {\n      .close {\n        .close-icon {\n          float: right;\n          margin-top: 1rem;\n          margin-right: 1rem;\n          cursor: pointer;\n        }\n      }\n\n      .content {\n        padding: 2rem;\n        background-color: white;\n\n        .title {\n          text-align: center;\n          font-size: 1.5rem;\n          margin-bottom: 0;\n          font-weight: 500;\n        }\n\n        .mat-typography {\n          justify-content: space-around;\n          display: flex;\n          font-weight: 500;\n          font-size: 1rem;\n\n          .display-fields {\n            margin-top: 2rem;\n            margin-bottom: 2rem;\n            width: 100%;\n\n            .field {\n              display: flex;\n\n              .label {\n                width: 50%;\n                text-align: right;\n                padding-right: 1rem;\n              }\n\n              .data {\n                width: 50%;\n                text-align: left;\n                padding-left: 1rem;\n              }\n            }\n          }\n        }\n      }\n\n      .footer {\n        padding-top: 1.5rem;\n        display: flex;\n        justify-content: space-around;\n\n        .download-button {\n          padding: 0 1rem;\n          transition: 0.6s;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              Registration Review                                    {{ data.label }}            {{ data.value }}                                                {{ registrationCallbackSet ? \\'REGISTER\\' : \\'DOWNLOAD REGISTRATION DATA\\' }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReviewModalData.html":{"url":"interfaces/ReviewModalData.html","title":"interface - ReviewModalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReviewModalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/review/review-modal/review-modal.component.ts\n        \n\n\n            \n                Description\n            \n            \n                The expected format of the review modal's data input.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            metaData\n                                        \n                                \n                                \n                                        \n                                            registrationCallbackSet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metaData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metaData:         MetaData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MetaData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The object containing all of the review information for displaying inside the modal\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationCallbackSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationCallbackSet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the cancel registration callback is set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MetaData } from '../../../core/models/meta-data';\n\n/**\n * The expected format of the review modal's data input.\n */\ninterface ReviewModalData {\n  /** The object containing all of the review information for displaying inside the modal */\n  metaData: MetaData;\n\n  /** Whether or not the cancel registration callback is set */\n  registrationCallbackSet: boolean;\n}\n\n/**\n * Modal for reviewing the registration\n */\n@Component({\n  selector: 'ccf-review-modal',\n  templateUrl: './review-modal.component.html',\n  styleUrls: ['./review-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-modal';\n  /**\n   * Whether or not the cancel registration callback is set\n   */\n  registrationCallbackSet: boolean;\n\n  /**\n   * The object containing all of the review information for displaying inside the modal\n   */\n  metaData: MetaData;\n\n  /**\n   * Creates an instance of the review modal component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ReviewModalData,\n  ) {\n    this.metaData = data.metaData;\n    this.registrationCallbackSet = data.registrationCallbackSet;\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewModalModule.html":{"url":"modules/ReviewModalModule.html","title":"module - ReviewModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewModalModule\n\n\n\ncluster_ReviewModalModule_declarations\n\n\n\ncluster_ReviewModalModule_exports\n\n\n\n\nReviewModalComponent\n\nReviewModalComponent\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewModalModule -->\n\nReviewModalComponent->ReviewModalModule\n\n\n\n\n\nReviewModalComponent \n\nReviewModalComponent \n\nReviewModalComponent  -->\n\nReviewModalModule->ReviewModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/review/review-modal/review-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReviewModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReviewModalComponent } from './review-modal.component';\n\n@NgModule({\n  declarations: [ReviewModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatButtonModule],\n  exports: [ReviewModalComponent],\n})\nexport class ReviewModalModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RightSidebarComponent.html":{"url":"components/RightSidebarComponent.html","title":"component - RightSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RightSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/right-sidebar/right-sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The right sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-right-sidebar\n            \n\n\n\n            \n                styleUrls\n                ./right-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./right-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalClosed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                registrationExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, registration: RegistrationState, page: PageState, astags: AnatomicalStructureTagState)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/right-sidebar/right-sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                            Creates an instance of right sidebar component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state service\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration state service\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The page state\n\n                                                        \n                                                \n                                                \n                                                        astags\n                                                  \n                                                        \n                                                                        AnatomicalStructureTagState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The anatomical structure tags state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalClosed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/right-sidebar/right-sidebar.component.ts:22\n                            \n                        \n                \n                    \n                        Whether or not the initial registration modal has been closed\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        registrationExpanded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/right-sidebar/right-sidebar.component.ts:24\n                            \n                        \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-right-sidebar\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-right-sidebar'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/right-sidebar/right-sidebar.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-right-sidebar'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/right-sidebar/right-sidebar.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\nimport { AnatomicalStructureTagState } from '../../core/store/anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\n\n/**\n * The right sidebar\n */\n@Component({\n  selector: 'ccf-right-sidebar',\n  templateUrl: './right-sidebar.component.html',\n  styleUrls: ['./right-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RightSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-right-sidebar';\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  @Output() readonly registrationExpanded = new EventEmitter();\n\n  /**\n   * Creates an instance of right sidebar component.\n   *\n   * @param model Model state service\n   * @param registration Registration state service\n   * @param page The page state\n   * @param astags The anatomical structure tags state\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n    readonly page: PageState,\n    readonly astags: AnatomicalStructureTagState,\n  ) {}\n}\n\n    \n\n    \n        \n  \n\n\n  \n    \n      \n        Registration Metadata\n      \n\n      \n    \n\n    \n\n    \n      \n        Tissue Block Controls\n      \n\n      \n      \n\n      \n      \n\n      \n      \n    \n\n    \n    \n      \n        Anatomical Structure Tags\n      \n\n       \n\n      \n      \n       \n\n      \n        \n        Assigned\n        \n        Added\n      \n    \n    \n\n    \n\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./right-sidebar.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 2.5rem);\n  margin-top: 1rem;\n  margin-bottom: 1.5rem;\n\n  .info-button-container {\n    height: 3.75rem;\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  .scroll-wrapper {\n    overflow-y: scroll;\n    height: calc(100% - 6rem);\n\n    scrollbar-width: thin;\n    &::-webkit-scrollbar {\n      width: 0.75rem;\n    }\n\n    .container {\n      display: flex;\n      flex-direction: column;\n      min-height: 100%;\n      margin: 0 1.5rem;\n\n      .review-button {\n        position: absolute;\n        bottom: 1.5rem;\n        z-index: 999;\n        width: calc(100% - 3.5rem);\n      }\n\n      mat-divider {\n        border-top-width: 3px;\n      }\n\n      mat-expansion-panel {\n        box-shadow: none;\n\n        mat-expansion-panel-header {\n          padding: 0 0.5rem 0 0;\n          font-weight: bold;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          font-size: 1rem;\n          height: 3rem;\n        }\n\n        ::ng-deep .mat-expansion-panel-body {\n          padding-left: 0;\n          padding-right: 0;\n        }\n      }\n\n      .tags-container {\n        // Allow tag search to overflow when displaying results\n        overflow: visible;\n\n        ::ng-deep .mat-expansion-panel-body {\n          padding-left: 0;\n          padding-right: 0;\n        }\n\n        .header {\n          height: 3rem;\n        }\n\n        .search {\n          margin-top: 1rem;\n\n          .icon.add {\n            position: absolute;\n            // Sizes and offsets found by experimentation\n            width: 3.625rem;\n            height: 3.625rem;\n            font-size: 3.625rem;\n            top: -1.9375rem;\n            right: -1.1875rem;\n          }\n        }\n\n        .tag-list {\n          max-height: 32rem;\n          margin-left: -1rem;\n        }\n\n        .tag-list-placeholder {\n          display: flex;\n          height: 4rem;\n          align-items: center;\n          justify-content: center;\n          font-weight: 400;\n        }\n\n        .legend {\n          display: flex;\n          width: 100%;\n          margin-top: 1.5rem;\n          align-items: center;\n          font-size: 0.9rem;\n\n          .dot {\n            display: inline-block;\n            width: 1rem;\n            height: 1rem;\n            border-radius: 50%;\n\n            &.assigned {\n              margin-left: 0.5rem;\n            }\n\n            &.added {\n              margin-left: 1rem;\n            }\n          }\n\n          .text {\n            margin-left: 0.5rem;\n          }\n        }\n      }\n\n      .filler {\n        flex-grow: 1;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Registration Metadata                                      Tissue Block Controls                                                                    Anatomical Structure Tags                                                      Assigned                Added                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RightSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RightSidebarModule.html":{"url":"modules/RightSidebarModule.html","title":"module - RightSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    RightSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRightSidebarModule -->\n\nRegistrationMetadataModule->RightSidebarModule\n\n\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nRightSidebarModule -->\n\nReviewButtonModule->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nTagListModule\n\nTagListModule\n\nRightSidebarModule -->\n\nTagListModule->RightSidebarModule\n\n\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nRightSidebarModule -->\n\nTagSearchModule->RightSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/right-sidebar/right-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockSizeInputModule\n                        \n                        \n                            RegistrationMetadataModule\n                        \n                        \n                            ReviewButtonModule\n                        \n                        \n                            RotationSliderModule\n                        \n                        \n                            SlicesInputModule\n                        \n                        \n                            TagListModule\n                        \n                        \n                            TagSearchModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InfoButtonModule } from 'ccf-shared';\n\nimport { BlockSizeInputModule } from '../../shared/components/block-size-input/block-size-input.module';\nimport { RegistrationMetadataModule } from '../../shared/components/registration-metadata/registration-metadata.module';\nimport { RotationSliderModule } from '../../shared/components/rotation-slider/rotation-slider.module';\nimport { SlicesInputModule } from '../../shared/components/slices-input/slices-input.module';\nimport { TagListModule } from '../../shared/components/tag-list/tag-list.module';\nimport { TagSearchModule } from '../../shared/components/tag-search/tag-search.module';\nimport { ReviewButtonModule } from '../review/review-button/review-button.module';\nimport { RightSidebarComponent } from './right-sidebar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatExpansionModule,\n    MatDividerModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    MatTooltipModule,\n\n    BlockSizeInputModule,\n    ReviewButtonModule,\n    RotationSliderModule,\n    SlicesInputModule,\n    TagListModule,\n    TagSearchModule,\n    InfoButtonModule,\n    RegistrationMetadataModule,\n  ],\n  declarations: [RightSidebarComponent],\n  exports: [RightSidebarComponent],\n})\nexport class RightSidebarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rotation.html":{"url":"interfaces/Rotation.html","title":"interface - Rotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/rotation-slider/rotation-slider.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Type in which the values of the sliders are stored.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X slider value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y slider value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z slider value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0,\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /** Input that allows the rotation to be changed from outside of the component */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /** Output that emits the new rotation whenever it is changed from within the component */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Creates an instance of rotation slider component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   * If rotation value is  180, set to -180 or 180\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    const updatedNewRotation = +newRotation > 180 ? 180 : +newRotation \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RotationSliderComponent.html":{"url":"components/RotationSliderComponent.html","title":"component - RotationSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RotationSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/rotation-slider/rotation-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that enables the setting of a Rotation object via either 3 draggable sliders\nor through an Input method.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-rotation-slider\n            \n\n\n\n            \n                styleUrls\n                ./rotation-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rotation-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRotation\n                            \n                            \n                                resetRotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotationChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/rotation-slider/rotation-slider.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of rotation slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotation\n                    \n                \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ROTATION\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/rotation-slider/rotation-slider.component.ts:36\n                            \n                        \n                \n                    \n                        Input that allows the rotation to be changed from outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rotationChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/rotation-slider/rotation-slider.component.ts:39\n                            \n                        \n                \n                    \n                        Output that emits the new rotation whenever it is changed from within the component\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-rotation-slider\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-rotation-slider'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/rotation-slider/rotation-slider.component.ts:33\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeRotation\n                        \n                    \n                \n            \n            \n                \nchangeRotation(newRotation: number | string, axis: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/rotation-slider/rotation-slider.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Function that handles updating the rotation and emitting the new value\nIf rotation value is  180, set to -180 or 180\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newRotation\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the new value for one of the axis to be set to\n\n                                            \n                                        \n                                        \n                                                axis\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    which axis to update\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetRotation\n                        \n                    \n                \n            \n            \n                \nresetRotation(dimension: \"x\" | \"y\" | \"z\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/rotation-slider/rotation-slider.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Function to easily reset the rotations to 0 and emit this change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dimension\n                                            \n                                                        \"x\" | \"y\" | \"z\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-rotation-slider'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/rotation-slider/rotation-slider.component.ts:33\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0,\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /** Input that allows the rotation to be changed from outside of the component */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /** Output that emits the new rotation whenever it is changed from within the component */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Creates an instance of rotation slider component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   * If rotation value is  180, set to -180 or 180\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    const updatedNewRotation = +newRotation > 180 ? 180 : +newRotation \n    \n\n    \n        \n  Tissue Block Rotation\n  \n  \n    refresh\n  \n\n\n\n  X\n  \n    \n      \n    \n  \n  \n    \n  \n\n\n\n  Y\n  \n    \n      \n    \n  \n  \n    \n  \n\n\n\n  Z\n  \n    \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./rotation-slider.component.scss\n                \n                :host {\n  .header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 1.5rem;\n    padding: 0.5rem 0;\n\n    .title {\n      font-weight: 400;\n      padding: 0.5rem 0;\n    }\n  }\n\n  .reset {\n    transform: scaleX(-1);\n    cursor: pointer;\n    transition: 0.6s;\n\n    &:hover {\n      border-radius: 2px;\n    }\n  }\n\n  .refresh-button-container {\n    display: flex;\n    height: 1rem;\n    justify-content: flex-end;\n  }\n\n  .slider-box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 4rem;\n\n    mat-form-field {\n      height: 100%;\n      width: 5rem;\n\n      ::ng-deep .mdc-text-field {\n        padding: 0;\n      }\n\n      .input {\n        text-align: center;\n      }\n    }\n\n    .slider-container {\n      width: 100%;\n      padding-left: 0.5rem;\n      padding-right: 2rem;\n\n      .slider {\n        width: 100%;\n      }\n\n      ::ng-deep mat-slider-visual-thumb {\n        transition: none;\n      }\n    }\n\n    .filler {\n      flex-grow: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Rotation        refresh    X                            Y                            Z                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RotationSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RotationSliderModule.html":{"url":"modules/RotationSliderModule.html","title":"module - RotationSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    RotationSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/rotation-slider/rotation-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RotationSliderComponent } from './rotation-slider.component';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [RotationSliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatFormFieldModule,\n  ],\n  exports: [RotationSliderComponent],\n})\nexport class RotationSliderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SceneState.html":{"url":"injectables/SceneState.html","title":"injectable - SceneState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SceneState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                3d Scene state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                gizmo$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngxsOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodes$\n                                \n                                \n                                    rotatedNodes$\n                                \n                                \n                                    referenceOrganNodes$\n                                \n                                \n                                    referenceOrganSimpleNodes$\n                                \n                                \n                                    nodeCollisions$\n                                \n                                \n                                    previousRegistrationNodes$\n                                \n                                \n                                    spatialKeyBoardAxis$\n                                \n                                \n                                    placementCube$\n                                \n                                \n                                    placementCube\n                                \n                                \n                                    rotation$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, http: HttpClient, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/scene/scene.state.ts:302\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/store/scene/scene.state.ts:320\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gizmo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1,\n    },\n  ])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/scene/scene.state.ts:276\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nodes$\n                    \n                \n\n                \n                    \n                        getnodes$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/scene/scene.state.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rotatedNodes$\n                    \n                \n\n                \n                    \n                        getrotatedNodes$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/scene/scene.state.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        referenceOrganNodes$\n                    \n                \n\n                \n                    \n                        getreferenceOrganNodes$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/scene/scene.state.ts:109\n                                \n                            \n                    \n                        \n                                Observable of spatial nodes\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        referenceOrganSimpleNodes$\n                    \n                \n\n                \n                    \n                        getreferenceOrganSimpleNodes$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/scene/scene.state.ts:124\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nodeCollisions$\n                    \n                \n\n                \n                    \n                        getnodeCollisions$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/scene/scene.state.ts:157\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        previousRegistrationNodes$\n                    \n                \n\n                \n                    \n                        getpreviousRegistrationNodes$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/scene/scene.state.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        spatialKeyBoardAxis$\n                    \n                \n\n                \n                    \n                        getspatialKeyBoardAxis$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/scene/scene.state.ts:186\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        placementCube$\n                    \n                \n\n                \n                    \n                        getplacementCube$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/scene/scene.state.ts:223\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        placementCube\n                    \n                \n\n                \n                    \n                        getplacementCube()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/scene/scene.state.ts:237\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rotation$\n                    \n                \n\n                \n                    \n                        getrotation$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/store/scene/scene.state.ts:254\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { SpatialEntity, SpatialPlacement, getOriginScene, getTissueBlockScene } from 'ccf-database';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { isEqual } from 'lodash';\nimport { Observable, combineLatest, defer, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  distinctUntilChanged,\n  filter,\n  map,\n  share,\n  startWith,\n  switchMap,\n  take,\n  throttleTime,\n} from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\ninterface Collision {\n  id: string;\n}\n\nconst NODE_COLLISION_THROTTLE_DURATION = 10;\n\nconst DEFAULT_COLLISIONS_ENDPOINT = 'https://pfn8zf2gtu.us-east-2.awsapprunner.com/get-collisions';\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i]))),\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production,\n  },\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$,\n      this.referenceOrganNodes$,\n      this.previousRegistrationNodes$,\n      this.nodeCollisions$,\n      this.spatialKeyBoardAxis$,\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions, axis]) => [\n        ...placement,\n        ...prevNodes,\n        ...nodes,\n        ...axis,\n        ...(this.snapshot.showCollisions ? collisions : []),\n      ]),\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map((n) => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY)\n              .rotateY(toRadians(rotation))\n              .multiplyRight(n.transformMatrix),\n          }));\n        }\n      }),\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      map(([anatomicalStructures, extractionSites, organIri]) => {\n        const organ = this.getOrganSpatialEntity(organIri as string);\n        const originScene = organIri ? getOriginScene(organ, false, true) : [];\n        const organScene = this.createSceneNodes(\n          organIri as string,\n          [...anatomicalStructures, ...extractionSites] as VisibilityItem[],\n        );\n        return [...originScene, ...organScene];\n      }),\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [\n                {\n                  ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255],\n                },\n              ];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map(\n                  (node): SpatialSceneNode => ({\n                    ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                    opacity: (item.opacity ?? 100) / 100,\n                    color: [255, 255, 255, 255],\n                  }),\n                );\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), []),\n      ),\n      distinctUntilChanged(isEqual),\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.collisions$, this.placementCube$]).pipe(\n      throttleTime(NODE_COLLISION_THROTTLE_DURATION, undefined, { leading: true, trailing: true }),\n      map(([nodes, collisions, placement]) => {\n        if (collisions !== undefined) {\n          return this.filterNodeCollisions(nodes, collisions);\n        } else if (placement.length > 0) {\n          return this.filterNodeBBox(nodes, placement[0]);\n        }\n        return [];\n      }),\n      share(),\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([\n      this.model.organIri$,\n      this.model.showPrevious$,\n      this.registration.previousRegistrations$ as Observable,\n    ]).pipe(\n      map(([organIri = '', showPrevious, previousRegistrations]) =>\n        showPrevious ? this.getPreviousRegistrationNodes(organIri, previousRegistrations) : [],\n      ),\n    );\n  }\n\n  @Computed()\n  get spatialKeyBoardAxis$(): Observable {\n    const nonEmptyOrganIri = this.model.organIri$.pipe(filter((iri): iri is string => iri !== undefined && iri !== ''));\n\n    return combineLatest([nonEmptyOrganIri, this.model.position$]).pipe(\n      map(([organIri, position]) => {\n        const organEntity = this.getOrganSpatialEntity(organIri);\n        const blockSize = this.model.snapshot.blockSize;\n        const rotation = this.model.snapshot.rotation;\n        if (!organEntity) {\n          return [];\n        }\n\n        return getTissueBlockScene(\n          {\n            x_dimension: blockSize.x,\n            y_dimension: blockSize.y,\n            z_dimension: blockSize.z,\n          } as SpatialEntity,\n          {\n            x_translation: position.x - organEntity.x_dimension / 2,\n            y_translation: position.y - organEntity.y_dimension / 2,\n            z_translation: position.z - organEntity.z_dimension / 2,\n\n            x_rotation: rotation.x,\n            y_rotation: rotation.y,\n            z_rotation: rotation.z,\n\n            x_scaling: 1,\n            y_scaling: 1,\n            z_scaling: 1,\n          } as SpatialPlacement,\n        );\n      }),\n    );\n  }\n\n  @Computed()\n  get placementCube$(): Observable {\n    return combineLatest([\n      this.model.viewType$,\n      this.model.blockSize$,\n      this.model.rotation$,\n      this.model.position$,\n      this.model.organ$,\n    ]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => (organ.src === '' ? [] : [this.placementCube])),\n      distinctUntilChanged(isEqual),\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map((n) => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map((n) => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      }),\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1,\n    },\n  ]);\n\n  /** Reference to the model state */\n  private model!: ModelState;\n  private registration!: RegistrationState;\n  private referenceData!: ReferenceDataState;\n\n  @Computed()\n  private get collisions$(): Observable {\n    return defer(() => this.registration.throttledJsonld$).pipe(\n      concatMap((jsonld) => this.getCollisions(jsonld)),\n      startWith([]),\n    );\n  }\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly http: HttpClient,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter((item) => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [\n            {\n              ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255],\n            },\n          ];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map((node) => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255],\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n\n  private getOrganSpatialEntity(organIri: string): SpatialEntity {\n    const db = this.referenceData.snapshot;\n    return db.organSpatialEntities[organIri] as SpatialEntity;\n  }\n\n  private getCollisions(jsonld: unknown): Observable {\n    return this.globalConfig.getOption('collisionsEndpoint').pipe(\n      switchMap((endpoint = DEFAULT_COLLISIONS_ENDPOINT) =>\n        this.http.post(endpoint, JSON.stringify(jsonld), {\n          headers: { 'Content-Type': 'application/json' },\n        }),\n      ),\n      catchError(() => of(undefined)),\n      take(1),\n    );\n  }\n\n  private filterNodeCollisions(nodes: SpatialSceneNode[], collisions: Collision[]): SpatialSceneNode[] {\n    const collidedIds = new Set(collisions.map((node) => node.id));\n    return nodes.filter((node) => collidedIds.has(node['@id']));\n  }\n\n  private filterNodeBBox(nodes: SpatialSceneNode[], placement: SpatialSceneNode): SpatialSceneNode[] {\n    const bbox = getNodeBbox(placement);\n    return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n  }\n\n  private getPreviousRegistrationNodes(\n    organIri: string,\n    previousRegistrations: SpatialEntityJsonLd[],\n  ): SpatialSceneNode[] {\n    const toNode = (entity: SpatialEntityJsonLd): SpatialSceneNode | undefined => {\n      const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n      if (p.target === organIri) {\n        const organDimensions = this.model.snapshot.organDimensions;\n        const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map((n) => -n / 1000 / 2);\n        return {\n          '@id': entity['@id'],\n          '@type': 'SpatialSceneNode',\n          transformMatrix: new Matrix4(Matrix4.IDENTITY)\n            .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n            .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n            .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map((n) => n / 1000 / 2)),\n          color: [25, 118, 210, 200],\n          tooltip: entity.label,\n          unpickable: true,\n        };\n      } else {\n        return undefined;\n      }\n    };\n\n    return previousRegistrations.map(toNode).filter((entity): entity is SpatialSceneNode => entity !== undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SceneStateModel.html":{"url":"interfaces/SceneStateModel.html","title":"interface - SceneStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SceneStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Scene state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            showCollisions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        showCollisions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCollisions:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { SpatialEntity, SpatialPlacement, getOriginScene, getTissueBlockScene } from 'ccf-database';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { isEqual } from 'lodash';\nimport { Observable, combineLatest, defer, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  distinctUntilChanged,\n  filter,\n  map,\n  share,\n  startWith,\n  switchMap,\n  take,\n  throttleTime,\n} from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\ninterface Collision {\n  id: string;\n}\n\nconst NODE_COLLISION_THROTTLE_DURATION = 10;\n\nconst DEFAULT_COLLISIONS_ENDPOINT = 'https://pfn8zf2gtu.us-east-2.awsapprunner.com/get-collisions';\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i]))),\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production,\n  },\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$,\n      this.referenceOrganNodes$,\n      this.previousRegistrationNodes$,\n      this.nodeCollisions$,\n      this.spatialKeyBoardAxis$,\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions, axis]) => [\n        ...placement,\n        ...prevNodes,\n        ...nodes,\n        ...axis,\n        ...(this.snapshot.showCollisions ? collisions : []),\n      ]),\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map((n) => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY)\n              .rotateY(toRadians(rotation))\n              .multiplyRight(n.transformMatrix),\n          }));\n        }\n      }),\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      map(([anatomicalStructures, extractionSites, organIri]) => {\n        const organ = this.getOrganSpatialEntity(organIri as string);\n        const originScene = organIri ? getOriginScene(organ, false, true) : [];\n        const organScene = this.createSceneNodes(\n          organIri as string,\n          [...anatomicalStructures, ...extractionSites] as VisibilityItem[],\n        );\n        return [...originScene, ...organScene];\n      }),\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [\n                {\n                  ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255],\n                },\n              ];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map(\n                  (node): SpatialSceneNode => ({\n                    ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                    opacity: (item.opacity ?? 100) / 100,\n                    color: [255, 255, 255, 255],\n                  }),\n                );\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), []),\n      ),\n      distinctUntilChanged(isEqual),\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.collisions$, this.placementCube$]).pipe(\n      throttleTime(NODE_COLLISION_THROTTLE_DURATION, undefined, { leading: true, trailing: true }),\n      map(([nodes, collisions, placement]) => {\n        if (collisions !== undefined) {\n          return this.filterNodeCollisions(nodes, collisions);\n        } else if (placement.length > 0) {\n          return this.filterNodeBBox(nodes, placement[0]);\n        }\n        return [];\n      }),\n      share(),\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([\n      this.model.organIri$,\n      this.model.showPrevious$,\n      this.registration.previousRegistrations$ as Observable,\n    ]).pipe(\n      map(([organIri = '', showPrevious, previousRegistrations]) =>\n        showPrevious ? this.getPreviousRegistrationNodes(organIri, previousRegistrations) : [],\n      ),\n    );\n  }\n\n  @Computed()\n  get spatialKeyBoardAxis$(): Observable {\n    const nonEmptyOrganIri = this.model.organIri$.pipe(filter((iri): iri is string => iri !== undefined && iri !== ''));\n\n    return combineLatest([nonEmptyOrganIri, this.model.position$]).pipe(\n      map(([organIri, position]) => {\n        const organEntity = this.getOrganSpatialEntity(organIri);\n        const blockSize = this.model.snapshot.blockSize;\n        const rotation = this.model.snapshot.rotation;\n        if (!organEntity) {\n          return [];\n        }\n\n        return getTissueBlockScene(\n          {\n            x_dimension: blockSize.x,\n            y_dimension: blockSize.y,\n            z_dimension: blockSize.z,\n          } as SpatialEntity,\n          {\n            x_translation: position.x - organEntity.x_dimension / 2,\n            y_translation: position.y - organEntity.y_dimension / 2,\n            z_translation: position.z - organEntity.z_dimension / 2,\n\n            x_rotation: rotation.x,\n            y_rotation: rotation.y,\n            z_rotation: rotation.z,\n\n            x_scaling: 1,\n            y_scaling: 1,\n            z_scaling: 1,\n          } as SpatialPlacement,\n        );\n      }),\n    );\n  }\n\n  @Computed()\n  get placementCube$(): Observable {\n    return combineLatest([\n      this.model.viewType$,\n      this.model.blockSize$,\n      this.model.rotation$,\n      this.model.position$,\n      this.model.organ$,\n    ]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => (organ.src === '' ? [] : [this.placementCube])),\n      distinctUntilChanged(isEqual),\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map((n) => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map((n) => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      }),\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1,\n    },\n  ]);\n\n  /** Reference to the model state */\n  private model!: ModelState;\n  private registration!: RegistrationState;\n  private referenceData!: ReferenceDataState;\n\n  @Computed()\n  private get collisions$(): Observable {\n    return defer(() => this.registration.throttledJsonld$).pipe(\n      concatMap((jsonld) => this.getCollisions(jsonld)),\n      startWith([]),\n    );\n  }\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly http: HttpClient,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter((item) => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [\n            {\n              ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255],\n            },\n          ];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map((node) => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255],\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n\n  private getOrganSpatialEntity(organIri: string): SpatialEntity {\n    const db = this.referenceData.snapshot;\n    return db.organSpatialEntities[organIri] as SpatialEntity;\n  }\n\n  private getCollisions(jsonld: unknown): Observable {\n    return this.globalConfig.getOption('collisionsEndpoint').pipe(\n      switchMap((endpoint = DEFAULT_COLLISIONS_ENDPOINT) =>\n        this.http.post(endpoint, JSON.stringify(jsonld), {\n          headers: { 'Content-Type': 'application/json' },\n        }),\n      ),\n      catchError(() => of(undefined)),\n      take(1),\n    );\n  }\n\n  private filterNodeCollisions(nodes: SpatialSceneNode[], collisions: Collision[]): SpatialSceneNode[] {\n    const collidedIds = new Set(collisions.map((node) => node.id));\n    return nodes.filter((node) => collidedIds.has(node['@id']));\n  }\n\n  private filterNodeBBox(nodes: SpatialSceneNode[], placement: SpatialSceneNode): SpatialSceneNode[] {\n    const bbox = getNodeBbox(placement);\n    return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n  }\n\n  private getPreviousRegistrationNodes(\n    organIri: string,\n    previousRegistrations: SpatialEntityJsonLd[],\n  ): SpatialSceneNode[] {\n    const toNode = (entity: SpatialEntityJsonLd): SpatialSceneNode | undefined => {\n      const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n      if (p.target === organIri) {\n        const organDimensions = this.model.snapshot.organDimensions;\n        const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map((n) => -n / 1000 / 2);\n        return {\n          '@id': entity['@id'],\n          '@type': 'SpatialSceneNode',\n          transformMatrix: new Matrix4(Matrix4.IDENTITY)\n            .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n            .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n            .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map((n) => n / 1000 / 2)),\n          color: [25, 118, 210, 200],\n          tooltip: entity.label,\n          unpickable: true,\n        };\n      } else {\n        return undefined;\n      }\n    };\n\n    return previousRegistrations.map(toNode).filter((entity): entity is SpatialSceneNode => entity !== undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig.html":{"url":"interfaces/SlicesConfig.html","title":"interface - SlicesConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Slices configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numSlices\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices per block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of slice\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport {\n  delay,\n  distinct,\n  distinctUntilChanged,\n  filter,\n  map,\n  skipUntil,\n  switchMap,\n  tap,\n  throttleTime,\n} from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: [],\n  },\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(\n    map((x) => x?.id),\n    distinct(),\n  );\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(\n    map((x) => x?.blockSize),\n    distinct(),\n  );\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(\n    map((x) => x?.rotation),\n    distinct(),\n  );\n  /** Position observable */\n  readonly position$ = this.state$.pipe(\n    map((x) => x?.position),\n    distinct(),\n  );\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(\n    map((x) => x?.slicesConfig),\n    distinct(),\n  );\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(\n    map((x) => x?.viewType),\n    distinct(),\n  );\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(\n    map((x) => x?.viewSide),\n    distinct(),\n  );\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(\n    map((x) => x?.organ),\n    distinct(),\n  );\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(\n    map((x) => x?.organIri),\n    distinct(),\n  );\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(\n    map((x) => x?.organDimensions),\n    distinct(),\n  );\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(\n    map((x) => x?.sex),\n    distinct(),\n  );\n  /** Side observable */\n  readonly side$ = this.state$.pipe(\n    map((x) => x?.side),\n    distinct(),\n  );\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(\n    map((x) => x?.showPrevious),\n    distinct(),\n  );\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(\n    map((x) => x?.extractionSites),\n    distinct(),\n  );\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(\n    map((x) => x?.anatomicalStructures),\n    distinct(),\n  );\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(\n    map((x) => x?.extractionSets),\n    distinct(),\n  );\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState).filter((key) => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key as never] !== v2[key as never]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined),\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData!: ReferenceDataState;\n\n  private page!: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) => (ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false));\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName,\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event(\n      'placement',\n      `${this.snapshot.organ?.name}_placement`,\n      `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`,\n    );\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      } else {\n        this.ctx.patchState({ side: undefined });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Sets position and rotation to default\n   */\n  @DataAction()\n  setOrganDefaults(): void {\n    this.ctx.patchState({\n      position: this.defaultPosition,\n      rotation: { x: 0, y: 0, z: 0 },\n    });\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map((structure) => ({\n        ...structure,\n        opacity: Math.min(20, structure.opacity ?? 20),\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '',\n      this.snapshot.sex,\n      this.snapshot.side,\n      this.snapshot.organ,\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of db.anatomicalStructures[organIri] || []) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label ?? '',\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment,\n          };\n        }\n      }\n      this.ctx.patchState({\n        anatomicalStructures: [\n          { id: 'all', name: 'all anatomical structures', opacity: 20, visible: true },\n          ...Object.values(asLookup),\n        ],\n      });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: [{ id: 'all', name: 'all landmarks', visible: true, opacity: 0 }].concat(\n          sortBy(\n            set.extractionSites.map((entity) => ({\n              id: entity['@id'],\n              name: entity.label ?? '',\n              visible: true,\n              opacity: 0,\n              tooltip: entity.comment,\n            })),\n            'name',\n          ),\n        ),\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig\n      .getOption('organ')\n      .pipe(\n        filterNulls(),\n        delay(0),\n        switchMap((organ) => this.onOrganChange(organ)),\n      )\n      .subscribe();\n\n    this.modelChanged$\n      .pipe(skipUntil(this.page.registrationStarted$.pipe(filter((started) => started))))\n      .subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right',\n      });\n      return this.referenceData.state$.pipe(tap(() => this.onOrganIriChange()));\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig-1.html":{"url":"interfaces/SlicesConfig-1.html","title":"interface - SlicesConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/slices-input/slices-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface containing slices data of the tissue block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numSlices\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices in the block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of each tissue slice\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN,\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Creates an instance of slices input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   *\n   * @param input Event from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: KeyboardEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.ga.event('slice_config_update', 'slice_input', key, this.slicesConfig[key as never]);\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.ga.event('slice_config_reset', 'slice_input');\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlicesInputComponent.html":{"url":"components/SlicesInputComponent.html","title":"component - SlicesInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlicesInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/slices-input/slices-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for entering data on block slices\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-slices-input\n            \n\n\n\n            \n                styleUrls\n                ./slices-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slices-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshSlices\n                            \n                            \n                                updateSlicesData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfigChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasThicknessValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/slices-input/slices-input.component.ts:48\n                            \n                        \n\n                \n                    \n                            Creates an instance of slices input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        slicesConfig\n                    \n                \n                \n                    \n                        Type :         SlicesConfig\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_SLICES_CONFIG\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/slices-input/slices-input.component.ts:36\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        slicesConfigChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/slices-input/slices-input.component.ts:41\n                            \n                        \n                \n                    \n                        Emitter for slice data values\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-slices-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-slices-input'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/slices-input/slices-input.component.ts:31\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshSlices\n                        \n                    \n                \n            \n            \n                \nrefreshSlices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/slices-input/slices-input.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Refreshes all slice data values to empty values\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSlicesData\n                        \n                    \n                \n            \n            \n                \nupdateSlicesData(input: KeyboardEvent, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/slices-input/slices-input.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Limits the length of the input if needed and updates values when an input changes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of the dimension to be updated\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-slices-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/slices-input/slices-input.component.ts:31\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasThicknessValue\n                    \n                \n\n                \n                    \n                        gethasThicknessValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/slices-input/slices-input.component.ts:46\n                                \n                            \n                    \n                        \n                                Returns whether a valid thickness value has been entered.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN,\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Creates an instance of slices input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   *\n   * @param input Event from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: KeyboardEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.ga.event('slice_config_update', 'slice_input', key, this.slicesConfig[key as never]);\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.ga.event('slice_config_reset', 'slice_input');\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n    \n        \n  Tissue Sections\n  \n  \n    refresh\n  \n\n\n\n  \n    Thickness\n    \n    μm\n  \n\n  \n    # Sections\n    \n  \n\n\n    \n\n    \n                \n                    ./slices-input.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n    padding: 0.5rem 0;\n\n    .title {\n      font-weight: 400;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: 0.6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n  }\n\n  .slices-inputs {\n    display: flex;\n    justify-content: space-between;\n    width: 20rem;\n    margin: 0 auto;\n\n    .field {\n      width: 9rem;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n\n      .suffix {\n        display: none;\n      }\n\n      &.mat-focused .suffix,\n      .suffix.show {\n        display: initial;\n      }\n\n      ::ng-deep .mdc-text-field {\n        padding: 0;\n\n        .mat-mdc-form-field-infix {\n          padding-bottom: 0;\n          min-height: inherit;\n        }\n\n        .mat-mdc-form-field-icon-suffix {\n          padding: 1.5rem 0 0 0;\n        }\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Sections        refresh        Thickness        μm        # Sections      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlicesInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SlicesInputModule.html":{"url":"modules/SlicesInputModule.html","title":"module - SlicesInputModule","body":"\n                   \n\n\n\n\n    Modules\n    SlicesInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/slices-input/slices-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NumbersOnlyModule } from 'ccf-shared';\nimport { SlicesInputComponent } from './slices-input.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatRippleModule,\n    MatTooltipModule,\n    NumbersOnlyModule,\n    MatFormFieldModule,\n  ],\n  declarations: [SlicesInputComponent],\n  exports: [SlicesInputComponent],\n})\nexport class SlicesInputModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StageNavComponent.html":{"url":"components/StageNavComponent.html","title":"component - StageNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StageNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/content/stage-nav/stage-nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that allows the user to change the viewing angle and rendering mode of the stage.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-stage-nav\n            \n\n\n\n            \n                styleUrls\n                ./stage-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stage-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                isDropdownActive\n                            \n                            \n                                isDropdownHidden\n                            \n                            \n                                    \n                                labelRef\n                            \n                            \n                                    \n                                optionsRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleClick\n                            \n                            \n                                updateSide\n                            \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                useDropdownMenu\n                            \n                            \n                                view3D\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sideChange\n                            \n                            \n                                view3DChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    useDropdownMenu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:67\n                            \n                        \n\n                \n                    \n                            Creates an instance of stage nav component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :         Side\n\n                    \n                \n                \n                    \n                        Default value : 'anterior'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:36\n                            \n                        \n                \n                    \n                        Input that allows changing the current side from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropdownMenu\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:30\n                            \n                        \n                \n                    \n                        Whether to use a drop down menu instead of a options bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3D\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:39\n                            \n                        \n                \n                    \n                        Input that allows toggling of 3D view on / off from outside the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sideChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:42\n                            \n                        \n                \n                    \n                        Output that emits whenever the current side selection changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3DChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:45\n                            \n                        \n                \n                    \n                        Output that emits whenever the 3D view is toggled on / off\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-stage-nav\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-stage-nav'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element on which the event was fired\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleClick(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element on which the event was fired\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSide\n                        \n                    \n                \n            \n            \n                \nupdateSide(selection: Side)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Handles the updating of the side selection and calling the event emitter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            Side\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the new selected side\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateView\n                        \n                    \n                \n            \n            \n                \nupdateView(selection: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Handles updating of the boolean that keeps track of current view\nand calling the event emitter.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    3D (true) or Register (false)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-stage-nav'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:54\n                        \n                    \n\n            \n                \n                    Whether this component shows a dropdown menu or an options bar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownHidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:57\n                        \n                    \n\n            \n                \n                    Whether the dropdown menu is hidden\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        labelRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('label', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:48\n                        \n                    \n\n            \n                \n                    Label for dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        optionsRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('options', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:51\n                        \n                    \n\n            \n                \n                    Options dropdown\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        useDropdownMenu\n                    \n                \n\n\n                \n                    \n                        setuseDropdownMenu(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/content/stage-nav/stage-nav.component.ts:30\n                                \n                            \n                    \n                        \n                                Whether to use a drop down menu instead of a options bar\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/** Valid values for side. */\nexport type Side = 'left' | 'right' | 'anterior' | 'posterior' | '3D';\n\n/** Component that allows the user to change the viewing angle and rendering mode of the stage. */\n@Component({\n  selector: 'ccf-stage-nav',\n  templateUrl: './stage-nav.component.html',\n  styleUrls: ['./stage-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StageNavComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-stage-nav';\n\n  /** Whether to use a drop down menu instead of a options bar */\n  @Input()\n  set useDropdownMenu(value: boolean) {\n    this.isDropdownActive = value;\n    this.isDropdownHidden = true;\n  }\n\n  /** Input that allows changing the current side from outside the component */\n  @Input() side: Side = 'anterior';\n\n  /** Input that allows toggling of 3D view on / off from outside the component */\n  @Input() view3D = false;\n\n  /** Output that emits whenever the current side selection changes */\n  @Output() readonly sideChange = new EventEmitter();\n\n  /** Output that emits whenever the 3D view is toggled on / off */\n  @Output() readonly view3DChange = new EventEmitter();\n\n  /** Label for dropdown */\n  @ViewChild('label', { static: true }) labelRef!: ElementRef;\n\n  /** Options dropdown */\n  @ViewChild('options', { static: true }) optionsRef!: ElementRef;\n\n  /** Whether this component shows a dropdown menu or an options bar */\n  isDropdownActive = false;\n\n  /** Whether the dropdown menu is hidden */\n  isDropdownHidden = true;\n\n  /** Simple helper for accessing the native label element */\n  private get labelEl(): HTMLElement {\n    return this.labelRef.nativeElement;\n  }\n\n  /** Simple helper for accessing the native options element */\n  private get optionsEl(): HTMLElement {\n    return this.optionsRef.nativeElement;\n  }\n\n  /**\n   * Creates an instance of stage nav component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Listens to document click event\n   * Closes the popup only if user clicks outside the popup\n   *\n   * @param target The element on which the event was fired\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const { isDropdownHidden, labelEl, optionsEl } = this;\n\n    if (labelEl.contains(target)) {\n      this.isDropdownHidden = !isDropdownHidden;\n    } else if (!optionsEl.contains(target)) {\n      this.isDropdownHidden = true;\n    }\n  }\n\n  /**\n   * Handles the updating of the side selection and calling the event emitter\n   *\n   * @param selection the new selected side\n   */\n  updateSide(selection: Side): void {\n    this.ga.event('side_update', 'stage_nav', selection);\n\n    if (selection === '3D') {\n      this.updateView(true);\n    } else {\n      this.updateView(false);\n      this.side = selection;\n      this.sideChange.emit(this.side);\n    }\n  }\n\n  /**\n   * Handles updating of the boolean that keeps track of current view\n   * and calling the event emitter.\n   *\n   * @param selection 3D (true) or Register (false)\n   */\n  updateView(selection: boolean): void {\n    this.view3D = selection;\n    this.ga.event('view_update', 'stage_nav', selection ? '3D' : 'Register');\n    this.view3DChange.emit(this.view3D);\n  }\n}\n\n    \n\n    \n        \n  Options\n  arrow_drop_down\n\n\n\n  \n    Left\n    Right\n    Anterior\n    Posterior\n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./stage-nav.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n\n  .dropdown-label {\n    display: none;\n    align-items: center;\n\n    mat-label,\n    mat-icon {\n      line-height: 1.5rem;\n    }\n\n    &.dropdown {\n      display: flex;\n      cursor: pointer;\n      align-items: start;\n    }\n  }\n\n  .stage-options {\n    display: flex;\n    align-items: center;\n\n    .input-group {\n      .nav-input {\n        margin-right: 1rem;\n        margin-bottom: 1.5rem;\n      }\n\n      mat-radio-button {\n        ::ng-deep .mdc-label {\n          font-size: 1.25rem;\n        }\n      }\n    }\n\n    .view-slider {\n      white-space: nowrap;\n      display: flex;\n\n      ::ng-deep .slider {\n        display: flex;\n      }\n\n      ::ng-deep .slide-label {\n        font-size: 1.25rem;\n      }\n    }\n\n    &.dropdowncontainer {\n      display: flex;\n      flex-direction: column;\n      border-radius: 0.25rem;\n      position: absolute;\n      top: 3.5rem;\n      z-index: 11;\n      transition: opacity 0.25s;\n\n      :first-child {\n        margin-top: 0.5rem;\n      }\n\n      :last-child {\n        margin-bottom: 0.5rem;\n      }\n\n      .input-group {\n        margin-left: 0.875rem;\n        margin-right: 0;\n        display: flex;\n        flex-wrap: wrap;\n\n        .nav-input {\n          display: flex;\n          margin: 0;\n          margin-right: 0.875rem;\n          height: 2.5rem;\n\n          ::ng-deep .mdc-label {\n            padding-left: 0;\n          }\n        }\n      }\n\n      .view-slider {\n        display: flex;\n        align-items: center;\n        height: 3rem;\n        margin: 0 0.5rem;\n      }\n\n      mat-divider {\n        visibility: visible;\n        border-top: 2px solid;\n      }\n    }\n\n    &.hidden {\n      visibility: hidden;\n      opacity: 0;\n      transition:\n        visibility 0.25s,\n        opacity 0.25s;\n\n      mat-divider {\n        visibility: hidden;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Options  arrow_drop_down      Left    Right    Anterior    Posterior      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StageNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StageNavModule.html":{"url":"modules/StageNavModule.html","title":"module - StageNavModule","body":"\n                   \n\n\n\n\n    Modules\n    StageNavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_exports\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_imports\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\n\n\nStageNavModule\n\nStageNavModule\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/stage-nav/stage-nav.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LabeledSlideToggleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LabeledSlideToggleModule } from '../../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\n\nimport { StageNavComponent } from './stage-nav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatIconModule,\n    MatDividerModule,\n    LabeledSlideToggleModule,\n    MatTooltipModule,\n  ],\n  declarations: [StageNavComponent],\n  exports: [StageNavComponent],\n})\nexport class StageNavModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgxsDataPluginModule } from '@angular-ru/ngxs';\nimport { NgModule } from '@angular/core';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\nimport { AnatomicalStructureTagState } from './anatomical-structure-tags/anatomical-structure-tags.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { ModelState } from './model/model.state';\nimport { PageState } from './page/page.state';\nimport { ReferenceDataState } from './reference-data/reference-data.state';\nimport { RegistrationState } from './registration/registration.state';\nimport { SceneState } from './scene/scene.state';\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState,\n  IconRegistryState,\n  PageState,\n  ModelState,\n  AnatomicalStructureTagState,\n  ReferenceDataState,\n  RegistrationState,\n  SceneState,\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production,\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Must come before all other plugins except the ngxs data plugin!\n    NgxsStoragePluginModule.forRoot({\n      key: ['registration.registrations'],\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production,\n    }),\n  ],\n})\nexport class StoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/anatomical-structure-tag.ts\n        \n\n\n            \n                Description\n            \n            \n                A tag\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         TagId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TagId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Display label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"assigned\" | \"added\" | \"removed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"assigned\" | \"added\" | \"removed\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    How the tag was added\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type TagId = string | number;\n\n/**\n * A tag\n */\nexport interface Tag {\n  /** Unique identifier */\n  id: TagId;\n  /** Display label */\n  label: string;\n  /** How the tag was added */\n  type: 'assigned' | 'added' | 'removed';\n}\n\n/**\n * Search result\n */\nexport interface TagSearchResult {\n  /** Total number of possible results */\n  totalCount: number;\n  /** Partial results up to a limit */\n  results: Tag[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagListComponent.html":{"url":"components/TagListComponent.html","title":"component - TagListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/tag-list/tag-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        A list of removable tags\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tag-list\n            \n\n\n\n            \n                styleUrls\n                ./tag-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tag-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                removeTag\n                            \n                            \n                                tagClasses\n                            \n                            \n                                tagId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tagRemoved\n                            \n                            \n                                tagsChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/tag-list/tag-list.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of tag list component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tags\n                    \n                \n                \n                    \n                        Type :         Tag[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tag-list/tag-list.component.ts:22\n                            \n                        \n                \n                    \n                        The tags\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tagRemoved\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tag-list/tag-list.component.ts:27\n                            \n                        \n                \n                    \n                        Emits when a tag is removed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tagsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tag-list/tag-list.component.ts:32\n                            \n                        \n                \n                    \n                        Emits the new array of tags when a tag has been removed\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tag-list\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-list'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tag-list/tag-list.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        removeTag\n                        \n                    \n                \n            \n            \n                \nremoveTag(tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tag-list/tag-list.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Removes a tag from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tag to remove\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagClasses\n                        \n                    \n                \n            \n            \n                \ntagClasses(tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tag-list/tag-list.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagId\n                        \n                    \n                \n            \n            \n                \ntagId(_index: number, tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tag-list/tag-list.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Gets the unique identifier for a tag\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Unused\n\n                                            \n                                        \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    A tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-list'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tag-list/tag-list.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { Tag } from '../../../core/models/anatomical-structure-tag';\n\n/**\n * A list of removable tags\n */\n@Component({\n  selector: 'ccf-tag-list',\n  templateUrl: './tag-list.component.html',\n  styleUrls: ['./tag-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TagListComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-tag-list';\n\n  /**\n   * The tags\n   */\n  @Input() tags!: Tag[];\n\n  /**\n   * Emits when a tag is removed\n   */\n  @Output() readonly tagRemoved = new EventEmitter();\n\n  /**\n   * Emits the new array of tags when a tag has been removed\n   */\n  @Output() readonly tagsChange = new EventEmitter();\n\n  /**\n   * Creates an instance of tag list component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Gets the unique identifier for a tag\n   *\n   * @param _index Unused\n   * @param tag A tag\n   * @returns An identifier\n   */\n  tagId(_index: number, tag: Tag): unknown {\n    return tag.id;\n  }\n\n  tagClasses(tag: Tag): string[] {\n    return tag.type === 'added' ? ['added'] : ['assigned'];\n  }\n\n  /**\n   * Removes a tag from the list\n   *\n   * @param tag Tag to remove\n   */\n  removeTag(tag: Tag): void {\n    this.tags = this.tags.filter((obj) => obj !== tag);\n    this.ga.event('tag_removed', 'tag_list', tag.label);\n    this.tagRemoved.emit(tag);\n    this.tagsChange.emit(this.tags);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ tag.label }}\n    cancel\n  \n\n\n    \n\n    \n                \n                    ./tag-list.component.scss\n                \n                :host {\n  display: block;\n  overflow-x: hidden;\n  overflow-y: auto;\n\n  ::ng-deep .mdc-evolution-chip-set__chips {\n    margin: 0 !important;\n\n    .mdc-evolution-chip__text-label {\n      font-size: 14px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ tag.label }}    cancel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagListModule.html":{"url":"modules/TagListModule.html","title":"module - TagListModule","body":"\n                   \n\n\n\n\n    Modules\n    TagListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagListModule\n\n\n\ncluster_TagListModule_exports\n\n\n\ncluster_TagListModule_declarations\n\n\n\n\nTagListComponent\n\nTagListComponent\n\n\n\nTagListModule\n\nTagListModule\n\nTagListModule -->\n\nTagListComponent->TagListModule\n\n\n\n\n\nTagListComponent \n\nTagListComponent \n\nTagListComponent  -->\n\nTagListModule->TagListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/tag-list/tag-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TagListComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TagListComponent } from './tag-list.component';\n\n@NgModule({\n  imports: [CommonModule, MatChipsModule, MatIconModule],\n  declarations: [TagListComponent],\n  exports: [TagListComponent],\n})\nexport class TagListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagSearchComponent.html":{"url":"components/TagSearchComponent.html","title":"component - TagSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/tag-search/tag-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for searching, selecting, and adding tags.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tag-search\n            \n\n\n\n            \n                styleUrls\n                ./tag-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tag-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkedResults\n                            \n                            \n                                    \n                                closeSearch\n                            \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                countMapping\n                            \n                            \n                                resultsVisible\n                            \n                            \n                                    Readonly\n                                searchControl\n                            \n                            \n                                searchResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTags\n                            \n                            \n                                    \n                                    \n                                closeResults\n                            \n                            \n                                hasCheckedTags\n                            \n                            \n                                    \n                                    \n                                openResults\n                            \n                            \n                                tagId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                            \n                                search\n                            \n                            \n                                searchLimit\n                            \n                            \n                                searchThrottle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                added\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                focusin\n                            \n                            \n                                window:click\n                            \n                            \n                                window:focusin\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, ga: GoogleAnalyticsService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/tag-search/tag-search.component.ts:81\n                            \n                        \n\n                \n                    \n                            Creates an instance of tag search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Element for this component\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to change detector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add Anatomical Structures ...'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tag-search/tag-search.component.ts:44\n                            \n                        \n                \n                    \n                        Placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tag-search/tag-search.component.ts:47\n                            \n                        \n                \n                    \n                        Search method\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        searchLimit\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tag-search/tag-search.component.ts:50\n                            \n                        \n                \n                    \n                        Maximum number of results to show\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        searchThrottle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tag-search/tag-search.component.ts:53\n                            \n                        \n                \n                    \n                        Throttle time between search calls\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        added\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tag-search/tag-search.component.ts:56\n                            \n                        \n                \n                    \n                        Emits when tags are added\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tag-search\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-search'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tag-search/tag-search.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tag-search/tag-search.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Opens the results panel\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusin\n                        \n                    \n                \n            \n            \n                \nfocusin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tag-search/tag-search.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Opens the results panel\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:click(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tag-search/tag-search.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Closes the results panel\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:focusin\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:focusin(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tag-search/tag-search.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Closes the results panel\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTags\n                        \n                    \n                \n            \n            \n                \naddTags()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tag-search/tag-search.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Emits selected tags and resets the search and selections\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        closeResults\n                        \n                    \n                \n            \n            \n                \n                        \n                    closeResults(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:click', ['$event'])@HostListener('window:focusin', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/tag-search/tag-search.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Closes the results panel\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasCheckedTags\n                        \n                    \n                \n            \n            \n                \nhasCheckedTags()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tag-search/tag-search.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Determines whether any tags have been checked\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if any tag has been checked by the user\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        openResults\n                        \n                    \n                \n            \n            \n                \n                        \n                    openResults()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')@HostListener('focusin')\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/tag-search/tag-search.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Opens the results panel\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagId\n                        \n                    \n                \n            \n            \n                \ntagId(_index: number, tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tag-search/tag-search.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Extracts the tag identifier\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Unused\n\n                                            \n                                        \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    A tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TagId\n\n                        \n                            \n                                The identifier corresponding to the tag\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        checkedResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tag-search/tag-search.component.ts:75\n                        \n                    \n\n            \n                \n                    Object of currently checked search results\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closeSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('closeSearch', {read: ElementRef, static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tag-search/tag-search.component.ts:59\n                        \n                    \n\n            \n                \n                    Element for close search button\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-search'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tag-search/tag-search.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        countMapping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    /* eslint-disable-next-line @typescript-eslint/naming-convention */\n    '=1': '1 result',\n    other: '# results',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tag-search/tag-search.component.ts:62\n                        \n                    \n\n            \n                \n                    Mapping for pluralizing the result total count\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tag-search/tag-search.component.ts:78\n                        \n                    \n\n            \n                \n                    Whether results are shown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tag-search/tag-search.component.ts:69\n                        \n                    \n\n            \n                \n                    Search field controller\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : EMPTY_RESULT\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tag-search/tag-search.component.ts:72\n                        \n                    \n\n            \n                \n                    Search results\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ObservableInput, Subject, from, interval } from 'rxjs';\nimport { catchError, map, switchMap, takeUntil, throttle } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../../core/models/anatomical-structure-tag';\n\n/** Default search results limit */\nconst DEFAULT_SEARCH_LIMIT = 5;\n/** Default search throttle time in ms */\nconst DEFAULT_SEARCH_THROTTLE = 100;\n/** Empty search result object */\nconst EMPTY_RESULT: TagSearchResult = { totalCount: 0, results: [] };\n\n/**\n * Component for searching, selecting, and adding tags.\n */\n@Component({\n  selector: 'ccf-tag-search',\n  templateUrl: './tag-search.component.html',\n  styleUrls: ['./tag-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TagSearchComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-tag-search';\n\n  /** Placeholder text */\n  @Input() placeholder = 'Add Anatomical Structures ...';\n\n  /** Search method */\n  @Input() search?: (text: string, limit: number) => ObservableInput;\n\n  /** Maximum number of results to show */\n  @Input() searchLimit?: number;\n\n  /** Throttle time between search calls */\n  @Input() searchThrottle?: number;\n\n  /** Emits when tags are added */\n  @Output() readonly added = new EventEmitter();\n\n  /** Element for close search button */\n  @ViewChild('closeSearch', { read: ElementRef, static: false }) closeSearch!: ElementRef;\n\n  /** Mapping for pluralizing the result total count */\n  readonly countMapping = {\n    /* eslint-disable-next-line @typescript-eslint/naming-convention */\n    '=1': '1 result',\n    other: '# results',\n  };\n\n  /** Search field controller */\n  readonly searchControl = new UntypedFormControl();\n\n  /** Search results */\n  searchResults = EMPTY_RESULT;\n\n  /** Object of currently checked search results */\n  checkedResults: Record = {};\n\n  /** Whether results are shown */\n  resultsVisible = false;\n\n  /** Emits and completes when component is destroyed. Used to clean up observables. */\n  private readonly destroy$ = new Subject();\n\n  /**\n   * Creates an instance of tag search component.\n   *\n   * @param el Element for this component\n   * @param ga Analytics service\n   * @param cdr Reference to change detector\n   */\n  constructor(\n    private readonly el: ElementRef,\n    private readonly ga: GoogleAnalyticsService,\n    cdr: ChangeDetectorRef,\n  ) {\n    this.searchControl.valueChanges\n      .pipe(\n        takeUntil(this.destroy$),\n        throttle(() => interval(this.searchThrottle ?? DEFAULT_SEARCH_THROTTLE), { leading: true, trailing: true }),\n        switchMap(this.executeSearch),\n      )\n      .subscribe((result) => {\n        this.searchResults = result;\n        this.checkedResults = this.getUpdatedCheckedResults(result);\n        cdr.markForCheck();\n      });\n  }\n\n  /**\n   * Cleans up component on destruction\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Extracts the tag identifier\n   *\n   * @param _index Unused\n   * @param tag A tag\n   * @returns The identifier corresponding to the tag\n   */\n  tagId(_index: number, tag: Tag): TagId {\n    return tag.id;\n  }\n\n  /**\n   * Determines whether any tags have been checked\n   *\n   * @returns true if any tag has been checked by the user\n   */\n  hasCheckedTags(): boolean {\n    return Object.values(this.checkedResults).some((v) => v);\n  }\n\n  /**\n   * Emits selected tags and resets the search and selections\n   */\n  addTags(): void {\n    const { searchControl, searchResults, checkedResults } = this;\n    const tags = searchResults.results.filter((tag) => checkedResults[tag.id]);\n\n    if (tags.length > 0) {\n      searchControl.reset();\n      this.searchResults = EMPTY_RESULT;\n      this.checkedResults = {};\n      this.ga.event('tags_added', 'tag_search', tags.map((tag) => tag.label).join(','));\n      this.added.emit(tags);\n    }\n  }\n\n  /**\n   * Opens the results panel\n   */\n  @HostListener('click') // eslint-disable-line\n  @HostListener('focusin') // eslint-disable-line\n  openResults(): void {\n    if (!this.resultsVisible) {\n      this.resultsVisible = true;\n    }\n  }\n\n  /**\n   * Closes the results panel\n   *\n   * @param event DOM event\n   */\n  @HostListener('window:click', ['$event']) // eslint-disable-line\n  @HostListener('window:focusin', ['$event']) // eslint-disable-line\n  closeResults(event: Event): void {\n    const { closeSearch } = this;\n    if (this.resultsVisible && event.target instanceof Node) {\n      if (!this.el.nativeElement.contains(event.target) || closeSearch.nativeElement.contains(event.target)) {\n        this.resultsVisible = false;\n      }\n    }\n  }\n\n  /**\n   * Executes a search on a piece of text.\n   *\n   * @param text Search text\n   * @returns An observable of the search result.\n   */\n  @Bind\n  private executeSearch(text: string): ObservableInput {\n    const { search, searchLimit = DEFAULT_SEARCH_LIMIT } = this;\n    if (!text || !search) {\n      return [EMPTY_RESULT];\n    }\n\n    return from(search(text, searchLimit)).pipe(\n      catchError(() => [EMPTY_RESULT]),\n      map(this.truncateResults),\n    );\n  }\n\n  /**\n   * Truncates the number of results returned by a search\n   *\n   * @param result The results\n   * @returns Results with at most `searchLimit` items\n   */\n  @Bind\n  private truncateResults(result: TagSearchResult): TagSearchResult {\n    const { searchLimit = DEFAULT_SEARCH_LIMIT } = this;\n    const items = result.results;\n\n    if (items.length > searchLimit) {\n      return {\n        ...result,\n        results: items.slice(0, searchLimit),\n      };\n    }\n\n    return result;\n  }\n\n  /**\n   * Computes a new checked object for result items. Already checked items are preserved.\n   *\n   * @param result New results\n   * @returns A new checked object\n   */\n  private getUpdatedCheckedResults(result: TagSearchResult): Record {\n    const prev = this.checkedResults;\n    return result.results.reduce>((acc, { id }) => {\n      acc[id] = prev[id] ?? false;\n      return acc;\n    }, {});\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n    \n      add\n    \n  \n\n  \n    \n      \n        {{ result.label }}\n      \n    \n\n    \n      {{ searchResults.totalCount | i18nPlural: countMapping }}\n    \n  \n\n\n    \n\n    \n                \n                    ./tag-search.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n\n  .spacer {\n    // Calculated by adding up all padding/margin/height of material form fields\n    height: 3.5rem;\n  }\n\n  .overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 10;\n\n    .search-box {\n      display: flex;\n      width: 100%;\n      align-items: center;\n      height: 3rem;\n\n      .add-button {\n        border-radius: 0.25rem;\n        border: none;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        cursor: pointer;\n        height: 100%;\n      }\n    }\n\n    .results {\n      margin-top: 0.5rem;\n\n      .count {\n        margin-top: 0.5rem;\n        font-size: 0.75rem;\n        text-align: end;\n      }\n    }\n\n    ::ng-deep .mat-mdc-form-field-infix {\n      min-height: inherit;\n      padding: 0;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                add                          {{ result.label }}                    {{ searchResults.totalCount | i18nPlural: countMapping }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagSearchModule.html":{"url":"modules/TagSearchModule.html","title":"module - TagSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    TagSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagSearchModule\n\n\n\ncluster_TagSearchModule_exports\n\n\n\ncluster_TagSearchModule_declarations\n\n\n\n\nTagSearchComponent\n\nTagSearchComponent\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nTagSearchModule -->\n\nTagSearchComponent->TagSearchModule\n\n\n\n\n\nTagSearchComponent \n\nTagSearchComponent \n\nTagSearchComponent  -->\n\nTagSearchModule->TagSearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/tag-search/tag-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TagSearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { TagSearchComponent } from './tag-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n  ],\n  declarations: [TagSearchComponent],\n  exports: [TagSearchComponent],\n})\nexport class TagSearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagSearchResult.html":{"url":"interfaces/TagSearchResult.html","title":"interface - TagSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/anatomical-structure-tag.ts\n        \n\n\n            \n                Description\n            \n            \n                Search result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            results\n                                        \n                                \n                                \n                                        \n                                            totalCount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Partial results up to a limit\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of possible results\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type TagId = string | number;\n\n/**\n * A tag\n */\nexport interface Tag {\n  /** Unique identifier */\n  id: TagId;\n  /** Display label */\n  label: string;\n  /** How the tag was added */\n  type: 'assigned' | 'added' | 'removed';\n}\n\n/**\n * Search result\n */\nexport interface TagSearchResult {\n  /** Total number of possible results */\n  totalCount: number;\n  /** Partial results up to a limit */\n  results: Tag[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n@NgModule({\n  providers: [{ provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true }, ThemingService],\n})\nexport class ThemingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/theming/theming.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                initialize\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/theming/theming.service.ts:33\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/theming/theming.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Get the currently active theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize(component: ComponentRef<>)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/theming/theming.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Initializer called during bootstrap to set up theming.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                        ComponentRef<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(element: ElementRef<>, injector: Injector)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/theming/theming.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Binds theming service to a component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        ElementRef<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                injector\n                                            \n                                                        Injector\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTheme\n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/theming/theming.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Resets the theme to the default.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/theming/theming.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Sets the currently active theme.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new theme class.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport {\n  ComponentRef,\n  ElementRef,\n  Inject,\n  Injector,\n  Injectable,\n  InjectionToken,\n  Optional,\n  Renderer2,\n} from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  private element!: ElementRef;\n  private injector!: Injector;\n  /** Default theme class. */\n  private readonly defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const { injector, location } = component;\n    const service = injector.get(ThemingService);\n    service.initialize(location, injector);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme ?? '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) {\n      return;\n    }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n  /**\n   * Binds theming service to a component.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  initialize(element: ElementRef, injector: Injector): void {\n    this.element = element;\n    this.injector = injector;\n    this.applyThemeClass(this.getTheme());\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const { element, injector } = this;\n    if (!cls || !element || !injector) {\n      return;\n    }\n\n    const renderer = injector.get(Renderer2, null);\n    if (!renderer) {\n      return;\n    }\n\n    const root = element.nativeElement as HTMLElement;\n    const overlay = injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) {\n      renderer[methodName](overlay, cls);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n\n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classEnd\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:48\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-toggle-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:25\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.ccf-drawer-toggle-button-end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:28\n                        \n                    \n\n            \n                \n                    Whether this button is attach to a drawer in position 'end'.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Process an event message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if change detection needs to be run.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Updates the drawer state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:25\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classEnd\n                    \n                \n\n                \n                    \n                        getclassEnd()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:28\n                                \n                            \n                    \n                        \n                                Whether this button is attach to a drawer in position 'end'.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:33\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'arrow_right';\n    let collapse = 'arrow_left';\n    if (this.position === 'end') {\n      [expand, collapse] = [collapse, expand];\n    }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(\n    private readonly drawer: DrawerComponent,\n    messageService: MessageService,\n    private readonly cdr: ChangeDetectorRef,\n  ) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(\n      channel.getMessagesFromSource(drawer).subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  arrow_right\n\n\n  arrow_left\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0rem 0.25rem 0.25rem 0rem;\n  cursor: pointer;\n  transition: 0.25s;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 0.25rem 0rem 0rem 0.25rem;\n  }\n\n  .expand-collapse-icon {\n    position: absolute;\n    right: 0rem;\n    transition: 0.6s;\n    padding-left: 0.15rem;\n\n    &.hidden {\n      opacity: 0;\n    }\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  right: 0.3rem;\n  top: 0.675rem;\n  padding-top: 0.05rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  arrow_right  arrow_left'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { ReplaySubject, Subscription, combineLatest } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  registrationExpanded = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme!: string;\n\n  homeUrl!: string;\n\n  logoTooltip!: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState,\n    readonly page: PageState,\n    readonly consentService: ConsentService,\n    readonly snackbar: MatSnackBar,\n    readonly theming: ThemingService,\n    el: ElementRef,\n    injector: Injector,\n    private readonly globalConfig: GlobalConfigState,\n    cdr: ChangeDetectorRef,\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      }),\n    );\n    this.theme$.subscribe((theme) => {\n      this.theme = theme ?? 'light';\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url) => {\n      this.homeUrl = url ?? '';\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip) => {\n      this.logoTooltip = tooltip ?? '';\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(([theme, mode]) => {\n      this.theming.setTheme(`${theme}-theme-${mode}`);\n      cdr.markForCheck();\n    });\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        },\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000,\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  registrationToggle(event: boolean): void {\n    this.registrationExpanded = event;\n    if (!this.registrationExpanded) {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:mousedown', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const disableWhenClicked = ['mat-mdc-input-element', 'form-input-label'];\n    for (const className of disableWhenClicked) {\n      if (typeof target.className === 'string' && target.className.includes(className)) {\n        this.disablePositionChange = true;\n        return;\n      }\n    }\n    this.disablePositionChange = false;\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserName.html":{"url":"interfaces/UserName.html","title":"interface - UserName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/name-input/name-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                User name data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            middleName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's first name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's last name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's middle name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * User name data\n */\nexport interface UserName {\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's middle name\n   */\n  middleName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Used to validate the first name input field.\n   */\n  firstNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the last name input field.\n   */\n  lastNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the middle name input field.\n   */\n  middleNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Current user name\n   */\n  @Input()\n  get name(): UserName {\n    return this._name;\n  }\n\n  set name(value: UserName) {\n    this._name = value;\n    this.firstNameValidator.setValue(value?.firstName || '');\n    this.lastNameValidator.setValue(value?.lastName || '');\n    this.middleNameValidator.setValue(value?.middleName || '');\n  }\n\n  private _name: UserName = {\n    firstName: '',\n    middleName: '',\n    lastName: '',\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Creates an instance of name input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: Event, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.ga.event('name_updated', 'name_input', key);\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoModalComponent.html":{"url":"components/VideoModalComponent.html","title":"component - VideoModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/content/video-modal/video-modal/video-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying a youtube video inside of an angular material modal.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-video-modal\n            \n\n\n\n            \n                styleUrls\n                ./video-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./video-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                    Readonly\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                loadYoutubePlayerAPI\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer2: Renderer2, dialogRef: MatDialogRef, data, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of video modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer2\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-video-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/content/video-modal/video-modal/video-modal.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Closes the video modal component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYoutubePlayerAPI\n                        \n                    \n                \n            \n            \n                \nloadYoutubePlayerAPI()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/content/video-modal/video-modal/video-modal.component.ts:38\n                        \n                    \n\n\n            \n                \n                        loads the IFrame Player API code asynchronously from YouTube.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/video-modal/video-modal/video-modal.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/video-modal/video-modal/video-modal.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, HostBinding, Inject, OnInit, Renderer2 } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n/**\n * Component for displaying a youtube video inside of an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal',\n  templateUrl: './video-modal.component.html',\n  styleUrls: ['./video-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VideoModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal';\n\n  /**\n   * Creates an instance of video modal component.\n   */\n  constructor(\n    private readonly renderer2: Renderer2,\n    public readonly dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: unknown,\n    @Inject(DOCUMENT) private readonly document: Document,\n  ) {}\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    this.loadYoutubePlayerAPI();\n  }\n\n  /**\n   * loads the IFrame Player API code asynchronously from YouTube.\n   */\n  loadYoutubePlayerAPI(): void {\n    const script = this.renderer2.createElement('script') as HTMLScriptElement;\n    script.src = 'https://www.youtube.com/iframe_api';\n    this.renderer2.appendChild(this.document.body, script);\n  }\n\n  /**\n   * Closes the video modal component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    clear\n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./video-modal.component.scss\n                \n                ::ng-deep {\n  .mat-dialog-container {\n    padding: 0;\n  }\n\n  .mat-dialog-content {\n    display: block;\n    margin: auto;\n    padding: 0;\n    max-height: 65vh;\n    overflow: auto;\n    width: fit-content;\n  }\n}\n\n:host {\n  .video-modal.wrapper {\n    width: fit-content;\n\n    .container {\n      position: relative;\n\n      .content {\n        padding: 0.5rem;\n        padding-top: 3rem;\n        width: fit-content;\n        border-radius: 0.5rem;\n      }\n\n      .close-icon {\n        cursor: pointer;\n        position: absolute;\n        right: 0rem;\n        font-size: 2.5rem;\n        width: 2.5rem;\n        height: 2.5rem;\n        transition: 0.5s color;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      clear                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoModalLauncherComponent.html":{"url":"components/VideoModalLauncherComponent.html","title":"component - VideoModalLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoModalLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for launching an angular material modal.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-video-modal-launcher\n            \n\n\n\n            \n                styleUrls\n                ./video-modal-launcher.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./video-modal-launcher.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchVideoModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of video modal launcher component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:22\n                            \n                        \n                \n                    \n                        Input used to toggle the launcher on and off.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-video-modal-launcher\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal-launcher'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchVideoModal\n                        \n                    \n                \n            \n            \n                \nlaunchVideoModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Launches the video modal component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal-launcher'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { VideoModalComponent } from '../video-modal/video-modal.component';\n\n/**\n * Component for launching an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal-launcher',\n  templateUrl: './video-modal-launcher.component.html',\n  styleUrls: ['./video-modal-launcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VideoModalLauncherComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal-launcher';\n\n  /**\n   * Input used to toggle the launcher on and off.\n   */\n  @Input() visible = true;\n\n  /**\n   * Creates an instance of video modal launcher component.\n   */\n  constructor(private readonly dialog: MatDialog) {}\n\n  /**\n   * Launches the video modal component.\n   */\n  launchVideoModal(): void {\n    this.dialog.open(VideoModalComponent, {\n      width: '46rem',\n      data: {},\n    });\n  }\n}\n\n    \n\n    \n        \n  WATCH\n  \"How to use the HuBMAP Registration User Interface\"\n\n play_circle_outline \n\n    \n\n    \n                \n                    ./video-modal-launcher.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1;\n\n  .video-description {\n    margin-bottom: 1.5rem;\n    text-align: center;\n    width: 30rem;\n\n    .title {\n      margin-bottom: 1rem;\n    }\n  }\n\n  .play-icon-button {\n    cursor: pointer;\n    font-size: 5rem;\n    width: 5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  WATCH  \"How to use the HuBMAP Registration User Interface\" play_circle_outline '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoModalLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideoModalLauncherModule.html":{"url":"modules/VideoModalLauncherModule.html","title":"module - VideoModalLauncherModule","body":"\n                   \n\n\n\n\n    Modules\n    VideoModalLauncherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VideoModalLauncherModule\n\n\n\ncluster_VideoModalLauncherModule_declarations\n\n\n\ncluster_VideoModalLauncherModule_imports\n\n\n\ncluster_VideoModalLauncherModule_exports\n\n\n\n\nVideoModalLauncherComponent\n\nVideoModalLauncherComponent\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule -->\n\nVideoModalLauncherComponent->VideoModalLauncherModule\n\n\n\n\n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent  -->\n\nVideoModalLauncherModule->VideoModalLauncherComponent \n\n\n\n\n\nVideoModalModule\n\nVideoModalModule\n\nVideoModalLauncherModule -->\n\nVideoModalModule->VideoModalLauncherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VideoModalLauncherComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            VideoModalModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VideoModalLauncherComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { VideoModalModule } from '../video-modal/video-modal.module';\nimport { VideoModalLauncherComponent } from './video-modal-launcher.component';\n\n@NgModule({\n  declarations: [VideoModalLauncherComponent],\n  imports: [CommonModule, MatIconModule, VideoModalModule],\n  exports: [VideoModalLauncherComponent],\n})\nexport class VideoModalLauncherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideoModalModule.html":{"url":"modules/VideoModalModule.html","title":"module - VideoModalModule","body":"\n                   \n\n\n\n\n    Modules\n    VideoModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VideoModalModule\n\n\n\ncluster_VideoModalModule_exports\n\n\n\ncluster_VideoModalModule_declarations\n\n\n\n\nVideoModalComponent\n\nVideoModalComponent\n\n\n\nVideoModalModule\n\nVideoModalModule\n\nVideoModalModule -->\n\nVideoModalComponent->VideoModalModule\n\n\n\n\n\nVideoModalComponent \n\nVideoModalComponent \n\nVideoModalComponent  -->\n\nVideoModalModule->VideoModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/video-modal/video-modal/video-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VideoModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VideoModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\nimport { VideoModalComponent } from './video-modal.component';\n\n@NgModule({\n  declarations: [VideoModalComponent],\n  imports: [CommonModule, YouTubePlayerModule, MatIconModule, MatDialogModule],\n  exports: [VideoModalComponent],\n})\nexport class VideoModalModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisibilityItem.html":{"url":"interfaces/VisibilityItem.html","title":"interface - VisibilityItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisibilityItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/visibility-item.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for visibility item data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            visible\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Opacity value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tooltip text to be displayed in the stage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the item is currently highlighted\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface VisibilityItem {\n  /**\n   * Id of the item\n   */\n  id: string | number;\n\n  /**\n   * Name of the item\n   */\n  name: string;\n\n  /**\n   * Whether the item is currently highlighted\n   */\n  visible: boolean;\n\n  /**\n   * Opacity value\n   */\n  opacity?: number;\n\n  /**\n   * Tooltip text to be displayed in the stage\n   */\n  tooltip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisibilityMenuComponent.html":{"url":"components/VisibilityMenuComponent.html","title":"component - VisibilityMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisibilityMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/visibility-menu/visibility-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Menu for displaying visibility options\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-visibility-menu\n            \n\n\n\n            \n                styleUrls\n                ./visibility-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./visibility-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getId\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                resetItem\n                            \n                            \n                                setAllOpacity\n                            \n                            \n                                toggleVisibility\n                            \n                            \n                                updateOpacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hover\n                            \n                            \n                                itemsChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of visibility menu component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :         VisibilityItem[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:24\n                            \n                        \n                \n                    \n                        Items to be displayed in the visibility menu\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         VisibilityItem | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:29\n                            \n                        \n                \n                    \n                        The currently selected item\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        hover\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:34\n                            \n                        \n                \n                    \n                        Emits the currently hovered item\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:39\n                            \n                        \n                \n                    \n                        Emits whenever there is a change to one or more items.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-visibility-menu\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-menu'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId(_index: number, item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:138\n                        \n                    \n\n\n            \n                \n                        Returns the id of an item\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The item to get an id for\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | number\n\n                        \n                            \n                                id Id of the item\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseOut\n                        \n                    \n                \n            \n            \n                \nmouseOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Clears current selection and emits undefined in response to mouse out\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseOver\n                        \n                    \n                \n            \n            \n                \nmouseOver(item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Changes current selection to hovered over item and emits the item\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menu item\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetItem\n                        \n                    \n                \n            \n            \n                \nresetItem()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Resets item to opacity 20 and visible\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAllOpacity\n                        \n                    \n                \n            \n            \n                \nsetAllOpacity(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Sets all items to the same opacity and makes them visible\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated opacity value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility(item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Toggles visibility of an item; opacity is reverted to the previous value if visibility toggled back on\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menu item\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \nupdateOpacity(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Updates opacity of the currently selected item (if one is selected) and emits the new items\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated opacity value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-menu'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/visibility-menu/visibility-menu.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { VisibilityItem } from '../../../core/models/visibility-item';\n\n/**\n * Menu for displaying visibility options\n */\n@Component({\n  selector: 'ccf-visibility-menu',\n  templateUrl: './visibility-menu.component.html',\n  styleUrls: ['./visibility-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VisibilityMenuComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-menu';\n\n  /**\n   * Items to be displayed in the visibility menu\n   */\n  @Input() items!: VisibilityItem[];\n\n  /**\n   * The currently selected item\n   */\n  @Input() selection: VisibilityItem | undefined;\n\n  /**\n   * Emits the currently hovered item\n   */\n  @Output() readonly hover = new EventEmitter();\n\n  /**\n   * Emits whenever there is a change to one or more items.\n   */\n  @Output() readonly itemsChange = new EventEmitter();\n\n  /**\n   * Creates an instance of visibility menu component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Toggles visibility of an item; opacity is reverted to the previous value if visibility toggled back on\n   *\n   * @param item Menu item\n   */\n  toggleVisibility(item: VisibilityItem): void {\n    item = { ...item, visible: !item.visible };\n    if (this.selection && item.id === this.selection.id) {\n      this.selection = { ...this.selection, visible: item.visible };\n    }\n\n    this.ga.event('visibility_toggled', 'visibility_menu', '' + item.id, +item.visible);\n    this.updateOpacity(item.opacity);\n  }\n\n  /**\n   * Changes current selection to hovered over item and emits the item\n   *\n   * @param item Menu item\n   */\n  mouseOver(item: VisibilityItem): void {\n    this.selection = item === this.selection ? undefined : item;\n    this.hover.emit(item);\n  }\n\n  /**\n   * Clears current selection and emits undefined in response to mouse out\n   *\n   * @param item Menu item\n   */\n  mouseOut(): void {\n    this.selection = undefined;\n    this.hover.emit(undefined);\n  }\n\n  /**\n   * Updates opacity of the currently selected item (if one is selected) and emits the new items\n   *\n   * @param value Updated opacity value\n   */\n  updateOpacity(value: number | undefined): void {\n    if (!this.selection) {\n      return;\n    }\n    const updatedSelection = { ...this.selection, opacity: value };\n    this.selection = updatedSelection;\n    if (updatedSelection.id === 'all') {\n      this.setAllOpacity(updatedSelection.opacity as number);\n    } else {\n      this.items = this.items.map((item) => (item.id === updatedSelection.id ? updatedSelection : item));\n      this.ga.event('opacity_update', 'visibility_menu', '' + updatedSelection.id, updatedSelection.opacity);\n    }\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Resets item to opacity 20 and visible\n   */\n  resetItem(): void {\n    if (this.selection) {\n      const updatedSelection = { ...this.selection, opacity: 20, visible: true };\n      this.selection = updatedSelection;\n      if (this.selection.id === 'all') {\n        this.setAllOpacity(updatedSelection.opacity);\n      } else {\n        this.items = this.items.map((item) => (item.id === updatedSelection.id ? updatedSelection : item));\n        this.ga.event('item_reset', 'visibility_menu', '' + updatedSelection.id);\n      }\n      this.itemsChange.emit(this.items);\n    }\n  }\n\n  /**\n   * Sets all items to the same opacity and makes them visible\n   *\n   * @param value Updated opacity value\n   */\n  setAllOpacity(value: number): void {\n    this.items = this.items.map((i) => ({ ...i, opacity: value, visible: true }));\n    this.ga.event('all_items_opacity_update', 'visibility_menu', undefined, value);\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Returns the id of an item\n   *\n   * @param index Index of item in items array\n   * @param item The item to get an id for\n   * @returns id Id of the item\n   */\n  getId(_index: number, item: VisibilityItem): string | number {\n    return item.id;\n  }\n}\n\n    \n\n    \n        refresh\n\n\n  \n  {{ item.name }}\n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./visibility-menu.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  margin-right: 0;\n  margin-left: 0;\n  max-height: 40vh;\n  overflow-y: auto;\n  scrollbar-width: thin;\n\n  .icon {\n    border-radius: 0.25rem;\n  }\n\n  .reset {\n    transform: scaleX(-1);\n    cursor: pointer;\n    transition: 0.6s;\n    position: absolute;\n    top: 3rem;\n\n    &:hover {\n      border-radius: 2px;\n    }\n  }\n\n  .item-entry {\n    display: flex;\n    height: 2.25rem;\n    align-items: center;\n    flex-shrink: 0;\n    position: relative;\n\n    .opacity {\n      cursor: pointer;\n    }\n\n    .opacity-icon {\n      z-index: 1;\n      transition: 0.6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n\n    .item-name {\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      margin-left: 0.5rem;\n      opacity: 1;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-property: opacity;\n      max-width: calc(100% - 2.5rem);\n\n      &.hidden {\n        opacity: 0;\n      }\n    }\n\n    .slider {\n      width: calc(100% - 2rem);\n      transition-duration: 0.3s;\n      transition-timing-function: ease-in-out;\n      transition-property: opacity;\n      left: 2rem;\n      position: absolute;\n      opacity: 1;\n\n      &.hidden {\n        opacity: 0;\n        transition-duration: 0.1s;\n        transition-timing-function: ease-in-out;\n        transition-property: opacity;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'refresh    {{ item.name }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisibilityMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisibilityMenuModule.html":{"url":"modules/VisibilityMenuModule.html","title":"module - VisibilityMenuModule","body":"\n                   \n\n\n\n\n    Modules\n    VisibilityMenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VisibilityMenuModule\n\n\n\ncluster_VisibilityMenuModule_declarations\n\n\n\ncluster_VisibilityMenuModule_exports\n\n\n\n\nVisibilityMenuComponent\n\nVisibilityMenuComponent\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nVisibilityMenuModule -->\n\nVisibilityMenuComponent->VisibilityMenuModule\n\n\n\n\n\nVisibilityMenuComponent \n\nVisibilityMenuComponent \n\nVisibilityMenuComponent  -->\n\nVisibilityMenuModule->VisibilityMenuComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/visibility-menu/visibility-menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisibilityMenuComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisibilityMenuComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { OpacitySliderModule } from 'ccf-shared';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { VisibilityMenuComponent } from './visibility-menu.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatRippleModule, OpacitySliderModule],\n  declarations: [VisibilityMenuComponent],\n  exports: [VisibilityMenuComponent],\n})\nexport class VisibilityMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisibilityToggleComponent.html":{"url":"components/VisibilityToggleComponent.html","title":"component - VisibilityToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisibilityToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/visibility-toggle/visibility-toggle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for easily adding a visibility toggle with customizable label and\npre set up emitter.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-visibility-toggle\n            \n\n\n\n            \n                styleUrls\n                ./visibility-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./visibility-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                toggleLabel\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                visibilityChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of visibility toggle component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:34\n                            \n                        \n                \n                    \n                        Whether or not the slider is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:29\n                            \n                        \n                \n                    \n                        Input that allows the label to be set from outside the component,\nmaking it more reusable.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:23\n                            \n                        \n                \n                    \n                        Keeps track of the current visibility state of the toggle.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        visibilityChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:40\n                            \n                        \n                \n                    \n                        Outputs the new visibility state whenever toggleVisibility()\nchanges it.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-visibility-toggle\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-toggle'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Toggles visibility and emits the new value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-toggle'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component for easily adding a visibility toggle with customizable label and\n * pre set up emitter.\n */\n@Component({\n  selector: 'ccf-visibility-toggle',\n  templateUrl: './visibility-toggle.component.html',\n  styleUrls: ['./visibility-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VisibilityToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-toggle';\n\n  /**\n   * Keeps track of the current visibility state of the toggle.\n   */\n  @Input() visible = false;\n\n  /**\n   * Input that allows the label to be set from outside the component,\n   * making it more reusable.\n   */\n  @Input() toggleLabel = '';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Outputs the new visibility state whenever toggleVisibility()\n   * changes it.\n   */\n  @Output() readonly visibilityChanged = new EventEmitter();\n\n  /**\n   * Creates an instance of visibility toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Toggles visibility and emits the new value.\n   */\n  toggleVisibility(): void {\n    this.visible = !this.visible;\n\n    this.ga.event('visibility_toggled', 'visibility_toggle', '' + this.visible);\n    this.visibilityChanged.emit(this.visible);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      done\n    \n\n    {{ toggleLabel }}\n  \n\n\n    \n\n    \n                \n                    ./visibility-toggle.component.scss\n                \n                :host {\n  height: 3rem;\n  display: flex;\n  align-items: center;\n\n  ::ng-deep .mat-mdc-chip {\n    padding: 0 !important;\n\n    &.disabled {\n      cursor: not-allowed !important;\n      pointer-events: none;\n    }\n\n    .mdc-evolution-chip__action--primary {\n      padding: 0;\n      cursor: pointer;\n    }\n\n    .mdc-evolution-chip__text-label {\n      display: flex;\n      align-items: center;\n      font-size: 14px;\n    }\n  }\n\n  .toggle-div {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    padding-top: 1.5rem;\n\n    .toggle-wrapper {\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      cursor: pointer;\n      border-width: 0.075rem;\n      border-style: solid;\n      height: 2.25rem;\n      border-radius: 1.5rem;\n      transition: background-color 0.2s ease-in-out;\n\n      .icon-background {\n        border-radius: 1.5rem;\n        height: 2.06rem;\n        width: 2.06rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        .icon {\n          transition: 0.6s;\n          position: absolute;\n          &.block {\n            width: 1.125rem;\n          }\n          &.hidden {\n            opacity: 0;\n          }\n        }\n      }\n\n      .toggle-label {\n        font-weight: bold;\n        margin-left: 0.5rem;\n        padding-right: 1.25rem;\n        padding-left: 0.25rem;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  done        {{ toggleLabel }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisibilityToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisibilityToggleModule.html":{"url":"modules/VisibilityToggleModule.html","title":"module - VisibilityToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    VisibilityToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VisibilityToggleModule\n\n\n\ncluster_VisibilityToggleModule_declarations\n\n\n\ncluster_VisibilityToggleModule_exports\n\n\n\n\nVisibilityToggleComponent\n\nVisibilityToggleComponent\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nVisibilityToggleModule -->\n\nVisibilityToggleComponent->VisibilityToggleModule\n\n\n\n\n\nVisibilityToggleComponent \n\nVisibilityToggleComponent \n\nVisibilityToggleComponent  -->\n\nVisibilityToggleModule->VisibilityToggleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/visibility-toggle/visibility-toggle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisibilityToggleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisibilityToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VisibilityToggleComponent } from './visibility-toggle.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatChipsModule } from '@angular/material/chips';\n\n@NgModule({\n  declarations: [VisibilityToggleComponent],\n  imports: [CommonModule, MatIconModule, MatChipsModule],\n  exports: [VisibilityToggleComponent],\n})\nexport class VisibilityToggleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A object with x, y, and z channels of the same type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X channel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y channel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z channel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport {\n  delay,\n  distinct,\n  distinctUntilChanged,\n  filter,\n  map,\n  skipUntil,\n  switchMap,\n  tap,\n  throttleTime,\n} from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: [],\n  },\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(\n    map((x) => x?.id),\n    distinct(),\n  );\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(\n    map((x) => x?.blockSize),\n    distinct(),\n  );\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(\n    map((x) => x?.rotation),\n    distinct(),\n  );\n  /** Position observable */\n  readonly position$ = this.state$.pipe(\n    map((x) => x?.position),\n    distinct(),\n  );\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(\n    map((x) => x?.slicesConfig),\n    distinct(),\n  );\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(\n    map((x) => x?.viewType),\n    distinct(),\n  );\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(\n    map((x) => x?.viewSide),\n    distinct(),\n  );\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(\n    map((x) => x?.organ),\n    distinct(),\n  );\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(\n    map((x) => x?.organIri),\n    distinct(),\n  );\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(\n    map((x) => x?.organDimensions),\n    distinct(),\n  );\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(\n    map((x) => x?.sex),\n    distinct(),\n  );\n  /** Side observable */\n  readonly side$ = this.state$.pipe(\n    map((x) => x?.side),\n    distinct(),\n  );\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(\n    map((x) => x?.showPrevious),\n    distinct(),\n  );\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(\n    map((x) => x?.extractionSites),\n    distinct(),\n  );\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(\n    map((x) => x?.anatomicalStructures),\n    distinct(),\n  );\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(\n    map((x) => x?.extractionSets),\n    distinct(),\n  );\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState).filter((key) => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key as never] !== v2[key as never]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined),\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData!: ReferenceDataState;\n\n  private page!: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) => (ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false));\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName,\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event(\n      'placement',\n      `${this.snapshot.organ?.name}_placement`,\n      `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`,\n    );\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      } else {\n        this.ctx.patchState({ side: undefined });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Sets position and rotation to default\n   */\n  @DataAction()\n  setOrganDefaults(): void {\n    this.ctx.patchState({\n      position: this.defaultPosition,\n      rotation: { x: 0, y: 0, z: 0 },\n    });\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map((structure) => ({\n        ...structure,\n        opacity: Math.min(20, structure.opacity ?? 20),\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '',\n      this.snapshot.sex,\n      this.snapshot.side,\n      this.snapshot.organ,\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of db.anatomicalStructures[organIri] || []) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label ?? '',\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment,\n          };\n        }\n      }\n      this.ctx.patchState({\n        anatomicalStructures: [\n          { id: 'all', name: 'all anatomical structures', opacity: 20, visible: true },\n          ...Object.values(asLookup),\n        ],\n      });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: [{ id: 'all', name: 'all landmarks', visible: true, opacity: 0 }].concat(\n          sortBy(\n            set.extractionSites.map((entity) => ({\n              id: entity['@id'],\n              name: entity.label ?? '',\n              visible: true,\n              opacity: 0,\n              tooltip: entity.comment,\n            })),\n            'name',\n          ),\n        ),\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig\n      .getOption('organ')\n      .pipe(\n        filterNulls(),\n        delay(0),\n        switchMap((organ) => this.onOrganChange(organ)),\n      )\n      .subscribe();\n\n    this.modelChanged$\n      .pipe(skipUntil(this.page.registrationStarted$.pipe(filter((started) => started))))\n      .subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right',\n      });\n      return this.referenceData.state$.pipe(tap(() => this.onOrganIriChange()));\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applySpatialPlacement   (src/.../reference-data.state.ts)\n                        \n                        \n                            getNodeBbox   (src/.../scene.state.ts)\n                        \n                        \n                            globalConfigFactory   (src/.../config.ts)\n                        \n                        \n                            parseOrgan   (src/.../app-web-component.component.ts)\n                        \n                        \n                            throwDuplicateDrawersError   (src/.../container.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/store/reference-data/reference-data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applySpatialPlacement\n                        \n                    \n                \n            \n            \n                \napplySpatialPlacement(tx: Matrix4, placement: Immutable)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tx\n                                            \n                                                        Matrix4\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                placement\n                                            \n                                                        Immutable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Matrix4\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/core/store/scene/scene.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getNodeBbox\n                        \n                    \n                \n            \n            \n                \ngetNodeBbox(model: SpatialSceneNode)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        SpatialSceneNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AABB\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/core/services/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        globalConfigFactory\n                        \n                    \n                \n            \n            \n                \nglobalConfigFactory(globals: GlobalsService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                globals\n                                            \n                                                        GlobalsService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GlobalConfig\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseOrgan\n                        \n                    \n                \n            \n            \n                \nparseOrgan(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string | Organ\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/shared/components/drawer/container/container.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        throwDuplicateDrawersError\n                        \n                    \n                \n            \n            \n                \nthrowDuplicateDrawersError(position)\n                \n            \n\n\n\n\n            \n                \n                        Helper function for creating drawer errors.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                position\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The position of the drawer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     never\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_ExtractionSetDropdownModule\n\n\n\ncluster_ExtractionSetDropdownModule_declarations\n\n\n\ncluster_ExtractionSetDropdownModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_JsonFileReaderModule\n\n\n\ncluster_JsonFileReaderModule_declarations\n\n\n\ncluster_JsonFileReaderModule_exports\n\n\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_declarations\n\n\n\ncluster_NameInputModule_exports\n\n\n\ncluster_RegistrationContentModule\n\n\n\ncluster_RegistrationContentModule_declarations\n\n\n\ncluster_RegistrationContentModule_imports\n\n\n\ncluster_RegistrationContentModule_exports\n\n\n\ncluster_RegistrationMetadataModule\n\n\n\ncluster_RegistrationMetadataModule_declarations\n\n\n\ncluster_RegistrationMetadataModule_exports\n\n\n\ncluster_RegistrationModalModule\n\n\n\ncluster_RegistrationModalModule_declarations\n\n\n\ncluster_RegistrationModalModule_exports\n\n\n\ncluster_ReviewButtonModule\n\n\n\ncluster_ReviewButtonModule_declarations\n\n\n\ncluster_ReviewButtonModule_imports\n\n\n\ncluster_ReviewButtonModule_exports\n\n\n\ncluster_ReviewModalModule\n\n\n\ncluster_ReviewModalModule_declarations\n\n\n\ncluster_ReviewModalModule_exports\n\n\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_exports\n\n\n\ncluster_TagListModule\n\n\n\ncluster_TagListModule_declarations\n\n\n\ncluster_TagListModule_exports\n\n\n\ncluster_TagSearchModule\n\n\n\ncluster_TagSearchModule_declarations\n\n\n\ncluster_TagSearchModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_VideoModalLauncherModule\n\n\n\ncluster_VideoModalLauncherModule_declarations\n\n\n\ncluster_VideoModalLauncherModule_imports\n\n\n\ncluster_VideoModalLauncherModule_exports\n\n\n\ncluster_VideoModalModule\n\n\n\ncluster_VideoModalModule_declarations\n\n\n\ncluster_VideoModalModule_exports\n\n\n\ncluster_VisibilityMenuModule\n\n\n\ncluster_VisibilityMenuModule_declarations\n\n\n\ncluster_VisibilityMenuModule_exports\n\n\n\ncluster_VisibilityToggleModule\n\n\n\ncluster_VisibilityToggleModule_declarations\n\n\n\ncluster_VisibilityToggleModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nAppModule -->\n\nRegistrationModalModule->AppModule\n\n\n\n\n\nRegistrationModalComponent \n\nRegistrationModalComponent \n\nRegistrationModalComponent  -->\n\nRegistrationModalModule->RegistrationModalComponent \n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\nContentComponent\n\nContentComponent\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nContentModule -->\n\nVideoModalLauncherModule->ContentModule\n\n\n\n\n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent  -->\n\nVideoModalLauncherModule->VideoModalLauncherComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nExtractionSetDropdownComponent\n\nExtractionSetDropdownComponent\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule -->\n\nExtractionSetDropdownComponent->ExtractionSetDropdownModule\n\n\n\nLeftSidebarModule -->\n\nExtractionSetDropdownModule->LeftSidebarModule\n\n\n\n\n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent  -->\n\nExtractionSetDropdownModule->ExtractionSetDropdownComponent \n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nJsonFileReaderComponent\n\nJsonFileReaderComponent\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nJsonFileReaderModule -->\n\nJsonFileReaderComponent->JsonFileReaderModule\n\n\n\n\n\nJsonFileReaderComponent \n\nJsonFileReaderComponent \n\nJsonFileReaderComponent  -->\n\nJsonFileReaderModule->JsonFileReaderComponent \n\n\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule -->\n\nJsonFileReaderModule->RegistrationMetadataModule\n\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\nRegistrationMetadataModule -->\n\nNameInputModule->RegistrationMetadataModule\n\n\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nLeftSidebarModule -->\n\nVisibilityMenuModule->LeftSidebarModule\n\n\n\n\n\nVisibilityMenuComponent \n\nVisibilityMenuComponent \n\nVisibilityMenuComponent  -->\n\nVisibilityMenuModule->VisibilityMenuComponent \n\n\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\n\n\nVisibilityToggleComponent \n\nVisibilityToggleComponent \n\nVisibilityToggleComponent  -->\n\nVisibilityToggleModule->VisibilityToggleComponent \n\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nRegistrationContentComponent\n\nRegistrationContentComponent\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationContentModule -->\n\nRegistrationContentComponent->RegistrationContentModule\n\n\n\nRegistrationModalModule -->\n\nRegistrationContentModule->RegistrationModalModule\n\n\n\n\n\nRegistrationContentComponent \n\nRegistrationContentComponent \n\nRegistrationContentComponent  -->\n\nRegistrationContentModule->RegistrationContentComponent \n\n\n\nRightSidebarModule -->\n\nRegistrationMetadataModule->RightSidebarModule\n\n\n\nRegistrationContentModule -->\n\nRegistrationMetadataModule->RegistrationContentModule\n\n\n\n\n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent  -->\n\nRegistrationMetadataModule->RegistrationMetadataComponent \n\n\n\n\n\nRegistrationMetadataComponent\n\nRegistrationMetadataComponent\n\nRegistrationMetadataModule -->\n\nRegistrationMetadataComponent->RegistrationMetadataModule\n\n\n\n\n\nRegistrationModalComponent\n\nRegistrationModalComponent\n\nRegistrationModalModule -->\n\nRegistrationModalComponent->RegistrationModalModule\n\n\n\n\n\nReviewButtonComponent\n\nReviewButtonComponent\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nReviewButtonModule -->\n\nReviewButtonComponent->ReviewButtonModule\n\n\n\nRightSidebarModule -->\n\nReviewButtonModule->RightSidebarModule\n\n\n\n\n\nReviewButtonComponent \n\nReviewButtonComponent \n\nReviewButtonComponent  -->\n\nReviewButtonModule->ReviewButtonComponent \n\n\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewButtonModule -->\n\nReviewModalModule->ReviewButtonModule\n\n\n\n\n\nReviewModalComponent \n\nReviewModalComponent \n\nReviewModalComponent  -->\n\nReviewModalModule->ReviewModalComponent \n\n\n\n\n\nReviewModalComponent\n\nReviewModalComponent\n\nReviewModalModule -->\n\nReviewModalComponent->ReviewModalModule\n\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\nTagListModule\n\nTagListModule\n\nRightSidebarModule -->\n\nTagListModule->RightSidebarModule\n\n\n\n\n\nTagListComponent \n\nTagListComponent \n\nTagListComponent  -->\n\nTagListModule->TagListComponent \n\n\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nRightSidebarModule -->\n\nTagSearchModule->RightSidebarModule\n\n\n\n\n\nTagSearchComponent \n\nTagSearchComponent \n\nTagSearchComponent  -->\n\nTagSearchModule->TagSearchComponent \n\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nTagListComponent\n\nTagListComponent\n\nTagListModule -->\n\nTagListComponent->TagListModule\n\n\n\n\n\nTagSearchComponent\n\nTagSearchComponent\n\nTagSearchModule -->\n\nTagSearchComponent->TagSearchModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nVideoModalLauncherComponent\n\nVideoModalLauncherComponent\n\nVideoModalLauncherModule -->\n\nVideoModalLauncherComponent->VideoModalLauncherModule\n\n\n\n\n\nVideoModalModule\n\nVideoModalModule\n\nVideoModalLauncherModule -->\n\nVideoModalModule->VideoModalLauncherModule\n\n\n\n\n\nVideoModalComponent \n\nVideoModalComponent \n\nVideoModalComponent  -->\n\nVideoModalModule->VideoModalComponent \n\n\n\n\n\nVideoModalComponent\n\nVideoModalComponent\n\nVideoModalModule -->\n\nVideoModalComponent->VideoModalModule\n\n\n\n\n\nVisibilityMenuComponent\n\nVisibilityMenuComponent\n\nVisibilityMenuModule -->\n\nVisibilityMenuComponent->VisibilityMenuModule\n\n\n\n\n\nVisibilityToggleComponent\n\nVisibilityToggleComponent\n\nVisibilityToggleModule -->\n\nVisibilityToggleComponent->VisibilityToggleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        30 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    34 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockSizeInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DetailsLabelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExtractionSetDropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JsonFileReaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LabeledSlideToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeftSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NameInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationMetadataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RightSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RotationSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SlicesInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StageNavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideoModalLauncherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideoModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisibilityMenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisibilityToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CancelRegistrationCallback   (src/.../app-web-component.component.ts)\n                        \n                        \n                            ContainerPayload   (src/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (src/.../messages.ts)\n                        \n                        \n                            ExpandedState   (src/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (src/.../drawer.component.ts)\n                        \n                        \n                            FetchPreviousRegistrationsCallback   (src/.../app-web-component.component.ts)\n                        \n                        \n                            Message   (src/.../messages.ts)\n                        \n                        \n                            MessageChannel   (src/.../messages.ts)\n                        \n                        \n                            MessageService   (src/.../messages.ts)\n                        \n                        \n                            MetaData   (src/.../meta-data.ts)\n                        \n                        \n                            OpenedState   (src/.../drawer.component.ts)\n                        \n                        \n                            Organ   (src/.../app-web-component.component.ts)\n                        \n                        \n                            OrganName   (src/.../config.ts)\n                        \n                        \n                            Payload   (src/.../messages.ts)\n                        \n                        \n                            RegistrationCallback   (src/.../app-web-component.component.ts)\n                        \n                        \n                            Side   (src/.../stage-nav.component.ts)\n                        \n                        \n                            TagId   (src/.../anatomical-structure-tag.ts)\n                        \n                        \n                            User   (src/.../app-web-component.component.ts)\n                        \n                        \n                            ViewSide   (src/.../model.state.ts)\n                        \n                        \n                            ViewType   (src/.../model.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app-web-component.component.ts\n    \n    \n        \n            \n                \n                    \n                    CancelRegistrationCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FetchPreviousRegistrationsCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Organ\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RegistrationCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container.\n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers.\n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type.\n\n                \n            \n            \n                \n                            GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type.\n\n                \n            \n            \n                \n                            GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type.\n\n                \n            \n            \n                \n                            GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components.\n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer.\n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    src/app/core/models/meta-data.ts\n    \n    \n        \n            \n                \n                    \n                    MetaData\n                \n            \n            \n                \n                            MetaDataField[]\n\n                \n            \n        \n    \n    src/app/core/services/config/config.ts\n    \n    \n        \n            \n                \n                    \n                    OrganName\n                \n            \n            \n                \n                        \"large intestine\" | \"heart\" | \"kidney\" | \"spleen\"\n\n                \n            \n        \n    \n    src/app/modules/content/stage-nav/stage-nav.component.ts\n    \n    \n        \n            \n                \n                    \n                    Side\n                \n            \n            \n                \n                    Valid values for side.\n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\" | \"3D\"\n\n                \n            \n        \n    \n    src/app/core/models/anatomical-structure-tag.ts\n    \n    \n        \n            \n                \n                    \n                    TagId\n                \n            \n            \n                \n                    Type for tag identifiers\n\n                \n            \n            \n                \n                        string | number\n\n                \n            \n        \n    \n    src/app/core/store/model/model.state.ts\n    \n    \n        \n            \n                \n                    \n                    ViewSide\n                \n            \n            \n                \n                    Side which the model is viewed from\n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ViewType\n                \n            \n            \n                \n                    Model view type\n\n                \n            \n            \n                \n                        \"register\" | \"3d\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_BLOCK_SIZE   (src/.../block-size-input.component.ts)\n                        \n                        \n                            DEFAULT_COLLISIONS_ENDPOINT   (src/.../scene.state.ts)\n                        \n                        \n                            DEFAULT_ICONS   (src/.../default-icons.ts)\n                        \n                        \n                            DEFAULT_ROTATION   (src/.../rotation-slider.component.ts)\n                        \n                        \n                            DEFAULT_SEARCH_LIMIT   (src/.../tag-search.component.ts)\n                        \n                        \n                            DEFAULT_SEARCH_THROTTLE   (src/.../tag-search.component.ts)\n                        \n                        \n                            DEFAULT_SLICES_CONFIG   (src/.../slices-input.component.ts)\n                        \n                        \n                            DEFAULT_THEME   (src/.../theming.service.ts)\n                        \n                        \n                            EMPTY_RESULT   (src/.../tag-search.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.staging.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            EXPAND_COLLAPSE_PARAMS_DEFAULT   (src/.../drawer.component.ts)\n                        \n                        \n                            GLOBAL_CONFIG   (src/.../config.ts)\n                        \n                        \n                            JSONLD_THROTTLE_DURATION   (src/.../registration.state.ts)\n                        \n                        \n                            MESSAGE_SERVICE_CONFIG   (src/.../message.service.ts)\n                        \n                        \n                            MESSAGE_SERVICE_DEFAULT_CONFIG   (src/.../message.service.ts)\n                        \n                        \n                            MessageService   (src/.../messages.ts)\n                        \n                        \n                            NODE_COLLISION_THROTTLE_DURATION   (src/.../scene.state.ts)\n                        \n                        \n                            ROOT_STATES   (src/.../store.module.ts)\n                        \n                        \n                            RUI_ORGANS   (src/.../model.state.ts)\n                        \n                        \n                            ruiConfig   (src/.../config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/components/block-size-input/block-size-input.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_BLOCK_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockSize\n\n                    \n                \n                \n                    \n                        Default value : {\n  x: 10,\n  y: 10,\n  z: 10,\n}\n                    \n                \n\n            \n                \n                    Defaults for block sizes.\n\n                \n            \n\n        \n    \n\n    src/app/core/store/scene/scene.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_COLLISIONS_ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://pfn8zf2gtu.us-east-2.awsapprunner.com/get-collisions'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NODE_COLLISION_THROTTLE_DURATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n\n    src/app/core/store/icon-registry/default-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ICONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultIconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-brain.svg' },\n  { name: 'mammary-gland', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-breast.svg' },\n  { name: 'main-bronchus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-extrapulmonary-bronchus.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-left.svg' },\n  {\n    name: 'fallopian-tube-right',\n    namespace: 'app',\n    url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-right.svg',\n  },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-right.svg' },\n  { name: 'kidneys', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidneys.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-large-intestine.svg' },\n  { name: 'larynx', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-larynx.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lungs.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lymph-nodes.svg' },\n  { name: 'neurons', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-neurons.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-right.svg' },\n  { name: 'palatine-tonsil', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-palatine-tonsil.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pelvis.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-small-intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-thymus.svg' },\n  { name: 'trachea', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-trachea.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'visibility_off_cube', namespace: 'app', url: 'assets/icons/ico-cube.svg' },\n]\n                    \n                \n\n            \n                \n                    Icons registered at startup.\n\n                \n            \n\n        \n    \n\n    src/app/shared/components/rotation-slider/rotation-slider.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ROTATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : {\n  x: 0,\n  y: 0,\n  z: 0,\n}\n                    \n                \n\n            \n                \n                    Default values for rotation.\n\n                \n            \n\n        \n    \n\n    src/app/shared/components/tag-search/tag-search.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEARCH_LIMIT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n            \n                \n                    Default search results limit\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEARCH_THROTTLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n\n            \n                \n                    Default search throttle time in ms\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EMPTY_RESULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagSearchResult\n\n                    \n                \n                \n                    \n                        Default value : { totalCount: 0, results: [] }\n                    \n                \n\n            \n                \n                    Empty search result object\n\n                \n            \n\n        \n    \n\n    src/app/shared/components/slices-input/slices-input.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SLICES_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SlicesConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  thickness: NaN,\n  numSlices: NaN,\n}\n                    \n                \n\n            \n                \n                    Default values for slices config.\n\n                \n            \n\n        \n    \n\n    src/app/core/services/theming/theming.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_THEME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Default theme class')\n                    \n                \n\n            \n                \n                    Token for specifying the default theme class.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  disableDbWorker: true,\n  dbOptions: {\n    ccfOwlUrl: 'https://ccf-ontology.hubmapconsortium.org/v2.1.0/ccf.owl',\n    ccfContextUrl: 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n    hubmapDataService: 'search-api',\n    hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n    hubmapDataUrl: '', // Do not query the search-api for spatial entities by default\n    hubmapAssetsUrl: 'https://assets.hubmapconsortium.org',\n    hubmapToken: localStorage.getItem('HUBMAP_TOKEN') ?? '',\n  },\n  customization: {\n    theme: 'hubmap',\n    header: true,\n    homeUrl: 'https://portal.hubmapconsortium.org/',\n    logoTooltip: 'Human BioMolecular Atlas Project',\n  },\n  skipUnsavedChangesConfirmation: false,\n  googleAnalyticsToken: window.location.hostname === 'portal.hubmapconsortium.org' ? 'G-1WRJHN9FM6' : 'G-J9HWV9QPJ4',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.staging.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  disableDbWorker: true,\n  dbOptions: {\n    ccfOwlUrl: 'https://ccf-ontology.hubmapconsortium.org/v2.1.0/ccf.owl',\n    ccfContextUrl: 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n    hubmapDataService: 'search-api',\n    hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n    hubmapDataUrl: '', // Do not query the search-api for spatial entities by default\n    hubmapAssetsUrl: 'https://assets.hubmapconsortium.org',\n    hubmapToken: localStorage.getItem('HUBMAP_TOKEN') ?? '',\n  },\n  customization: {\n    theme: 'hubmap',\n    header: true,\n    homeUrl: 'https://portal.hubmapconsortium.org/',\n    logoTooltip: 'Human BioMolecular Atlas Project',\n  },\n  skipUnsavedChangesConfirmation: false,\n  googleAnalyticsToken: 'G-ERNVZ1Q4KE',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  disableDbWorker: true,\n  dbOptions: {\n    ccfOwlUrl: 'https://ccf-ontology.hubmapconsortium.org/v2.1.0/ccf.owl',\n    ccfContextUrl: 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n    hubmapDataService: 'search-api',\n    hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n    hubmapDataUrl: '', // Do not query the search-api for spatial entities by default\n    hubmapAssetsUrl: 'https://assets.hubmapconsortium.org',\n    hubmapToken: localStorage.getItem('HUBMAP_TOKEN') ?? '',\n  },\n  customization: {\n    theme: 'default',\n    header: true,\n    homeUrl: 'https://portal.hubmapconsortium.org/',\n    logoTooltip: 'Human BioMolecular Atlas Project',\n  },\n  skipUnsavedChangesConfirmation: true,\n  googleAnalyticsToken: 'G-B3DT7XPMRT',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXPAND_COLLAPSE_PARAMS_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0,\n  },\n}\n                    \n                \n\n            \n                \n                    Default animation parameters.\n\n                \n            \n\n        \n    \n\n    src/app/core/services/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GLOBAL_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Global configuration object')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ruiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConfig\n\n                    \n                \n\n\n        \n    \n\n    src/app/core/store/registration/registration.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSONLD_THROTTLE_DURATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n\n\n        \n    \n\n    src/app/shared/services/message/message.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Message service configuration', {\n  providedIn: 'root',\n  factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG,\n})\n                    \n                \n\n            \n                \n                    Token for specifying the message service configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageServiceConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  isolated: true,\n}\n                    \n                \n\n            \n                \n                    Default message service configuration.\n\n                \n            \n\n        \n    \n\n    src/app/shared/components/drawer/messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MessageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GenericMessageService\n                    \n                \n\n            \n                \n                    Reference to the service class.\n\n                \n            \n\n        \n    \n\n    src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState,\n  IconRegistryState,\n  PageState,\n  ModelState,\n  AnatomicalStructureTagState,\n  ReferenceDataState,\n  RegistrationState,\n  SceneState,\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n    src/app/core/store/model/model.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RUI_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALL_ORGANS\n                    \n                \n\n            \n                \n                    All organs to be displayed\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
