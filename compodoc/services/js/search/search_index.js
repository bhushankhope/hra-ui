var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ContactImplService.html",[0,0.022,1,1.98]],["body/injectables/ContactImplService.html",[0,0.036,1,3.595,2,0.948,3,0.631,4,0.54,5,0.54,6,3.735,7,0.631,8,3.176,9,2.132,10,4.606,11,4.606,12,4.606,13,3.176,14,4.606,15,1.679,16,2.413,17,0.374,18,1.323,19,3.595,20,2.752,21,2.732,22,1.729,23,1.073,24,3.036,25,2.752,26,1.492,27,4.606,28,2.617,29,4.606,30,3.176,31,4.606,32,1.362,33,0.047,34,1.21,35,0.631,36,1.362,37,0.729,38,0.975,39,3.176,40,0.844,41,0.54,42,3.036,43,0.729,44,1.21,45,1.21,46,0.631,47,0.631,48,1.729,49,1.362,50,3.735,51,3.735,52,3.735,53,3.735,54,3.735,55,3.735,56,3.735,57,3.735,58,3.735,59,0.037,60,0.037]],["title/interfaces/ContactMessage.html",[21,1.505,61,0.93]],["body/interfaces/ContactMessage.html",[0,0.035,3,0.612,4,0.524,5,0.524,7,0.612,13,3.116,16,2.092,17,0.363,20,2.164,21,2.703,26,1.173,28,2.953,30,3.886,33,0.047,35,0.832,37,0.707,38,0.961,39,2.497,40,0.764,41,0.524,43,0.707,46,0.764,47,0.764,59,0.036,60,0.036,61,1.595,62,2.164,63,2.944,64,3.673,65,4.581,66,2.368,67,1.813,68,4.399,69,3.732,70,4.399,71,4.399,72,2.28,73,2.944,74,2.497,75,0.919,76,2.944]],["title/injectables/ContactService.html",[0,0.022,16,1.329]],["body/injectables/ContactService.html",[0,0.035,2,0.939,3,0.625,4,0.535,5,0.535,7,0.625,13,2.552,16,2.405,17,0.37,18,1.315,19,3.158,20,2.737,21,2.851,23,1.063,26,1.483,28,2.799,30,3.584,32,1.349,33,0.047,34,1.198,35,0.625,36,1.349,37,0.971,38,1.042,39,3.158,40,0.774,41,0.535,43,0.722,46,0.774,47,0.84,59,0.037,60,0.037,61,1.483,63,3.008,64,3.008,65,4.224,67,1.611,68,4.043,69,3.43,70,4.043,71,4.043,72,2.519,73,3.722,74,3.158,75,1.163,76,3.722,77,3.7]],["title/interfaces/ExtendedTissue.html",[61,0.93,78,1.98]],["body/interfaces/ExtendedTissue.html",[0,0.026,3,0.388,4,0.332,5,0.656,7,0.388,15,1.423,17,0.23,33,0.048,35,0.767,38,0.648,40,0.8,41,0.332,43,0.448,44,0.744,45,1.076,46,0.561,47,0.388,48,1.063,49,1.655,59,0.027,60,0.027,61,0.744,62,1.372,66,1.741,67,1.696,75,1.153,78,2.291,79,0.837,80,0.837,81,1.372,82,2.701,83,1.435,84,2.101,85,2.701,86,2.701,87,2.701,88,1.618,89,2.046,90,1.696,91,1.372,92,1.204,93,1.372,94,2.333,95,1.867,96,1.211,97,1.584,98,1.211,99,1.063,100,2.291,101,1.538,102,1.56,103,1.741,104,2.291,105,1.756,106,1.602,107,1.867,108,1.867,109,1.867,110,2.557,111,2.713,112,1.538,113,1.986,114,2.701,115,1.867,116,2.701,117,1.867,118,2.701,119,1.867,120,1.867,121,1.807,122,1.204,123,1.867,124,3.566,125,1.204,126,2.026,127,1.211,128,0.66,129,1.204,130,1.204,131,1.584,132,3.043,133,2.313,134,2.291,135,2.951,136,3.263,137,2.692,138,3.817,139,3.817,140,3.817,141,2.692,142,2.291,143,1.584,144,1.584,145,2.951,146,2.291,147,3.131,148,2.951,149,2.951,150,2.291,151,2.951,152,1.584,153,1.584,154,2.291,155,1.584,156,2.291,157,2.692,158,2.291,159,1.584,160,1.584,161,2.291,162,2.291,163,1.584,164,1.584,165,1.584,166,2.291,167,2.291,168,1.584,169,1.584,170,1.584,171,2.951,172,1.584,173,1.584,174,1.584,175,1.584,176,2.291,177,2.291,178,2.291,179,2.291,180,2.692,181,2.291,182,1.584,183,1.584,184,2.291,185,1.584,186,1.584,187,1.584,188,2.692,189,2.291,190,2.291,191,1.584,192,2.692,193,2.291,194,1.584,195,2.692,196,1.741,197,1.584,198,1.867,199,0.943,200,1.867]],["title/interfaces/FtuDataImplEndpoints.html",[61,0.93,201,1.98]],["body/interfaces/FtuDataImplEndpoints.html",[0,0.016,3,0.215,4,0.45,5,0.726,7,0.526,8,0.878,9,0.972,15,0.464,17,0.127,25,2.216,26,1.201,33,0.048,34,0.68,35,0.759,37,0.939,38,0.926,40,0.693,41,0.184,43,0.248,44,0.68,45,0.869,46,0.526,47,0.215,48,1.716,49,1.98,59,0.033,60,0.017,61,0.412,62,0.761,66,1.101,67,1.377,75,1.112,83,1.257,84,1.441,88,1.684,89,1.101,90,1.578,91,0.761,92,0.667,93,0.761,96,0.766,98,2.041,99,0.589,101,1.594,102,1.777,103,1.101,105,1.101,106,2.157,112,0.972,121,1.594,122,0.667,125,0.667,126,1.135,127,0.766,128,1.535,130,1.406,133,1.594,199,0.862,201,1.449,202,0.523,203,0.464,204,0.667,205,2.375,206,1.708,207,1.85,208,1.708,209,2.056,210,2.227,211,2.078,212,3.189,213,2.705,214,1.596,215,1.631,216,1.035,217,1.035,218,1.035,219,1.035,220,1.035,221,2.18,222,2.058,223,1.255,224,1.816,225,2.056,226,1.805,227,1.406,228,0.761,229,0.972,230,0.761,231,0.878,232,1.449,233,0.761,234,0.878,235,0.878,236,2.557,237,0.878,238,0.878,239,0.878,240,0.878,241,0.878,242,0.761,243,0.878,244,0.878,245,0.878,246,0.878,247,0.878,248,2.058,249,0.878,250,2.227,251,3.333,252,0.761,253,1.449,254,1.035,255,1.85,256,1.035,257,0.878,258,2.058,259,1.85,260,2.54,261,1.449,262,2.912,263,1.85,264,1.449,265,0.878,266,1.85,267,2.912,268,1.85,269,2.147,270,2.147,271,0.878,272,1.449,273,2.557,274,1.449,275,0.878,276,0.878,277,1.241,278,0.878,279,0.878,280,0.878,281,0.878,282,0.878,283,1.85,284,0.972,285,0.972,286,1.449,287,0.878,288,0.878,289,0.878,290,1.86,291,1.449,292,1.449,293,0.878,294,0.878,295,2.147,296,0.878,297,0.878,298,0.878,299,0.878,300,1.035,301,1.035,302,1.035,303,0.878,304,1.449,305,1.101,306,0.589,307,0.878,308,1.035,309,1.035,310,1.035,311,1.035,312,1.035,313,1.255,314,1.035,315,1.035,316,0.878,317,1.035,318,2.18,319,1.035,320,1.708,321,3.858,322,2.18,323,1.035,324,1.035,325,1.035,326,1.035,327,2.18,328,1.035,329,1.708,330,1.708,331,1.708,332,2.18,333,1.708,334,0.862,335,2.557,336,1.035,337,2.18,338,2.18,339,3.455,340,1.035,341,0.761,342,0.878,343,2.975,344,2.931,345,0.761,346,1.035,347,1.035,348,0.761,349,0.761,350,2.53,351,2.18,352,1.035,353,1.035,354,0.589,355,0.761,356,1.035,357,1.035,358,1.035,359,1.035,360,0.761,361,0.761,362,1.035,363,1.035,364,0.761,365,1.255,366,0.761,367,1.035,368,1.035,369,1.035,370,1.035,371,1.035,372,1.035,373,1.035,374,1.708,375,2.147,376,2.18,377,1.035,378,1.035,379,1.035,380,1.035,381,1.035,382,1.035,383,1.035,384,1.035,385,1.035,386,1.035,387,1.035,388,1.035,389,1.035,390,1.035,391,1.035,392,1.035,393,1.035,394,1.035,395,1.035,396,2.18,397,1.035,398,1.035,399,3.189,400,1.035,401,1.035,402,1.035,403,2.18,404,1.035,405,1.035,406,1.035,407,1.035,408,1.035,409,1.035,410,0.878,411,1.035,412,2.18,413,1.035,414,1.708,415,1.035,416,1.708,417,1.035,418,1.035,419,1.035,420,1.035,421,1.035,422,2.18,423,1.035,424,1.035,425,1.035,426,2.18,427,0.878,428,0.878,429,1.035,430,1.035,431,1.035,432,0.761,433,1.035,434,1.035,435,1.035,436,1.035,437,1.035,438,1.035,439,1.035,440,1.035,441,1.035,442,1.035,443,1.035,444,1.035,445,1.035,446,1.603,447,2.18,448,1.708,449,1.035,450,2.058,451,1.708,452,1.035,453,0.589,454,0.761,455,0.761,456,0.589,457,1.035,458,1.035,459,1.708,460,1.035,461,1.035,462,1.035,463,1.035,464,1.035,465,1.035,466,1.035,467,1.708,468,1.035,469,1.035,470,1.035,471,2.18,472,1.035,473,1.035,474,1.035,475,1.035]],["title/injectables/FtuDataImplService.html",[0,0.022,313,1.716]],["body/injectables/FtuDataImplService.html",[0,0.015,2,0.299,3,0.199,4,0.367,5,0.691,7,0.698,8,1.36,9,1.176,15,0.719,17,0.118,18,0.566,22,1.653,23,1.026,25,2.676,26,1.451,32,1.204,33,0.048,34,1.228,35,0.772,36,1.204,37,0.981,38,1.013,40,0.671,41,0.171,43,0.23,44,0.639,45,0.823,46,0.502,47,0.199,48,1.653,49,1.961,59,0.032,60,0.016,61,0.382,67,1.337,75,1.082,83,1.312,84,1.374,88,1.615,89,1.033,90,1.549,91,0.705,92,0.618,93,0.705,96,0.719,98,2.072,99,0.546,101,1.529,102,1.744,103,1.033,105,1.043,106,2.186,112,0.913,121,1.529,122,0.618,125,0.618,126,1.204,127,1.083,128,1.518,130,1.332,133,1.529,199,1.466,201,0.813,202,0.484,203,0.43,204,0.618,205,2.047,206,0.959,207,1.36,208,0.959,209,1.556,210,1.731,211,1.755,212,2.413,213,2.047,214,1.382,215,1.332,216,0.959,217,0.959,218,0.959,219,0.959,220,0.959,221,2.065,222,1.974,223,1.178,224,1.911,225,2.164,226,1.986,227,1.332,228,0.705,229,1.911,230,0.705,231,0.813,232,1.36,233,0.705,234,0.813,235,0.813,236,2.463,237,0.813,238,0.813,239,0.813,240,0.813,241,0.813,242,0.705,243,0.813,244,0.813,245,0.813,246,0.813,247,0.813,248,1.974,249,0.813,250,2.164,251,3.23,252,0.705,253,1.36,254,0.959,255,1.752,256,0.959,257,0.813,258,1.974,259,1.752,260,2.467,261,1.36,262,2.858,263,1.752,264,1.36,265,0.813,266,1.752,267,3.066,268,1.752,269,2.047,270,2.047,271,0.813,272,1.36,273,2.463,274,1.36,275,0.813,276,0.813,277,1.176,278,0.813,279,0.813,280,0.813,281,0.813,282,0.813,283,1.752,284,0.913,285,0.913,286,1.36,287,0.813,288,0.813,289,0.813,290,2.134,291,1.36,292,1.36,293,0.813,294,0.813,295,2.047,296,0.813,297,0.813,298,0.813,299,0.813,300,0.959,301,0.959,302,0.959,303,0.813,304,1.36,305,1.033,306,0.546,307,0.813,308,0.959,309,0.959,310,0.959,311,0.959,312,0.959,313,1.774,314,1.603,315,1.603,316,1.36,317,1.603,318,2.065,319,0.959,320,1.603,321,3.778,322,2.065,323,0.959,324,0.959,325,0.959,326,0.959,327,2.065,328,0.959,329,1.603,330,1.603,331,1.603,332,2.065,333,1.603,334,1.043,335,3.089,336,0.959,337,2.065,338,2.065,339,3.356,340,0.959,341,1.774,342,1.36,343,2.924,344,3.205,345,1.178,346,0.959,347,0.959,348,1.774,349,1.178,350,2.413,351,2.065,352,0.959,353,0.959,354,1.374,355,1.178,356,0.959,357,0.959,358,0.959,359,0.959,360,1.774,361,1.178,362,0.959,363,0.959,364,1.774,365,1.774,366,1.178,367,0.959,368,0.959,369,0.959,370,0.959,371,0.959,372,0.959,373,0.959,374,1.603,375,2.047,376,2.065,377,0.959,378,0.959,379,0.959,380,0.959,381,0.959,382,0.959,383,0.959,384,0.959,385,0.959,386,0.959,387,0.959,388,0.959,389,0.959,390,0.959,391,0.959,392,0.959,393,0.959,394,0.959,395,0.959,396,2.065,397,0.959,398,0.959,399,3.081,400,0.959,401,0.959,402,0.959,403,2.065,404,0.959,405,0.959,406,0.959,407,0.959,408,0.959,409,0.959,410,0.813,411,0.959,412,2.065,413,0.959,414,1.603,415,0.959,416,1.603,417,0.959,418,0.959,419,0.959,420,0.959,421,0.959,422,2.065,423,0.959,424,0.959,425,0.959,426,2.065,427,0.813,428,0.813,429,0.959,430,0.959,431,0.959,432,0.705,433,0.959,434,0.959,435,0.959,436,0.959,437,0.959,438,0.959,439,0.959,440,0.959,441,0.959,442,0.959,443,0.959,444,0.959,445,0.959,446,1.518,447,2.065,448,1.603,449,0.959,450,1.974,451,1.603,452,0.959,453,0.546,454,0.705,455,0.705,456,0.546,457,0.959,458,0.959,459,1.603,460,0.959,461,0.959,462,0.959,463,0.959,464,0.959,465,0.959,466,0.959,467,1.603,468,0.959,469,0.959,470,0.959,471,2.065,472,0.959,473,0.959,474,0.959,475,0.959,476,1.18,477,1.18,478,1.18,479,1.18,480,1.18,481,1.18]],["title/injectables/FtuDataService.html",[0,0.022,229,1.329]],["body/injectables/FtuDataService.html",[0,0.03,2,0.743,3,0.495,4,0.643,5,0.643,7,0.804,9,1.822,17,0.293,18,1.13,23,1.468,26,1.54,32,1.809,33,0.047,34,1.607,35,0.838,36,1.809,37,1.078,38,1.111,40,0.804,41,0.423,43,0.571,46,0.495,47,0.495,59,0.032,60,0.032,72,2.634,74,3.279,83,1.366,88,1.44,96,1.067,98,2.105,99,1.355,126,1.621,128,1.366,199,1.952,202,2.143,203,1.904,211,1.822,214,1.435,215,2.492,224,1.355,225,1.534,226,2.33,227,1.534,228,1.749,229,1.822,334,1.952,341,2.352,343,2.965,345,2.352,348,2.352,349,2.352,354,1.822,355,2.352,360,2.352,361,2.352,364,2.352,366,2.352,482,2.926,483,3.199,484,3.935,485,3.935,486,2.926,487,5.308,488,2.926,489,4.755,490,2.926,491,2.926,492,2.926,493,2.926]],["title/modules/HraServiceModule.html",[494,2.334,495,1.98]],["body/modules/HraServiceModule.html",[1,3.308,3,0.675,4,0.577,5,0.577,16,2.22,33,0.047,40,0.922,41,0.577,46,0.675,47,0.675,59,0.039,60,0.039,126,1.875,203,1.749,209,2.092,210,2.092,211,1.848,214,1.456,229,2.22,230,2.386,233,2.866,313,2.866,495,3.308,496,2.753,497,3.992,498,4.796,499,3.992,500,3.992,501,3.992,502,3.992,503,4.179,504,4.796,505,3.992,506,3.992,507,3.992,508,4.796,509,3.992,510,3.992]],["title/injectables/MockContactService.html",[0,0.022,511,2.334]],["body/injectables/MockContactService.html",[0,0.036,2,0.965,3,0.642,4,0.549,5,0.549,7,0.642,15,1.697,16,2.535,17,0.38,18,1.337,19,3.211,20,2.782,21,2.87,22,1.759,23,1.092,24,3.09,28,2.638,32,1.386,33,0.047,34,1.231,35,0.85,36,1.386,37,0.742,38,0.982,40,0.85,41,0.549,42,3.09,43,0.742,44,1.231,45,1.231,46,0.642,47,0.909,59,0.037,60,0.037,69,3.211,75,1.182,106,1.56,127,1.697,196,2.44,365,2.782,511,3.784,512,3.801,513,3.784,514,4.655,515,4.655,516,4.655,517,4.655,518,3.801,519,3.801,520,3.801,521,3.801]],["title/injectables/MockFtuDataService.html",[0,0.022,522,2.334]],["body/injectables/MockFtuDataService.html",[0,0.024,2,0.532,3,0.354,4,0.449,5,0.303,7,0.774,15,1.132,17,0.21,18,1.176,22,2.12,23,1.316,25,3.167,26,1.683,32,1.594,33,0.048,34,1.416,35,0.739,36,1.594,37,1.014,38,1.084,40,0.801,41,0.303,43,0.409,44,0.678,45,0.678,46,0.354,47,0.801,48,2.12,49,1.132,59,0.025,60,0.025,80,0.764,83,1.362,88,1.483,90,1.006,96,0.764,98,2.097,99,0.969,102,1.872,105,1.275,106,2.234,121,2.254,126,1.132,127,1.895,128,1.475,129,1.098,132,1.856,196,1.628,199,1.88,202,0.86,203,0.764,211,0.969,214,0.764,215,1.098,224,2.12,225,2.292,226,2.292,227,1.098,228,1.252,229,2.377,230,1.252,242,1.252,260,1.252,267,3.214,284,0.969,285,0.969,290,1.856,305,2.777,334,1.275,335,3.49,341,2.447,342,2.142,343,2.613,344,3.49,345,1.856,348,2.447,349,1.856,354,1.895,355,1.856,360,2.447,361,1.856,364,2.447,365,2.447,366,1.856,432,1.252,446,1.252,450,1.252,453,0.969,454,1.252,455,1.252,456,0.969,503,2.525,513,2.525,522,2.525,523,1.702,524,3.106,525,3.106,526,2.094,527,2.094,528,2.094,529,2.094,530,2.094,531,2.094,532,1.444,533,0.969,534,2.094,535,1.702,536,2.525,537,2.525,538,2.525,539,2.525,540,2.525,541,2.525,542,2.525,543,2.525,544,2.525,545,3.958,546,3.723,547,3.723,548,2.525,549,2.525,550,2.525,551,2.525,552,2.525,553,2.525,554,2.525,555,2.525,556,2.525,557,1.702,558,1.702,559,1.702,560,1.702,561,1.702,562,3.009,563,2.525,564,1.702,565,2.525,566,1.702,567,1.702,568,2.094,569,2.094,570,2.094,571,2.094]],["title/injectables/MockTissueFtuService.html",[0,0.022,572,2.334]],["body/injectables/MockTissueFtuService.html",[0,0.027,2,0.613,3,0.408,4,0.349,5,0.349,7,0.408,15,1.255,17,0.242,18,0.989,22,1.594,23,0.989,26,1.418,33,0.047,37,0.672,38,0.903,40,0.782,41,0.349,43,0.471,44,0.782,45,0.782,46,0.582,47,0.408,49,1.255,59,0.028,60,0.028,67,1.558,72,1.594,75,0.613,79,0.88,80,0.88,83,0.989,90,1.115,92,1.265,102,1.879,103,1.804,106,1.797,127,0.88,128,1.329,129,1.265,196,2.522,214,2.067,277,2.142,284,1.594,285,1.594,306,1.117,354,2.026,453,2.624,456,1.594,532,1.664,533,1.117,535,1.961,572,2.799,573,1.664,574,3.415,575,3.912,576,2.413,577,2.413,578,2.413,579,2.057,580,2.413,581,1.664,582,1.961,583,2.057,584,1.961,585,1.961,586,2.413,587,1.961,588,1.961,589,1.961,590,2.799,591,2.799,592,2.799,593,2.799,594,2.768,595,3.192,596,3.415,597,1.664,598,1.961,599,1.961,600,1.961,601,3.744,602,3.263,603,3.263,604,4.116,605,2.374,606,3.263,607,4.3,608,3.554,609,2.799,610,3.558,611,3.558,612,4.509,613,3.912,614,3.762,615,1.961,616,2.799,617,3.263,618,3.762,619,4.189,620,1.961,621,2.799,622,1.961,623,1.961,624,1.961,625,3.558,626,1.961,627,2.799,628,1.961,629,3.263,630,3.558,631,1.961,632,1.961,633,2.799,634,2.799,635,3.263,636,1.961,637,1.961,638,1.961,639,1.961,640,1.961,641,1.961,642,1.961,643,1.961,644,1.961,645,1.961,646,1.961,647,3.912,648,3.762,649,3.762,650,1.961,651,1.961,652,1.961,653,1.961,654,1.961,655,2.799,656,1.961,657,1.961,658,1.961,659,2.413,660,2.413]],["title/injectables/MockTissueLibraryService.html",[0,0.022,197,1.98]],["body/injectables/MockTissueLibraryService.html",[0,0.026,2,0.588,3,0.391,4,0.335,5,0.621,7,0.391,15,1.431,17,0.232,18,0.96,22,1.072,23,0.665,33,0.048,35,0.391,37,0.452,38,0.766,40,0.802,41,0.335,43,0.452,44,0.75,45,1.083,46,0.565,47,0.391,48,1.072,49,1.661,59,0.027,60,0.027,61,0.75,67,1.653,75,0.849,78,1.598,79,0.845,80,0.845,81,1.384,82,1.883,83,1.363,84,1.548,86,1.883,87,1.883,88,1.585,89,1.752,90,1.678,91,1.384,92,1.214,93,1.384,94,2.836,95,1.883,96,1.219,97,1.598,98,1.219,99,1.072,100,2.306,101,1.548,102,1.566,103,1.752,104,2.306,105,1.763,106,1.61,107,1.883,108,1.883,109,1.883,110,2.567,111,2.722,112,1.548,113,1.998,114,2.718,115,1.883,116,2.718,117,1.883,118,2.718,119,1.883,120,1.883,121,1.816,122,1.214,123,1.883,124,3.573,125,1.214,126,2.028,127,1.431,128,0.665,129,1.214,130,1.214,131,1.598,132,3.05,133,2.319,134,2.306,135,2.963,136,3.273,137,2.706,138,3.822,139,3.822,140,3.822,141,2.706,142,2.306,143,1.598,144,1.598,145,2.963,146,2.306,147,3.141,148,2.963,149,2.963,150,2.306,151,2.963,152,1.598,153,1.598,154,2.306,155,1.598,156,2.306,157,2.706,158,2.306,159,1.598,160,1.598,161,2.306,162,2.306,163,1.598,164,1.598,165,1.598,166,2.306,167,2.306,168,1.598,169,1.598,170,1.598,171,2.963,172,1.598,173,1.598,174,1.598,175,1.598,176,2.306,177,2.306,178,2.306,179,2.306,180,2.706,181,2.306,182,1.598,183,1.598,184,2.306,185,1.598,186,1.598,187,1.598,188,2.706,189,2.306,190,2.306,191,1.598,192,2.706,193,2.306,194,1.598,195,2.706,196,2.251,197,2.306,198,2.718,199,1.763,200,1.883,661,2.317]],["title/injectables/TissueFtuService.html",[0,0.022,574,1.98]],["body/injectables/TissueFtuService.html",[0,0.035,2,0.938,3,0.624,4,0.534,5,0.661,7,0.624,9,2.118,17,0.37,18,1.314,23,1.314,26,1.482,32,1.347,33,0.047,34,1.197,35,0.773,36,1.347,37,0.893,38,1.042,40,0.84,41,0.534,43,0.721,46,0.84,47,0.624,49,1.347,59,0.037,60,0.037,72,2.631,75,0.938,79,1.812,84,1.71,90,1.197,128,1.314,222,2.208,223,2.208,248,2.208,258,2.734,262,2.734,277,2.118,306,1.71,354,2.118,533,2.3,574,3.155,575,4.222,579,2.208,583,3.19,597,3.582,662,2.548,663,5.194,664,4.575,665,3.695,666,3.695,667,3.003,668,3.695]],["title/injectables/TissueLibraryService.html",[0,0.022,94,1.716]],["body/injectables/TissueLibraryService.html",[0,0.037,2,1.022,3,0.68,4,0.582,5,0.582,7,0.68,9,2.231,17,0.403,18,1.385,23,1.156,33,0.047,37,0.786,38,1.007,40,0.872,41,0.582,43,0.786,46,0.68,47,0.68,59,0.039,60,0.039,72,2.476,79,1.758,80,1.758,83,1.571,94,2.881,96,1.468,97,2.776,199,2.195,334,2.195,483,3.919,669,4.026,670,4.026,671,4.821,672,4.821]],["title/dependencies.html",[673,1.962,674,2.375]],["body/dependencies.html",[33,0.045,41,0.645,59,0.041,60,0.041,674,3.532,675,4.464,676,4.464,677,4.464,678,4.464,679,5.121]],["title/miscellaneous/functions.html",[680,1.117,681,2.799]],["body/miscellaneous/functions.html",[17,0.345,32,1.948,33,0.046,34,1.78,35,0.903,36,1.948,37,0.988,59,0.035,60,0.035,67,1.887,75,0.874,79,1.596,80,1.255,81,2.876,88,1.418,90,1.115,100,3.019,101,2.026,102,1.755,104,2.375,105,2.079,110,2.058,111,2.616,112,2.026,113,2.058,128,0.989,133,1.594,202,1.413,203,1.255,204,2.522,277,1.594,284,2.026,285,2.026,296,2.375,297,2.375,298,2.375,299,2.375,303,2.375,304,3.019,305,1.805,306,2.026,307,2.375,456,2.026,533,1.594,573,3.319,579,2.058,581,2.375,582,2.799,583,2.058,584,2.799,585,2.799,587,2.799,588,2.799,589,3.558,590,2.799,591,3.558,592,3.558,593,3.558,594,3.685,595,3.019,596,2.375,680,1.594,681,2.799,682,4.377,683,3.019,684,3.492,685,4.377,686,4.377,687,4.377,688,3.443,689,3.443,690,2.799,691,3.443,692,3.443]],["title/index.html",[17,0.242,693,2.414,694,2.414]],["body/index.html",[33,0.041,59,0.041,60,0.041,316,3.524,334,1.825,581,3.067,695,5.11,696,4.447,697,5.11,698,4.447,699,5.11,700,4.447,701,4.447]],["title/modules.html",[496,2.679]],["body/modules.html",[33,0.042,59,0.042,60,0.042,250,2.371,495,3.12,496,3.12,702,4.523,703,4.523]],["title/overview.html",[704,3.158]],["body/overview.html",[2,1.131,33,0.041,59,0.041,60,0.041,62,2.663,494,3.622,601,3.073,605,3.073,608,3.073,674,3.528,704,3.622,705,5.116,706,4.456,707,4.456]],["title/properties.html",[66,1.805,673,1.962]],["body/properties.html",[33,0.044,59,0.042,60,0.042,66,2.375,708,4.532,709,4.532]],["title/miscellaneous/typealiases.html",[680,1.117,710,3.444]],["body/miscellaneous/typealiases.html",[17,0.355,33,0.036,35,0.964,59,0.036,60,0.036,79,1.627,80,1.295,83,1.588,85,2.887,88,1.659,96,1.867,98,1.627,202,1.832,203,1.627,204,2.923,209,2.339,210,2.339,214,1.78,224,2.259,225,2.558,226,2.558,227,2.558,247,3.078,248,3.463,249,3.078,250,2.339,252,2.667,253,3.078,255,3.078,453,2.259,533,1.644,579,2.667,662,3.078,680,1.644,683,3.98,684,3.366,711,3.551,712,4.567,713,4.881,714,3.628,715,3.968,716,2.887,717,2.887]],["title/miscellaneous/variables.html",[680,1.117,718,2.799]],["body/miscellaneous/variables.html",[4,0.183,5,0.565,7,0.214,17,0.127,28,1.399,33,0.047,35,0.717,44,0.41,45,1.004,59,0.017,60,0.017,67,1.004,75,1.249,79,1.131,80,0.762,81,1.596,83,1.361,84,1.236,88,1.197,89,1.399,90,1.482,98,1.904,101,0.967,102,1.923,105,0.858,110,0.756,111,1.853,112,0.967,113,0.756,121,2.118,122,0.663,124,3.089,125,1.095,126,1.858,127,1.131,128,1.314,129,1.095,130,1.399,131,0.872,132,2.677,133,1.893,134,1.441,135,2.138,136,2.549,137,1.841,138,3.459,139,3.459,140,3.459,141,1.841,142,1.441,143,0.872,144,0.872,145,2.138,146,1.441,147,2.367,148,2.138,149,2.138,150,1.441,151,2.138,152,0.872,153,0.872,154,1.441,155,0.872,156,1.441,157,1.841,158,1.441,159,0.872,160,0.872,161,1.441,162,1.441,163,0.872,164,0.872,165,0.872,166,1.441,167,1.441,168,0.872,169,0.872,170,0.872,171,2.138,172,0.872,173,0.872,174,0.872,175,0.872,176,1.441,177,1.441,178,1.441,179,1.441,180,1.841,181,1.441,182,0.872,183,0.872,184,1.441,185,0.872,186,0.872,187,0.872,188,1.841,189,1.441,190,1.441,191,0.872,192,1.841,193,1.441,194,0.872,195,1.841,202,1.096,203,0.974,204,2.289,205,0.872,207,0.872,209,1.399,210,1.399,211,0.967,213,0.872,214,1.939,215,0.663,222,1.853,223,2.735,224,0.585,231,0.872,232,0.872,233,1.249,234,0.872,235,0.872,236,1.441,237,0.872,238,1.441,239,0.872,240,0.872,241,0.872,242,0.756,243,0.872,244,0.872,245,0.872,246,0.872,250,1.399,252,1.596,257,1.441,258,2.971,259,1.841,260,1.853,261,1.441,262,3.202,263,0.872,264,0.872,265,0.872,266,0.872,267,2.337,268,0.872,269,0.872,270,0.872,271,0.872,272,1.841,273,1.841,274,1.841,275,0.872,276,0.872,277,1.589,278,0.872,279,0.872,280,0.872,281,0.872,282,0.872,283,1.841,284,1.893,285,1.893,286,1.441,287,0.872,288,0.872,289,0.872,290,1.249,291,0.872,292,1.441,293,0.872,294,0.872,295,1.441,305,2.518,306,0.585,334,0.858,375,3.089,410,1.841,427,0.872,428,0.872,432,1.249,446,1.249,450,1.249,453,2.462,454,0.756,455,0.756,456,0.967,523,2.17,532,1.441,533,0.967,536,1.699,537,1.699,538,1.699,539,1.699,540,1.699,541,1.699,542,1.699,543,1.699,544,1.699,545,3.325,546,3.005,547,3.005,548,1.699,549,1.699,550,1.699,551,1.699,552,1.699,553,1.699,554,1.699,555,1.699,556,1.699,557,1.028,558,1.028,559,1.699,560,1.028,561,1.028,562,2.17,563,1.699,564,1.028,565,1.699,566,1.028,567,1.028,573,1.841,583,1.249,594,0.872,595,1.841,596,3.787,597,0.872,598,1.699,599,1.028,600,1.028,601,3.356,602,2.17,603,2.17,604,3.325,605,1.441,606,2.17,607,3.641,608,2.924,609,1.699,610,2.52,611,2.52,612,4.041,613,3.005,614,2.79,615,1.028,616,1.699,617,2.17,618,2.79,619,3.447,620,1.028,621,1.699,622,1.028,623,1.028,624,1.028,625,2.52,626,1.028,627,1.699,628,1.028,629,2.17,630,2.52,631,1.028,632,1.028,633,1.699,634,1.699,635,2.17,636,1.028,637,1.028,638,1.028,639,1.028,640,1.028,641,1.028,642,1.028,643,1.028,644,1.028,645,1.028,646,1.028,647,3.005,648,2.79,649,2.79,650,1.028,651,1.028,652,1.028,653,1.028,654,1.028,655,1.699,656,1.028,657,1.028,658,1.028,662,1.441,667,1.699,680,0.585,683,3.602,684,2.697,690,4.397,712,3.906,714,1.699,715,2.17,716,1.028,717,1.028,718,1.028,719,2.67,720,2.09,721,2.09,722,2.67,723,2.67,724,2.67,725,2.67,726,3.1,727,1.265,728,1.265,729,1.265,730,1.265,731,1.265,732,2.67,733,2.09,734,2.09,735,1.265,736,2.67,737,1.265,738,2.67,739,2.09,740,1.265,741,1.265,742,2.09,743,2.09,744,1.265,745,2.09,746,1.265,747,2.09,748,1.265,749,1.265]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":410,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":709,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":619,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.2",{"_index":611,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.3",{"_index":612,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.4",{"_index":625,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":618,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.7",{"_index":633,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.9",{"_index":655,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":601,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).touppercase",{"_index":301,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["1.0",{"_index":606,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":605,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["101",{"_index":628,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":617,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":646,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["124",{"_index":636,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":649,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":615,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15.1.0",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":607,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":657,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["2000",{"_index":622,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["21",{"_index":640,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["230",{"_index":631,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["244",{"_index":637,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":608,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["332",{"_index":624,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":621,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["45",{"_index":647,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":610,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["57",{"_index":644,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":627,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["601",{"_index":632,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["675",{"_index":642,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":630,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["8",{"_index":635,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":639,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":109,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["_blank",{"_index":54,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["abstract",{"_index":72,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["acc",{"_index":116,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["accepts",{"_index":69,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["acinus",{"_index":178,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["acinus.svg",{"_index":179,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ai",{"_index":246,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":711,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alveolus",{"_index":159,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["alveolus.svg",{"_index":160,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["anchor",{"_index":50,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.click",{"_index":57,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.href",{"_index":55,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.remove",{"_index":58,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.target",{"_index":53,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["ancillary",{"_index":540,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":8,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["angular/common",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":217,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{}}}],["application/pdf",{"_index":245,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":76,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["around",{"_index":551,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":267,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["ascending",{"_index":145,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["assets/temp/2d",{"_index":506,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["assets/temp/ftu",{"_index":508,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["available",{"_index":702,"title":{},"body":{"modules.html":{}}}],["base",{"_index":89,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base/root",{"_index":294,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["base_id",{"_index":124,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base_iri",{"_index":295,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":405,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["between",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bid",{"_index":592,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["biomarker",{"_index":453,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["biomarker.array",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biomarker1",{"_index":604,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker2",{"_index":613,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker3",{"_index":614,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker4",{"_index":650,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker5",{"_index":651,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker6",{"_index":652,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker7",{"_index":653,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker8",{"_index":654,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker_type",{"_index":276,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["biomarkers",{"_index":450,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["biomarkerspresent",{"_index":442,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["biomarkerspresent.has(defaultlabel",{"_index":462,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["blabel",{"_index":593,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["bronchial",{"_index":161,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":703,"title":{},"body":{"modules.html":{}}}],["cache",{"_index":333,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cache.has(url",{"_index":383,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cache.set(url",{"_index":392,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cachediri",{"_index":332,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["capitalize",{"_index":682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalize(defaultlabel",{"_index":463,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["capitalize(str",{"_index":299,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/functions.html":{}}}],["capitalize(summarygroup.biomarker_type",{"_index":460,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["capitalizes",{"_index":296,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/functions.html":{}}}],["case",{"_index":304,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/functions.html":{}}}],["cell",{"_index":214,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell.array",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_id",{"_index":278,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_label",{"_index":279,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source",{"_index":273,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source_item",{"_index":272,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source_item.extend",{"_index":275,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_summaries",{"_index":274,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_summaries).pipe",{"_index":357,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cell_summary",{"_index":252,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell_summary['@graph",{"_index":437,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cell_summary_data",{"_index":559,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["cell_summary_row",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_summary_row.array",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cells",{"_index":446,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["cellsourceitem",{"_index":249,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummary",{"_index":224,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cellsummary.push",{"_index":459,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cellsummaryrow",{"_index":713,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["character",{"_index":298,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/functions.html":{}}}],["child",{"_index":466,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["childlabel",{"_index":117,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childnodes",{"_index":114,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["children",{"_index":112,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["children.reduce",{"_index":115,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childurl",{"_index":118,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["cid",{"_index":590,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["clabel",{"_index":591,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["class",{"_index":47,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["clickable",{"_index":289,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":319,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["clinical",{"_index":542,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["codebook",{"_index":544,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["collecting",{"_index":147,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["collectiong",{"_index":155,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["console",{"_index":517,"title":{},"body":{"injectables/MockContactService.html":{}}}],["console.error('illustration",{"_index":418,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.error(`cell",{"_index":411,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.error(`iri",{"_index":402,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.log('message",{"_index":518,"title":{},"body":{"injectables/MockContactService.html":{}}}],["const",{"_index":49,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{}}}],["constant",{"_index":231,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["constructcellsummaries",{"_index":434,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructcellsummaries(data",{"_index":436,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructs",{"_index":464,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructtissuelibrary(items",{"_index":468,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["contact",{"_index":13,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":42,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/MockContactService.html":{}}}],["contact/contact.impl",{"_index":499,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contact/contact.service",{"_index":500,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contactimplservice",{"_index":1,"title":{"injectables/ContactImplService.html":{}},"body":{"injectables/ContactImplService.html":{},"modules/HraServiceModule.html":{}}}],["contactmessage",{"_index":21,"title":{"interfaces/ContactMessage.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["contactservice",{"_index":16,"title":{"injectables/ContactService.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["contactservice:11",{"_index":24,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/MockContactService.html":{}}}],["content",{"_index":520,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contents",{"_index":516,"title":{},"body":{"injectables/MockContactService.html":{}}}],["converts",{"_index":303,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/functions.html":{}}}],["corpuscle",{"_index":143,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["corpuscle.svg",{"_index":144,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["cortical",{"_index":146,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":284,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["count.optional",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count_integer_error",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count_range_error",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["counts",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":100,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["createcell",{"_index":589,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["createcell('cell1",{"_index":603,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell10",{"_index":641,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell11",{"_index":643,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell12",{"_index":645,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell13",{"_index":648,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell2",{"_index":609,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell3",{"_index":616,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell4",{"_index":620,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell5",{"_index":623,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell6",{"_index":626,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell7",{"_index":629,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell8",{"_index":634,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell9",{"_index":638,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell(cid",{"_index":689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid",{"_index":91,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["createlinkid('ftu",{"_index":122,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["createnodeid",{"_index":685,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnodeid(label",{"_index":104,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":288,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":588,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["crypt",{"_index":167,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":514,"title":{},"body":{"injectables/MockContactService.html":{}}}],["data",{"_index":128,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data.foreach((summarygroup",{"_index":445,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data.impl",{"_index":501,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["data.impl.ts",{"_index":204,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.mock.ts",{"_index":523,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["data.model",{"_index":228,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["data.model.ts",{"_index":712,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.service",{"_index":230,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["data.service.ts",{"_index":482,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:19",{"_index":493,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:25",{"_index":491,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:30",{"_index":490,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:36",{"_index":486,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:42",{"_index":488,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:48",{"_index":492,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data/ftu",{"_index":203,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data['@graph'].filter",{"_index":408,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data['@graph'].find",{"_index":401,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data_file_reference",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data_sources",{"_index":271,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["datafilereference",{"_index":225,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["dataset",{"_index":546,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["dataset_count",{"_index":286,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["datasets",{"_index":209,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["datasets).pipe",{"_index":368,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["datasets.jsonld",{"_index":510,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["datasets['@graph'][number]['data_sources",{"_index":256,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["datasources",{"_index":255,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["default",{"_index":690,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultbiomarkerlables",{"_index":438,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["defaultbiomarkerlables.foreach((defaultlabel",{"_index":461,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["defined",{"_index":23,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["definenode",{"_index":111,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["definenode('large",{"_index":165,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('liver",{"_index":187,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('prostate",{"_index":191,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('thymus",{"_index":194,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode(childlabel",{"_index":119,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["definenode(label",{"_index":691,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defines",{"_index":64,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["dependencies",{"_index":674,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dermal",{"_index":181,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["descending",{"_index":134,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":235,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["document.body.appendchild(anchor",{"_index":52,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["document.createelement('a",{"_index":51,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["duct",{"_index":148,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["duct.svg",{"_index":149,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["dummy",{"_index":536,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":420,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["element",{"_index":291,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":30,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["emails",{"_index":12,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["emits",{"_index":335,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["empty",{"_index":365,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["endpoint",{"_index":212,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["endpoints",{"_index":205,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["entered",{"_index":70,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["entire",{"_index":672,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["entries",{"_index":602,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["entry.biomarker.id",{"_index":565,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.biomarker.label",{"_index":566,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell.id",{"_index":563,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell.label",{"_index":564,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell_id",{"_index":448,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.cell_label",{"_index":449,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.count",{"_index":454,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.dataset_count",{"_index":458,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.gene_id",{"_index":451,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.gene_label",{"_index":452,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.mean_expression",{"_index":457,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.meanexpression",{"_index":567,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.percentage",{"_index":455,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["epidermal",{"_index":184,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":556,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["execute",{"_index":701,"title":{},"body":{"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["extended",{"_index":82,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extendedtissue",{"_index":78,"title":{"interfaces/ExtendedTissue.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extends",{"_index":15,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extract",{"_index":557,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["extracted",{"_index":379,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["extremely",{"_index":548,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":240,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":663,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["fetchdata(iri",{"_index":380,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fetched",{"_index":404,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fetching",{"_index":435,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fetchs",{"_index":371,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["field",{"_index":406,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["file_format",{"_index":266,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["fileformatmapping",{"_index":327,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fileformatmapping['image/svg+xml",{"_index":415,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["files",{"_index":320,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["files.find",{"_index":417,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findcellsummaries(data",{"_index":407,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findgraphitem(data",{"_index":400,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findillustrationurl(files",{"_index":413,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["finds",{"_index":396,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["first",{"_index":297,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/functions.html":{}}}],["firstvaluefrom",{"_index":220,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["firstvaluefrom(resp",{"_index":393,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["format",{"_index":260,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["formated",{"_index":377,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["formates",{"_index":412,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["formats",{"_index":236,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["formats[file_format",{"_index":431,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["forming",{"_index":465,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["found",{"_index":403,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["from(cache.get(url",{"_index":394,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ftu",{"_index":126,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu.mock",{"_index":534,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftu.mock.ts",{"_index":573,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ftu.service",{"_index":580,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["ftu.service.ts",{"_index":662,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu.service.ts:19",{"_index":666,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu.service.ts:22",{"_index":665,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu/2d",{"_index":140,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu/tissue",{"_index":533,"title":{},"body":{"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu_data_impl_endpoints",{"_index":233,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/variables.html":{}}}],["ftu_data_impl_file_format_mapping",{"_index":238,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["ftudataimplendpoints",{"_index":201,"title":{"interfaces/FtuDataImplEndpoints.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ftudataimplservice",{"_index":313,"title":{"injectables/FtuDataImplService.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{}}}],["ftudataservice",{"_index":229,"title":{"injectables/FtuDataService.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["ftudataservice:107",{"_index":529,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:116",{"_index":528,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:125",{"_index":526,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:133",{"_index":527,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:146",{"_index":530,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:159",{"_index":481,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:170",{"_index":479,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:179",{"_index":478,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:191",{"_index":476,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:203",{"_index":477,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:215",{"_index":480,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:99",{"_index":531,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["function",{"_index":103,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["functional",{"_index":315,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["functions",{"_index":681,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":108,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["gene",{"_index":439,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["gene_id",{"_index":280,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["gene_label",{"_index":281,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":696,"title":{},"body":{"index.html":{}}}],["getcellsummaries",{"_index":354,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["getcellsummaries(id",{"_index":664,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["getcellsummaries(iri",{"_index":355,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences",{"_index":360,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences(iri",{"_index":361,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping",{"_index":348,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping(iri",{"_index":349,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl",{"_index":341,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl(iri",{"_index":345,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getreferenceorgans",{"_index":575,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["gets",{"_index":487,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["getsourcereferences",{"_index":364,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getsourcereferences(iri",{"_index":366,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getting",{"_index":693,"title":{"index.html":{}},"body":{}}],["gettissuelibrary",{"_index":199,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["given",{"_index":342,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["gland",{"_index":163,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["gland.svg",{"_index":164,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["glandular",{"_index":193,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["google.com",{"_index":545,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":250,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["greater",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["groupid",{"_index":427,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":10,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["handling",{"_index":314,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["having",{"_index":213,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["helper",{"_index":587,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["henle",{"_index":137,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["henle.svg",{"_index":141,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":555,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["hra",{"_index":92,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["hraservicemodule",{"_index":495,"title":{"modules/HraServiceModule.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["hrt",{"_index":543,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":318,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["http.get(url",{"_index":389,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["http://purl.obolibrary.org/obo",{"_index":425,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["httpclient",{"_index":216,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":138,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["https://purl.humanatlas.io/2d",{"_index":125,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":90,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["id_item",{"_index":257,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["id_item.extend",{"_index":261,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["iditem",{"_index":247,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["illusrationfiles",{"_index":253,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["illustration",{"_index":344,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["illustration_files",{"_index":265,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["illustration_mapping_item",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":226,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["illustrations",{"_index":210,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["illustrations).pipe",{"_index":338,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["illustrations.jsonld",{"_index":507,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["illustrations['@graph",{"_index":469,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["illustrations['@graph'][number]['illustration_files",{"_index":254,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["image/png",{"_index":243,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["image/svg+xml",{"_index":241,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["implementation",{"_index":196,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["import",{"_index":40,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inclusive",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inherited",{"_index":22,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["inject",{"_index":218,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(ftu_data_impl_endpoints",{"_index":325,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(ftu_data_impl_file_format_mapping",{"_index":328,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(httpclient",{"_index":323,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"overview.html":{}}}],["injecting",{"_index":206,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injection",{"_index":326,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectiontoken",{"_index":219,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectiontoken('endpoints",{"_index":234,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken>('mapping",{"_index":239,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":324,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inner",{"_index":150,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":207,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["inside",{"_index":397,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["integer",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercalated",{"_index":176,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":61,"title":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["interfaces",{"_index":62,"title":{},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"overview.html":{}}}],["intestine",{"_index":166,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri",{"_index":98,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iri).data_sources",{"_index":369,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri).illustration_files",{"_index":362,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri).mapping",{"_index":352,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri.array().default",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islates",{"_index":172,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["islets",{"_index":174,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["isreferenceorgan",{"_index":686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isreferenceorgan(obj",{"_index":584,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":399,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["item.length",{"_index":409,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["items",{"_index":467,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["join",{"_index":312,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["json",{"_index":387,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["json.stringify(message",{"_index":521,"title":{},"body":{"injectables/MockContactService.html":{}}}],["kidney",{"_index":132,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["l.slice(1",{"_index":311,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["l[0].touppercase",{"_index":310,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["label",{"_index":102,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["langerhans",{"_index":173,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["langerhans.svg",{"_index":175,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":169,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":330,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["library",{"_index":334,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueLibraryService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["library.mock",{"_index":535,"title":{},"body":{"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{}}}],["library.mock.ts",{"_index":81,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["library.model",{"_index":97,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["library.model.ts",{"_index":715,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["library.service",{"_index":95,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["library.service.ts",{"_index":669,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library.service.ts:9",{"_index":670,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library/tissue",{"_index":80,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn",{"_index":168,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn.svg",{"_index":170,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":553,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":121,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lipid",{"_index":441,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["literal",{"_index":85,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"miscellaneous/typealiases.html":{}}}],["liver",{"_index":188,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":483,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/TissueLibraryService.html":{}}}],["loads",{"_index":671,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["lobule",{"_index":189,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lobule.svg",{"_index":190,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":515,"title":{},"body":{"injectables/MockContactService.html":{}}}],["long",{"_index":549,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["loop",{"_index":136,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lung",{"_index":157,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mailto:${message.email}?subject=${message.subject}&body=${message.message",{"_index":56,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["map",{"_index":221,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["map((data",{"_index":339,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["map((l",{"_index":309,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["mapping",{"_index":268,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["mappings",{"_index":422,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["matching",{"_index":60,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mean_expression",{"_index":282,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["meanexpression",{"_index":456,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medicine",{"_index":538,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["medullary",{"_index":151,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":28,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":595,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":26,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["methods",{"_index":18,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["miscellaneous",{"_index":680,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":127,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_reference_organs",{"_index":598,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_summaries",{"_index":532,"title":{},"body":{"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data",{"_index":129,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data.nodes[iri].object.file",{"_index":570,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["mockcontactservice",{"_index":511,"title":{"injectables/MockContactService.html":{}},"body":{"injectables/MockContactService.html":{}}}],["mockftudataservice",{"_index":522,"title":{"injectables/MockFtuDataService.html":{}},"body":{"injectables/MockFtuDataService.html":{}}}],["mocktissueftuservice",{"_index":572,"title":{"injectables/MockTissueFtuService.html":{}},"body":{"injectables/MockTissueFtuService.html":{}}}],["mocktissuelibraryservice",{"_index":197,"title":{"injectables/MockTissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["modal",{"_index":14,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["module",{"_index":494,"title":{"modules/HraServiceModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":496,"title":{"modules.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":378,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["negative",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nephron",{"_index":152,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nephron.svg",{"_index":153,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":101,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":552,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":498,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["node",{"_index":110,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":130,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nodes[id",{"_index":474,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["nodes[parentid",{"_index":472,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["nodes[parentid]?.children.push(id",{"_index":475,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["non",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":594,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":697,"title":{},"body":{"index.html":{}}}],["obeservable",{"_index":489,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["obj",{"_index":585,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["obj['object']['file",{"_index":586,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["object",{"_index":75,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":131,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(childnodes",{"_index":123,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["object.values(mock_summaries).map((summary",{"_index":560,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["object.values(mock_tissue_data.nodes).filter(isreferenceorgan",{"_index":599,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["objecy",{"_index":86,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["observable",{"_index":38,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["of(cell_summary_data",{"_index":569,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["of(mock_reference_organs",{"_index":659,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_summaries",{"_index":660,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_tissue_data",{"_index":200,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["of(mock_tissue_data.nodes[iri].object.file",{"_index":568,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["of(sourcereferences",{"_index":571,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["om",{"_index":558,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["ontologyid",{"_index":428,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["ontologyidprefix",{"_index":424,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["open",{"_index":421,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["operations",{"_index":317,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["optional",{"_index":36,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["opts",{"_index":384,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["opts).pipe(map((data",{"_index":390,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["organ",{"_index":306,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["organ_id",{"_index":263,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["organ_label",{"_index":264,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":597,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":707,"title":{},"body":{"overview.html":{}}}],["outer",{"_index":154,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":48,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["overrides",{"_index":25,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["overview",{"_index":704,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":547,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":673,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pancreas",{"_index":171,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["pancreatic",{"_index":177,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla",{"_index":182,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla.svg",{"_index":183,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":343,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":385,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["parent",{"_index":105,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parentid",{"_index":471,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["parent}${label.replace",{"_index":107,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["parses",{"_index":373,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["path",{"_index":208,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["peer",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":285,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["percentage_range_error",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["percentage_range_error).lte(1",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png",{"_index":244,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["precision",{"_index":537,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":321,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["project",{"_index":539,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":395,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["properties",{"_index":66,"title":{"properties.html":{}},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"properties.html":{}}}],["prostate",{"_index":192,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["protein",{"_index":440,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["provide",{"_index":503,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["providedin",{"_index":44,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":502,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["provides",{"_index":293,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["pulmonary",{"_index":158,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["purposes",{"_index":525,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["read",{"_index":232,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["reading",{"_index":372,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["readonly",{"_index":322,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["received",{"_index":519,"title":{},"body":{"injectables/MockContactService.html":{}}}],["recipient",{"_index":31,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["record",{"_index":113,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":416,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ref.url",{"_index":419,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["reference",{"_index":583,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":667,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["referenceorgan",{"_index":579,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["references",{"_index":215,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["reflecting",{"_index":259,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":484,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["releases/v1.3/2d",{"_index":139,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["renal",{"_index":142,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["representation_of",{"_index":84,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["representation_of.slice(ontologyidprefix.length",{"_index":429,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["representing",{"_index":73,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["represents",{"_index":513,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["requested",{"_index":374,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["reset",{"_index":706,"title":{},"body":{"overview.html":{}}}],["resp",{"_index":388,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["responsetype",{"_index":386,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["results",{"_index":59,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":426,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["retrived",{"_index":331,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["return",{"_index":106,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ridge",{"_index":185,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ridge.svg",{"_index":186,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":45,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":700,"title":{},"body":{"index.html":{}}}],["running",{"_index":698,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":43,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["same",{"_index":717,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema",{"_index":375,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["schema.parse(data",{"_index":391,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["see",{"_index":554,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":27,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["sending",{"_index":11,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["sendmessage",{"_index":19,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["sendmessage(message",{"_index":20,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["service",{"_index":9,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["services",{"_index":695,"title":{},"body":{"index.html":{}}}],["set(data.map((summary",{"_index":443,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["shared/common.model",{"_index":99,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["single",{"_index":485,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["skin",{"_index":180,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source_reference",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourcereference",{"_index":227,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["sourcereferences",{"_index":432,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":308,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["src/.../common.model.ts",{"_index":714,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ftu",{"_index":683,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":684,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.impl.ts",{"_index":6,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["src/lib/contact/contact.mock.ts",{"_index":512,"title":{},"body":{"injectables/MockContactService.html":{}}}],["src/lib/contact/contact.service.ts",{"_index":63,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["src/lib/contact/contact.service.ts:18",{"_index":77,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/lib/ftu",{"_index":202,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/service.module.ts",{"_index":497,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["src/lib/shared/common.model.ts",{"_index":716,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/tissue",{"_index":79,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":694,"title":{"index.html":{}},"body":{}}],["stoe",{"_index":87,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["stores",{"_index":329,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["str",{"_index":688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["str.slice(0",{"_index":300,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["str.slice(1",{"_index":302,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["string",{"_index":67,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["study",{"_index":541,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":65,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["submucosal",{"_index":162,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["summaries",{"_index":211,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summaries.jsonld",{"_index":509,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["summary",{"_index":277,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary.biomarker_type.tolowercase",{"_index":444,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["summary.entries.map((entry",{"_index":562,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summary.label",{"_index":561,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summary1",{"_index":600,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summary2",{"_index":656,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summary3",{"_index":658,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summarygroup.summary.map((entry",{"_index":447,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["supported",{"_index":237,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":242,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["svg_group_id",{"_index":270,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["svg_id",{"_index":269,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["svgformat",{"_index":414,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["synonymlabels",{"_index":120,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["t",{"_index":251,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tag",{"_index":398,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["takes",{"_index":74,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{}}}],["template",{"_index":376,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["test",{"_index":581,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["testing",{"_index":524,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["tests",{"_index":699,"title":{},"body":{"index.html":{}}}],["thick",{"_index":156,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":135,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["this.cache",{"_index":382,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.cachediri",{"_index":381,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.constructcellsummaries(data",{"_index":359,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.constructtissuelibrary(data['@graph",{"_index":340,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.datasets",{"_index":367,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.illustrations",{"_index":337,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.summaries",{"_index":356,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.fetchdata(iri",{"_index":350,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.fetchdata(undefined",{"_index":336,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findcellsummaries(data",{"_index":358,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findgraphitem(data",{"_index":351,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findillustrationurl(data",{"_index":347,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.getdatafilereferences(iri).pipe(map((data",{"_index":346,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.todatafilereferences(data",{"_index":363,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.toillustrationmapping(data",{"_index":353,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.tosourcereferences(data",{"_index":370,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["thymus",{"_index":195,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue",{"_index":83,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tissue_library",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tissue_link",{"_index":292,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["tissueftuservice",{"_index":574,"title":{"injectables/TissueFtuService.html":{}},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["tissueftuservice:94",{"_index":577,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissueftuservice:99",{"_index":576,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissuelibrary",{"_index":96,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrary['nodes",{"_index":470,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tissuelibraryservice",{"_index":94,"title":{"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["tissuelibraryservice.gettissuelibrary",{"_index":198,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["tissuelibraryservice:162",{"_index":661,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["title",{"_index":305,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["titlecase",{"_index":687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["titlecase(name",{"_index":307,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/functions.html":{}}}],["titlecase(organ_label",{"_index":473,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["todatafilereferences(data",{"_index":430,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["toillustrationmapping",{"_index":423,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tosourcereferences(data",{"_index":433,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tree",{"_index":290,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":35,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":710,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui/cdk/state",{"_index":93,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["ui/utils/types",{"_index":578,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["undefined",{"_index":133,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":316,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"index.html":{}}}],["unknown",{"_index":668,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["url",{"_index":88,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["url.brand('iri",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":504,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["user",{"_index":71,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["usevalue",{"_index":505,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["value",{"_index":596,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":68,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["variables",{"_index":718,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":708,"title":{},"body":{"properties.html":{}}}],["via",{"_index":29,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["void",{"_index":39,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["whether",{"_index":582,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["wraps",{"_index":550,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":222,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.infer",{"_index":248,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{}}}],["z.number",{"_index":283,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["z.number().gte(0",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().int(count_integer_error).nonnegative(count_range_error",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().optional",{"_index":287,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":258,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.record(iri",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":262,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.string().optional",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().url",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().url().brand('url",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zero",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zod",{"_index":223,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":705,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ContactImplService.html":{"url":"injectables/ContactImplService.html","title":"injectable - ContactImplService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactImplService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.impl.ts\n        \n\n\n            \n                Description\n            \n            \n                ContactImplService - Angular service that handles sending emails from the contact modal\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    Overrides the sendMessage method to send message via email to the recipient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ContactMessage, ContactService } from './contact.service';\nimport { Observable } from 'rxjs';\n\n/** ContactImplService - Angular service that handles sending emails from the contact modal */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactImplService extends ContactService {\n  /** Overrides the sendMessage method to send message via email to the recipient */\n  override sendMessage(message: ContactMessage): Observable | void {\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n    anchor.target = '_blank';\n    anchor.href = `mailto:${message.email}?subject=${message.subject}&body=${message.message}`;\n    anchor.click();\n    anchor.remove();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactMessage.html":{"url":"interfaces/ContactMessage.html","title":"interface - ContactMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A interface contact which defines email, subject, and the message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable email which accepts the email entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable message which accepts the message entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable subject which accepts the subject entered by user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable | void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a ContactService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/contact/contact.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes a ContactMessage object as an argument and returns an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable | void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedTissue.html":{"url":"interfaces/ExtendedTissue.html","title":"interface - ExtendedTissue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtendedTissue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Extended tissue\n\n            \n\n            \n                Extends\n            \n            \n                        Tissue\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Objecy to stoe the file URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Base Id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://purl.humanatlas.io/2d-ftu/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FtuDataImplEndpoints.html":{"url":"interfaces/FtuDataImplEndpoints.html","title":"interface - FtuDataImplEndpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FtuDataImplEndpoints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.impl.ts\n        \n\n\n            \n                Description\n            \n            \n                Endpoints for Injecting input path\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            datasets\n                                        \n                                \n                                \n                                        \n                                            illustrations\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datasets:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell Source References data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        illustrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        illustrations:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell illustrations data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell Summaries data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, InjectionToken } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, firstValueFrom, from, map } from 'rxjs';\nimport { z } from 'zod';\n\nimport { IRI, Iri, URL, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/** Endpoints for Injecting input path */\nexport interface FtuDataImplEndpoints {\n  /** Endpoint for File having Cell illustrations data */\n  illustrations: Url;\n  /** Endpoint for File having Cell Summaries data */\n  summaries: Url;\n  /** Endpoint for File having Cell Source References data */\n  datasets: Url;\n}\n/** Constant  to read the endpoints */\nexport const FTU_DATA_IMPL_ENDPOINTS = new InjectionToken('Endpoints');\n\n/** Input to different file formats supported */\nexport const FTU_DATA_IMPL_FILE_FORMAT_MAPPING = new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n});\n\ntype IdItem = z.infer;\ntype CellSourceItem = z.infer;\ntype Graph = { '@graph': T[] };\ntype Illustrations = z.infer;\ntype Datasets = z.infer;\ntype Cell_Summary = z.infer;\ntype IllusrationFiles = Illustrations['@graph'][number]['illustration_files'];\ntype dataSources = Datasets['@graph'][number]['data_sources'];\n\n/** Base ID Object */\nconst ID_ITEM = z.object({\n  '@id': IRI,\n});\n\n/** ILLUSTRATIONS Object reflecting the format in the file*/\nconst ILLUSTRATIONS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: z.string(),\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        svg_group_id: z.string(),\n        label: z.string(),\n        representation_of: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** DATASETS Object reflecting the format in the file*/\nconst DATASETS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Base CELL_SOURCE_ITEM Object  having cell_source */\nconst CELL_SOURCE_ITEM = z.object({\n  cell_source: IRI,\n});\n\n/** CELL_SUMMARIES zod Object reflecting the format in the file*/\nconst CELL_SUMMARIES = z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Creates clickable link for the tissue tree element */\nconst TISSUE_LINK = createLinkId('FTU');\n\n/** Provides Base/root url for the tissue tree */\nconst BASE_IRI = 'https://purl.humanatlas.io/2d-ftu/' as Iri;\n\n/** Capitalizes the first character */\nfunction capitalize(str: string): string {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n}\n\n/** Converts case to title case for organ name */\nfunction titleCase(name: string) {\n  return name\n    .split(' ')\n    .map((l: string) => l[0].toUpperCase() + l.slice(1))\n    .join(' ');\n}\n\n/**\n * FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FtuDataImplService extends FtuDataService {\n  /** http client to read files */\n  private readonly http = inject(HttpClient);\n\n  /** Endpoints injector to the service */\n  private readonly endpoints = inject(FTU_DATA_IMPL_ENDPOINTS);\n  /** Endpoint injection for file formats */\n  private readonly fileFormatMapping = inject(FTU_DATA_IMPL_FILE_FORMAT_MAPPING);\n  /** Stores the last retrived Tissue Iri */\n  private cachedIri?: Iri;\n  /** Stores the last retrived data for tissue */\n  private cache = new Map>();\n\n  /**\n  Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n  @returns An Observable that emits the tissue Tree data.\n  */\n  override getTissueLibrary(): Observable {\n    return this.fetchData(undefined, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.constructTissueLibrary(data['@graph']))\n    );\n  }\n\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return this.getDataFileReferences(iri).pipe(map((data) => this.findIllustrationUrl(data)));\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).mapping),\n      map((data) => (data ? this.toIllustrationMapping(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.summaries, CELL_SUMMARIES).pipe(\n      map((data) => this.findCellSummaries(data, iri)),\n      map((data) => (data ? this.constructCellSummaries(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).illustration_files),\n      map((data) => (data ? this.toDataFileReferences(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.datasets, DATASETS).pipe(\n      map((data) => this.findGraphItem(data, iri).data_sources),\n      map((data) => (data ? this.toSourceReferences(data) : []))\n    );\n  }\n\n  /**\n   * Fetchs data after reading the file and parses with the requested schema\n   * @template T : Schema to be formated\n   * @param iri : Tissue iri\n   * @param url : File Url\n   * @param schema :  Format needed to be extracted\n   * @returns data\n   */\n  private fetchData(iri: Iri | undefined, url: Url, schema: T): Observable> {\n    const { http, cachedIri, cache } = this;\n    if (iri !== undefined && iri !== cachedIri) {\n      this.cachedIri = iri;\n      this.cache = new Map();\n    }\n    if (!cache.has(url)) {\n      const opts = { params: { id: iri ?? '' }, responseType: 'json' as const };\n      const resp = http.get(url, opts).pipe(map((data) => schema.parse(data)));\n      cache.set(url, firstValueFrom(resp));\n    }\n    return from(cache.get(url) as Promise>);\n  }\n\n  /**\n   * Finds object inside the @graph tag for the requested id element\n   * @template T\n   * @param data\n   * @param iri\n   * @returns graph item\n   */\n  private findGraphItem(data: Graph, iri: Iri): T {\n    const item = data['@graph'].find(({ '@id': id }) => id === iri);\n    if (item === undefined) {\n      console.error(`Iri not found in data: ${iri}`);\n      return {} as T;\n    }\n\n    return item;\n  }\n\n  /**\n   * Finds cell summaries from fetched Data based on cell_source field\n   * @template T\n   * @param data\n   * @param iri\n   * @returns cell summaries\n   */\n  private findCellSummaries(data: Graph, iri: Iri): T[] {\n    const item = data['@graph'].filter(({ cell_source }) => cell_source === iri);\n    if (item === undefined || item.length == 0) {\n      console.error(`Cell Summary not found in data: ${iri}`);\n      return [];\n    }\n    return item;\n  }\n\n  /**\n   * Finds illustration url and formates it to Url\n   * @param files\n   * @returns illustration url\n   */\n  private findIllustrationUrl(files: DataFileReference[]): string {\n    const { fileFormatMapping } = this;\n    const svgFormat = fileFormatMapping['image/svg+xml'];\n    const ref = files.find(({ format }) => format === svgFormat);\n    if (ref === undefined) {\n      console.error('Illustration url not found');\n      return '' as Url;\n    }\n    return ref.url;\n  }\n\n  /**\n   * To illustration mapping for each tissue open\n   * @param mappings\n   * @returns illustration mapping\n   */\n  private toIllustrationMapping(\n    mappings: { label: string; svg_id: string; svg_group_id: string; representation_of: string }[]\n  ): IllustrationMappingItem[] {\n    const ontologyIdPrefix = 'http://purl.obolibrary.org/obo/';\n    const results: IllustrationMappingItem[] = [];\n    for (const { label, svg_id, svg_group_id, representation_of } of mappings) {\n      results.push({\n        label,\n        id: svg_id,\n        groupId: svg_group_id,\n        ontologyId: representation_of.slice(ontologyIdPrefix.length),\n      });\n    }\n\n    return results;\n  }\n\n  /**\n   * Formates data to array of DataFileReference format\n   * @param data\n   * @returns data file references\n   */\n  private toDataFileReferences(data: IllusrationFiles): DataFileReference[] {\n    const { fileFormatMapping: formats } = this;\n    const results: DataFileReference[] = [];\n    for (const { file, file_format } of data) {\n      if (file_format in formats) {\n        results.push({ format: formats[file_format], url: file });\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Formats data from 'dataSources' to 'SourceReferences'[] format\n   * @param data\n   * @returns source references\n   */\n  private toSourceReferences(data: dataSources): SourceReference[] {\n    const results: SourceReference[] = [];\n    for (const { label, link, description } of data) {\n      results.push({ label, link, title: description });\n    }\n    return results;\n  }\n\n  /**\n   * constructCellSummaries : Formates Cell Summary after fetching the data\n   * @param data\n   * @returns\n   */\n  private constructCellSummaries(data: Cell_Summary['@graph']): CellSummary[] {\n    const cellSummary: CellSummary[] = [];\n    const defaultBiomarkerLables = ['gene', 'protein', 'lipid'];\n    const biomarkersPresent = new Set(data.map((summary) => summary.biomarker_type.toLowerCase()));\n    data.forEach((summaryGroup) => {\n      const cells = summaryGroup.summary.map((entry) => ({\n        id: entry.cell_id as Iri,\n        label: entry.cell_label,\n      }));\n      const biomarkers = summaryGroup.summary.map((entry) => ({\n        id: entry.gene_id as Iri,\n        label: entry.gene_label,\n      }));\n      const summaries = summaryGroup.summary.map((entry) => ({\n        cell: entry.cell_id as Iri,\n        biomarker: entry.gene_id as Iri,\n        count: entry.count,\n        percentage: entry.percentage,\n        meanExpression: entry.mean_expression,\n        dataset_count: entry.dataset_count,\n      }));\n      cellSummary.push({\n        label: `${capitalize(summaryGroup.biomarker_type)} Biomarkers`,\n        cells,\n        biomarkers,\n        summaries,\n      });\n    });\n    defaultBiomarkerLables.forEach((defaultLabel) => {\n      if (!biomarkersPresent.has(defaultLabel)) {\n        cellSummary.push({\n          label: `${capitalize(defaultLabel)} Biomarkers`,\n          cells: [],\n          biomarkers: [],\n          summaries: [],\n        });\n      }\n    });\n    return cellSummary;\n  }\n\n  /**\n   * Constructs tissue library ,forming parent and child nodes\n   * @param items\n   * @returns\n   */\n  private constructTissueLibrary(items: Illustrations['@graph']): TissueLibrary {\n    const nodes: TissueLibrary['nodes'] = {};\n    for (const { '@id': id, label, organ_id, organ_label } of items) {\n      const parentId = (BASE_IRI + organ_id) as Iri;\n      nodes[parentId] ??= { id: parentId, label: titleCase(organ_label), parent: BASE_IRI, children: [] };\n      nodes[id] = { id, label: label, parent: parentId, children: [], link: TISSUE_LINK };\n      nodes[parentId]?.children.push(id);\n    }\n    return { root: BASE_IRI, nodes };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FtuDataImplService.html":{"url":"injectables/FtuDataImplService.html","title":"injectable - FtuDataImplService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FtuDataImplService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.impl.ts\n        \n\n\n            \n                Description\n            \n            \n                FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n\n            \n\n            \n                Extends\n            \n            \n                        FtuDataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCellSummaries\n                            \n                            \n                                    \n                                getDataFileReferences\n                            \n                            \n                                    \n                                getIllustrationMapping\n                            \n                            \n                                    \n                                getIllustrationUrl\n                            \n                            \n                                    \n                                getSourceReferences\n                            \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:191\n\n                \n            \n\n\n            \n                \n                    Overrides the getCellSummaries method to return an CellSummary array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits an CellSummary array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:203\n\n                \n            \n\n\n            \n                \n                    Overrides the getDataFileReferences method to return an DataFileReference array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an DataFileReference array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:179\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an IllustrationMappingItem array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:170\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits the mock URL.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:215\n\n                \n            \n\n\n            \n                \n                    Overrides the getSourceReferences method to return an empty array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an empty array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:159\n\n                \n            \n\n\n            \n                \n                    Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits the tissue Tree data.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, InjectionToken } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, firstValueFrom, from, map } from 'rxjs';\nimport { z } from 'zod';\n\nimport { IRI, Iri, URL, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/** Endpoints for Injecting input path */\nexport interface FtuDataImplEndpoints {\n  /** Endpoint for File having Cell illustrations data */\n  illustrations: Url;\n  /** Endpoint for File having Cell Summaries data */\n  summaries: Url;\n  /** Endpoint for File having Cell Source References data */\n  datasets: Url;\n}\n/** Constant  to read the endpoints */\nexport const FTU_DATA_IMPL_ENDPOINTS = new InjectionToken('Endpoints');\n\n/** Input to different file formats supported */\nexport const FTU_DATA_IMPL_FILE_FORMAT_MAPPING = new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n});\n\ntype IdItem = z.infer;\ntype CellSourceItem = z.infer;\ntype Graph = { '@graph': T[] };\ntype Illustrations = z.infer;\ntype Datasets = z.infer;\ntype Cell_Summary = z.infer;\ntype IllusrationFiles = Illustrations['@graph'][number]['illustration_files'];\ntype dataSources = Datasets['@graph'][number]['data_sources'];\n\n/** Base ID Object */\nconst ID_ITEM = z.object({\n  '@id': IRI,\n});\n\n/** ILLUSTRATIONS Object reflecting the format in the file*/\nconst ILLUSTRATIONS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: z.string(),\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        svg_group_id: z.string(),\n        label: z.string(),\n        representation_of: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** DATASETS Object reflecting the format in the file*/\nconst DATASETS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Base CELL_SOURCE_ITEM Object  having cell_source */\nconst CELL_SOURCE_ITEM = z.object({\n  cell_source: IRI,\n});\n\n/** CELL_SUMMARIES zod Object reflecting the format in the file*/\nconst CELL_SUMMARIES = z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Creates clickable link for the tissue tree element */\nconst TISSUE_LINK = createLinkId('FTU');\n\n/** Provides Base/root url for the tissue tree */\nconst BASE_IRI = 'https://purl.humanatlas.io/2d-ftu/' as Iri;\n\n/** Capitalizes the first character */\nfunction capitalize(str: string): string {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n}\n\n/** Converts case to title case for organ name */\nfunction titleCase(name: string) {\n  return name\n    .split(' ')\n    .map((l: string) => l[0].toUpperCase() + l.slice(1))\n    .join(' ');\n}\n\n/**\n * FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FtuDataImplService extends FtuDataService {\n  /** http client to read files */\n  private readonly http = inject(HttpClient);\n\n  /** Endpoints injector to the service */\n  private readonly endpoints = inject(FTU_DATA_IMPL_ENDPOINTS);\n  /** Endpoint injection for file formats */\n  private readonly fileFormatMapping = inject(FTU_DATA_IMPL_FILE_FORMAT_MAPPING);\n  /** Stores the last retrived Tissue Iri */\n  private cachedIri?: Iri;\n  /** Stores the last retrived data for tissue */\n  private cache = new Map>();\n\n  /**\n  Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n  @returns An Observable that emits the tissue Tree data.\n  */\n  override getTissueLibrary(): Observable {\n    return this.fetchData(undefined, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.constructTissueLibrary(data['@graph']))\n    );\n  }\n\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return this.getDataFileReferences(iri).pipe(map((data) => this.findIllustrationUrl(data)));\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).mapping),\n      map((data) => (data ? this.toIllustrationMapping(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.summaries, CELL_SUMMARIES).pipe(\n      map((data) => this.findCellSummaries(data, iri)),\n      map((data) => (data ? this.constructCellSummaries(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).illustration_files),\n      map((data) => (data ? this.toDataFileReferences(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.datasets, DATASETS).pipe(\n      map((data) => this.findGraphItem(data, iri).data_sources),\n      map((data) => (data ? this.toSourceReferences(data) : []))\n    );\n  }\n\n  /**\n   * Fetchs data after reading the file and parses with the requested schema\n   * @template T : Schema to be formated\n   * @param iri : Tissue iri\n   * @param url : File Url\n   * @param schema :  Format needed to be extracted\n   * @returns data\n   */\n  private fetchData(iri: Iri | undefined, url: Url, schema: T): Observable> {\n    const { http, cachedIri, cache } = this;\n    if (iri !== undefined && iri !== cachedIri) {\n      this.cachedIri = iri;\n      this.cache = new Map();\n    }\n    if (!cache.has(url)) {\n      const opts = { params: { id: iri ?? '' }, responseType: 'json' as const };\n      const resp = http.get(url, opts).pipe(map((data) => schema.parse(data)));\n      cache.set(url, firstValueFrom(resp));\n    }\n    return from(cache.get(url) as Promise>);\n  }\n\n  /**\n   * Finds object inside the @graph tag for the requested id element\n   * @template T\n   * @param data\n   * @param iri\n   * @returns graph item\n   */\n  private findGraphItem(data: Graph, iri: Iri): T {\n    const item = data['@graph'].find(({ '@id': id }) => id === iri);\n    if (item === undefined) {\n      console.error(`Iri not found in data: ${iri}`);\n      return {} as T;\n    }\n\n    return item;\n  }\n\n  /**\n   * Finds cell summaries from fetched Data based on cell_source field\n   * @template T\n   * @param data\n   * @param iri\n   * @returns cell summaries\n   */\n  private findCellSummaries(data: Graph, iri: Iri): T[] {\n    const item = data['@graph'].filter(({ cell_source }) => cell_source === iri);\n    if (item === undefined || item.length == 0) {\n      console.error(`Cell Summary not found in data: ${iri}`);\n      return [];\n    }\n    return item;\n  }\n\n  /**\n   * Finds illustration url and formates it to Url\n   * @param files\n   * @returns illustration url\n   */\n  private findIllustrationUrl(files: DataFileReference[]): string {\n    const { fileFormatMapping } = this;\n    const svgFormat = fileFormatMapping['image/svg+xml'];\n    const ref = files.find(({ format }) => format === svgFormat);\n    if (ref === undefined) {\n      console.error('Illustration url not found');\n      return '' as Url;\n    }\n    return ref.url;\n  }\n\n  /**\n   * To illustration mapping for each tissue open\n   * @param mappings\n   * @returns illustration mapping\n   */\n  private toIllustrationMapping(\n    mappings: { label: string; svg_id: string; svg_group_id: string; representation_of: string }[]\n  ): IllustrationMappingItem[] {\n    const ontologyIdPrefix = 'http://purl.obolibrary.org/obo/';\n    const results: IllustrationMappingItem[] = [];\n    for (const { label, svg_id, svg_group_id, representation_of } of mappings) {\n      results.push({\n        label,\n        id: svg_id,\n        groupId: svg_group_id,\n        ontologyId: representation_of.slice(ontologyIdPrefix.length),\n      });\n    }\n\n    return results;\n  }\n\n  /**\n   * Formates data to array of DataFileReference format\n   * @param data\n   * @returns data file references\n   */\n  private toDataFileReferences(data: IllusrationFiles): DataFileReference[] {\n    const { fileFormatMapping: formats } = this;\n    const results: DataFileReference[] = [];\n    for (const { file, file_format } of data) {\n      if (file_format in formats) {\n        results.push({ format: formats[file_format], url: file });\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Formats data from 'dataSources' to 'SourceReferences'[] format\n   * @param data\n   * @returns source references\n   */\n  private toSourceReferences(data: dataSources): SourceReference[] {\n    const results: SourceReference[] = [];\n    for (const { label, link, description } of data) {\n      results.push({ label, link, title: description });\n    }\n    return results;\n  }\n\n  /**\n   * constructCellSummaries : Formates Cell Summary after fetching the data\n   * @param data\n   * @returns\n   */\n  private constructCellSummaries(data: Cell_Summary['@graph']): CellSummary[] {\n    const cellSummary: CellSummary[] = [];\n    const defaultBiomarkerLables = ['gene', 'protein', 'lipid'];\n    const biomarkersPresent = new Set(data.map((summary) => summary.biomarker_type.toLowerCase()));\n    data.forEach((summaryGroup) => {\n      const cells = summaryGroup.summary.map((entry) => ({\n        id: entry.cell_id as Iri,\n        label: entry.cell_label,\n      }));\n      const biomarkers = summaryGroup.summary.map((entry) => ({\n        id: entry.gene_id as Iri,\n        label: entry.gene_label,\n      }));\n      const summaries = summaryGroup.summary.map((entry) => ({\n        cell: entry.cell_id as Iri,\n        biomarker: entry.gene_id as Iri,\n        count: entry.count,\n        percentage: entry.percentage,\n        meanExpression: entry.mean_expression,\n        dataset_count: entry.dataset_count,\n      }));\n      cellSummary.push({\n        label: `${capitalize(summaryGroup.biomarker_type)} Biomarkers`,\n        cells,\n        biomarkers,\n        summaries,\n      });\n    });\n    defaultBiomarkerLables.forEach((defaultLabel) => {\n      if (!biomarkersPresent.has(defaultLabel)) {\n        cellSummary.push({\n          label: `${capitalize(defaultLabel)} Biomarkers`,\n          cells: [],\n          biomarkers: [],\n          summaries: [],\n        });\n      }\n    });\n    return cellSummary;\n  }\n\n  /**\n   * Constructs tissue library ,forming parent and child nodes\n   * @param items\n   * @returns\n   */\n  private constructTissueLibrary(items: Illustrations['@graph']): TissueLibrary {\n    const nodes: TissueLibrary['nodes'] = {};\n    for (const { '@id': id, label, organ_id, organ_label } of items) {\n      const parentId = (BASE_IRI + organ_id) as Iri;\n      nodes[parentId] ??= { id: parentId, label: titleCase(organ_label), parent: BASE_IRI, children: [] };\n      nodes[id] = { id, label: label, parent: parentId, children: [], link: TISSUE_LINK };\n      nodes[parentId]?.children.push(id);\n    }\n    return { root: BASE_IRI, nodes };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FtuDataService.html":{"url":"injectables/FtuDataService.html","title":"injectable - FtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading all data related to a single ftu\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getDataFileReferences\n                            \n                            \n                                    Abstract\n                                getIllustrationMapping\n                            \n                            \n                                    Abstract\n                                getIllustrationUrl\n                            \n                            \n                                    Abstract\n                                getSourceReferences\n                            \n                            \n                                    Abstract\n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable of cell summaries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:42\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of data file references\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:30\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable of IllustrationMappingItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:25\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable url\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:48\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of source references\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:19\n                \n            \n\n\n            \n                \n                    Gets tissue library\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        tissue library\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\n\n/** Service for loading all data related to a single ftu */\n@Injectable()\nexport abstract class FtuDataService {\n  /**\n   * Gets tissue library\n   * @returns tissue library\n   */\n  abstract getTissueLibrary(): Observable;\n\n  /**\n   * This method takes\n   * @param iri and @returns an observable url\n   */\n  abstract getIllustrationUrl(iri: Iri): Observable;\n  /**\n   * This method takes\n   * @param iri and @returns observable of IllustrationMappingItem\n   */\n  abstract getIllustrationMapping(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri and\n   * @returns observable of cell summaries\n   */\n  abstract getCellSummaries(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of data file references\n   */\n  abstract getDataFileReferences(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of source references\n   */\n  abstract getSourceReferences(iri: Iri): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraServiceModule.html":{"url":"modules/HraServiceModule.html","title":"module - HraServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    HraServiceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/service.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactImplService } from './contact/contact.impl';\nimport { ContactService } from './contact/contact.service';\nimport { FTU_DATA_IMPL_ENDPOINTS, FtuDataImplService } from './ftu-data/ftu-data.impl';\nimport { FtuDataService } from './ftu-data/ftu-data.service';\n\n@NgModule({\n  providers: [\n    {\n      provide: ContactService,\n      useExisting: ContactImplService,\n    },\n    {\n      provide: FtuDataService,\n      useExisting: FtuDataImplService,\n    },\n    {\n      provide: FTU_DATA_IMPL_ENDPOINTS,\n      useValue: {\n        illustrations: 'assets/TEMP/2d-ftu-illustrations.jsonld',\n        summaries: 'assets/TEMP/ftu-cell-summaries.jsonld',\n        datasets: 'assets/TEMP/ftu-datasets.jsonld',\n      },\n    },\n  ],\n})\nexport class HraServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockContactService.html":{"url":"injectables/MockContactService.html","title":"injectable - MockContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents mock implementation of the ContactService class.\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    It accepts an object of type ContactMessage and currently logs the message contents on the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { ContactMessage, ContactService } from './contact.service';\n\n/** This class represents mock implementation of the ContactService class. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockContactService extends ContactService {\n  /** It accepts an object of type ContactMessage and currently logs the message contents on the console. */\n  sendMessage(message: ContactMessage): Observable {\n    console.log('Message received. Content: ' + JSON.stringify(message));\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockFtuDataService.html":{"url":"injectables/MockFtuDataService.html","title":"injectable - MockFtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockFtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n\n            \n\n            \n                Extends\n            \n            \n                        FtuDataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCellSummaries\n                            \n                            \n                                    \n                                getDataFileReferences\n                            \n                            \n                                    \n                                getIllustrationMapping\n                            \n                            \n                                    \n                                getIllustrationUrl\n                            \n                            \n                                    \n                                getSourceReferences\n                            \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:125\n\n                \n            \n\n\n            \n                \n                    Overrides the getCellSummaries method to return an CellSummary array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits an CellSummary array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:133\n\n                \n            \n\n\n            \n                \n                    Overrides the getDataFileReferences method to return an DataFileReference array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an DataFileReference array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:116\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an IllustrationMappingItem array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:107\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits the mock URL.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:146\n\n                \n            \n\n\n            \n                \n                    Overrides the getSourceReferences method to return an empty array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an empty array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:99\n\n                \n            \n\n\n            \n                \n                    Overrides the getTissueLibrary method to return a mock data for the tissue tree\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        tissue library\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport { MOCK_SUMMARIES } from '../tissue-ftu/tissue-ftu.mock';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/**\n * Dummy data for Source References\n */\nconst sourceReferences = [\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n];\n\n/**\n * Dummy data extract om Mock Data of tissue mock\n */\nconst CELL_SUMMARY_DATA: CellSummary[] = Object.values(MOCK_SUMMARIES).map((summary) => ({\n  label: summary.label,\n  cells: summary.entries.map((entry) => ({\n    id: entry.cell.id as Iri,\n    label: entry.cell.label,\n  })),\n  biomarkers: summary.entries.map((entry) => ({\n    id: entry.biomarker.id as Iri,\n    label: entry.biomarker.label,\n  })),\n  summaries: summary.entries.map((entry) => ({\n    cell: entry.cell.id as Iri,\n    biomarker: entry.biomarker.id as Iri,\n    count: entry.count,\n    percentage: entry.percentage,\n    meanExpression: entry.meanExpression,\n  })),\n}));\n\n/**\nThis class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockFtuDataService extends FtuDataService {\n  /**\n   * Overrides the getTissueLibrary method to return a mock data for the tissue tree\n   * @returns tissue library\n   */\n  override getTissueLibrary(): Observable {\n    return of();\n  }\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return of(MOCK_TISSUE_DATA.nodes[iri].object.file);\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return of([]);\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return of(CELL_SUMMARY_DATA);\n  }\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return of([\n      {\n        format: 'svg',\n        url: MOCK_TISSUE_DATA.nodes[iri].object.file,\n      },\n    ]);\n  }\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return of(sourceReferences);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueFtuService.html":{"url":"injectables/MockTissueFtuService.html","title":"injectable - MockTissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of TissueFtuService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueFtuService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCellSummaries\n                            \n                            \n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \ngetCellSummaries()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:99\n\n                \n            \n\n\n            \n                \n                    Implementation of abstract method\n\n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:94\n\n                \n            \n\n\n            \n                \n                    Implementation of getReferenceOrgans method\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Any } from '@hra-ui/utils/types';\nimport { Observable, of } from 'rxjs';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport { ReferenceOrgan, TissueFtuService } from './tissue-ftu.service';\n\n/** Test whether an object is a reference organ */\nfunction isReferenceOrgan(obj: Any): obj is ReferenceOrgan {\n  return !!obj['object']['file'];\n}\n\n/** Helper for creating summary data */\nfunction createCell(\n  cid: string,\n  clabel: string,\n  bid: string,\n  blabel: string,\n  count: number,\n  percentage: number,\n  meanExpression: number,\n  metadata: { label: string; value: string }[][] = []\n) {\n  return {\n    cell: {\n      id: cid,\n      label: clabel,\n    },\n    biomarker: {\n      id: bid,\n      label: blabel,\n    },\n    count,\n    percentage,\n    meanExpression,\n    metadata,\n  };\n}\n\n/** Reference organs */\nconst MOCK_REFERENCE_ORGANS = Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan);\n\n/** Mock summary data */\nexport const MOCK_SUMMARIES = {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 1.0, 1.0, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2, 0.3),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2, 0.3),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3, 0.5),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1, 0.3),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1, 1.0),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4, 0.3),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2, 0.1),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7, 0.3),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4, 0.3),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5, 0.3),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1, 0.7),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1, 0.4),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1, 0.9),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1, 0.9)],\n  },\n  summary3: {\n    label: 'Summary 3',\n    entries: [],\n  },\n};\n\n/** Implementation of TissueFtuService */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueFtuService extends TissueFtuService {\n  /** Implementation of getReferenceOrgans method */\n  getReferenceOrgans(): Observable {\n    return of(MOCK_REFERENCE_ORGANS);\n  }\n\n  /** Implementation of abstract method */\n  getCellSummaries(): Observable {\n    return of(MOCK_SUMMARIES);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueLibraryService.html":{"url":"injectables/MockTissueLibraryService.html","title":"injectable - MockTissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock implementation of TissueLibraryService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueLibraryService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueLibraryService\n\n                \n            \n            \n                \n                        Defined in         TissueLibraryService:162\n\n                \n            \n\n\n            \n                \n                    Implementation of TissueLibraryService.getTissueLibrary\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://purl.humanatlas.io/2d-ftu/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueFtuService.html":{"url":"injectables/TissueFtuService.html","title":"injectable - TissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract Service to fetch reference organs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(id)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:22\n                \n            \n\n\n            \n                \n                    Get summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:19\n                \n            \n\n\n            \n                \n                    abstract Method to fetch reference organs\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\nexport type ReferenceOrgan = z.infer;\n\n/** Reference organ type */\nexport const REFERENCE_ORGAN = z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n});\n\n/** Abstract Service to fetch reference organs */\n@Injectable()\nexport abstract class TissueFtuService {\n  /** abstract Method to fetch reference organs */\n  abstract getReferenceOrgans(): Observable;\n\n  /** Get summary data */\n  abstract getCellSummaries(id: unknown): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryService.html":{"url":"injectables/TissueLibraryService.html","title":"injectable - TissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading the tissue library\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.service.ts:9\n                \n            \n\n\n            \n                \n                    Loads the entire tissue library\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TissueLibrary } from './tissue-library.model';\n\n/** Service for loading the tissue library */\n@Injectable()\nexport abstract class TissueLibraryService {\n  /** Loads the entire tissue library */\n  abstract getTissueLibrary(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            capitalize   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            createCell   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            createNodeId   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            defineNode   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            isReferenceOrgan   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            titleCase   (src/.../ftu-data.impl.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/ftu-data/ftu-data.impl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        capitalize\n                        \n                    \n                \n            \n            \n                \ncapitalize(str: string)\n                \n            \n\n\n\n\n            \n                \n                    Capitalizes the first character\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleCase\n                        \n                    \n                \n            \n            \n                \ntitleCase(name: string)\n                \n            \n\n\n\n\n            \n                \n                    Converts case to title case for organ name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCell\n                        \n                    \n                \n            \n            \n                \ncreateCell(cid: string, clabel: string, bid: string, blabel: string, count: number, percentage: number, meanExpression: number, metadata)\n                \n            \n\n\n\n\n            \n                \n                    Helper for creating summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    cid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    clabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    blabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    meanExpression\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    metadata\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReferenceOrgan\n                        \n                    \n                \n            \n            \n                \nisReferenceOrgan(obj: Any)\n                \n            \n\n\n\n\n            \n                \n                    Test whether an object is a reference organ\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                Any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReferenceOrgan\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createNodeId\n                        \n                    \n                \n            \n            \n                \ncreateNodeId(label: string, parent: string)\n                \n            \n\n\n\n\n            \n                \n                    Create a new id from a label\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defineNode\n                        \n                    \n                \n            \n            \n                \ndefineNode(label: string, parent: string, url?: string, ...children: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Create a new node\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    children\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nservices\nThis library was generated with Nx.\nRunning unit tests\nRun nx test services to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraServiceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Biomarker   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Cell   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Cell_Summary   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CellSourceItem   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CellSummary   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CellSummaryRow   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DataFileReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Datasets   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            dataSources   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            Graph   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IdItem   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IllusrationFiles   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IllustrationMappingItem   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Illustrations   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            Iri   (src/.../common.model.ts)\n                        \n                        \n                            ReferenceOrgan   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SourceReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Tissue   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Tissue   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibrary   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TissueLibrary   (src/.../tissue-library.model.ts)\n                        \n                        \n                            Url   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n    \n        \n            \n                \n                    \n                    Biomarker\n                \n            \n            \n                \n                    Type for a Biomarker\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Cell\n                \n            \n            \n                \n                    Type for a cell\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummary\n                \n            \n            \n                \n                    Type for a CellSummary\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryRow\n                \n            \n            \n                \n                    Type for a CellSummaryRow\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataFileReference\n                \n            \n            \n                \n                    Type for a DataFileReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IllustrationMappingItem\n                \n            \n            \n                \n                    Type for a IllustrationMappingItem\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceReference\n                \n            \n            \n                \n                    Type for a SourceReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tissue\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibrary\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/ftu-data/ftu-data.impl.ts\n    \n    \n        \n            \n                \n                    \n                    Cell_Summary\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSourceItem\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Datasets\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    dataSources\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Graph\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IdItem\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IllusrationFiles\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Illustrations\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/shared/common.model.ts\n    \n    \n        \n            \n                \n                    \n                    Iri\n                \n            \n            \n                \n                    Same as an Url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Url\n                \n            \n            \n                \n                    Any url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReferenceOrgan\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    Tissue\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibrary\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ID   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            BASE_IRI   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            BIOMARKER   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SOURCE_ITEM   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CELL_SUMMARIES   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CELL_SUMMARY   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SUMMARY_DATA   (src/.../ftu-data.mock.ts)\n                        \n                        \n                            CELL_SUMMARY_ROW   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_INTEGER_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DATA_FILE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DATASETS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            FTU_DATA_IMPL_ENDPOINTS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            FTU_DATA_IMPL_FILE_FORMAT_MAPPING   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            ID_ITEM   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            ILLUSTRATION_MAPPING_ITEM   (src/.../ftu-data.model.ts)\n                        \n                        \n                            ILLUSTRATIONS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IRI   (src/.../common.model.ts)\n                        \n                        \n                            MOCK_REFERENCE_ORGANS   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_SUMMARIES   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_TISSUE_DATA   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            PERCENTAGE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            PERCENTAGE_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            REFERENCE_ORGAN   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SOURCE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            sourceReferences   (src/.../ftu-data.mock.ts)\n                        \n                        \n                            TISSUE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TISSUE   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TISSUE_LIBRARY   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TISSUE_LIBRARY   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TISSUE_LINK   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            URL   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://purl.humanatlas.io/2d-ftu/'\n                    \n                \n\n            \n                \n                    Base node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_TISSUE_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n}\n                    \n                \n\n            \n                \n                    Mock tissue data\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.impl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 'https://purl.humanatlas.io/2d-ftu/' as Iri\n                    \n                \n\n            \n                \n                    Provides Base/root url for the tissue tree\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SOURCE_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell_source: IRI,\n})\n                    \n                \n\n            \n                \n                    Base CELL_SOURCE_ITEM Object  having cell_source\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    CELL_SUMMARIES zod Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATASETS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    DATASETS Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FTU_DATA_IMPL_ENDPOINTS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Endpoints')\n                    \n                \n\n            \n                \n                    Constant  to read the endpoints\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FTU_DATA_IMPL_FILE_FORMAT_MAPPING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n})\n                    \n                \n\n            \n                \n                    Input to different file formats supported\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@id': IRI,\n})\n                    \n                \n\n            \n                \n                    Base ID Object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ILLUSTRATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: z.string(),\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        svg_group_id: z.string(),\n        label: z.string(),\n        representation_of: z.string(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    ILLUSTRATIONS Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LINK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('FTU')\n                    \n                \n\n            \n                \n                    Creates clickable link for the tissue tree element\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BIOMARKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a BIOMARKER\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a cell object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  cells: CELL.array(),\n  biomarkers: BIOMARKER.array(),\n  summaries: CELL_SUMMARY_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell: IRI,\n  biomarker: IRI,\n  count: COUNT,\n  percentage: PERCENTAGE,\n  meanExpression: PERCENTAGE,\n  dataset_count: COUNT.optional(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY_ROW\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().int(COUNT_INTEGER_ERROR).nonnegative(COUNT_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A integer greater than or equal to zero\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_INTEGER_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be an integer'\n                    \n                \n\n            \n                \n                    Error message for non integer counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be greater than or equal to 0'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_FILE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  format: z.string(),\n  url: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a DATA_FILE_REFERENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ILLUSTRATION_MAPPING_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: z.string(),\n  groupId: z.string(),\n  label: z.string(),\n  ontologyId: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a ILLUSTRATION_MAPPING_ITEM\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().gte(0, PERCENTAGE_RANGE_ERROR).lte(1, PERCENTAGE_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A number between 0 and 1 inclusive\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Percentage must be between 0 and 1 (inclusive)'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SOURCE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  title: z.string(),\n  label: z.string(),\n  link: z.string().url(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a SOURCE_REFERENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n  parent: IRI,\n  children: IRI.array().default([]),\n  link: z.string().optional(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a tissue object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LIBRARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a tissue library object\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CellSummary[]\n\n                    \n                \n                \n                    \n                        Default value : Object.values(MOCK_SUMMARIES).map((summary) => ({\n  label: summary.label,\n  cells: summary.entries.map((entry) => ({\n    id: entry.cell.id as Iri,\n    label: entry.cell.label,\n  })),\n  biomarkers: summary.entries.map((entry) => ({\n    id: entry.biomarker.id as Iri,\n    label: entry.biomarker.label,\n  })),\n  summaries: summary.entries.map((entry) => ({\n    cell: entry.cell.id as Iri,\n    biomarker: entry.biomarker.id as Iri,\n    count: entry.count,\n    percentage: entry.percentage,\n    meanExpression: entry.meanExpression,\n  })),\n}))\n                    \n                \n\n            \n                \n                    Dummy data extract om Mock Data of tissue mock\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceReferences\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n]\n                    \n                \n\n            \n                \n                    Dummy data for Source References\n\n                \n            \n\n        \n    \n\n    src/lib/shared/common.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : URL.brand('IRI')\n                    \n                \n\n            \n                \n                    Same as an URL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.string().url().brand('URL')\n                    \n                \n\n            \n                \n                    Any url\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MOCK_REFERENCE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan)\n                    \n                \n\n            \n                \n                    Reference organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_SUMMARIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 1.0, 1.0, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2, 0.3),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2, 0.3),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3, 0.5),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1, 0.3),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1, 1.0),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4, 0.3),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2, 0.1),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7, 0.3),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4, 0.3),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5, 0.3),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1, 0.7),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1, 0.4),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1, 0.9),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1, 0.9)],\n  },\n  summary3: {\n    label: 'Summary 3',\n    entries: [],\n  },\n}\n                    \n                \n\n            \n                \n                    Mock summary data\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFERENCE_ORGAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n})\n                    \n                \n\n            \n                \n                    Reference organ type\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-library/tissue-library.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TISSUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n  parent: IRI,\n  children: IRI.array().default([]),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LIBRARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue Library\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
