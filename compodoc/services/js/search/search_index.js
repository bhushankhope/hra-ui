var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ContactMessage.html",[0,1.19,1,1.58]],["body/interfaces/ContactMessage.html",[0,1.901,1,2.677,2,2.015,3,0.64,4,0.64,5,0.543,6,2.404,7,0.745,8,3.152,9,3.152,10,4.196,11,4.196,12,3.01,13,0.372,14,2.261,15,1.961,16,0.936,17,0.054,18,3.976,19,3.333,20,3.976,21,3.976,22,0.839,23,0.118,24,0.543,25,1.09,26,0.745,27,0.839,28,1.901,29,0.839,30,2.404,31,1.957,32,1.299,33,2.015,34,0.861,35,2.404,36,0.745,37,2.015,38,0.038,39,0.038]],["title/injectables/ContactService.html",[23,0.083,31,1.367]],["body/injectables/ContactService.html",[0,1.745,1,2.881,3,0.664,4,0.664,5,0.564,6,2.494,7,0.773,8,2.494,9,2.494,10,3.786,11,3.786,12,2.813,13,0.386,15,1.688,16,0.664,17,0.054,18,3.58,19,3,20,3.58,21,3.58,22,0.859,23,0.121,24,0.564,25,1.215,26,0.773,27,0.859,28,2.171,29,0.953,30,3.229,31,2.35,32,1.745,33,2.706,34,1.156,35,3.229,36,1.109,37,2.706,38,0.039,39,0.039,40,0.893,41,1.329,42,3.229,43,1.026,44,3.107,45,1.348,46,1.177,47,1.348]],["title/interfaces/ExtendedTissue.html",[0,1.19,48,1.846]],["body/interfaces/ExtendedTissue.html",[0,0.699,2,1.083,3,0.344,4,0.344,5,0.686,7,0.401,13,0.2,14,1.446,15,1.753,16,0.807,17,0.054,22,0.855,23,0.076,24,0.292,25,0.625,26,0.401,27,0.536,29,0.344,34,1.086,38,0.025,39,0.025,48,1.69,49,0.532,50,0.463,51,0.927,52,2.016,53,1.429,54,1.538,55,2.176,56,2.511,57,2.016,58,2.016,59,1.638,60,2.077,61,2.009,62,1.293,63,1.083,64,1.293,65,1.538,66,1.083,67,1.446,68,1.083,69,1.089,70,0.927,71,1.69,72,1.69,73,1.737,74,1.69,75,1.69,76,1.737,77,1.538,78,1.293,79,1.293,80,1.293,81,2.007,82,2.176,83,1.446,84,1.446,85,2.176,86,2.016,87,1.293,88,2.016,89,1.293,90,2.016,91,1.293,92,1.293,93,2.077,94,1.293,95,1.293,96,3.058,97,1.083,98,1.089,99,0.532,100,0.802,101,1.089,102,1.083,103,1.083,104,2.991,105,2.491,106,1.69,107,2.346,108,2.694,109,2.077,110,3.382,111,3.382,112,3.382,113,2.181,114,2.077,115,1.69,116,1.083,117,1.083,118,2.346,119,1.69,120,2.543,121,2.346,122,2.346,123,1.69,124,2.346,125,1.083,126,1.083,127,1.69,128,1.083,129,1.69,130,2.077,131,1.69,132,1.083,133,1.083,134,1.69,135,1.69,136,1.083,137,1.083,138,1.083,139,1.69,140,1.69,141,1.083,142,1.083,143,1.083,144,2.346,145,1.083,146,1.083,147,1.083,148,1.083,149,1.69,150,1.69,151,1.69,152,1.69,153,2.077,154,1.69,155,1.083,156,1.083,157,1.69,158,1.083,159,1.083,160,1.083,161,2.077,162,1.69,163,1.69,164,1.083,165,2.077,166,1.69,167,1.083,168,2.077,169,1.251,170,0.802,171,0.927,172,1.293,173,1.083,174,1.083,175,1.293]],["title/injectables/FtuDataService.html",[23,0.083,176,1.58]],["body/injectables/FtuDataService.html",[3,0.497,4,0.821,5,0.697,7,1.04,13,0.289,16,0.944,17,0.054,22,0.894,23,0.099,24,0.422,25,1.306,26,0.579,27,0.497,28,2.267,29,0.497,32,1.815,33,2.814,36,1.238,38,0.032,39,0.032,40,0.669,41,1.091,43,1.459,45,1.917,46,1.673,47,1.917,59,1.455,69,2.342,70,1.34,99,1.382,113,1.667,176,1.903,177,2.643,178,2.287,179,2.326,180,2.223,181,2.652,182,3.304,183,3.304,184,1.903,185,2.652,186,2.652,187,2.652,188,2.652,189,2.652,190,2.326,191,4.59,192,1.903,193,2.652,194,2.652,195,2.326,196,4.183,197,4.183,198,2.652,199,2.326,200,2.585,201,2.652,202,2.326,203,2.652,204,2.326,205,1.565,206,1.565,207,1.565,208,1.867,209,3.546]],["title/modules/HraServiceModule.html",[210,2.202,211,1.846]],["body/modules/HraServiceModule.html",[3,0.691,4,0.691,5,0.587,17,0.054,22,1.123,24,0.587,27,0.691,29,0.691,31,2.058,38,0.04,39,0.04,50,1.186,53,1.582,65,2.058,66,2.178,113,1.791,171,2.377,176,2.377,178,2.058,211,2.778,212,2.178,213,3.236,214,4.128,215,2.778,216,3.236,217,3.236,218,2.178,219,2.377,220,1.791,221,2.598,222,2.778,223,3.236,224,2.598,225,2.778,226,3.236,227,3.236,228,3.236,229,3.236,230,3.236,231,2.598,232,3.844,233,4.788]],["title/injectables/MockContactService.html",[23,0.083,215,1.846]],["body/injectables/MockContactService.html",[1,2.905,3,0.685,4,0.685,5,0.582,7,0.797,12,2.606,13,0.398,16,0.967,17,0.054,19,2.761,22,0.967,23,0.123,24,0.582,25,1.126,26,0.797,27,0.685,29,1.054,31,2.514,34,1.179,36,0.797,37,2.761,38,0.04,39,0.04,40,0.921,41,1.355,42,3.294,43,1.059,45,1.391,46,1.214,47,1.391,54,2.045,77,1.597,98,1.78,101,1.391,169,2.045,170,1.597,215,2.761,234,3.205,235,3.294,236,1.846,237,3.205,238,4.103,239,4.103,240,4.103,241,4.103,242,3.294,243,3.205,244,3.205,245,3.205,246,3.205,247,3.205]],["title/injectables/MockFtuDataService.html",[23,0.083,225,1.846]],["body/injectables/MockFtuDataService.html",[3,0.414,4,0.414,5,0.352,7,1.071,13,0.241,16,0.877,17,0.054,22,0.92,23,0.087,24,0.352,25,1.298,26,0.482,27,0.414,29,0.953,32,2.071,36,1.187,38,0.028,39,0.028,40,0.557,41,1.268,43,1.356,45,1.781,46,1.554,47,1.781,50,0.557,53,0.64,54,1.441,59,1.554,69,2.353,70,1.116,76,1.441,77,2.515,98,1.99,99,0.955,100,0.966,101,0.841,113,1.255,169,1.441,170,0.966,173,2.762,176,2.748,177,1.116,178,0.966,184,2.21,185,3.08,186,3.08,187,3.08,188,3.08,189,2.322,194,2.322,198,2.322,200,2.762,201,2.322,203,2.322,205,2.762,206,2.762,207,1.304,208,1.556,209,3.296,218,1.304,224,1.556,225,1.946,232,2.322,235,2.322,236,2.364,242,3.08,248,1.938,249,4.905,250,2.892,251,2.892,252,1.938,253,5.082,254,4.772,255,4.772,256,1.938,257,1.938,258,1.938,259,2.892,260,1.938,261,1.938]],["title/injectables/MockTissueFtuService.html",[23,0.083,222,1.846]],["body/injectables/MockTissueFtuService.html",[3,0.384,4,0.384,5,0.326,7,0.447,13,0.223,15,1.584,17,0.054,22,0.849,23,0.082,24,0.326,25,0.988,26,0.447,27,0.384,28,1.185,29,0.384,32,1.602,34,0.516,36,0.679,38,0.027,39,0.027,40,0.516,41,0.902,43,0.902,49,0.593,50,0.516,53,0.902,54,1.361,61,1.185,63,1.208,73,2.233,74,1.838,77,1.84,85,1.573,98,0.779,99,1.312,100,0.895,101,0.779,169,2.085,170,0.895,184,2.126,192,3.019,218,1.208,219,2.504,220,0.779,221,1.442,222,1.838,236,1.573,262,1.208,263,3.358,264,1.796,265,1.796,266,1.796,267,1.573,268,1.208,269,1.442,270,1.573,271,1.034,272,1.442,273,1.442,274,1.796,275,1.442,276,1.442,277,2.126,278,1.442,279,2.192,280,2.192,281,2.192,282,2.192,283,1.838,284,1.838,285,1.838,286,2.673,287,2.926,288,3.528,289,1.208,290,1.442,291,1.442,292,1.442,293,1.442,294,3.319,295,2.192,296,2.653,297,3.598,298,2.192,299,2.964,300,3.202,301,3.598,302,2.192,303,2.964,304,2.964,305,3.358,306,3.189,307,1.442,308,2.192,309,2.653,310,2.653,311,3.598,312,1.442,313,2.192,314,1.442,315,1.442,316,1.442,317,2.653,318,1.442,319,2.192,320,1.442,321,2.653,322,2.964,323,1.442,324,1.442,325,1.442,326,2.192,327,2.224,328,1.442,329,1.442,330,1.442,331,1.442,332,1.442,333,1.442,334,1.442,335,1.442,336,1.442,337,1.442,338,1.442,339,3.358,340,3.189,341,3.189,342,1.442,343,1.442,344,1.442,345,1.442,346,1.442,347,1.442,348,1.442,349,1.796,350,1.796]],["title/injectables/MockTissueLibraryService.html",[23,0.083,171,1.58]],["body/injectables/MockTissueLibraryService.html",[0,0.706,3,0.348,4,0.348,5,0.636,7,0.405,13,0.202,15,1.689,16,0.348,17,0.054,22,0.859,23,0.076,24,0.295,25,0.773,26,0.405,27,0.541,29,0.348,34,0.728,36,0.405,38,0.025,39,0.025,40,0.468,41,0.837,43,0.538,48,1.095,49,0.538,50,0.468,51,0.937,52,1.307,53,1.329,54,1.549,55,1.458,57,1.307,58,1.307,59,1.59,60,1.704,61,1.978,62,1.307,63,1.095,64,1.307,65,2.005,66,1.095,67,1.458,68,1.095,69,1.099,70,0.937,71,1.704,72,1.704,73,1.748,74,1.704,75,1.704,76,1.748,77,1.549,78,1.307,79,1.307,80,1.307,81,2.019,82,2.188,83,1.458,84,1.458,85,2.188,86,2.033,87,1.307,88,2.033,89,1.307,90,2.033,91,1.307,92,1.307,93,2.091,94,1.307,95,1.307,96,3.068,97,1.095,98,1.349,99,0.538,100,0.811,101,1.099,102,1.095,103,1.095,104,3.001,105,2.5,106,1.704,107,2.36,108,2.707,109,2.091,110,3.389,111,3.389,112,3.389,113,2.185,114,2.091,115,1.704,116,1.095,117,1.095,118,2.36,119,1.704,120,2.556,121,2.36,122,2.36,123,1.704,124,2.36,125,1.095,126,1.095,127,1.704,128,1.095,129,1.704,130,2.091,131,1.704,132,1.095,133,1.095,134,1.704,135,1.704,136,1.095,137,1.095,138,1.095,139,1.704,140,1.704,141,1.095,142,1.095,143,1.095,144,2.36,145,1.095,146,1.095,147,1.095,148,1.095,149,1.704,150,1.704,151,1.704,152,1.704,153,2.091,154,1.704,155,1.095,156,1.095,157,1.704,158,1.095,159,1.095,160,1.095,161,2.091,162,1.704,163,1.704,164,1.095,165,2.091,166,1.704,167,1.095,168,2.091,169,1.748,170,0.811,171,1.458,172,2.033,173,1.095,174,2.36,175,1.307,236,0.937,351,1.628]],["title/injectables/TissueFtuService.html",[23,0.083,219,1.58]],["body/injectables/TissueFtuService.html",[3,0.656,4,0.656,5,0.724,7,0.764,13,0.381,16,0.853,17,0.054,22,0.947,23,0.12,24,0.557,25,1.21,26,0.764,27,0.947,28,2.294,29,0.656,32,1.732,34,0.883,36,0.993,38,0.039,39,0.039,40,0.883,41,1.318,43,1.318,45,1.333,46,1.163,47,1.333,49,1.465,55,1.769,61,1.333,85,1.769,99,1.318,180,2.686,184,2.298,219,2.298,220,1.924,263,3.769,267,1.769,270,2.802,271,1.769,277,2.298,289,3.159,352,2.067,353,4.695,354,3.991,355,3.071,356,3.071,357,3.071,358,2.466,359,2.466,360,2.466,361,3.204,362,3.204,363,3.071]],["title/injectables/TissueLibraryService.html",[23,0.083,65,1.367]],["body/injectables/TissueLibraryService.html",[3,0.748,4,0.748,5,0.635,7,0.871,13,0.435,17,0.053,22,1.007,23,0.131,24,0.635,25,1.172,26,0.871,27,0.748,28,2.137,29,0.748,36,0.871,38,0.042,39,0.042,40,1.006,41,1.433,43,1.157,49,1.433,50,1.247,53,1.673,65,2.162,67,2.017,68,2.356,174,3.315,180,2.919,181,3.483,364,3.502,365,3.315,366,3.502,367,4.338,368,4.338]],["title/dependencies.html",[369,1.855,370,2.213]],["body/dependencies.html",[17,0.052,24,0.751,38,0.047,39,0.047,370,3.226,371,4.137,372,4.137,373,4.137,374,4.137,375,4.794]],["title/miscellaneous/functions.html",[376,1.003,377,2.64]],["body/miscellaneous/functions.html",[13,0.38,15,2.064,16,1.001,17,0.051,34,0.879,36,1.101,38,0.039,39,0.039,45,2.033,46,1.774,47,2.033,49,1.315,50,0.879,51,2.548,59,1.507,61,1.326,71,2.678,72,2.678,73,2.205,75,2.057,76,2.336,81,1.76,82,2.292,83,2.292,84,1.76,99,1.01,105,1.76,220,1.326,262,2.977,267,1.76,268,2.057,269,2.454,270,1.76,271,1.76,272,2.454,273,2.454,275,2.454,276,2.454,277,1.76,278,3.195,279,2.454,280,3.195,281,3.195,282,3.195,283,2.678,284,3.153,285,2.678,286,2.678,287,2.057,376,1.326,377,2.454,378,3.153,379,3.979,380,3.979,381,3.057,382,2.454,383,3.057,384,3.057]],["title/index.html",[13,0.287,385,2.311,386,2.311]],["body/index.html",[17,0.047,38,0.047,39,0.047,231,3.834,268,2.766,365,2.766,387,4.111,388,4.776,389,4.111,390,4.776,391,4.776,392,4.111,393,4.111]],["title/modules.html",[212,2.492]],["body/modules.html",[17,0.047,38,0.047,39,0.047,211,2.846,212,2.846,394,4.229,395,4.229,396,4.229]],["title/overview.html",[397,2.973]],["body/overview.html",[2,2.775,17,0.047,38,0.047,39,0.047,40,1.185,210,3.311,294,2.775,300,2.775,327,2.775,370,3.22,397,3.311,398,4.785,399,4.124,400,4.124]],["title/properties.html",[14,1.894,369,1.855]],["body/properties.html",[14,2.443,17,0.05,38,0.048,39,0.048,401,4.243,402,4.243]],["title/miscellaneous/typealiases.html",[376,1.003,403,3.288]],["body/miscellaneous/typealiases.html",[13,0.41,16,1.135,17,0.041,38,0.041,39,0.041,49,1.381,50,0.949,53,1.593,59,1.826,67,2.407,69,1.814,177,1.901,178,1.645,192,2.642,200,3.087,205,3.087,206,3.087,207,3.087,220,1.432,267,2.407,288,3.087,352,2.813,359,4.314,376,1.432,378,3.087,404,3.301,405,4.145,406,4.194,407,4.588,408,3.356,409,3.683,410,2.65,411,2.65]],["title/miscellaneous/variables.html",[376,1.003,412,2.64]],["body/miscellaneous/variables.html",[5,0.206,12,1.404,13,0.141,15,1.077,16,0.774,17,0.054,34,0.981,38,0.019,39,0.019,46,0.431,49,0.94,50,0.545,51,1.404,53,1.128,55,0.655,59,1.293,60,0.765,61,1.234,69,1.765,73,2.081,76,0.567,81,0.655,82,1.638,83,0.655,84,0.655,93,0.765,96,2.81,97,0.765,98,0.823,99,1.044,100,0.945,101,0.823,102,1.276,103,0.765,104,2.652,105,2.186,106,1.276,107,1.914,108,2.298,109,1.641,110,3.166,111,3.166,112,3.166,113,2.042,114,1.641,115,1.276,116,0.765,117,0.765,118,1.914,119,1.276,120,2.127,121,1.914,122,1.914,123,1.276,124,1.914,125,0.765,126,0.765,127,1.276,128,0.765,129,1.276,130,1.641,131,1.276,132,0.765,133,0.765,134,1.276,135,1.276,136,0.765,137,0.765,138,0.765,139,1.276,140,1.276,141,0.765,142,0.765,143,0.765,144,1.914,145,0.765,146,0.765,147,0.765,148,0.765,149,1.276,150,1.276,151,1.276,152,1.276,153,1.641,154,1.276,155,0.765,156,0.765,157,1.276,158,0.765,159,0.765,160,0.765,161,1.641,162,1.276,163,1.276,164,0.765,165,1.641,166,1.276,167,0.765,168,1.641,177,0.655,178,0.567,192,2.87,193,0.913,220,0.823,262,1.641,270,1.092,271,0.655,277,1.404,283,2.298,284,0.765,285,2.127,286,1.641,287,3.338,288,3.354,289,0.765,290,1.522,291,0.913,292,1.522,293,0.913,294,3.066,295,1.522,296,1.957,297,3.047,298,1.522,299,2.284,300,2.81,301,3.047,302,1.522,303,2.284,304,2.284,305,2.742,306,2.538,307,0.913,308,1.522,309,1.957,310,1.957,311,3.047,312,0.913,313,1.522,314,0.913,315,0.913,316,0.913,317,1.957,318,0.913,319,1.522,320,0.913,321,1.957,322,2.284,323,0.913,324,0.913,325,0.913,326,1.522,327,1.641,328,0.913,329,0.913,330,0.913,331,0.913,332,0.913,333,0.913,334,0.913,335,0.913,336,0.913,337,0.913,338,0.913,339,2.742,340,2.538,341,2.538,342,0.913,343,0.913,344,0.913,345,0.913,346,0.913,347,0.913,348,0.913,352,1.276,358,3.164,360,1.522,361,3.352,362,3.265,365,0.765,376,0.493,378,2.438,382,3.841,405,3.429,406,3.496,408,1.522,409,1.957,410,0.913,411,0.913,412,0.913,413,2.438,414,2.438,415,1.896,416,1.896,417,2.438,418,2.438,419,2.438,420,2.438,421,1.896,422,3.942,423,1.137,424,1.137,425,1.137,426,1.137,427,1.137,428,1.137,429,2.438,430,1.896,431,1.896,432,1.137,433,2.438,434,1.137,435,2.438,436,2.438,437,1.896,438,1.137,439,1.137,440,1.137,441,1.896,442,1.896,443,1.137,444,1.137,445,1.137,446,1.137,447,1.137]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":402,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":311,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.2",{"_index":304,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.3",{"_index":310,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.4",{"_index":317,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":299,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.7",{"_index":325,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":294,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":298,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["101",{"_index":320,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":309,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":338,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["124",{"_index":328,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":341,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":307,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15.1.0",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":300,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":348,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["2000",{"_index":314,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["21",{"_index":332,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["230",{"_index":323,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["244",{"_index":329,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":301,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["332",{"_index":316,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":313,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["45",{"_index":339,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":303,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["57",{"_index":336,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":319,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["601",{"_index":324,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["675",{"_index":334,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":322,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["8",{"_index":327,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":331,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":80,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["abstract",{"_index":28,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["acc",{"_index":88,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["accepts",{"_index":19,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["acinus",{"_index":151,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["acinus.svg",{"_index":152,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":404,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alveolus",{"_index":132,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["alveolus.svg",{"_index":133,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{}}}],["argument",{"_index":35,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["array",{"_index":253,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ascending",{"_index":118,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":395,"title":{},"body":{"modules.html":{}}}],["base",{"_index":60,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base_id",{"_index":96,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bid",{"_index":281,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["biomarker",{"_index":288,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["biomarker.array",{"_index":426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biomarker1",{"_index":297,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker2",{"_index":305,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker3",{"_index":306,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker4",{"_index":342,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker5",{"_index":343,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker6",{"_index":344,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker7",{"_index":345,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker8",{"_index":346,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarkers",{"_index":425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blabel",{"_index":282,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["bronchial",{"_index":134,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":396,"title":{},"body":{"modules.html":{}}}],["cell",{"_index":192,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell.array",{"_index":424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_summary",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_summary_row",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_summary_row.array",{"_index":427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cells",{"_index":423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cellsummary",{"_index":205,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummaryrow",{"_index":407,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["childlabel",{"_index":89,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childnodes",{"_index":86,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["children",{"_index":83,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["children.reduce",{"_index":87,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childurl",{"_index":90,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["cid",{"_index":279,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["clabel",{"_index":280,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["class",{"_index":29,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["collecting",{"_index":120,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["collectiong",{"_index":128,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["console",{"_index":241,"title":{},"body":{"injectables/MockContactService.html":{}}}],["console.log('message",{"_index":244,"title":{},"body":{"injectables/MockContactService.html":{}}}],["const",{"_index":85,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{}}}],["contact",{"_index":8,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":243,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contact/contact.mock",{"_index":216,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contact/contact.service",{"_index":217,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contactmessage",{"_index":1,"title":{"interfaces/ContactMessage.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["contactservice",{"_index":31,"title":{"injectables/ContactService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["contactservice:11",{"_index":237,"title":{},"body":{"injectables/MockContactService.html":{}}}],["content",{"_index":246,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contents",{"_index":240,"title":{},"body":{"injectables/MockContactService.html":{}}}],["corpuscle",{"_index":116,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["corpuscle.svg",{"_index":117,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["cortical",{"_index":119,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":283,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["count_integer_error",{"_index":415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count_range_error",{"_index":416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["counts",{"_index":435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":71,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["createcell",{"_index":278,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["createcell('cell1",{"_index":296,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell10",{"_index":333,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell11",{"_index":335,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell12",{"_index":337,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell13",{"_index":340,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell2",{"_index":302,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell3",{"_index":308,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell4",{"_index":312,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell5",{"_index":315,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell6",{"_index":318,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell7",{"_index":321,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell8",{"_index":326,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell9",{"_index":330,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell(cid",{"_index":381,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid",{"_index":62,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["createlinkid('ftu",{"_index":94,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["createnodeid",{"_index":379,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnodeid(label",{"_index":75,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":276,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["crypt",{"_index":140,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":238,"title":{},"body":{"injectables/MockContactService.html":{}}}],["data",{"_index":99,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data.mock",{"_index":226,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["data.mock.ts",{"_index":248,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["data.model",{"_index":208,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["data.model.ts",{"_index":406,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.service",{"_index":224,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["data.service.ts",{"_index":179,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:13",{"_index":202,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:18",{"_index":199,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:24",{"_index":190,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:30",{"_index":195,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:36",{"_index":204,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data/ftu",{"_index":178,"title":{},"body":{"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data_file_reference",{"_index":417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datafilereference",{"_index":206,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["default",{"_index":382,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":43,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["definenode",{"_index":82,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["definenode('large",{"_index":138,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('liver",{"_index":160,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('prostate",{"_index":164,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('thymus",{"_index":167,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode(childlabel",{"_index":91,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["definenode(label",{"_index":383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defines",{"_index":9,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["dependencies",{"_index":370,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dermal",{"_index":154,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["descending",{"_index":106,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["duct",{"_index":121,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["duct.svg",{"_index":122,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":10,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["emits",{"_index":255,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["empty",{"_index":242,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["entered",{"_index":20,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["entire",{"_index":368,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["entries",{"_index":295,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["epidermal",{"_index":157,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":393,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["extended",{"_index":52,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extendedtissue",{"_index":48,"title":{"interfaces/ExtendedTissue.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extends",{"_index":54,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["fetch",{"_index":353,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ftu",{"_index":113,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu.mock",{"_index":223,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["ftu.mock.ts",{"_index":262,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ftu.service",{"_index":221,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["ftu.service.ts",{"_index":352,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu.service.ts:19",{"_index":356,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu.service.ts:22",{"_index":355,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu/2d",{"_index":112,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu/tissue",{"_index":220,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftudataservice",{"_index":176,"title":{"injectables/FtuDataService.html":{}},"body":{"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["ftudataservice:21",{"_index":258,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:30",{"_index":257,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:39",{"_index":252,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:47",{"_index":256,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:55",{"_index":260,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["function",{"_index":74,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["functions",{"_index":377,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":79,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["generated",{"_index":387,"title":{},"body":{"index.html":{}}}],["getcellsummaries",{"_index":184,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["getcellsummaries(id",{"_index":354,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["getcellsummaries(iri",{"_index":189,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences",{"_index":185,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences(iri",{"_index":194,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping",{"_index":186,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping(iri",{"_index":198,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl",{"_index":187,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl(iri",{"_index":201,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getreferenceorgans",{"_index":263,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["gets",{"_index":191,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["getsourcereferences",{"_index":188,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getsourcereferences(iri",{"_index":203,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getting",{"_index":385,"title":{"index.html":{}},"body":{}}],["gettissuelibrary",{"_index":174,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["given",{"_index":259,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["gland",{"_index":136,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["gland.svg",{"_index":137,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["glandular",{"_index":166,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":394,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helper",{"_index":275,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["henle",{"_index":109,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["henle.svg",{"_index":114,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["hra",{"_index":63,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["hraservicemodule",{"_index":211,"title":{"modules/HraServiceModule.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["https://example.com",{"_index":97,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":110,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":61,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["illustration",{"_index":254,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["illustration_mapping_item",{"_index":418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":200,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["implementation",{"_index":169,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inclusive",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inherited",{"_index":236,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["injectable",{"_index":23,"title":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["injectables",{"_index":40,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"overview.html":{}}}],["inner",{"_index":123,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["integer",{"_index":429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercalated",{"_index":149,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"overview.html":{}}}],["intestine",{"_index":139,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri",{"_index":69,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iri.array().default",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islates",{"_index":145,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["islets",{"_index":147,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["isreferenceorgan",{"_index":380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isreferenceorgan(obj",{"_index":272,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["json.stringify(message",{"_index":247,"title":{},"body":{"injectables/MockContactService.html":{}}}],["kidney",{"_index":104,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":73,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["langerhans",{"_index":146,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["langerhans.svg",{"_index":148,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":142,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":365,"title":{},"body":{"injectables/TissueLibraryService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["library.mock",{"_index":218,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{}}}],["library.mock.ts",{"_index":51,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["library.model",{"_index":68,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["library.model.ts",{"_index":409,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["library.service",{"_index":66,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["library.service.ts",{"_index":364,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library.service.ts:9",{"_index":366,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library/tissue",{"_index":50,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn",{"_index":141,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn.svg",{"_index":143,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":93,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":56,"title":{},"body":{"interfaces/ExtendedTissue.html":{}}}],["liver",{"_index":161,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":181,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/TissueLibraryService.html":{}}}],["loads",{"_index":367,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["lobule",{"_index":162,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lobule.svg",{"_index":163,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":239,"title":{},"body":{"injectables/MockContactService.html":{}}}],["loop",{"_index":108,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lung",{"_index":130,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":39,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medullary",{"_index":124,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":12,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":286,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":32,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["methods",{"_index":41,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["miscellaneous",{"_index":376,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":98,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_reference_organs",{"_index":290,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_summaries",{"_index":292,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data",{"_index":100,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mockcontactservice",{"_index":215,"title":{"injectables/MockContactService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["mockftudataservice",{"_index":225,"title":{"injectables/MockFtuDataService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["mocktissueftuservice",{"_index":222,"title":{"injectables/MockTissueFtuService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["mocktissuelibraryservice",{"_index":171,"title":{"injectables/MockTissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["module",{"_index":210,"title":{"modules/HraServiceModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":212,"title":{"modules.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["name",{"_index":46,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["negative",{"_index":437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nephron",{"_index":125,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nephron.svg",{"_index":126,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":72,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ngmodule",{"_index":214,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["node",{"_index":81,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":102,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":284,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":388,"title":{},"body":{"index.html":{}}}],["obeservable",{"_index":196,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["obj",{"_index":273,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["obj['object']['file",{"_index":274,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["object",{"_index":34,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":103,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(childnodes",{"_index":95,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["object.values(mock_tissue_data.nodes).filter(isreferenceorgan",{"_index":291,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["objecy",{"_index":57,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["observable",{"_index":25,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["of(mock_reference_organs",{"_index":349,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_summaries",{"_index":350,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_tissue_data",{"_index":175,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["of(mock_tissue_data.nodes[iri].object.file",{"_index":261,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["optional",{"_index":47,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["organ",{"_index":271,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":289,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":400,"title":{},"body":{"overview.html":{}}}],["outer",{"_index":127,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":173,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["overrides",{"_index":249,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["overview",{"_index":397,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":369,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pancreas",{"_index":144,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["pancreatic",{"_index":150,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla",{"_index":155,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla.svg",{"_index":156,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":209,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["parameters",{"_index":45,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":76,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parent}${label.replace",{"_index":78,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["peer",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":285,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["percentage_range_error",{"_index":419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["percentage_range_error).lte(1",{"_index":440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"properties.html":{}}}],["prostate",{"_index":165,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":232,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["providedin",{"_index":170,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["providers",{"_index":227,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["pulmonary",{"_index":131,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["purposes",{"_index":251,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["real",{"_index":230,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["received",{"_index":245,"title":{},"body":{"injectables/MockContactService.html":{}}}],["record",{"_index":84,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":270,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":360,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["referenceorgan",{"_index":267,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["references",{"_index":197,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["related",{"_index":182,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["releases/v1.3/2d",{"_index":111,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["renal",{"_index":115,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["replace",{"_index":229,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["representation_of",{"_index":55,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["representing",{"_index":30,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["represents",{"_index":235,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["reset",{"_index":399,"title":{},"body":{"overview.html":{}}}],["results",{"_index":38,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":77,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["returns",{"_index":36,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ridge",{"_index":158,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ridge.svg",{"_index":159,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":101,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":392,"title":{},"body":{"index.html":{}}}],["running",{"_index":389,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":26,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["same",{"_index":411,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema",{"_index":422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sendmessage",{"_index":42,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["sendmessage(message",{"_index":37,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["service",{"_index":180,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["services",{"_index":231,"title":{},"body":{"modules/HraServiceModule.html":{},"index.html":{}}}],["shared/common.model",{"_index":70,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["single",{"_index":183,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["skin",{"_index":153,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["source_reference",{"_index":420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourcereference",{"_index":207,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../common.model.ts",{"_index":408,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ftu",{"_index":405,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":378,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.mock.ts",{"_index":234,"title":{},"body":{"injectables/MockContactService.html":{}}}],["src/lib/contact/contact.service.ts",{"_index":6,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["src/lib/contact/contact.service.ts:18",{"_index":44,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/lib/ftu",{"_index":177,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/service.module.ts",{"_index":213,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["src/lib/shared/common.model.ts",{"_index":410,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/tissue",{"_index":49,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":386,"title":{"index.html":{}},"body":{}}],["stoe",{"_index":58,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":11,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["submucosal",{"_index":135,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["summaries",{"_index":193,"title":{},"body":{"injectables/FtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":277,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary1",{"_index":293,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summary2",{"_index":347,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["synonymlabels",{"_index":92,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["takes",{"_index":33,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{}}}],["test",{"_index":268,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["testing",{"_index":250,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["tests",{"_index":391,"title":{},"body":{"index.html":{}}}],["thick",{"_index":129,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":107,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thymus",{"_index":168,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue",{"_index":53,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tissue_library",{"_index":421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tissueftuservice",{"_index":219,"title":{"injectables/TissueFtuService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["tissueftuservice:88",{"_index":265,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissueftuservice:93",{"_index":264,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissuelibrary",{"_index":67,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryservice",{"_index":65,"title":{"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["tissuelibraryservice.gettissuelibrary",{"_index":172,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["tissuelibraryservice:162",{"_index":351,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["todo",{"_index":228,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["tslib",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":403,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui/cdk/state",{"_index":64,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["ui/utils/types",{"_index":266,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["undefined",{"_index":105,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":390,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":363,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["url",{"_index":59,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["url.brand('iri",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":233,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["user",{"_index":21,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["value",{"_index":287,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":18,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["variables",{"_index":412,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":401,"title":{},"body":{"properties.html":{}}}],["whether",{"_index":269,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["yes",{"_index":384,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":357,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["z.infer",{"_index":359,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{}}}],["z.number().gte(0",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().int(count_integer_error).nonnegative(count_range_error",{"_index":428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.object",{"_index":361,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.record(iri",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":362,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.string().url",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().url().brand('url",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zero",{"_index":432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zod",{"_index":358,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":398,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ContactMessage.html":{"url":"interfaces/ContactMessage.html","title":"interface - ContactMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A interface contact which defines email, subject, and the message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable email which accepts the email entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable message which accepts the message entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable subject which accepts the subject entered by user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a ContactService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/contact/contact.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes a ContactMessage object as an argument and returns an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedTissue.html":{"url":"interfaces/ExtendedTissue.html","title":"interface - ExtendedTissue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtendedTissue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Extended tissue\n\n            \n\n            \n                Extends\n            \n            \n                        Tissue\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Objecy to stoe the file URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Base Id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://example.com/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FtuDataService.html":{"url":"injectables/FtuDataService.html","title":"injectable - FtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading all data related to a single ftu\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getDataFileReferences\n                            \n                            \n                                    Abstract\n                                getIllustrationMapping\n                            \n                            \n                                    Abstract\n                                getIllustrationUrl\n                            \n                            \n                                    Abstract\n                                getSourceReferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:24\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable of cell summaries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:30\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of data file references\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable of IllustrationMappingItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:13\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable url\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of source references\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport { CellSummary, DataFileReference, IllustrationMappingItem, SourceReference } from './ftu-data.model';\n\n/** Service for loading all data related to a single ftu */\n@Injectable()\nexport abstract class FtuDataService {\n  /**\n   * This method takes\n   * @param iri and @returns an observable url\n   */\n  abstract getIllustrationUrl(iri: Iri): Observable;\n  /**\n   * This method takes\n   * @param iri and @returns observable of IllustrationMappingItem\n   */\n  abstract getIllustrationMapping(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri and\n   * @returns observable of cell summaries\n   */\n  abstract getCellSummaries(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of data file references\n   */\n  abstract getDataFileReferences(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of source references\n   */\n  abstract getSourceReferences(iri: Iri): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraServiceModule.html":{"url":"modules/HraServiceModule.html","title":"module - HraServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    HraServiceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/service.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MockContactService } from './contact/contact.mock';\nimport { ContactService } from './contact/contact.service';\nimport { MockTissueLibraryService } from './tissue-library/tissue-library.mock';\nimport { TissueLibraryService } from './tissue-library/tissue-library.service';\nimport { TissueFtuService } from './tissue-ftu/tissue-ftu.service';\nimport { MockTissueFtuService } from './tissue-ftu/tissue-ftu.mock';\nimport { FtuDataService } from './ftu-data/ftu-data.service';\nimport { MockFtuDataService } from './ftu-data/ftu-data.mock';\n\n@NgModule({\n  providers: [\n    // TODO replace with real services\n    {\n      provide: ContactService,\n      useExisting: MockContactService,\n    },\n    {\n      provide: TissueLibraryService,\n      useExisting: MockTissueLibraryService,\n    },\n    {\n      provide: TissueFtuService,\n      useExisting: MockTissueFtuService,\n    },\n    {\n      provide: FtuDataService,\n      useExisting: MockFtuDataService,\n    },\n  ],\n})\nexport class HraServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockContactService.html":{"url":"injectables/MockContactService.html","title":"injectable - MockContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents mock implementation of the ContactService class.\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    It accepts an object of type ContactMessage and currently logs the message contents on the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { ContactMessage, ContactService } from './contact.service';\n\n/** This class represents mock implementation of the ContactService class. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockContactService extends ContactService {\n  /** It accepts an object of type ContactMessage and currently logs the message contents on the console. */\n  sendMessage(message: ContactMessage): Observable {\n    console.log('Message received. Content: ' + JSON.stringify(message));\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockFtuDataService.html":{"url":"injectables/MockFtuDataService.html","title":"injectable - MockFtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockFtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n\n            \n\n            \n                Extends\n            \n            \n                        FtuDataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCellSummaries\n                            \n                            \n                                    \n                                getDataFileReferences\n                            \n                            \n                                    \n                                getIllustrationMapping\n                            \n                            \n                                    \n                                getIllustrationUrl\n                            \n                            \n                                    \n                                getSourceReferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:39\n\n                \n            \n\n\n            \n                \n                    Overrides the getCellSummaries method to return an CellSummary array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits an CellSummary array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:47\n\n                \n            \n\n\n            \n                \n                    Overrides the getDataFileReferences method to return an DataFileReference array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an DataFileReference array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:30\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an IllustrationMappingItem array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:21\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits the mock URL.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:55\n\n                \n            \n\n\n            \n                \n                    Overrides the getSourceReferences method to return an empty array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an empty array.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport { CellSummary, DataFileReference, IllustrationMappingItem, SourceReference } from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/**\nThis class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockFtuDataService extends FtuDataService {\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return of(MOCK_TISSUE_DATA.nodes[iri].object.file);\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return of([]);\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return of([]);\n  }\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return of([]);\n  }\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return of([]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueFtuService.html":{"url":"injectables/MockTissueFtuService.html","title":"injectable - MockTissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of TissueFtuService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueFtuService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCellSummaries\n                            \n                            \n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \ngetCellSummaries()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:93\n\n                \n            \n\n\n            \n                \n                    Implementation of abstract method\n\n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:88\n\n                \n            \n\n\n            \n                \n                    Implementation of getReferenceOrgans method\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Any } from '@hra-ui/utils/types';\nimport { Observable, of } from 'rxjs';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport { ReferenceOrgan, TissueFtuService } from './tissue-ftu.service';\n\n/** Test whether an object is a reference organ */\nfunction isReferenceOrgan(obj: Any): obj is ReferenceOrgan {\n  return !!obj['object']['file'];\n}\n\n/** Helper for creating summary data */\nfunction createCell(\n  cid: string,\n  clabel: string,\n  bid: string,\n  blabel: string,\n  count: number,\n  percentage: number,\n  metadata: { label: string; value: string }[][] = []\n) {\n  return {\n    cell: {\n      id: cid,\n      label: clabel,\n    },\n    biomarker: {\n      id: bid,\n      label: blabel,\n    },\n    count,\n    percentage,\n    metadata,\n  };\n}\n\n/** Reference organs */\nconst MOCK_REFERENCE_ORGANS = Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan);\n\n/** Mock summary data */\nconst MOCK_SUMMARIES = {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 0.5, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1)],\n  },\n};\n\n/** Implementation of TissueFtuService */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueFtuService extends TissueFtuService {\n  /** Implementation of getReferenceOrgans method */\n  getReferenceOrgans(): Observable {\n    return of(MOCK_REFERENCE_ORGANS);\n  }\n\n  /** Implementation of abstract method */\n  getCellSummaries(): Observable {\n    return of(MOCK_SUMMARIES);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueLibraryService.html":{"url":"injectables/MockTissueLibraryService.html","title":"injectable - MockTissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock implementation of TissueLibraryService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueLibraryService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueLibraryService\n\n                \n            \n            \n                \n                        Defined in         TissueLibraryService:162\n\n                \n            \n\n\n            \n                \n                    Implementation of TissueLibraryService.getTissueLibrary\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://example.com/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueFtuService.html":{"url":"injectables/TissueFtuService.html","title":"injectable - TissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract Service to fetch reference organs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(id)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:22\n                \n            \n\n\n            \n                \n                    Get summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:19\n                \n            \n\n\n            \n                \n                    abstract Method to fetch reference organs\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\nexport type ReferenceOrgan = z.infer;\n\n/** Reference organ type */\nexport const REFERENCE_ORGAN = z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n});\n\n/** Abstract Service to fetch reference organs */\n@Injectable()\nexport abstract class TissueFtuService {\n  /** abstract Method to fetch reference organs */\n  abstract getReferenceOrgans(): Observable;\n\n  /** Get summary data */\n  abstract getCellSummaries(id: unknown): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryService.html":{"url":"injectables/TissueLibraryService.html","title":"injectable - TissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading the tissue library\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.service.ts:9\n                \n            \n\n\n            \n                \n                    Loads the entire tissue library\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TissueLibrary } from './tissue-library.model';\n\n/** Service for loading the tissue library */\n@Injectable()\nexport abstract class TissueLibraryService {\n  /** Loads the entire tissue library */\n  abstract getTissueLibrary(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createCell   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            createNodeId   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            defineNode   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            isReferenceOrgan   (src/.../tissue-ftu.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCell\n                        \n                    \n                \n            \n            \n                \ncreateCell(cid: string, clabel: string, bid: string, blabel: string, count: number, percentage: number, metadata)\n                \n            \n\n\n\n\n            \n                \n                    Helper for creating summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    cid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    clabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    blabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    metadata\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReferenceOrgan\n                        \n                    \n                \n            \n            \n                \nisReferenceOrgan(obj: Any)\n                \n            \n\n\n\n\n            \n                \n                    Test whether an object is a reference organ\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                Any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReferenceOrgan\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createNodeId\n                        \n                    \n                \n            \n            \n                \ncreateNodeId(label: string, parent: string)\n                \n            \n\n\n\n\n            \n                \n                    Create a new id from a label\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defineNode\n                        \n                    \n                \n            \n            \n                \ndefineNode(label: string, parent: string, url?: string, ...children: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Create a new node\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    children\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nservices\nThis library was generated with Nx.\nRunning unit tests\nRun nx test services to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraServiceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Biomarker   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Cell   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CellSummary   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CellSummaryRow   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DataFileReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            IllustrationMappingItem   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Iri   (src/.../common.model.ts)\n                        \n                        \n                            ReferenceOrgan   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SourceReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Tissue   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibrary   (src/.../tissue-library.model.ts)\n                        \n                        \n                            Url   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n    \n        \n            \n                \n                    \n                    Biomarker\n                \n            \n            \n                \n                    Type for a Biomarker\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Cell\n                \n            \n            \n                \n                    Type for a cell\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummary\n                \n            \n            \n                \n                    Type for a CellSummary\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryRow\n                \n            \n            \n                \n                    Type for a CellSummaryRow\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataFileReference\n                \n            \n            \n                \n                    Type for a DataFileReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IllustrationMappingItem\n                \n            \n            \n                \n                    Type for a IllustrationMappingItem\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceReference\n                \n            \n            \n                \n                    Type for a SourceReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/shared/common.model.ts\n    \n    \n        \n            \n                \n                    \n                    Iri\n                \n            \n            \n                \n                    Same as an Url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Url\n                \n            \n            \n                \n                    Any url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReferenceOrgan\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    Tissue\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibrary\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ID   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            BIOMARKER   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SUMMARY   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SUMMARY_ROW   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_INTEGER_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DATA_FILE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            ILLUSTRATION_MAPPING_ITEM   (src/.../ftu-data.model.ts)\n                        \n                        \n                            IRI   (src/.../common.model.ts)\n                        \n                        \n                            MOCK_REFERENCE_ORGANS   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_SUMMARIES   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_TISSUE_DATA   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            PERCENTAGE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            PERCENTAGE_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            REFERENCE_ORGAN   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SOURCE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TISSUE   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TISSUE_LIBRARY   (src/.../tissue-library.model.ts)\n                        \n                        \n                            URL   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://example.com/'\n                    \n                \n\n            \n                \n                    Base node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_TISSUE_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n}\n                    \n                \n\n            \n                \n                    Mock tissue data\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BIOMARKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a BIOMARKER\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a cell object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  cells: CELL.array(),\n  biomarkers: BIOMARKER.array(),\n  summaries: CELL_SUMMARY_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell: IRI,\n  biomarker: IRI,\n  count: COUNT,\n  percentage: PERCENTAGE,\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY_ROW\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().int(COUNT_INTEGER_ERROR).nonnegative(COUNT_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A integer greater than or equal to zero\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_INTEGER_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be an integer'\n                    \n                \n\n            \n                \n                    Error message for non integer counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be greater than or equal to 0'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_FILE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  format: z.string(),\n  url: URL,\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a DATA_FILE_REFERENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ILLUSTRATION_MAPPING_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  name: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a ILLUSTRATION_MAPPING_ITEM\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().gte(0, PERCENTAGE_RANGE_ERROR).lte(1, PERCENTAGE_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A number between 0 and 1 inclusive\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Percentage must be between 0 and 1 (inclusive)'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SOURCE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  link: z.string().url(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a SOURCE_REFERENCE\n\n                \n            \n\n        \n    \n\n    src/lib/shared/common.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : URL.brand('IRI')\n                    \n                \n\n            \n                \n                    Same as an URL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.string().url().brand('URL')\n                    \n                \n\n            \n                \n                    Any url\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MOCK_REFERENCE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan)\n                    \n                \n\n            \n                \n                    Reference organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_SUMMARIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 0.5, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1)],\n  },\n}\n                    \n                \n\n            \n                \n                    Mock summary data\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFERENCE_ORGAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n})\n                    \n                \n\n            \n                \n                    Reference organ type\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-library/tissue-library.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TISSUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n  parent: IRI,\n  children: IRI.array().default([]),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LIBRARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue Library\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
