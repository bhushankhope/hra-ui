var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ContactImplService.html",[0,0.022,1,1.98]],["body/injectables/ContactImplService.html",[0,0.035,1,3.588,2,0.943,3,0.627,4,0.537,5,0.537,6,3.713,7,0.627,8,3.165,9,2.124,10,4.589,11,4.589,12,4.589,13,3.165,14,4.589,15,1.673,16,2.408,17,0.372,18,1.318,19,3.588,20,2.742,21,2.727,22,1.719,23,1.066,24,3.018,25,2.742,26,1.486,27,4.589,28,2.61,29,4.589,30,3.165,31,4.589,32,1.354,33,0.047,34,1.354,35,0.627,36,1.354,37,0.725,38,0.972,39,3.165,40,0.842,41,0.537,42,3.018,43,0.725,44,1.203,45,1.203,46,0.627,47,0.627,48,1.719,49,1.354,50,3.713,51,3.713,52,3.713,53,3.713,54,3.713,55,3.713,56,3.713,57,3.713,58,3.713,59,0.037,60,0.037]],["title/interfaces/ContactMessage.html",[21,1.505,61,0.93]],["body/interfaces/ContactMessage.html",[0,0.035,3,0.608,4,0.52,5,0.52,7,0.608,13,3.103,16,2.083,17,0.36,20,2.15,21,2.696,26,1.165,28,2.95,30,3.882,33,0.047,35,0.83,37,0.702,38,0.958,39,2.481,40,0.76,41,0.52,43,0.702,46,0.76,47,0.76,59,0.036,60,0.036,61,1.59,62,2.15,63,2.924,64,3.658,65,4.576,66,2.358,67,1.811,68,4.392,69,3.726,70,4.392,71,4.392,72,2.273,73,2.924,74,2.481,75,0.913,76,2.924]],["title/injectables/ContactService.html",[0,0.022,16,1.329]],["body/injectables/ContactService.html",[0,0.035,2,0.934,3,0.621,4,0.532,5,0.532,7,0.621,13,2.536,16,2.4,17,0.368,18,1.31,19,3.146,20,2.726,21,2.847,23,1.056,26,1.477,28,2.794,30,3.576,32,1.341,33,0.047,34,1.341,35,0.621,36,1.341,37,0.968,38,1.04,39,3.146,40,0.771,41,0.532,43,0.718,46,0.771,47,0.838,59,0.037,60,0.037,61,1.477,63,2.989,64,2.989,65,4.215,67,1.606,68,4.031,69,3.42,70,4.031,71,4.031,72,2.515,73,3.708,74,3.146,75,1.158,76,3.708,77,3.677]],["title/interfaces/ExtendedTissue.html",[61,0.93,78,1.98]],["body/interfaces/ExtendedTissue.html",[0,0.025,3,0.382,4,0.327,5,0.652,7,0.382,15,1.411,17,0.226,33,0.048,35,0.762,38,0.641,40,0.795,41,0.327,43,0.441,44,0.732,45,1.064,46,0.555,47,0.382,48,1.047,49,1.645,59,0.026,60,0.026,61,0.732,62,1.351,66,1.722,67,1.691,75,1.145,78,2.266,79,0.824,80,0.824,81,1.351,82,2.671,83,1.429,84,2.088,85,2.671,86,2.671,87,2.671,88,1.612,89,2.028,90,1.691,91,1.351,92,1.185,93,1.351,94,2.312,95,1.838,96,1.198,97,1.559,98,1.198,99,1.047,100,2.266,101,1.521,102,1.549,103,2.266,104,2.266,105,1.743,106,1.588,107,1.838,108,1.838,109,1.838,110,2.538,111,2.696,112,1.521,113,1.963,114,2.671,115,1.838,116,2.671,117,1.838,118,2.671,119,1.838,120,1.838,121,1.791,122,1.185,123,1.838,124,3.553,125,1.185,126,2.022,127,1.198,128,0.649,129,1.185,130,1.185,131,1.559,132,3.031,133,2.303,134,2.266,135,2.929,136,3.246,137,2.669,138,3.81,139,3.81,140,3.81,141,2.669,142,2.266,143,1.559,144,1.559,145,2.929,146,2.266,147,3.111,148,2.929,149,2.929,150,2.266,151,2.929,152,1.559,153,1.559,154,2.266,155,1.559,156,2.266,157,2.669,158,2.266,159,1.559,160,1.559,161,2.266,162,2.266,163,1.559,164,1.559,165,1.559,166,2.266,167,2.266,168,1.559,169,1.559,170,1.559,171,2.929,172,1.559,173,1.559,174,1.559,175,1.559,176,2.266,177,2.266,178,2.266,179,2.266,180,2.669,181,2.266,182,1.559,183,1.559,184,2.266,185,1.559,186,1.559,187,1.559,188,2.669,189,2.266,190,2.266,191,1.559,192,2.669,193,2.266,194,1.559,195,2.669,196,1.722,197,1.559,198,1.838,199,0.928,200,1.838]],["title/interfaces/FtuDataImplEndpoints.html",[61,0.93,201,1.98]],["body/interfaces/FtuDataImplEndpoints.html",[0,0.017,3,0.222,4,0.458,5,0.731,7,0.536,8,0.904,9,0.996,15,0.478,17,0.131,25,2.248,26,1.218,33,0.048,35,0.766,37,0.946,38,0.933,40,0.701,41,0.19,43,0.256,44,0.697,45,0.887,46,0.536,47,0.222,48,1.741,49,1.97,59,0.033,60,0.017,61,0.425,62,0.784,66,1.128,67,0.697,75,1.123,83,1.27,84,0.607,88,1.71,89,1.128,90,1.59,91,0.784,92,0.687,93,0.784,96,0.785,98,2.046,99,0.607,101,1.467,102,1.744,105,1.124,106,2.145,112,0.996,121,1.62,122,0.687,125,0.687,126,1.156,127,0.785,128,1.541,130,1.435,133,1.62,199,0.884,201,1.485,202,0.607,203,0.538,204,0.784,205,2.414,206,1.75,207,1.888,208,1.75,209,2.083,210,2.252,211,2.047,212,3.23,213,2.74,214,1.613,215,1.661,216,1.066,217,1.066,218,1.066,219,1.066,220,1.066,221,2.226,222,2.092,223,1.286,224,1.839,225,2.083,226,1.834,227,1.435,228,0.784,229,0.996,230,0.784,231,0.904,232,1.485,233,0.784,234,0.904,235,0.904,236,2.594,237,0.904,238,0.904,239,0.904,240,0.904,241,0.904,242,0.784,243,0.904,244,0.904,245,0.904,246,0.904,247,0.904,248,2.092,249,0.904,250,2.252,251,3.373,252,0.784,253,1.485,254,1.066,255,1.888,256,1.066,257,0.904,258,2.092,259,1.888,260,2.568,261,1.485,262,2.814,263,1.888,264,1.888,265,0.904,266,1.888,267,2.933,268,1.888,269,2.186,270,0.904,271,1.485,272,2.594,273,1.485,274,0.904,275,0.904,276,1.268,277,0.904,278,0.904,279,0.904,280,0.904,281,0.904,282,1.888,283,0.996,284,0.996,285,1.485,286,0.904,287,0.904,288,0.904,289,1.894,290,1.485,291,1.485,292,0.904,293,0.904,294,2.186,295,1.286,296,1.066,297,1.066,298,0.904,299,1.066,300,2.226,301,1.066,302,1.75,303,3.888,304,2.226,305,1.066,306,1.066,307,1.066,308,1.066,309,2.226,310,1.066,311,1.75,312,1.75,313,1.75,314,2.226,315,1.75,316,0.884,317,2.594,318,1.066,319,2.226,320,2.226,321,3.493,322,1.066,323,0.784,324,0.904,325,2.994,326,2.963,327,0.784,328,1.066,329,1.066,330,0.784,331,0.784,332,2.576,333,2.226,334,1.066,335,1.066,336,0.607,337,0.784,338,1.066,339,1.066,340,1.066,341,1.066,342,0.784,343,0.784,344,1.066,345,1.066,346,0.784,347,1.286,348,0.784,349,1.066,350,1.066,351,1.066,352,1.066,353,1.066,354,1.066,355,1.066,356,1.75,357,2.186,358,2.226,359,1.066,360,1.066,361,1.066,362,1.066,363,1.066,364,1.066,365,1.066,366,1.066,367,1.066,368,1.066,369,1.066,370,1.066,371,1.066,372,1.066,373,1.066,374,1.066,375,1.066,376,1.066,377,1.066,378,2.226,379,1.066,380,1.066,381,3.23,382,1.066,383,1.066,384,1.066,385,2.226,386,1.066,387,1.066,388,1.066,389,1.066,390,1.066,391,1.066,392,0.904,393,1.066,394,2.226,395,1.066,396,1.75,397,1.066,398,1.75,399,1.066,400,1.066,401,1.066,402,1.066,403,1.066,404,1.75,405,1.066,406,2.226,407,1.066,408,1.066,409,0.784,410,1.066,411,0.784,412,1.066,413,1.066,414,1.066,415,1.066,416,1.066,417,1.286,418,2.226,419,1.75,420,1.066,421,1.286,422,1.75,423,1.066,424,0.607,425,0.784,426,0.784,427,0.607,428,1.066,429,1.066,430,1.066,431,1.066,432,1.066,433,1.066,434,1.066,435,1.75,436,1.066,437,1.066,438,1.066,439,2.226,440,1.066,441,1.066,442,1.066]],["title/injectables/FtuDataImplService.html",[0,0.022,295,1.716]],["body/injectables/FtuDataImplService.html",[0,0.016,2,0.307,3,0.204,4,0.374,5,0.696,7,0.705,8,1.389,9,1.197,15,0.734,17,0.121,18,0.578,22,1.674,23,1.039,25,2.698,26,1.462,32,1.221,33,0.048,34,1.221,35,0.778,36,1.221,37,0.986,38,1.017,40,0.679,41,0.175,43,0.236,44,0.652,45,0.838,46,0.51,47,0.204,48,1.674,49,1.948,59,0.032,60,0.016,61,0.392,67,0.652,75,1.092,83,1.322,84,0.56,88,1.648,89,1.055,90,1.559,91,0.723,92,0.634,93,0.723,96,0.734,98,2.076,99,0.56,101,1.396,102,1.707,105,1.062,106,2.177,112,0.932,121,1.55,122,0.634,125,0.634,126,1.221,127,1.1,128,1.524,130,1.356,133,1.55,199,1.484,201,0.834,202,0.56,203,0.497,204,0.723,205,2.08,206,0.983,207,1.389,208,0.983,209,1.581,210,1.755,211,1.674,212,2.452,213,2.08,214,1.398,215,1.356,216,0.983,217,0.983,218,0.983,219,0.983,220,0.983,221,2.103,222,2.002,223,1.203,224,1.93,225,2.185,226,2.009,227,1.356,228,0.723,229,1.93,230,0.723,231,0.834,232,1.389,233,0.723,234,0.834,235,0.834,236,2.494,237,0.834,238,0.834,239,0.834,240,0.834,241,0.834,242,0.723,243,0.834,244,0.834,245,0.834,246,0.834,247,0.834,248,2.002,249,0.834,250,2.185,251,3.264,252,0.723,253,1.389,254,0.983,255,1.784,256,0.983,257,0.834,258,2.002,259,1.784,260,2.491,261,1.389,262,2.75,263,1.784,264,1.784,265,0.834,266,1.784,267,3.08,268,1.784,269,2.08,270,0.834,271,1.389,272,2.494,273,1.389,274,0.834,275,0.834,276,1.197,277,0.834,278,0.834,279,0.834,280,0.834,281,0.834,282,1.784,283,0.932,284,0.932,285,1.389,286,0.834,287,0.834,288,0.834,289,2.161,290,1.389,291,1.389,292,0.834,293,0.834,294,2.08,295,1.802,296,1.637,297,1.637,298,1.389,299,1.637,300,2.103,301,0.983,302,1.637,303,3.805,304,2.103,305,0.983,306,0.983,307,0.983,308,0.983,309,2.103,310,0.983,311,1.637,312,1.637,313,1.637,314,2.103,315,1.637,316,1.062,317,3.113,318,0.983,319,2.103,320,2.103,321,3.389,322,0.983,323,1.802,324,1.389,325,2.941,326,3.228,327,1.203,328,0.983,329,0.983,330,1.802,331,1.203,332,2.452,333,2.103,334,0.983,335,0.983,336,1.396,337,1.203,338,0.983,339,0.983,340,0.983,341,0.983,342,1.802,343,1.203,344,0.983,345,0.983,346,1.802,347,1.802,348,1.203,349,0.983,350,0.983,351,0.983,352,0.983,353,0.983,354,0.983,355,0.983,356,1.637,357,2.08,358,2.103,359,0.983,360,0.983,361,0.983,362,0.983,363,0.983,364,0.983,365,0.983,366,0.983,367,0.983,368,0.983,369,0.983,370,0.983,371,0.983,372,0.983,373,0.983,374,0.983,375,0.983,376,0.983,377,0.983,378,2.103,379,0.983,380,0.983,381,3.117,382,0.983,383,0.983,384,0.983,385,2.103,386,0.983,387,0.983,388,0.983,389,0.983,390,0.983,391,0.983,392,0.834,393,0.983,394,2.103,395,0.983,396,1.637,397,0.983,398,1.637,399,0.983,400,0.983,401,0.983,402,0.983,403,0.983,404,1.637,405,0.983,406,2.103,407,0.983,408,0.983,409,0.723,410,0.983,411,0.723,412,0.983,413,0.983,414,0.983,415,0.983,416,0.983,417,1.203,418,2.103,419,1.637,420,0.983,421,1.203,422,1.637,423,0.983,424,0.56,425,0.723,426,0.723,427,0.56,428,0.983,429,0.983,430,0.983,431,0.983,432,0.983,433,0.983,434,0.983,435,1.637,436,0.983,437,0.983,438,0.983,439,2.103,440,0.983,441,0.983,442,0.983,443,1.21,444,1.21,445,1.21,446,1.21,447,1.21,448,1.21]],["title/injectables/FtuDataService.html",[0,0.022,229,1.329]],["body/injectables/FtuDataService.html",[0,0.03,2,0.735,3,0.489,4,0.639,5,0.639,7,0.8,9,1.808,17,0.29,18,1.122,23,1.463,26,1.533,32,1.802,33,0.047,34,1.802,35,0.835,36,1.802,37,1.076,38,1.109,40,0.8,41,0.418,43,0.565,46,0.489,47,0.489,59,0.031,60,0.031,72,2.631,74,3.264,83,1.359,88,1.432,96,1.055,98,2.103,99,1.339,126,1.612,128,1.359,199,1.943,202,2.41,203,2.137,211,1.808,214,1.424,215,2.481,224,1.339,225,1.516,226,2.317,227,1.516,228,1.729,229,1.808,316,1.943,323,2.334,325,2.954,327,2.334,330,2.334,331,2.334,336,1.808,337,2.334,342,2.334,343,2.334,346,2.334,348,2.334,449,2.893,450,3.175,451,3.905,452,3.905,453,2.893,454,5.294,455,2.893,456,4.733,457,2.893,458,2.893,459,2.893,460,2.893]],["title/modules/HraServiceModule.html",[461,2.334,462,1.98]],["body/modules/HraServiceModule.html",[1,3.299,3,0.672,4,0.575,5,0.575,16,2.214,33,0.047,40,0.921,41,0.575,46,0.672,47,0.672,59,0.039,60,0.039,126,1.871,203,1.964,209,2.083,210,2.083,211,1.84,214,1.449,229,2.214,230,2.376,233,2.859,295,2.859,462,3.299,463,2.741,464,3.975,465,4.784,466,3.975,467,3.975,468,3.975,469,3.975,470,4.172,471,4.784,472,3.975,473,3.975,474,3.975,475,4.784,476,3.975,477,3.975]],["title/injectables/MockContactService.html",[0,0.022,478,2.334]],["body/injectables/MockContactService.html",[0,0.036,2,0.96,3,0.639,4,0.546,5,0.546,7,0.639,15,1.692,16,2.532,17,0.378,18,1.333,19,3.2,20,2.773,21,2.866,22,1.75,23,1.086,24,3.073,28,2.631,32,1.378,33,0.047,34,1.378,35,0.848,36,1.378,37,0.738,38,0.98,40,0.848,41,0.546,42,3.073,43,0.738,44,1.224,45,1.224,46,0.639,47,0.908,59,0.037,60,0.037,69,3.2,75,1.178,106,1.552,127,1.692,196,2.432,347,2.773,478,3.772,479,3.78,480,3.772,481,4.64,482,4.64,483,4.64,484,4.64,485,3.78,486,3.78,487,3.78,488,3.78]],["title/injectables/MockFtuDataService.html",[0,0.022,489,2.334]],["body/injectables/MockFtuDataService.html",[0,0.024,2,0.523,3,0.348,4,0.443,5,0.298,7,0.769,15,1.118,17,0.206,18,1.166,22,2.107,23,1.307,25,3.157,26,1.677,32,1.583,33,0.047,34,1.583,35,0.734,36,1.583,37,1.011,38,1.082,40,0.797,41,0.298,43,0.402,44,0.667,45,0.667,46,0.348,47,0.797,48,2.107,49,1.118,59,0.025,60,0.025,80,0.751,83,1.354,88,1.474,90,0.993,96,0.751,98,2.094,99,0.953,102,1.865,105,1.259,106,2.228,121,2.243,126,1.118,127,1.888,128,1.469,129,1.079,132,1.833,196,1.607,199,1.868,202,0.953,203,0.845,211,0.953,214,0.751,215,1.079,224,2.107,225,2.275,226,2.275,227,1.079,228,1.231,229,2.368,230,1.231,242,1.231,260,1.231,267,3.205,283,0.953,284,0.953,289,1.833,316,1.259,317,3.476,323,2.426,324,2.115,325,2.595,326,3.476,327,1.833,330,2.426,331,1.833,336,1.88,337,1.833,342,2.426,343,1.833,346,2.426,347,2.426,348,1.833,409,1.231,411,3.157,417,1.231,421,1.231,424,0.953,425,1.231,426,1.231,427,0.953,470,2.493,480,2.493,489,2.493,490,1.674,491,3.067,492,3.067,493,2.059,494,2.059,495,2.059,496,2.059,497,2.059,498,2.059,499,1.42,500,0.953,501,2.059,502,1.674,503,2.493,504,2.493,505,2.493,506,2.493,507,2.493,508,2.493,509,2.493,510,2.493,511,2.493,512,3.939,513,3.7,514,3.7,515,2.493,516,2.493,517,2.493,518,2.493,519,2.493,520,2.493,521,2.493,522,2.493,523,2.493,524,1.674,525,1.674,526,1.674,527,1.674,528,1.674,529,2.979,530,2.493,531,1.674,532,2.493,533,1.674,534,1.674,535,2.059,536,2.059,537,2.059,538,2.059]],["title/injectables/MockTissueFtuService.html",[0,0.022,539,2.334]],["body/injectables/MockTissueFtuService.html",[0,0.026,2,0.604,3,0.402,4,0.344,5,0.344,7,0.402,15,1.242,17,0.238,18,0.978,22,1.577,23,0.978,26,1.408,33,0.047,37,0.665,38,0.898,40,0.778,41,0.344,43,0.464,44,0.77,45,0.77,46,0.576,47,0.402,49,1.242,59,0.027,60,0.027,67,1.551,72,1.577,75,0.604,79,0.867,80,0.867,83,0.978,90,1.103,92,1.246,102,1.872,103,2.349,106,1.784,127,0.867,128,1.322,129,1.246,196,2.509,214,2.064,276,2.13,283,1.577,284,1.577,336,2.012,424,2.62,427,1.577,499,1.64,500,1.101,502,1.933,539,2.769,540,1.64,541,3.401,542,3.892,543,2.378,544,2.378,545,2.378,546,2.036,547,2.378,548,1.64,549,1.933,550,2.036,551,1.421,552,1.933,553,1.933,554,2.378,555,1.933,556,1.933,557,1.933,558,2.769,559,2.769,560,2.769,561,2.769,562,2.745,563,3.173,564,3.401,565,1.64,566,1.933,567,1.933,568,1.933,569,3.735,570,3.236,571,3.236,572,4.1,573,2.349,574,3.236,575,4.287,576,3.541,577,2.769,578,3.534,579,3.534,580,4.501,581,3.892,582,3.741,583,1.933,584,2.769,585,3.236,586,3.741,587,4.174,588,1.933,589,2.769,590,1.933,591,1.933,592,1.933,593,3.534,594,1.933,595,2.769,596,1.933,597,3.236,598,3.534,599,1.933,600,1.933,601,2.769,602,2.769,603,3.236,604,1.933,605,1.933,606,1.933,607,1.933,608,1.933,609,1.933,610,1.933,611,1.933,612,1.933,613,1.933,614,1.933,615,3.892,616,3.741,617,3.741,618,1.933,619,1.933,620,1.933,621,1.933,622,1.933,623,2.769,624,1.933,625,1.933,626,1.933,627,2.378,628,2.378]],["title/injectables/MockTissueLibraryService.html",[0,0.022,197,1.98]],["body/injectables/MockTissueLibraryService.html",[0,0.025,2,0.579,3,0.385,4,0.33,5,0.617,7,0.385,15,1.418,17,0.228,18,0.95,22,1.056,23,0.655,33,0.048,35,0.385,37,0.445,38,0.759,40,0.798,41,0.33,43,0.445,44,0.739,45,1.071,46,0.559,47,0.385,48,1.056,49,1.651,59,0.027,60,0.027,61,0.739,67,1.647,75,0.84,78,1.573,79,0.832,80,0.832,81,1.363,82,1.854,83,1.356,84,1.531,86,1.854,87,1.854,88,1.577,89,1.733,90,1.672,91,1.363,92,1.196,93,1.363,94,2.821,95,1.854,96,1.206,97,1.573,98,1.206,99,1.056,100,2.28,101,1.531,102,1.555,103,2.28,104,2.28,105,1.751,106,1.596,107,1.854,108,1.854,109,1.854,110,2.549,111,2.706,112,1.531,113,1.976,114,2.688,115,1.854,116,2.688,117,1.854,118,2.688,119,1.854,120,1.854,121,1.8,122,1.196,123,1.854,124,3.561,125,1.196,126,2.025,127,1.418,128,0.655,129,1.196,130,1.196,131,1.573,132,3.038,133,2.309,134,2.28,135,2.941,136,3.256,137,2.682,138,3.814,139,3.814,140,3.814,141,2.682,142,2.28,143,1.573,144,1.573,145,2.941,146,2.28,147,3.122,148,2.941,149,2.941,150,2.28,151,2.941,152,1.573,153,1.573,154,2.28,155,1.573,156,2.28,157,2.682,158,2.28,159,1.573,160,1.573,161,2.28,162,2.28,163,1.573,164,1.573,165,1.573,166,2.28,167,2.28,168,1.573,169,1.573,170,1.573,171,2.941,172,1.573,173,1.573,174,1.573,175,1.573,176,2.28,177,2.28,178,2.28,179,2.28,180,2.682,181,2.28,182,1.573,183,1.573,184,2.28,185,1.573,186,1.573,187,1.573,188,2.682,189,2.28,190,2.28,191,1.573,192,2.682,193,2.28,194,1.573,195,2.682,196,2.235,197,2.28,198,2.688,199,1.751,200,1.854,629,2.281]],["title/injectables/TissueFtuService.html",[0,0.022,541,1.98]],["body/injectables/TissueFtuService.html",[0,0.035,2,0.932,3,0.62,4,0.531,5,0.659,7,0.62,9,2.109,17,0.368,18,1.309,23,1.309,26,1.476,32,1.339,33,0.047,34,1.339,35,0.77,36,1.339,37,0.889,38,1.04,40,0.837,41,0.531,43,0.717,46,0.837,47,0.62,49,1.339,59,0.037,60,0.037,72,2.628,75,0.932,79,1.807,84,1.7,90,1.189,128,1.309,222,2.194,223,2.194,248,2.194,258,2.723,262,2.723,276,2.109,336,2.109,500,2.294,541,3.143,542,4.213,546,2.194,550,3.184,551,2.194,565,3.574,630,2.532,631,5.182,632,4.557,633,3.672,634,3.672,635,2.985,636,3.672]],["title/injectables/TissueLibraryService.html",[0,0.022,94,1.716]],["body/injectables/TissueLibraryService.html",[0,0.037,2,1.018,3,0.678,4,0.58,5,0.58,7,0.678,9,2.226,17,0.401,18,1.381,23,1.152,33,0.047,37,0.783,38,1.005,40,0.871,41,0.58,43,0.783,46,0.678,47,0.678,59,0.039,60,0.039,72,2.472,79,1.753,80,1.753,83,1.569,94,2.874,96,1.462,97,2.765,199,2.192,316,2.192,450,3.909,637,4.01,638,4.01,639,4.809,640,4.809]],["title/dependencies.html",[641,1.962,642,2.375]],["body/dependencies.html",[33,0.045,41,0.645,59,0.041,60,0.041,642,3.53,643,4.459,644,4.459,645,4.459,646,4.459,647,5.118]],["title/miscellaneous/functions.html",[648,1.117,649,2.799]],["body/miscellaneous/functions.html",[17,0.364,32,1.883,33,0.045,34,1.883,35,0.873,36,1.883,37,0.963,59,0.036,60,0.036,67,1.881,75,0.923,79,1.652,80,1.326,81,2.949,88,1.467,90,1.178,100,3.124,101,2.097,102,1.799,104,2.508,105,2.12,110,2.173,111,2.707,112,2.097,113,2.173,128,1.045,133,1.683,276,1.683,283,2.097,284,2.097,427,2.097,500,1.683,540,3.403,546,2.173,548,2.508,549,2.956,550,2.173,551,2.173,552,2.956,553,2.956,555,2.956,556,2.956,557,3.683,558,2.956,559,3.683,560,3.683,561,3.683,562,3.736,563,3.124,564,2.508,648,1.683,649,2.956,650,3.562,651,4.53,652,4.53,653,3.637,654,2.956,655,3.637,656,3.637]],["title/index.html",[17,0.242,657,2.414,658,2.414]],["body/index.html",[33,0.041,59,0.041,60,0.041,298,3.522,316,1.823,548,3.063,659,5.107,660,4.442,661,5.107,662,4.442,663,5.107,664,4.442,665,4.442]],["title/modules.html",[463,2.679]],["body/modules.html",[33,0.042,59,0.042,60,0.042,250,2.369,462,3.117,463,3.117,666,4.52,667,4.52]],["title/overview.html",[668,3.158]],["body/overview.html",[2,1.13,33,0.041,59,0.041,60,0.041,62,2.66,461,3.618,569,3.069,573,3.069,576,3.069,642,3.526,668,3.618,669,5.113,670,4.451,671,4.451]],["title/properties.html",[66,1.805,641,1.962]],["body/properties.html",[33,0.044,59,0.042,60,0.042,66,2.374,672,4.529,673,4.529]],["title/miscellaneous/typealiases.html",[648,1.117,674,3.444]],["body/miscellaneous/typealiases.html",[17,0.353,33,0.036,35,0.963,59,0.036,60,0.036,79,1.62,80,1.286,83,1.586,85,2.866,88,1.654,96,1.862,98,1.62,202,2.057,203,1.824,204,3.329,209,2.329,210,2.329,214,1.774,224,2.252,225,2.55,226,2.55,227,2.55,247,3.064,248,3.461,249,3.064,250,2.329,252,2.655,253,3.064,255,3.064,424,2.252,500,1.632,546,2.655,630,3.064,648,1.632,650,3.355,675,3.526,676,4.688,677,4.561,678,4.865,679,3.612,680,3.955,681,2.866,682,2.866]],["title/miscellaneous/variables.html",[648,1.117,683,2.799]],["body/miscellaneous/variables.html",[4,0.18,5,0.561,7,0.21,17,0.124,28,1.382,33,0.047,35,0.712,44,0.402,45,0.993,59,0.017,60,0.017,67,0.993,75,1.244,79,1.118,80,0.751,81,1.575,83,1.354,84,0.953,88,1.315,89,1.382,90,1.474,98,1.899,101,0.953,102,1.918,105,0.845,110,0.742,111,1.832,112,0.953,113,0.742,121,2.107,122,0.651,124,3.071,125,1.079,126,1.852,127,1.118,128,1.307,129,1.079,130,1.382,131,0.857,132,2.661,133,1.879,134,1.42,135,2.115,136,2.527,137,1.818,138,3.446,139,3.446,140,3.446,141,1.818,142,1.42,143,0.857,144,0.857,145,2.115,146,1.42,147,2.344,148,2.115,149,2.115,150,1.42,151,2.115,152,0.857,153,0.857,154,1.42,155,0.857,156,1.42,157,1.818,158,1.42,159,0.857,160,0.857,161,1.42,162,1.42,163,0.857,164,0.857,165,0.857,166,1.42,167,1.42,168,0.857,169,0.857,170,0.857,171,2.115,172,0.857,173,0.857,174,0.857,175,0.857,176,1.42,177,1.42,178,1.42,179,1.42,180,1.818,181,1.42,182,0.857,183,0.857,184,1.42,185,0.857,186,0.857,187,0.857,188,1.818,189,1.42,190,1.42,191,0.857,192,1.818,193,1.42,194,0.857,195,1.818,202,1.22,203,1.082,204,2.594,205,0.857,207,0.857,209,1.382,210,1.382,211,0.953,213,0.857,214,1.934,215,0.651,222,1.832,223,2.72,224,0.575,231,0.857,232,0.857,233,1.23,234,0.857,235,0.857,236,1.42,237,0.857,238,1.42,239,0.857,240,0.857,241,0.857,242,0.742,243,0.857,244,0.857,245,0.857,246,0.857,250,1.382,252,1.575,257,1.42,258,2.959,259,1.818,260,1.832,261,1.42,262,3.112,263,0.857,264,0.857,265,0.857,266,0.857,267,2.319,268,0.857,269,0.857,270,0.857,271,1.818,272,1.818,273,1.818,274,0.857,275,0.857,276,1.573,277,0.857,278,0.857,279,0.857,280,0.857,281,0.857,282,1.818,283,1.879,284,1.879,285,1.42,286,0.857,287,0.857,288,0.857,289,1.23,290,0.857,291,1.42,292,0.857,293,0.857,294,1.42,316,0.845,357,3.071,392,1.818,409,1.23,411,2.858,417,1.23,421,1.23,424,2.455,425,0.742,426,0.742,427,0.953,490,2.143,499,1.42,500,0.953,503,1.673,504,1.673,505,1.673,506,1.673,507,1.673,508,1.673,509,1.673,510,1.673,511,1.673,512,3.3,513,2.978,514,2.978,515,1.673,516,1.673,517,1.673,518,1.673,519,1.673,520,1.673,521,1.673,522,1.673,523,1.673,524,1.01,525,1.01,526,1.673,527,1.01,528,1.01,529,2.143,530,1.673,531,1.01,532,1.673,533,1.01,534,1.01,540,1.818,550,1.23,551,0.742,562,0.857,563,1.818,564,3.78,565,0.857,566,1.673,567,1.01,568,1.01,569,3.341,570,2.143,571,2.143,572,3.3,573,1.42,574,2.143,575,3.62,576,2.904,577,1.673,578,2.492,579,2.492,580,4.025,581,2.978,582,2.763,583,1.01,584,1.673,585,2.143,586,2.763,587,3.423,588,1.01,589,1.673,590,1.01,591,1.01,592,1.01,593,2.492,594,1.01,595,1.673,596,1.01,597,2.143,598,2.492,599,1.01,600,1.01,601,1.673,602,1.673,603,2.143,604,1.01,605,1.01,606,1.01,607,1.01,608,1.01,609,1.01,610,1.01,611,1.01,612,1.01,613,1.01,614,1.01,615,2.978,616,2.763,617,2.763,618,1.01,619,1.01,620,1.01,621,1.01,622,1.01,623,1.673,624,1.01,625,1.01,626,1.01,630,1.42,635,1.673,648,0.575,650,2.676,654,4.387,676,4.233,677,3.888,679,1.673,680,2.143,681,1.01,682,1.01,683,1.01,684,2.636,685,2.059,686,2.059,687,2.636,688,2.636,689,2.636,690,2.636,691,3.066,692,1.242,693,1.242,694,1.242,695,1.242,696,1.242,697,2.636,698,2.059,699,2.059,700,1.242,701,2.636,702,1.242,703,2.636,704,2.059,705,1.242,706,1.242,707,2.059,708,2.059,709,1.242,710,2.059,711,1.242,712,2.059,713,1.242,714,1.242]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":392,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":673,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":587,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.2",{"_index":579,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.3",{"_index":580,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.4",{"_index":593,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":586,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.7",{"_index":601,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.9",{"_index":623,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":569,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":574,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":573,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["101",{"_index":596,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":585,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":614,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["124",{"_index":604,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":617,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":583,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15.1.0",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":575,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":625,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["2000",{"_index":590,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["21",{"_index":608,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["230",{"_index":599,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["244",{"_index":605,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":576,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["332",{"_index":592,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":589,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["45",{"_index":615,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":578,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["57",{"_index":612,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":595,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["601",{"_index":600,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["675",{"_index":610,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":598,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["8",{"_index":603,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":607,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":109,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["_blank",{"_index":54,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["abstract",{"_index":72,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["acc",{"_index":116,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["accepts",{"_index":69,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["acinus",{"_index":178,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["acinus.svg",{"_index":179,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ai",{"_index":246,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":675,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alveolus",{"_index":159,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["alveolus.svg",{"_index":160,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["anchor",{"_index":50,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.click",{"_index":57,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.href",{"_index":55,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.remove",{"_index":58,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.target",{"_index":53,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["ancillary",{"_index":507,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":8,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["angular/common",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":217,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{}}}],["application/pdf",{"_index":245,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":76,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["around",{"_index":518,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":267,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["ascending",{"_index":145,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["assets/temp/2d",{"_index":473,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["assets/temp/ftu",{"_index":475,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["available",{"_index":666,"title":{},"body":{"modules.html":{}}}],["base",{"_index":89,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base/root",{"_index":293,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["base_id",{"_index":124,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base_iri",{"_index":294,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":387,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["between",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bid",{"_index":560,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["biomarker",{"_index":424,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["biomarker.array",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biomarker1",{"_index":572,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker2",{"_index":581,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker3",{"_index":582,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker4",{"_index":618,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker5",{"_index":619,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker6",{"_index":620,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker7",{"_index":621,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker8",{"_index":622,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker_type",{"_index":275,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["biomarkers",{"_index":421,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["blabel",{"_index":561,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["bronchial",{"_index":161,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":667,"title":{},"body":{"modules.html":{}}}],["cache",{"_index":315,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cache.has(url",{"_index":365,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cache.set(url",{"_index":374,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cachediri",{"_index":314,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cell",{"_index":214,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell.array",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_id",{"_index":277,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_label",{"_index":278,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source",{"_index":272,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source_item",{"_index":271,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source_item.extend",{"_index":274,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_summaries",{"_index":273,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_summaries).pipe",{"_index":339,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cell_summary",{"_index":252,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell_summary['@graph",{"_index":415,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cell_summary_data",{"_index":526,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["cell_summary_row",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_summary_row.array",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cells",{"_index":417,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["cellsourceitem",{"_index":249,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummary",{"_index":224,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cellsummary.push",{"_index":430,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cellsummaryrow",{"_index":678,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["child",{"_index":434,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["childlabel",{"_index":117,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childnodes",{"_index":114,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["children",{"_index":112,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["children.reduce",{"_index":115,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childurl",{"_index":118,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["cid",{"_index":558,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["clabel",{"_index":559,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["class",{"_index":47,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["clickable",{"_index":288,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":301,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["clinical",{"_index":509,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["codebook",{"_index":511,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["collecting",{"_index":147,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["collectiong",{"_index":155,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["console",{"_index":484,"title":{},"body":{"injectables/MockContactService.html":{}}}],["console.error('illustration",{"_index":400,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.error(`cell",{"_index":393,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.error(`iri",{"_index":384,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.log('message",{"_index":485,"title":{},"body":{"injectables/MockContactService.html":{}}}],["const",{"_index":49,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{}}}],["constant",{"_index":231,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["constructcellsummaries",{"_index":412,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructcellsummaries(data",{"_index":414,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructs",{"_index":432,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructtissuelibrary(items",{"_index":436,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["contact",{"_index":13,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":42,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/MockContactService.html":{}}}],["contact/contact.impl",{"_index":466,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contact/contact.service",{"_index":467,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contactimplservice",{"_index":1,"title":{"injectables/ContactImplService.html":{}},"body":{"injectables/ContactImplService.html":{},"modules/HraServiceModule.html":{}}}],["contactmessage",{"_index":21,"title":{"interfaces/ContactMessage.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["contactservice",{"_index":16,"title":{"injectables/ContactService.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["contactservice:11",{"_index":24,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/MockContactService.html":{}}}],["content",{"_index":487,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contents",{"_index":483,"title":{},"body":{"injectables/MockContactService.html":{}}}],["corpuscle",{"_index":143,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["corpuscle.svg",{"_index":144,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["cortical",{"_index":146,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":283,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["count.optional",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count_integer_error",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count_range_error",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["counts",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":100,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["createcell",{"_index":557,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["createcell('cell1",{"_index":571,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell10",{"_index":609,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell11",{"_index":611,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell12",{"_index":613,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell13",{"_index":616,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell2",{"_index":577,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell3",{"_index":584,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell4",{"_index":588,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell5",{"_index":591,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell6",{"_index":594,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell7",{"_index":597,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell8",{"_index":602,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell9",{"_index":606,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell(cid",{"_index":653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid",{"_index":91,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["createlinkid('ftu",{"_index":122,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["createnodeid",{"_index":651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnodeid(label",{"_index":104,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":287,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":556,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["crypt",{"_index":167,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":481,"title":{},"body":{"injectables/MockContactService.html":{}}}],["data",{"_index":128,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data.foreach((summarygroup",{"_index":416,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data.impl",{"_index":468,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["data.impl.ts",{"_index":204,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.mock.ts",{"_index":490,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["data.model",{"_index":228,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["data.model.ts",{"_index":677,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.service",{"_index":230,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["data.service.ts",{"_index":449,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:19",{"_index":460,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:25",{"_index":458,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:30",{"_index":457,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:36",{"_index":453,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:42",{"_index":455,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:48",{"_index":459,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data/ftu",{"_index":203,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data['@graph'].filter",{"_index":390,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data['@graph'].find",{"_index":383,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data_file_reference",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data_sources",{"_index":270,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["datafilereference",{"_index":225,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["dataset",{"_index":513,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["dataset_count",{"_index":285,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["datasets",{"_index":209,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["datasets).pipe",{"_index":350,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["datasets.jsonld",{"_index":477,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["datasets['@graph'][number]['data_sources",{"_index":256,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["datasources",{"_index":255,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["default",{"_index":654,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["definenode",{"_index":111,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["definenode('large",{"_index":165,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('liver",{"_index":187,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('prostate",{"_index":191,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('thymus",{"_index":194,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode(childlabel",{"_index":119,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["definenode(label",{"_index":655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defines",{"_index":64,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["dependencies",{"_index":642,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dermal",{"_index":181,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["descending",{"_index":134,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":235,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["document.body.appendchild(anchor",{"_index":52,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["document.createelement('a",{"_index":51,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["duct",{"_index":148,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["duct.svg",{"_index":149,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["dummy",{"_index":503,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":402,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["element",{"_index":290,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":30,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["emails",{"_index":12,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["emits",{"_index":317,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["empty",{"_index":347,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["endpoint",{"_index":212,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["endpoints",{"_index":205,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["entered",{"_index":70,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["entire",{"_index":640,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["entries",{"_index":570,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["entry.biomarker.id",{"_index":532,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.biomarker.label",{"_index":533,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell.id",{"_index":530,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell.label",{"_index":531,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell_id",{"_index":419,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.cell_label",{"_index":420,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.count",{"_index":425,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.dataset_count",{"_index":429,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.gene_id",{"_index":422,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.gene_label",{"_index":423,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.mean_expression",{"_index":428,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.meanexpression",{"_index":534,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.percentage",{"_index":426,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["epidermal",{"_index":184,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["etching",{"_index":413,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["example",{"_index":523,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["execute",{"_index":665,"title":{},"body":{"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["extended",{"_index":82,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extendedtissue",{"_index":78,"title":{"interfaces/ExtendedTissue.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extends",{"_index":15,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extract",{"_index":524,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["extracted",{"_index":361,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["extremely",{"_index":515,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":240,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":631,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["fetchdata(iri",{"_index":362,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fetched",{"_index":386,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fetchs",{"_index":353,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["field",{"_index":388,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["file_format",{"_index":266,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["fileformatmapping",{"_index":309,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fileformatmapping['image/svg+xml",{"_index":397,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["files",{"_index":302,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["files.find",{"_index":399,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findcellsummaries(data",{"_index":389,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findgraphitem(data",{"_index":382,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findillustrationurl(files",{"_index":395,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["finds",{"_index":378,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["firstvaluefrom",{"_index":220,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["firstvaluefrom(resp",{"_index":375,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["format",{"_index":260,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["formated",{"_index":359,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["formates",{"_index":394,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["formats",{"_index":236,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["formats[file_format",{"_index":408,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["forming",{"_index":433,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["found",{"_index":385,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["from(cache.get(url",{"_index":376,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ftu",{"_index":126,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu.mock",{"_index":501,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftu.mock.ts",{"_index":540,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ftu.service",{"_index":547,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["ftu.service.ts",{"_index":630,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu.service.ts:19",{"_index":634,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu.service.ts:22",{"_index":633,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu/2d",{"_index":140,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu/tissue",{"_index":500,"title":{},"body":{"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu_data_impl_endpoints",{"_index":233,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/variables.html":{}}}],["ftu_data_impl_file_format_mapping",{"_index":238,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["ftudataimplendpoints",{"_index":201,"title":{"interfaces/FtuDataImplEndpoints.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ftudataimplservice",{"_index":295,"title":{"injectables/FtuDataImplService.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{}}}],["ftudataservice",{"_index":229,"title":{"injectables/FtuDataService.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["ftudataservice:107",{"_index":496,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:116",{"_index":495,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:125",{"_index":493,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:133",{"_index":494,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:143",{"_index":448,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:146",{"_index":497,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:154",{"_index":446,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:163",{"_index":445,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:175",{"_index":443,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:187",{"_index":444,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:199",{"_index":447,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:99",{"_index":498,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["function",{"_index":103,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["functional",{"_index":297,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["functions",{"_index":649,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":108,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["gene_id",{"_index":279,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["gene_label",{"_index":280,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":660,"title":{},"body":{"index.html":{}}}],["getcellsummaries",{"_index":336,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["getcellsummaries(id",{"_index":632,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["getcellsummaries(iri",{"_index":337,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences",{"_index":342,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences(iri",{"_index":343,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping",{"_index":330,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping(iri",{"_index":331,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl",{"_index":323,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl(iri",{"_index":327,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getreferenceorgans",{"_index":542,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["gets",{"_index":454,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["getsourcereferences",{"_index":346,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getsourcereferences(iri",{"_index":348,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getting",{"_index":657,"title":{"index.html":{}},"body":{}}],["gettissuelibrary",{"_index":199,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["given",{"_index":324,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["gland",{"_index":163,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["gland.svg",{"_index":164,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["glandular",{"_index":193,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["google.com",{"_index":512,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":250,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["greater",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":10,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["handling",{"_index":296,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["having",{"_index":213,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["helper",{"_index":555,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["henle",{"_index":137,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["henle.svg",{"_index":141,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":522,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["hra",{"_index":92,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["hraservicemodule",{"_index":462,"title":{"modules/HraServiceModule.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["hrt",{"_index":510,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":300,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["http.get(url",{"_index":371,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["httpclient",{"_index":216,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":138,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["https://purl.humanatlas.io/2d",{"_index":125,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":90,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["id_item",{"_index":257,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["id_item.extend",{"_index":261,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["iditem",{"_index":247,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["illusrationfiles",{"_index":253,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["illustration",{"_index":326,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["illustration_files",{"_index":265,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["illustration_mapping_item",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":226,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["illustrations",{"_index":210,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["illustrations).pipe",{"_index":320,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["illustrations.jsonld",{"_index":474,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["illustrations['@graph",{"_index":437,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["illustrations['@graph'][number]['illustration_files",{"_index":254,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["image/png",{"_index":243,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["image/svg+xml",{"_index":241,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["implementation",{"_index":196,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["import",{"_index":40,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inclusive",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inherited",{"_index":22,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["inject",{"_index":219,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(ftu_data_impl_endpoints",{"_index":307,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(ftu_data_impl_file_format_mapping",{"_index":310,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(httpclient",{"_index":305,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"overview.html":{}}}],["injecting",{"_index":206,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injection",{"_index":308,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectiontoken",{"_index":218,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectiontoken('endpoints",{"_index":234,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken>('mapping",{"_index":239,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["injjector",{"_index":306,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inner",{"_index":150,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":207,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["inside",{"_index":379,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["integer",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercalated",{"_index":176,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":61,"title":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["interfaces",{"_index":62,"title":{},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"overview.html":{}}}],["intestine",{"_index":166,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri",{"_index":98,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iri).data_sources",{"_index":351,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri).illustration_files",{"_index":344,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri).mapping",{"_index":334,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri.array().default",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islates",{"_index":172,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["islets",{"_index":174,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["isreferenceorgan",{"_index":652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isreferenceorgan(obj",{"_index":552,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":381,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["item.length",{"_index":391,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["items",{"_index":435,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["json",{"_index":369,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["json.stringify(message",{"_index":488,"title":{},"body":{"injectables/MockContactService.html":{}}}],["kidney",{"_index":132,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":102,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["langerhans",{"_index":173,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["langerhans.svg",{"_index":175,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":169,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":312,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["library",{"_index":316,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueLibraryService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["library.mock",{"_index":502,"title":{},"body":{"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{}}}],["library.mock.ts",{"_index":81,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["library.model",{"_index":97,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["library.model.ts",{"_index":680,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["library.service",{"_index":95,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["library.service.ts",{"_index":637,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library.service.ts:9",{"_index":638,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library/tissue",{"_index":80,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn",{"_index":168,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn.svg",{"_index":170,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":520,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":121,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":85,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"miscellaneous/typealiases.html":{}}}],["liver",{"_index":188,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":450,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/TissueLibraryService.html":{}}}],["loads",{"_index":639,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["lobule",{"_index":189,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lobule.svg",{"_index":190,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":482,"title":{},"body":{"injectables/MockContactService.html":{}}}],["long",{"_index":516,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["loop",{"_index":136,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lung",{"_index":157,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mailto:${message.email}?subject=${message.subject}&body=${message.message",{"_index":56,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["map",{"_index":221,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["map((data",{"_index":321,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["mapping",{"_index":268,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["mappings",{"_index":404,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["matching",{"_index":60,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mean_expression",{"_index":281,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["meanexpression",{"_index":427,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medicine",{"_index":505,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["medullary",{"_index":151,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":28,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":563,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":26,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["methods",{"_index":18,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["miscellaneous",{"_index":648,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":127,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_reference_organs",{"_index":566,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_summaries",{"_index":499,"title":{},"body":{"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data",{"_index":129,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data.nodes[iri].object.file",{"_index":537,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["mockcontactservice",{"_index":478,"title":{"injectables/MockContactService.html":{}},"body":{"injectables/MockContactService.html":{}}}],["mockftudataservice",{"_index":489,"title":{"injectables/MockFtuDataService.html":{}},"body":{"injectables/MockFtuDataService.html":{}}}],["mocktissueftuservice",{"_index":539,"title":{"injectables/MockTissueFtuService.html":{}},"body":{"injectables/MockTissueFtuService.html":{}}}],["mocktissuelibraryservice",{"_index":197,"title":{"injectables/MockTissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["modal",{"_index":14,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["module",{"_index":461,"title":{"modules/HraServiceModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":463,"title":{"modules.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":360,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["negative",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nephron",{"_index":152,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nephron.svg",{"_index":153,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":101,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":519,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":465,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["node",{"_index":110,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":130,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nodes[id",{"_index":441,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["nodes[parentid",{"_index":440,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["nodes[parentid]?.children.push(id",{"_index":442,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["non",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":562,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":661,"title":{},"body":{"index.html":{}}}],["obeservable",{"_index":456,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["obj",{"_index":553,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["obj['object']['file",{"_index":554,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["object",{"_index":75,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":131,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(childnodes",{"_index":123,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["object.values(mock_summaries).map((summary",{"_index":527,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["object.values(mock_tissue_data.nodes).filter(isreferenceorgan",{"_index":567,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["objecy",{"_index":86,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["observable",{"_index":38,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["of(cell_summary_data",{"_index":536,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["of(mock_reference_organs",{"_index":627,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_summaries",{"_index":628,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_tissue_data",{"_index":200,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["of(mock_tissue_data.nodes[iri].object.file",{"_index":535,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["of(sourcereferences",{"_index":538,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["om",{"_index":525,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":403,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["operations",{"_index":299,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["optional",{"_index":36,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["opts",{"_index":366,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["opts).pipe(map((data",{"_index":372,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["organ",{"_index":551,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["organ_id",{"_index":263,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["organ_label",{"_index":264,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":565,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":671,"title":{},"body":{"overview.html":{}}}],["outer",{"_index":154,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":48,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["overrides",{"_index":25,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["overview",{"_index":668,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":514,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":641,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pancreas",{"_index":171,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["pancreatic",{"_index":177,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla",{"_index":182,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla.svg",{"_index":183,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":325,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":367,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["parent",{"_index":105,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parentid",{"_index":439,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["parent}${label.replace",{"_index":107,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["parses",{"_index":355,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["path",{"_index":208,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["peer",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":284,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["percentage_range_error",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["percentage_range_error).lte(1",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png",{"_index":244,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["precision",{"_index":504,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":303,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["project",{"_index":506,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":377,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["properties",{"_index":66,"title":{"properties.html":{}},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"properties.html":{}}}],["prostate",{"_index":192,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":470,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["providedin",{"_index":44,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":469,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["provides",{"_index":292,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["pulmonary",{"_index":158,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["purposes",{"_index":492,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["read",{"_index":232,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["reading",{"_index":354,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["readonly",{"_index":304,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["received",{"_index":486,"title":{},"body":{"injectables/MockContactService.html":{}}}],["recipient",{"_index":31,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["record",{"_index":113,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":398,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ref.url",{"_index":401,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["reference",{"_index":550,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":635,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["referenceorgan",{"_index":546,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["references",{"_index":215,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["reflecting",{"_index":259,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":451,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["releases/v1.3/2d",{"_index":139,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["renal",{"_index":142,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["representation_of",{"_index":84,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["representing",{"_index":73,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["represents",{"_index":480,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["requested",{"_index":356,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["reset",{"_index":670,"title":{},"body":{"overview.html":{}}}],["resp",{"_index":370,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["responsetype",{"_index":368,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["results",{"_index":59,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":406,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["retrived",{"_index":313,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["return",{"_index":106,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ridge",{"_index":185,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ridge.svg",{"_index":186,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":45,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":664,"title":{},"body":{"index.html":{}}}],["running",{"_index":662,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":43,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["same",{"_index":682,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema",{"_index":357,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["schema.parse(data",{"_index":373,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["see",{"_index":521,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":27,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["sending",{"_index":11,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["sendmessage",{"_index":19,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["sendmessage(message",{"_index":20,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["service",{"_index":9,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["services",{"_index":659,"title":{},"body":{"index.html":{}}}],["shared/common.model",{"_index":99,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["single",{"_index":452,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["skin",{"_index":180,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source_reference",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourcereference",{"_index":227,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["sourcereferences",{"_index":409,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["src/.../common.model.ts",{"_index":679,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ftu",{"_index":676,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":650,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.impl.ts",{"_index":6,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["src/lib/contact/contact.mock.ts",{"_index":479,"title":{},"body":{"injectables/MockContactService.html":{}}}],["src/lib/contact/contact.service.ts",{"_index":63,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["src/lib/contact/contact.service.ts:18",{"_index":77,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/lib/ftu",{"_index":202,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/service.module.ts",{"_index":464,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["src/lib/shared/common.model.ts",{"_index":681,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/tissue",{"_index":79,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":658,"title":{"index.html":{}},"body":{}}],["stoe",{"_index":87,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["stores",{"_index":311,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["string",{"_index":67,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["study",{"_index":508,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":65,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["submucosal",{"_index":162,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["summaries",{"_index":211,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summaries.jsonld",{"_index":476,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["summary",{"_index":276,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary.entries.map((entry",{"_index":529,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summary.label",{"_index":528,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summary1",{"_index":568,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summary2",{"_index":624,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summary3",{"_index":626,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summarygroup.biomarker_type",{"_index":431,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["summarygroup.summary.map((entry",{"_index":418,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["supported",{"_index":237,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":242,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["svg_id",{"_index":269,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["svgformat",{"_index":396,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["synonymlabels",{"_index":120,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["t",{"_index":251,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tag",{"_index":380,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["takes",{"_index":74,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{}}}],["template",{"_index":358,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["test",{"_index":548,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["testing",{"_index":491,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["tests",{"_index":663,"title":{},"body":{"index.html":{}}}],["thick",{"_index":156,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":135,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["this.cache",{"_index":364,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.cachediri",{"_index":363,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.constructcellsummaries(data",{"_index":341,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.constructtissuelibrary(data['@graph",{"_index":322,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.datasets",{"_index":349,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.illustrations",{"_index":319,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.summaries",{"_index":338,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.fetchdata(iri",{"_index":332,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.fetchdata(undefined",{"_index":318,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findcellsummaries(data",{"_index":340,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findgraphitem(data",{"_index":333,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findillustrationurl(data",{"_index":329,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.getdatafilereferences(iri).pipe(map((data",{"_index":328,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.todatafilereferences(data",{"_index":345,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.toillustrationmapping(data",{"_index":335,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.tosourcereferences(data",{"_index":352,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["thymus",{"_index":195,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue",{"_index":83,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tissue_library",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tissue_link",{"_index":291,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["tissueftuservice",{"_index":541,"title":{"injectables/TissueFtuService.html":{}},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["tissueftuservice:94",{"_index":544,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissueftuservice:99",{"_index":543,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissuelibrary",{"_index":96,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrary['nodes",{"_index":438,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tissuelibraryservice",{"_index":94,"title":{"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["tissuelibraryservice.gettissuelibrary",{"_index":198,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["tissuelibraryservice:162",{"_index":629,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["title",{"_index":411,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["todatafilereferences(data",{"_index":407,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["toillustrationmapping(mappings",{"_index":405,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tosourcereferences(data",{"_index":410,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tree",{"_index":289,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":35,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":674,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui/cdk/state",{"_index":93,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["ui/utils/types",{"_index":545,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["undefined",{"_index":133,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":298,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"index.html":{}}}],["unknown",{"_index":636,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["url",{"_index":88,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["url.brand('iri",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":471,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["user",{"_index":71,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["usevalue",{"_index":472,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["value",{"_index":564,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":68,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["variables",{"_index":683,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":672,"title":{},"body":{"properties.html":{}}}],["via",{"_index":29,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["void",{"_index":39,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["whether",{"_index":549,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["wraps",{"_index":517,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":222,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.infer",{"_index":248,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{}}}],["z.number",{"_index":282,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["z.number().gte(0",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().int(count_integer_error).nonnegative(count_range_error",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().optional",{"_index":286,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":258,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.record(iri",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":262,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.string().optional",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().url",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().url().brand('url",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zero",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zod",{"_index":223,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":669,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ContactImplService.html":{"url":"injectables/ContactImplService.html","title":"injectable - ContactImplService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactImplService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.impl.ts\n        \n\n\n            \n                Description\n            \n            \n                ContactImplService - Angular service that handles sending emails from the contact modal\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    Overrides the sendMessage method to send message via email to the recipient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ContactMessage, ContactService } from './contact.service';\nimport { Observable } from 'rxjs';\n\n/** ContactImplService - Angular service that handles sending emails from the contact modal */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactImplService extends ContactService {\n  /** Overrides the sendMessage method to send message via email to the recipient */\n  override sendMessage(message: ContactMessage): Observable | void {\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n    anchor.target = '_blank';\n    anchor.href = `mailto:${message.email}?subject=${message.subject}&body=${message.message}`;\n    anchor.click();\n    anchor.remove();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactMessage.html":{"url":"interfaces/ContactMessage.html","title":"interface - ContactMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A interface contact which defines email, subject, and the message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable email which accepts the email entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable message which accepts the message entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable subject which accepts the subject entered by user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable | void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a ContactService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/contact/contact.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes a ContactMessage object as an argument and returns an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable | void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedTissue.html":{"url":"interfaces/ExtendedTissue.html","title":"interface - ExtendedTissue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtendedTissue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Extended tissue\n\n            \n\n            \n                Extends\n            \n            \n                        Tissue\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Objecy to stoe the file URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Base Id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://purl.humanatlas.io/2d-ftu/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FtuDataImplEndpoints.html":{"url":"interfaces/FtuDataImplEndpoints.html","title":"interface - FtuDataImplEndpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FtuDataImplEndpoints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.impl.ts\n        \n\n\n            \n                Description\n            \n            \n                Endpoints for Injecting input path\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            datasets\n                                        \n                                \n                                \n                                        \n                                            illustrations\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datasets:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell Source References data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        illustrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        illustrations:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell illustrations data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell Summaries data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, InjectionToken, inject } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, firstValueFrom, from, map, of } from 'rxjs';\nimport { z } from 'zod';\nimport { IRI, Iri, URL, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/** Endpoints for Injecting input path */\nexport interface FtuDataImplEndpoints {\n  /** Endpoint for File having Cell illustrations data */\n  illustrations: Url;\n  /** Endpoint for File having Cell Summaries data */\n  summaries: Url;\n  /** Endpoint for File having Cell Source References data */\n  datasets: Url;\n}\n/** Constant  to read the endpoints */\nexport const FTU_DATA_IMPL_ENDPOINTS = new InjectionToken('Endpoints');\n\n/** Input to different file formats supported */\nexport const FTU_DATA_IMPL_FILE_FORMAT_MAPPING = new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n});\n\ntype IdItem = z.infer;\ntype CellSourceItem = z.infer;\ntype Graph = { '@graph': T[] };\ntype Illustrations = z.infer;\ntype Datasets = z.infer;\ntype Cell_Summary = z.infer;\ntype IllusrationFiles = Illustrations['@graph'][number]['illustration_files'];\ntype dataSources = Datasets['@graph'][number]['data_sources'];\n\n/** Base ID Object */\nconst ID_ITEM = z.object({\n  '@id': IRI,\n});\n\n/** ILLUSTRATIONS Object reflecting the format in the file*/\nconst ILLUSTRATIONS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: URL,\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        label: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** DATASETS Object reflecting the format in the file*/\nconst DATASETS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Base CELL_SOURCE_ITEM Object  having cell_source */\nconst CELL_SOURCE_ITEM = z.object({\n  cell_source: IRI,\n});\n\n/** CELL_SUMMARIES zod Object reflecting the format in the file*/\nconst CELL_SUMMARIES = z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Creates clickable link for the tissue tree element */\nconst TISSUE_LINK = createLinkId('FTU');\n\n/** Provides Base/root url for the tissue tree */\nconst BASE_IRI = 'https://purl.humanatlas.io/2d-ftu/' as Iri;\n\n/**\n * FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FtuDataImplService extends FtuDataService {\n  /** http client to read files */\n  private readonly http = inject(HttpClient);\n\n  /** Endpoints injjector to the service */\n  private readonly endpoints = inject(FTU_DATA_IMPL_ENDPOINTS);\n  /** Endpoint injection for file formats */\n  private readonly fileFormatMapping = inject(FTU_DATA_IMPL_FILE_FORMAT_MAPPING);\n  /** Stores the last retrived Tissue Iri */\n  private cachedIri?: Iri;\n  /** Stores the last retrived data for tissue */\n  private cache = new Map>();\n\n  /**\n  Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n  @returns An Observable that emits the tissue Tree data.\n  */\n  override getTissueLibrary(): Observable {\n    return this.fetchData(undefined, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.constructTissueLibrary(data['@graph']))\n    );\n  }\n\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return this.getDataFileReferences(iri).pipe(map((data) => this.findIllustrationUrl(data)));\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).mapping),\n      map((data) => (data ? this.toIllustrationMapping(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.summaries, CELL_SUMMARIES).pipe(\n      map((data) => this.findCellSummaries(data, iri)),\n      map((data) => (data ? this.constructCellSummaries(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).illustration_files),\n      map((data) => (data ? this.toDataFileReferences(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.datasets, DATASETS).pipe(\n      map((data) => this.findGraphItem(data, iri).data_sources),\n      map((data) => (data ? this.toSourceReferences(data) : []))\n    );\n  }\n\n  /**\n   * Fetchs data after reading the file and parses with the requested schema\n   * @template T : Schema to be formated\n   * @param iri : Tissue iri\n   * @param url : File Url\n   * @param schema :  Format needed to be extracted\n   * @returns data\n   */\n  private fetchData(iri: Iri | undefined, url: Url, schema: T): Observable> {\n    const { http, cachedIri, cache } = this;\n    if (iri !== undefined && iri !== cachedIri) {\n      this.cachedIri = iri;\n      this.cache = new Map();\n    }\n    if (!cache.has(url)) {\n      const opts = { params: { id: iri ?? '' }, responseType: 'json' as const };\n      const resp = http.get(url, opts).pipe(map((data) => schema.parse(data)));\n      cache.set(url, firstValueFrom(resp));\n    }\n    return from(cache.get(url) as Promise>);\n  }\n\n  /**\n   * Finds object inside the @graph tag for the requested id element\n   * @template T\n   * @param data\n   * @param iri\n   * @returns graph item\n   */\n  private findGraphItem(data: Graph, iri: Iri): T {\n    const item = data['@graph'].find(({ '@id': id }) => id === iri);\n    if (item === undefined) {\n      console.error(`Iri not found in data: ${iri}`);\n      return {} as T;\n    }\n\n    return item;\n  }\n\n  /**\n   * Finds cell summaries from fetched Data based on cell_source field\n   * @template T\n   * @param data\n   * @param iri\n   * @returns cell summaries\n   */\n  private findCellSummaries(data: Graph, iri: Iri): T[] {\n    const item = data['@graph'].filter(({ cell_source }) => cell_source === iri);\n    if (item === undefined || item.length == 0) {\n      console.error(`Cell Summary not found in data: ${iri}`);\n      return [];\n    }\n    return item;\n  }\n\n  /**\n   * Finds illustration url and formates it to Url\n   * @param files\n   * @returns illustration url\n   */\n  private findIllustrationUrl(files: DataFileReference[]): Url {\n    const { fileFormatMapping } = this;\n    const svgFormat = fileFormatMapping['image/svg+xml'];\n    const ref = files.find(({ format }) => format === svgFormat);\n    if (ref === undefined) {\n      console.error('Illustration url not found');\n      return '' as Url;\n    }\n    return ref.url;\n  }\n\n  /**\n   * To illustration mapping for each tissue open\n   * @param mappings\n   * @returns illustration mapping\n   */\n  private toIllustrationMapping(mappings: { label: string; svg_id: string }[]): IllustrationMappingItem[] {\n    const results: IllustrationMappingItem[] = [];\n    for (const { label, svg_id } of mappings) {\n      results.push({ label, id: svg_id });\n    }\n\n    return results;\n  }\n\n  /**\n   * Formates data to array of DataFileReference format\n   * @param data\n   * @returns data file references\n   */\n  private toDataFileReferences(data: IllusrationFiles): DataFileReference[] {\n    const { fileFormatMapping: formats } = this;\n    const results: DataFileReference[] = [];\n    for (const { file, file_format } of data) {\n      if (file_format in formats) {\n        results.push({ format: formats[file_format], url: file });\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Formats data from 'dataSources' to 'SourceReferences'[] format\n   * @param data\n   * @returns source references\n   */\n  private toSourceReferences(data: dataSources): SourceReference[] {\n    const results: SourceReference[] = [];\n    for (const { label, link, description } of data) {\n      results.push({ label, link, title: description });\n    }\n    return results;\n  }\n\n  /**\n   * constructCellSummaries : Formates Cell Summary after etching the data\n   * @param data\n   * @returns\n   */\n  private constructCellSummaries(data: Cell_Summary['@graph']): CellSummary[] {\n    const cellSummary: CellSummary[] = [];\n\n    data.forEach((summaryGroup) => {\n      const cells = summaryGroup.summary.map((entry) => ({\n        id: entry.cell_id as Iri,\n        label: entry.cell_label,\n      }));\n      const biomarkers = summaryGroup.summary.map((entry) => ({\n        id: entry.gene_id as Iri,\n        label: entry.gene_label,\n      }));\n      const summaries = summaryGroup.summary.map((entry) => ({\n        cell: entry.cell_id as Iri,\n        biomarker: entry.gene_id as Iri,\n        count: entry.count,\n        percentage: entry.percentage,\n        meanExpression: entry.mean_expression,\n        dataset_count: entry.dataset_count,\n      }));\n      cellSummary.push({\n        label: summaryGroup.biomarker_type,\n        cells,\n        biomarkers,\n        summaries,\n      });\n    });\n    return cellSummary;\n  }\n\n  /**\n   * Constructs tissue library ,forming parent and child nodes\n   * @param items\n   * @returns\n   */\n  private constructTissueLibrary(items: Illustrations['@graph']): TissueLibrary {\n    const nodes: TissueLibrary['nodes'] = {};\n    for (const { '@id': id, label, organ_id, organ_label } of items) {\n      const parentId = (BASE_IRI + organ_id) as Iri;\n      nodes[parentId] ??= { id: parentId, label: organ_label, parent: BASE_IRI, children: [] };\n      nodes[id] = { id, label, parent: parentId, children: [], link: TISSUE_LINK };\n      nodes[parentId]?.children.push(id);\n    }\n    return { root: BASE_IRI, nodes };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FtuDataImplService.html":{"url":"injectables/FtuDataImplService.html","title":"injectable - FtuDataImplService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FtuDataImplService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.impl.ts\n        \n\n\n            \n                Description\n            \n            \n                FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n\n            \n\n            \n                Extends\n            \n            \n                        FtuDataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCellSummaries\n                            \n                            \n                                    \n                                getDataFileReferences\n                            \n                            \n                                    \n                                getIllustrationMapping\n                            \n                            \n                                    \n                                getIllustrationUrl\n                            \n                            \n                                    \n                                getSourceReferences\n                            \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:175\n\n                \n            \n\n\n            \n                \n                    Overrides the getCellSummaries method to return an CellSummary array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits an CellSummary array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:187\n\n                \n            \n\n\n            \n                \n                    Overrides the getDataFileReferences method to return an DataFileReference array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an DataFileReference array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:163\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an IllustrationMappingItem array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:154\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits the mock URL.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:199\n\n                \n            \n\n\n            \n                \n                    Overrides the getSourceReferences method to return an empty array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an empty array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:143\n\n                \n            \n\n\n            \n                \n                    Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits the tissue Tree data.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, InjectionToken, inject } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, firstValueFrom, from, map, of } from 'rxjs';\nimport { z } from 'zod';\nimport { IRI, Iri, URL, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/** Endpoints for Injecting input path */\nexport interface FtuDataImplEndpoints {\n  /** Endpoint for File having Cell illustrations data */\n  illustrations: Url;\n  /** Endpoint for File having Cell Summaries data */\n  summaries: Url;\n  /** Endpoint for File having Cell Source References data */\n  datasets: Url;\n}\n/** Constant  to read the endpoints */\nexport const FTU_DATA_IMPL_ENDPOINTS = new InjectionToken('Endpoints');\n\n/** Input to different file formats supported */\nexport const FTU_DATA_IMPL_FILE_FORMAT_MAPPING = new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n});\n\ntype IdItem = z.infer;\ntype CellSourceItem = z.infer;\ntype Graph = { '@graph': T[] };\ntype Illustrations = z.infer;\ntype Datasets = z.infer;\ntype Cell_Summary = z.infer;\ntype IllusrationFiles = Illustrations['@graph'][number]['illustration_files'];\ntype dataSources = Datasets['@graph'][number]['data_sources'];\n\n/** Base ID Object */\nconst ID_ITEM = z.object({\n  '@id': IRI,\n});\n\n/** ILLUSTRATIONS Object reflecting the format in the file*/\nconst ILLUSTRATIONS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: URL,\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        label: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** DATASETS Object reflecting the format in the file*/\nconst DATASETS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Base CELL_SOURCE_ITEM Object  having cell_source */\nconst CELL_SOURCE_ITEM = z.object({\n  cell_source: IRI,\n});\n\n/** CELL_SUMMARIES zod Object reflecting the format in the file*/\nconst CELL_SUMMARIES = z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Creates clickable link for the tissue tree element */\nconst TISSUE_LINK = createLinkId('FTU');\n\n/** Provides Base/root url for the tissue tree */\nconst BASE_IRI = 'https://purl.humanatlas.io/2d-ftu/' as Iri;\n\n/**\n * FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FtuDataImplService extends FtuDataService {\n  /** http client to read files */\n  private readonly http = inject(HttpClient);\n\n  /** Endpoints injjector to the service */\n  private readonly endpoints = inject(FTU_DATA_IMPL_ENDPOINTS);\n  /** Endpoint injection for file formats */\n  private readonly fileFormatMapping = inject(FTU_DATA_IMPL_FILE_FORMAT_MAPPING);\n  /** Stores the last retrived Tissue Iri */\n  private cachedIri?: Iri;\n  /** Stores the last retrived data for tissue */\n  private cache = new Map>();\n\n  /**\n  Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n  @returns An Observable that emits the tissue Tree data.\n  */\n  override getTissueLibrary(): Observable {\n    return this.fetchData(undefined, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.constructTissueLibrary(data['@graph']))\n    );\n  }\n\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return this.getDataFileReferences(iri).pipe(map((data) => this.findIllustrationUrl(data)));\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).mapping),\n      map((data) => (data ? this.toIllustrationMapping(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.summaries, CELL_SUMMARIES).pipe(\n      map((data) => this.findCellSummaries(data, iri)),\n      map((data) => (data ? this.constructCellSummaries(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).illustration_files),\n      map((data) => (data ? this.toDataFileReferences(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.datasets, DATASETS).pipe(\n      map((data) => this.findGraphItem(data, iri).data_sources),\n      map((data) => (data ? this.toSourceReferences(data) : []))\n    );\n  }\n\n  /**\n   * Fetchs data after reading the file and parses with the requested schema\n   * @template T : Schema to be formated\n   * @param iri : Tissue iri\n   * @param url : File Url\n   * @param schema :  Format needed to be extracted\n   * @returns data\n   */\n  private fetchData(iri: Iri | undefined, url: Url, schema: T): Observable> {\n    const { http, cachedIri, cache } = this;\n    if (iri !== undefined && iri !== cachedIri) {\n      this.cachedIri = iri;\n      this.cache = new Map();\n    }\n    if (!cache.has(url)) {\n      const opts = { params: { id: iri ?? '' }, responseType: 'json' as const };\n      const resp = http.get(url, opts).pipe(map((data) => schema.parse(data)));\n      cache.set(url, firstValueFrom(resp));\n    }\n    return from(cache.get(url) as Promise>);\n  }\n\n  /**\n   * Finds object inside the @graph tag for the requested id element\n   * @template T\n   * @param data\n   * @param iri\n   * @returns graph item\n   */\n  private findGraphItem(data: Graph, iri: Iri): T {\n    const item = data['@graph'].find(({ '@id': id }) => id === iri);\n    if (item === undefined) {\n      console.error(`Iri not found in data: ${iri}`);\n      return {} as T;\n    }\n\n    return item;\n  }\n\n  /**\n   * Finds cell summaries from fetched Data based on cell_source field\n   * @template T\n   * @param data\n   * @param iri\n   * @returns cell summaries\n   */\n  private findCellSummaries(data: Graph, iri: Iri): T[] {\n    const item = data['@graph'].filter(({ cell_source }) => cell_source === iri);\n    if (item === undefined || item.length == 0) {\n      console.error(`Cell Summary not found in data: ${iri}`);\n      return [];\n    }\n    return item;\n  }\n\n  /**\n   * Finds illustration url and formates it to Url\n   * @param files\n   * @returns illustration url\n   */\n  private findIllustrationUrl(files: DataFileReference[]): Url {\n    const { fileFormatMapping } = this;\n    const svgFormat = fileFormatMapping['image/svg+xml'];\n    const ref = files.find(({ format }) => format === svgFormat);\n    if (ref === undefined) {\n      console.error('Illustration url not found');\n      return '' as Url;\n    }\n    return ref.url;\n  }\n\n  /**\n   * To illustration mapping for each tissue open\n   * @param mappings\n   * @returns illustration mapping\n   */\n  private toIllustrationMapping(mappings: { label: string; svg_id: string }[]): IllustrationMappingItem[] {\n    const results: IllustrationMappingItem[] = [];\n    for (const { label, svg_id } of mappings) {\n      results.push({ label, id: svg_id });\n    }\n\n    return results;\n  }\n\n  /**\n   * Formates data to array of DataFileReference format\n   * @param data\n   * @returns data file references\n   */\n  private toDataFileReferences(data: IllusrationFiles): DataFileReference[] {\n    const { fileFormatMapping: formats } = this;\n    const results: DataFileReference[] = [];\n    for (const { file, file_format } of data) {\n      if (file_format in formats) {\n        results.push({ format: formats[file_format], url: file });\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Formats data from 'dataSources' to 'SourceReferences'[] format\n   * @param data\n   * @returns source references\n   */\n  private toSourceReferences(data: dataSources): SourceReference[] {\n    const results: SourceReference[] = [];\n    for (const { label, link, description } of data) {\n      results.push({ label, link, title: description });\n    }\n    return results;\n  }\n\n  /**\n   * constructCellSummaries : Formates Cell Summary after etching the data\n   * @param data\n   * @returns\n   */\n  private constructCellSummaries(data: Cell_Summary['@graph']): CellSummary[] {\n    const cellSummary: CellSummary[] = [];\n\n    data.forEach((summaryGroup) => {\n      const cells = summaryGroup.summary.map((entry) => ({\n        id: entry.cell_id as Iri,\n        label: entry.cell_label,\n      }));\n      const biomarkers = summaryGroup.summary.map((entry) => ({\n        id: entry.gene_id as Iri,\n        label: entry.gene_label,\n      }));\n      const summaries = summaryGroup.summary.map((entry) => ({\n        cell: entry.cell_id as Iri,\n        biomarker: entry.gene_id as Iri,\n        count: entry.count,\n        percentage: entry.percentage,\n        meanExpression: entry.mean_expression,\n        dataset_count: entry.dataset_count,\n      }));\n      cellSummary.push({\n        label: summaryGroup.biomarker_type,\n        cells,\n        biomarkers,\n        summaries,\n      });\n    });\n    return cellSummary;\n  }\n\n  /**\n   * Constructs tissue library ,forming parent and child nodes\n   * @param items\n   * @returns\n   */\n  private constructTissueLibrary(items: Illustrations['@graph']): TissueLibrary {\n    const nodes: TissueLibrary['nodes'] = {};\n    for (const { '@id': id, label, organ_id, organ_label } of items) {\n      const parentId = (BASE_IRI + organ_id) as Iri;\n      nodes[parentId] ??= { id: parentId, label: organ_label, parent: BASE_IRI, children: [] };\n      nodes[id] = { id, label, parent: parentId, children: [], link: TISSUE_LINK };\n      nodes[parentId]?.children.push(id);\n    }\n    return { root: BASE_IRI, nodes };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FtuDataService.html":{"url":"injectables/FtuDataService.html","title":"injectable - FtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading all data related to a single ftu\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getDataFileReferences\n                            \n                            \n                                    Abstract\n                                getIllustrationMapping\n                            \n                            \n                                    Abstract\n                                getIllustrationUrl\n                            \n                            \n                                    Abstract\n                                getSourceReferences\n                            \n                            \n                                    Abstract\n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable of cell summaries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:42\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of data file references\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:30\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable of IllustrationMappingItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:25\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable url\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:48\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of source references\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:19\n                \n            \n\n\n            \n                \n                    Gets tissue library\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        tissue library\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\n\n/** Service for loading all data related to a single ftu */\n@Injectable()\nexport abstract class FtuDataService {\n  /**\n   * Gets tissue library\n   * @returns tissue library\n   */\n  abstract getTissueLibrary(): Observable;\n\n  /**\n   * This method takes\n   * @param iri and @returns an observable url\n   */\n  abstract getIllustrationUrl(iri: Iri): Observable;\n  /**\n   * This method takes\n   * @param iri and @returns observable of IllustrationMappingItem\n   */\n  abstract getIllustrationMapping(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri and\n   * @returns observable of cell summaries\n   */\n  abstract getCellSummaries(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of data file references\n   */\n  abstract getDataFileReferences(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of source references\n   */\n  abstract getSourceReferences(iri: Iri): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraServiceModule.html":{"url":"modules/HraServiceModule.html","title":"module - HraServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    HraServiceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/service.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactImplService } from './contact/contact.impl';\nimport { ContactService } from './contact/contact.service';\nimport { FTU_DATA_IMPL_ENDPOINTS, FtuDataImplService } from './ftu-data/ftu-data.impl';\nimport { FtuDataService } from './ftu-data/ftu-data.service';\n\n@NgModule({\n  providers: [\n    {\n      provide: ContactService,\n      useExisting: ContactImplService,\n    },\n    {\n      provide: FtuDataService,\n      useExisting: FtuDataImplService,\n    },\n    {\n      provide: FTU_DATA_IMPL_ENDPOINTS,\n      useValue: {\n        illustrations: 'assets/TEMP/2d-ftu-illustrations.jsonld',\n        summaries: 'assets/TEMP/ftu-cell-summaries.jsonld',\n        datasets: 'assets/TEMP/ftu-datasets.jsonld',\n      },\n    },\n  ],\n})\nexport class HraServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockContactService.html":{"url":"injectables/MockContactService.html","title":"injectable - MockContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents mock implementation of the ContactService class.\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    It accepts an object of type ContactMessage and currently logs the message contents on the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { ContactMessage, ContactService } from './contact.service';\n\n/** This class represents mock implementation of the ContactService class. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockContactService extends ContactService {\n  /** It accepts an object of type ContactMessage and currently logs the message contents on the console. */\n  sendMessage(message: ContactMessage): Observable {\n    console.log('Message received. Content: ' + JSON.stringify(message));\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockFtuDataService.html":{"url":"injectables/MockFtuDataService.html","title":"injectable - MockFtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockFtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n\n            \n\n            \n                Extends\n            \n            \n                        FtuDataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCellSummaries\n                            \n                            \n                                    \n                                getDataFileReferences\n                            \n                            \n                                    \n                                getIllustrationMapping\n                            \n                            \n                                    \n                                getIllustrationUrl\n                            \n                            \n                                    \n                                getSourceReferences\n                            \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:125\n\n                \n            \n\n\n            \n                \n                    Overrides the getCellSummaries method to return an CellSummary array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits an CellSummary array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:133\n\n                \n            \n\n\n            \n                \n                    Overrides the getDataFileReferences method to return an DataFileReference array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an DataFileReference array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:116\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an IllustrationMappingItem array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:107\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits the mock URL.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:146\n\n                \n            \n\n\n            \n                \n                    Overrides the getSourceReferences method to return an empty array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an empty array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:99\n\n                \n            \n\n\n            \n                \n                    Overrides the getTissueLibrary method to return a mock data for the tissue tree\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        tissue library\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport { MOCK_SUMMARIES } from '../tissue-ftu/tissue-ftu.mock';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/**\n * Dummy data for Source References\n */\nconst sourceReferences = [\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n];\n\n/**\n * Dummy data extract om Mock Data of tissue mock\n */\nconst CELL_SUMMARY_DATA: CellSummary[] = Object.values(MOCK_SUMMARIES).map((summary) => ({\n  label: summary.label,\n  cells: summary.entries.map((entry) => ({\n    id: entry.cell.id as Iri,\n    label: entry.cell.label,\n  })),\n  biomarkers: summary.entries.map((entry) => ({\n    id: entry.biomarker.id as Iri,\n    label: entry.biomarker.label,\n  })),\n  summaries: summary.entries.map((entry) => ({\n    cell: entry.cell.id as Iri,\n    biomarker: entry.biomarker.id as Iri,\n    count: entry.count,\n    percentage: entry.percentage,\n    meanExpression: entry.meanExpression,\n  })),\n}));\n\n/**\nThis class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockFtuDataService extends FtuDataService {\n  /**\n   * Overrides the getTissueLibrary method to return a mock data for the tissue tree\n   * @returns tissue library\n   */\n  override getTissueLibrary(): Observable {\n    return of();\n  }\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return of(MOCK_TISSUE_DATA.nodes[iri].object.file);\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return of([]);\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return of(CELL_SUMMARY_DATA);\n  }\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return of([\n      {\n        format: 'svg',\n        url: MOCK_TISSUE_DATA.nodes[iri].object.file,\n      },\n    ]);\n  }\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return of(sourceReferences);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueFtuService.html":{"url":"injectables/MockTissueFtuService.html","title":"injectable - MockTissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of TissueFtuService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueFtuService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCellSummaries\n                            \n                            \n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \ngetCellSummaries()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:99\n\n                \n            \n\n\n            \n                \n                    Implementation of abstract method\n\n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:94\n\n                \n            \n\n\n            \n                \n                    Implementation of getReferenceOrgans method\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Any } from '@hra-ui/utils/types';\nimport { Observable, of } from 'rxjs';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport { ReferenceOrgan, TissueFtuService } from './tissue-ftu.service';\n\n/** Test whether an object is a reference organ */\nfunction isReferenceOrgan(obj: Any): obj is ReferenceOrgan {\n  return !!obj['object']['file'];\n}\n\n/** Helper for creating summary data */\nfunction createCell(\n  cid: string,\n  clabel: string,\n  bid: string,\n  blabel: string,\n  count: number,\n  percentage: number,\n  meanExpression: number,\n  metadata: { label: string; value: string }[][] = []\n) {\n  return {\n    cell: {\n      id: cid,\n      label: clabel,\n    },\n    biomarker: {\n      id: bid,\n      label: blabel,\n    },\n    count,\n    percentage,\n    meanExpression,\n    metadata,\n  };\n}\n\n/** Reference organs */\nconst MOCK_REFERENCE_ORGANS = Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan);\n\n/** Mock summary data */\nexport const MOCK_SUMMARIES = {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 1.0, 1.0, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2, 0.3),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2, 0.3),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3, 0.5),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1, 0.3),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1, 1.0),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4, 0.3),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2, 0.1),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7, 0.3),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4, 0.3),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5, 0.3),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1, 0.7),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1, 0.4),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1, 0.9),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1, 0.9)],\n  },\n  summary3: {\n    label: 'Summary 3',\n    entries: [],\n  },\n};\n\n/** Implementation of TissueFtuService */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueFtuService extends TissueFtuService {\n  /** Implementation of getReferenceOrgans method */\n  getReferenceOrgans(): Observable {\n    return of(MOCK_REFERENCE_ORGANS);\n  }\n\n  /** Implementation of abstract method */\n  getCellSummaries(): Observable {\n    return of(MOCK_SUMMARIES);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueLibraryService.html":{"url":"injectables/MockTissueLibraryService.html","title":"injectable - MockTissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock implementation of TissueLibraryService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueLibraryService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueLibraryService\n\n                \n            \n            \n                \n                        Defined in         TissueLibraryService:162\n\n                \n            \n\n\n            \n                \n                    Implementation of TissueLibraryService.getTissueLibrary\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://purl.humanatlas.io/2d-ftu/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueFtuService.html":{"url":"injectables/TissueFtuService.html","title":"injectable - TissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract Service to fetch reference organs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(id)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:22\n                \n            \n\n\n            \n                \n                    Get summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:19\n                \n            \n\n\n            \n                \n                    abstract Method to fetch reference organs\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\nexport type ReferenceOrgan = z.infer;\n\n/** Reference organ type */\nexport const REFERENCE_ORGAN = z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n});\n\n/** Abstract Service to fetch reference organs */\n@Injectable()\nexport abstract class TissueFtuService {\n  /** abstract Method to fetch reference organs */\n  abstract getReferenceOrgans(): Observable;\n\n  /** Get summary data */\n  abstract getCellSummaries(id: unknown): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryService.html":{"url":"injectables/TissueLibraryService.html","title":"injectable - TissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading the tissue library\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.service.ts:9\n                \n            \n\n\n            \n                \n                    Loads the entire tissue library\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TissueLibrary } from './tissue-library.model';\n\n/** Service for loading the tissue library */\n@Injectable()\nexport abstract class TissueLibraryService {\n  /** Loads the entire tissue library */\n  abstract getTissueLibrary(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createCell   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            createNodeId   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            defineNode   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            isReferenceOrgan   (src/.../tissue-ftu.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCell\n                        \n                    \n                \n            \n            \n                \ncreateCell(cid: string, clabel: string, bid: string, blabel: string, count: number, percentage: number, meanExpression: number, metadata)\n                \n            \n\n\n\n\n            \n                \n                    Helper for creating summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    cid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    clabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    blabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    meanExpression\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    metadata\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReferenceOrgan\n                        \n                    \n                \n            \n            \n                \nisReferenceOrgan(obj: Any)\n                \n            \n\n\n\n\n            \n                \n                    Test whether an object is a reference organ\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                Any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReferenceOrgan\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createNodeId\n                        \n                    \n                \n            \n            \n                \ncreateNodeId(label: string, parent: string)\n                \n            \n\n\n\n\n            \n                \n                    Create a new id from a label\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defineNode\n                        \n                    \n                \n            \n            \n                \ndefineNode(label: string, parent: string, url?: string, ...children: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Create a new node\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    children\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nservices\nThis library was generated with Nx.\nRunning unit tests\nRun nx test services to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraServiceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Biomarker   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Cell   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Cell_Summary   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CellSourceItem   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CellSummary   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CellSummaryRow   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DataFileReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Datasets   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            dataSources   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            Graph   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IdItem   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IllusrationFiles   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IllustrationMappingItem   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Illustrations   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            Iri   (src/.../common.model.ts)\n                        \n                        \n                            ReferenceOrgan   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SourceReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Tissue   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Tissue   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibrary   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TissueLibrary   (src/.../tissue-library.model.ts)\n                        \n                        \n                            Url   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n    \n        \n            \n                \n                    \n                    Biomarker\n                \n            \n            \n                \n                    Type for a Biomarker\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Cell\n                \n            \n            \n                \n                    Type for a cell\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummary\n                \n            \n            \n                \n                    Type for a CellSummary\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryRow\n                \n            \n            \n                \n                    Type for a CellSummaryRow\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataFileReference\n                \n            \n            \n                \n                    Type for a DataFileReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IllustrationMappingItem\n                \n            \n            \n                \n                    Type for a IllustrationMappingItem\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceReference\n                \n            \n            \n                \n                    Type for a SourceReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tissue\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibrary\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/ftu-data/ftu-data.impl.ts\n    \n    \n        \n            \n                \n                    \n                    Cell_Summary\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSourceItem\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Datasets\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    dataSources\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Graph\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IdItem\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IllusrationFiles\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Illustrations\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/shared/common.model.ts\n    \n    \n        \n            \n                \n                    \n                    Iri\n                \n            \n            \n                \n                    Same as an Url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Url\n                \n            \n            \n                \n                    Any url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReferenceOrgan\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    Tissue\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibrary\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ID   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            BASE_IRI   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            BIOMARKER   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SOURCE_ITEM   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CELL_SUMMARIES   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CELL_SUMMARY   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SUMMARY_DATA   (src/.../ftu-data.mock.ts)\n                        \n                        \n                            CELL_SUMMARY_ROW   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_INTEGER_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DATA_FILE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DATASETS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            FTU_DATA_IMPL_ENDPOINTS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            FTU_DATA_IMPL_FILE_FORMAT_MAPPING   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            ID_ITEM   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            ILLUSTRATION_MAPPING_ITEM   (src/.../ftu-data.model.ts)\n                        \n                        \n                            ILLUSTRATIONS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IRI   (src/.../common.model.ts)\n                        \n                        \n                            MOCK_REFERENCE_ORGANS   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_SUMMARIES   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_TISSUE_DATA   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            PERCENTAGE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            PERCENTAGE_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            REFERENCE_ORGAN   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SOURCE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            sourceReferences   (src/.../ftu-data.mock.ts)\n                        \n                        \n                            TISSUE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TISSUE   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TISSUE_LIBRARY   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TISSUE_LIBRARY   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TISSUE_LINK   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            URL   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://purl.humanatlas.io/2d-ftu/'\n                    \n                \n\n            \n                \n                    Base node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_TISSUE_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n}\n                    \n                \n\n            \n                \n                    Mock tissue data\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.impl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 'https://purl.humanatlas.io/2d-ftu/' as Iri\n                    \n                \n\n            \n                \n                    Provides Base/root url for the tissue tree\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SOURCE_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell_source: IRI,\n})\n                    \n                \n\n            \n                \n                    Base CELL_SOURCE_ITEM Object  having cell_source\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    CELL_SUMMARIES zod Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATASETS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    DATASETS Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FTU_DATA_IMPL_ENDPOINTS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Endpoints')\n                    \n                \n\n            \n                \n                    Constant  to read the endpoints\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FTU_DATA_IMPL_FILE_FORMAT_MAPPING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n})\n                    \n                \n\n            \n                \n                    Input to different file formats supported\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@id': IRI,\n})\n                    \n                \n\n            \n                \n                    Base ID Object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ILLUSTRATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: URL,\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        label: z.string(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    ILLUSTRATIONS Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LINK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('FTU')\n                    \n                \n\n            \n                \n                    Creates clickable link for the tissue tree element\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BIOMARKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a BIOMARKER\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a cell object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  cells: CELL.array(),\n  biomarkers: BIOMARKER.array(),\n  summaries: CELL_SUMMARY_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell: IRI,\n  biomarker: IRI,\n  count: COUNT,\n  percentage: PERCENTAGE,\n  meanExpression: PERCENTAGE,\n  dataset_count: COUNT.optional(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY_ROW\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().int(COUNT_INTEGER_ERROR).nonnegative(COUNT_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A integer greater than or equal to zero\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_INTEGER_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be an integer'\n                    \n                \n\n            \n                \n                    Error message for non integer counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be greater than or equal to 0'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_FILE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  format: z.string(),\n  url: URL,\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a DATA_FILE_REFERENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ILLUSTRATION_MAPPING_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: z.string(),\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a ILLUSTRATION_MAPPING_ITEM\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().gte(0, PERCENTAGE_RANGE_ERROR).lte(1, PERCENTAGE_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A number between 0 and 1 inclusive\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Percentage must be between 0 and 1 (inclusive)'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SOURCE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  title: z.string(),\n  label: z.string(),\n  link: z.string().url(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a SOURCE_REFERENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n  parent: IRI,\n  children: IRI.array().default([]),\n  link: z.string().optional(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a tissue object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LIBRARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a tissue library object\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CellSummary[]\n\n                    \n                \n                \n                    \n                        Default value : Object.values(MOCK_SUMMARIES).map((summary) => ({\n  label: summary.label,\n  cells: summary.entries.map((entry) => ({\n    id: entry.cell.id as Iri,\n    label: entry.cell.label,\n  })),\n  biomarkers: summary.entries.map((entry) => ({\n    id: entry.biomarker.id as Iri,\n    label: entry.biomarker.label,\n  })),\n  summaries: summary.entries.map((entry) => ({\n    cell: entry.cell.id as Iri,\n    biomarker: entry.biomarker.id as Iri,\n    count: entry.count,\n    percentage: entry.percentage,\n    meanExpression: entry.meanExpression,\n  })),\n}))\n                    \n                \n\n            \n                \n                    Dummy data extract om Mock Data of tissue mock\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceReferences\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n]\n                    \n                \n\n            \n                \n                    Dummy data for Source References\n\n                \n            \n\n        \n    \n\n    src/lib/shared/common.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : URL.brand('IRI')\n                    \n                \n\n            \n                \n                    Same as an URL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.string().url().brand('URL')\n                    \n                \n\n            \n                \n                    Any url\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MOCK_REFERENCE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan)\n                    \n                \n\n            \n                \n                    Reference organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_SUMMARIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 1.0, 1.0, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2, 0.3),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2, 0.3),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3, 0.5),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1, 0.3),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1, 1.0),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4, 0.3),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2, 0.1),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7, 0.3),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4, 0.3),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5, 0.3),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1, 0.7),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1, 0.4),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1, 0.9),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1, 0.9)],\n  },\n  summary3: {\n    label: 'Summary 3',\n    entries: [],\n  },\n}\n                    \n                \n\n            \n                \n                    Mock summary data\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFERENCE_ORGAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n})\n                    \n                \n\n            \n                \n                    Reference organ type\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-library/tissue-library.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TISSUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n  parent: IRI,\n  children: IRI.array().default([]),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LIBRARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue Library\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
