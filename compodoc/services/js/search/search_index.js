var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ContactMessage.html",[0,0.885,1,1.672]],["body/interfaces/ContactMessage.html",[0,1.518,1,3.002,2,2.114,3,0.65,4,0.555,5,0.555,6,2.897,7,0.65,8,3.609,9,3.609,10,4.492,11,4.492,12,3.278,13,0.383,14,2.3,15,1.723,16,0.883,17,0.049,18,4.316,19,3.648,20,4.316,21,4.316,22,0.81,23,0.038,24,0.555,25,1.022,26,0.753,27,0.81,28,2.204,29,0.81,30,2.897,31,2.3,32,1.267,33,2.448,34,0.864,35,2.897,36,0.753,37,2.448,38,0.038,39,0.038]],["title/injectables/ContactService.html",[23,0.024,31,1.461]],["body/injectables/ContactService.html",[0,1.415,1,3.168,3,0.667,4,0.569,5,0.569,6,2.969,7,0.667,8,2.969,9,2.969,10,4.15,11,4.15,12,3.111,13,0.393,15,1.535,16,0.667,17,0.049,18,3.974,19,3.359,20,3.974,21,3.974,22,0.823,23,0.039,24,0.569,25,1.108,26,0.772,27,0.823,28,2.434,29,0.892,30,3.664,31,2.645,32,1.602,33,3.097,34,1.093,35,3.664,36,1.033,37,3.097,38,0.039,39,0.039,40,1.01,41,1.415,42,3.664,43,1.146,44,3.666,45,1.469,46,1.469,47,1.469]],["title/interfaces/ExtendedTissue.html",[0,0.885,48,1.937]],["body/interfaces/ExtendedTissue.html",[0,0.708,2,1.338,3,0.412,4,0.352,5,0.694,7,0.412,13,0.243,14,1.69,15,1.612,16,0.813,17,0.05,22,0.847,23,0.028,24,0.352,25,0.689,26,0.477,27,0.595,29,0.412,34,1.08,38,0.028,39,0.028,48,2.241,49,0.802,50,0.708,51,1.338,52,2.651,53,1.188,54,1.541,55,2.029,56,2.651,57,2.651,58,2.651,59,1.538,60,1.985,61,1.612,62,1.338,63,1.169,64,1.338,65,1.985,66,1.55,67,1.159,68,1.55,69,1.159,70,1.028,71,2.241,72,1.487,73,1.492,74,2.241,75,2.241,76,1.688,77,1.541,78,1.834,79,1.834,80,1.834,81,2.49,82,2.641,83,1.487,84,1.935,85,1.791,86,2.651,87,1.834,88,2.651,89,1.834,90,2.651,91,1.834,92,1.834,93,1.746,94,1.169,95,1.834,96,3.484,97,1.169,98,1.936,99,1.159,100,0.624,101,1.169,102,1.159,103,1.169,104,1.55,105,2.962,106,2.233,107,2.241,108,2.884,109,3.189,110,2.632,111,3.728,112,3.728,113,3.728,114,2.632,115,2.241,116,1.55,117,1.55,118,2.884,119,2.241,120,3.06,121,2.884,122,2.884,123,2.241,124,2.884,125,1.55,126,1.55,127,2.241,128,1.55,129,2.241,130,2.632,131,2.241,132,1.55,133,1.55,134,2.241,135,2.241,136,1.55,137,1.55,138,1.55,139,2.241,140,2.241,141,1.55,142,1.55,143,1.55,144,2.884,145,1.55,146,1.55,147,1.55,148,1.55,149,2.241,150,2.241,151,2.241,152,2.241,153,2.632,154,2.241,155,1.55,156,1.55,157,2.241,158,1.55,159,1.55,160,1.55,161,2.632,162,2.241,163,2.241,164,1.55,165,2.632,166,2.241,167,1.55,168,2.632,169,1.69,170,0.802,171,1.338,172,1.834,173,1.169,174,0.907,175,1.834]],["title/interfaces/FtuDataImplEndpoints.html",[0,0.885,176,1.937]],["body/interfaces/FtuDataImplEndpoints.html",[0,0.414,2,0.782,3,0.241,4,0.491,5,0.776,7,0.576,13,0.142,14,1.116,15,0.676,16,0.817,17,0.05,22,0.75,23,0.019,24,0.205,25,0.997,26,0.279,27,0.576,29,0.241,32,1.326,34,1.06,36,1.01,38,0.035,39,0.019,53,1.06,54,0.53,55,0.601,59,1.63,60,1.116,61,1.519,62,0.782,63,0.683,64,0.782,67,0.766,69,1.959,70,0.601,72,1.437,73,1.677,76,1.099,77,2.069,83,0.982,85,2.136,93,1.584,94,0.683,97,0.683,98,1.121,99,0.766,100,1.459,102,0.971,103,1.415,106,1.584,170,0.766,173,1.933,174,0.866,176,1.48,177,0.601,178,0.53,179,0.782,180,2.389,181,1.751,182,1.877,183,1.751,184,2.04,185,2.202,186,1.992,187,3.2,188,2.705,189,1.554,190,1.634,191,1.071,192,1.071,193,1.071,194,1.071,195,1.071,196,2.22,197,2.062,198,1.278,199,1.794,200,2.04,201,1.801,202,1.415,203,0.782,204,0.982,205,0.782,206,0.906,207,1.48,208,0.782,209,0.906,210,0.906,211,2.564,212,0.906,213,0.906,214,0.906,215,0.906,216,0.906,217,0.782,218,0.906,219,0.906,220,0.906,221,0.906,222,0.906,223,2.062,224,0.906,225,2.202,226,3.338,227,0.782,228,1.48,229,1.071,230,1.877,231,1.071,232,0.906,233,2.062,234,1.877,235,2.521,236,1.48,237,2.757,238,1.877,239,1.877,240,0.906,241,1.877,242,2.87,243,1.877,244,2.167,245,0.906,246,1.48,247,2.564,248,1.48,249,0.906,250,0.906,251,1.245,252,0.906,253,0.906,254,0.906,255,0.906,256,0.906,257,1.877,258,0.982,259,0.982,260,1.48,261,0.906,262,0.906,263,0.906,264,1.871,265,1.48,266,1.48,267,0.906,268,0.906,269,2.167,270,1.278,271,1.071,272,1.116,273,1.071,274,1.071,275,0.906,276,1.071,277,2.22,278,1.071,279,1.751,280,3.835,281,2.22,282,1.071,283,1.071,284,1.071,285,1.071,286,2.22,287,1.071,288,1.751,289,1.751,290,1.751,291,2.22,292,1.751,293,2.564,294,0.866,295,2.564,296,1.071,297,2.22,298,2.22,299,3.454,300,1.071,301,0.782,302,0.906,303,2.928,304,2.92,305,0.782,306,1.071,307,1.071,308,0.782,309,0.782,310,2.564,311,2.22,312,1.071,313,1.071,314,0.601,315,0.782,316,1.071,317,1.071,318,1.071,319,1.071,320,0.782,321,0.782,322,1.071,323,1.071,324,0.782,325,1.278,326,0.782,327,1.071,328,1.071,329,1.071,330,1.071,331,1.071,332,1.071,333,1.071,334,1.751,335,2.167,336,2.22,337,1.071,338,1.071,339,1.071,340,1.071,341,1.071,342,1.071,343,1.071,344,1.071,345,1.071,346,1.071,347,1.071,348,1.071,349,1.071,350,1.071,351,1.071,352,1.071,353,1.071,354,1.071,355,1.071,356,2.22,357,1.071,358,1.071,359,3.2,360,1.071,361,1.071,362,1.071,363,2.22,364,1.071,365,1.071,366,1.071,367,1.071,368,1.071,369,1.071,370,0.906,371,1.071,372,2.22,373,1.071,374,1.751,375,1.071,376,1.751,377,1.071,378,1.071,379,1.071,380,1.071,381,1.071,382,1.751,383,1.071,384,2.22,385,1.071,386,1.071,387,0.782,388,1.071,389,0.782,390,1.071,391,1.071,392,1.071,393,1.071,394,1.071,395,1.278,396,2.22,397,1.751,398,1.071,399,1.278,400,1.751,401,1.071,402,0.601,403,0.782,404,0.782,405,0.601,406,1.071,407,1.071,408,1.071,409,1.071,410,1.071,411,1.071,412,1.071,413,1.751,414,1.071,415,1.071,416,1.071,417,2.22,418,1.071,419,1.071,420,1.071]],["title/injectables/FtuDataImplService.html",[23,0.024,270,1.672]],["body/injectables/FtuDataImplService.html",[0,0.382,3,0.222,4,0.402,5,0.74,7,0.753,13,0.131,15,0.633,16,0.83,17,0.05,22,0.726,23,0.017,24,0.19,25,1.084,26,0.257,27,0.548,29,0.222,32,1.585,34,1.031,36,1.052,38,0.034,39,0.017,40,0.336,41,0.633,43,1.127,45,1.339,46,1.339,47,1.339,53,1.102,54,0.811,55,0.555,59,1.573,60,1.045,61,1.49,62,0.722,63,0.63,64,0.722,67,0.717,69,1.986,70,0.555,72,1.369,73,1.642,76,1.039,77,2.099,83,0.919,85,2.114,93,1.518,94,0.63,97,0.63,98,1.184,99,1.068,100,1.443,102,0.918,103,1.338,106,1.518,170,0.717,173,1.86,174,1.444,176,0.836,177,0.555,178,0.489,179,0.722,180,2.064,181,0.989,182,1.386,183,0.989,184,1.557,185,1.726,186,1.636,187,2.442,188,2.064,189,1.351,190,1.338,191,0.989,192,0.989,193,0.989,194,0.989,195,0.989,196,2.099,197,1.975,198,1.196,199,1.881,200,2.138,201,1.97,202,1.338,203,0.722,204,1.881,205,0.722,206,0.836,207,1.386,208,0.722,209,0.836,210,0.836,211,2.467,212,0.836,213,0.836,214,0.836,215,0.836,216,0.836,217,0.722,218,0.836,219,0.836,220,0.836,221,0.836,222,0.836,223,1.975,224,0.836,225,2.138,226,3.233,227,0.722,228,1.386,229,0.989,230,1.774,231,0.989,232,0.836,233,1.975,234,1.774,235,2.448,236,1.386,237,2.696,238,1.774,239,1.774,240,0.836,241,1.774,242,3.01,243,1.774,244,2.064,245,0.836,246,1.386,247,2.467,248,1.386,249,0.836,250,0.836,251,1.177,252,0.836,253,0.836,254,0.836,255,0.836,256,0.836,257,1.774,258,0.919,259,0.919,260,1.386,261,0.836,262,0.836,263,0.836,264,2.129,265,1.386,266,1.386,267,0.836,268,0.836,269,2.064,270,1.782,271,1.639,272,1.338,273,1.639,274,1.639,275,1.386,276,1.639,277,2.099,278,0.989,279,1.639,280,3.755,281,2.099,282,0.989,283,0.989,284,0.989,285,0.989,286,2.099,287,0.989,288,1.639,289,1.639,290,1.639,291,2.099,292,1.639,293,3.064,294,1.039,295,3.064,296,0.989,297,2.099,298,2.099,299,3.354,300,0.989,301,1.782,302,1.386,303,2.878,304,3.174,305,1.196,306,0.989,307,0.989,308,1.782,309,1.196,310,2.442,311,2.099,312,0.989,313,0.989,314,1.369,315,1.196,316,0.989,317,0.989,318,0.989,319,0.989,320,1.782,321,1.196,322,0.989,323,0.989,324,1.782,325,1.782,326,1.196,327,0.989,328,0.989,329,0.989,330,0.989,331,0.989,332,0.989,333,0.989,334,1.639,335,2.064,336,2.099,337,0.989,338,0.989,339,0.989,340,0.989,341,0.989,342,0.989,343,0.989,344,0.989,345,0.989,346,0.989,347,0.989,348,0.989,349,0.989,350,0.989,351,0.989,352,0.989,353,0.989,354,0.989,355,0.989,356,2.099,357,0.989,358,0.989,359,3.09,360,0.989,361,0.989,362,0.989,363,2.099,364,0.989,365,0.989,366,0.989,367,0.989,368,0.989,369,0.989,370,0.836,371,0.989,372,2.099,373,0.989,374,1.639,375,0.989,376,1.639,377,0.989,378,0.989,379,0.989,380,0.989,381,0.989,382,1.639,383,0.989,384,2.099,385,0.989,386,0.989,387,0.722,388,0.989,389,0.722,390,0.989,391,0.989,392,0.989,393,0.989,394,0.989,395,1.196,396,2.099,397,1.639,398,0.989,399,1.196,400,1.639,401,0.989,402,0.555,403,0.722,404,0.722,405,0.555,406,0.989,407,0.989,408,0.989,409,0.989,410,0.989,411,0.989,412,0.989,413,1.639,414,0.989,415,0.989,416,0.989,417,2.099,418,0.989,419,0.989,420,0.989,421,1.86,422,1.221,423,1.221,424,1.221,425,1.221,426,1.221,427,1.221]],["title/injectables/FtuDataService.html",[23,0.024,204,1.285]],["body/injectables/FtuDataService.html",[3,0.524,4,0.68,5,0.68,7,0.851,13,0.309,16,0.888,17,0.05,22,0.851,23,0.033,24,0.448,25,1.179,26,0.607,27,0.524,28,2.542,29,0.524,32,1.658,33,3.204,36,1.144,38,0.033,39,0.033,40,0.794,41,1.212,43,1.573,45,1.957,46,1.957,47,1.957,53,1.131,59,1.369,67,1.021,69,2.011,70,1.309,98,1.55,100,1.289,174,1.876,177,2.333,178,2.059,186,1.76,189,1.373,190,2.416,199,1.309,200,1.489,201,2.26,202,1.489,203,1.704,204,1.76,272,2.001,294,1.876,301,2.29,303,2.886,305,2.29,308,2.29,309,2.29,314,1.76,315,2.29,320,2.29,321,2.29,324,2.29,326,2.29,428,2.884,429,3.139,430,3.876,431,3.876,432,2.884,433,5.224,434,2.884,435,4.681,436,2.884,437,2.884,438,2.884,439,2.884]],["title/modules/HraServiceModule.html",[440,2.292,441,1.937]],["body/modules/HraServiceModule.html",[3,0.665,4,0.567,5,0.567,17,0.05,22,1.005,24,0.567,27,0.665,29,0.665,31,2.331,38,0.039,39,0.039,50,1.412,53,1.237,65,2.331,66,2.502,98,1.735,171,2.669,178,1.81,184,1.887,185,1.887,186,1.659,189,1.294,204,2.05,205,2.16,208,2.669,270,2.669,441,3.091,442,2.502,443,3.655,444,4.516,445,3.091,446,3.655,447,3.655,448,3.655,449,3.091,450,1.81,451,2.96,452,2.669,453,2.96,454,2.502,455,3.655,456,3.655,457,3.655,458,3.655,459,2.96,460,4.259,461,5.119,462,3.655,463,3.655,464,3.655,465,4.516,466,3.655,467,3.655]],["title/injectables/MockContactService.html",[23,0.024,445,1.937]],["body/injectables/MockContactService.html",[1,3.184,3,0.68,4,0.581,5,0.581,7,0.68,12,2.927,13,0.401,16,0.901,17,0.049,19,3.136,22,0.901,23,0.039,24,0.581,25,1.043,26,0.788,27,0.68,29,0.963,31,2.781,34,1.107,36,0.788,37,3.136,38,0.039,39,0.039,40,1.031,41,1.433,42,3.711,43,1.17,45,1.499,46,1.499,47,1.499,54,1.836,77,1.499,99,1.623,102,1.325,169,2.365,170,1.325,325,2.708,421,1.932,445,3.136,468,3.742,469,3.711,470,3.742,471,4.582,472,4.582,473,4.582,474,4.582,475,3.742,476,3.742,477,3.742,478,3.742,479,3.742]],["title/injectables/MockFtuDataService.html",[23,0.024,480,2.292]],["body/injectables/MockFtuDataService.html",[3,0.376,4,0.475,5,0.321,7,0.82,13,0.221,16,0.783,17,0.05,22,0.849,23,0.026,24,0.321,25,1.151,26,0.435,27,0.376,29,0.849,32,1.811,36,1.077,38,0.026,39,0.026,40,0.569,41,1.261,43,1.41,45,1.726,46,1.726,47,1.726,50,0.646,53,1.128,54,1.227,59,1.41,61,0.957,67,0.731,69,2.003,70,0.938,73,1.79,76,1.227,77,2.146,85,1.227,93,2.176,98,1.084,99,1.811,100,1.392,101,1.066,102,0.731,105,1.809,169,1.58,170,0.731,173,2.328,174,1.807,177,0.938,178,0.828,186,0.938,189,0.731,190,1.066,199,2.048,200,2.223,201,2.223,202,1.066,203,1.221,204,2.294,205,1.221,217,1.221,235,1.221,242,3.128,258,0.938,259,0.938,264,1.809,293,3.57,294,1.227,295,3.41,301,2.383,302,2.095,303,2.545,304,3.41,305,1.809,308,2.383,309,1.809,314,1.831,315,1.809,320,2.383,321,1.809,324,2.383,325,2.383,326,1.809,387,1.221,389,3.082,395,1.221,399,1.221,402,0.938,403,1.221,404,1.221,405,0.938,421,2.328,450,0.828,451,1.673,454,1.414,460,2.479,469,2.479,480,2.479,481,1.673,482,3.061,483,3.061,484,2.066,485,2.066,486,2.066,487,2.066,488,2.066,489,2.066,490,1.414,491,2.479,492,2.479,493,2.479,494,2.479,495,2.479,496,2.479,497,2.479,498,2.479,499,2.479,500,3.882,501,3.652,502,3.652,503,2.479,504,2.479,505,2.479,506,2.479,507,2.479,508,2.479,509,2.479,510,2.479,511,2.479,512,1.673,513,1.673,514,1.673,515,1.673,516,1.673,517,2.953,518,2.479,519,1.673,520,2.479,521,1.673,522,1.673,523,2.066,524,2.066,525,2.066,526,2.066]],["title/injectables/MockTissueFtuService.html",[23,0.024,449,1.937]],["body/injectables/MockTissueFtuService.html",[3,0.433,4,0.369,5,0.369,7,0.433,13,0.255,15,1.481,17,0.05,22,0.829,23,0.029,24,0.369,25,0.959,26,0.501,27,0.617,28,1.54,29,0.433,32,1.526,34,0.575,36,0.714,38,0.029,39,0.029,40,0.655,41,1.061,43,1.061,49,0.842,50,0.744,53,0.819,54,1.359,61,1.061,63,1.228,73,1.796,74,2.322,77,1.727,85,1.359,99,0.842,100,1.255,101,1.228,102,0.842,169,2.445,170,0.842,189,1.975,251,2.069,258,1.54,259,1.54,314,1.957,402,2.532,405,1.54,421,1.751,449,2.322,450,0.953,452,2.881,453,1.927,454,1.629,490,1.629,527,1.629,528,3.836,529,2.379,530,2.379,531,2.379,532,2.005,533,1.629,534,1.927,535,2.005,536,1.406,537,1.927,538,1.927,539,2.379,540,1.927,541,1.927,542,1.927,543,2.747,544,2.747,545,2.747,546,2.747,547,2.706,548,3.119,549,3.337,550,1.629,551,1.927,552,1.927,553,1.927,554,3.657,555,3.202,556,3.202,557,4.036,558,2.747,559,3.202,560,4.216,561,3.472,562,2.747,563,3.49,564,3.49,565,4.42,566,3.836,567,3.69,568,1.927,569,2.747,570,3.202,571,3.69,572,4.107,573,1.927,574,2.747,575,1.927,576,1.927,577,1.927,578,3.49,579,1.927,580,2.747,581,1.927,582,3.202,583,3.49,584,1.927,585,1.927,586,2.747,587,2.747,588,3.202,589,1.927,590,1.927,591,1.927,592,1.629,593,1.927,594,1.927,595,1.927,596,1.927,597,1.927,598,1.927,599,1.927,600,3.836,601,3.69,602,3.69,603,1.927,604,1.927,605,1.927,606,1.927,607,1.927,608,2.747,609,1.927,610,1.927,611,1.927,612,2.379,613,2.379]],["title/injectables/MockTissueLibraryService.html",[23,0.024,171,1.672]],["body/injectables/MockTissueLibraryService.html",[0,0.714,3,0.415,4,0.355,5,0.657,7,0.415,13,0.245,15,1.571,16,0.415,17,0.05,22,0.85,23,0.028,24,0.355,25,0.814,26,0.481,27,0.599,29,0.415,34,0.796,36,0.481,38,0.028,39,0.028,40,0.629,41,1.03,43,0.714,48,1.564,49,0.809,50,0.714,51,1.35,52,1.85,53,1.129,54,1.549,55,1.496,57,1.85,58,1.85,59,1.506,60,1.701,61,1.595,62,1.35,63,1.179,64,1.35,65,2.412,66,1.564,67,1.167,68,1.564,69,1.167,70,1.037,71,2.255,72,1.496,73,1.498,74,2.255,75,2.255,76,1.695,77,1.549,78,1.85,79,1.85,80,1.85,81,2.5,82,2.65,83,1.496,84,1.947,85,1.797,86,2.668,87,1.85,88,2.668,89,1.85,90,2.668,91,1.85,92,1.85,93,1.755,94,1.179,95,1.85,96,3.491,97,1.179,98,1.938,99,1.369,100,0.629,101,1.179,102,1.167,103,1.179,104,1.564,105,2.968,106,2.238,107,2.255,108,2.896,109,3.199,110,2.645,111,3.733,112,3.733,113,3.733,114,2.645,115,2.255,116,1.564,117,1.564,118,2.896,119,2.255,120,3.07,121,2.896,122,2.896,123,2.255,124,2.896,125,1.564,126,1.564,127,2.255,128,1.564,129,2.255,130,2.645,131,2.255,132,1.564,133,1.564,134,2.255,135,2.255,136,1.564,137,1.564,138,1.564,139,2.255,140,2.255,141,1.564,142,1.564,143,1.564,144,2.896,145,1.564,146,1.564,147,1.564,148,1.564,149,2.255,150,2.255,151,2.255,152,2.255,153,2.645,154,2.255,155,1.564,156,1.564,157,2.255,158,1.564,159,1.564,160,1.564,161,2.645,162,2.255,163,2.255,164,1.564,165,2.645,166,2.255,167,1.564,168,2.645,169,2.184,170,0.809,171,1.947,172,2.668,173,1.179,174,1.695,175,1.85,421,1.179,614,2.284]],["title/injectables/TissueFtuService.html",[23,0.024,452,1.672]],["body/injectables/TissueFtuService.html",[3,0.662,4,0.565,5,0.699,7,0.662,13,0.39,16,0.819,17,0.049,22,0.889,23,0.039,24,0.565,25,1.106,26,0.766,27,0.889,28,2.538,29,0.662,32,1.595,34,0.879,36,0.948,38,0.039,39,0.039,40,1.002,41,1.408,43,1.408,45,1.458,46,1.458,47,1.458,49,1.732,55,1.652,61,1.138,85,1.458,100,1.24,197,2.15,198,2.15,223,2.15,233,2.661,237,2.661,251,2.044,272,2.325,314,2.044,450,1.96,452,2.661,528,4.139,532,2.15,535,3.104,536,2.15,550,3.498,615,2.49,616,5.111,617,4.503,618,3.638,619,3.638,620,2.946,621,3.638]],["title/injectables/TissueLibraryService.html",[23,0.024,65,1.461]],["body/injectables/TissueLibraryService.html",[3,0.721,4,0.615,5,0.615,7,0.721,13,0.424,17,0.049,22,0.923,23,0.041,24,0.615,25,1.069,26,0.834,27,0.721,28,2.389,29,0.721,36,0.834,38,0.041,39,0.041,40,1.091,41,1.483,43,1.239,49,1.68,50,1.483,53,1.3,65,2.449,67,1.403,68,2.713,174,2.109,272,2.449,294,2.109,429,3.841,622,3.963,623,3.963,624,4.744,625,4.744]],["title/dependencies.html",[626,1.928,627,2.323]],["body/dependencies.html",[17,0.047,24,0.682,38,0.043,39,0.043,627,3.449,628,4.392,629,4.392,630,4.392,631,4.392,632,5.039]],["title/miscellaneous/functions.html",[633,1.081,634,2.749]],["body/miscellaneous/functions.html",[13,0.386,15,1.787,16,0.926,17,0.048,34,0.871,36,1.025,38,0.038,39,0.038,45,2.041,46,2.041,47,2.041,49,1.585,50,1.127,51,2.878,59,1.4,61,1.127,71,3.065,72,2.033,73,1.725,75,2.467,76,2.041,81,2.13,82,2.646,83,2.033,84,2.13,100,0.993,106,1.636,251,1.636,258,2.033,259,2.033,405,2.033,450,1.444,527,3.334,532,2.13,533,2.467,534,2.919,535,2.13,536,2.13,537,2.919,538,2.919,540,2.919,541,2.919,542,3.626,543,2.919,544,3.626,545,3.626,546,3.626,547,3.655,548,3.065,549,2.467,633,1.636,634,2.919,635,3.487,636,4.477,637,4.477,638,3.604,639,2.919,640,3.604,641,3.604]],["title/index.html",[13,0.255,642,2.381,643,2.381]],["body/index.html",[17,0.043,38,0.043,39,0.043,275,3.442,294,1.753,459,4.071,533,2.995,644,4.376,645,5.028,646,4.376,647,5.028,648,4.376,649,4.376]],["title/modules.html",[442,2.62]],["body/modules.html",[17,0.043,38,0.043,39,0.043,225,2.297,441,3.046,442,3.046,650,4.45,651,4.45]],["title/overview.html",[652,3.099]],["body/overview.html",[2,2.591,17,0.043,38,0.043,39,0.043,40,1.207,440,3.55,554,3.001,561,3.001,592,3.001,627,3.445,652,3.55,653,5.033,654,4.384,655,4.384]],["title/properties.html",[14,1.752,626,1.928]],["body/properties.html",[14,2.302,17,0.046,38,0.044,39,0.044,656,4.459,657,4.459]],["title/miscellaneous/typealiases.html",[633,1.081,658,3.394]],["body/miscellaneous/typealiases.html",[13,0.375,16,1.02,17,0.038,38,0.038,39,0.038,49,1.556,50,1.094,53,1.314,56,2.832,59,1.576,67,1.785,69,1.556,177,1.995,178,1.761,179,3.243,184,2.268,185,2.268,189,1.701,199,2.181,200,2.48,201,2.48,202,2.48,222,3.008,223,3.369,224,3.008,225,2.268,227,2.596,228,3.008,230,3.008,402,2.181,450,1.401,532,2.596,615,3.008,633,1.588,635,3.289,659,3.497,660,4.598,661,4.476,662,4.804,663,3.558,664,3.89,665,2.832,666,2.832]],["title/miscellaneous/variables.html",[633,1.081,667,2.749]],["body/miscellaneous/variables.html",[4,0.195,5,0.599,7,0.228,12,1.561,13,0.134,15,0.958,16,0.761,17,0.049,34,1.171,38,0.018,39,0.018,49,1.085,50,0.647,51,1.561,53,1.128,55,0.939,59,1.262,60,1.363,61,1.411,69,1.822,72,0.939,73,1.839,76,0.829,81,0.741,82,1.811,83,0.939,84,0.741,93,2.049,94,0.647,96,3.024,97,1.068,98,1.778,99,1.085,100,1.243,101,1.068,102,1.085,103,1.363,104,0.858,105,2.61,106,1.832,107,1.416,108,2.098,109,2.499,110,1.808,111,3.383,112,3.383,113,3.383,114,1.808,115,1.416,116,0.858,117,0.858,118,2.098,119,1.416,120,2.321,121,2.098,122,2.098,123,1.416,124,2.098,125,0.858,126,0.858,127,1.416,128,0.858,129,1.416,130,1.808,131,1.416,132,0.858,133,0.858,134,1.416,135,1.416,136,0.858,137,0.858,138,0.858,139,1.416,140,1.416,141,0.858,142,0.858,143,0.858,144,2.098,145,0.858,146,0.858,147,0.858,148,0.858,149,1.416,150,1.416,151,1.416,152,1.416,153,1.808,154,1.416,155,0.858,156,0.858,157,1.416,158,0.858,159,0.858,160,0.858,161,1.808,162,1.416,163,1.416,164,0.858,165,1.808,166,1.416,167,0.858,168,1.808,170,0.444,177,1.199,178,1.058,179,2.546,180,0.858,182,0.858,184,1.363,185,1.363,186,0.939,188,0.858,189,1.855,190,0.647,197,1.811,198,2.667,199,0.569,206,0.858,207,0.858,208,1.223,209,0.858,210,0.858,211,1.416,212,0.858,213,1.416,214,0.858,215,0.858,216,0.858,217,0.741,218,0.858,219,0.858,220,0.858,221,0.858,225,1.363,227,1.561,232,1.416,233,2.894,234,1.808,235,1.811,236,1.416,237,3.04,238,0.858,239,0.858,240,0.858,241,0.858,242,2.282,243,0.858,244,0.858,245,0.858,246,1.808,247,1.808,248,1.808,249,0.858,250,0.858,251,1.539,252,0.858,253,0.858,254,0.858,255,0.858,256,0.858,257,1.808,258,1.832,259,1.832,260,1.416,261,0.858,262,0.858,263,0.858,264,1.223,265,0.858,266,1.416,267,0.858,268,0.858,269,1.416,294,0.829,335,3.024,370,1.808,387,1.223,389,2.799,395,1.223,399,1.223,402,2.378,403,0.741,404,0.741,405,0.939,450,0.829,481,2.139,490,1.416,491,1.675,492,1.675,493,1.675,494,1.675,495,1.675,496,1.675,497,1.675,498,1.675,499,1.675,500,3.268,501,2.956,502,2.956,503,1.675,504,1.675,505,1.675,506,1.675,507,1.675,508,1.675,509,1.675,510,1.675,511,1.675,512,1.015,513,1.015,514,1.675,515,1.015,516,1.015,517,2.139,518,1.675,519,1.015,520,1.675,521,1.015,522,1.015,527,1.808,535,1.223,536,0.741,547,0.858,548,1.808,549,3.701,550,0.858,551,1.675,552,1.015,553,1.015,554,3.283,555,2.139,556,2.139,557,3.268,558,1.675,559,2.139,560,3.577,561,2.863,562,1.675,563,2.482,564,2.482,565,3.967,566,2.956,567,2.746,568,1.015,569,1.675,570,2.139,571,2.746,572,3.387,573,1.015,574,1.675,575,1.015,576,1.015,577,1.015,578,2.482,579,1.015,580,1.675,581,1.015,582,2.139,583,2.482,584,1.015,585,1.015,586,1.675,587,1.675,588,2.139,589,1.015,590,1.015,591,1.015,592,0.858,593,1.015,594,1.015,595,1.015,596,1.015,597,1.015,598,1.015,599,1.015,600,2.956,601,2.746,602,2.746,603,1.015,604,1.015,605,1.015,606,1.015,607,1.015,608,1.675,609,1.015,610,1.015,611,1.015,615,1.416,620,1.675,633,0.569,635,2.643,639,4.314,660,4.166,661,3.835,663,1.675,664,2.139,665,1.015,666,1.015,667,1.015,668,2.641,669,2.069,670,2.069,671,2.641,672,2.641,673,2.641,674,2.641,675,3.065,676,1.254,677,1.254,678,1.254,679,1.254,680,1.254,681,2.641,682,2.069,683,2.069,684,1.254,685,2.641,686,1.254,687,2.641,688,2.069,689,1.254,690,1.254,691,2.069,692,2.069,693,1.254,694,2.069,695,1.254,696,2.069,697,1.254,698,1.254]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":370,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":657,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":572,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.2",{"_index":564,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.3",{"_index":565,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.4",{"_index":578,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":571,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.7",{"_index":586,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.9",{"_index":608,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":554,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":559,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":558,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["101",{"_index":581,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":570,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":599,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["124",{"_index":589,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":602,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":568,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15.1.0",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":560,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":610,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["2000",{"_index":575,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["21",{"_index":593,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["230",{"_index":584,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["244",{"_index":590,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":561,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["332",{"_index":577,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":574,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["45",{"_index":600,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":563,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["57",{"_index":597,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":580,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["601",{"_index":585,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["675",{"_index":595,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":583,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["8",{"_index":588,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":592,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":80,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["abstract",{"_index":28,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["acc",{"_index":88,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["accepts",{"_index":19,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["acinus",{"_index":151,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["acinus.svg",{"_index":152,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ai",{"_index":221,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":659,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alveolus",{"_index":132,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["alveolus.svg",{"_index":133,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ancillary",{"_index":495,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":271,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["angular/common",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":192,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{}}}],["application/pdf",{"_index":220,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":35,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["around",{"_index":506,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":242,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["ascending",{"_index":118,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["assets/temp/2d",{"_index":463,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["assets/temp/ftu",{"_index":465,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["available",{"_index":650,"title":{},"body":{"modules.html":{}}}],["base",{"_index":60,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base/root",{"_index":268,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["base_id",{"_index":96,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base_iri",{"_index":269,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":365,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["between",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bid",{"_index":545,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["biomarker",{"_index":402,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["biomarker.array",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biomarker1",{"_index":557,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker2",{"_index":566,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker3",{"_index":567,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker4",{"_index":603,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker5",{"_index":604,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker6",{"_index":605,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker7",{"_index":606,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker8",{"_index":607,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker_type",{"_index":250,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["biomarkers",{"_index":399,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["blabel",{"_index":546,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["bronchial",{"_index":134,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":651,"title":{},"body":{"modules.html":{}}}],["cache",{"_index":292,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cache.has(url",{"_index":343,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cache.set(url",{"_index":352,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cachediri",{"_index":291,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cell",{"_index":189,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell.array",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_id",{"_index":252,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_label",{"_index":253,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source",{"_index":247,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source_item",{"_index":246,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source_item.extend",{"_index":249,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_summaries",{"_index":248,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_summaries).pipe",{"_index":317,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cell_summary",{"_index":227,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell_summary['@graph",{"_index":393,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cell_summary_data",{"_index":514,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["cell_summary_row",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_summary_row.array",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cells",{"_index":395,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["cellsourceitem",{"_index":224,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummary",{"_index":199,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cellsummary.push",{"_index":408,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cellsummaryrow",{"_index":662,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["child",{"_index":412,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["childlabel",{"_index":89,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childnodes",{"_index":86,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["children",{"_index":83,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["children.reduce",{"_index":87,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childurl",{"_index":90,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["cid",{"_index":543,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["clabel",{"_index":544,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["class",{"_index":29,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["clickable",{"_index":263,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":278,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["clinical",{"_index":497,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["codebook",{"_index":499,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["collecting",{"_index":120,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["collectiong",{"_index":128,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["console",{"_index":474,"title":{},"body":{"injectables/MockContactService.html":{}}}],["console.error('illustration",{"_index":378,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.error(`cell",{"_index":371,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.error(`iri",{"_index":362,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.log('message",{"_index":476,"title":{},"body":{"injectables/MockContactService.html":{}}}],["const",{"_index":85,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{}}}],["constant",{"_index":206,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["constructcellsummaries",{"_index":390,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructcellsummaries(data",{"_index":392,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructs",{"_index":410,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructtissuelibrary(items",{"_index":414,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["contact",{"_index":8,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":475,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contact/contact.mock",{"_index":446,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contact/contact.service",{"_index":447,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contactmessage",{"_index":1,"title":{"interfaces/ContactMessage.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["contactservice",{"_index":31,"title":{"injectables/ContactService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["contactservice:11",{"_index":470,"title":{},"body":{"injectables/MockContactService.html":{}}}],["content",{"_index":478,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contents",{"_index":473,"title":{},"body":{"injectables/MockContactService.html":{}}}],["corpuscle",{"_index":116,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["corpuscle.svg",{"_index":117,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["cortical",{"_index":119,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":258,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["count.optional",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count_integer_error",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count_range_error",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["counts",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":71,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["createcell",{"_index":542,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["createcell('cell1",{"_index":556,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell10",{"_index":594,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell11",{"_index":596,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell12",{"_index":598,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell13",{"_index":601,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell2",{"_index":562,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell3",{"_index":569,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell4",{"_index":573,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell5",{"_index":576,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell6",{"_index":579,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell7",{"_index":582,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell8",{"_index":587,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell9",{"_index":591,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell(cid",{"_index":638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid",{"_index":62,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["createlinkid('ftu",{"_index":94,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["createnodeid",{"_index":636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnodeid(label",{"_index":75,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":262,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":541,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["crypt",{"_index":140,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":471,"title":{},"body":{"injectables/MockContactService.html":{}}}],["data",{"_index":100,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data.foreach((summarygroup",{"_index":394,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data.impl",{"_index":448,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["data.impl.ts",{"_index":179,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.mock.ts",{"_index":481,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["data.model",{"_index":203,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["data.model.ts",{"_index":661,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.service",{"_index":205,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["data.service.ts",{"_index":428,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:19",{"_index":439,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:25",{"_index":437,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:30",{"_index":436,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:36",{"_index":432,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:42",{"_index":434,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:48",{"_index":438,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data/ftu",{"_index":178,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data['@graph'].filter",{"_index":368,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data['@graph'].find",{"_index":361,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data_file_reference",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data_sources",{"_index":245,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["datafilereference",{"_index":200,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["dataset",{"_index":501,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["dataset_count",{"_index":260,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["datasets",{"_index":184,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["datasets).pipe",{"_index":328,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["datasets.jsonld",{"_index":467,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["datasets['@graph'][number]['data_sources",{"_index":231,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["datasources",{"_index":230,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["default",{"_index":639,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":43,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["definenode",{"_index":82,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["definenode('large",{"_index":138,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('liver",{"_index":160,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('prostate",{"_index":164,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('thymus",{"_index":167,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode(childlabel",{"_index":91,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["definenode(label",{"_index":640,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defines",{"_index":9,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["dependencies",{"_index":627,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dermal",{"_index":154,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["descending",{"_index":107,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":210,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["duct",{"_index":121,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["duct.svg",{"_index":122,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["dummy",{"_index":491,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":380,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["element",{"_index":265,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":10,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["emits",{"_index":295,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["empty",{"_index":325,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["endpoint",{"_index":187,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["endpoints",{"_index":180,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["entered",{"_index":20,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["entire",{"_index":625,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["entries",{"_index":555,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["entry.biomarker.id",{"_index":520,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.biomarker.label",{"_index":521,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell.id",{"_index":518,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell.label",{"_index":519,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell_id",{"_index":397,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.cell_label",{"_index":398,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.count",{"_index":403,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.dataset_count",{"_index":407,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.gene_id",{"_index":400,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.gene_label",{"_index":401,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.mean_expression",{"_index":406,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.meanexpression",{"_index":522,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.percentage",{"_index":404,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["epidermal",{"_index":157,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["etching",{"_index":391,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["example",{"_index":511,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["execute",{"_index":649,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["extended",{"_index":52,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extendedtissue",{"_index":48,"title":{"interfaces/ExtendedTissue.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extends",{"_index":54,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extract",{"_index":512,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["extracted",{"_index":339,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["extremely",{"_index":503,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":215,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":616,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["fetchdata(iri",{"_index":340,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fetched",{"_index":364,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fetchs",{"_index":331,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["field",{"_index":366,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["file_format",{"_index":241,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["fileformatmapping",{"_index":286,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fileformatmapping['image/svg+xml",{"_index":375,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["files",{"_index":279,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["files.find",{"_index":377,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findcellsummaries(data",{"_index":367,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findgraphitem(data",{"_index":360,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findillustrationurl(files",{"_index":373,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["finds",{"_index":356,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["firstvaluefrom",{"_index":195,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["firstvaluefrom(resp",{"_index":353,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["format",{"_index":235,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["formated",{"_index":337,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["formates",{"_index":372,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["formats",{"_index":211,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["formats[file_format",{"_index":386,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["forming",{"_index":411,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["found",{"_index":363,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["from(cache.get(url",{"_index":354,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ftu",{"_index":98,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu.mock",{"_index":451,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["ftu.mock.ts",{"_index":527,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ftu.service",{"_index":453,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["ftu.service.ts",{"_index":615,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu.service.ts:19",{"_index":619,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu.service.ts:22",{"_index":618,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu/2d",{"_index":113,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu/tissue",{"_index":450,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu_data_impl_endpoints",{"_index":208,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/variables.html":{}}}],["ftu_data_impl_file_format_mapping",{"_index":213,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["ftudataimplendpoints",{"_index":176,"title":{"interfaces/FtuDataImplEndpoints.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ftudataimplservice",{"_index":270,"title":{"injectables/FtuDataImplService.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{}}}],["ftudataservice",{"_index":204,"title":{"injectables/FtuDataService.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["ftudataservice:107",{"_index":487,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:116",{"_index":486,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:125",{"_index":484,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:133",{"_index":485,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:143",{"_index":427,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:146",{"_index":488,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:154",{"_index":425,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:163",{"_index":424,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:175",{"_index":422,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:187",{"_index":423,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:199",{"_index":426,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:99",{"_index":489,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["function",{"_index":74,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["functional",{"_index":274,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["functions",{"_index":634,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":79,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["gene_id",{"_index":254,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["gene_label",{"_index":255,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":644,"title":{},"body":{"index.html":{}}}],["getcellsummaries",{"_index":314,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["getcellsummaries(id",{"_index":617,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["getcellsummaries(iri",{"_index":315,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences",{"_index":320,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences(iri",{"_index":321,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping",{"_index":308,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping(iri",{"_index":309,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl",{"_index":301,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl(iri",{"_index":305,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getreferenceorgans",{"_index":528,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["gets",{"_index":433,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["getsourcereferences",{"_index":324,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getsourcereferences(iri",{"_index":326,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getting",{"_index":642,"title":{"index.html":{}},"body":{}}],["gettissuelibrary",{"_index":174,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["given",{"_index":302,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["gland",{"_index":136,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["gland.svg",{"_index":137,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["glandular",{"_index":166,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["google.com",{"_index":500,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":225,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["greater",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handling",{"_index":273,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["having",{"_index":188,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["helper",{"_index":540,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["henle",{"_index":110,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["henle.svg",{"_index":114,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":510,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["hra",{"_index":63,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["hraservicemodule",{"_index":441,"title":{"modules/HraServiceModule.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["hrt",{"_index":498,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":277,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["http.get(url",{"_index":349,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["httpclient",{"_index":191,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":111,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["https://purl.humanatlas.io/2d",{"_index":97,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":61,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["id_item",{"_index":232,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["id_item.extend",{"_index":236,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["iditem",{"_index":222,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["illusrationfiles",{"_index":228,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["illustration",{"_index":304,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["illustration_files",{"_index":240,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["illustration_mapping_item",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":201,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["illustrations",{"_index":185,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["illustrations).pipe",{"_index":298,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["illustrations.jsonld",{"_index":464,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["illustrations['@graph",{"_index":415,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["illustrations['@graph'][number]['illustration_files",{"_index":229,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["image/png",{"_index":218,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["image/svg+xml",{"_index":216,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["implementation",{"_index":169,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inclusive",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inherited",{"_index":421,"title":{},"body":{"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["inject",{"_index":194,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(ftu_data_impl_endpoints",{"_index":284,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(ftu_data_impl_file_format_mapping",{"_index":287,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(httpclient",{"_index":282,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectable",{"_index":23,"title":{"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["injectables",{"_index":40,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"overview.html":{}}}],["injecting",{"_index":181,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injection",{"_index":285,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectiontoken",{"_index":193,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectiontoken('endpoints",{"_index":209,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken>('mapping",{"_index":214,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["injjector",{"_index":283,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inner",{"_index":123,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":182,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["inside",{"_index":357,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["integer",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercalated",{"_index":149,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"overview.html":{}}}],["intestine",{"_index":139,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri",{"_index":69,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iri).data_sources",{"_index":329,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri).illustration_files",{"_index":322,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri).mapping",{"_index":312,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri.array().default",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islates",{"_index":145,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["islets",{"_index":147,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["isreferenceorgan",{"_index":637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isreferenceorgan(obj",{"_index":537,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":359,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["item.length",{"_index":369,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["items",{"_index":413,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["json",{"_index":347,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["json.stringify(message",{"_index":479,"title":{},"body":{"injectables/MockContactService.html":{}}}],["kidney",{"_index":105,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":73,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["langerhans",{"_index":146,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["langerhans.svg",{"_index":148,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":142,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":289,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["library",{"_index":294,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueLibraryService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["library.mock",{"_index":454,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{}}}],["library.mock.ts",{"_index":51,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["library.model",{"_index":68,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["library.model.ts",{"_index":664,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["library.service",{"_index":66,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["library.service.ts",{"_index":622,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library.service.ts:9",{"_index":623,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library/tissue",{"_index":50,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn",{"_index":141,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn.svg",{"_index":143,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":508,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":93,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":56,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"miscellaneous/typealiases.html":{}}}],["liver",{"_index":161,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":429,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/TissueLibraryService.html":{}}}],["loads",{"_index":624,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["lobule",{"_index":162,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lobule.svg",{"_index":163,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":472,"title":{},"body":{"injectables/MockContactService.html":{}}}],["long",{"_index":504,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["loop",{"_index":109,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lung",{"_index":130,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":196,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["map((data",{"_index":299,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["mapping",{"_index":243,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["mappings",{"_index":382,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["matching",{"_index":39,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mean_expression",{"_index":256,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["meanexpression",{"_index":405,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medicine",{"_index":493,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["medullary",{"_index":124,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":12,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":548,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":32,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["methods",{"_index":41,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["miscellaneous",{"_index":633,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":99,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_reference_organs",{"_index":551,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_summaries",{"_index":490,"title":{},"body":{"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data",{"_index":101,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data.nodes[iri].object.file",{"_index":525,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["mockcontactservice",{"_index":445,"title":{"injectables/MockContactService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["mockftudataservice",{"_index":480,"title":{"injectables/MockFtuDataService.html":{}},"body":{"injectables/MockFtuDataService.html":{}}}],["mocktissueftuservice",{"_index":449,"title":{"injectables/MockTissueFtuService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["mocktissuelibraryservice",{"_index":171,"title":{"injectables/MockTissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["module",{"_index":440,"title":{"modules/HraServiceModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":442,"title":{"modules.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["name",{"_index":46,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":338,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["negative",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nephron",{"_index":125,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nephron.svg",{"_index":126,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":72,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":507,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":444,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["node",{"_index":81,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":103,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nodes[id",{"_index":419,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["nodes[parentid",{"_index":418,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["nodes[parentid]?.children.push(id",{"_index":420,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["non",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":547,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":645,"title":{},"body":{"index.html":{}}}],["obeservable",{"_index":435,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["obj",{"_index":538,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["obj['object']['file",{"_index":539,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["object",{"_index":34,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":104,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(childnodes",{"_index":95,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["object.values(mock_summaries).map((summary",{"_index":515,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["object.values(mock_tissue_data.nodes).filter(isreferenceorgan",{"_index":552,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["objecy",{"_index":57,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["observable",{"_index":25,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["of(cell_summary_data",{"_index":524,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["of(mock_reference_organs",{"_index":612,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_summaries",{"_index":613,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_tissue_data",{"_index":175,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["of(mock_tissue_data.nodes[iri].object.file",{"_index":523,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["of(sourcereferences",{"_index":526,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["om",{"_index":513,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":381,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["operations",{"_index":276,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["optional",{"_index":47,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["opts",{"_index":344,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["opts).pipe(map((data",{"_index":350,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["organ",{"_index":536,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["organ_id",{"_index":238,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["organ_label",{"_index":239,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":550,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":655,"title":{},"body":{"overview.html":{}}}],["outer",{"_index":127,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":173,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["overrides",{"_index":293,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["overview",{"_index":652,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":502,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":626,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pancreas",{"_index":144,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["pancreatic",{"_index":150,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla",{"_index":155,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla.svg",{"_index":156,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":303,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["parameters",{"_index":45,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":345,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["parent",{"_index":76,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parentid",{"_index":417,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["parent}${label.replace",{"_index":78,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["parses",{"_index":333,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["path",{"_index":183,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["peer",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":259,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["percentage_range_error",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["percentage_range_error).lte(1",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png",{"_index":219,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["precision",{"_index":492,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":280,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["project",{"_index":494,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":355,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"properties.html":{}}}],["prostate",{"_index":165,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":460,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["providedin",{"_index":170,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":455,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["provides",{"_index":267,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["pulmonary",{"_index":131,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["purposes",{"_index":483,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["read",{"_index":207,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["reading",{"_index":332,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["readonly",{"_index":281,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["real",{"_index":458,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["received",{"_index":477,"title":{},"body":{"injectables/MockContactService.html":{}}}],["record",{"_index":84,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":376,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ref.url",{"_index":379,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["reference",{"_index":535,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":620,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["referenceorgan",{"_index":532,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["references",{"_index":190,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["reflecting",{"_index":234,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":430,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["releases/v1.3/2d",{"_index":112,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["renal",{"_index":115,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["replace",{"_index":457,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["representation_of",{"_index":55,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["representing",{"_index":30,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["represents",{"_index":469,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["requested",{"_index":334,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["reset",{"_index":654,"title":{},"body":{"overview.html":{}}}],["resp",{"_index":348,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["responsetype",{"_index":346,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["results",{"_index":38,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":384,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["retrived",{"_index":290,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["return",{"_index":77,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["returns",{"_index":36,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ridge",{"_index":158,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ridge.svg",{"_index":159,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":102,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":648,"title":{},"body":{"index.html":{}}}],["running",{"_index":646,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":26,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["same",{"_index":666,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema",{"_index":335,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["schema.parse(data",{"_index":351,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["see",{"_index":509,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["sendmessage",{"_index":42,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["sendmessage(message",{"_index":37,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["service",{"_index":272,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["services",{"_index":459,"title":{},"body":{"modules/HraServiceModule.html":{},"index.html":{}}}],["shared/common.model",{"_index":70,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["single",{"_index":431,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["skin",{"_index":153,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source_reference",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourcereference",{"_index":202,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["sourcereferences",{"_index":387,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["src/.../common.model.ts",{"_index":663,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ftu",{"_index":660,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":635,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.mock.ts",{"_index":468,"title":{},"body":{"injectables/MockContactService.html":{}}}],["src/lib/contact/contact.service.ts",{"_index":6,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["src/lib/contact/contact.service.ts:18",{"_index":44,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/lib/ftu",{"_index":177,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/service.module.ts",{"_index":443,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["src/lib/shared/common.model.ts",{"_index":665,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/tissue",{"_index":49,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":643,"title":{"index.html":{}},"body":{}}],["stoe",{"_index":58,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["stores",{"_index":288,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["study",{"_index":496,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":11,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["submucosal",{"_index":135,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["summaries",{"_index":186,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summaries.jsonld",{"_index":466,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["summary",{"_index":251,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary.entries.map((entry",{"_index":517,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summary.label",{"_index":516,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summary1",{"_index":553,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summary2",{"_index":609,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summary3",{"_index":611,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summarygroup.biomarker_type",{"_index":409,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["summarygroup.summary.map((entry",{"_index":396,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["supported",{"_index":212,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":217,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["svg_id",{"_index":244,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["svgformat",{"_index":374,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["synonymlabels",{"_index":92,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["t",{"_index":226,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tag",{"_index":358,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["takes",{"_index":33,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{}}}],["template",{"_index":336,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["test",{"_index":533,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["testing",{"_index":482,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["tests",{"_index":647,"title":{},"body":{"index.html":{}}}],["thick",{"_index":129,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":108,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["this.cache",{"_index":342,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.cachediri",{"_index":341,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.constructcellsummaries(data",{"_index":319,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.constructtissuelibrary(data['@graph",{"_index":300,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.datasets",{"_index":327,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.illustrations",{"_index":297,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.summaries",{"_index":316,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.fetchdata(iri",{"_index":310,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.fetchdata(undefined",{"_index":296,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findcellsummaries(data",{"_index":318,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findgraphitem(data",{"_index":311,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findillustrationurl(data",{"_index":307,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.getdatafilereferences(iri).pipe(map((data",{"_index":306,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.todatafilereferences(data",{"_index":323,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.toillustrationmapping(data",{"_index":313,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.tosourcereferences(data",{"_index":330,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["thymus",{"_index":168,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue",{"_index":53,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tissue_library",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tissue_link",{"_index":266,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["tissueftuservice",{"_index":452,"title":{"injectables/TissueFtuService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["tissueftuservice:94",{"_index":530,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissueftuservice:99",{"_index":529,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissuelibrary",{"_index":67,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrary['nodes",{"_index":416,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tissuelibraryservice",{"_index":65,"title":{"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["tissuelibraryservice.gettissuelibrary",{"_index":172,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["tissuelibraryservice:162",{"_index":614,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["title",{"_index":389,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["todatafilereferences(data",{"_index":385,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["todo",{"_index":456,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["toillustrationmapping(mappings",{"_index":383,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tosourcereferences(data",{"_index":388,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tree",{"_index":264,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":658,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui/cdk/state",{"_index":64,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["ui/utils/types",{"_index":531,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["undefined",{"_index":106,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":275,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"index.html":{}}}],["unknown",{"_index":621,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["url",{"_index":59,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["url.brand('iri",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":461,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["user",{"_index":21,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["usevalue",{"_index":462,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["value",{"_index":549,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":18,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["variables",{"_index":667,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":656,"title":{},"body":{"properties.html":{}}}],["whether",{"_index":534,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["wraps",{"_index":505,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":197,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.infer",{"_index":223,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{}}}],["z.number",{"_index":257,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["z.number().gte(0",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().int(count_integer_error).nonnegative(count_range_error",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().optional",{"_index":261,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":233,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.record(iri",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":237,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.string().optional",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().url",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().url().brand('url",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zero",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zod",{"_index":198,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":653,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ContactMessage.html":{"url":"interfaces/ContactMessage.html","title":"interface - ContactMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A interface contact which defines email, subject, and the message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable email which accepts the email entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable message which accepts the message entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable subject which accepts the subject entered by user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a ContactService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/contact/contact.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes a ContactMessage object as an argument and returns an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedTissue.html":{"url":"interfaces/ExtendedTissue.html","title":"interface - ExtendedTissue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtendedTissue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Extended tissue\n\n            \n\n            \n                Extends\n            \n            \n                        Tissue\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Objecy to stoe the file URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Base Id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://purl.humanatlas.io/2d-ftu/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FtuDataImplEndpoints.html":{"url":"interfaces/FtuDataImplEndpoints.html","title":"interface - FtuDataImplEndpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FtuDataImplEndpoints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.impl.ts\n        \n\n\n            \n                Description\n            \n            \n                Endpoints for Injecting input path\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            datasets\n                                        \n                                \n                                \n                                        \n                                            illustrations\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datasets:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell Source References data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        illustrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        illustrations:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell illustrations data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell Summaries data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, InjectionToken, inject } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, firstValueFrom, from, map, of } from 'rxjs';\nimport { z } from 'zod';\nimport { IRI, Iri, URL, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/** Endpoints for Injecting input path */\nexport interface FtuDataImplEndpoints {\n  /** Endpoint for File having Cell illustrations data */\n  illustrations: Url;\n  /** Endpoint for File having Cell Summaries data */\n  summaries: Url;\n  /** Endpoint for File having Cell Source References data */\n  datasets: Url;\n}\n/** Constant  to read the endpoints */\nexport const FTU_DATA_IMPL_ENDPOINTS = new InjectionToken('Endpoints');\n\n/** Input to different file formats supported */\nexport const FTU_DATA_IMPL_FILE_FORMAT_MAPPING = new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n});\n\ntype IdItem = z.infer;\ntype CellSourceItem = z.infer;\ntype Graph = { '@graph': T[] };\ntype Illustrations = z.infer;\ntype Datasets = z.infer;\ntype Cell_Summary = z.infer;\ntype IllusrationFiles = Illustrations['@graph'][number]['illustration_files'];\ntype dataSources = Datasets['@graph'][number]['data_sources'];\n\n/** Base ID Object */\nconst ID_ITEM = z.object({\n  '@id': IRI,\n});\n\n/** ILLUSTRATIONS Object reflecting the format in the file*/\nconst ILLUSTRATIONS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: URL,\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        label: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** DATASETS Object reflecting the format in the file*/\nconst DATASETS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Base CELL_SOURCE_ITEM Object  having cell_source */\nconst CELL_SOURCE_ITEM = z.object({\n  cell_source: IRI,\n});\n\n/** CELL_SUMMARIES zod Object reflecting the format in the file*/\nconst CELL_SUMMARIES = z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Creates clickable link for the tissue tree element */\nconst TISSUE_LINK = createLinkId('FTU');\n\n/** Provides Base/root url for the tissue tree */\nconst BASE_IRI = 'https://purl.humanatlas.io/2d-ftu/' as Iri;\n\n/**\n * FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FtuDataImplService extends FtuDataService {\n  /** http client to read files */\n  private readonly http = inject(HttpClient);\n\n  /** Endpoints injjector to the service */\n  private readonly endpoints = inject(FTU_DATA_IMPL_ENDPOINTS);\n  /** Endpoint injection for file formats */\n  private readonly fileFormatMapping = inject(FTU_DATA_IMPL_FILE_FORMAT_MAPPING);\n  /** Stores the last retrived Tissue Iri */\n  private cachedIri?: Iri;\n  /** Stores the last retrived data for tissue */\n  private cache = new Map>();\n\n  /**\n  Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n  @returns An Observable that emits the tissue Tree data.\n  */\n  override getTissueLibrary(): Observable {\n    return this.fetchData(undefined, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.constructTissueLibrary(data['@graph']))\n    );\n  }\n\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return this.getDataFileReferences(iri).pipe(map((data) => this.findIllustrationUrl(data)));\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).mapping),\n      map((data) => (data ? this.toIllustrationMapping(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.summaries, CELL_SUMMARIES).pipe(\n      map((data) => this.findCellSummaries(data, iri)),\n      map((data) => (data ? this.constructCellSummaries(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).illustration_files),\n      map((data) => (data ? this.toDataFileReferences(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.datasets, DATASETS).pipe(\n      map((data) => this.findGraphItem(data, iri).data_sources),\n      map((data) => (data ? this.toSourceReferences(data) : []))\n    );\n  }\n\n  /**\n   * Fetchs data after reading the file and parses with the requested schema\n   * @template T : Schema to be formated\n   * @param iri : Tissue iri\n   * @param url : File Url\n   * @param schema :  Format needed to be extracted\n   * @returns data\n   */\n  private fetchData(iri: Iri | undefined, url: Url, schema: T): Observable> {\n    const { http, cachedIri, cache } = this;\n    if (iri !== undefined && iri !== cachedIri) {\n      this.cachedIri = iri;\n      this.cache = new Map();\n    }\n    if (!cache.has(url)) {\n      const opts = { params: { id: iri ?? '' }, responseType: 'json' as const };\n      const resp = http.get(url, opts).pipe(map((data) => schema.parse(data)));\n      cache.set(url, firstValueFrom(resp));\n    }\n    return from(cache.get(url) as Promise>);\n  }\n\n  /**\n   * Finds object inside the @graph tag for the requested id element\n   * @template T\n   * @param data\n   * @param iri\n   * @returns graph item\n   */\n  private findGraphItem(data: Graph, iri: Iri): T {\n    const item = data['@graph'].find(({ '@id': id }) => id === iri);\n    if (item === undefined) {\n      console.error(`Iri not found in data: ${iri}`);\n      return {} as T;\n    }\n\n    return item;\n  }\n\n  /**\n   * Finds cell summaries from fetched Data based on cell_source field\n   * @template T\n   * @param data\n   * @param iri\n   * @returns cell summaries\n   */\n  private findCellSummaries(data: Graph, iri: Iri): T[] {\n    const item = data['@graph'].filter(({ cell_source }) => cell_source === iri);\n    if (item === undefined || item.length == 0) {\n      console.error(`Cell Summary not found in data: ${iri}`);\n      return [];\n    }\n    return item;\n  }\n\n  /**\n   * Finds illustration url and formates it to Url\n   * @param files\n   * @returns illustration url\n   */\n  private findIllustrationUrl(files: DataFileReference[]): Url {\n    const { fileFormatMapping } = this;\n    const svgFormat = fileFormatMapping['image/svg+xml'];\n    const ref = files.find(({ format }) => format === svgFormat);\n    if (ref === undefined) {\n      console.error('Illustration url not found');\n      return '' as Url;\n    }\n    return ref.url;\n  }\n\n  /**\n   * To illustration mapping for each tissue open\n   * @param mappings\n   * @returns illustration mapping\n   */\n  private toIllustrationMapping(mappings: { label: string; svg_id: string }[]): IllustrationMappingItem[] {\n    const results: IllustrationMappingItem[] = [];\n    for (const { label, svg_id } of mappings) {\n      results.push({ label, id: svg_id });\n    }\n\n    return results;\n  }\n\n  /**\n   * Formates data to array of DataFileReference format\n   * @param data\n   * @returns data file references\n   */\n  private toDataFileReferences(data: IllusrationFiles): DataFileReference[] {\n    const { fileFormatMapping: formats } = this;\n    const results: DataFileReference[] = [];\n    for (const { file, file_format } of data) {\n      if (file_format in formats) {\n        results.push({ format: formats[file_format], url: file });\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Formats data from 'dataSources' to 'SourceReferences'[] format\n   * @param data\n   * @returns source references\n   */\n  private toSourceReferences(data: dataSources): SourceReference[] {\n    const results: SourceReference[] = [];\n    for (const { label, link, description } of data) {\n      results.push({ label, link, title: description });\n    }\n    return results;\n  }\n\n  /**\n   * constructCellSummaries : Formates Cell Summary after etching the data\n   * @param data\n   * @returns\n   */\n  private constructCellSummaries(data: Cell_Summary['@graph']): CellSummary[] {\n    const cellSummary: CellSummary[] = [];\n\n    data.forEach((summaryGroup) => {\n      const cells = summaryGroup.summary.map((entry) => ({\n        id: entry.cell_id as Iri,\n        label: entry.cell_label,\n      }));\n      const biomarkers = summaryGroup.summary.map((entry) => ({\n        id: entry.gene_id as Iri,\n        label: entry.gene_label,\n      }));\n      const summaries = summaryGroup.summary.map((entry) => ({\n        cell: entry.cell_id as Iri,\n        biomarker: entry.gene_id as Iri,\n        count: entry.count,\n        percentage: entry.percentage,\n        meanExpression: entry.mean_expression,\n        dataset_count: entry.dataset_count,\n      }));\n      cellSummary.push({\n        label: summaryGroup.biomarker_type,\n        cells,\n        biomarkers,\n        summaries,\n      });\n    });\n    return cellSummary;\n  }\n\n  /**\n   * Constructs tissue library ,forming parent and child nodes\n   * @param items\n   * @returns\n   */\n  private constructTissueLibrary(items: Illustrations['@graph']): TissueLibrary {\n    const nodes: TissueLibrary['nodes'] = {};\n    for (const { '@id': id, label, organ_id, organ_label } of items) {\n      const parentId = (BASE_IRI + organ_id) as Iri;\n      nodes[parentId] ??= { id: parentId, label: organ_label, parent: BASE_IRI, children: [] };\n      nodes[id] = { id, label, parent: parentId, children: [], link: TISSUE_LINK };\n      nodes[parentId]?.children.push(id);\n    }\n    return { root: BASE_IRI, nodes };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FtuDataImplService.html":{"url":"injectables/FtuDataImplService.html","title":"injectable - FtuDataImplService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FtuDataImplService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.impl.ts\n        \n\n\n            \n                Description\n            \n            \n                FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n\n            \n\n            \n                Extends\n            \n            \n                        FtuDataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCellSummaries\n                            \n                            \n                                    \n                                getDataFileReferences\n                            \n                            \n                                    \n                                getIllustrationMapping\n                            \n                            \n                                    \n                                getIllustrationUrl\n                            \n                            \n                                    \n                                getSourceReferences\n                            \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:175\n\n                \n            \n\n\n            \n                \n                    Overrides the getCellSummaries method to return an CellSummary array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits an CellSummary array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:187\n\n                \n            \n\n\n            \n                \n                    Overrides the getDataFileReferences method to return an DataFileReference array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an DataFileReference array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:163\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an IllustrationMappingItem array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:154\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits the mock URL.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:199\n\n                \n            \n\n\n            \n                \n                    Overrides the getSourceReferences method to return an empty array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an empty array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:143\n\n                \n            \n\n\n            \n                \n                    Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits the tissue Tree data.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, InjectionToken, inject } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, firstValueFrom, from, map, of } from 'rxjs';\nimport { z } from 'zod';\nimport { IRI, Iri, URL, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/** Endpoints for Injecting input path */\nexport interface FtuDataImplEndpoints {\n  /** Endpoint for File having Cell illustrations data */\n  illustrations: Url;\n  /** Endpoint for File having Cell Summaries data */\n  summaries: Url;\n  /** Endpoint for File having Cell Source References data */\n  datasets: Url;\n}\n/** Constant  to read the endpoints */\nexport const FTU_DATA_IMPL_ENDPOINTS = new InjectionToken('Endpoints');\n\n/** Input to different file formats supported */\nexport const FTU_DATA_IMPL_FILE_FORMAT_MAPPING = new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n});\n\ntype IdItem = z.infer;\ntype CellSourceItem = z.infer;\ntype Graph = { '@graph': T[] };\ntype Illustrations = z.infer;\ntype Datasets = z.infer;\ntype Cell_Summary = z.infer;\ntype IllusrationFiles = Illustrations['@graph'][number]['illustration_files'];\ntype dataSources = Datasets['@graph'][number]['data_sources'];\n\n/** Base ID Object */\nconst ID_ITEM = z.object({\n  '@id': IRI,\n});\n\n/** ILLUSTRATIONS Object reflecting the format in the file*/\nconst ILLUSTRATIONS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: URL,\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        label: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** DATASETS Object reflecting the format in the file*/\nconst DATASETS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Base CELL_SOURCE_ITEM Object  having cell_source */\nconst CELL_SOURCE_ITEM = z.object({\n  cell_source: IRI,\n});\n\n/** CELL_SUMMARIES zod Object reflecting the format in the file*/\nconst CELL_SUMMARIES = z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Creates clickable link for the tissue tree element */\nconst TISSUE_LINK = createLinkId('FTU');\n\n/** Provides Base/root url for the tissue tree */\nconst BASE_IRI = 'https://purl.humanatlas.io/2d-ftu/' as Iri;\n\n/**\n * FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FtuDataImplService extends FtuDataService {\n  /** http client to read files */\n  private readonly http = inject(HttpClient);\n\n  /** Endpoints injjector to the service */\n  private readonly endpoints = inject(FTU_DATA_IMPL_ENDPOINTS);\n  /** Endpoint injection for file formats */\n  private readonly fileFormatMapping = inject(FTU_DATA_IMPL_FILE_FORMAT_MAPPING);\n  /** Stores the last retrived Tissue Iri */\n  private cachedIri?: Iri;\n  /** Stores the last retrived data for tissue */\n  private cache = new Map>();\n\n  /**\n  Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n  @returns An Observable that emits the tissue Tree data.\n  */\n  override getTissueLibrary(): Observable {\n    return this.fetchData(undefined, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.constructTissueLibrary(data['@graph']))\n    );\n  }\n\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return this.getDataFileReferences(iri).pipe(map((data) => this.findIllustrationUrl(data)));\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).mapping),\n      map((data) => (data ? this.toIllustrationMapping(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.summaries, CELL_SUMMARIES).pipe(\n      map((data) => this.findCellSummaries(data, iri)),\n      map((data) => (data ? this.constructCellSummaries(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).illustration_files),\n      map((data) => (data ? this.toDataFileReferences(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.datasets, DATASETS).pipe(\n      map((data) => this.findGraphItem(data, iri).data_sources),\n      map((data) => (data ? this.toSourceReferences(data) : []))\n    );\n  }\n\n  /**\n   * Fetchs data after reading the file and parses with the requested schema\n   * @template T : Schema to be formated\n   * @param iri : Tissue iri\n   * @param url : File Url\n   * @param schema :  Format needed to be extracted\n   * @returns data\n   */\n  private fetchData(iri: Iri | undefined, url: Url, schema: T): Observable> {\n    const { http, cachedIri, cache } = this;\n    if (iri !== undefined && iri !== cachedIri) {\n      this.cachedIri = iri;\n      this.cache = new Map();\n    }\n    if (!cache.has(url)) {\n      const opts = { params: { id: iri ?? '' }, responseType: 'json' as const };\n      const resp = http.get(url, opts).pipe(map((data) => schema.parse(data)));\n      cache.set(url, firstValueFrom(resp));\n    }\n    return from(cache.get(url) as Promise>);\n  }\n\n  /**\n   * Finds object inside the @graph tag for the requested id element\n   * @template T\n   * @param data\n   * @param iri\n   * @returns graph item\n   */\n  private findGraphItem(data: Graph, iri: Iri): T {\n    const item = data['@graph'].find(({ '@id': id }) => id === iri);\n    if (item === undefined) {\n      console.error(`Iri not found in data: ${iri}`);\n      return {} as T;\n    }\n\n    return item;\n  }\n\n  /**\n   * Finds cell summaries from fetched Data based on cell_source field\n   * @template T\n   * @param data\n   * @param iri\n   * @returns cell summaries\n   */\n  private findCellSummaries(data: Graph, iri: Iri): T[] {\n    const item = data['@graph'].filter(({ cell_source }) => cell_source === iri);\n    if (item === undefined || item.length == 0) {\n      console.error(`Cell Summary not found in data: ${iri}`);\n      return [];\n    }\n    return item;\n  }\n\n  /**\n   * Finds illustration url and formates it to Url\n   * @param files\n   * @returns illustration url\n   */\n  private findIllustrationUrl(files: DataFileReference[]): Url {\n    const { fileFormatMapping } = this;\n    const svgFormat = fileFormatMapping['image/svg+xml'];\n    const ref = files.find(({ format }) => format === svgFormat);\n    if (ref === undefined) {\n      console.error('Illustration url not found');\n      return '' as Url;\n    }\n    return ref.url;\n  }\n\n  /**\n   * To illustration mapping for each tissue open\n   * @param mappings\n   * @returns illustration mapping\n   */\n  private toIllustrationMapping(mappings: { label: string; svg_id: string }[]): IllustrationMappingItem[] {\n    const results: IllustrationMappingItem[] = [];\n    for (const { label, svg_id } of mappings) {\n      results.push({ label, id: svg_id });\n    }\n\n    return results;\n  }\n\n  /**\n   * Formates data to array of DataFileReference format\n   * @param data\n   * @returns data file references\n   */\n  private toDataFileReferences(data: IllusrationFiles): DataFileReference[] {\n    const { fileFormatMapping: formats } = this;\n    const results: DataFileReference[] = [];\n    for (const { file, file_format } of data) {\n      if (file_format in formats) {\n        results.push({ format: formats[file_format], url: file });\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Formats data from 'dataSources' to 'SourceReferences'[] format\n   * @param data\n   * @returns source references\n   */\n  private toSourceReferences(data: dataSources): SourceReference[] {\n    const results: SourceReference[] = [];\n    for (const { label, link, description } of data) {\n      results.push({ label, link, title: description });\n    }\n    return results;\n  }\n\n  /**\n   * constructCellSummaries : Formates Cell Summary after etching the data\n   * @param data\n   * @returns\n   */\n  private constructCellSummaries(data: Cell_Summary['@graph']): CellSummary[] {\n    const cellSummary: CellSummary[] = [];\n\n    data.forEach((summaryGroup) => {\n      const cells = summaryGroup.summary.map((entry) => ({\n        id: entry.cell_id as Iri,\n        label: entry.cell_label,\n      }));\n      const biomarkers = summaryGroup.summary.map((entry) => ({\n        id: entry.gene_id as Iri,\n        label: entry.gene_label,\n      }));\n      const summaries = summaryGroup.summary.map((entry) => ({\n        cell: entry.cell_id as Iri,\n        biomarker: entry.gene_id as Iri,\n        count: entry.count,\n        percentage: entry.percentage,\n        meanExpression: entry.mean_expression,\n        dataset_count: entry.dataset_count,\n      }));\n      cellSummary.push({\n        label: summaryGroup.biomarker_type,\n        cells,\n        biomarkers,\n        summaries,\n      });\n    });\n    return cellSummary;\n  }\n\n  /**\n   * Constructs tissue library ,forming parent and child nodes\n   * @param items\n   * @returns\n   */\n  private constructTissueLibrary(items: Illustrations['@graph']): TissueLibrary {\n    const nodes: TissueLibrary['nodes'] = {};\n    for (const { '@id': id, label, organ_id, organ_label } of items) {\n      const parentId = (BASE_IRI + organ_id) as Iri;\n      nodes[parentId] ??= { id: parentId, label: organ_label, parent: BASE_IRI, children: [] };\n      nodes[id] = { id, label, parent: parentId, children: [], link: TISSUE_LINK };\n      nodes[parentId]?.children.push(id);\n    }\n    return { root: BASE_IRI, nodes };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FtuDataService.html":{"url":"injectables/FtuDataService.html","title":"injectable - FtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading all data related to a single ftu\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getDataFileReferences\n                            \n                            \n                                    Abstract\n                                getIllustrationMapping\n                            \n                            \n                                    Abstract\n                                getIllustrationUrl\n                            \n                            \n                                    Abstract\n                                getSourceReferences\n                            \n                            \n                                    Abstract\n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable of cell summaries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:42\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of data file references\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:30\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable of IllustrationMappingItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:25\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable url\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:48\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of source references\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:19\n                \n            \n\n\n            \n                \n                    Gets tissue library\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        tissue library\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\n\n/** Service for loading all data related to a single ftu */\n@Injectable()\nexport abstract class FtuDataService {\n  /**\n   * Gets tissue library\n   * @returns tissue library\n   */\n  abstract getTissueLibrary(): Observable;\n\n  /**\n   * This method takes\n   * @param iri and @returns an observable url\n   */\n  abstract getIllustrationUrl(iri: Iri): Observable;\n  /**\n   * This method takes\n   * @param iri and @returns observable of IllustrationMappingItem\n   */\n  abstract getIllustrationMapping(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri and\n   * @returns observable of cell summaries\n   */\n  abstract getCellSummaries(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of data file references\n   */\n  abstract getDataFileReferences(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of source references\n   */\n  abstract getSourceReferences(iri: Iri): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraServiceModule.html":{"url":"modules/HraServiceModule.html","title":"module - HraServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    HraServiceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/service.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MockContactService } from './contact/contact.mock';\nimport { ContactService } from './contact/contact.service';\nimport { FTU_DATA_IMPL_ENDPOINTS, FtuDataImplService } from './ftu-data/ftu-data.impl';\nimport { FtuDataService } from './ftu-data/ftu-data.service';\nimport { MockTissueFtuService } from './tissue-ftu/tissue-ftu.mock';\nimport { TissueFtuService } from './tissue-ftu/tissue-ftu.service';\nimport { MockTissueLibraryService } from './tissue-library/tissue-library.mock';\nimport { TissueLibraryService } from './tissue-library/tissue-library.service';\n\n@NgModule({\n  providers: [\n    // TODO replace with real services\n    {\n      provide: ContactService,\n      useExisting: MockContactService,\n    },\n    {\n      provide: TissueLibraryService,\n      useExisting: MockTissueLibraryService,\n    },\n    {\n      provide: TissueFtuService,\n      useExisting: MockTissueFtuService,\n    },\n    {\n      provide: FtuDataService,\n      useExisting: FtuDataImplService,\n    },\n    {\n      provide: FTU_DATA_IMPL_ENDPOINTS,\n      useValue: {\n        illustrations: 'assets/TEMP/2d-ftu-illustrations.jsonld',\n        summaries: 'assets/TEMP/ftu-cell-summaries.jsonld',\n        datasets: 'assets/TEMP/ftu-datasets.jsonld',\n      },\n    },\n  ],\n})\nexport class HraServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockContactService.html":{"url":"injectables/MockContactService.html","title":"injectable - MockContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents mock implementation of the ContactService class.\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    It accepts an object of type ContactMessage and currently logs the message contents on the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { ContactMessage, ContactService } from './contact.service';\n\n/** This class represents mock implementation of the ContactService class. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockContactService extends ContactService {\n  /** It accepts an object of type ContactMessage and currently logs the message contents on the console. */\n  sendMessage(message: ContactMessage): Observable {\n    console.log('Message received. Content: ' + JSON.stringify(message));\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockFtuDataService.html":{"url":"injectables/MockFtuDataService.html","title":"injectable - MockFtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockFtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n\n            \n\n            \n                Extends\n            \n            \n                        FtuDataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCellSummaries\n                            \n                            \n                                    \n                                getDataFileReferences\n                            \n                            \n                                    \n                                getIllustrationMapping\n                            \n                            \n                                    \n                                getIllustrationUrl\n                            \n                            \n                                    \n                                getSourceReferences\n                            \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:125\n\n                \n            \n\n\n            \n                \n                    Overrides the getCellSummaries method to return an CellSummary array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits an CellSummary array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:133\n\n                \n            \n\n\n            \n                \n                    Overrides the getDataFileReferences method to return an DataFileReference array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an DataFileReference array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:116\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an IllustrationMappingItem array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:107\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits the mock URL.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:146\n\n                \n            \n\n\n            \n                \n                    Overrides the getSourceReferences method to return an empty array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an empty array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:99\n\n                \n            \n\n\n            \n                \n                    Overrides the getTissueLibrary method to return a mock data for the tissue tree\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        tissue library\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport { MOCK_SUMMARIES } from '../tissue-ftu/tissue-ftu.mock';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/**\n * Dummy data for Source References\n */\nconst sourceReferences = [\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n];\n\n/**\n * Dummy data extract om Mock Data of tissue mock\n */\nconst CELL_SUMMARY_DATA: CellSummary[] = Object.values(MOCK_SUMMARIES).map((summary) => ({\n  label: summary.label,\n  cells: summary.entries.map((entry) => ({\n    id: entry.cell.id as Iri,\n    label: entry.cell.label,\n  })),\n  biomarkers: summary.entries.map((entry) => ({\n    id: entry.biomarker.id as Iri,\n    label: entry.biomarker.label,\n  })),\n  summaries: summary.entries.map((entry) => ({\n    cell: entry.cell.id as Iri,\n    biomarker: entry.biomarker.id as Iri,\n    count: entry.count,\n    percentage: entry.percentage,\n    meanExpression: entry.meanExpression,\n  })),\n}));\n\n/**\nThis class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockFtuDataService extends FtuDataService {\n  /**\n   * Overrides the getTissueLibrary method to return a mock data for the tissue tree\n   * @returns tissue library\n   */\n  override getTissueLibrary(): Observable {\n    return of();\n  }\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return of(MOCK_TISSUE_DATA.nodes[iri].object.file);\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return of([]);\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return of(CELL_SUMMARY_DATA);\n  }\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return of([\n      {\n        format: 'svg',\n        url: MOCK_TISSUE_DATA.nodes[iri].object.file,\n      },\n    ]);\n  }\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return of(sourceReferences);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueFtuService.html":{"url":"injectables/MockTissueFtuService.html","title":"injectable - MockTissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of TissueFtuService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueFtuService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCellSummaries\n                            \n                            \n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \ngetCellSummaries()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:99\n\n                \n            \n\n\n            \n                \n                    Implementation of abstract method\n\n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:94\n\n                \n            \n\n\n            \n                \n                    Implementation of getReferenceOrgans method\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Any } from '@hra-ui/utils/types';\nimport { Observable, of } from 'rxjs';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport { ReferenceOrgan, TissueFtuService } from './tissue-ftu.service';\n\n/** Test whether an object is a reference organ */\nfunction isReferenceOrgan(obj: Any): obj is ReferenceOrgan {\n  return !!obj['object']['file'];\n}\n\n/** Helper for creating summary data */\nfunction createCell(\n  cid: string,\n  clabel: string,\n  bid: string,\n  blabel: string,\n  count: number,\n  percentage: number,\n  meanExpression: number,\n  metadata: { label: string; value: string }[][] = []\n) {\n  return {\n    cell: {\n      id: cid,\n      label: clabel,\n    },\n    biomarker: {\n      id: bid,\n      label: blabel,\n    },\n    count,\n    percentage,\n    meanExpression,\n    metadata,\n  };\n}\n\n/** Reference organs */\nconst MOCK_REFERENCE_ORGANS = Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan);\n\n/** Mock summary data */\nexport const MOCK_SUMMARIES = {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 1.0, 1.0, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2, 0.3),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2, 0.3),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3, 0.5),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1, 0.3),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1, 1.0),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4, 0.3),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2, 0.1),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7, 0.3),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4, 0.3),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5, 0.3),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1, 0.7),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1, 0.4),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1, 0.9),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1, 0.9)],\n  },\n  summary3: {\n    label: 'Summary 3',\n    entries: [],\n  },\n};\n\n/** Implementation of TissueFtuService */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueFtuService extends TissueFtuService {\n  /** Implementation of getReferenceOrgans method */\n  getReferenceOrgans(): Observable {\n    return of(MOCK_REFERENCE_ORGANS);\n  }\n\n  /** Implementation of abstract method */\n  getCellSummaries(): Observable {\n    return of(MOCK_SUMMARIES);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueLibraryService.html":{"url":"injectables/MockTissueLibraryService.html","title":"injectable - MockTissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock implementation of TissueLibraryService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueLibraryService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueLibraryService\n\n                \n            \n            \n                \n                        Defined in         TissueLibraryService:162\n\n                \n            \n\n\n            \n                \n                    Implementation of TissueLibraryService.getTissueLibrary\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://purl.humanatlas.io/2d-ftu/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueFtuService.html":{"url":"injectables/TissueFtuService.html","title":"injectable - TissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract Service to fetch reference organs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(id)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:22\n                \n            \n\n\n            \n                \n                    Get summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:19\n                \n            \n\n\n            \n                \n                    abstract Method to fetch reference organs\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\nexport type ReferenceOrgan = z.infer;\n\n/** Reference organ type */\nexport const REFERENCE_ORGAN = z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n});\n\n/** Abstract Service to fetch reference organs */\n@Injectable()\nexport abstract class TissueFtuService {\n  /** abstract Method to fetch reference organs */\n  abstract getReferenceOrgans(): Observable;\n\n  /** Get summary data */\n  abstract getCellSummaries(id: unknown): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryService.html":{"url":"injectables/TissueLibraryService.html","title":"injectable - TissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading the tissue library\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.service.ts:9\n                \n            \n\n\n            \n                \n                    Loads the entire tissue library\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TissueLibrary } from './tissue-library.model';\n\n/** Service for loading the tissue library */\n@Injectable()\nexport abstract class TissueLibraryService {\n  /** Loads the entire tissue library */\n  abstract getTissueLibrary(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createCell   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            createNodeId   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            defineNode   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            isReferenceOrgan   (src/.../tissue-ftu.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCell\n                        \n                    \n                \n            \n            \n                \ncreateCell(cid: string, clabel: string, bid: string, blabel: string, count: number, percentage: number, meanExpression: number, metadata)\n                \n            \n\n\n\n\n            \n                \n                    Helper for creating summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    cid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    clabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    blabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    meanExpression\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    metadata\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReferenceOrgan\n                        \n                    \n                \n            \n            \n                \nisReferenceOrgan(obj: Any)\n                \n            \n\n\n\n\n            \n                \n                    Test whether an object is a reference organ\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                Any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReferenceOrgan\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createNodeId\n                        \n                    \n                \n            \n            \n                \ncreateNodeId(label: string, parent: string)\n                \n            \n\n\n\n\n            \n                \n                    Create a new id from a label\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defineNode\n                        \n                    \n                \n            \n            \n                \ndefineNode(label: string, parent: string, url?: string, ...children: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Create a new node\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    children\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nservices\nThis library was generated with Nx.\nRunning unit tests\nRun nx test services to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraServiceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Biomarker   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Cell   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Cell_Summary   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CellSourceItem   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CellSummary   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CellSummaryRow   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DataFileReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Datasets   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            dataSources   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            Graph   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IdItem   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IllusrationFiles   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IllustrationMappingItem   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Illustrations   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            Iri   (src/.../common.model.ts)\n                        \n                        \n                            ReferenceOrgan   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SourceReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Tissue   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Tissue   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibrary   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TissueLibrary   (src/.../tissue-library.model.ts)\n                        \n                        \n                            Url   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n    \n        \n            \n                \n                    \n                    Biomarker\n                \n            \n            \n                \n                    Type for a Biomarker\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Cell\n                \n            \n            \n                \n                    Type for a cell\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummary\n                \n            \n            \n                \n                    Type for a CellSummary\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryRow\n                \n            \n            \n                \n                    Type for a CellSummaryRow\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataFileReference\n                \n            \n            \n                \n                    Type for a DataFileReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IllustrationMappingItem\n                \n            \n            \n                \n                    Type for a IllustrationMappingItem\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceReference\n                \n            \n            \n                \n                    Type for a SourceReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tissue\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibrary\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/ftu-data/ftu-data.impl.ts\n    \n    \n        \n            \n                \n                    \n                    Cell_Summary\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSourceItem\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Datasets\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    dataSources\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Graph\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IdItem\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IllusrationFiles\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Illustrations\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/shared/common.model.ts\n    \n    \n        \n            \n                \n                    \n                    Iri\n                \n            \n            \n                \n                    Same as an Url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Url\n                \n            \n            \n                \n                    Any url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReferenceOrgan\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    Tissue\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibrary\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ID   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            BASE_IRI   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            BIOMARKER   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SOURCE_ITEM   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CELL_SUMMARIES   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CELL_SUMMARY   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SUMMARY_DATA   (src/.../ftu-data.mock.ts)\n                        \n                        \n                            CELL_SUMMARY_ROW   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_INTEGER_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DATA_FILE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DATASETS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            FTU_DATA_IMPL_ENDPOINTS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            FTU_DATA_IMPL_FILE_FORMAT_MAPPING   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            ID_ITEM   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            ILLUSTRATION_MAPPING_ITEM   (src/.../ftu-data.model.ts)\n                        \n                        \n                            ILLUSTRATIONS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IRI   (src/.../common.model.ts)\n                        \n                        \n                            MOCK_REFERENCE_ORGANS   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_SUMMARIES   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_TISSUE_DATA   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            PERCENTAGE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            PERCENTAGE_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            REFERENCE_ORGAN   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SOURCE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            sourceReferences   (src/.../ftu-data.mock.ts)\n                        \n                        \n                            TISSUE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TISSUE   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TISSUE_LIBRARY   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TISSUE_LIBRARY   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TISSUE_LINK   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            URL   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://purl.humanatlas.io/2d-ftu/'\n                    \n                \n\n            \n                \n                    Base node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_TISSUE_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n}\n                    \n                \n\n            \n                \n                    Mock tissue data\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.impl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 'https://purl.humanatlas.io/2d-ftu/' as Iri\n                    \n                \n\n            \n                \n                    Provides Base/root url for the tissue tree\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SOURCE_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell_source: IRI,\n})\n                    \n                \n\n            \n                \n                    Base CELL_SOURCE_ITEM Object  having cell_source\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    CELL_SUMMARIES zod Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATASETS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    DATASETS Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FTU_DATA_IMPL_ENDPOINTS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Endpoints')\n                    \n                \n\n            \n                \n                    Constant  to read the endpoints\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FTU_DATA_IMPL_FILE_FORMAT_MAPPING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n})\n                    \n                \n\n            \n                \n                    Input to different file formats supported\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@id': IRI,\n})\n                    \n                \n\n            \n                \n                    Base ID Object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ILLUSTRATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: URL,\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        label: z.string(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    ILLUSTRATIONS Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LINK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('FTU')\n                    \n                \n\n            \n                \n                    Creates clickable link for the tissue tree element\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BIOMARKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a BIOMARKER\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a cell object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  cells: CELL.array(),\n  biomarkers: BIOMARKER.array(),\n  summaries: CELL_SUMMARY_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell: IRI,\n  biomarker: IRI,\n  count: COUNT,\n  percentage: PERCENTAGE,\n  meanExpression: PERCENTAGE,\n  dataset_count: COUNT.optional(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY_ROW\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().int(COUNT_INTEGER_ERROR).nonnegative(COUNT_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A integer greater than or equal to zero\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_INTEGER_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be an integer'\n                    \n                \n\n            \n                \n                    Error message for non integer counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be greater than or equal to 0'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_FILE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  format: z.string(),\n  url: URL,\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a DATA_FILE_REFERENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ILLUSTRATION_MAPPING_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: z.string(),\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a ILLUSTRATION_MAPPING_ITEM\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().gte(0, PERCENTAGE_RANGE_ERROR).lte(1, PERCENTAGE_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A number between 0 and 1 inclusive\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Percentage must be between 0 and 1 (inclusive)'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SOURCE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  title: z.string(),\n  label: z.string(),\n  link: z.string().url(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a SOURCE_REFERENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n  parent: IRI,\n  children: IRI.array().default([]),\n  link: z.string().optional(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a tissue object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LIBRARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a tissue library object\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CellSummary[]\n\n                    \n                \n                \n                    \n                        Default value : Object.values(MOCK_SUMMARIES).map((summary) => ({\n  label: summary.label,\n  cells: summary.entries.map((entry) => ({\n    id: entry.cell.id as Iri,\n    label: entry.cell.label,\n  })),\n  biomarkers: summary.entries.map((entry) => ({\n    id: entry.biomarker.id as Iri,\n    label: entry.biomarker.label,\n  })),\n  summaries: summary.entries.map((entry) => ({\n    cell: entry.cell.id as Iri,\n    biomarker: entry.biomarker.id as Iri,\n    count: entry.count,\n    percentage: entry.percentage,\n    meanExpression: entry.meanExpression,\n  })),\n}))\n                    \n                \n\n            \n                \n                    Dummy data extract om Mock Data of tissue mock\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceReferences\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n]\n                    \n                \n\n            \n                \n                    Dummy data for Source References\n\n                \n            \n\n        \n    \n\n    src/lib/shared/common.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : URL.brand('IRI')\n                    \n                \n\n            \n                \n                    Same as an URL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.string().url().brand('URL')\n                    \n                \n\n            \n                \n                    Any url\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MOCK_REFERENCE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan)\n                    \n                \n\n            \n                \n                    Reference organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_SUMMARIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 1.0, 1.0, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2, 0.3),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2, 0.3),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3, 0.5),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1, 0.3),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1, 1.0),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4, 0.3),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2, 0.1),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7, 0.3),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4, 0.3),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5, 0.3),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1, 0.7),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1, 0.4),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1, 0.9),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1, 0.9)],\n  },\n  summary3: {\n    label: 'Summary 3',\n    entries: [],\n  },\n}\n                    \n                \n\n            \n                \n                    Mock summary data\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFERENCE_ORGAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n})\n                    \n                \n\n            \n                \n                    Reference organ type\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-library/tissue-library.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TISSUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n  parent: IRI,\n  children: IRI.array().default([]),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LIBRARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue Library\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
