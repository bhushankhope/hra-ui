var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ContactMessage.html",[0,1.19,1,1.58]],["body/interfaces/ContactMessage.html",[0,1.901,1,2.678,2,2.016,3,0.64,4,0.64,5,0.544,6,2.405,7,0.745,8,3.153,9,3.153,10,4.196,11,4.196,12,3.01,13,0.372,14,2.262,15,1.961,16,0.936,17,0.054,18,3.977,19,3.334,20,3.977,21,3.977,22,0.839,23,0.118,24,0.544,25,1.09,26,0.745,27,0.839,28,1.901,29,0.839,30,2.405,31,1.958,32,1.3,33,2.016,34,0.861,35,2.405,36,0.745,37,2.016,38,0.038,39,0.038]],["title/injectables/ContactService.html",[23,0.083,31,1.367]],["body/injectables/ContactService.html",[0,1.746,1,2.882,3,0.664,4,0.664,5,0.564,6,2.496,7,0.773,8,2.496,9,2.496,10,3.786,11,3.786,12,2.813,13,0.386,15,1.689,16,0.664,17,0.054,18,3.581,19,3.001,20,3.581,21,3.581,22,0.859,23,0.121,24,0.564,25,1.215,26,0.773,27,0.859,28,2.171,29,0.953,30,3.23,31,2.351,32,1.746,33,2.707,34,1.156,35,3.23,36,1.11,37,2.707,38,0.039,39,0.039,40,0.893,41,1.329,42,3.23,43,1.027,44,3.109,45,1.349,46,1.177,47,1.349]],["title/interfaces/ExtendedTissue.html",[0,1.19,48,1.846]],["body/interfaces/ExtendedTissue.html",[0,0.699,2,1.085,3,0.344,4,0.344,5,0.686,7,0.401,13,0.2,14,1.447,15,1.754,16,0.808,17,0.054,22,0.856,23,0.076,24,0.292,25,0.625,26,0.401,27,0.537,29,0.344,34,1.087,38,0.025,39,0.025,48,1.691,49,0.532,50,0.463,51,0.928,52,2.017,53,1.429,54,1.539,55,2.178,56,2.513,57,2.017,58,2.017,59,1.639,60,2.078,61,2.009,62,1.294,63,1.085,64,1.294,65,1.539,66,1.085,67,1.447,68,1.085,69,1.09,70,0.928,71,1.691,72,1.691,73,1.738,74,1.691,75,1.691,76,1.738,77,1.539,78,1.294,79,1.294,80,1.294,81,2.009,82,2.178,83,1.447,84,1.447,85,2.178,86,2.017,87,1.294,88,2.017,89,1.294,90,2.017,91,1.294,92,1.294,93,2.078,94,1.294,95,1.294,96,3.059,97,1.085,98,1.09,99,0.532,100,0.803,101,1.09,102,1.085,103,1.085,104,2.992,105,2.492,106,1.691,107,2.347,108,2.696,109,2.078,110,3.383,111,3.383,112,3.383,113,2.182,114,2.078,115,1.691,116,1.085,117,1.085,118,2.347,119,1.691,120,2.544,121,2.347,122,2.347,123,1.691,124,2.347,125,1.085,126,1.085,127,1.691,128,1.085,129,1.691,130,2.078,131,1.691,132,1.085,133,1.085,134,1.691,135,1.691,136,1.085,137,1.085,138,1.085,139,1.691,140,1.691,141,1.085,142,1.085,143,1.085,144,2.347,145,1.085,146,1.085,147,1.085,148,1.085,149,1.691,150,1.691,151,1.691,152,1.691,153,2.078,154,1.691,155,1.085,156,1.085,157,1.691,158,1.085,159,1.085,160,1.085,161,2.078,162,1.691,163,1.691,164,1.085,165,2.078,166,1.691,167,1.085,168,2.078,169,1.252,170,0.803,171,0.928,172,1.294,173,1.085,174,1.085,175,1.294]],["title/injectables/FtuDataService.html",[23,0.083,176,1.58]],["body/injectables/FtuDataService.html",[3,0.497,4,0.821,5,0.697,7,1.041,13,0.289,16,0.944,17,0.054,22,0.894,23,0.099,24,0.422,25,1.306,26,0.579,27,0.497,28,2.267,29,0.497,32,1.816,33,2.816,36,1.238,38,0.032,39,0.032,40,0.669,41,1.092,43,1.46,45,1.917,46,1.673,47,1.917,59,1.455,69,2.342,70,1.341,99,1.382,113,1.668,176,1.904,177,2.644,178,2.288,179,2.328,180,2.224,181,2.654,182,3.306,183,3.306,184,1.904,185,2.654,186,2.654,187,2.654,188,2.654,189,2.654,190,2.328,191,4.591,192,1.904,193,2.654,194,2.654,195,2.328,196,4.184,197,4.184,198,2.654,199,2.328,200,2.586,201,2.654,202,2.328,203,2.654,204,2.328,205,1.567,206,1.567,207,1.567,208,1.869,209,3.548]],["title/modules/HraServiceModule.html",[210,2.202,211,1.846]],["body/modules/HraServiceModule.html",[3,0.692,4,0.692,5,0.588,17,0.054,22,1.123,24,0.588,27,0.692,29,0.692,31,2.058,38,0.04,39,0.04,50,1.187,53,1.582,65,2.058,66,2.179,113,1.792,171,2.378,176,2.378,178,2.058,211,2.779,212,2.179,213,3.238,214,4.129,215,2.779,216,3.238,217,3.238,218,2.179,219,2.378,220,1.792,221,2.599,222,2.779,223,3.238,224,2.599,225,2.779,226,3.238,227,3.238,228,3.238,229,3.238,230,3.238,231,2.599,232,3.844,233,4.789]],["title/injectables/MockContactService.html",[23,0.083,215,1.846]],["body/injectables/MockContactService.html",[1,2.905,3,0.685,4,0.685,5,0.582,7,0.798,12,2.606,13,0.398,16,0.967,17,0.054,19,2.761,22,0.967,23,0.124,24,0.582,25,1.126,26,0.798,27,0.685,29,1.054,31,2.514,34,1.179,36,0.798,37,2.761,38,0.04,39,0.04,40,0.922,41,1.356,42,3.295,43,1.059,45,1.391,46,1.214,47,1.391,54,2.045,77,1.598,98,1.781,101,1.391,169,2.045,170,1.598,215,2.761,234,3.207,235,3.295,236,1.847,237,3.207,238,4.104,239,4.104,240,4.104,241,4.104,242,3.295,243,3.207,244,3.207,245,3.207,246,3.207,247,3.207]],["title/injectables/MockFtuDataService.html",[23,0.083,225,1.846]],["body/injectables/MockFtuDataService.html",[3,0.41,4,0.41,5,0.348,7,1.067,13,0.238,16,0.874,17,0.054,22,0.917,23,0.086,24,0.348,25,1.296,26,0.478,27,0.41,29,0.95,32,2.066,36,1.184,38,0.028,39,0.028,40,0.552,41,1.262,43,1.351,45,1.774,46,1.548,47,1.774,50,0.552,53,0.634,54,1.432,59,1.625,69,2.351,70,1.106,76,1.432,77,2.511,98,1.984,99,0.949,100,0.957,101,0.833,113,1.246,169,1.432,170,0.957,173,2.752,176,2.742,177,1.106,178,0.957,184,2.2,185,3.066,186,3.066,187,3.066,188,3.066,189,2.306,194,2.306,198,2.306,200,2.752,201,2.306,203,2.306,205,2.752,206,2.752,207,1.292,208,1.541,209,3.283,218,1.292,224,1.541,225,1.933,232,2.306,235,2.306,236,2.355,242,3.066,248,1.92,249,4.896,250,2.872,251,2.872,252,1.92,253,5.074,254,4.762,255,4.762,256,1.92,257,1.92,258,1.92,259,2.872,260,1.92,261,1.92,262,1.541,263,1.92,264,1.92]],["title/injectables/MockTissueFtuService.html",[23,0.083,222,1.846]],["body/injectables/MockTissueFtuService.html",[3,0.384,4,0.384,5,0.326,7,0.447,13,0.223,15,1.585,17,0.054,22,0.849,23,0.082,24,0.326,25,0.989,26,0.447,27,0.384,28,1.186,29,0.384,32,1.603,34,0.517,36,0.68,38,0.027,39,0.027,40,0.517,41,0.903,43,0.903,49,0.594,50,0.517,53,0.903,54,1.362,61,1.186,63,1.21,73,2.234,74,1.839,77,1.841,85,1.574,98,0.78,99,1.313,100,0.896,101,0.78,169,2.086,170,0.896,184,2.128,192,3.02,218,1.21,219,2.505,220,0.78,221,1.443,222,1.839,236,1.574,265,1.21,266,3.36,267,1.798,268,1.798,269,1.798,270,1.574,271,1.21,272,1.443,273,1.574,274,1.035,275,1.443,276,1.443,277,1.798,278,1.443,279,1.443,280,2.128,281,1.443,282,2.194,283,2.194,284,2.194,285,2.194,286,1.839,287,1.839,288,1.839,289,2.674,290,2.927,291,3.528,292,1.21,293,1.443,294,1.443,295,1.443,296,1.443,297,3.32,298,2.194,299,2.655,300,3.599,301,2.194,302,2.966,303,3.203,304,3.599,305,2.194,306,2.966,307,2.966,308,3.36,309,3.19,310,1.443,311,2.194,312,2.655,313,2.655,314,3.599,315,1.443,316,2.194,317,1.443,318,1.443,319,1.443,320,2.655,321,1.443,322,2.194,323,1.443,324,2.655,325,2.966,326,1.443,327,1.443,328,1.443,329,2.194,330,2.225,331,1.443,332,1.443,333,1.443,334,1.443,335,1.443,336,1.443,337,1.443,338,1.443,339,1.443,340,1.443,341,1.443,342,3.36,343,3.19,344,3.19,345,1.443,346,1.443,347,1.443,348,1.443,349,1.443,350,1.443,351,1.443,352,1.798,353,1.798]],["title/injectables/MockTissueLibraryService.html",[23,0.083,171,1.58]],["body/injectables/MockTissueLibraryService.html",[0,0.707,3,0.348,4,0.348,5,0.637,7,0.405,13,0.202,15,1.689,16,0.348,17,0.054,22,0.86,23,0.076,24,0.296,25,0.774,26,0.405,27,0.541,29,0.348,34,0.728,36,0.405,38,0.025,39,0.025,40,0.468,41,0.837,43,0.538,48,1.097,49,0.538,50,0.468,51,0.939,52,1.308,53,1.329,54,1.55,55,1.46,57,1.308,58,1.308,59,1.591,60,1.706,61,1.979,62,1.308,63,1.097,64,1.308,65,2.006,66,1.097,67,1.46,68,1.097,69,1.1,70,0.939,71,1.706,72,1.706,73,1.749,74,1.706,75,1.706,76,1.749,77,1.55,78,1.308,79,1.308,80,1.308,81,2.021,82,2.189,83,1.46,84,1.46,85,2.189,86,2.035,87,1.308,88,2.035,89,1.308,90,2.035,91,1.308,92,1.308,93,2.093,94,1.308,95,1.308,96,3.068,97,1.097,98,1.35,99,0.538,100,0.812,101,1.1,102,1.097,103,1.097,104,3.002,105,2.501,106,1.706,107,2.361,108,2.708,109,2.093,110,3.389,111,3.389,112,3.389,113,2.185,114,2.093,115,1.706,116,1.097,117,1.097,118,2.361,119,1.706,120,2.558,121,2.361,122,2.361,123,1.706,124,2.361,125,1.097,126,1.097,127,1.706,128,1.097,129,1.706,130,2.093,131,1.706,132,1.097,133,1.097,134,1.706,135,1.706,136,1.097,137,1.097,138,1.097,139,1.706,140,1.706,141,1.097,142,1.097,143,1.097,144,2.361,145,1.097,146,1.097,147,1.097,148,1.097,149,1.706,150,1.706,151,1.706,152,1.706,153,2.093,154,1.706,155,1.097,156,1.097,157,1.706,158,1.097,159,1.097,160,1.097,161,2.093,162,1.706,163,1.706,164,1.097,165,2.093,166,1.706,167,1.097,168,2.093,169,1.749,170,0.812,171,1.46,172,2.035,173,1.097,174,2.361,175,1.308,236,0.939,354,1.63]],["title/injectables/TissueFtuService.html",[23,0.083,219,1.58]],["body/injectables/TissueFtuService.html",[3,0.656,4,0.656,5,0.724,7,0.764,13,0.381,16,0.853,17,0.054,22,0.948,23,0.12,24,0.558,25,1.211,26,0.764,27,0.948,28,2.294,29,0.656,32,1.732,34,0.883,36,0.993,38,0.039,39,0.039,40,0.883,41,1.319,43,1.319,45,1.333,46,1.164,47,1.333,49,1.465,55,1.77,61,1.333,85,1.77,99,1.319,180,2.687,184,2.299,219,2.299,220,1.924,266,3.769,270,1.77,273,2.803,274,1.77,280,2.299,292,3.16,355,2.068,356,4.695,357,3.993,358,3.073,359,3.073,360,3.073,361,2.467,362,2.467,363,2.467,364,3.205,365,3.205,366,3.073]],["title/injectables/TissueLibraryService.html",[23,0.083,65,1.367]],["body/injectables/TissueLibraryService.html",[3,0.748,4,0.748,5,0.636,7,0.871,13,0.435,17,0.053,22,1.007,23,0.131,24,0.636,25,1.173,26,0.871,27,0.748,28,2.138,29,0.748,36,0.871,38,0.042,39,0.042,40,1.007,41,1.433,43,1.157,49,1.433,50,1.247,53,1.673,65,2.163,67,2.017,68,2.357,174,3.315,180,2.92,181,3.483,367,3.503,368,3.315,369,3.503,370,4.339,371,4.339]],["title/dependencies.html",[372,1.855,373,2.213]],["body/dependencies.html",[17,0.052,24,0.751,38,0.047,39,0.047,373,3.226,374,4.137,375,4.137,376,4.137,377,4.137,378,4.794]],["title/miscellaneous/functions.html",[379,1.003,380,2.64]],["body/miscellaneous/functions.html",[13,0.38,15,2.064,16,1.001,17,0.051,34,0.879,36,1.101,38,0.039,39,0.039,45,2.034,46,1.775,47,2.034,49,1.315,50,0.879,51,2.548,59,1.507,61,1.327,71,2.679,72,2.679,73,2.206,75,2.058,76,2.336,81,1.761,82,2.292,83,2.292,84,1.761,99,1.01,105,1.761,220,1.327,265,2.978,270,1.761,271,2.058,272,2.455,273,1.761,274,1.761,275,2.455,276,2.455,278,2.455,279,2.455,280,1.761,281,3.196,282,2.455,283,3.196,284,3.196,285,3.196,286,2.679,287,3.154,288,2.679,289,2.679,290,2.058,379,1.327,380,2.455,381,3.154,382,3.981,383,3.981,384,3.059,385,2.455,386,3.059,387,3.059]],["title/index.html",[13,0.287,388,2.311,389,2.311]],["body/index.html",[17,0.047,38,0.047,39,0.047,231,3.835,271,2.767,368,2.767,390,4.112,391,4.777,392,4.112,393,4.777,394,4.777,395,4.112,396,4.112]],["title/modules.html",[212,2.492]],["body/modules.html",[17,0.047,38,0.047,39,0.047,211,2.846,212,2.846,397,4.23,398,4.23,399,4.23]],["title/overview.html",[400,2.973]],["body/overview.html",[2,2.775,17,0.047,38,0.047,39,0.047,40,1.185,210,3.311,297,2.775,303,2.775,330,2.775,373,3.22,400,3.311,401,4.785,402,4.124,403,4.124]],["title/properties.html",[14,1.894,372,1.855]],["body/properties.html",[14,2.444,17,0.05,38,0.048,39,0.048,404,4.243,405,4.243]],["title/miscellaneous/typealiases.html",[379,1.003,406,3.288]],["body/miscellaneous/typealiases.html",[13,0.41,16,1.135,17,0.041,38,0.041,39,0.041,49,1.381,50,0.949,53,1.593,59,1.827,67,2.408,69,1.814,177,1.902,178,1.646,192,2.643,200,3.088,205,3.088,206,3.088,207,3.088,220,1.433,270,2.408,291,3.088,355,2.814,362,4.314,379,1.433,381,3.088,407,3.302,408,4.145,409,4.194,410,4.589,411,3.357,412,3.684,413,2.651,414,2.651]],["title/miscellaneous/variables.html",[379,1.003,415,2.64]],["body/miscellaneous/variables.html",[5,0.207,12,1.405,13,0.141,15,1.078,16,0.774,17,0.054,34,0.982,38,0.019,39,0.019,46,0.431,49,0.941,50,0.545,51,1.405,53,1.129,55,0.656,59,1.294,60,0.766,61,1.235,69,1.765,73,2.082,76,0.567,81,0.656,82,1.64,83,0.656,84,0.656,93,0.766,96,2.811,97,0.766,98,0.823,99,1.045,100,0.946,101,0.823,102,1.277,103,0.766,104,2.654,105,2.187,106,1.277,107,1.916,108,2.299,109,1.642,110,3.167,111,3.167,112,3.167,113,2.042,114,1.642,115,1.277,116,0.766,117,0.766,118,1.916,119,1.277,120,2.129,121,1.916,122,1.916,123,1.277,124,1.916,125,0.766,126,0.766,127,1.277,128,0.766,129,1.277,130,1.642,131,1.277,132,0.766,133,0.766,134,1.277,135,1.277,136,0.766,137,0.766,138,0.766,139,1.277,140,1.277,141,0.766,142,0.766,143,0.766,144,1.916,145,0.766,146,0.766,147,0.766,148,0.766,149,1.277,150,1.277,151,1.277,152,1.277,153,1.642,154,1.277,155,0.766,156,0.766,157,1.277,158,0.766,159,0.766,160,0.766,161,1.642,162,1.277,163,1.277,164,0.766,165,1.642,166,1.277,167,0.766,168,1.642,177,0.656,178,0.567,192,2.871,193,0.914,220,0.823,262,0.914,265,1.642,273,1.093,274,0.656,280,1.405,286,2.299,287,0.766,288,2.129,289,1.642,290,3.339,291,3.355,292,0.766,293,1.524,294,0.914,295,1.524,296,0.914,297,3.067,298,1.524,299,1.959,300,3.048,301,1.524,302,2.286,303,2.811,304,3.048,305,1.524,306,2.286,307,2.286,308,2.743,309,2.54,310,0.914,311,1.524,312,1.959,313,1.959,314,3.048,315,0.914,316,1.524,317,0.914,318,0.914,319,0.914,320,1.959,321,0.914,322,1.524,323,0.914,324,1.959,325,2.286,326,0.914,327,0.914,328,0.914,329,1.524,330,1.642,331,0.914,332,0.914,333,0.914,334,0.914,335,0.914,336,0.914,337,0.914,338,0.914,339,0.914,340,0.914,341,0.914,342,2.743,343,2.54,344,2.54,345,0.914,346,0.914,347,0.914,348,0.914,349,0.914,350,0.914,351,0.914,355,1.277,361,3.166,363,1.524,364,3.354,365,3.266,368,0.766,379,0.494,381,2.439,385,3.842,408,3.43,409,3.497,411,1.524,412,1.959,413,0.914,414,0.914,415,0.914,416,2.44,417,2.44,418,1.898,419,1.898,420,2.44,421,2.44,422,2.44,423,2.44,424,1.898,425,3.944,426,1.138,427,1.138,428,1.138,429,1.138,430,1.138,431,1.138,432,2.44,433,1.898,434,1.898,435,1.138,436,2.44,437,1.138,438,2.44,439,2.44,440,1.898,441,1.138,442,1.138,443,1.898,444,1.898,445,1.138,446,1.138,447,1.138,448,1.138,449,1.138]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":405,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":314,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.2",{"_index":307,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.3",{"_index":313,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.4",{"_index":320,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":302,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.7",{"_index":328,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":297,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":301,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["101",{"_index":323,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":312,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":341,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["124",{"_index":331,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":344,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":310,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15.1.0",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":303,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":351,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["2000",{"_index":317,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["21",{"_index":335,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["230",{"_index":326,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["244",{"_index":332,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":304,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["332",{"_index":319,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":316,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["45",{"_index":342,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":306,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["57",{"_index":339,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":322,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["601",{"_index":327,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["675",{"_index":337,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":325,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["8",{"_index":330,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":334,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":80,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["abstract",{"_index":28,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["acc",{"_index":88,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["accepts",{"_index":19,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["acinus",{"_index":151,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["acinus.svg",{"_index":152,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":407,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alveolus",{"_index":132,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["alveolus.svg",{"_index":133,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{}}}],["argument",{"_index":35,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["array",{"_index":253,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ascending",{"_index":118,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":398,"title":{},"body":{"modules.html":{}}}],["base",{"_index":60,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base_id",{"_index":96,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bid",{"_index":284,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["biomarker",{"_index":291,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["biomarker.array",{"_index":429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biomarker1",{"_index":300,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker2",{"_index":308,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker3",{"_index":309,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker4",{"_index":345,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker5",{"_index":346,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker6",{"_index":347,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker7",{"_index":348,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker8",{"_index":349,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarkers",{"_index":428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blabel",{"_index":285,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["bronchial",{"_index":134,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":399,"title":{},"body":{"modules.html":{}}}],["cell",{"_index":192,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell.array",{"_index":427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_summary",{"_index":416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_summary_row",{"_index":417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_summary_row.array",{"_index":430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cells",{"_index":426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cellsummary",{"_index":205,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummaryrow",{"_index":410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["childlabel",{"_index":89,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childnodes",{"_index":86,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["children",{"_index":83,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["children.reduce",{"_index":87,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childurl",{"_index":90,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["cid",{"_index":282,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["clabel",{"_index":283,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["class",{"_index":29,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["collecting",{"_index":120,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["collectiong",{"_index":128,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["console",{"_index":241,"title":{},"body":{"injectables/MockContactService.html":{}}}],["console.log('message",{"_index":244,"title":{},"body":{"injectables/MockContactService.html":{}}}],["const",{"_index":85,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{}}}],["contact",{"_index":8,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":243,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contact/contact.mock",{"_index":216,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contact/contact.service",{"_index":217,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contactmessage",{"_index":1,"title":{"interfaces/ContactMessage.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["contactservice",{"_index":31,"title":{"injectables/ContactService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["contactservice:11",{"_index":237,"title":{},"body":{"injectables/MockContactService.html":{}}}],["content",{"_index":246,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contents",{"_index":240,"title":{},"body":{"injectables/MockContactService.html":{}}}],["corpuscle",{"_index":116,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["corpuscle.svg",{"_index":117,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["cortical",{"_index":119,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":286,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["count_integer_error",{"_index":418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count_range_error",{"_index":419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["counts",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":71,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["createcell",{"_index":281,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["createcell('cell1",{"_index":299,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell10",{"_index":336,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell11",{"_index":338,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell12",{"_index":340,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell13",{"_index":343,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell2",{"_index":305,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell3",{"_index":311,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell4",{"_index":315,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell5",{"_index":318,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell6",{"_index":321,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell7",{"_index":324,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell8",{"_index":329,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell9",{"_index":333,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell(cid",{"_index":384,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid",{"_index":62,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["createlinkid('ftu",{"_index":94,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["createnodeid",{"_index":382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnodeid(label",{"_index":75,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":279,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["crypt",{"_index":140,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":238,"title":{},"body":{"injectables/MockContactService.html":{}}}],["data",{"_index":99,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data.mock",{"_index":226,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["data.mock.ts",{"_index":248,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["data.model",{"_index":208,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["data.model.ts",{"_index":409,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.service",{"_index":224,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["data.service.ts",{"_index":179,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:13",{"_index":202,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:18",{"_index":199,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:24",{"_index":190,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:30",{"_index":195,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:36",{"_index":204,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data/ftu",{"_index":178,"title":{},"body":{"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data_file_reference",{"_index":420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datafilereference",{"_index":206,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["default",{"_index":385,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":43,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["definenode",{"_index":82,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["definenode('large",{"_index":138,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('liver",{"_index":160,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('prostate",{"_index":164,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('thymus",{"_index":167,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode(childlabel",{"_index":91,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["definenode(label",{"_index":386,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defines",{"_index":9,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["dependencies",{"_index":373,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dermal",{"_index":154,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["descending",{"_index":106,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["duct",{"_index":121,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["duct.svg",{"_index":122,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":10,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["emits",{"_index":255,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["empty",{"_index":242,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["entered",{"_index":20,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["entire",{"_index":371,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["entries",{"_index":298,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["epidermal",{"_index":157,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":396,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["extended",{"_index":52,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extendedtissue",{"_index":48,"title":{"interfaces/ExtendedTissue.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extends",{"_index":54,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["fetch",{"_index":356,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":262,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["ftu",{"_index":113,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu.mock",{"_index":223,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["ftu.mock.ts",{"_index":265,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ftu.service",{"_index":221,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["ftu.service.ts",{"_index":355,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu.service.ts:19",{"_index":359,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu.service.ts:22",{"_index":358,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu/2d",{"_index":112,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu/tissue",{"_index":220,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftudataservice",{"_index":176,"title":{"injectables/FtuDataService.html":{}},"body":{"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["ftudataservice:21",{"_index":258,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:30",{"_index":257,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:39",{"_index":252,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:47",{"_index":256,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:60",{"_index":260,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["function",{"_index":74,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["functions",{"_index":380,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":79,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["generated",{"_index":390,"title":{},"body":{"index.html":{}}}],["getcellsummaries",{"_index":184,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["getcellsummaries(id",{"_index":357,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["getcellsummaries(iri",{"_index":189,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences",{"_index":185,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences(iri",{"_index":194,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping",{"_index":186,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping(iri",{"_index":198,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl",{"_index":187,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl(iri",{"_index":201,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getreferenceorgans",{"_index":266,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["gets",{"_index":191,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["getsourcereferences",{"_index":188,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getsourcereferences(iri",{"_index":203,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getting",{"_index":388,"title":{"index.html":{}},"body":{}}],["gettissuelibrary",{"_index":174,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["given",{"_index":259,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["gland",{"_index":136,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["gland.svg",{"_index":137,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["glandular",{"_index":166,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":397,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helper",{"_index":278,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["henle",{"_index":109,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["henle.svg",{"_index":114,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["hra",{"_index":63,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["hraservicemodule",{"_index":211,"title":{"modules/HraServiceModule.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["https://example.com",{"_index":97,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":110,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":61,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["illustration",{"_index":254,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["illustration_mapping_item",{"_index":421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":200,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["implementation",{"_index":169,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inclusive",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inherited",{"_index":236,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["injectable",{"_index":23,"title":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["injectables",{"_index":40,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"overview.html":{}}}],["inner",{"_index":123,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["integer",{"_index":432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercalated",{"_index":149,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"overview.html":{}}}],["intestine",{"_index":139,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri",{"_index":69,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iri.array().default",{"_index":448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islates",{"_index":145,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["islets",{"_index":147,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["isreferenceorgan",{"_index":383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isreferenceorgan(obj",{"_index":275,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["json.stringify(message",{"_index":247,"title":{},"body":{"injectables/MockContactService.html":{}}}],["kidney",{"_index":104,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":73,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["langerhans",{"_index":146,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["langerhans.svg",{"_index":148,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":142,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":368,"title":{},"body":{"injectables/TissueLibraryService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["library.mock",{"_index":218,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{}}}],["library.mock.ts",{"_index":51,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["library.model",{"_index":68,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["library.model.ts",{"_index":412,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["library.service",{"_index":66,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["library.service.ts",{"_index":367,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library.service.ts:9",{"_index":369,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library/tissue",{"_index":50,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn",{"_index":141,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn.svg",{"_index":143,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":93,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":56,"title":{},"body":{"interfaces/ExtendedTissue.html":{}}}],["liver",{"_index":161,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":181,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/TissueLibraryService.html":{}}}],["loads",{"_index":370,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["lobule",{"_index":162,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lobule.svg",{"_index":163,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":239,"title":{},"body":{"injectables/MockContactService.html":{}}}],["loop",{"_index":108,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lung",{"_index":130,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":39,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medullary",{"_index":124,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":12,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":289,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":32,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["methods",{"_index":41,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["miscellaneous",{"_index":379,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":98,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_reference_organs",{"_index":293,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_summaries",{"_index":295,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data",{"_index":100,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data.nodes[iri].object.file",{"_index":264,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["mockcontactservice",{"_index":215,"title":{"injectables/MockContactService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["mockftudataservice",{"_index":225,"title":{"injectables/MockFtuDataService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["mocktissueftuservice",{"_index":222,"title":{"injectables/MockTissueFtuService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["mocktissuelibraryservice",{"_index":171,"title":{"injectables/MockTissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["module",{"_index":210,"title":{"modules/HraServiceModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":212,"title":{"modules.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["name",{"_index":46,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["negative",{"_index":440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nephron",{"_index":125,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nephron.svg",{"_index":126,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":72,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ngmodule",{"_index":214,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["node",{"_index":81,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":102,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":287,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":391,"title":{},"body":{"index.html":{}}}],["obeservable",{"_index":196,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["obj",{"_index":276,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["obj['object']['file",{"_index":277,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["object",{"_index":34,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":103,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(childnodes",{"_index":95,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["object.values(mock_tissue_data.nodes).filter(isreferenceorgan",{"_index":294,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["objecy",{"_index":57,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["observable",{"_index":25,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["of(mock_reference_organs",{"_index":352,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_summaries",{"_index":353,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_tissue_data",{"_index":175,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["of(mock_tissue_data.nodes[iri].object.file",{"_index":261,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["optional",{"_index":47,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["organ",{"_index":274,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":292,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":403,"title":{},"body":{"overview.html":{}}}],["outer",{"_index":127,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":173,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["overrides",{"_index":249,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["overview",{"_index":400,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":372,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pancreas",{"_index":144,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["pancreatic",{"_index":150,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla",{"_index":155,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla.svg",{"_index":156,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":209,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["parameters",{"_index":45,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":76,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parent}${label.replace",{"_index":78,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["peer",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":288,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["percentage_range_error",{"_index":422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["percentage_range_error).lte(1",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"properties.html":{}}}],["prostate",{"_index":165,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":232,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["providedin",{"_index":170,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["providers",{"_index":227,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["pulmonary",{"_index":131,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["purposes",{"_index":251,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["real",{"_index":230,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["received",{"_index":245,"title":{},"body":{"injectables/MockContactService.html":{}}}],["record",{"_index":84,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":273,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":363,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["referenceorgan",{"_index":270,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["references",{"_index":197,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["related",{"_index":182,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["releases/v1.3/2d",{"_index":111,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["renal",{"_index":115,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["replace",{"_index":229,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["representation_of",{"_index":55,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["representing",{"_index":30,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["represents",{"_index":235,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["reset",{"_index":402,"title":{},"body":{"overview.html":{}}}],["results",{"_index":38,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":77,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["returns",{"_index":36,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ridge",{"_index":158,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ridge.svg",{"_index":159,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":101,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":395,"title":{},"body":{"index.html":{}}}],["running",{"_index":392,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":26,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["same",{"_index":414,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema",{"_index":425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sendmessage",{"_index":42,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["sendmessage(message",{"_index":37,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["service",{"_index":180,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["services",{"_index":231,"title":{},"body":{"modules/HraServiceModule.html":{},"index.html":{}}}],["shared/common.model",{"_index":70,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["single",{"_index":183,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["skin",{"_index":153,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["source_reference",{"_index":423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourcereference",{"_index":207,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../common.model.ts",{"_index":411,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ftu",{"_index":408,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":381,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.mock.ts",{"_index":234,"title":{},"body":{"injectables/MockContactService.html":{}}}],["src/lib/contact/contact.service.ts",{"_index":6,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["src/lib/contact/contact.service.ts:18",{"_index":44,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/lib/ftu",{"_index":177,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/service.module.ts",{"_index":213,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["src/lib/shared/common.model.ts",{"_index":413,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/tissue",{"_index":49,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":389,"title":{"index.html":{}},"body":{}}],["stoe",{"_index":58,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":11,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["submucosal",{"_index":135,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["summaries",{"_index":193,"title":{},"body":{"injectables/FtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":280,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary1",{"_index":296,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summary2",{"_index":350,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":263,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["synonymlabels",{"_index":92,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["takes",{"_index":33,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{}}}],["test",{"_index":271,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["testing",{"_index":250,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["tests",{"_index":394,"title":{},"body":{"index.html":{}}}],["thick",{"_index":129,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":107,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thymus",{"_index":168,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue",{"_index":53,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tissue_library",{"_index":424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tissueftuservice",{"_index":219,"title":{"injectables/TissueFtuService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["tissueftuservice:88",{"_index":268,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissueftuservice:93",{"_index":267,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissuelibrary",{"_index":67,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryservice",{"_index":65,"title":{"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["tissuelibraryservice.gettissuelibrary",{"_index":172,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["tissuelibraryservice:162",{"_index":354,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["todo",{"_index":228,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["tslib",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":406,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui/cdk/state",{"_index":64,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["ui/utils/types",{"_index":269,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["undefined",{"_index":105,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":393,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":366,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["url",{"_index":59,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["url.brand('iri",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":233,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["user",{"_index":21,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["value",{"_index":290,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":18,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["variables",{"_index":415,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":404,"title":{},"body":{"properties.html":{}}}],["whether",{"_index":272,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["yes",{"_index":387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":360,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["z.infer",{"_index":362,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{}}}],["z.number().gte(0",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().int(count_integer_error).nonnegative(count_range_error",{"_index":431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.object",{"_index":364,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.record(iri",{"_index":449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":365,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.string().url",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().url().brand('url",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zero",{"_index":435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zod",{"_index":361,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":401,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ContactMessage.html":{"url":"interfaces/ContactMessage.html","title":"interface - ContactMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A interface contact which defines email, subject, and the message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable email which accepts the email entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable message which accepts the message entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable subject which accepts the subject entered by user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a ContactService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/contact/contact.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes a ContactMessage object as an argument and returns an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedTissue.html":{"url":"interfaces/ExtendedTissue.html","title":"interface - ExtendedTissue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtendedTissue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Extended tissue\n\n            \n\n            \n                Extends\n            \n            \n                        Tissue\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Objecy to stoe the file URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Base Id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://example.com/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FtuDataService.html":{"url":"injectables/FtuDataService.html","title":"injectable - FtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading all data related to a single ftu\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getDataFileReferences\n                            \n                            \n                                    Abstract\n                                getIllustrationMapping\n                            \n                            \n                                    Abstract\n                                getIllustrationUrl\n                            \n                            \n                                    Abstract\n                                getSourceReferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:24\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable of cell summaries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:30\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of data file references\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable of IllustrationMappingItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:13\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable url\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of source references\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport { CellSummary, DataFileReference, IllustrationMappingItem, SourceReference } from './ftu-data.model';\n\n/** Service for loading all data related to a single ftu */\n@Injectable()\nexport abstract class FtuDataService {\n  /**\n   * This method takes\n   * @param iri and @returns an observable url\n   */\n  abstract getIllustrationUrl(iri: Iri): Observable;\n  /**\n   * This method takes\n   * @param iri and @returns observable of IllustrationMappingItem\n   */\n  abstract getIllustrationMapping(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri and\n   * @returns observable of cell summaries\n   */\n  abstract getCellSummaries(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of data file references\n   */\n  abstract getDataFileReferences(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of source references\n   */\n  abstract getSourceReferences(iri: Iri): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraServiceModule.html":{"url":"modules/HraServiceModule.html","title":"module - HraServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    HraServiceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/service.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MockContactService } from './contact/contact.mock';\nimport { ContactService } from './contact/contact.service';\nimport { MockTissueLibraryService } from './tissue-library/tissue-library.mock';\nimport { TissueLibraryService } from './tissue-library/tissue-library.service';\nimport { TissueFtuService } from './tissue-ftu/tissue-ftu.service';\nimport { MockTissueFtuService } from './tissue-ftu/tissue-ftu.mock';\nimport { FtuDataService } from './ftu-data/ftu-data.service';\nimport { MockFtuDataService } from './ftu-data/ftu-data.mock';\n\n@NgModule({\n  providers: [\n    // TODO replace with real services\n    {\n      provide: ContactService,\n      useExisting: MockContactService,\n    },\n    {\n      provide: TissueLibraryService,\n      useExisting: MockTissueLibraryService,\n    },\n    {\n      provide: TissueFtuService,\n      useExisting: MockTissueFtuService,\n    },\n    {\n      provide: FtuDataService,\n      useExisting: MockFtuDataService,\n    },\n  ],\n})\nexport class HraServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockContactService.html":{"url":"injectables/MockContactService.html","title":"injectable - MockContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents mock implementation of the ContactService class.\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    It accepts an object of type ContactMessage and currently logs the message contents on the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { ContactMessage, ContactService } from './contact.service';\n\n/** This class represents mock implementation of the ContactService class. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockContactService extends ContactService {\n  /** It accepts an object of type ContactMessage and currently logs the message contents on the console. */\n  sendMessage(message: ContactMessage): Observable {\n    console.log('Message received. Content: ' + JSON.stringify(message));\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockFtuDataService.html":{"url":"injectables/MockFtuDataService.html","title":"injectable - MockFtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockFtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n\n            \n\n            \n                Extends\n            \n            \n                        FtuDataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCellSummaries\n                            \n                            \n                                    \n                                getDataFileReferences\n                            \n                            \n                                    \n                                getIllustrationMapping\n                            \n                            \n                                    \n                                getIllustrationUrl\n                            \n                            \n                                    \n                                getSourceReferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:39\n\n                \n            \n\n\n            \n                \n                    Overrides the getCellSummaries method to return an CellSummary array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits an CellSummary array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:47\n\n                \n            \n\n\n            \n                \n                    Overrides the getDataFileReferences method to return an DataFileReference array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an DataFileReference array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:30\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an IllustrationMappingItem array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:21\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits the mock URL.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:60\n\n                \n            \n\n\n            \n                \n                    Overrides the getSourceReferences method to return an empty array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an empty array.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport { CellSummary, DataFileReference, IllustrationMappingItem, SourceReference } from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/**\nThis class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockFtuDataService extends FtuDataService {\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return of(MOCK_TISSUE_DATA.nodes[iri].object.file);\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return of([]);\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return of([]);\n  }\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return of([\n      {\n        format: 'svg',\n        url: MOCK_TISSUE_DATA.nodes[iri].object.file,\n      },\n    ]);\n  }\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return of([]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueFtuService.html":{"url":"injectables/MockTissueFtuService.html","title":"injectable - MockTissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of TissueFtuService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueFtuService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCellSummaries\n                            \n                            \n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \ngetCellSummaries()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:93\n\n                \n            \n\n\n            \n                \n                    Implementation of abstract method\n\n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:88\n\n                \n            \n\n\n            \n                \n                    Implementation of getReferenceOrgans method\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Any } from '@hra-ui/utils/types';\nimport { Observable, of } from 'rxjs';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport { ReferenceOrgan, TissueFtuService } from './tissue-ftu.service';\n\n/** Test whether an object is a reference organ */\nfunction isReferenceOrgan(obj: Any): obj is ReferenceOrgan {\n  return !!obj['object']['file'];\n}\n\n/** Helper for creating summary data */\nfunction createCell(\n  cid: string,\n  clabel: string,\n  bid: string,\n  blabel: string,\n  count: number,\n  percentage: number,\n  metadata: { label: string; value: string }[][] = []\n) {\n  return {\n    cell: {\n      id: cid,\n      label: clabel,\n    },\n    biomarker: {\n      id: bid,\n      label: blabel,\n    },\n    count,\n    percentage,\n    metadata,\n  };\n}\n\n/** Reference organs */\nconst MOCK_REFERENCE_ORGANS = Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan);\n\n/** Mock summary data */\nconst MOCK_SUMMARIES = {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 0.5, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1)],\n  },\n};\n\n/** Implementation of TissueFtuService */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueFtuService extends TissueFtuService {\n  /** Implementation of getReferenceOrgans method */\n  getReferenceOrgans(): Observable {\n    return of(MOCK_REFERENCE_ORGANS);\n  }\n\n  /** Implementation of abstract method */\n  getCellSummaries(): Observable {\n    return of(MOCK_SUMMARIES);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueLibraryService.html":{"url":"injectables/MockTissueLibraryService.html","title":"injectable - MockTissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock implementation of TissueLibraryService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueLibraryService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueLibraryService\n\n                \n            \n            \n                \n                        Defined in         TissueLibraryService:162\n\n                \n            \n\n\n            \n                \n                    Implementation of TissueLibraryService.getTissueLibrary\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://example.com/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueFtuService.html":{"url":"injectables/TissueFtuService.html","title":"injectable - TissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract Service to fetch reference organs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(id)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:22\n                \n            \n\n\n            \n                \n                    Get summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:19\n                \n            \n\n\n            \n                \n                    abstract Method to fetch reference organs\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\nexport type ReferenceOrgan = z.infer;\n\n/** Reference organ type */\nexport const REFERENCE_ORGAN = z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n});\n\n/** Abstract Service to fetch reference organs */\n@Injectable()\nexport abstract class TissueFtuService {\n  /** abstract Method to fetch reference organs */\n  abstract getReferenceOrgans(): Observable;\n\n  /** Get summary data */\n  abstract getCellSummaries(id: unknown): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryService.html":{"url":"injectables/TissueLibraryService.html","title":"injectable - TissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading the tissue library\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.service.ts:9\n                \n            \n\n\n            \n                \n                    Loads the entire tissue library\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TissueLibrary } from './tissue-library.model';\n\n/** Service for loading the tissue library */\n@Injectable()\nexport abstract class TissueLibraryService {\n  /** Loads the entire tissue library */\n  abstract getTissueLibrary(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createCell   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            createNodeId   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            defineNode   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            isReferenceOrgan   (src/.../tissue-ftu.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCell\n                        \n                    \n                \n            \n            \n                \ncreateCell(cid: string, clabel: string, bid: string, blabel: string, count: number, percentage: number, metadata)\n                \n            \n\n\n\n\n            \n                \n                    Helper for creating summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    cid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    clabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    blabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    metadata\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReferenceOrgan\n                        \n                    \n                \n            \n            \n                \nisReferenceOrgan(obj: Any)\n                \n            \n\n\n\n\n            \n                \n                    Test whether an object is a reference organ\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                Any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReferenceOrgan\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createNodeId\n                        \n                    \n                \n            \n            \n                \ncreateNodeId(label: string, parent: string)\n                \n            \n\n\n\n\n            \n                \n                    Create a new id from a label\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defineNode\n                        \n                    \n                \n            \n            \n                \ndefineNode(label: string, parent: string, url?: string, ...children: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Create a new node\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    children\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nservices\nThis library was generated with Nx.\nRunning unit tests\nRun nx test services to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraServiceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Biomarker   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Cell   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CellSummary   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CellSummaryRow   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DataFileReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            IllustrationMappingItem   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Iri   (src/.../common.model.ts)\n                        \n                        \n                            ReferenceOrgan   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SourceReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Tissue   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibrary   (src/.../tissue-library.model.ts)\n                        \n                        \n                            Url   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n    \n        \n            \n                \n                    \n                    Biomarker\n                \n            \n            \n                \n                    Type for a Biomarker\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Cell\n                \n            \n            \n                \n                    Type for a cell\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummary\n                \n            \n            \n                \n                    Type for a CellSummary\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryRow\n                \n            \n            \n                \n                    Type for a CellSummaryRow\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataFileReference\n                \n            \n            \n                \n                    Type for a DataFileReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IllustrationMappingItem\n                \n            \n            \n                \n                    Type for a IllustrationMappingItem\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceReference\n                \n            \n            \n                \n                    Type for a SourceReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/shared/common.model.ts\n    \n    \n        \n            \n                \n                    \n                    Iri\n                \n            \n            \n                \n                    Same as an Url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Url\n                \n            \n            \n                \n                    Any url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReferenceOrgan\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    Tissue\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibrary\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ID   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            BIOMARKER   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SUMMARY   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SUMMARY_ROW   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_INTEGER_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DATA_FILE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            ILLUSTRATION_MAPPING_ITEM   (src/.../ftu-data.model.ts)\n                        \n                        \n                            IRI   (src/.../common.model.ts)\n                        \n                        \n                            MOCK_REFERENCE_ORGANS   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_SUMMARIES   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_TISSUE_DATA   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            PERCENTAGE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            PERCENTAGE_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            REFERENCE_ORGAN   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SOURCE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TISSUE   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TISSUE_LIBRARY   (src/.../tissue-library.model.ts)\n                        \n                        \n                            URL   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://example.com/'\n                    \n                \n\n            \n                \n                    Base node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_TISSUE_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n}\n                    \n                \n\n            \n                \n                    Mock tissue data\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BIOMARKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a BIOMARKER\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a cell object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  cells: CELL.array(),\n  biomarkers: BIOMARKER.array(),\n  summaries: CELL_SUMMARY_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell: IRI,\n  biomarker: IRI,\n  count: COUNT,\n  percentage: PERCENTAGE,\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY_ROW\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().int(COUNT_INTEGER_ERROR).nonnegative(COUNT_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A integer greater than or equal to zero\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_INTEGER_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be an integer'\n                    \n                \n\n            \n                \n                    Error message for non integer counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be greater than or equal to 0'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_FILE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  format: z.string(),\n  url: URL,\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a DATA_FILE_REFERENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ILLUSTRATION_MAPPING_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  name: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a ILLUSTRATION_MAPPING_ITEM\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().gte(0, PERCENTAGE_RANGE_ERROR).lte(1, PERCENTAGE_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A number between 0 and 1 inclusive\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Percentage must be between 0 and 1 (inclusive)'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SOURCE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  link: z.string().url(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a SOURCE_REFERENCE\n\n                \n            \n\n        \n    \n\n    src/lib/shared/common.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : URL.brand('IRI')\n                    \n                \n\n            \n                \n                    Same as an URL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.string().url().brand('URL')\n                    \n                \n\n            \n                \n                    Any url\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MOCK_REFERENCE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan)\n                    \n                \n\n            \n                \n                    Reference organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_SUMMARIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 0.5, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1)],\n  },\n}\n                    \n                \n\n            \n                \n                    Mock summary data\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFERENCE_ORGAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n})\n                    \n                \n\n            \n                \n                    Reference organ type\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-library/tissue-library.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TISSUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n  parent: IRI,\n  children: IRI.array().default([]),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LIBRARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue Library\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
