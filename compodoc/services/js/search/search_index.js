var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ContactMessage.html",[0,1.421,1,1.421]],["body/interfaces/ContactMessage.html",[0,2.027,1,2.195,2,2.294,3,0.655,4,0.655,5,0.55,6,1.811,7,0.773,8,2.534,9,1.757,10,3.723,11,3.723,12,3.069,13,0.369,14,2.089,15,1.843,16,0.887,17,0.062,18,3.453,19,2.847,20,3.453,21,3.453,22,0.916,23,0.305,24,0.55,25,1.248,26,0.773,27,0.916,28,2.027,29,0.916,30,1.256,31,1.492,32,1.066,33,1.811,34,0.655,35,1.811,36,0.655,37,1.493,38,0.039,39,0.039]],["title/injectables/ContactService.html",[23,0.246,31,1.206]],["body/injectables/ContactService.html",[0,1.821,1,2.433,3,0.69,4,0.69,5,0.579,6,1.907,7,0.814,8,1.907,9,1.323,10,3.237,11,3.237,12,2.799,13,0.389,15,1.507,16,0.579,17,0.063,18,3.004,19,2.477,20,3.004,21,3.004,22,0.95,23,0.316,24,0.579,25,1.449,26,0.814,27,0.95,28,2.433,29,1.086,30,1.821,31,1.906,32,1.546,33,2.627,34,0.95,35,2.627,36,1.086,37,2.166,38,0.041,39,0.041,40,0.814,41,1.317,42,2.627,43,0.957,44,2.416,45,1.573,46,1.573,47,1.573]],["title/modules/HraServiceModule.html",[48,2.049,49,1.69]],["body/modules/HraServiceModule.html",[3,0.786,4,0.786,5,0.66,17,0.063,22,1.345,24,0.66,27,0.786,29,0.786,31,1.689,38,0.045,39,0.045,49,2.366,50,1.793,51,2.754,52,3.634,53,2.366,54,2.754,55,2.754,56,2.366,57,1.713,58,1.225,59,2.175,60,1.99,61,2.175,62,1.99,63,1.439,64,2.175,65,2.366,66,2.754,67,2.754,68,2.754,69,2.754,70,2.754,71,2.175,72,4.068,73,4.068]],["title/injectables/MockContactService.html",[23,0.246,53,1.69]],["body/injectables/MockContactService.html",[1,2.466,3,0.721,4,0.721,5,0.605,7,0.851,12,2.535,13,0.406,16,0.933,17,0.062,19,2.232,22,1.112,23,0.326,24,0.605,25,1.312,26,0.851,27,0.721,29,1.247,31,2.093,34,0.979,36,0.721,37,2.232,38,0.042,39,0.042,40,0.851,41,1.358,42,2.707,43,1,45,1.644,46,1.644,47,1.644,53,2.232,74,2.525,75,3.429,76,2.232,77,2.232,78,2.232,79,1.644,80,2.525,81,3.429,82,3.429,83,3.429,84,3.429,85,3.429,86,2.525,87,1.644,88,1.174,89,2.525,90,2.525,91,2.525,92,2.525,93,1.644]],["title/injectables/MockTissueFtuService.html",[23,0.246,65,1.69]],["body/injectables/MockTissueFtuService.html",[3,0.716,4,0.716,5,0.601,7,0.845,13,0.404,17,0.063,22,1.244,23,0.324,24,0.601,25,1.308,26,0.845,27,0.716,29,0.716,32,1.586,34,0.716,36,0.716,38,0.042,39,0.042,40,0.845,41,1.351,43,0.993,57,1.351,58,0.845,59,1.98,62,2.461,63,0.993,64,1.98,65,2.222,77,2.711,78,2.222,79,1.632,87,1.632,88,1.165,93,2.222,94,0.845,95,1.632,96,3.549,97,2.507,98,1.98,99,2.507,100,1.632,101,1.868,102,1.632,103,1.98,104,1.868,105,1.373,106,1.98,107,1.98,108,1.98,109,2.507,110,1.632,111,1.373,112,1.98,113,1.98,114,2.507]],["title/injectables/MockTissueLibraryService.html",[23,0.246,56,1.69]],["body/injectables/MockTissueLibraryService.html",[3,0.323,4,0.323,5,0.447,7,0.381,13,0.182,15,1.443,16,0.271,17,0.063,22,0.79,23,0.177,24,0.271,25,0.803,26,0.381,27,0.533,29,0.323,34,0.533,36,0.323,38,0.023,39,0.023,40,0.381,41,0.739,43,0.448,56,1.215,57,0.739,58,0.381,60,1.804,61,0.893,76,1.551,77,1.801,78,1.215,79,0.736,87,0.736,88,0.867,93,1.551,94,0.381,98,0.893,100,0.736,106,1.474,111,1.676,115,0.736,116,2.184,117,1.131,118,1.866,119,1.131,120,1.131,121,1.215,122,1.474,123,1.474,124,2.068,125,1.305,126,1.474,127,1.514,128,1.131,129,1.131,130,1.131,131,1.801,132,0.893,133,2.184,134,1.022,135,1.866,136,1.131,137,1.866,138,1.131,139,1.866,140,1.131,141,0.736,142,2.383,143,1.131,144,0.736,145,1.131,146,0.893,147,3.073,148,0.893,149,0.619,150,0.736,151,0.893,152,1.801,153,2.983,154,2.373,155,1.474,156,2.184,157,2.602,158,1.882,159,3.526,160,3.526,161,3.526,162,3.526,163,1.882,164,1.474,165,0.893,166,0.893,167,2.184,168,1.474,169,2.417,170,2.184,171,2.184,172,1.474,173,2.184,174,0.893,175,0.893,176,1.474,177,0.893,178,1.474,179,1.882,180,1.474,181,0.893,182,0.893,183,1.474,184,1.474,185,0.893,186,0.893,187,0.893,188,1.474,189,1.474,190,0.893,191,0.893,192,0.893,193,2.184,194,0.893,195,0.893,196,0.893,197,0.893,198,1.474,199,1.474,200,1.474,201,1.474,202,1.882,203,1.474,204,0.893,205,0.893,206,1.474,207,0.893,208,0.893,209,0.893,210,1.882,211,1.474,212,1.474,213,0.893,214,1.882,215,1.474,216,0.893,217,1.882,218,1.131]],["title/injectables/TissueFtuService.html",[23,0.246,62,1.421]],["body/injectables/TissueFtuService.html",[3,0.744,4,0.744,5,0.84,7,0.878,13,0.42,16,0.84,17,0.063,22,1.13,23,0.333,24,0.625,25,1.334,26,0.878,27,1.13,28,2.585,29,0.744,32,1.628,34,0.744,36,0.744,38,0.043,39,0.043,40,0.878,41,1.387,43,1.032,62,1.918,63,1.387,94,1.181,96,3.341,101,1.427,104,2.417,105,1.427,110,2.754,111,1.427,144,1.697,219,1.697,220,3.503,221,4.231,222,2.606,223,2.058,224,2.058,225,1.697,226,2.058,227,2.28,228,2.28]],["title/injectables/TissueLibraryService.html",[23,0.246,60,1.421]],["body/injectables/TissueLibraryService.html",[3,0.575,4,0.575,5,0.483,7,0.679,9,1.601,13,0.324,15,0.798,16,1.099,17,0.063,22,0.983,23,0.278,24,0.483,25,1.353,26,0.679,27,1.234,28,2.293,29,0.983,30,1.886,32,1.36,36,0.983,38,0.036,39,0.036,40,0.679,41,1.158,43,0.798,57,1.364,58,0.986,60,2.069,88,1.36,94,0.986,111,1.886,116,2.985,121,2.461,124,1.886,125,1.103,127,1.601,134,1.601,141,1.311,149,1.601,150,1.904,223,1.59,224,1.59,225,2.242,227,1.904,228,1.904,229,1.311,230,2.014,231,2.882,232,2.72,233,2.31,234,1.59,235,2.461,236,1.59,237,1.59,238,1.59,239,1.59,240,1.59,241,1.59,242,1.59,243,1.59,244,1.59,245,2.31,246,1.59,247,1.59,248,1.59,249,1.59,250,1.59]],["title/dependencies.html",[251,1.731,252,2.023]],["body/dependencies.html",[17,0.06,24,0.894,38,0.054,39,0.054,252,2.859,253,3.729,254,3.729,255,3.729,256,3.729,257,4.392]],["title/miscellaneous/functions.html",[258,0.868,259,2.454]],["body/miscellaneous/functions.html",[13,0.44,15,1.946,16,0.971,17,0.059,34,1.032,36,1.157,38,0.044,39,0.044,45,2.638,46,2.638,47,2.638,58,0.921,63,1.083,94,1.219,95,2.354,101,1.497,102,1.78,103,2.158,104,1.497,105,1.497,107,2.158,108,2.158,115,2.638,122,2.855,123,2.855,124,1.497,125,2.219,126,2.158,127,2.361,131,1.78,132,2.158,133,2.855,134,1.98,152,2.354,154,1.78,258,1.083,259,2.158,260,3.616,261,2.638,262,3.616,263,2.734]],["title/index.html",[13,0.353,264,2.192,265,2.192]],["body/index.html",[17,0.054,38,0.054,39,0.054,71,3.447,102,2.403,266,3.691,267,3.691,268,4.365,269,3.691,270,4.365,271,4.365,272,3.691,273,3.691]],["title/modules.html",[50,2.274]],["body/modules.html",[17,0.055,38,0.055,39,0.055,49,2.518,50,2.518,274,3.868,275,3.868,276,3.868]],["title/overview.html",[277,2.758]],["body/overview.html",[0,2.031,17,0.054,38,0.054,39,0.054,40,1.251,48,2.929,252,2.85,277,2.929,278,4.379,279,3.71,280,3.71,281,4.379,282,3.71]],["title/properties.html",[14,2.023,251,1.731]],["body/properties.html",[14,2.532,17,0.058,38,0.055,39,0.055,283,3.889,284,3.889]],["title/miscellaneous/typealiases.html",[258,0.868,285,3.108]],["body/miscellaneous/typealiases.html",[13,0.511,16,1.094,17,0.049,38,0.049,39,0.049,57,1.577,58,1.07,63,1.257,94,1.342,101,2.181,121,2.833,149,1.738,219,2.593,225,2.97,229,2.97,231,2.97,232,3.436,233,3.436,234,2.507,235,2.593,258,1.257,261,2.97,286,3.175]],["title/miscellaneous/variables.html",[258,0.868,287,2.454]],["body/miscellaneous/variables.html",[5,0.295,9,1.095,13,0.198,15,0.792,16,0.767,17,0.062,30,0.674,34,0.571,38,0.025,39,0.025,57,0.792,58,0.674,63,0.792,76,0.801,88,1.174,94,0.981,95,1.302,100,1.302,104,1.095,105,0.674,110,0.801,112,1.579,113,0.971,115,1.645,124,1.593,125,0.674,127,1.095,131,0.801,134,1.095,141,0.801,144,0.801,146,0.971,147,3.235,148,0.971,149,1.095,150,1.645,151,0.971,152,1.894,153,3.075,154,2.453,155,1.579,156,2.298,157,2.709,158,1.995,159,3.586,160,3.586,161,3.586,162,3.586,163,1.995,164,1.579,165,0.971,166,0.971,167,2.298,168,1.579,169,2.528,170,2.298,171,2.298,172,1.579,173,2.298,174,0.971,175,0.971,176,1.579,177,0.971,178,1.579,179,1.995,180,1.579,181,0.971,182,0.971,183,1.579,184,1.579,185,0.971,186,0.971,187,0.971,188,1.579,189,1.579,190,0.971,191,0.971,192,0.971,193,2.298,194,0.971,195,0.971,196,0.971,197,0.971,198,1.579,199,1.579,200,1.579,201,1.579,202,1.995,203,1.579,204,0.971,205,0.971,206,1.579,207,0.971,208,0.971,209,0.971,210,1.995,211,1.579,212,1.579,213,0.971,214,1.995,215,1.579,216,0.971,217,1.995,219,1.302,226,1.579,227,1.894,228,1.894,229,1.894,231,2.233,235,1.302,236,0.971,237,0.971,238,0.971,239,0.971,240,0.971,241,0.971,242,0.971,243,0.971,244,0.971,245,1.995,246,0.971,247,0.971,248,0.971,249,1.579,250,0.971,258,0.487,261,2.353,287,0.971,288,3.615,289,3.615]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":284,"title":{},"body":{"properties.html":{}}}],["1",{"_index":281,"title":{},"body":{"overview.html":{}}}],["15.1.0",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":282,"title":{},"body":{"overview.html":{}}}],["_",{"_index":130,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["abstract",{"_index":28,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["acc",{"_index":137,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["accepted",{"_index":242,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["accepts",{"_index":19,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["acinus",{"_index":200,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["acinus.svg",{"_index":201,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":286,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alveolus",{"_index":181,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["alveolus.svg",{"_index":182,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{}}}],["argument",{"_index":35,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["ascending",{"_index":167,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":275,"title":{},"body":{"modules.html":{}}}],["base",{"_index":146,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base_id",{"_index":147,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["bronchial",{"_index":183,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":276,"title":{},"body":{"modules.html":{}}}],["childlabel",{"_index":138,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["childnodes",{"_index":135,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["children",{"_index":134,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["children.reduce",{"_index":136,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["childurl",{"_index":139,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["class",{"_index":29,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["collecting",{"_index":169,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["collectiong",{"_index":177,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["console",{"_index":84,"title":{},"body":{"injectables/MockContactService.html":{}}}],["console.log('message",{"_index":89,"title":{},"body":{"injectables/MockContactService.html":{}}}],["const",{"_index":111,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["contact",{"_index":8,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":86,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contact/contact.mock",{"_index":54,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contact/contact.service",{"_index":55,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contactmessage",{"_index":1,"title":{"interfaces/ContactMessage.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["contactservice",{"_index":31,"title":{"injectables/ContactService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["contactservice:11",{"_index":80,"title":{},"body":{"injectables/MockContactService.html":{}}}],["content",{"_index":91,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contents",{"_index":83,"title":{},"body":{"injectables/MockContactService.html":{}}}],["corpuscle",{"_index":165,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["corpuscle.svg",{"_index":166,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["cortical",{"_index":168,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["create",{"_index":122,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["createlinkid",{"_index":119,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["createlinkid('ftu",{"_index":143,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["createnodeid",{"_index":260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnodeid(label",{"_index":126,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["crypt",{"_index":189,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":81,"title":{},"body":{"injectables/MockContactService.html":{}}}],["data",{"_index":149,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":43,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["definenode",{"_index":152,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["definenode('large",{"_index":187,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('liver",{"_index":209,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('prostate",{"_index":213,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('thymus",{"_index":216,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode(childlabel",{"_index":140,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["definenode(label",{"_index":132,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["defines",{"_index":9,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":252,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dermal",{"_index":203,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["descending",{"_index":155,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["duct",{"_index":170,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["duct.svg",{"_index":171,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":10,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["empty",{"_index":85,"title":{},"body":{"injectables/MockContactService.html":{}}}],["ensures",{"_index":237,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["entered",{"_index":20,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["epidermal",{"_index":206,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["execute",{"_index":273,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["extends",{"_index":78,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["fetch",{"_index":221,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu",{"_index":162,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu.mock",{"_index":66,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["ftu.mock.ts",{"_index":95,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ftu.service",{"_index":64,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["ftu.service.ts",{"_index":219,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu.service.ts:19",{"_index":222,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu/2d",{"_index":161,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu/tissue",{"_index":63,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":106,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["functions",{"_index":259,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":129,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["generated",{"_index":267,"title":{},"body":{"index.html":{}}}],["getreferenceorgans",{"_index":96,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["getting",{"_index":264,"title":{"index.html":{}},"body":{}}],["gettissues",{"_index":116,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["gland",{"_index":185,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["gland.svg",{"_index":186,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["glandular",{"_index":215,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":274,"title":{},"body":{"modules.html":{}}}],["henle",{"_index":158,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["henle.svg",{"_index":163,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["hra",{"_index":98,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["hraservicemodule",{"_index":49,"title":{"modules/HraServiceModule.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["https://example.com",{"_index":148,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":159,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":124,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["implementation",{"_index":77,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infered",{"_index":232,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inherited",{"_index":79,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["injectable",{"_index":23,"title":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["injectables",{"_index":40,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"overview.html":{}}}],["inner",{"_index":172,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["intercalated",{"_index":198,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ContactMessage.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"overview.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ContactMessage.html":{}}}],["intestine",{"_index":188,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri",{"_index":231,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iri.array",{"_index":248,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri.or(z.literal",{"_index":246,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["islates",{"_index":194,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["islets",{"_index":196,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["isreferenceorgan",{"_index":262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isreferenceorgan(obj",{"_index":107,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":234,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["json.stringify(message",{"_index":92,"title":{},"body":{"injectables/MockContactService.html":{}}}],["kidney",{"_index":153,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":125,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["langerhans",{"_index":195,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["langerhans.svg",{"_index":197,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":191,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":266,"title":{},"body":{"index.html":{}}}],["library.mock",{"_index":59,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["library.mock.ts",{"_index":115,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["library.service",{"_index":61,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["library.service.ts",{"_index":229,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["library.service.ts:50",{"_index":230,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library/tissue",{"_index":58,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn",{"_index":190,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn.svg",{"_index":192,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":142,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["liver",{"_index":210,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lobule",{"_index":211,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lobule.svg",{"_index":212,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":82,"title":{},"body":{"injectables/MockContactService.html":{}}}],["loop",{"_index":157,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lung",{"_index":179,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["marked",{"_index":241,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":39,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medullary",{"_index":173,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":12,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["method",{"_index":32,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["methods",{"_index":41,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["miscellaneous",{"_index":258,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":76,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_reference_organs",{"_index":112,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data",{"_index":100,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mockcontactservice",{"_index":53,"title":{"injectables/MockContactService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["mocktissueftuservice",{"_index":65,"title":{"injectables/MockTissueFtuService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["mocktissuelibraryservice",{"_index":56,"title":{"injectables/MockTissueLibraryService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["module",{"_index":48,"title":{"modules/HraServiceModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":50,"title":{"modules.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["name",{"_index":46,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"miscellaneous/functions.html":{}}}],["nephron",{"_index":174,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nephron.svg",{"_index":175,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":123,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ngmodule",{"_index":52,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["node",{"_index":131,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":150,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":268,"title":{},"body":{"index.html":{}}}],["obj",{"_index":108,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["obj['object']['file",{"_index":109,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["object",{"_index":34,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":151,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(childnodes",{"_index":145,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["object.values(mock_tissue_data.nodes).filter(isreferenceorgan",{"_index":113,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":25,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["of(mock_reference_organs",{"_index":114,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_tissue_data",{"_index":218,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["optional",{"_index":47,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"miscellaneous/functions.html":{}}}],["organ",{"_index":105,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":110,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":280,"title":{},"body":{"overview.html":{}}}],["outer",{"_index":176,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":277,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":251,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pancreas",{"_index":193,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["pancreatic",{"_index":199,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla",{"_index":204,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla.svg",{"_index":205,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":45,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":127,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parent}${label.replace",{"_index":128,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["peer",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ContactMessage.html":{},"properties.html":{}}}],["prostate",{"_index":214,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":72,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["providedin",{"_index":87,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["pulmonary",{"_index":180,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["real",{"_index":70,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["received",{"_index":90,"title":{},"body":{"injectables/MockContactService.html":{}}}],["reference",{"_index":104,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":226,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["referenceorgan",{"_index":101,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["releases/v1.3/2d",{"_index":160,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["renal",{"_index":164,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["replace",{"_index":69,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["representation_of",{"_index":144,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["representing",{"_index":30,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":75,"title":{},"body":{"injectables/MockContactService.html":{}}}],["reset",{"_index":279,"title":{},"body":{"overview.html":{}}}],["results",{"_index":38,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":93,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["returns",{"_index":36,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ridge",{"_index":207,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ridge.svg",{"_index":208,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":88,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":272,"title":{},"body":{"index.html":{}}}],["running",{"_index":269,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":26,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["schema",{"_index":235,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sendmessage",{"_index":42,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["sendmessage(message",{"_index":37,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["service",{"_index":220,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["services",{"_index":71,"title":{},"body":{"modules/HraServiceModule.html":{},"index.html":{}}}],["skin",{"_index":202,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["specifically",{"_index":240,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":261,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.mock.ts",{"_index":74,"title":{},"body":{"injectables/MockContactService.html":{}}}],["src/lib/contact/contact.service.ts",{"_index":6,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["src/lib/contact/contact.service.ts:18",{"_index":44,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/lib/service.module.ts",{"_index":51,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["src/lib/tissue",{"_index":94,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":265,"title":{"index.html":{}},"body":{}}],["string",{"_index":15,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":11,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["submucosal",{"_index":184,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["synonmynlabels",{"_index":244,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["synonymlabels",{"_index":141,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["takes",{"_index":33,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["test",{"_index":102,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["tests",{"_index":271,"title":{},"body":{"index.html":{}}}],["thick",{"_index":178,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":156,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thymus",{"_index":217,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue",{"_index":57,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tissue_data_schema",{"_index":249,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue_item_schema",{"_index":245,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissuedata",{"_index":121,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissueftuservice",{"_index":62,"title":{"injectables/TissueFtuService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["tissueftuservice:21",{"_index":97,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissueitem",{"_index":233,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryservice",{"_index":60,"title":{"injectables/TissueLibraryService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["tissuelibraryservice.gettissues",{"_index":118,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["tissuelibraryservice:143",{"_index":117,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["todo",{"_index":68,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["tslib",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":285,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui/cdk/state",{"_index":120,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["ui/utils/types",{"_index":99,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["undefined",{"_index":154,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":270,"title":{},"body":{"index.html":{}}}],["url",{"_index":133,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["urls",{"_index":239,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["useexisting",{"_index":73,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["user",{"_index":21,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["valid",{"_index":238,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":236,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":18,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["variables",{"_index":287,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":283,"title":{},"body":{"properties.html":{}}}],["whether",{"_index":103,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["yes",{"_index":263,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":223,"title":{},"body":{"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["z.infer",{"_index":225,"title":{},"body":{"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["z.object",{"_index":227,"title":{},"body":{"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.record(iri",{"_index":250,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string",{"_index":228,"title":{},"body":{"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":247,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string().url().brand('iri",{"_index":243,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":224,"title":{},"body":{"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["zoom",{"_index":278,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ContactMessage.html":{"url":"interfaces/ContactMessage.html","title":"interface - ContactMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A interface contact which defines email, subject, and the message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable email which accepts the email entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable message which accepts the message entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable subject which accepts the subject entered by user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a ContactService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/contact/contact.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes a ContactMessage object as an argument and returns an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraServiceModule.html":{"url":"modules/HraServiceModule.html","title":"module - HraServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    HraServiceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/service.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MockContactService } from './contact/contact.mock';\nimport { ContactService } from './contact/contact.service';\nimport { MockTissueLibraryService } from './tissue-library/tissue-library.mock';\nimport { TissueLibraryService } from './tissue-library/tissue-library.service';\nimport { TissueFtuService } from './tissue-ftu/tissue-ftu.service';\nimport { MockTissueFtuService } from './tissue-ftu/tissue-ftu.mock';\n\n@NgModule({\n  providers: [\n    // TODO replace with real services\n    {\n      provide: ContactService,\n      useExisting: MockContactService,\n    },\n    {\n      provide: TissueLibraryService,\n      useExisting: MockTissueLibraryService,\n    },\n    {\n      provide: TissueFtuService,\n      useExisting: MockTissueFtuService,\n    },\n  ],\n})\nexport class HraServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockContactService.html":{"url":"injectables/MockContactService.html","title":"injectable - MockContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents mock implementation of the ContactService class.\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    It accepts an object of type ContactMessage and currently logs the message contents on the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { ContactMessage, ContactService } from './contact.service';\n\n/** This class represents mock implementation of the ContactService class. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockContactService extends ContactService {\n  /** It accepts an object of type ContactMessage and currently logs the message contents on the console. */\n  sendMessage(message: ContactMessage): Observable {\n    console.log('Message received. Content: ' + JSON.stringify(message));\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueFtuService.html":{"url":"injectables/MockTissueFtuService.html","title":"injectable - MockTissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of TissueFtuService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueFtuService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:21\n\n                \n            \n\n\n            \n                \n                    Implementation of getReferenceOrgans method\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Any } from '@hra-ui/utils/types';\nimport { Observable, of } from 'rxjs';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport { ReferenceOrgan, TissueFtuService } from './tissue-ftu.service';\n\n/** Test whether an object is a reference organ */\nfunction isReferenceOrgan(obj: Any): obj is ReferenceOrgan {\n  return !!obj['object']['file'];\n}\n\n/** Reference organs */\nconst MOCK_REFERENCE_ORGANS = Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan);\n\n/** Implementation of TissueFtuService */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueFtuService extends TissueFtuService {\n  /** Implementation of getReferenceOrgans method */\n  getReferenceOrgans(): Observable {\n    return of(MOCK_REFERENCE_ORGANS);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueLibraryService.html":{"url":"injectables/MockTissueLibraryService.html","title":"injectable - MockTissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock implementation of TissueLibraryService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueLibraryService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTissues\n                        \n                    \n                \n            \n            \n                \ngetTissues()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueLibraryService\n\n                \n            \n            \n                \n                        Defined in         TissueLibraryService:143\n\n                \n            \n\n\n            \n                \n                    Implementation of TissueLibraryService.getTissues\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueData, TissueLibraryService } from './tissue-library.service';\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(label: string, parent: string, url?: string, ...children: [label: string, url: string][]): object {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://example.com/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ),\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissues} */\n  getTissues(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueFtuService.html":{"url":"injectables/TissueFtuService.html","title":"injectable - TissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract Service to fetch reference organs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:19\n                \n            \n\n\n            \n                \n                    abstract Method to fetch reference organs\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\nexport type ReferenceOrgan = z.infer;\n\n/** Reference organ type */\nexport const REFERENCE_ORGAN = z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n});\n\n/** Abstract Service to fetch reference organs */\n@Injectable()\nexport abstract class TissueFtuService {\n  /** abstract Method to fetch reference organs */\n  abstract getReferenceOrgans(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryService.html":{"url":"injectables/TissueLibraryService.html","title":"injectable - TissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a TissueLibraryService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getTissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.service.ts:50\n                \n            \n\n\n            \n                \n                    This method returns an Observable of the type of TissueData\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\n/**\n * A type of Iri which is infered from the IRI\n */\nexport type Iri = z.infer;\n\n/**\n * A type of TissueItem which is infered from the Tissue Item Schema\n */\nexport type TissueItem = z.infer;\n\n/**\n * A type of TissueData which is infered from the Tissue Data Schema\n */\nexport type TissueData = z.infer;\n\n/**\n * A validator that ensures string representing valid URLS, specifically marked as IRI are accepted\n */\nexport const IRI = z.string().url().brand('IRI');\n\n/**\n * Tissue data schema which defines the type, id, parent, synonmynLabels and children\n */\nexport const TISSUE_ITEM_SCHEMA = z.object({\n  '@type': z.string(),\n  '@id': IRI,\n  id: IRI,\n  parent: IRI.or(z.literal('')),\n  label: z.string(),\n  synonymLabels: z.string().array(),\n  children: IRI.array(),\n});\n\n/**\n * A Schema which defines the root and its nodes\n */\nexport const TISSUE_DATA_SCHEMA = z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE_ITEM_SCHEMA),\n});\n\n/** An abstract class representing a TissueLibraryService*/\n@Injectable()\nexport abstract class TissueLibraryService {\n  /** This method returns an Observable of the type of TissueData */\n  abstract getTissues(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createNodeId   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            defineNode   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            isReferenceOrgan   (src/.../tissue-ftu.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createNodeId\n                        \n                    \n                \n            \n            \n                \ncreateNodeId(label: string, parent: string)\n                \n            \n\n\n\n\n            \n                \n                    Create a new id from a label\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defineNode\n                        \n                    \n                \n            \n            \n                \ndefineNode(label: string, parent: string, url?: string, ...children: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Create a new node\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    children\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isReferenceOrgan\n                        \n                    \n                \n            \n            \n                \nisReferenceOrgan(obj: Any)\n                \n            \n\n\n\n\n            \n                \n                    Test whether an object is a reference organ\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                Any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReferenceOrgan\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nservices\nThis library was generated with Nx.\nRunning unit tests\nRun nx test services to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraServiceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Iri   (src/.../tissue-library.service.ts)\n                        \n                        \n                            ReferenceOrgan   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            TissueData   (src/.../tissue-library.service.ts)\n                        \n                        \n                            TissueItem   (src/.../tissue-library.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.service.ts\n    \n    \n        \n            \n                \n                    \n                    Iri\n                \n            \n            \n                \n                    A type of Iri which is infered from the IRI\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueData\n                \n            \n            \n                \n                    A type of TissueData which is infered from the Tissue Data Schema\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueItem\n                \n            \n            \n                \n                    A type of TissueItem which is infered from the Tissue Item Schema\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReferenceOrgan\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ID   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            IRI   (src/.../tissue-library.service.ts)\n                        \n                        \n                            MOCK_REFERENCE_ORGANS   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_TISSUE_DATA   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            REFERENCE_ORGAN   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            TISSUE_DATA_SCHEMA   (src/.../tissue-library.service.ts)\n                        \n                        \n                            TISSUE_ITEM_SCHEMA   (src/.../tissue-library.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://example.com/'\n                    \n                \n\n            \n                \n                    Base node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_TISSUE_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  root: BASE_ID,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ),\n}\n                    \n                \n\n            \n                \n                    Mock tissue data\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-library/tissue-library.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.string().url().brand('IRI')\n                    \n                \n\n            \n                \n                    A validator that ensures string representing valid URLS, specifically marked as IRI are accepted\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_DATA_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE_ITEM_SCHEMA),\n})\n                    \n                \n\n            \n                \n                    A Schema which defines the root and its nodes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_ITEM_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@type': z.string(),\n  '@id': IRI,\n  id: IRI,\n  parent: IRI.or(z.literal('')),\n  label: z.string(),\n  synonymLabels: z.string().array(),\n  children: IRI.array(),\n})\n                    \n                \n\n            \n                \n                    Tissue data schema which defines the type, id, parent, synonmynLabels and children\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MOCK_REFERENCE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan)\n                    \n                \n\n            \n                \n                    Reference organs\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFERENCE_ORGAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n})\n                    \n                \n\n            \n                \n                    Reference organ type\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
