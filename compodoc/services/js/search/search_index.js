var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ContactMessage.html",[0,1.421,1,1.421]],["body/interfaces/ContactMessage.html",[0,2.1,1,2.259,2,2.453,3,0.7,4,0.7,5,0.588,6,1.937,7,0.827,8,2.655,9,1.841,10,3.773,11,3.773,12,3.111,13,0.395,14,2.189,15,1.592,16,0.919,17,0.063,18,3.525,19,2.907,20,3.525,21,3.525,22,0.96,23,0.319,24,0.588,25,1.293,26,0.827,27,0.96,28,1.783,29,0.96,30,1.343,31,1.563,32,1.14,33,1.937,34,0.7,35,1.937,36,0.7,37,1.597,38,0.041,39,0.041]],["title/injectables/ContactService.html",[23,0.246,31,1.206]],["body/injectables/ContactService.html",[0,1.901,1,2.479,3,0.734,4,0.734,5,0.616,6,2.03,7,0.867,8,2.03,9,1.408,10,3.323,11,3.323,12,2.861,13,0.414,15,1.325,16,0.616,17,0.063,18,3.103,19,2.558,20,3.103,21,3.103,22,0.991,23,0.33,24,0.616,25,1.481,26,0.867,27,0.991,28,2.105,29,1.122,30,1.901,31,1.956,32,1.614,33,2.741,34,0.991,35,2.741,36,1.122,37,2.26,38,0.043,39,0.043,40,0.867,41,1.375,42,2.741,43,1.018,44,2.571,45,1.408,46,1.408,47,1.408]],["title/modules/HraServiceModule.html",[48,2.049,49,1.69]],["body/modules/HraServiceModule.html",[3,0.826,4,0.826,5,0.694,17,0.064,22,1.361,24,0.694,27,0.826,29,0.826,31,1.745,38,0.046,39,0.046,49,2.444,50,1.884,51,2.895,52,3.754,53,2.444,54,2.895,55,2.895,56,2.444,57,1.746,58,1.266,59,2.286,60,2.055,61,2.286,62,2.055,63,1.487,64,2.286,65,2.444,66,2.895,67,2.895,68,2.895,69,2.895,70,2.895,71,2.286,72,4.167,73,4.167]],["title/injectables/MockContactService.html",[23,0.246,53,1.69]],["body/injectables/MockContactService.html",[1,2.508,3,0.764,4,0.764,5,0.642,7,0.902,12,2.611,13,0.431,16,0.961,17,0.063,19,2.321,22,1.145,23,0.339,24,0.642,25,1.352,26,0.902,27,0.764,29,1.272,31,2.129,34,1.018,36,0.764,37,2.321,38,0.044,39,0.044,40,0.902,41,1.412,42,2.816,43,1.06,45,1.465,46,1.465,47,1.465,53,2.321,74,2.676,75,3.566,76,1.952,77,2.321,78,2.321,79,1.742,80,2.676,81,3.566,82,3.566,83,3.566,84,3.566,85,3.566,86,2.676,87,1.742,88,1.244,89,2.676,90,2.676,91,2.676,92,2.676,93,1.742]],["title/injectables/MockTissueFtuService.html",[23,0.246,65,1.69]],["body/injectables/MockTissueFtuService.html",[3,0.496,4,0.496,5,0.417,7,0.586,13,0.28,15,1.338,17,0.064,22,1.078,23,0.249,24,0.417,25,1.273,26,0.586,27,0.496,28,1.219,29,0.496,32,1.635,34,0.496,36,0.749,38,0.032,39,0.032,40,0.586,41,1.039,43,1.039,57,1.039,58,0.586,59,1.372,62,2.256,63,0.688,64,1.372,65,1.707,76,0.951,77,2.584,78,1.707,79,1.707,87,1.131,88,0.808,93,2.29,94,0.586,95,1.131,96,2.778,97,3.134,98,1.738,99,1.738,100,1.372,101,1.738,102,1.131,103,1.436,104,1.131,105,1.372,106,1.436,107,0.951,108,2.071,109,1.372,110,1.372,111,1.738,112,1.372,113,1.372,114,1.926,115,1.273,116,1.372,117,2.071,118,2.071,119,2.071,120,2.071,121,2.071,122,2.071,123,2.071,124,2.458,125,1.972,126,2.682,127,3.134,128,1.039,129,3.134,130,1.131,131,1.436,132,1.372,133,1.372,134,1.372,135,1.372,136,2.761,137,2.071,138,2.494,139,2.071,140,1.372,141,1.372,142,3.134,143,2.071,144,2.071,145,2.071,146,2.494,147,2.071,148,1.372,149,1.372,150,1.372,151,1.372,152,1.738,153,1.738]],["title/injectables/MockTissueLibraryService.html",[23,0.246,56,1.69]],["body/injectables/MockTissueLibraryService.html",[3,0.361,4,0.361,5,0.49,7,0.427,13,0.204,15,1.284,16,0.303,17,0.063,22,0.845,23,0.194,24,0.303,25,0.868,26,0.427,27,0.584,29,0.361,34,0.584,36,0.361,38,0.025,39,0.025,40,0.427,41,0.81,43,0.501,56,1.332,57,0.81,58,0.427,60,1.903,61,0.999,76,1.41,77,1.926,78,1.332,79,0.824,87,0.824,88,0.951,93,1.677,94,0.427,100,0.999,102,0.824,108,1.616,115,0.427,125,1.197,128,1.558,131,1.779,154,0.824,155,2.336,156,1.266,157,2.046,158,1.266,159,1.266,160,1.332,161,1.616,162,1.616,163,1.616,164,1.62,165,1.266,166,1.266,167,1.266,168,1.926,169,0.999,170,2.336,171,1.12,172,2.046,173,1.266,174,2.046,175,1.266,176,2.046,177,1.266,178,0.824,179,2.576,180,1.266,181,0.824,182,1.266,183,0.999,184,3.19,185,0.999,186,0.824,187,0.999,188,1.926,189,3.106,190,2.479,191,1.616,192,2.336,193,2.744,194,2.034,195,3.606,196,3.606,197,3.606,198,3.606,199,2.034,200,1.616,201,0.999,202,0.999,203,2.336,204,1.616,205,2.565,206,2.336,207,2.336,208,1.616,209,2.336,210,0.999,211,0.999,212,1.616,213,0.999,214,1.616,215,2.034,216,1.616,217,0.999,218,0.999,219,1.616,220,1.616,221,0.999,222,0.999,223,0.999,224,1.616,225,1.616,226,0.999,227,0.999,228,0.999,229,2.336,230,0.999,231,0.999,232,0.999,233,0.999,234,1.616,235,1.616,236,1.616,237,1.616,238,2.034,239,1.616,240,0.999,241,0.999,242,1.616,243,0.999,244,0.999,245,0.999,246,2.034,247,1.616,248,1.616,249,0.999,250,2.034,251,1.616,252,0.999,253,2.034,254,1.266]],["title/injectables/TissueFtuService.html",[23,0.246,62,1.421]],["body/injectables/TissueFtuService.html",[3,0.723,4,0.723,5,0.824,7,0.854,13,0.408,16,0.824,17,0.063,22,1.114,23,0.326,24,0.607,25,1.474,26,0.854,27,1.114,28,2.255,29,0.723,32,1.597,34,0.723,36,0.981,38,0.042,39,0.042,40,0.854,41,1.361,43,1.361,45,1.387,46,1.387,47,1.387,62,1.881,63,1.544,94,1.315,96,2.713,97,3.302,103,1.387,106,2.394,107,1.387,114,1.881,115,1.158,128,1.003,130,2.723,131,1.387,181,1.649,255,1.649,256,3.437,257,4.182,258,3.437,259,2.533,260,2.533,261,2,262,2,263,1.649,264,2,265,2.237,266,2.237,267,2.533]],["title/injectables/TissueLibraryService.html",[23,0.246,60,1.421]],["body/injectables/TissueLibraryService.html",[3,0.622,4,0.622,5,0.522,7,0.734,9,1.694,13,0.351,15,0.734,16,1.118,17,0.063,22,1.027,23,0.294,24,0.522,25,1.395,26,0.734,27,1.263,28,1.999,29,1.027,30,1.97,32,1.438,36,1.027,38,0.038,39,0.038,40,0.734,41,1.225,43,0.862,57,1.425,58,1.043,60,2.145,88,1.438,94,1.043,115,1.043,125,1.012,128,1.425,131,1.97,155,3.094,160,2.551,164,1.694,171,1.694,178,1.417,186,2.014,261,1.719,262,1.719,263,2.342,265,2.014,266,2.014,268,1.417,269,2.177,270,2.943,271,2.841,272,2.443,273,1.719,274,2.551,275,1.719,276,1.719,277,1.719,278,1.719,279,1.719,280,1.719,281,1.719,282,1.719,283,1.719,284,2.443,285,1.719,286,1.719,287,1.719,288,1.719,289,1.719]],["title/dependencies.html",[290,1.731,291,2.023]],["body/dependencies.html",[17,0.061,24,0.906,38,0.054,39,0.054,291,2.882,292,3.78,293,3.78,294,3.78,295,3.78,296,4.427]],["title/miscellaneous/functions.html",[297,0.868,298,2.454]],["body/miscellaneous/functions.html",[13,0.405,15,1.7,16,1,17,0.059,34,0.977,36,1.11,38,0.042,39,0.042,45,2.284,46,2.284,47,2.284,58,0.849,63,0.997,94,1.154,95,2.531,103,1.379,104,1.639,105,1.988,106,1.379,107,1.379,109,1.988,110,1.988,112,1.988,113,1.988,114,1.379,115,0.849,116,2.703,117,1.988,118,2.703,119,2.703,120,2.703,121,2.703,122,3.294,123,2.703,124,2.228,125,1.807,126,1.639,128,0.997,154,2.531,161,2.703,162,2.703,163,1.988,164,2.284,168,1.639,169,1.988,170,2.703,171,1.874,188,2.228,190,1.639,297,0.997,298,1.988,299,2.716,300,3.423,301,3.423,302,2.518,303,1.988,304,2.518]],["title/index.html",[13,0.353,305,2.192,306,2.192]],["body/index.html",[17,0.054,38,0.054,39,0.054,71,3.478,104,2.439,307,3.747,308,3.747,309,4.404,310,3.747,311,4.404,312,4.404,313,3.747,314,3.747]],["title/modules.html",[50,2.274]],["body/modules.html",[17,0.055,38,0.055,39,0.055,49,2.54,50,2.54,315,3.902,316,3.902,317,3.902]],["title/overview.html",[318,2.758]],["body/overview.html",[0,2.061,17,0.054,38,0.054,39,0.054,40,1.269,48,2.972,136,2.875,291,2.875,318,2.972,319,4.416,320,3.764,321,3.764,322,3.764]],["title/properties.html",[14,2.023,290,1.731]],["body/properties.html",[14,2.552,17,0.059,38,0.056,39,0.056,323,3.92,324,3.92]],["title/miscellaneous/typealiases.html",[297,0.868,325,3.108]],["body/miscellaneous/typealiases.html",[13,0.529,16,1.107,17,0.05,38,0.05,39,0.05,57,1.611,58,1.107,63,1.301,94,1.371,103,2.227,115,1.107,160,2.877,255,2.648,263,3.007,268,3.007,270,3.007,271,3.489,272,3.489,273,2.594,274,2.648,297,1.301,299,3.007,326,3.285]],["title/miscellaneous/variables.html",[297,0.868,327,2.454]],["body/miscellaneous/variables.html",[5,0.284,9,1.06,13,0.19,15,0.653,16,0.807,17,0.063,30,0.648,34,0.702,38,0.024,39,0.024,57,0.767,58,0.653,63,0.767,76,1.06,88,1.143,94,0.958,95,1.601,102,1.261,106,1.06,107,0.648,114,1.347,115,1.135,124,1.601,125,1.566,126,2.779,127,2.476,128,1.126,129,2.476,130,0.77,132,1.529,133,0.934,134,1.529,135,0.934,136,2.416,137,1.529,138,1.942,139,1.529,140,0.934,141,0.934,142,2.659,143,1.529,144,1.529,145,1.529,146,1.942,147,1.529,148,0.934,149,0.934,150,0.934,151,0.934,154,1.601,164,1.06,168,0.77,171,1.06,178,0.77,181,0.77,183,0.934,184,3.196,185,0.934,186,1.601,187,0.934,188,1.851,189,3.033,190,2.416,191,1.529,192,2.245,193,2.659,194,1.942,195,3.559,196,3.559,197,3.559,198,3.559,199,1.942,200,1.529,201,0.934,202,0.934,203,2.245,204,1.529,205,2.476,206,2.245,207,2.245,208,1.529,209,2.245,210,0.934,211,0.934,212,1.529,213,0.934,214,1.529,215,1.942,216,1.529,217,0.934,218,0.934,219,1.529,220,1.529,221,0.934,222,0.934,223,0.934,224,1.529,225,1.529,226,0.934,227,0.934,228,0.934,229,2.245,230,0.934,231,0.934,232,0.934,233,0.934,234,1.529,235,1.529,236,1.529,237,1.529,238,1.942,239,1.529,240,0.934,241,0.934,242,1.529,243,0.934,244,0.934,245,0.934,246,1.942,247,1.529,248,1.529,249,0.934,250,1.942,251,1.529,252,0.934,253,1.942,255,1.261,264,1.529,265,1.851,266,1.851,268,1.851,270,2.193,274,1.261,275,0.934,276,0.934,277,0.934,278,0.934,279,0.934,280,0.934,281,0.934,282,0.934,283,0.934,284,1.942,285,0.934,286,0.934,287,0.934,288,1.529,289,0.934,297,0.469,299,2.416,303,2.93,327,0.934]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":324,"title":{},"body":{"properties.html":{}}}],["0.2",{"_index":146,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":141,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":136,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":140,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":149,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15.1.0",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":142,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":151,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":143,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":145,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":322,"title":{},"body":{"overview.html":{}}}],["_",{"_index":167,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["abstract",{"_index":28,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["acc",{"_index":174,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["accepted",{"_index":281,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["accepts",{"_index":19,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["acinus",{"_index":236,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["acinus.svg",{"_index":237,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":326,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alveolus",{"_index":217,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["alveolus.svg",{"_index":218,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{}}}],["argument",{"_index":35,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["ascending",{"_index":203,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":316,"title":{},"body":{"modules.html":{}}}],["base",{"_index":183,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base_id",{"_index":184,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["bid",{"_index":119,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["biomarker",{"_index":129,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker1",{"_index":139,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker2",{"_index":147,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker3",{"_index":148,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["blabel",{"_index":120,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["bronchial",{"_index":219,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":317,"title":{},"body":{"modules.html":{}}}],["cell",{"_index":127,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["childlabel",{"_index":175,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["childnodes",{"_index":172,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["children",{"_index":171,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["children.reduce",{"_index":173,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["childurl",{"_index":176,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["cid",{"_index":117,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["clabel",{"_index":118,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["class",{"_index":29,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["collecting",{"_index":205,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["collectiong",{"_index":213,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["console",{"_index":84,"title":{},"body":{"injectables/MockContactService.html":{}}}],["console.log('message",{"_index":89,"title":{},"body":{"injectables/MockContactService.html":{}}}],["const",{"_index":131,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["contact",{"_index":8,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":86,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contact/contact.mock",{"_index":54,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contact/contact.service",{"_index":55,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contactmessage",{"_index":1,"title":{"interfaces/ContactMessage.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["contactservice",{"_index":31,"title":{"injectables/ContactService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["contactservice:11",{"_index":80,"title":{},"body":{"injectables/MockContactService.html":{}}}],["content",{"_index":91,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contents",{"_index":83,"title":{},"body":{"injectables/MockContactService.html":{}}}],["corpuscle",{"_index":201,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["corpuscle.svg",{"_index":202,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["cortical",{"_index":204,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":121,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["create",{"_index":161,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["createcell",{"_index":116,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["createcell('cell1",{"_index":138,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell2",{"_index":144,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell(cid",{"_index":302,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid",{"_index":158,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["createlinkid('ftu",{"_index":180,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["createnodeid",{"_index":300,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnodeid(label",{"_index":163,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":113,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["crypt",{"_index":225,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":81,"title":{},"body":{"injectables/MockContactService.html":{}}}],["data",{"_index":115,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":303,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":43,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["definenode",{"_index":188,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["definenode('large",{"_index":223,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('liver",{"_index":245,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('prostate",{"_index":249,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('thymus",{"_index":252,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode(childlabel",{"_index":177,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["definenode(label",{"_index":169,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["defines",{"_index":9,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":291,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dermal",{"_index":239,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["descending",{"_index":191,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["duct",{"_index":206,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["duct.svg",{"_index":207,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":10,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["empty",{"_index":85,"title":{},"body":{"injectables/MockContactService.html":{}}}],["ensures",{"_index":276,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["entered",{"_index":20,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["entries",{"_index":137,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["epidermal",{"_index":242,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["execute",{"_index":314,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["extends",{"_index":78,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["fetch",{"_index":257,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu",{"_index":198,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu.mock",{"_index":66,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["ftu.mock.ts",{"_index":95,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ftu.service",{"_index":64,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["ftu.service.ts",{"_index":255,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu.service.ts:19",{"_index":260,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu.service.ts:22",{"_index":259,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu/2d",{"_index":197,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu/tissue",{"_index":63,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":108,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["functions",{"_index":298,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":166,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["generated",{"_index":308,"title":{},"body":{"index.html":{}}}],["getcellsummaries",{"_index":96,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["getcellsummaries(id",{"_index":258,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["getreferenceorgans",{"_index":97,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["getting",{"_index":305,"title":{"index.html":{}},"body":{}}],["gettissues",{"_index":155,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["gland",{"_index":221,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["gland.svg",{"_index":222,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["glandular",{"_index":251,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":315,"title":{},"body":{"modules.html":{}}}],["helper",{"_index":112,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["henle",{"_index":194,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["henle.svg",{"_index":199,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["hra",{"_index":100,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["hraservicemodule",{"_index":49,"title":{"modules/HraServiceModule.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["https://example.com",{"_index":185,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":195,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":128,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["implementation",{"_index":77,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infered",{"_index":271,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inherited",{"_index":79,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["injectable",{"_index":23,"title":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["injectables",{"_index":40,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"overview.html":{}}}],["inner",{"_index":208,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["intercalated",{"_index":234,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ContactMessage.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"overview.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ContactMessage.html":{}}}],["intestine",{"_index":224,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri",{"_index":270,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iri.array",{"_index":287,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri.or(z.literal",{"_index":285,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["islates",{"_index":230,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["islets",{"_index":232,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["isreferenceorgan",{"_index":301,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isreferenceorgan(obj",{"_index":109,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":273,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["json.stringify(message",{"_index":92,"title":{},"body":{"injectables/MockContactService.html":{}}}],["kidney",{"_index":189,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":125,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["langerhans",{"_index":231,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["langerhans.svg",{"_index":233,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":227,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":307,"title":{},"body":{"index.html":{}}}],["library.mock",{"_index":59,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["library.mock.ts",{"_index":154,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["library.service",{"_index":61,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["library.service.ts",{"_index":268,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["library.service.ts:50",{"_index":269,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library/tissue",{"_index":58,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn",{"_index":226,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn.svg",{"_index":228,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":179,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["liver",{"_index":246,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lobule",{"_index":247,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lobule.svg",{"_index":248,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":82,"title":{},"body":{"injectables/MockContactService.html":{}}}],["loop",{"_index":193,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lung",{"_index":215,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["marked",{"_index":280,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":39,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medullary",{"_index":209,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":12,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["metadata",{"_index":124,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":32,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["methods",{"_index":41,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["miscellaneous",{"_index":297,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":76,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_reference_organs",{"_index":132,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_summaries",{"_index":134,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data",{"_index":102,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mockcontactservice",{"_index":53,"title":{"injectables/MockContactService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["mocktissueftuservice",{"_index":65,"title":{"injectables/MockTissueFtuService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{}}}],["mocktissuelibraryservice",{"_index":56,"title":{"injectables/MockTissueLibraryService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["module",{"_index":48,"title":{"modules/HraServiceModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":50,"title":{"modules.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["name",{"_index":46,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["nephron",{"_index":210,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nephron.svg",{"_index":211,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":162,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ngmodule",{"_index":52,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["node",{"_index":168,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":186,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":122,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["nx",{"_index":309,"title":{},"body":{"index.html":{}}}],["obj",{"_index":110,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["obj['object']['file",{"_index":111,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["object",{"_index":34,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":187,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(childnodes",{"_index":182,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["object.values(mock_tissue_data.nodes).filter(isreferenceorgan",{"_index":133,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":25,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["of(mock_reference_organs",{"_index":152,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_summaries",{"_index":153,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_tissue_data",{"_index":254,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["optional",{"_index":47,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["organ",{"_index":107,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":130,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":321,"title":{},"body":{"overview.html":{}}}],["outer",{"_index":212,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":318,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":290,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pancreas",{"_index":229,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["pancreatic",{"_index":235,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla",{"_index":240,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla.svg",{"_index":241,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":45,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":164,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parent}${label.replace",{"_index":165,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["peer",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":123,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ContactMessage.html":{},"properties.html":{}}}],["prostate",{"_index":250,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":72,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["providedin",{"_index":87,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["pulmonary",{"_index":216,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["real",{"_index":70,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["received",{"_index":90,"title":{},"body":{"injectables/MockContactService.html":{}}}],["reference",{"_index":106,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":264,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["referenceorgan",{"_index":103,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["releases/v1.3/2d",{"_index":196,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["renal",{"_index":200,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["replace",{"_index":69,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["representation_of",{"_index":181,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["representing",{"_index":30,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":75,"title":{},"body":{"injectables/MockContactService.html":{}}}],["reset",{"_index":320,"title":{},"body":{"overview.html":{}}}],["results",{"_index":38,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":93,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["returns",{"_index":36,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ridge",{"_index":243,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ridge.svg",{"_index":244,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":88,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":313,"title":{},"body":{"index.html":{}}}],["running",{"_index":310,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":26,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["schema",{"_index":274,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sendmessage",{"_index":42,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["sendmessage(message",{"_index":37,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["service",{"_index":256,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["services",{"_index":71,"title":{},"body":{"modules/HraServiceModule.html":{},"index.html":{}}}],["skin",{"_index":238,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["specifically",{"_index":279,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":299,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.mock.ts",{"_index":74,"title":{},"body":{"injectables/MockContactService.html":{}}}],["src/lib/contact/contact.service.ts",{"_index":6,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["src/lib/contact/contact.service.ts:18",{"_index":44,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/lib/service.module.ts",{"_index":51,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["src/lib/tissue",{"_index":94,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":306,"title":{"index.html":{}},"body":{}}],["string",{"_index":15,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":11,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["submucosal",{"_index":220,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":114,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary1",{"_index":135,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summary2",{"_index":150,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["synonmynlabels",{"_index":283,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["synonymlabels",{"_index":178,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["takes",{"_index":33,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["test",{"_index":104,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["tests",{"_index":312,"title":{},"body":{"index.html":{}}}],["thick",{"_index":214,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":192,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thymus",{"_index":253,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue",{"_index":57,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tissue_data_schema",{"_index":288,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue_item_schema",{"_index":284,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissuedata",{"_index":160,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissueftuservice",{"_index":62,"title":{"injectables/TissueFtuService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["tissueftuservice:69",{"_index":99,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissueftuservice:74",{"_index":98,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissueitem",{"_index":272,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryservice",{"_index":60,"title":{"injectables/TissueLibraryService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["tissuelibraryservice.gettissues",{"_index":157,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["tissuelibraryservice:143",{"_index":156,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["todo",{"_index":68,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["tslib",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":325,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui/cdk/state",{"_index":159,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["ui/utils/types",{"_index":101,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["undefined",{"_index":190,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":311,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":267,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["url",{"_index":170,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["urls",{"_index":278,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["useexisting",{"_index":73,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["user",{"_index":21,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["valid",{"_index":277,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":275,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":126,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":18,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["variables",{"_index":327,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":323,"title":{},"body":{"properties.html":{}}}],["whether",{"_index":105,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["yes",{"_index":304,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":261,"title":{},"body":{"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["z.infer",{"_index":263,"title":{},"body":{"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["z.object",{"_index":265,"title":{},"body":{"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.record(iri",{"_index":289,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string",{"_index":266,"title":{},"body":{"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":286,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string().url().brand('iri",{"_index":282,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":262,"title":{},"body":{"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["zoom",{"_index":319,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ContactMessage.html":{"url":"interfaces/ContactMessage.html","title":"interface - ContactMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A interface contact which defines email, subject, and the message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable email which accepts the email entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable message which accepts the message entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable subject which accepts the subject entered by user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a ContactService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/contact/contact.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes a ContactMessage object as an argument and returns an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraServiceModule.html":{"url":"modules/HraServiceModule.html","title":"module - HraServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    HraServiceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/service.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MockContactService } from './contact/contact.mock';\nimport { ContactService } from './contact/contact.service';\nimport { MockTissueLibraryService } from './tissue-library/tissue-library.mock';\nimport { TissueLibraryService } from './tissue-library/tissue-library.service';\nimport { TissueFtuService } from './tissue-ftu/tissue-ftu.service';\nimport { MockTissueFtuService } from './tissue-ftu/tissue-ftu.mock';\n\n@NgModule({\n  providers: [\n    // TODO replace with real services\n    {\n      provide: ContactService,\n      useExisting: MockContactService,\n    },\n    {\n      provide: TissueLibraryService,\n      useExisting: MockTissueLibraryService,\n    },\n    {\n      provide: TissueFtuService,\n      useExisting: MockTissueFtuService,\n    },\n  ],\n})\nexport class HraServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockContactService.html":{"url":"injectables/MockContactService.html","title":"injectable - MockContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents mock implementation of the ContactService class.\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    It accepts an object of type ContactMessage and currently logs the message contents on the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { ContactMessage, ContactService } from './contact.service';\n\n/** This class represents mock implementation of the ContactService class. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockContactService extends ContactService {\n  /** It accepts an object of type ContactMessage and currently logs the message contents on the console. */\n  sendMessage(message: ContactMessage): Observable {\n    console.log('Message received. Content: ' + JSON.stringify(message));\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueFtuService.html":{"url":"injectables/MockTissueFtuService.html","title":"injectable - MockTissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of TissueFtuService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueFtuService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCellSummaries\n                            \n                            \n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \ngetCellSummaries()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:74\n\n                \n            \n\n\n            \n                \n                    Implementation of abstract method\n\n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:69\n\n                \n            \n\n\n            \n                \n                    Implementation of getReferenceOrgans method\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Any } from '@hra-ui/utils/types';\nimport { Observable, of } from 'rxjs';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport { ReferenceOrgan, TissueFtuService } from './tissue-ftu.service';\n\n/** Test whether an object is a reference organ */\nfunction isReferenceOrgan(obj: Any): obj is ReferenceOrgan {\n  return !!obj['object']['file'];\n}\n\n/** Helper for creating summary data */\nfunction createCell(\n  cid: string,\n  clabel: string,\n  bid: string,\n  blabel: string,\n  count: number,\n  percentage: number,\n  metadata: { label: string; value: string }[][] = []\n) {\n  return {\n    cell: {\n      id: cid,\n      label: clabel,\n    },\n    biomarker: {\n      id: bid,\n      label: blabel,\n    },\n    count,\n    percentage,\n    metadata,\n  };\n}\n\n/** Reference organs */\nconst MOCK_REFERENCE_ORGANS = Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan);\n\n/** Mock summary data */\nconst MOCK_SUMMARIES = {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 0.5, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1)],\n  },\n};\n\n/** Implementation of TissueFtuService */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueFtuService extends TissueFtuService {\n  /** Implementation of getReferenceOrgans method */\n  getReferenceOrgans(): Observable {\n    return of(MOCK_REFERENCE_ORGANS);\n  }\n\n  /** Implementation of abstract method */\n  getCellSummaries(): Observable {\n    return of(MOCK_SUMMARIES);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueLibraryService.html":{"url":"injectables/MockTissueLibraryService.html","title":"injectable - MockTissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock implementation of TissueLibraryService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueLibraryService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTissues\n                        \n                    \n                \n            \n            \n                \ngetTissues()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueLibraryService\n\n                \n            \n            \n                \n                        Defined in         TissueLibraryService:143\n\n                \n            \n\n\n            \n                \n                    Implementation of TissueLibraryService.getTissues\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueData, TissueLibraryService } from './tissue-library.service';\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(label: string, parent: string, url?: string, ...children: [label: string, url: string][]): object {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://example.com/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ),\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissues} */\n  getTissues(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueFtuService.html":{"url":"injectables/TissueFtuService.html","title":"injectable - TissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract Service to fetch reference organs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(id)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:22\n                \n            \n\n\n            \n                \n                    Get summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:19\n                \n            \n\n\n            \n                \n                    abstract Method to fetch reference organs\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\nexport type ReferenceOrgan = z.infer;\n\n/** Reference organ type */\nexport const REFERENCE_ORGAN = z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n});\n\n/** Abstract Service to fetch reference organs */\n@Injectable()\nexport abstract class TissueFtuService {\n  /** abstract Method to fetch reference organs */\n  abstract getReferenceOrgans(): Observable;\n\n  /** Get summary data */\n  abstract getCellSummaries(id: unknown): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryService.html":{"url":"injectables/TissueLibraryService.html","title":"injectable - TissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a TissueLibraryService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getTissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.service.ts:50\n                \n            \n\n\n            \n                \n                    This method returns an Observable of the type of TissueData\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\n/**\n * A type of Iri which is infered from the IRI\n */\nexport type Iri = z.infer;\n\n/**\n * A type of TissueItem which is infered from the Tissue Item Schema\n */\nexport type TissueItem = z.infer;\n\n/**\n * A type of TissueData which is infered from the Tissue Data Schema\n */\nexport type TissueData = z.infer;\n\n/**\n * A validator that ensures string representing valid URLS, specifically marked as IRI are accepted\n */\nexport const IRI = z.string().url().brand('IRI');\n\n/**\n * Tissue data schema which defines the type, id, parent, synonmynLabels and children\n */\nexport const TISSUE_ITEM_SCHEMA = z.object({\n  '@type': z.string(),\n  '@id': IRI,\n  id: IRI,\n  parent: IRI.or(z.literal('')),\n  label: z.string(),\n  synonymLabels: z.string().array(),\n  children: IRI.array(),\n});\n\n/**\n * A Schema which defines the root and its nodes\n */\nexport const TISSUE_DATA_SCHEMA = z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE_ITEM_SCHEMA),\n});\n\n/** An abstract class representing a TissueLibraryService*/\n@Injectable()\nexport abstract class TissueLibraryService {\n  /** This method returns an Observable of the type of TissueData */\n  abstract getTissues(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createCell   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            createNodeId   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            defineNode   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            isReferenceOrgan   (src/.../tissue-ftu.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCell\n                        \n                    \n                \n            \n            \n                \ncreateCell(cid: string, clabel: string, bid: string, blabel: string, count: number, percentage: number, metadata)\n                \n            \n\n\n\n\n            \n                \n                    Helper for creating summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    cid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    clabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    blabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    metadata\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReferenceOrgan\n                        \n                    \n                \n            \n            \n                \nisReferenceOrgan(obj: Any)\n                \n            \n\n\n\n\n            \n                \n                    Test whether an object is a reference organ\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                Any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReferenceOrgan\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createNodeId\n                        \n                    \n                \n            \n            \n                \ncreateNodeId(label: string, parent: string)\n                \n            \n\n\n\n\n            \n                \n                    Create a new id from a label\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defineNode\n                        \n                    \n                \n            \n            \n                \ndefineNode(label: string, parent: string, url?: string, ...children: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Create a new node\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    children\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nservices\nThis library was generated with Nx.\nRunning unit tests\nRun nx test services to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraServiceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Iri   (src/.../tissue-library.service.ts)\n                        \n                        \n                            ReferenceOrgan   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            TissueData   (src/.../tissue-library.service.ts)\n                        \n                        \n                            TissueItem   (src/.../tissue-library.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.service.ts\n    \n    \n        \n            \n                \n                    \n                    Iri\n                \n            \n            \n                \n                    A type of Iri which is infered from the IRI\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueData\n                \n            \n            \n                \n                    A type of TissueData which is infered from the Tissue Data Schema\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueItem\n                \n            \n            \n                \n                    A type of TissueItem which is infered from the Tissue Item Schema\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReferenceOrgan\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ID   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            IRI   (src/.../tissue-library.service.ts)\n                        \n                        \n                            MOCK_REFERENCE_ORGANS   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_SUMMARIES   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_TISSUE_DATA   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            REFERENCE_ORGAN   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            TISSUE_DATA_SCHEMA   (src/.../tissue-library.service.ts)\n                        \n                        \n                            TISSUE_ITEM_SCHEMA   (src/.../tissue-library.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://example.com/'\n                    \n                \n\n            \n                \n                    Base node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_TISSUE_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  root: BASE_ID,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ),\n}\n                    \n                \n\n            \n                \n                    Mock tissue data\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-library/tissue-library.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.string().url().brand('IRI')\n                    \n                \n\n            \n                \n                    A validator that ensures string representing valid URLS, specifically marked as IRI are accepted\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_DATA_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE_ITEM_SCHEMA),\n})\n                    \n                \n\n            \n                \n                    A Schema which defines the root and its nodes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_ITEM_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@type': z.string(),\n  '@id': IRI,\n  id: IRI,\n  parent: IRI.or(z.literal('')),\n  label: z.string(),\n  synonymLabels: z.string().array(),\n  children: IRI.array(),\n})\n                    \n                \n\n            \n                \n                    Tissue data schema which defines the type, id, parent, synonmynLabels and children\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MOCK_REFERENCE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan)\n                    \n                \n\n            \n                \n                    Reference organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_SUMMARIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 0.5, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1)],\n  },\n}\n                    \n                \n\n            \n                \n                    Mock summary data\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFERENCE_ORGAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n})\n                    \n                \n\n            \n                \n                    Reference organ type\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
